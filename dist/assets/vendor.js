window.EmberENV = {"FEATURES":{},"EXTEND_PROTOTYPES":{"Date":false}};
var runningTests = false;



;var loader, define, requireModule, require, requirejs;

(function (global) {
  'use strict';

  function dict() {
    var obj = Object.create(null);
    obj['__'] = undefined;
    delete obj['__'];
    return obj;
  }

  // Save off the original values of these globals, so we can restore them if someone asks us to
  var oldGlobals = {
    loader: loader,
    define: define,
    requireModule: requireModule,
    require: require,
    requirejs: requirejs
  };

  requirejs = require = requireModule = function (id) {
    var pending = [];
    var mod = findModule(id, '(require)', pending);

    for (var i = pending.length - 1; i >= 0; i--) {
      pending[i].exports();
    }

    return mod.module.exports;
  };

  loader = {
    noConflict: function (aliases) {
      var oldName, newName;

      for (oldName in aliases) {
        if (aliases.hasOwnProperty(oldName)) {
          if (oldGlobals.hasOwnProperty(oldName)) {
            newName = aliases[oldName];

            global[newName] = global[oldName];
            global[oldName] = oldGlobals[oldName];
          }
        }
      }
    },
    // Option to enable or disable the generation of default exports
    makeDefaultExport: true
  };

  var registry = dict();
  var seen = dict();

  var uuid = 0;

  function unsupportedModule(length) {
    throw new Error('an unsupported module was defined, expected `define(id, deps, module)` instead got: `' + length + '` arguments to define`');
  }

  var defaultDeps = ['require', 'exports', 'module'];

  function Module(id, deps, callback, alias) {
    this.uuid = uuid++;
    this.id = id;
    this.deps = !deps.length && callback.length ? defaultDeps : deps;
    this.module = { exports: {} };
    this.callback = callback;
    this.hasExportsAsDep = false;
    this.isAlias = alias;
    this.reified = new Array(deps.length);

    /*
       Each module normally passes through these states, in order:
         new       : initial state
         pending   : this module is scheduled to be executed
         reifying  : this module's dependencies are being executed
         reified   : this module's dependencies finished executing successfully
         errored   : this module's dependencies failed to execute
         finalized : this module executed successfully
     */
    this.state = 'new';
  }

  Module.prototype.makeDefaultExport = function () {
    var exports = this.module.exports;
    if (exports !== null && (typeof exports === 'object' || typeof exports === 'function') && exports['default'] === undefined && Object.isExtensible(exports)) {
      exports['default'] = exports;
    }
  };

  Module.prototype.exports = function () {
    // if finalized, there is no work to do. If reifying, there is a
    // circular dependency so we must return our (partial) exports.
    if (this.state === 'finalized' || this.state === 'reifying') {
      return this.module.exports;
    }


    if (loader.wrapModules) {
      this.callback = loader.wrapModules(this.id, this.callback);
    }

    this.reify();

    var result = this.callback.apply(this, this.reified);
    this.reified.length = 0;
    this.state = 'finalized';

    if (!(this.hasExportsAsDep && result === undefined)) {
      this.module.exports = result;
    }
    if (loader.makeDefaultExport) {
      this.makeDefaultExport();
    }
    return this.module.exports;
  };

  Module.prototype.unsee = function () {
    this.state = 'new';
    this.module = { exports: {} };
  };

  Module.prototype.reify = function () {
    if (this.state === 'reified') {
      return;
    }
    this.state = 'reifying';
    try {
      this.reified = this._reify();
      this.state = 'reified';
    } finally {
      if (this.state === 'reifying') {
        this.state = 'errored';
      }
    }
  };

  Module.prototype._reify = function () {
    var reified = this.reified.slice();
    for (var i = 0; i < reified.length; i++) {
      var mod = reified[i];
      reified[i] = mod.exports ? mod.exports : mod.module.exports();
    }
    return reified;
  };

  Module.prototype.findDeps = function (pending) {
    if (this.state !== 'new') {
      return;
    }

    this.state = 'pending';

    var deps = this.deps;

    for (var i = 0; i < deps.length; i++) {
      var dep = deps[i];
      var entry = this.reified[i] = { exports: undefined, module: undefined };
      if (dep === 'exports') {
        this.hasExportsAsDep = true;
        entry.exports = this.module.exports;
      } else if (dep === 'require') {
        entry.exports = this.makeRequire();
      } else if (dep === 'module') {
        entry.exports = this.module;
      } else {
        entry.module = findModule(resolve(dep, this.id), this.id, pending);
      }
    }
  };

  Module.prototype.makeRequire = function () {
    var id = this.id;
    var r = function (dep) {
      return require(resolve(dep, id));
    };
    r['default'] = r;
    r.moduleId = id;
    r.has = function (dep) {
      return has(resolve(dep, id));
    };
    return r;
  };

  define = function (id, deps, callback) {
    var module = registry[id];

    // If a module for this id has already been defined and is in any state
    // other than `new` (meaning it has been or is currently being required),
    // then we return early to avoid redefinition.
    if (module && module.state !== 'new') {
      return;
    }

    if (arguments.length < 2) {
      unsupportedModule(arguments.length);
    }

    if (!Array.isArray(deps)) {
      callback = deps;
      deps = [];
    }

    if (callback instanceof Alias) {
      registry[id] = new Module(callback.id, deps, callback, true);
    } else {
      registry[id] = new Module(id, deps, callback, false);
    }
  };

  define.exports = function (name, defaultExport) {
    var module = registry[name];

    // If a module for this name has already been defined and is in any state
    // other than `new` (meaning it has been or is currently being required),
    // then we return early to avoid redefinition.
    if (module && module.state !== 'new') {
      return;
    }

    module = new Module(name, [], noop, null);
    module.module.exports = defaultExport;
    module.state = 'finalized';
    registry[name] = module;

    return module;
  };

  function noop() {}
  // we don't support all of AMD
  // define.amd = {};

  function Alias(id) {
    this.id = id;
  }

  define.alias = function (id, target) {
    if (arguments.length === 2) {
      return define(target, new Alias(id));
    }

    return new Alias(id);
  };

  function missingModule(id, referrer) {
    throw new Error('Could not find module `' + id + '` imported from `' + referrer + '`');
  }

  function findModule(id, referrer, pending) {
    var mod = registry[id] || registry[id + '/index'];

    while (mod && mod.isAlias) {
      mod = registry[mod.id];
    }

    if (!mod) {
      missingModule(id, referrer);
    }

    if (pending && mod.state !== 'pending' && mod.state !== 'finalized') {
      mod.findDeps(pending);
      pending.push(mod);
    }
    return mod;
  }

  function resolve(child, id) {
    if (child.charAt(0) !== '.') {
      return child;
    }


    var parts = child.split('/');
    var nameParts = id.split('/');
    var parentBase = nameParts.slice(0, -1);

    for (var i = 0, l = parts.length; i < l; i++) {
      var part = parts[i];

      if (part === '..') {
        if (parentBase.length === 0) {
          throw new Error('Cannot access parent module of root');
        }
        parentBase.pop();
      } else if (part === '.') {
        continue;
      } else {
        parentBase.push(part);
      }
    }

    return parentBase.join('/');
  }

  function has(id) {
    return !!(registry[id] || registry[id + '/index']);
  }

  requirejs.entries = requirejs._eak_seen = registry;
  requirejs.has = has;
  requirejs.unsee = function (id) {
    findModule(id, '(unsee)', false).unsee();
  };

  requirejs.clear = function () {
    requirejs.entries = requirejs._eak_seen = registry = dict();
    seen = dict();
  };

  // This code primes the JS engine for good performance by warming the
  // JIT compiler for these functions.
  define('foo', function () {});
  define('foo/bar', [], function () {});
  define('foo/asdf', ['module', 'exports', 'require'], function (module, exports, require) {
    if (require.has('foo/bar')) {
      require('foo/bar');
    }
  });
  define('foo/baz', [], define.alias('foo'));
  define('foo/quz', define.alias('foo'));
  define.alias('foo', 'foo/qux');
  define('foo/bar', ['foo', './quz', './baz', './asdf', './bar', '../foo'], function () {});
  define('foo/main', ['foo/bar'], function () {});
  define.exports('foo/exports', {});

  require('foo/exports');
  require('foo/main');
  require.unsee('foo/bar');

  requirejs.clear();

  if (typeof exports === 'object' && typeof module === 'object' && module.exports) {
    module.exports = { require: require, define: define };
  }
})(this);
;self.EmberENV.EXTEND_PROTOTYPES = false;

;/*!
 * jQuery JavaScript Library v3.2.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2017-03-20T18:59Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.2.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }

        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }

        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( ">tbody", elem )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with computed style
	var valueIsBorderBox,
		styles = getStyles( elem ),
		val = curCSS( elem, name, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Computed unit is not pixels. Stop here and return.
	if ( rnumnonpx.test( val ) ) {
		return val;
	}

	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = isBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ name ] );

	// Fall back to offsetWidth/Height when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	if ( val === "auto" ) {
		val = elem[ "offset" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];
	}

	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var doc, docElem, rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		doc = elem.ownerDocument;
		docElem = doc.documentElement;
		win = doc.defaultView;

		return {
			top: rect.top + win.pageYOffset - docElem.clientTop,
			left: rect.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( jQuery.isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

;(function() {
/*!
 * @overview  Ember - JavaScript Application Framework
 * @copyright Copyright 2011-2017 Tilde Inc. and contributors
 *            Portions Copyright 2006-2011 Strobe Inc.
 *            Portions Copyright 2008-2011 Apple Inc. All rights reserved.
 * @license   Licensed under MIT license
 *            See https://raw.github.com/emberjs/ember.js/master/LICENSE
 * @version   2.16.1
 */

var enifed, requireModule, Ember;
var mainContext = this; // Used in ember-environment/lib/global.js

(function() {
  var isNode = typeof window === 'undefined' &&
    typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

  if (!isNode) {
    Ember = this.Ember = this.Ember || {};
  }

  if (typeof Ember === 'undefined') { Ember = {}; }

  if (typeof Ember.__loader === 'undefined') {
    var registry = {};
    var seen = {};

    enifed = function(name, deps, callback) {
      var value = { };

      if (!callback) {
        value.deps = [];
        value.callback = deps;
      } else {
        value.deps = deps;
        value.callback = callback;
      }

      registry[name] = value;
    };

    requireModule = function(name) {
      return internalRequire(name, null);
    };

    // setup `require` module
    requireModule['default'] = requireModule;

    requireModule.has = function registryHas(moduleName) {
      return !!registry[moduleName] || !!registry[moduleName + '/index'];
    };

    function missingModule(name, referrerName) {
      if (referrerName) {
        throw new Error('Could not find module ' + name + ' required by: ' + referrerName);
      } else {
        throw new Error('Could not find module ' + name);
      }
    }

    function internalRequire(_name, referrerName) {
      var name = _name;
      var mod = registry[name];

      if (!mod) {
        name = name + '/index';
        mod = registry[name];
      }

      var exports = seen[name];

      if (exports !== undefined) {
        return exports;
      }

      exports = seen[name] = {};

      if (!mod) {
        missingModule(_name, referrerName);
      }

      var deps = mod.deps;
      var callback = mod.callback;
      var reified = new Array(deps.length);

      for (var i = 0; i < deps.length; i++) {
        if (deps[i] === 'exports') {
          reified[i] = exports;
        } else if (deps[i] === 'require') {
          reified[i] = requireModule;
        } else {
          reified[i] = internalRequire(deps[i], name);
        }
      }

      callback.apply(this, reified);

      return exports;
    }

    requireModule._eak_seen = registry;

    Ember.__loader = {
      define: enifed,
      require: requireModule,
      registry: registry
    };
  } else {
    enifed = Ember.__loader.define;
    requireModule = Ember.__loader.require;
  }
})();

enifed("@glimmer/node", ["exports", "@glimmer/runtime"], function (exports, _runtime) {
    "use strict";

    exports.NodeDOMTreeConstruction = undefined;


    function _defaults(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);
    }

    var NodeDOMTreeConstruction = function (_DOMTreeConstruction) {
        _inherits(NodeDOMTreeConstruction, _DOMTreeConstruction);

        function NodeDOMTreeConstruction(doc) {
            _classCallCheck(this, NodeDOMTreeConstruction);

            return _possibleConstructorReturn(this, _DOMTreeConstruction.call(this, doc));
        }
        // override to prevent usage of `this.document` until after the constructor


        NodeDOMTreeConstruction.prototype.setupUselessElement = function setupUselessElement() {};

        NodeDOMTreeConstruction.prototype.insertHTMLBefore = function insertHTMLBefore(parent, reference, html) {
            var prev = reference ? reference.previousSibling : parent.lastChild;
            var raw = this.document.createRawHTMLSection(html);
            parent.insertBefore(raw, reference);
            var first = prev ? prev.nextSibling : parent.firstChild;
            var last = reference ? reference.previousSibling : parent.lastChild;
            return new _runtime.ConcreteBounds(parent, first, last);
        };
        // override to avoid SVG detection/work when in node (this is not needed in SSR)


        NodeDOMTreeConstruction.prototype.createElement = function createElement(tag) {
            return this.document.createElement(tag);
        };
        // override to avoid namespace shenanigans when in node (this is not needed in SSR)


        NodeDOMTreeConstruction.prototype.setAttribute = function setAttribute(element, name, value) {
            element.setAttribute(name, value);
        };

        return NodeDOMTreeConstruction;
    }(_runtime.DOMTreeConstruction);

    exports.NodeDOMTreeConstruction = NodeDOMTreeConstruction;
});
enifed("@glimmer/reference", ["exports", "@glimmer/util"], function (exports, _util) {
    "use strict";

    exports.isModified = exports.ReferenceCache = exports.map = exports.CachedReference = exports.UpdatableTag = exports.CachedTag = exports.combine = exports.combineSlice = exports.combineTagged = exports.DirtyableTag = exports.CURRENT_TAG = exports.VOLATILE_TAG = exports.CONSTANT_TAG = exports.TagWrapper = exports.RevisionTag = exports.VOLATILE = exports.INITIAL = exports.CONSTANT = exports.IteratorSynchronizer = exports.ReferenceIterator = exports.IterationArtifacts = exports.referenceFromParts = exports.ListItem = exports.isConst = exports.ConstReference = undefined;


    function _defaults(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);
    }

    function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var CONSTANT = 0;
    var INITIAL = 1;
    var VOLATILE = NaN;
    var RevisionTag = function () {
        function RevisionTag() {
            _classCallCheck$1(this, RevisionTag);
        }

        RevisionTag.prototype.validate = function validate(snapshot) {
            return this.value() === snapshot;
        };

        return RevisionTag;
    }();
    RevisionTag.id = 0;
    var VALUE = [];
    var VALIDATE = [];
    var TagWrapper = function () {
        function TagWrapper(type, inner) {
            _classCallCheck$1(this, TagWrapper);

            this.type = type;
            this.inner = inner;
        }

        TagWrapper.prototype.value = function value() {
            var func = VALUE[this.type];
            return func(this.inner);
        };

        TagWrapper.prototype.validate = function validate(snapshot) {
            var func = VALIDATE[this.type];
            return func(this.inner, snapshot);
        };

        return TagWrapper;
    }();
    function register(Type) {
        var type = VALUE.length;
        VALUE.push(function (tag) {
            return tag.value();
        });
        VALIDATE.push(function (tag, snapshot) {
            return tag.validate(snapshot);
        });
        Type.id = type;
    }
    ///
    // CONSTANT: 0
    VALUE.push(function () {
        return CONSTANT;
    });
    VALIDATE.push(function (_tag, snapshot) {
        return snapshot === CONSTANT;
    });
    var CONSTANT_TAG = new TagWrapper(0, null);
    // VOLATILE: 1
    VALUE.push(function () {
        return VOLATILE;
    });
    VALIDATE.push(function (_tag, snapshot) {
        return snapshot === VOLATILE;
    });
    var VOLATILE_TAG = new TagWrapper(1, null);
    // CURRENT: 2
    VALUE.push(function () {
        return $REVISION;
    });
    VALIDATE.push(function (_tag, snapshot) {
        return snapshot === $REVISION;
    });
    var CURRENT_TAG = new TagWrapper(2, null);
    ///
    var $REVISION = INITIAL;
    var DirtyableTag = function (_RevisionTag) {
        _inherits(DirtyableTag, _RevisionTag);

        DirtyableTag.create = function create() {
            var revision = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $REVISION;

            return new TagWrapper(this.id, new DirtyableTag(revision));
        };

        function DirtyableTag() {
            var revision = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $REVISION;

            _classCallCheck$1(this, DirtyableTag);

            var _this = _possibleConstructorReturn(this, _RevisionTag.call(this));

            _this.revision = revision;
            return _this;
        }

        DirtyableTag.prototype.value = function value() {
            return this.revision;
        };

        DirtyableTag.prototype.dirty = function dirty() {
            this.revision = ++$REVISION;
        };

        return DirtyableTag;
    }(RevisionTag);
    register(DirtyableTag);
    function combineTagged(tagged) {
        var optimized = [];
        for (var i = 0, l = tagged.length; i < l; i++) {
            var tag = tagged[i].tag;
            if (tag === VOLATILE_TAG) return VOLATILE_TAG;
            if (tag === CONSTANT_TAG) continue;
            optimized.push(tag);
        }
        return _combine(optimized);
    }
    function combineSlice(slice) {
        var optimized = [];
        var node = slice.head();
        while (node !== null) {
            var tag = node.tag;
            if (tag === VOLATILE_TAG) return VOLATILE_TAG;
            if (tag !== CONSTANT_TAG) optimized.push(tag);
            node = slice.nextNode(node);
        }
        return _combine(optimized);
    }
    function combine(tags) {
        var optimized = [];
        for (var i = 0, l = tags.length; i < l; i++) {
            var tag = tags[i];
            if (tag === VOLATILE_TAG) return VOLATILE_TAG;
            if (tag === CONSTANT_TAG) continue;
            optimized.push(tag);
        }
        return _combine(optimized);
    }
    function _combine(tags) {
        switch (tags.length) {
            case 0:
                return CONSTANT_TAG;
            case 1:
                return tags[0];
            case 2:
                return TagsPair.create(tags[0], tags[1]);
            default:
                return TagsCombinator.create(tags);
        }
    }
    var CachedTag = function (_RevisionTag2) {
        _inherits(CachedTag, _RevisionTag2);

        function CachedTag() {
            _classCallCheck$1(this, CachedTag);

            var _this2 = _possibleConstructorReturn(this, _RevisionTag2.apply(this, arguments));

            _this2.lastChecked = null;
            _this2.lastValue = null;
            return _this2;
        }

        CachedTag.prototype.value = function value() {
            var lastChecked = this.lastChecked,
                lastValue = this.lastValue;

            if (lastChecked !== $REVISION) {
                this.lastChecked = $REVISION;
                this.lastValue = lastValue = this.compute();
            }
            return this.lastValue;
        };

        CachedTag.prototype.invalidate = function invalidate() {
            this.lastChecked = null;
        };

        return CachedTag;
    }(RevisionTag);

    var TagsPair = function (_CachedTag) {
        _inherits(TagsPair, _CachedTag);

        TagsPair.create = function create(first, second) {
            return new TagWrapper(this.id, new TagsPair(first, second));
        };

        function TagsPair(first, second) {
            _classCallCheck$1(this, TagsPair);

            var _this3 = _possibleConstructorReturn(this, _CachedTag.call(this));

            _this3.first = first;
            _this3.second = second;
            return _this3;
        }

        TagsPair.prototype.compute = function compute() {
            return Math.max(this.first.value(), this.second.value());
        };

        return TagsPair;
    }(CachedTag);

    register(TagsPair);

    var TagsCombinator = function (_CachedTag2) {
        _inherits(TagsCombinator, _CachedTag2);

        TagsCombinator.create = function create(tags) {
            return new TagWrapper(this.id, new TagsCombinator(tags));
        };

        function TagsCombinator(tags) {
            _classCallCheck$1(this, TagsCombinator);

            var _this4 = _possibleConstructorReturn(this, _CachedTag2.call(this));

            _this4.tags = tags;
            return _this4;
        }

        TagsCombinator.prototype.compute = function compute() {
            var tags = this.tags;

            var max = -1;
            for (var i = 0; i < tags.length; i++) {
                var value = tags[i].value();
                max = Math.max(value, max);
            }
            return max;
        };

        return TagsCombinator;
    }(CachedTag);

    register(TagsCombinator);
    var UpdatableTag = function (_CachedTag3) {
        _inherits(UpdatableTag, _CachedTag3);

        UpdatableTag.create = function create(tag) {
            return new TagWrapper(this.id, new UpdatableTag(tag));
        };

        function UpdatableTag(tag) {
            _classCallCheck$1(this, UpdatableTag);

            var _this5 = _possibleConstructorReturn(this, _CachedTag3.call(this));

            _this5.tag = tag;
            _this5.lastUpdated = INITIAL;
            return _this5;
        }

        UpdatableTag.prototype.compute = function compute() {
            return Math.max(this.lastUpdated, this.tag.value());
        };

        UpdatableTag.prototype.update = function update(tag) {
            if (tag !== this.tag) {
                this.tag = tag;
                this.lastUpdated = $REVISION;
                this.invalidate();
            }
        };

        return UpdatableTag;
    }(CachedTag);
    register(UpdatableTag);
    var CachedReference = function () {
        function CachedReference() {
            _classCallCheck$1(this, CachedReference);

            this.lastRevision = null;
            this.lastValue = null;
        }

        CachedReference.prototype.value = function value() {
            var tag = this.tag,
                lastRevision = this.lastRevision,
                lastValue = this.lastValue;

            if (!lastRevision || !tag.validate(lastRevision)) {
                lastValue = this.lastValue = this.compute();
                this.lastRevision = tag.value();
            }
            return lastValue;
        };

        CachedReference.prototype.invalidate = function invalidate() {
            this.lastRevision = null;
        };

        return CachedReference;
    }();

    var MapperReference = function (_CachedReference) {
        _inherits(MapperReference, _CachedReference);

        function MapperReference(reference, mapper) {
            _classCallCheck$1(this, MapperReference);

            var _this6 = _possibleConstructorReturn(this, _CachedReference.call(this));

            _this6.tag = reference.tag;
            _this6.reference = reference;
            _this6.mapper = mapper;
            return _this6;
        }

        MapperReference.prototype.compute = function compute() {
            var reference = this.reference,
                mapper = this.mapper;

            return mapper(reference.value());
        };

        return MapperReference;
    }(CachedReference);

    function map(reference, mapper) {
        return new MapperReference(reference, mapper);
    }
    //////////
    var ReferenceCache = function () {
        function ReferenceCache(reference) {
            _classCallCheck$1(this, ReferenceCache);

            this.lastValue = null;
            this.lastRevision = null;
            this.initialized = false;
            this.tag = reference.tag;
            this.reference = reference;
        }

        ReferenceCache.prototype.peek = function peek() {
            if (!this.initialized) {
                return this.initialize();
            }
            return this.lastValue;
        };

        ReferenceCache.prototype.revalidate = function revalidate() {
            if (!this.initialized) {
                return this.initialize();
            }
            var reference = this.reference,
                lastRevision = this.lastRevision;

            var tag = reference.tag;
            if (tag.validate(lastRevision)) return NOT_MODIFIED;
            this.lastRevision = tag.value();
            var lastValue = this.lastValue;

            var value = reference.value();
            if (value === lastValue) return NOT_MODIFIED;
            this.lastValue = value;
            return value;
        };

        ReferenceCache.prototype.initialize = function initialize() {
            var reference = this.reference;

            var value = this.lastValue = reference.value();
            this.lastRevision = reference.tag.value();
            this.initialized = true;
            return value;
        };

        return ReferenceCache;
    }();
    var NOT_MODIFIED = "adb3b78e-3d22-4e4b-877a-6317c2c5c145";
    function isModified(value) {
        return value !== NOT_MODIFIED;
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var ConstReference = function () {
        function ConstReference(inner) {
            _classCallCheck(this, ConstReference);

            this.inner = inner;
            this.tag = CONSTANT_TAG;
        }

        ConstReference.prototype.value = function value() {
            return this.inner;
        };

        return ConstReference;
    }();
    function isConst(reference) {
        return reference.tag === CONSTANT_TAG;
    }

    function _defaults$1(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$1(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$1(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$1(subClass, superClass);
    }

    var ListItem = function (_ListNode) {
        _inherits$1(ListItem, _ListNode);

        function ListItem(iterable, result) {
            _classCallCheck$2(this, ListItem);

            var _this = _possibleConstructorReturn$1(this, _ListNode.call(this, iterable.valueReferenceFor(result)));

            _this.retained = false;
            _this.seen = false;
            _this.key = result.key;
            _this.iterable = iterable;
            _this.memo = iterable.memoReferenceFor(result);
            return _this;
        }

        ListItem.prototype.update = function update(item) {
            this.retained = true;
            this.iterable.updateValueReference(this.value, item);
            this.iterable.updateMemoReference(this.memo, item);
        };

        ListItem.prototype.shouldRemove = function shouldRemove() {
            return !this.retained;
        };

        ListItem.prototype.reset = function reset() {
            this.retained = false;
            this.seen = false;
        };

        return ListItem;
    }(_util.ListNode);
    var IterationArtifacts = function () {
        function IterationArtifacts(iterable) {
            _classCallCheck$2(this, IterationArtifacts);

            this.map = (0, _util.dict)();
            this.list = new _util.LinkedList();
            this.tag = iterable.tag;
            this.iterable = iterable;
        }

        IterationArtifacts.prototype.isEmpty = function isEmpty() {
            var iterator = this.iterator = this.iterable.iterate();
            return iterator.isEmpty();
        };

        IterationArtifacts.prototype.iterate = function iterate() {
            var iterator = this.iterator || this.iterable.iterate();
            this.iterator = null;
            return iterator;
        };

        IterationArtifacts.prototype.has = function has(key) {
            return !!this.map[key];
        };

        IterationArtifacts.prototype.get = function get(key) {
            return this.map[key];
        };

        IterationArtifacts.prototype.wasSeen = function wasSeen(key) {
            var node = this.map[key];
            return node && node.seen;
        };

        IterationArtifacts.prototype.append = function append(item) {
            var map = this.map,
                list = this.list,
                iterable = this.iterable;

            var node = map[item.key] = new ListItem(iterable, item);
            list.append(node);
            return node;
        };

        IterationArtifacts.prototype.insertBefore = function insertBefore(item, reference) {
            var map = this.map,
                list = this.list,
                iterable = this.iterable;

            var node = map[item.key] = new ListItem(iterable, item);
            node.retained = true;
            list.insertBefore(node, reference);
            return node;
        };

        IterationArtifacts.prototype.move = function move(item, reference) {
            var list = this.list;

            item.retained = true;
            list.remove(item);
            list.insertBefore(item, reference);
        };

        IterationArtifacts.prototype.remove = function remove(item) {
            var list = this.list;

            list.remove(item);
            delete this.map[item.key];
        };

        IterationArtifacts.prototype.nextNode = function nextNode(item) {
            return this.list.nextNode(item);
        };

        IterationArtifacts.prototype.head = function head() {
            return this.list.head();
        };

        return IterationArtifacts;
    }();
    var ReferenceIterator = function () {
        // if anyone needs to construct this object with something other than
        // an iterable, let @wycats know.
        function ReferenceIterator(iterable) {
            _classCallCheck$2(this, ReferenceIterator);

            this.iterator = null;
            var artifacts = new IterationArtifacts(iterable);
            this.artifacts = artifacts;
        }

        ReferenceIterator.prototype.next = function next() {
            var artifacts = this.artifacts;

            var iterator = this.iterator = this.iterator || artifacts.iterate();
            var item = iterator.next();
            if (!item) return null;
            return artifacts.append(item);
        };

        return ReferenceIterator;
    }();
    var Phase;
    (function (Phase) {
        Phase[Phase["Append"] = 0] = "Append";
        Phase[Phase["Prune"] = 1] = "Prune";
        Phase[Phase["Done"] = 2] = "Done";
    })(Phase || (Phase = {}));
    var IteratorSynchronizer = function () {
        function IteratorSynchronizer(_ref) {
            var target = _ref.target,
                artifacts = _ref.artifacts;

            _classCallCheck$2(this, IteratorSynchronizer);

            this.target = target;
            this.artifacts = artifacts;
            this.iterator = artifacts.iterate();
            this.current = artifacts.head();
        }

        IteratorSynchronizer.prototype.sync = function sync() {
            var phase = Phase.Append;
            while (true) {
                switch (phase) {
                    case Phase.Append:
                        phase = this.nextAppend();
                        break;
                    case Phase.Prune:
                        phase = this.nextPrune();
                        break;
                    case Phase.Done:
                        this.nextDone();
                        return;
                }
            }
        };

        IteratorSynchronizer.prototype.advanceToKey = function advanceToKey(key) {
            var current = this.current,
                artifacts = this.artifacts;

            var seek = current;
            while (seek && seek.key !== key) {
                seek.seen = true;
                seek = artifacts.nextNode(seek);
            }
            this.current = seek && artifacts.nextNode(seek);
        };

        IteratorSynchronizer.prototype.nextAppend = function nextAppend() {
            var iterator = this.iterator,
                current = this.current,
                artifacts = this.artifacts;

            var item = iterator.next();
            if (item === null) {
                return this.startPrune();
            }
            var key = item.key;

            if (current && current.key === key) {
                this.nextRetain(item);
            } else if (artifacts.has(key)) {
                this.nextMove(item);
            } else {
                this.nextInsert(item);
            }
            return Phase.Append;
        };

        IteratorSynchronizer.prototype.nextRetain = function nextRetain(item) {
            var artifacts = this.artifacts,
                current = this.current;

            current = current;
            current.update(item);
            this.current = artifacts.nextNode(current);
            this.target.retain(item.key, current.value, current.memo);
        };

        IteratorSynchronizer.prototype.nextMove = function nextMove(item) {
            var current = this.current,
                artifacts = this.artifacts,
                target = this.target;
            var key = item.key;

            var found = artifacts.get(item.key);
            found.update(item);
            if (artifacts.wasSeen(item.key)) {
                artifacts.move(found, current);
                target.move(found.key, found.value, found.memo, current ? current.key : null);
            } else {
                this.advanceToKey(key);
            }
        };

        IteratorSynchronizer.prototype.nextInsert = function nextInsert(item) {
            var artifacts = this.artifacts,
                target = this.target,
                current = this.current;

            var node = artifacts.insertBefore(item, current);
            target.insert(node.key, node.value, node.memo, current ? current.key : null);
        };

        IteratorSynchronizer.prototype.startPrune = function startPrune() {
            this.current = this.artifacts.head();
            return Phase.Prune;
        };

        IteratorSynchronizer.prototype.nextPrune = function nextPrune() {
            var artifacts = this.artifacts,
                target = this.target,
                current = this.current;

            if (current === null) {
                return Phase.Done;
            }
            var node = current;
            this.current = artifacts.nextNode(node);
            if (node.shouldRemove()) {
                artifacts.remove(node);
                target.delete(node.key);
            } else {
                node.reset();
            }
            return Phase.Prune;
        };

        IteratorSynchronizer.prototype.nextDone = function nextDone() {
            this.target.done();
        };

        return IteratorSynchronizer;
    }();

    function referenceFromParts(root, parts) {
        var reference = root;
        for (var i = 0; i < parts.length; i++) {
            reference = reference.get(parts[i]);
        }
        return reference;
    }

    exports.ConstReference = ConstReference;
    exports.isConst = isConst;
    exports.ListItem = ListItem;
    exports.referenceFromParts = referenceFromParts;
    exports.IterationArtifacts = IterationArtifacts;
    exports.ReferenceIterator = ReferenceIterator;
    exports.IteratorSynchronizer = IteratorSynchronizer;
    exports.CONSTANT = CONSTANT;
    exports.INITIAL = INITIAL;
    exports.VOLATILE = VOLATILE;
    exports.RevisionTag = RevisionTag;
    exports.TagWrapper = TagWrapper;
    exports.CONSTANT_TAG = CONSTANT_TAG;
    exports.VOLATILE_TAG = VOLATILE_TAG;
    exports.CURRENT_TAG = CURRENT_TAG;
    exports.DirtyableTag = DirtyableTag;
    exports.combineTagged = combineTagged;
    exports.combineSlice = combineSlice;
    exports.combine = combine;
    exports.CachedTag = CachedTag;
    exports.UpdatableTag = UpdatableTag;
    exports.CachedReference = CachedReference;
    exports.map = map;
    exports.ReferenceCache = ReferenceCache;
    exports.isModified = isModified;
});
enifed('@glimmer/runtime', ['exports', '@glimmer/util', '@glimmer/reference', '@glimmer/wire-format'], function (exports, _util, _reference2, _wireFormat) {
    'use strict';

    exports.ConcreteBounds = exports.ElementStack = exports.insertHTMLBefore = exports.isWhitespace = exports.DOMTreeConstruction = exports.IDOMChanges = exports.DOMChanges = exports.isComponentDefinition = exports.ComponentDefinition = exports.PartialDefinition = exports.Environment = exports.Scope = exports.isSafeString = exports.RenderResult = exports.UpdatingVM = exports.compileExpression = exports.compileList = exports.InlineMacros = exports.BlockMacros = exports.getDynamicVar = exports.resetDebuggerCallback = exports.setDebuggerCallback = exports.normalizeTextValue = exports.debugSlice = exports.Register = exports.readDOMAttr = exports.defaultPropertyManagers = exports.defaultAttributeManagers = exports.defaultManagers = exports.INPUT_VALUE_PROPERTY_MANAGER = exports.PropertyManager = exports.AttributeManager = exports.IAttributeManager = exports.CompiledDynamicTemplate = exports.CompiledStaticTemplate = exports.compileLayout = exports.OpcodeBuilderDSL = exports.ConditionalReference = exports.PrimitiveReference = exports.UNDEFINED_REFERENCE = exports.NULL_REFERENCE = exports.templateFactory = exports.Simple = undefined;


    function _defaults(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    /**
     * Registers
     *
     * For the most part, these follows MIPS naming conventions, however the
     * register numbers are different.
     */
    var Register;
    (function (Register) {
        // $0 or $pc (program counter): pointer into `program` for the next insturction; -1 means exit
        Register[Register["pc"] = 0] = "pc";
        // $1 or $ra (return address): pointer into `program` for the return
        Register[Register["ra"] = 1] = "ra";
        // $2 or $fp (frame pointer): pointer into the `evalStack` for the base of the stack
        Register[Register["fp"] = 2] = "fp";
        // $3 or $sp (stack pointer): pointer into the `evalStack` for the top of the stack
        Register[Register["sp"] = 3] = "sp";
        // $4-$5 or $s0-$s1 (saved): callee saved general-purpose registers
        Register[Register["s0"] = 4] = "s0";
        Register[Register["s1"] = 5] = "s1";
        // $6-$7 or $t0-$t1 (temporaries): caller saved general-purpose registers
        Register[Register["t0"] = 6] = "t0";
        Register[Register["t1"] = 7] = "t1";
    })(Register || (exports.Register = Register = {}));
    function debugSlice(env, start, end) {}
    var AppendOpcodes = function () {
        function AppendOpcodes() {
            _classCallCheck(this, AppendOpcodes);

            this.evaluateOpcode = (0, _util.fillNulls)(72 /* Size */).slice();
        }

        AppendOpcodes.prototype.add = function add(name, evaluate) {
            this.evaluateOpcode[name] = evaluate;
        };

        AppendOpcodes.prototype.evaluate = function evaluate(vm, opcode, type) {
            var func = this.evaluateOpcode[type];
            func(vm, opcode);
        };

        return AppendOpcodes;
    }();
    var APPEND_OPCODES = new AppendOpcodes();
    var AbstractOpcode = function () {
        function AbstractOpcode() {
            _classCallCheck(this, AbstractOpcode);

            (0, _util.initializeGuid)(this);
        }

        AbstractOpcode.prototype.toJSON = function toJSON() {
            return { guid: this._guid, type: this.type };
        };

        return AbstractOpcode;
    }();
    var UpdatingOpcode = function (_AbstractOpcode) {
        _inherits(UpdatingOpcode, _AbstractOpcode);

        function UpdatingOpcode() {
            _classCallCheck(this, UpdatingOpcode);

            var _this = _possibleConstructorReturn(this, _AbstractOpcode.apply(this, arguments));

            _this.next = null;
            _this.prev = null;
            return _this;
        }

        return UpdatingOpcode;
    }(AbstractOpcode);

    function _defaults$1(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$1(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$1(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$1(subClass, superClass);
    }

    var PrimitiveReference = function (_ConstReference) {
        _inherits$1(PrimitiveReference, _ConstReference);

        function PrimitiveReference(value) {
            _classCallCheck$1(this, PrimitiveReference);

            return _possibleConstructorReturn$1(this, _ConstReference.call(this, value));
        }

        PrimitiveReference.create = function create(value) {
            if (value === undefined) {
                return UNDEFINED_REFERENCE;
            } else if (value === null) {
                return NULL_REFERENCE;
            } else if (value === true) {
                return TRUE_REFERENCE;
            } else if (value === false) {
                return FALSE_REFERENCE;
            } else if (typeof value === 'number') {
                return new ValueReference(value);
            } else {
                return new StringReference(value);
            }
        };

        PrimitiveReference.prototype.get = function get(_key) {
            return UNDEFINED_REFERENCE;
        };

        return PrimitiveReference;
    }(_reference2.ConstReference);

    var StringReference = function (_PrimitiveReference) {
        _inherits$1(StringReference, _PrimitiveReference);

        function StringReference() {
            _classCallCheck$1(this, StringReference);

            var _this2 = _possibleConstructorReturn$1(this, _PrimitiveReference.apply(this, arguments));

            _this2.lengthReference = null;
            return _this2;
        }

        StringReference.prototype.get = function get(key) {
            if (key === 'length') {
                var lengthReference = this.lengthReference;

                if (lengthReference === null) {
                    lengthReference = this.lengthReference = new ValueReference(this.inner.length);
                }
                return lengthReference;
            } else {
                return _PrimitiveReference.prototype.get.call(this, key);
            }
        };

        return StringReference;
    }(PrimitiveReference);

    var ValueReference = function (_PrimitiveReference2) {
        _inherits$1(ValueReference, _PrimitiveReference2);

        function ValueReference(value) {
            _classCallCheck$1(this, ValueReference);

            return _possibleConstructorReturn$1(this, _PrimitiveReference2.call(this, value));
        }

        return ValueReference;
    }(PrimitiveReference);

    var UNDEFINED_REFERENCE = new ValueReference(undefined);
    var NULL_REFERENCE = new ValueReference(null);
    var TRUE_REFERENCE = new ValueReference(true);
    var FALSE_REFERENCE = new ValueReference(false);
    var ConditionalReference = function () {
        function ConditionalReference(inner) {
            _classCallCheck$1(this, ConditionalReference);

            this.inner = inner;
            this.tag = inner.tag;
        }

        ConditionalReference.prototype.value = function value() {
            return this.toBool(this.inner.value());
        };

        ConditionalReference.prototype.toBool = function toBool(value) {
            return !!value;
        };

        return ConditionalReference;
    }();

    function _defaults$2(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$2(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$2(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$2(subClass, superClass);
    }

    var ConcatReference = function (_CachedReference) {
        _inherits$2(ConcatReference, _CachedReference);

        function ConcatReference(parts) {
            _classCallCheck$2(this, ConcatReference);

            var _this = _possibleConstructorReturn$2(this, _CachedReference.call(this));

            _this.parts = parts;
            _this.tag = (0, _reference2.combineTagged)(parts);
            return _this;
        }

        ConcatReference.prototype.compute = function compute() {
            var parts = new Array();
            for (var i = 0; i < this.parts.length; i++) {
                var value = this.parts[i].value();
                if (value !== null && value !== undefined) {
                    parts[i] = castToString(value);
                }
            }
            if (parts.length > 0) {
                return parts.join('');
            }
            return null;
        };

        return ConcatReference;
    }(_reference2.CachedReference);
    function castToString(value) {
        if (typeof value.toString !== 'function') {
            return '';
        }
        return String(value);
    }

    APPEND_OPCODES.add(1 /* Helper */, function (vm, _ref) {
        var _helper = _ref.op1;

        var stack = vm.stack;
        var helper = vm.constants.getFunction(_helper);
        var args = stack.pop();
        var value = helper(vm, args);
        args.clear();
        vm.stack.push(value);
    });
    APPEND_OPCODES.add(2 /* Function */, function (vm, _ref2) {
        var _function = _ref2.op1;

        var func = vm.constants.getFunction(_function);
        vm.stack.push(func(vm));
    });
    APPEND_OPCODES.add(5 /* GetVariable */, function (vm, _ref3) {
        var symbol = _ref3.op1;

        var expr = vm.referenceForSymbol(symbol);
        vm.stack.push(expr);
    });
    APPEND_OPCODES.add(4 /* SetVariable */, function (vm, _ref4) {
        var symbol = _ref4.op1;

        var expr = vm.stack.pop();
        vm.scope().bindSymbol(symbol, expr);
    });
    APPEND_OPCODES.add(70 /* ResolveMaybeLocal */, function (vm, _ref5) {
        var _name = _ref5.op1;

        var name = vm.constants.getString(_name);
        var locals = vm.scope().getPartialMap();
        var ref = locals[name];
        if (ref === undefined) {
            ref = vm.getSelf().get(name);
        }
        vm.stack.push(ref);
    });
    APPEND_OPCODES.add(19 /* RootScope */, function (vm, _ref6) {
        var symbols = _ref6.op1,
            bindCallerScope = _ref6.op2;

        vm.pushRootScope(symbols, !!bindCallerScope);
    });
    APPEND_OPCODES.add(6 /* GetProperty */, function (vm, _ref7) {
        var _key = _ref7.op1;

        var key = vm.constants.getString(_key);
        var expr = vm.stack.pop();
        vm.stack.push(expr.get(key));
    });
    APPEND_OPCODES.add(7 /* PushBlock */, function (vm, _ref8) {
        var _block = _ref8.op1;

        var block = _block ? vm.constants.getBlock(_block) : null;
        vm.stack.push(block);
    });
    APPEND_OPCODES.add(8 /* GetBlock */, function (vm, _ref9) {
        var _block = _ref9.op1;

        vm.stack.push(vm.scope().getBlock(_block));
    });
    APPEND_OPCODES.add(9 /* HasBlock */, function (vm, _ref10) {
        var _block = _ref10.op1;

        var hasBlock = !!vm.scope().getBlock(_block);
        vm.stack.push(hasBlock ? TRUE_REFERENCE : FALSE_REFERENCE);
    });
    APPEND_OPCODES.add(10 /* HasBlockParams */, function (vm, _ref11) {
        var _block = _ref11.op1;

        var block = vm.scope().getBlock(_block);
        var hasBlockParams = block && block.symbolTable.parameters.length;
        vm.stack.push(hasBlockParams ? TRUE_REFERENCE : FALSE_REFERENCE);
    });
    APPEND_OPCODES.add(11 /* Concat */, function (vm, _ref12) {
        var count = _ref12.op1;

        var out = [];
        for (var i = count; i > 0; i--) {
            out.push(vm.stack.pop());
        }
        vm.stack.push(new ConcatReference(out.reverse()));
    });

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck$4(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Arguments = function () {
        function Arguments() {
            _classCallCheck$4(this, Arguments);

            this.stack = null;
            this.positional = new PositionalArguments();
            this.named = new NamedArguments();
        }

        Arguments.prototype.empty = function empty() {
            this.setup(null, true);
            return this;
        };

        Arguments.prototype.setup = function setup(stack, synthetic) {
            this.stack = stack;
            var names = stack.fromTop(0);
            var namedCount = names.length;
            var positionalCount = stack.fromTop(namedCount + 1);
            var start = positionalCount + namedCount + 2;
            var positional = this.positional;
            positional.setup(stack, start, positionalCount);
            var named = this.named;
            named.setup(stack, namedCount, names, synthetic);
        };

        Arguments.prototype.at = function at(pos) {
            return this.positional.at(pos);
        };

        Arguments.prototype.get = function get(name) {
            return this.named.get(name);
        };

        Arguments.prototype.capture = function capture() {
            return {
                tag: this.tag,
                length: this.length,
                positional: this.positional.capture(),
                named: this.named.capture()
            };
        };

        Arguments.prototype.clear = function clear() {
            var stack = this.stack,
                length = this.length;

            stack.pop(length + 2);
        };

        _createClass(Arguments, [{
            key: 'tag',
            get: function () {
                return (0, _reference2.combineTagged)([this.positional, this.named]);
            }
        }, {
            key: 'length',
            get: function () {
                return this.positional.length + this.named.length;
            }
        }]);

        return Arguments;
    }();

    var PositionalArguments = function () {
        function PositionalArguments() {
            _classCallCheck$4(this, PositionalArguments);

            this.length = 0;
            this.stack = null;
            this.start = 0;
            this._tag = null;
            this._references = null;
        }

        PositionalArguments.prototype.setup = function setup(stack, start, length) {
            this.stack = stack;
            this.start = start;
            this.length = length;
            this._tag = null;
            this._references = null;
        };

        PositionalArguments.prototype.at = function at(position) {
            var start = this.start,
                length = this.length;

            if (position < 0 || position >= length) {
                return UNDEFINED_REFERENCE;
            }
            // stack: pos1, pos2, pos3, named1, named2
            // start: 4 (top - 4)
            //
            // at(0) === pos1 === top - start
            // at(1) === pos2 === top - (start - 1)
            // at(2) === pos3 === top - (start - 2)
            var fromTop = start - position - 1;
            return this.stack.fromTop(fromTop);
        };

        PositionalArguments.prototype.capture = function capture() {
            return new CapturedPositionalArguments(this.tag, this.references);
        };

        _createClass(PositionalArguments, [{
            key: 'tag',
            get: function () {
                var tag = this._tag;
                if (!tag) {
                    tag = this._tag = (0, _reference2.combineTagged)(this.references);
                }
                return tag;
            }
        }, {
            key: 'references',
            get: function () {
                var references = this._references;
                if (!references) {
                    var length = this.length;

                    references = this._references = new Array(length);
                    for (var i = 0; i < length; i++) {
                        references[i] = this.at(i);
                    }
                }
                return references;
            }
        }]);

        return PositionalArguments;
    }();

    var CapturedPositionalArguments = function () {
        function CapturedPositionalArguments(tag, references) {
            var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : references.length;

            _classCallCheck$4(this, CapturedPositionalArguments);

            this.tag = tag;
            this.references = references;
            this.length = length;
        }

        CapturedPositionalArguments.prototype.at = function at(position) {
            return this.references[position];
        };

        CapturedPositionalArguments.prototype.value = function value() {
            return this.references.map(this.valueOf);
        };

        CapturedPositionalArguments.prototype.get = function get(name) {
            var references = this.references,
                length = this.length;

            if (name === 'length') {
                return PrimitiveReference.create(length);
            } else {
                var idx = parseInt(name, 10);
                if (idx < 0 || idx >= length) {
                    return UNDEFINED_REFERENCE;
                } else {
                    return references[idx];
                }
            }
        };

        CapturedPositionalArguments.prototype.valueOf = function valueOf(reference) {
            return reference.value();
        };

        return CapturedPositionalArguments;
    }();

    var NamedArguments = function () {
        function NamedArguments() {
            _classCallCheck$4(this, NamedArguments);

            this.length = 0;
            this._tag = null;
            this._references = null;
            this._names = null;
            this._realNames = _util.EMPTY_ARRAY;
        }

        NamedArguments.prototype.setup = function setup(stack, length, names, synthetic) {
            this.stack = stack;
            this.length = length;
            this._tag = null;
            this._references = null;
            if (synthetic) {
                this._names = names;
                this._realNames = _util.EMPTY_ARRAY;
            } else {
                this._names = null;
                this._realNames = names;
            }
        };

        NamedArguments.prototype.has = function has(name) {
            return this.names.indexOf(name) !== -1;
        };

        NamedArguments.prototype.get = function get(name) {
            var names = this.names,
                length = this.length;

            var idx = names.indexOf(name);
            if (idx === -1) {
                return UNDEFINED_REFERENCE;
            }
            // stack: pos1, pos2, pos3, named1, named2
            // start: 4 (top - 4)
            // namedDict: { named1: 1, named2: 0 };
            //
            // get('named1') === named1 === top - (start - 1)
            // get('named2') === named2 === top - start
            var fromTop = length - idx;
            return this.stack.fromTop(fromTop);
        };

        NamedArguments.prototype.capture = function capture() {
            return new CapturedNamedArguments(this.tag, this.names, this.references);
        };

        NamedArguments.prototype.sliceName = function sliceName(name) {
            return name.slice(1);
        };

        _createClass(NamedArguments, [{
            key: 'tag',
            get: function () {
                return (0, _reference2.combineTagged)(this.references);
            }
        }, {
            key: 'names',
            get: function () {
                var names = this._names;
                if (!names) {
                    names = this._names = this._realNames.map(this.sliceName);
                }
                return names;
            }
        }, {
            key: 'references',
            get: function () {
                var references = this._references;
                if (!references) {
                    var names = this.names,
                        length = this.length;

                    references = this._references = [];
                    for (var i = 0; i < length; i++) {
                        references[i] = this.get(names[i]);
                    }
                }
                return references;
            }
        }]);

        return NamedArguments;
    }();

    var CapturedNamedArguments = function () {
        function CapturedNamedArguments(tag, names, references) {
            _classCallCheck$4(this, CapturedNamedArguments);

            this.tag = tag;
            this.names = names;
            this.references = references;
            this.length = names.length;
            this._map = null;
        }

        CapturedNamedArguments.prototype.has = function has(name) {
            return this.names.indexOf(name) !== -1;
        };

        CapturedNamedArguments.prototype.get = function get(name) {
            var names = this.names,
                references = this.references;

            var idx = names.indexOf(name);
            if (idx === -1) {
                return UNDEFINED_REFERENCE;
            } else {
                return references[idx];
            }
        };

        CapturedNamedArguments.prototype.value = function value() {
            var names = this.names,
                references = this.references;

            var out = (0, _util.dict)();
            for (var i = 0; i < names.length; i++) {
                var name = names[i];
                out[name] = references[i].value();
            }
            return out;
        };

        _createClass(CapturedNamedArguments, [{
            key: 'map',
            get: function () {
                var map$$1 = this._map;
                if (!map$$1) {
                    var names = this.names,
                        references = this.references;

                    map$$1 = this._map = (0, _util.dict)();
                    for (var i = 0; i < names.length; i++) {
                        var name = names[i];
                        map$$1[name] = references[i];
                    }
                }
                return map$$1;
            }
        }]);

        return CapturedNamedArguments;
    }();

    var ARGS = new Arguments();

    function _defaults$5(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$6(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$5(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$5(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$5(subClass, superClass);
    }

    APPEND_OPCODES.add(20 /* ChildScope */, function (vm) {
        return vm.pushChildScope();
    });
    APPEND_OPCODES.add(21 /* PopScope */, function (vm) {
        return vm.popScope();
    });
    APPEND_OPCODES.add(39 /* PushDynamicScope */, function (vm) {
        return vm.pushDynamicScope();
    });
    APPEND_OPCODES.add(40 /* PopDynamicScope */, function (vm) {
        return vm.popDynamicScope();
    });
    APPEND_OPCODES.add(12 /* Immediate */, function (vm, _ref) {
        var number = _ref.op1;

        vm.stack.push(number);
    });
    APPEND_OPCODES.add(13 /* Constant */, function (vm, _ref2) {
        var other = _ref2.op1;

        vm.stack.push(vm.constants.getOther(other));
    });
    APPEND_OPCODES.add(14 /* PrimitiveReference */, function (vm, _ref3) {
        var primitive = _ref3.op1;

        var stack = vm.stack;
        var flag = (primitive & 3 << 30) >>> 30;
        var value = primitive & ~(3 << 30);
        switch (flag) {
            case 0:
                stack.push(PrimitiveReference.create(value));
                break;
            case 1:
                stack.push(PrimitiveReference.create(vm.constants.getFloat(value)));
                break;
            case 2:
                stack.push(PrimitiveReference.create(vm.constants.getString(value)));
                break;
            case 3:
                switch (value) {
                    case 0:
                        stack.push(FALSE_REFERENCE);
                        break;
                    case 1:
                        stack.push(TRUE_REFERENCE);
                        break;
                    case 2:
                        stack.push(NULL_REFERENCE);
                        break;
                    case 3:
                        stack.push(UNDEFINED_REFERENCE);
                        break;
                }
                break;
        }
    });
    APPEND_OPCODES.add(15 /* Dup */, function (vm, _ref4) {
        var register = _ref4.op1,
            offset = _ref4.op2;

        var position = vm.fetchValue(register) - offset;
        vm.stack.dup(position);
    });
    APPEND_OPCODES.add(16 /* Pop */, function (vm, _ref5) {
        var count = _ref5.op1;
        return vm.stack.pop(count);
    });
    APPEND_OPCODES.add(17 /* Load */, function (vm, _ref6) {
        var register = _ref6.op1;
        return vm.load(register);
    });
    APPEND_OPCODES.add(18 /* Fetch */, function (vm, _ref7) {
        var register = _ref7.op1;
        return vm.fetch(register);
    });
    APPEND_OPCODES.add(38 /* BindDynamicScope */, function (vm, _ref8) {
        var _names = _ref8.op1;

        var names = vm.constants.getArray(_names);
        vm.bindDynamicScope(names);
    });
    APPEND_OPCODES.add(47 /* PushFrame */, function (vm) {
        return vm.pushFrame();
    });
    APPEND_OPCODES.add(48 /* PopFrame */, function (vm) {
        return vm.popFrame();
    });
    APPEND_OPCODES.add(49 /* Enter */, function (vm, _ref9) {
        var args = _ref9.op1;
        return vm.enter(args);
    });
    APPEND_OPCODES.add(50 /* Exit */, function (vm) {
        return vm.exit();
    });
    APPEND_OPCODES.add(41 /* CompileDynamicBlock */, function (vm) {
        var stack = vm.stack;
        var block = stack.pop();
        stack.push(block ? block.compileDynamic(vm.env) : null);
    });
    APPEND_OPCODES.add(42 /* InvokeStatic */, function (vm, _ref10) {
        var _block = _ref10.op1;

        var block = vm.constants.getBlock(_block);
        var compiled = block.compileStatic(vm.env);
        vm.call(compiled.handle);
    });
    APPEND_OPCODES.add(43 /* InvokeDynamic */, function (vm, _ref11) {
        var _invoker = _ref11.op1;

        var invoker = vm.constants.getOther(_invoker);
        var block = vm.stack.pop();
        invoker.invoke(vm, block);
    });
    APPEND_OPCODES.add(44 /* Jump */, function (vm, _ref12) {
        var target = _ref12.op1;
        return vm.goto(target);
    });
    APPEND_OPCODES.add(45 /* JumpIf */, function (vm, _ref13) {
        var target = _ref13.op1;

        var reference = vm.stack.pop();
        if ((0, _reference2.isConst)(reference)) {
            if (reference.value()) {
                vm.goto(target);
            }
        } else {
            var cache = new _reference2.ReferenceCache(reference);
            if (cache.peek()) {
                vm.goto(target);
            }
            vm.updateWith(new Assert(cache));
        }
    });
    APPEND_OPCODES.add(46 /* JumpUnless */, function (vm, _ref14) {
        var target = _ref14.op1;

        var reference = vm.stack.pop();
        if ((0, _reference2.isConst)(reference)) {
            if (!reference.value()) {
                vm.goto(target);
            }
        } else {
            var cache = new _reference2.ReferenceCache(reference);
            if (!cache.peek()) {
                vm.goto(target);
            }
            vm.updateWith(new Assert(cache));
        }
    });
    APPEND_OPCODES.add(22 /* Return */, function (vm) {
        return vm.return();
    });
    APPEND_OPCODES.add(23 /* ReturnTo */, function (vm, _ref15) {
        var relative = _ref15.op1;

        vm.returnTo(relative);
    });
    var ConstTest = function (ref, _env) {
        return new _reference2.ConstReference(!!ref.value());
    };
    var SimpleTest = function (ref, _env) {
        return ref;
    };
    var EnvironmentTest = function (ref, env) {
        return env.toConditionalReference(ref);
    };
    APPEND_OPCODES.add(51 /* Test */, function (vm, _ref16) {
        var _func = _ref16.op1;

        var stack = vm.stack;
        var operand = stack.pop();
        var func = vm.constants.getFunction(_func);
        stack.push(func(operand, vm.env));
    });
    var Assert = function (_UpdatingOpcode) {
        _inherits$5(Assert, _UpdatingOpcode);

        function Assert(cache) {
            _classCallCheck$6(this, Assert);

            var _this = _possibleConstructorReturn$5(this, _UpdatingOpcode.call(this));

            _this.type = 'assert';
            _this.tag = cache.tag;
            _this.cache = cache;
            return _this;
        }

        Assert.prototype.evaluate = function evaluate(vm) {
            var cache = this.cache;

            if ((0, _reference2.isModified)(cache.revalidate())) {
                vm.throw();
            }
        };

        Assert.prototype.toJSON = function toJSON() {
            var type = this.type,
                _guid = this._guid,
                cache = this.cache;

            var expected = void 0;
            try {
                expected = JSON.stringify(cache.peek());
            } catch (e) {
                expected = String(cache.peek());
            }
            return {
                args: [],
                details: { expected: expected },
                guid: _guid,
                type: type
            };
        };

        return Assert;
    }(UpdatingOpcode);
    var JumpIfNotModifiedOpcode = function (_UpdatingOpcode2) {
        _inherits$5(JumpIfNotModifiedOpcode, _UpdatingOpcode2);

        function JumpIfNotModifiedOpcode(tag, target) {
            _classCallCheck$6(this, JumpIfNotModifiedOpcode);

            var _this2 = _possibleConstructorReturn$5(this, _UpdatingOpcode2.call(this));

            _this2.target = target;
            _this2.type = 'jump-if-not-modified';
            _this2.tag = tag;
            _this2.lastRevision = tag.value();
            return _this2;
        }

        JumpIfNotModifiedOpcode.prototype.evaluate = function evaluate(vm) {
            var tag = this.tag,
                target = this.target,
                lastRevision = this.lastRevision;

            if (!vm.alwaysRevalidate && tag.validate(lastRevision)) {
                vm.goto(target);
            }
        };

        JumpIfNotModifiedOpcode.prototype.didModify = function didModify() {
            this.lastRevision = this.tag.value();
        };

        JumpIfNotModifiedOpcode.prototype.toJSON = function toJSON() {
            return {
                args: [JSON.stringify(this.target.inspect())],
                guid: this._guid,
                type: this.type
            };
        };

        return JumpIfNotModifiedOpcode;
    }(UpdatingOpcode);
    var DidModifyOpcode = function (_UpdatingOpcode3) {
        _inherits$5(DidModifyOpcode, _UpdatingOpcode3);

        function DidModifyOpcode(target) {
            _classCallCheck$6(this, DidModifyOpcode);

            var _this3 = _possibleConstructorReturn$5(this, _UpdatingOpcode3.call(this));

            _this3.target = target;
            _this3.type = 'did-modify';
            _this3.tag = _reference2.CONSTANT_TAG;
            return _this3;
        }

        DidModifyOpcode.prototype.evaluate = function evaluate() {
            this.target.didModify();
        };

        return DidModifyOpcode;
    }(UpdatingOpcode);
    var LabelOpcode = function () {
        function LabelOpcode(label) {
            _classCallCheck$6(this, LabelOpcode);

            this.tag = _reference2.CONSTANT_TAG;
            this.type = 'label';
            this.label = null;
            this.prev = null;
            this.next = null;
            (0, _util.initializeGuid)(this);
            this.label = label;
        }

        LabelOpcode.prototype.evaluate = function evaluate() {};

        LabelOpcode.prototype.inspect = function inspect$$1() {
            return this.label + ' [' + this._guid + ']';
        };

        LabelOpcode.prototype.toJSON = function toJSON() {
            return {
                args: [JSON.stringify(this.inspect())],
                guid: this._guid,
                type: this.type
            };
        };

        return LabelOpcode;
    }();

    function _defaults$4(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$4(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$4(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$4(subClass, superClass);
    }

    function _classCallCheck$5(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    APPEND_OPCODES.add(24 /* Text */, function (vm, _ref) {
        var text = _ref.op1;

        vm.elements().appendText(vm.constants.getString(text));
    });
    APPEND_OPCODES.add(25 /* Comment */, function (vm, _ref2) {
        var text = _ref2.op1;

        vm.elements().appendComment(vm.constants.getString(text));
    });
    APPEND_OPCODES.add(27 /* OpenElement */, function (vm, _ref3) {
        var tag = _ref3.op1;

        vm.elements().openElement(vm.constants.getString(tag));
    });
    APPEND_OPCODES.add(28 /* OpenElementWithOperations */, function (vm, _ref4) {
        var tag = _ref4.op1;

        var tagName = vm.constants.getString(tag);
        var operations = vm.stack.pop();
        vm.elements().openElement(tagName, operations);
    });
    APPEND_OPCODES.add(29 /* OpenDynamicElement */, function (vm) {
        var operations = vm.stack.pop();
        var tagName = vm.stack.pop().value();
        vm.elements().openElement(tagName, operations);
    });
    APPEND_OPCODES.add(36 /* PushRemoteElement */, function (vm) {
        var elementRef = vm.stack.pop();
        var nextSiblingRef = vm.stack.pop();
        var element = void 0;
        var nextSibling = void 0;
        if ((0, _reference2.isConst)(elementRef)) {
            element = elementRef.value();
        } else {
            var cache = new _reference2.ReferenceCache(elementRef);
            element = cache.peek();
            vm.updateWith(new Assert(cache));
        }
        if ((0, _reference2.isConst)(nextSiblingRef)) {
            nextSibling = nextSiblingRef.value();
        } else {
            var _cache = new _reference2.ReferenceCache(nextSiblingRef);
            nextSibling = _cache.peek();
            vm.updateWith(new Assert(_cache));
        }
        vm.elements().pushRemoteElement(element, nextSibling);
    });
    APPEND_OPCODES.add(37 /* PopRemoteElement */, function (vm) {
        return vm.elements().popRemoteElement();
    });

    var ClassList = function () {
        function ClassList() {
            _classCallCheck$5(this, ClassList);

            this.list = null;
            this.isConst = true;
        }

        ClassList.prototype.append = function append(reference) {
            var list = this.list,
                isConst$$1 = this.isConst;

            if (list === null) list = this.list = [];
            list.push(reference);
            this.isConst = isConst$$1 && (0, _reference2.isConst)(reference);
        };

        ClassList.prototype.toReference = function toReference() {
            var list = this.list,
                isConst$$1 = this.isConst;

            if (!list) return NULL_REFERENCE;
            if (isConst$$1) return PrimitiveReference.create(toClassName(list));
            return new ClassListReference(list);
        };

        return ClassList;
    }();

    var ClassListReference = function (_CachedReference) {
        _inherits$4(ClassListReference, _CachedReference);

        function ClassListReference(list) {
            _classCallCheck$5(this, ClassListReference);

            var _this = _possibleConstructorReturn$4(this, _CachedReference.call(this));

            _this.list = [];
            _this.tag = (0, _reference2.combineTagged)(list);
            _this.list = list;
            return _this;
        }

        ClassListReference.prototype.compute = function compute() {
            return toClassName(this.list);
        };

        return ClassListReference;
    }(_reference2.CachedReference);

    function toClassName(list) {
        var ret = [];
        for (var i = 0; i < list.length; i++) {
            var value = list[i].value();
            if (value !== false && value !== null && value !== undefined) ret.push(value);
        }
        return ret.length === 0 ? null : ret.join(' ');
    }
    var SimpleElementOperations = function () {
        function SimpleElementOperations(env) {
            _classCallCheck$5(this, SimpleElementOperations);

            this.env = env;
            this.opcodes = null;
            this.classList = null;
        }

        SimpleElementOperations.prototype.addStaticAttribute = function addStaticAttribute(element, name, value) {
            if (name === 'class') {
                this.addClass(PrimitiveReference.create(value));
            } else {
                this.env.getAppendOperations().setAttribute(element, name, value);
            }
        };

        SimpleElementOperations.prototype.addStaticAttributeNS = function addStaticAttributeNS(element, namespace, name, value) {
            this.env.getAppendOperations().setAttribute(element, name, value, namespace);
        };

        SimpleElementOperations.prototype.addDynamicAttribute = function addDynamicAttribute(element, name, reference, isTrusting) {
            if (name === 'class') {
                this.addClass(reference);
            } else {
                var attributeManager = this.env.attributeFor(element, name, isTrusting);
                var attribute = new DynamicAttribute(element, attributeManager, name, reference);
                this.addAttribute(attribute);
            }
        };

        SimpleElementOperations.prototype.addDynamicAttributeNS = function addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {
            var attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);
            var nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);
            this.addAttribute(nsAttribute);
        };

        SimpleElementOperations.prototype.flush = function flush(element, vm) {
            var env = vm.env;
            var opcodes = this.opcodes,
                classList = this.classList;

            for (var i = 0; opcodes && i < opcodes.length; i++) {
                vm.updateWith(opcodes[i]);
            }
            if (classList) {
                var attributeManager = env.attributeFor(element, 'class', false);
                var attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());
                var opcode = attribute.flush(env);
                if (opcode) {
                    vm.updateWith(opcode);
                }
            }
            this.opcodes = null;
            this.classList = null;
        };

        SimpleElementOperations.prototype.addClass = function addClass(reference) {
            var classList = this.classList;

            if (!classList) {
                classList = this.classList = new ClassList();
            }
            classList.append(reference);
        };

        SimpleElementOperations.prototype.addAttribute = function addAttribute(attribute) {
            var opcode = attribute.flush(this.env);
            if (opcode) {
                var opcodes = this.opcodes;

                if (!opcodes) {
                    opcodes = this.opcodes = [];
                }
                opcodes.push(opcode);
            }
        };

        return SimpleElementOperations;
    }();
    var ComponentElementOperations = function () {
        function ComponentElementOperations(env) {
            _classCallCheck$5(this, ComponentElementOperations);

            this.env = env;
            this.attributeNames = null;
            this.attributes = null;
            this.classList = null;
        }

        ComponentElementOperations.prototype.addStaticAttribute = function addStaticAttribute(element, name, value) {
            if (name === 'class') {
                this.addClass(PrimitiveReference.create(value));
            } else if (this.shouldAddAttribute(name)) {
                this.addAttribute(name, new StaticAttribute(element, name, value));
            }
        };

        ComponentElementOperations.prototype.addStaticAttributeNS = function addStaticAttributeNS(element, namespace, name, value) {
            if (this.shouldAddAttribute(name)) {
                this.addAttribute(name, new StaticAttribute(element, name, value, namespace));
            }
        };

        ComponentElementOperations.prototype.addDynamicAttribute = function addDynamicAttribute(element, name, reference, isTrusting) {
            if (name === 'class') {
                this.addClass(reference);
            } else if (this.shouldAddAttribute(name)) {
                var attributeManager = this.env.attributeFor(element, name, isTrusting);
                var attribute = new DynamicAttribute(element, attributeManager, name, reference);
                this.addAttribute(name, attribute);
            }
        };

        ComponentElementOperations.prototype.addDynamicAttributeNS = function addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {
            if (this.shouldAddAttribute(name)) {
                var attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);
                var nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);
                this.addAttribute(name, nsAttribute);
            }
        };

        ComponentElementOperations.prototype.flush = function flush(element, vm) {
            var env = this.env;
            var attributes = this.attributes,
                classList = this.classList;

            for (var i = 0; attributes && i < attributes.length; i++) {
                var opcode = attributes[i].flush(env);
                if (opcode) {
                    vm.updateWith(opcode);
                }
            }
            if (classList) {
                var attributeManager = env.attributeFor(element, 'class', false);
                var attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());
                var _opcode = attribute.flush(env);
                if (_opcode) {
                    vm.updateWith(_opcode);
                }
            }
        };

        ComponentElementOperations.prototype.shouldAddAttribute = function shouldAddAttribute(name) {
            return !this.attributeNames || this.attributeNames.indexOf(name) === -1;
        };

        ComponentElementOperations.prototype.addClass = function addClass(reference) {
            var classList = this.classList;

            if (!classList) {
                classList = this.classList = new ClassList();
            }
            classList.append(reference);
        };

        ComponentElementOperations.prototype.addAttribute = function addAttribute(name, attribute) {
            var attributeNames = this.attributeNames,
                attributes = this.attributes;

            if (!attributeNames) {
                attributeNames = this.attributeNames = [];
                attributes = this.attributes = [];
            }
            attributeNames.push(name);
            attributes.push(attribute);
        };

        return ComponentElementOperations;
    }();
    APPEND_OPCODES.add(33 /* FlushElement */, function (vm) {
        var stack = vm.elements();
        var action = 'FlushElementOpcode#evaluate';
        stack.expectOperations(action).flush(stack.expectConstructing(action), vm);
        stack.flushElement();
    });
    APPEND_OPCODES.add(34 /* CloseElement */, function (vm) {
        return vm.elements().closeElement();
    });
    APPEND_OPCODES.add(30 /* StaticAttr */, function (vm, _ref5) {
        var _name = _ref5.op1,
            _value = _ref5.op2,
            _namespace = _ref5.op3;

        var name = vm.constants.getString(_name);
        var value = vm.constants.getString(_value);
        if (_namespace) {
            var namespace = vm.constants.getString(_namespace);
            vm.elements().setStaticAttributeNS(namespace, name, value);
        } else {
            vm.elements().setStaticAttribute(name, value);
        }
    });
    APPEND_OPCODES.add(35 /* Modifier */, function (vm, _ref6) {
        var _manager = _ref6.op1;

        var manager = vm.constants.getOther(_manager);
        var stack = vm.stack;
        var args = stack.pop();
        var tag = args.tag;

        var _vm$elements = vm.elements(),
            element = _vm$elements.constructing,
            updateOperations = _vm$elements.updateOperations;

        var dynamicScope = vm.dynamicScope();
        var modifier = manager.create(element, args, dynamicScope, updateOperations);
        args.clear();
        vm.env.scheduleInstallModifier(modifier, manager);
        var destructor = manager.getDestructor(modifier);
        if (destructor) {
            vm.newDestroyable(destructor);
        }
        vm.updateWith(new UpdateModifierOpcode(tag, manager, modifier));
    });
    var UpdateModifierOpcode = function (_UpdatingOpcode) {
        _inherits$4(UpdateModifierOpcode, _UpdatingOpcode);

        function UpdateModifierOpcode(tag, manager, modifier) {
            _classCallCheck$5(this, UpdateModifierOpcode);

            var _this2 = _possibleConstructorReturn$4(this, _UpdatingOpcode.call(this));

            _this2.tag = tag;
            _this2.manager = manager;
            _this2.modifier = modifier;
            _this2.type = 'update-modifier';
            _this2.lastUpdated = tag.value();
            return _this2;
        }

        UpdateModifierOpcode.prototype.evaluate = function evaluate(vm) {
            var manager = this.manager,
                modifier = this.modifier,
                tag = this.tag,
                lastUpdated = this.lastUpdated;

            if (!tag.validate(lastUpdated)) {
                vm.env.scheduleUpdateModifier(modifier, manager);
                this.lastUpdated = tag.value();
            }
        };

        UpdateModifierOpcode.prototype.toJSON = function toJSON() {
            return {
                guid: this._guid,
                type: this.type
            };
        };

        return UpdateModifierOpcode;
    }(UpdatingOpcode);
    var StaticAttribute = function () {
        function StaticAttribute(element, name, value, namespace) {
            _classCallCheck$5(this, StaticAttribute);

            this.element = element;
            this.name = name;
            this.value = value;
            this.namespace = namespace;
        }

        StaticAttribute.prototype.flush = function flush(env) {
            env.getAppendOperations().setAttribute(this.element, this.name, this.value, this.namespace);
            return null;
        };

        return StaticAttribute;
    }();
    var DynamicAttribute = function () {
        function DynamicAttribute(element, attributeManager, name, reference, namespace) {
            _classCallCheck$5(this, DynamicAttribute);

            this.element = element;
            this.attributeManager = attributeManager;
            this.name = name;
            this.reference = reference;
            this.namespace = namespace;
            this.cache = null;
            this.tag = reference.tag;
        }

        DynamicAttribute.prototype.patch = function patch(env) {
            var element = this.element,
                cache = this.cache;

            var value = cache.revalidate();
            if ((0, _reference2.isModified)(value)) {
                this.attributeManager.updateAttribute(env, element, value, this.namespace);
            }
        };

        DynamicAttribute.prototype.flush = function flush(env) {
            var reference = this.reference,
                element = this.element;

            if ((0, _reference2.isConst)(reference)) {
                var value = reference.value();
                this.attributeManager.setAttribute(env, element, value, this.namespace);
                return null;
            } else {
                var cache = this.cache = new _reference2.ReferenceCache(reference);
                var _value2 = cache.peek();
                this.attributeManager.setAttribute(env, element, _value2, this.namespace);
                return new PatchElementOpcode(this);
            }
        };

        DynamicAttribute.prototype.toJSON = function toJSON() {
            var element = this.element,
                namespace = this.namespace,
                name = this.name,
                cache = this.cache;

            var formattedElement = formatElement(element);
            var lastValue = cache.peek();
            if (namespace) {
                return {
                    element: formattedElement,
                    lastValue: lastValue,
                    name: name,
                    namespace: namespace,
                    type: 'attribute'
                };
            }
            return {
                element: formattedElement,
                lastValue: lastValue,
                name: name,
                namespace: namespace === undefined ? null : namespace,
                type: 'attribute'
            };
        };

        return DynamicAttribute;
    }();
    function formatElement(element) {
        return JSON.stringify('<' + element.tagName.toLowerCase() + ' />');
    }
    APPEND_OPCODES.add(32 /* DynamicAttrNS */, function (vm, _ref7) {
        var _name = _ref7.op1,
            _namespace = _ref7.op2,
            trusting = _ref7.op3;

        var name = vm.constants.getString(_name);
        var namespace = vm.constants.getString(_namespace);
        var reference = vm.stack.pop();
        vm.elements().setDynamicAttributeNS(namespace, name, reference, !!trusting);
    });
    APPEND_OPCODES.add(31 /* DynamicAttr */, function (vm, _ref8) {
        var _name = _ref8.op1,
            trusting = _ref8.op2;

        var name = vm.constants.getString(_name);
        var reference = vm.stack.pop();
        vm.elements().setDynamicAttribute(name, reference, !!trusting);
    });
    var PatchElementOpcode = function (_UpdatingOpcode2) {
        _inherits$4(PatchElementOpcode, _UpdatingOpcode2);

        function PatchElementOpcode(operation) {
            _classCallCheck$5(this, PatchElementOpcode);

            var _this3 = _possibleConstructorReturn$4(this, _UpdatingOpcode2.call(this));

            _this3.type = 'patch-element';
            _this3.tag = operation.tag;
            _this3.operation = operation;
            return _this3;
        }

        PatchElementOpcode.prototype.evaluate = function evaluate(vm) {
            this.operation.patch(vm.env);
        };

        PatchElementOpcode.prototype.toJSON = function toJSON() {
            var _guid = this._guid,
                type = this.type,
                operation = this.operation;

            return {
                details: operation.toJSON(),
                guid: _guid,
                type: type
            };
        };

        return PatchElementOpcode;
    }(UpdatingOpcode);

    function _defaults$3(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$3(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$3(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$3(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$3(subClass, superClass);
    }

    APPEND_OPCODES.add(56 /* PushComponentManager */, function (vm, _ref) {
        var _definition = _ref.op1;

        var definition = vm.constants.getOther(_definition);
        var stack = vm.stack;
        stack.push({ definition: definition, manager: definition.manager, component: null });
    });
    APPEND_OPCODES.add(57 /* PushDynamicComponentManager */, function (vm) {
        var stack = vm.stack;
        var reference = stack.pop();
        var cache = (0, _reference2.isConst)(reference) ? undefined : new _reference2.ReferenceCache(reference);
        var definition = cache ? cache.peek() : reference.value();
        stack.push({ definition: definition, manager: definition.manager, component: null });
        if (cache) {
            vm.updateWith(new Assert(cache));
        }
    });
    APPEND_OPCODES.add(58 /* PushArgs */, function (vm, _ref2) {
        var synthetic = _ref2.op1;

        var stack = vm.stack;
        ARGS.setup(stack, !!synthetic);
        stack.push(ARGS);
    });
    APPEND_OPCODES.add(59 /* PrepareArgs */, function (vm, _ref3) {
        var _state = _ref3.op1;

        var stack = vm.stack;

        var _vm$fetchValue = vm.fetchValue(_state),
            definition = _vm$fetchValue.definition,
            manager = _vm$fetchValue.manager;

        var args = stack.pop();
        var preparedArgs = manager.prepareArgs(definition, args);
        if (preparedArgs) {
            args.clear();
            var positional = preparedArgs.positional,
                named = preparedArgs.named;

            var positionalCount = positional.length;
            for (var i = 0; i < positionalCount; i++) {
                stack.push(positional[i]);
            }
            stack.push(positionalCount);
            var names = Object.keys(named);
            var namedCount = names.length;
            var atNames = [];
            for (var _i = 0; _i < namedCount; _i++) {
                var value = named[names[_i]];
                var atName = '@' + names[_i];
                stack.push(value);
                atNames.push(atName);
            }
            stack.push(atNames);
            args.setup(stack, false);
        }
        stack.push(args);
    });
    APPEND_OPCODES.add(60 /* CreateComponent */, function (vm, _ref4) {
        var _vm$fetchValue2;

        var flags = _ref4.op1,
            _state = _ref4.op2;

        var definition = void 0;
        var manager = void 0;
        var args = vm.stack.pop();
        var dynamicScope = vm.dynamicScope();
        var state = (_vm$fetchValue2 = vm.fetchValue(_state), definition = _vm$fetchValue2.definition, manager = _vm$fetchValue2.manager, _vm$fetchValue2);
        var hasDefaultBlock = flags & 1;
        var component = manager.create(vm.env, definition, args, dynamicScope, vm.getSelf(), !!hasDefaultBlock);
        state.component = component;
        vm.updateWith(new UpdateComponentOpcode(args.tag, definition.name, component, manager, dynamicScope));
    });
    APPEND_OPCODES.add(61 /* RegisterComponentDestructor */, function (vm, _ref5) {
        var _state = _ref5.op1;

        var _vm$fetchValue3 = vm.fetchValue(_state),
            manager = _vm$fetchValue3.manager,
            component = _vm$fetchValue3.component;

        var destructor = manager.getDestructor(component);
        if (destructor) vm.newDestroyable(destructor);
    });
    APPEND_OPCODES.add(65 /* BeginComponentTransaction */, function (vm) {
        vm.beginCacheGroup();
        vm.elements().pushSimpleBlock();
    });
    APPEND_OPCODES.add(62 /* PushComponentOperations */, function (vm) {
        vm.stack.push(new ComponentElementOperations(vm.env));
    });
    APPEND_OPCODES.add(67 /* DidCreateElement */, function (vm, _ref6) {
        var _state = _ref6.op1;

        var _vm$fetchValue4 = vm.fetchValue(_state),
            manager = _vm$fetchValue4.manager,
            component = _vm$fetchValue4.component;

        var action = 'DidCreateElementOpcode#evaluate';
        manager.didCreateElement(component, vm.elements().expectConstructing(action), vm.elements().expectOperations(action));
    });
    APPEND_OPCODES.add(63 /* GetComponentSelf */, function (vm, _ref7) {
        var _state = _ref7.op1;

        var state = vm.fetchValue(_state);
        vm.stack.push(state.manager.getSelf(state.component));
    });
    APPEND_OPCODES.add(64 /* GetComponentLayout */, function (vm, _ref8) {
        var _state = _ref8.op1;

        var _vm$fetchValue5 = vm.fetchValue(_state),
            manager = _vm$fetchValue5.manager,
            definition = _vm$fetchValue5.definition,
            component = _vm$fetchValue5.component;

        vm.stack.push(manager.layoutFor(definition, component, vm.env));
    });
    APPEND_OPCODES.add(68 /* DidRenderLayout */, function (vm, _ref9) {
        var _state = _ref9.op1;

        var _vm$fetchValue6 = vm.fetchValue(_state),
            manager = _vm$fetchValue6.manager,
            component = _vm$fetchValue6.component;

        var bounds = vm.elements().popBlock();
        manager.didRenderLayout(component, bounds);
        vm.env.didCreate(component, manager);
        vm.updateWith(new DidUpdateLayoutOpcode(manager, component, bounds));
    });
    APPEND_OPCODES.add(66 /* CommitComponentTransaction */, function (vm) {
        return vm.commitCacheGroup();
    });
    var UpdateComponentOpcode = function (_UpdatingOpcode) {
        _inherits$3(UpdateComponentOpcode, _UpdatingOpcode);

        function UpdateComponentOpcode(tag, name, component, manager, dynamicScope) {
            _classCallCheck$3(this, UpdateComponentOpcode);

            var _this = _possibleConstructorReturn$3(this, _UpdatingOpcode.call(this));

            _this.name = name;
            _this.component = component;
            _this.manager = manager;
            _this.dynamicScope = dynamicScope;
            _this.type = 'update-component';
            var componentTag = manager.getTag(component);
            if (componentTag) {
                _this.tag = (0, _reference2.combine)([tag, componentTag]);
            } else {
                _this.tag = tag;
            }
            return _this;
        }

        UpdateComponentOpcode.prototype.evaluate = function evaluate(_vm) {
            var component = this.component,
                manager = this.manager,
                dynamicScope = this.dynamicScope;

            manager.update(component, dynamicScope);
        };

        UpdateComponentOpcode.prototype.toJSON = function toJSON() {
            return {
                args: [JSON.stringify(this.name)],
                guid: this._guid,
                type: this.type
            };
        };

        return UpdateComponentOpcode;
    }(UpdatingOpcode);
    var DidUpdateLayoutOpcode = function (_UpdatingOpcode2) {
        _inherits$3(DidUpdateLayoutOpcode, _UpdatingOpcode2);

        function DidUpdateLayoutOpcode(manager, component, bounds) {
            _classCallCheck$3(this, DidUpdateLayoutOpcode);

            var _this2 = _possibleConstructorReturn$3(this, _UpdatingOpcode2.call(this));

            _this2.manager = manager;
            _this2.component = component;
            _this2.bounds = bounds;
            _this2.type = 'did-update-layout';
            _this2.tag = _reference2.CONSTANT_TAG;
            return _this2;
        }

        DidUpdateLayoutOpcode.prototype.evaluate = function evaluate(vm) {
            var manager = this.manager,
                component = this.component,
                bounds = this.bounds;

            manager.didUpdateLayout(component, bounds);
            vm.env.didUpdate(component, manager);
        };

        return DidUpdateLayoutOpcode;
    }(UpdatingOpcode);

    function _classCallCheck$8(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Cursor = function Cursor(element, nextSibling) {
        _classCallCheck$8(this, Cursor);

        this.element = element;
        this.nextSibling = nextSibling;
    };

    var ConcreteBounds = function () {
        function ConcreteBounds(parentNode, first, last) {
            _classCallCheck$8(this, ConcreteBounds);

            this.parentNode = parentNode;
            this.first = first;
            this.last = last;
        }

        ConcreteBounds.prototype.parentElement = function parentElement() {
            return this.parentNode;
        };

        ConcreteBounds.prototype.firstNode = function firstNode() {
            return this.first;
        };

        ConcreteBounds.prototype.lastNode = function lastNode() {
            return this.last;
        };

        return ConcreteBounds;
    }();
    var SingleNodeBounds = function () {
        function SingleNodeBounds(parentNode, node) {
            _classCallCheck$8(this, SingleNodeBounds);

            this.parentNode = parentNode;
            this.node = node;
        }

        SingleNodeBounds.prototype.parentElement = function parentElement() {
            return this.parentNode;
        };

        SingleNodeBounds.prototype.firstNode = function firstNode() {
            return this.node;
        };

        SingleNodeBounds.prototype.lastNode = function lastNode() {
            return this.node;
        };

        return SingleNodeBounds;
    }();

    function single(parent, node) {
        return new SingleNodeBounds(parent, node);
    }
    function move(bounds, reference) {
        var parent = bounds.parentElement();
        var first = bounds.firstNode();
        var last = bounds.lastNode();
        var node = first;
        while (node) {
            var next = node.nextSibling;
            parent.insertBefore(node, reference);
            if (node === last) return next;
            node = next;
        }
        return null;
    }
    function clear(bounds) {
        var parent = bounds.parentElement();
        var first = bounds.firstNode();
        var last = bounds.lastNode();
        var node = first;
        while (node) {
            var next = node.nextSibling;
            parent.removeChild(node);
            if (node === last) return next;
            node = next;
        }
        return null;
    }

    function _defaults$7(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$7(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$7(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$7(subClass, superClass);
    }

    function _classCallCheck$9(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var First = function () {
        function First(node) {
            _classCallCheck$9(this, First);

            this.node = node;
        }

        First.prototype.firstNode = function firstNode() {
            return this.node;
        };

        return First;
    }();

    var Last = function () {
        function Last(node) {
            _classCallCheck$9(this, Last);

            this.node = node;
        }

        Last.prototype.lastNode = function lastNode() {
            return this.node;
        };

        return Last;
    }();

    var Fragment = function () {
        function Fragment(bounds$$1) {
            _classCallCheck$9(this, Fragment);

            this.bounds = bounds$$1;
        }

        Fragment.prototype.parentElement = function parentElement() {
            return this.bounds.parentElement();
        };

        Fragment.prototype.firstNode = function firstNode() {
            return this.bounds.firstNode();
        };

        Fragment.prototype.lastNode = function lastNode() {
            return this.bounds.lastNode();
        };

        Fragment.prototype.update = function update(bounds$$1) {
            this.bounds = bounds$$1;
        };

        return Fragment;
    }();
    var ElementStack = function () {
        function ElementStack(env, parentNode, nextSibling) {
            _classCallCheck$9(this, ElementStack);

            this.constructing = null;
            this.operations = null;
            this.elementStack = new _util.Stack();
            this.nextSiblingStack = new _util.Stack();
            this.blockStack = new _util.Stack();
            this.env = env;
            this.dom = env.getAppendOperations();
            this.updateOperations = env.getDOM();
            this.element = parentNode;
            this.nextSibling = nextSibling;
            this.defaultOperations = new SimpleElementOperations(env);
            this.pushSimpleBlock();
            this.elementStack.push(this.element);
            this.nextSiblingStack.push(this.nextSibling);
        }

        ElementStack.forInitialRender = function forInitialRender(env, parentNode, nextSibling) {
            return new ElementStack(env, parentNode, nextSibling);
        };

        ElementStack.resume = function resume(env, tracker, nextSibling) {
            var parentNode = tracker.parentElement();
            var stack = new ElementStack(env, parentNode, nextSibling);
            stack.pushBlockTracker(tracker);
            return stack;
        };

        ElementStack.prototype.expectConstructing = function expectConstructing(method) {
            return this.constructing;
        };

        ElementStack.prototype.expectOperations = function expectOperations(method) {
            return this.operations;
        };

        ElementStack.prototype.block = function block() {
            return this.blockStack.current;
        };

        ElementStack.prototype.popElement = function popElement() {
            var elementStack = this.elementStack,
                nextSiblingStack = this.nextSiblingStack;

            var topElement = elementStack.pop();
            nextSiblingStack.pop();
            // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);
            this.element = elementStack.current;
            this.nextSibling = nextSiblingStack.current;
            return topElement;
        };

        ElementStack.prototype.pushSimpleBlock = function pushSimpleBlock() {
            var tracker = new SimpleBlockTracker(this.element);
            this.pushBlockTracker(tracker);
            return tracker;
        };

        ElementStack.prototype.pushUpdatableBlock = function pushUpdatableBlock() {
            var tracker = new UpdatableBlockTracker(this.element);
            this.pushBlockTracker(tracker);
            return tracker;
        };

        ElementStack.prototype.pushBlockTracker = function pushBlockTracker(tracker) {
            var isRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var current = this.blockStack.current;
            if (current !== null) {
                current.newDestroyable(tracker);
                if (!isRemote) {
                    current.newBounds(tracker);
                }
            }
            this.blockStack.push(tracker);
            return tracker;
        };

        ElementStack.prototype.pushBlockList = function pushBlockList(list) {
            var tracker = new BlockListTracker(this.element, list);
            var current = this.blockStack.current;
            if (current !== null) {
                current.newDestroyable(tracker);
                current.newBounds(tracker);
            }
            this.blockStack.push(tracker);
            return tracker;
        };

        ElementStack.prototype.popBlock = function popBlock() {
            this.block().finalize(this);
            return this.blockStack.pop();
        };

        ElementStack.prototype.openElement = function openElement(tag, _operations) {
            // workaround argument.length transpile of arg initializer
            var operations = _operations === undefined ? this.defaultOperations : _operations;
            var element = this.dom.createElement(tag, this.element);
            this.constructing = element;
            this.operations = operations;
            return element;
        };

        ElementStack.prototype.flushElement = function flushElement() {
            var parent = this.element;
            var element = this.constructing;
            this.dom.insertBefore(parent, element, this.nextSibling);
            this.constructing = null;
            this.operations = null;
            this.pushElement(element, null);
            this.block().openElement(element);
        };

        ElementStack.prototype.pushRemoteElement = function pushRemoteElement(element) {
            var nextSibling = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            this.pushElement(element, nextSibling);
            var tracker = new RemoteBlockTracker(element);
            this.pushBlockTracker(tracker, true);
        };

        ElementStack.prototype.popRemoteElement = function popRemoteElement() {
            this.popBlock();
            this.popElement();
        };

        ElementStack.prototype.pushElement = function pushElement(element, nextSibling) {
            this.element = element;
            this.elementStack.push(element);
            // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);
            this.nextSibling = nextSibling;
            this.nextSiblingStack.push(nextSibling);
        };

        ElementStack.prototype.newDestroyable = function newDestroyable(d) {
            this.block().newDestroyable(d);
        };

        ElementStack.prototype.newBounds = function newBounds(bounds$$1) {
            this.block().newBounds(bounds$$1);
        };

        ElementStack.prototype.appendText = function appendText(string) {
            var dom = this.dom;

            var text = dom.createTextNode(string);
            dom.insertBefore(this.element, text, this.nextSibling);
            this.block().newNode(text);
            return text;
        };

        ElementStack.prototype.appendComment = function appendComment(string) {
            var dom = this.dom;

            var comment = dom.createComment(string);
            dom.insertBefore(this.element, comment, this.nextSibling);
            this.block().newNode(comment);
            return comment;
        };

        ElementStack.prototype.setStaticAttribute = function setStaticAttribute(name, value) {
            this.expectOperations('setStaticAttribute').addStaticAttribute(this.expectConstructing('setStaticAttribute'), name, value);
        };

        ElementStack.prototype.setStaticAttributeNS = function setStaticAttributeNS(namespace, name, value) {
            this.expectOperations('setStaticAttributeNS').addStaticAttributeNS(this.expectConstructing('setStaticAttributeNS'), namespace, name, value);
        };

        ElementStack.prototype.setDynamicAttribute = function setDynamicAttribute(name, reference, isTrusting) {
            this.expectOperations('setDynamicAttribute').addDynamicAttribute(this.expectConstructing('setDynamicAttribute'), name, reference, isTrusting);
        };

        ElementStack.prototype.setDynamicAttributeNS = function setDynamicAttributeNS(namespace, name, reference, isTrusting) {
            this.expectOperations('setDynamicAttributeNS').addDynamicAttributeNS(this.expectConstructing('setDynamicAttributeNS'), namespace, name, reference, isTrusting);
        };

        ElementStack.prototype.closeElement = function closeElement() {
            this.block().closeElement();
            this.popElement();
        };

        return ElementStack;
    }();
    var SimpleBlockTracker = function () {
        function SimpleBlockTracker(parent) {
            _classCallCheck$9(this, SimpleBlockTracker);

            this.parent = parent;
            this.first = null;
            this.last = null;
            this.destroyables = null;
            this.nesting = 0;
        }

        SimpleBlockTracker.prototype.destroy = function destroy() {
            var destroyables = this.destroyables;

            if (destroyables && destroyables.length) {
                for (var i = 0; i < destroyables.length; i++) {
                    destroyables[i].destroy();
                }
            }
        };

        SimpleBlockTracker.prototype.parentElement = function parentElement() {
            return this.parent;
        };

        SimpleBlockTracker.prototype.firstNode = function firstNode() {
            return this.first && this.first.firstNode();
        };

        SimpleBlockTracker.prototype.lastNode = function lastNode() {
            return this.last && this.last.lastNode();
        };

        SimpleBlockTracker.prototype.openElement = function openElement(element) {
            this.newNode(element);
            this.nesting++;
        };

        SimpleBlockTracker.prototype.closeElement = function closeElement() {
            this.nesting--;
        };

        SimpleBlockTracker.prototype.newNode = function newNode(node) {
            if (this.nesting !== 0) return;
            if (!this.first) {
                this.first = new First(node);
            }
            this.last = new Last(node);
        };

        SimpleBlockTracker.prototype.newBounds = function newBounds(bounds$$1) {
            if (this.nesting !== 0) return;
            if (!this.first) {
                this.first = bounds$$1;
            }
            this.last = bounds$$1;
        };

        SimpleBlockTracker.prototype.newDestroyable = function newDestroyable(d) {
            this.destroyables = this.destroyables || [];
            this.destroyables.push(d);
        };

        SimpleBlockTracker.prototype.finalize = function finalize(stack) {
            if (!this.first) {
                stack.appendComment('');
            }
        };

        return SimpleBlockTracker;
    }();

    var RemoteBlockTracker = function (_SimpleBlockTracker) {
        _inherits$7(RemoteBlockTracker, _SimpleBlockTracker);

        function RemoteBlockTracker() {
            _classCallCheck$9(this, RemoteBlockTracker);

            return _possibleConstructorReturn$7(this, _SimpleBlockTracker.apply(this, arguments));
        }

        RemoteBlockTracker.prototype.destroy = function destroy() {
            _SimpleBlockTracker.prototype.destroy.call(this);
            clear(this);
        };

        return RemoteBlockTracker;
    }(SimpleBlockTracker);

    var UpdatableBlockTracker = function (_SimpleBlockTracker2) {
        _inherits$7(UpdatableBlockTracker, _SimpleBlockTracker2);

        function UpdatableBlockTracker() {
            _classCallCheck$9(this, UpdatableBlockTracker);

            return _possibleConstructorReturn$7(this, _SimpleBlockTracker2.apply(this, arguments));
        }

        UpdatableBlockTracker.prototype.reset = function reset(env) {
            var destroyables = this.destroyables;

            if (destroyables && destroyables.length) {
                for (var i = 0; i < destroyables.length; i++) {
                    env.didDestroy(destroyables[i]);
                }
            }
            var nextSibling = clear(this);
            this.first = null;
            this.last = null;
            this.destroyables = null;
            this.nesting = 0;
            return nextSibling;
        };

        return UpdatableBlockTracker;
    }(SimpleBlockTracker);

    var BlockListTracker = function () {
        function BlockListTracker(parent, boundList) {
            _classCallCheck$9(this, BlockListTracker);

            this.parent = parent;
            this.boundList = boundList;
            this.parent = parent;
            this.boundList = boundList;
        }

        BlockListTracker.prototype.destroy = function destroy() {
            this.boundList.forEachNode(function (node) {
                return node.destroy();
            });
        };

        BlockListTracker.prototype.parentElement = function parentElement() {
            return this.parent;
        };

        BlockListTracker.prototype.firstNode = function firstNode() {
            var head = this.boundList.head();
            return head && head.firstNode();
        };

        BlockListTracker.prototype.lastNode = function lastNode() {
            var tail = this.boundList.tail();
            return tail && tail.lastNode();
        };

        BlockListTracker.prototype.openElement = function openElement(_element) {
            (0, _util.assert)(false, 'Cannot openElement directly inside a block list');
        };

        BlockListTracker.prototype.closeElement = function closeElement() {
            (0, _util.assert)(false, 'Cannot closeElement directly inside a block list');
        };

        BlockListTracker.prototype.newNode = function newNode(_node) {
            (0, _util.assert)(false, 'Cannot create a new node directly inside a block list');
        };

        BlockListTracker.prototype.newBounds = function newBounds(_bounds) {};

        BlockListTracker.prototype.newDestroyable = function newDestroyable(_d) {};

        BlockListTracker.prototype.finalize = function finalize(_stack) {};

        return BlockListTracker;
    }();

    function _classCallCheck$10(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var COMPONENT_DEFINITION_BRAND = 'COMPONENT DEFINITION [id=e59c754e-61eb-4392-8c4a-2c0ac72bfcd4]';
    function isComponentDefinition(obj) {
        return typeof obj === 'object' && obj !== null && obj[COMPONENT_DEFINITION_BRAND];
    }
    var ComponentDefinition = function ComponentDefinition(name, manager, ComponentClass) {
        _classCallCheck$10(this, ComponentDefinition);

        this[COMPONENT_DEFINITION_BRAND] = true;
        this.name = name;
        this.manager = manager;
        this.ComponentClass = ComponentClass;
    };

    function _defaults$8(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$8(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$8(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$8(subClass, superClass);
    }

    function _classCallCheck$11(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function isSafeString(value) {
        return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';
    }
    function isNode(value) {
        return typeof value === 'object' && value !== null && typeof value.nodeType === 'number';
    }
    function isString(value) {
        return typeof value === 'string';
    }

    var Upsert = function Upsert(bounds$$1) {
        _classCallCheck$11(this, Upsert);

        this.bounds = bounds$$1;
    };

    function cautiousInsert(dom, cursor, value) {
        if (isString(value)) {
            return TextUpsert.insert(dom, cursor, value);
        }
        if (isSafeString(value)) {
            return SafeStringUpsert.insert(dom, cursor, value);
        }
        if (isNode(value)) {
            return NodeUpsert.insert(dom, cursor, value);
        }
        throw (0, _util.unreachable)();
    }
    function trustingInsert(dom, cursor, value) {
        if (isString(value)) {
            return HTMLUpsert.insert(dom, cursor, value);
        }
        if (isNode(value)) {
            return NodeUpsert.insert(dom, cursor, value);
        }
        throw (0, _util.unreachable)();
    }

    var TextUpsert = function (_Upsert) {
        _inherits$8(TextUpsert, _Upsert);

        TextUpsert.insert = function insert(dom, cursor, value) {
            var textNode = dom.createTextNode(value);
            dom.insertBefore(cursor.element, textNode, cursor.nextSibling);
            var bounds$$1 = new SingleNodeBounds(cursor.element, textNode);
            return new TextUpsert(bounds$$1, textNode);
        };

        function TextUpsert(bounds$$1, textNode) {
            _classCallCheck$11(this, TextUpsert);

            var _this = _possibleConstructorReturn$8(this, _Upsert.call(this, bounds$$1));

            _this.textNode = textNode;
            return _this;
        }

        TextUpsert.prototype.update = function update(_dom, value) {
            if (isString(value)) {
                var textNode = this.textNode;

                textNode.nodeValue = value;
                return true;
            } else {
                return false;
            }
        };

        return TextUpsert;
    }(Upsert);

    var HTMLUpsert = function (_Upsert2) {
        _inherits$8(HTMLUpsert, _Upsert2);

        function HTMLUpsert() {
            _classCallCheck$11(this, HTMLUpsert);

            return _possibleConstructorReturn$8(this, _Upsert2.apply(this, arguments));
        }

        HTMLUpsert.insert = function insert(dom, cursor, value) {
            var bounds$$1 = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, value);
            return new HTMLUpsert(bounds$$1);
        };

        HTMLUpsert.prototype.update = function update(dom, value) {
            if (isString(value)) {
                var bounds$$1 = this.bounds;

                var parentElement = bounds$$1.parentElement();
                var nextSibling = clear(bounds$$1);
                this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, value);
                return true;
            } else {
                return false;
            }
        };

        return HTMLUpsert;
    }(Upsert);

    var SafeStringUpsert = function (_Upsert3) {
        _inherits$8(SafeStringUpsert, _Upsert3);

        function SafeStringUpsert(bounds$$1, lastStringValue) {
            _classCallCheck$11(this, SafeStringUpsert);

            var _this3 = _possibleConstructorReturn$8(this, _Upsert3.call(this, bounds$$1));

            _this3.lastStringValue = lastStringValue;
            return _this3;
        }

        SafeStringUpsert.insert = function insert(dom, cursor, value) {
            var stringValue = value.toHTML();
            var bounds$$1 = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, stringValue);
            return new SafeStringUpsert(bounds$$1, stringValue);
        };

        SafeStringUpsert.prototype.update = function update(dom, value) {
            if (isSafeString(value)) {
                var stringValue = value.toHTML();
                if (stringValue !== this.lastStringValue) {
                    var bounds$$1 = this.bounds;

                    var parentElement = bounds$$1.parentElement();
                    var nextSibling = clear(bounds$$1);
                    this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, stringValue);
                    this.lastStringValue = stringValue;
                }
                return true;
            } else {
                return false;
            }
        };

        return SafeStringUpsert;
    }(Upsert);

    var NodeUpsert = function (_Upsert4) {
        _inherits$8(NodeUpsert, _Upsert4);

        function NodeUpsert() {
            _classCallCheck$11(this, NodeUpsert);

            return _possibleConstructorReturn$8(this, _Upsert4.apply(this, arguments));
        }

        NodeUpsert.insert = function insert(dom, cursor, node) {
            dom.insertBefore(cursor.element, node, cursor.nextSibling);
            return new NodeUpsert(single(cursor.element, node));
        };

        NodeUpsert.prototype.update = function update(dom, value) {
            if (isNode(value)) {
                var bounds$$1 = this.bounds;

                var parentElement = bounds$$1.parentElement();
                var nextSibling = clear(bounds$$1);
                this.bounds = dom.insertNodeBefore(parentElement, value, nextSibling);
                return true;
            } else {
                return false;
            }
        };

        return NodeUpsert;
    }(Upsert);

    function _defaults$6(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$6(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$6(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$6(subClass, superClass);
    }

    function _classCallCheck$7(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    APPEND_OPCODES.add(26 /* DynamicContent */, function (vm, _ref) {
        var append = _ref.op1;

        var opcode = vm.constants.getOther(append);
        opcode.evaluate(vm);
    });
    function isEmpty(value) {
        return value === null || value === undefined || typeof value.toString !== 'function';
    }
    function normalizeTextValue(value) {
        if (isEmpty(value)) {
            return '';
        }
        return String(value);
    }
    function normalizeTrustedValue(value) {
        if (isEmpty(value)) {
            return '';
        }
        if (isString(value)) {
            return value;
        }
        if (isSafeString(value)) {
            return value.toHTML();
        }
        if (isNode(value)) {
            return value;
        }
        return String(value);
    }
    function normalizeValue(value) {
        if (isEmpty(value)) {
            return '';
        }
        if (isString(value)) {
            return value;
        }
        if (isSafeString(value) || isNode(value)) {
            return value;
        }
        return String(value);
    }
    var AppendDynamicOpcode = function () {
        function AppendDynamicOpcode() {
            _classCallCheck$7(this, AppendDynamicOpcode);
        }

        AppendDynamicOpcode.prototype.evaluate = function evaluate(vm) {
            var reference = vm.stack.pop();
            var normalized = this.normalize(reference);
            var value = void 0;
            var cache = void 0;
            if ((0, _reference2.isConst)(reference)) {
                value = normalized.value();
            } else {
                cache = new _reference2.ReferenceCache(normalized);
                value = cache.peek();
            }
            var stack = vm.elements();
            var upsert = this.insert(vm.env.getAppendOperations(), stack, value);
            var bounds$$1 = new Fragment(upsert.bounds);
            stack.newBounds(bounds$$1);
            if (cache /* i.e. !isConst(reference) */) {
                    vm.updateWith(this.updateWith(vm, reference, cache, bounds$$1, upsert));
                }
        };

        return AppendDynamicOpcode;
    }();
    var IsComponentDefinitionReference = function (_ConditionalReference) {
        _inherits$6(IsComponentDefinitionReference, _ConditionalReference);

        function IsComponentDefinitionReference() {
            _classCallCheck$7(this, IsComponentDefinitionReference);

            return _possibleConstructorReturn$6(this, _ConditionalReference.apply(this, arguments));
        }

        IsComponentDefinitionReference.create = function create(inner) {
            return new IsComponentDefinitionReference(inner);
        };

        IsComponentDefinitionReference.prototype.toBool = function toBool(value) {
            return isComponentDefinition(value);
        };

        return IsComponentDefinitionReference;
    }(ConditionalReference);

    var UpdateOpcode = function (_UpdatingOpcode) {
        _inherits$6(UpdateOpcode, _UpdatingOpcode);

        function UpdateOpcode(cache, bounds$$1, upsert) {
            _classCallCheck$7(this, UpdateOpcode);

            var _this2 = _possibleConstructorReturn$6(this, _UpdatingOpcode.call(this));

            _this2.cache = cache;
            _this2.bounds = bounds$$1;
            _this2.upsert = upsert;
            _this2.tag = cache.tag;
            return _this2;
        }

        UpdateOpcode.prototype.evaluate = function evaluate(vm) {
            var value = this.cache.revalidate();
            if ((0, _reference2.isModified)(value)) {
                var bounds$$1 = this.bounds,
                    upsert = this.upsert;
                var dom = vm.dom;

                if (!this.upsert.update(dom, value)) {
                    var cursor = new Cursor(bounds$$1.parentElement(), clear(bounds$$1));
                    upsert = this.upsert = this.insert(vm.env.getAppendOperations(), cursor, value);
                }
                bounds$$1.update(upsert.bounds);
            }
        };

        UpdateOpcode.prototype.toJSON = function toJSON() {
            var guid = this._guid,
                type = this.type,
                cache = this.cache;

            return {
                details: { lastValue: JSON.stringify(cache.peek()) },
                guid: guid,
                type: type
            };
        };

        return UpdateOpcode;
    }(UpdatingOpcode);

    var OptimizedCautiousAppendOpcode = function (_AppendDynamicOpcode) {
        _inherits$6(OptimizedCautiousAppendOpcode, _AppendDynamicOpcode);

        function OptimizedCautiousAppendOpcode() {
            _classCallCheck$7(this, OptimizedCautiousAppendOpcode);

            var _this3 = _possibleConstructorReturn$6(this, _AppendDynamicOpcode.apply(this, arguments));

            _this3.type = 'optimized-cautious-append';
            return _this3;
        }

        OptimizedCautiousAppendOpcode.prototype.normalize = function normalize(reference) {
            return (0, _reference2.map)(reference, normalizeValue);
        };

        OptimizedCautiousAppendOpcode.prototype.insert = function insert(dom, cursor, value) {
            return cautiousInsert(dom, cursor, value);
        };

        OptimizedCautiousAppendOpcode.prototype.updateWith = function updateWith(_vm, _reference, cache, bounds$$1, upsert) {
            return new OptimizedCautiousUpdateOpcode(cache, bounds$$1, upsert);
        };

        return OptimizedCautiousAppendOpcode;
    }(AppendDynamicOpcode);

    var OptimizedCautiousUpdateOpcode = function (_UpdateOpcode) {
        _inherits$6(OptimizedCautiousUpdateOpcode, _UpdateOpcode);

        function OptimizedCautiousUpdateOpcode() {
            _classCallCheck$7(this, OptimizedCautiousUpdateOpcode);

            var _this4 = _possibleConstructorReturn$6(this, _UpdateOpcode.apply(this, arguments));

            _this4.type = 'optimized-cautious-update';
            return _this4;
        }

        OptimizedCautiousUpdateOpcode.prototype.insert = function insert(dom, cursor, value) {
            return cautiousInsert(dom, cursor, value);
        };

        return OptimizedCautiousUpdateOpcode;
    }(UpdateOpcode);

    var OptimizedTrustingAppendOpcode = function (_AppendDynamicOpcode2) {
        _inherits$6(OptimizedTrustingAppendOpcode, _AppendDynamicOpcode2);

        function OptimizedTrustingAppendOpcode() {
            _classCallCheck$7(this, OptimizedTrustingAppendOpcode);

            var _this5 = _possibleConstructorReturn$6(this, _AppendDynamicOpcode2.apply(this, arguments));

            _this5.type = 'optimized-trusting-append';
            return _this5;
        }

        OptimizedTrustingAppendOpcode.prototype.normalize = function normalize(reference) {
            return (0, _reference2.map)(reference, normalizeTrustedValue);
        };

        OptimizedTrustingAppendOpcode.prototype.insert = function insert(dom, cursor, value) {
            return trustingInsert(dom, cursor, value);
        };

        OptimizedTrustingAppendOpcode.prototype.updateWith = function updateWith(_vm, _reference, cache, bounds$$1, upsert) {
            return new OptimizedTrustingUpdateOpcode(cache, bounds$$1, upsert);
        };

        return OptimizedTrustingAppendOpcode;
    }(AppendDynamicOpcode);

    var OptimizedTrustingUpdateOpcode = function (_UpdateOpcode2) {
        _inherits$6(OptimizedTrustingUpdateOpcode, _UpdateOpcode2);

        function OptimizedTrustingUpdateOpcode() {
            _classCallCheck$7(this, OptimizedTrustingUpdateOpcode);

            var _this6 = _possibleConstructorReturn$6(this, _UpdateOpcode2.apply(this, arguments));

            _this6.type = 'optimized-trusting-update';
            return _this6;
        }

        OptimizedTrustingUpdateOpcode.prototype.insert = function insert(dom, cursor, value) {
            return trustingInsert(dom, cursor, value);
        };

        return OptimizedTrustingUpdateOpcode;
    }(UpdateOpcode);

    function _classCallCheck$12(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    /* tslint:disable */
    function debugCallback(context, get) {
        console.info('Use `context`, and `get(<path>)` to debug this template.');
        // for example...
        context === get('this');
        debugger;
    }
    /* tslint:enable */
    var callback = debugCallback;
    // For testing purposes
    function setDebuggerCallback(cb) {
        callback = cb;
    }
    function resetDebuggerCallback() {
        callback = debugCallback;
    }

    var ScopeInspector = function () {
        function ScopeInspector(scope, symbols, evalInfo) {
            _classCallCheck$12(this, ScopeInspector);

            this.scope = scope;
            this.locals = (0, _util.dict)();
            for (var i = 0; i < evalInfo.length; i++) {
                var slot = evalInfo[i];
                var name = symbols[slot - 1];
                var ref = scope.getSymbol(slot);
                this.locals[name] = ref;
            }
        }

        ScopeInspector.prototype.get = function get(path) {
            var scope = this.scope,
                locals = this.locals;

            var parts = path.split('.');

            var _path$split = path.split('.'),
                head = _path$split[0],
                tail = _path$split.slice(1);

            var evalScope = scope.getEvalScope();
            var ref = void 0;
            if (head === 'this') {
                ref = scope.getSelf();
            } else if (locals[head]) {
                ref = locals[head];
            } else if (head.indexOf('@') === 0 && evalScope[head]) {
                ref = evalScope[head];
            } else {
                ref = this.scope.getSelf();
                tail = parts;
            }
            return tail.reduce(function (r, part) {
                return r.get(part);
            }, ref);
        };

        return ScopeInspector;
    }();

    APPEND_OPCODES.add(71 /* Debugger */, function (vm, _ref) {
        var _symbols = _ref.op1,
            _evalInfo = _ref.op2;

        var symbols = vm.constants.getOther(_symbols);
        var evalInfo = vm.constants.getArray(_evalInfo);
        var inspector = new ScopeInspector(vm.scope(), symbols, evalInfo);
        callback(vm.getSelf().value(), function (path) {
            return inspector.get(path).value();
        });
    });

    APPEND_OPCODES.add(69 /* GetPartialTemplate */, function (vm) {
        var stack = vm.stack;
        var definition = stack.pop();
        stack.push(definition.value().template.asPartial());
    });

    function _classCallCheck$13(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var IterablePresenceReference = function () {
        function IterablePresenceReference(artifacts) {
            _classCallCheck$13(this, IterablePresenceReference);

            this.tag = artifacts.tag;
            this.artifacts = artifacts;
        }

        IterablePresenceReference.prototype.value = function value() {
            return !this.artifacts.isEmpty();
        };

        return IterablePresenceReference;
    }();

    APPEND_OPCODES.add(54 /* PutIterator */, function (vm) {
        var stack = vm.stack;
        var listRef = stack.pop();
        var key = stack.pop();
        var iterable = vm.env.iterableFor(listRef, key.value());
        var iterator = new _reference2.ReferenceIterator(iterable);
        stack.push(iterator);
        stack.push(new IterablePresenceReference(iterator.artifacts));
    });
    APPEND_OPCODES.add(52 /* EnterList */, function (vm, _ref) {
        var relativeStart = _ref.op1;

        vm.enterList(relativeStart);
    });
    APPEND_OPCODES.add(53 /* ExitList */, function (vm) {
        return vm.exitList();
    });
    APPEND_OPCODES.add(55 /* Iterate */, function (vm, _ref2) {
        var breaks = _ref2.op1;

        var stack = vm.stack;
        var item = stack.peek().next();
        if (item) {
            var tryOpcode = vm.iterate(item.memo, item.value);
            vm.enterItem(item.key, tryOpcode);
        } else {
            vm.goto(breaks);
        }
    });

    var Ops$2;
    (function (Ops$$1) {
        Ops$$1[Ops$$1["OpenComponentElement"] = 0] = "OpenComponentElement";
        Ops$$1[Ops$$1["DidCreateElement"] = 1] = "DidCreateElement";
        Ops$$1[Ops$$1["DidRenderLayout"] = 2] = "DidRenderLayout";
        Ops$$1[Ops$$1["FunctionExpression"] = 3] = "FunctionExpression";
    })(Ops$2 || (Ops$2 = {}));

    function _classCallCheck$17(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var CompiledStaticTemplate = function CompiledStaticTemplate(handle) {
        _classCallCheck$17(this, CompiledStaticTemplate);

        this.handle = handle;
    };
    var CompiledDynamicTemplate = function CompiledDynamicTemplate(handle, symbolTable) {
        _classCallCheck$17(this, CompiledDynamicTemplate);

        this.handle = handle;
        this.symbolTable = symbolTable;
    };

    var _createClass$2 = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck$20(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function compileLayout(compilable, env) {
        var builder = new ComponentLayoutBuilder(env);
        compilable.compile(builder);
        return builder.compile();
    }

    var ComponentLayoutBuilder = function () {
        function ComponentLayoutBuilder(env) {
            _classCallCheck$20(this, ComponentLayoutBuilder);

            this.env = env;
        }

        ComponentLayoutBuilder.prototype.wrapLayout = function wrapLayout(layout) {
            this.inner = new WrappedBuilder(this.env, layout);
        };

        ComponentLayoutBuilder.prototype.fromLayout = function fromLayout(componentName, layout) {
            this.inner = new UnwrappedBuilder(this.env, componentName, layout);
        };

        ComponentLayoutBuilder.prototype.compile = function compile() {
            return this.inner.compile();
        };

        _createClass$2(ComponentLayoutBuilder, [{
            key: 'tag',
            get: function () {
                return this.inner.tag;
            }
        }, {
            key: 'attrs',
            get: function () {
                return this.inner.attrs;
            }
        }]);

        return ComponentLayoutBuilder;
    }();

    var WrappedBuilder = function () {
        function WrappedBuilder(env, layout) {
            _classCallCheck$20(this, WrappedBuilder);

            this.env = env;
            this.layout = layout;
            this.tag = new ComponentTagBuilder();
            this.attrs = new ComponentAttrsBuilder();
        }

        WrappedBuilder.prototype.compile = function compile() {
            //========DYNAMIC
            //        PutValue(TagExpr)
            //        Test
            //        JumpUnless(BODY)
            //        OpenDynamicPrimitiveElement
            //        DidCreateElement
            //        ...attr statements...
            //        FlushElement
            // BODY:  Noop
            //        ...body statements...
            //        PutValue(TagExpr)
            //        Test
            //        JumpUnless(END)
            //        CloseElement
            // END:   Noop
            //        DidRenderLayout
            //        Exit
            //
            //========STATIC
            //        OpenPrimitiveElementOpcode
            //        DidCreateElement
            //        ...attr statements...
            //        FlushElement
            //        ...body statements...
            //        CloseElement
            //        DidRenderLayout
            //        Exit
            var env = this.env,
                layout = this.layout;

            var meta = { templateMeta: layout.meta, symbols: layout.symbols, asPartial: false };
            var dynamicTag = this.tag.getDynamic();
            var staticTag = this.tag.getStatic();
            var b = builder(env, meta);
            b.startLabels();
            if (dynamicTag) {
                b.fetch(Register.s1);
                expr(dynamicTag, b);
                b.dup();
                b.load(Register.s1);
                b.test('simple');
                b.jumpUnless('BODY');
                b.fetch(Register.s1);
                b.pushComponentOperations();
                b.openDynamicElement();
            } else if (staticTag) {
                b.pushComponentOperations();
                b.openElementWithOperations(staticTag);
            }
            if (dynamicTag || staticTag) {
                b.didCreateElement(Register.s0);
                var attrs = this.attrs.buffer;
                for (var i = 0; i < attrs.length; i++) {
                    compileStatement(attrs[i], b);
                }
                b.flushElement();
            }
            b.label('BODY');
            b.invokeStatic(layout.asBlock());
            if (dynamicTag) {
                b.fetch(Register.s1);
                b.test('simple');
                b.jumpUnless('END');
                b.closeElement();
            } else if (staticTag) {
                b.closeElement();
            }
            b.label('END');
            b.didRenderLayout(Register.s0);
            if (dynamicTag) {
                b.load(Register.s1);
            }
            b.stopLabels();
            var start = b.start;
            var end = b.finalize();
            return new CompiledDynamicTemplate(start, {
                meta: meta,
                hasEval: layout.hasEval,
                symbols: layout.symbols.concat([ATTRS_BLOCK])
            });
        };

        return WrappedBuilder;
    }();

    var UnwrappedBuilder = function () {
        function UnwrappedBuilder(env, componentName, layout) {
            _classCallCheck$20(this, UnwrappedBuilder);

            this.env = env;
            this.componentName = componentName;
            this.layout = layout;
            this.attrs = new ComponentAttrsBuilder();
        }

        UnwrappedBuilder.prototype.compile = function compile() {
            var env = this.env,
                layout = this.layout;

            return layout.asLayout(this.componentName, this.attrs.buffer).compileDynamic(env);
        };

        _createClass$2(UnwrappedBuilder, [{
            key: 'tag',
            get: function () {
                throw new Error('BUG: Cannot call `tag` on an UnwrappedBuilder');
            }
        }]);

        return UnwrappedBuilder;
    }();

    var ComponentTagBuilder = function () {
        function ComponentTagBuilder() {
            _classCallCheck$20(this, ComponentTagBuilder);

            this.isDynamic = null;
            this.isStatic = null;
            this.staticTagName = null;
            this.dynamicTagName = null;
        }

        ComponentTagBuilder.prototype.getDynamic = function getDynamic() {
            if (this.isDynamic) {
                return this.dynamicTagName;
            }
        };

        ComponentTagBuilder.prototype.getStatic = function getStatic() {
            if (this.isStatic) {
                return this.staticTagName;
            }
        };

        ComponentTagBuilder.prototype.static = function _static(tagName) {
            this.isStatic = true;
            this.staticTagName = tagName;
        };

        ComponentTagBuilder.prototype.dynamic = function dynamic(tagName) {
            this.isDynamic = true;
            this.dynamicTagName = [_wireFormat.Ops.ClientSideExpression, Ops$2.FunctionExpression, tagName];
        };

        return ComponentTagBuilder;
    }();

    var ComponentAttrsBuilder = function () {
        function ComponentAttrsBuilder() {
            _classCallCheck$20(this, ComponentAttrsBuilder);

            this.buffer = [];
        }

        ComponentAttrsBuilder.prototype.static = function _static(name, value) {
            this.buffer.push([_wireFormat.Ops.StaticAttr, name, value, null]);
        };

        ComponentAttrsBuilder.prototype.dynamic = function dynamic(name, value) {
            this.buffer.push([_wireFormat.Ops.DynamicAttr, name, [_wireFormat.Ops.ClientSideExpression, Ops$2.FunctionExpression, value], null]);
        };

        return ComponentAttrsBuilder;
    }();

    var ComponentBuilder = function () {
        function ComponentBuilder(builder) {
            _classCallCheck$20(this, ComponentBuilder);

            this.builder = builder;
            this.env = builder.env;
        }

        ComponentBuilder.prototype.static = function _static(definition, args) {
            var params = args[0],
                hash = args[1],
                _default = args[2],
                inverse = args[3];
            var builder = this.builder;

            builder.pushComponentManager(definition);
            builder.invokeComponent(null, params, hash, _default, inverse);
        };

        ComponentBuilder.prototype.dynamic = function dynamic(definitionArgs, getDefinition, args) {
            var params = args[0],
                hash = args[1],
                block = args[2],
                inverse = args[3];
            var builder = this.builder;

            if (!definitionArgs || definitionArgs.length === 0) {
                throw new Error("Dynamic syntax without an argument");
            }
            var meta = this.builder.meta.templateMeta;
            function helper(vm, a) {
                return getDefinition(vm, a, meta);
            }
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            builder.compileArgs(definitionArgs[0], definitionArgs[1], true);
            builder.helper(helper);
            builder.dup();
            builder.test('simple');
            builder.enter(2);
            builder.jumpUnless('ELSE');
            builder.pushDynamicComponentManager();
            builder.invokeComponent(null, params, hash, block, inverse);
            builder.label('ELSE');
            builder.exit();
            builder.return();
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        };

        return ComponentBuilder;
    }();
    function builder(env, meta) {
        return new OpcodeBuilder(env, meta);
    }

    function _classCallCheck$21(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var RawInlineBlock = function () {
        function RawInlineBlock(meta, statements, parameters) {
            _classCallCheck$21(this, RawInlineBlock);

            this.meta = meta;
            this.statements = statements;
            this.parameters = parameters;
        }

        RawInlineBlock.prototype.scan = function scan() {
            return new CompilableTemplate(this.statements, { parameters: this.parameters, meta: this.meta });
        };

        return RawInlineBlock;
    }();

    var _createClass$1 = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _defaults$9(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$9(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$9(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$9(subClass, superClass);
    }

    function _classCallCheck$19(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Labels = function () {
        function Labels() {
            _classCallCheck$19(this, Labels);

            this.labels = (0, _util.dict)();
            this.targets = [];
        }

        Labels.prototype.label = function label(name, index) {
            this.labels[name] = index;
        };

        Labels.prototype.target = function target(at, Target, _target) {
            this.targets.push({ at: at, Target: Target, target: _target });
        };

        Labels.prototype.patch = function patch(program) {
            var targets = this.targets,
                labels = this.labels;

            for (var i = 0; i < targets.length; i++) {
                var _targets$i = targets[i],
                    at = _targets$i.at,
                    target = _targets$i.target;

                var goto = labels[target] - at;
                program.heap.setbyaddr(at + 1, goto);
            }
        };

        return Labels;
    }();

    var BasicOpcodeBuilder = function () {
        function BasicOpcodeBuilder(env, meta, program) {
            _classCallCheck$19(this, BasicOpcodeBuilder);

            this.env = env;
            this.meta = meta;
            this.program = program;
            this.labelsStack = new _util.Stack();
            this.constants = program.constants;
            this.heap = program.heap;
            this.start = this.heap.malloc();
        }

        BasicOpcodeBuilder.prototype.upvars = function upvars(count) {
            return (0, _util.fillNulls)(count);
        };

        BasicOpcodeBuilder.prototype.reserve = function reserve(name) {
            this.push(name, 0, 0, 0);
        };

        BasicOpcodeBuilder.prototype.push = function push(name) {
            var op1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var op2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
            var op3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

            this.heap.push(name);
            this.heap.push(op1);
            this.heap.push(op2);
            this.heap.push(op3);
        };

        BasicOpcodeBuilder.prototype.finalize = function finalize() {
            this.push(22 /* Return */);
            this.heap.finishMalloc(this.start);
            return this.start;
        };
        // args


        BasicOpcodeBuilder.prototype.pushArgs = function pushArgs(synthetic) {
            this.push(58 /* PushArgs */, synthetic === true ? 1 : 0);
        };
        // helpers


        BasicOpcodeBuilder.prototype.startLabels = function startLabels() {
            this.labelsStack.push(new Labels());
        };

        BasicOpcodeBuilder.prototype.stopLabels = function stopLabels() {
            var label = this.labelsStack.pop();
            label.patch(this.program);
        };
        // components


        BasicOpcodeBuilder.prototype.pushComponentManager = function pushComponentManager(definition) {
            this.push(56 /* PushComponentManager */, this.other(definition));
        };

        BasicOpcodeBuilder.prototype.pushDynamicComponentManager = function pushDynamicComponentManager() {
            this.push(57 /* PushDynamicComponentManager */);
        };

        BasicOpcodeBuilder.prototype.prepareArgs = function prepareArgs(state) {
            this.push(59 /* PrepareArgs */, state);
        };

        BasicOpcodeBuilder.prototype.createComponent = function createComponent(state, hasDefault, hasInverse) {
            var flag = (hasDefault === true ? 1 : 0) | (hasInverse === true ? 1 : 0) << 1;
            this.push(60 /* CreateComponent */, flag, state);
        };

        BasicOpcodeBuilder.prototype.registerComponentDestructor = function registerComponentDestructor(state) {
            this.push(61 /* RegisterComponentDestructor */, state);
        };

        BasicOpcodeBuilder.prototype.beginComponentTransaction = function beginComponentTransaction() {
            this.push(65 /* BeginComponentTransaction */);
        };

        BasicOpcodeBuilder.prototype.commitComponentTransaction = function commitComponentTransaction() {
            this.push(66 /* CommitComponentTransaction */);
        };

        BasicOpcodeBuilder.prototype.pushComponentOperations = function pushComponentOperations() {
            this.push(62 /* PushComponentOperations */);
        };

        BasicOpcodeBuilder.prototype.getComponentSelf = function getComponentSelf(state) {
            this.push(63 /* GetComponentSelf */, state);
        };

        BasicOpcodeBuilder.prototype.getComponentLayout = function getComponentLayout(state) {
            this.push(64 /* GetComponentLayout */, state);
        };

        BasicOpcodeBuilder.prototype.didCreateElement = function didCreateElement(state) {
            this.push(67 /* DidCreateElement */, state);
        };

        BasicOpcodeBuilder.prototype.didRenderLayout = function didRenderLayout(state) {
            this.push(68 /* DidRenderLayout */, state);
        };
        // partial


        BasicOpcodeBuilder.prototype.getPartialTemplate = function getPartialTemplate() {
            this.push(69 /* GetPartialTemplate */);
        };

        BasicOpcodeBuilder.prototype.resolveMaybeLocal = function resolveMaybeLocal(name) {
            this.push(70 /* ResolveMaybeLocal */, this.string(name));
        };
        // debugger


        BasicOpcodeBuilder.prototype.debugger = function _debugger(symbols, evalInfo) {
            this.push(71 /* Debugger */, this.constants.other(symbols), this.constants.array(evalInfo));
        };
        // content


        BasicOpcodeBuilder.prototype.dynamicContent = function dynamicContent(Opcode) {
            this.push(26 /* DynamicContent */, this.other(Opcode));
        };

        BasicOpcodeBuilder.prototype.cautiousAppend = function cautiousAppend() {
            this.dynamicContent(new OptimizedCautiousAppendOpcode());
        };

        BasicOpcodeBuilder.prototype.trustingAppend = function trustingAppend() {
            this.dynamicContent(new OptimizedTrustingAppendOpcode());
        };
        // dom


        BasicOpcodeBuilder.prototype.text = function text(_text) {
            this.push(24 /* Text */, this.constants.string(_text));
        };

        BasicOpcodeBuilder.prototype.openPrimitiveElement = function openPrimitiveElement(tag) {
            this.push(27 /* OpenElement */, this.constants.string(tag));
        };

        BasicOpcodeBuilder.prototype.openElementWithOperations = function openElementWithOperations(tag) {
            this.push(28 /* OpenElementWithOperations */, this.constants.string(tag));
        };

        BasicOpcodeBuilder.prototype.openDynamicElement = function openDynamicElement() {
            this.push(29 /* OpenDynamicElement */);
        };

        BasicOpcodeBuilder.prototype.flushElement = function flushElement() {
            this.push(33 /* FlushElement */);
        };

        BasicOpcodeBuilder.prototype.closeElement = function closeElement() {
            this.push(34 /* CloseElement */);
        };

        BasicOpcodeBuilder.prototype.staticAttr = function staticAttr(_name, _namespace, _value) {
            var name = this.constants.string(_name);
            var namespace = _namespace ? this.constants.string(_namespace) : 0;
            var value = this.constants.string(_value);
            this.push(30 /* StaticAttr */, name, value, namespace);
        };

        BasicOpcodeBuilder.prototype.dynamicAttrNS = function dynamicAttrNS(_name, _namespace, trusting) {
            var name = this.constants.string(_name);
            var namespace = this.constants.string(_namespace);
            this.push(32 /* DynamicAttrNS */, name, namespace, trusting === true ? 1 : 0);
        };

        BasicOpcodeBuilder.prototype.dynamicAttr = function dynamicAttr(_name, trusting) {
            var name = this.constants.string(_name);
            this.push(31 /* DynamicAttr */, name, trusting === true ? 1 : 0);
        };

        BasicOpcodeBuilder.prototype.comment = function comment(_comment) {
            var comment = this.constants.string(_comment);
            this.push(25 /* Comment */, comment);
        };

        BasicOpcodeBuilder.prototype.modifier = function modifier(_definition) {
            this.push(35 /* Modifier */, this.other(_definition));
        };
        // lists


        BasicOpcodeBuilder.prototype.putIterator = function putIterator() {
            this.push(54 /* PutIterator */);
        };

        BasicOpcodeBuilder.prototype.enterList = function enterList(start) {
            this.reserve(52 /* EnterList */);
            this.labels.target(this.pos, 52 /* EnterList */, start);
        };

        BasicOpcodeBuilder.prototype.exitList = function exitList() {
            this.push(53 /* ExitList */);
        };

        BasicOpcodeBuilder.prototype.iterate = function iterate(breaks) {
            this.reserve(55 /* Iterate */);
            this.labels.target(this.pos, 55 /* Iterate */, breaks);
        };
        // expressions


        BasicOpcodeBuilder.prototype.setVariable = function setVariable(symbol) {
            this.push(4 /* SetVariable */, symbol);
        };

        BasicOpcodeBuilder.prototype.getVariable = function getVariable(symbol) {
            this.push(5 /* GetVariable */, symbol);
        };

        BasicOpcodeBuilder.prototype.getProperty = function getProperty(key) {
            this.push(6 /* GetProperty */, this.string(key));
        };

        BasicOpcodeBuilder.prototype.getBlock = function getBlock(symbol) {
            this.push(8 /* GetBlock */, symbol);
        };

        BasicOpcodeBuilder.prototype.hasBlock = function hasBlock(symbol) {
            this.push(9 /* HasBlock */, symbol);
        };

        BasicOpcodeBuilder.prototype.hasBlockParams = function hasBlockParams(symbol) {
            this.push(10 /* HasBlockParams */, symbol);
        };

        BasicOpcodeBuilder.prototype.concat = function concat(size) {
            this.push(11 /* Concat */, size);
        };

        BasicOpcodeBuilder.prototype.function = function _function(f) {
            this.push(2 /* Function */, this.func(f));
        };

        BasicOpcodeBuilder.prototype.load = function load(register) {
            this.push(17 /* Load */, register);
        };

        BasicOpcodeBuilder.prototype.fetch = function fetch(register) {
            this.push(18 /* Fetch */, register);
        };

        BasicOpcodeBuilder.prototype.dup = function dup() {
            var register = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Register.sp;
            var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            return this.push(15 /* Dup */, register, offset);
        };

        BasicOpcodeBuilder.prototype.pop = function pop() {
            var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            return this.push(16 /* Pop */, count);
        };
        // vm


        BasicOpcodeBuilder.prototype.pushRemoteElement = function pushRemoteElement() {
            this.push(36 /* PushRemoteElement */);
        };

        BasicOpcodeBuilder.prototype.popRemoteElement = function popRemoteElement() {
            this.push(37 /* PopRemoteElement */);
        };

        BasicOpcodeBuilder.prototype.label = function label(name) {
            this.labels.label(name, this.nextPos);
        };

        BasicOpcodeBuilder.prototype.pushRootScope = function pushRootScope(symbols, bindCallerScope) {
            this.push(19 /* RootScope */, symbols, bindCallerScope ? 1 : 0);
        };

        BasicOpcodeBuilder.prototype.pushChildScope = function pushChildScope() {
            this.push(20 /* ChildScope */);
        };

        BasicOpcodeBuilder.prototype.popScope = function popScope() {
            this.push(21 /* PopScope */);
        };

        BasicOpcodeBuilder.prototype.returnTo = function returnTo(label) {
            this.reserve(23 /* ReturnTo */);
            this.labels.target(this.pos, 23 /* ReturnTo */, label);
        };

        BasicOpcodeBuilder.prototype.pushDynamicScope = function pushDynamicScope() {
            this.push(39 /* PushDynamicScope */);
        };

        BasicOpcodeBuilder.prototype.popDynamicScope = function popDynamicScope() {
            this.push(40 /* PopDynamicScope */);
        };

        BasicOpcodeBuilder.prototype.pushImmediate = function pushImmediate(value) {
            this.push(13 /* Constant */, this.other(value));
        };

        BasicOpcodeBuilder.prototype.primitive = function primitive(_primitive) {
            var flag = 0;
            var primitive = void 0;
            switch (typeof _primitive) {
                case 'number':
                    if (_primitive % 1 === 0 && _primitive > 0) {
                        primitive = _primitive;
                    } else {
                        primitive = this.float(_primitive);
                        flag = 1;
                    }
                    break;
                case 'string':
                    primitive = this.string(_primitive);
                    flag = 2;
                    break;
                case 'boolean':
                    primitive = _primitive | 0;
                    flag = 3;
                    break;
                case 'object':
                    // assume null
                    primitive = 2;
                    flag = 3;
                    break;
                case 'undefined':
                    primitive = 3;
                    flag = 3;
                    break;
                default:
                    throw new Error('Invalid primitive passed to pushPrimitive');
            }
            this.push(14 /* PrimitiveReference */, flag << 30 | primitive);
        };

        BasicOpcodeBuilder.prototype.helper = function helper(func) {
            this.push(1 /* Helper */, this.func(func));
        };

        BasicOpcodeBuilder.prototype.pushBlock = function pushBlock(block) {
            this.push(7 /* PushBlock */, this.block(block));
        };

        BasicOpcodeBuilder.prototype.bindDynamicScope = function bindDynamicScope(_names) {
            this.push(38 /* BindDynamicScope */, this.names(_names));
        };

        BasicOpcodeBuilder.prototype.enter = function enter(args) {
            this.push(49 /* Enter */, args);
        };

        BasicOpcodeBuilder.prototype.exit = function exit() {
            this.push(50 /* Exit */);
        };

        BasicOpcodeBuilder.prototype.return = function _return() {
            this.push(22 /* Return */);
        };

        BasicOpcodeBuilder.prototype.pushFrame = function pushFrame() {
            this.push(47 /* PushFrame */);
        };

        BasicOpcodeBuilder.prototype.popFrame = function popFrame() {
            this.push(48 /* PopFrame */);
        };

        BasicOpcodeBuilder.prototype.compileDynamicBlock = function compileDynamicBlock() {
            this.push(41 /* CompileDynamicBlock */);
        };

        BasicOpcodeBuilder.prototype.invokeDynamic = function invokeDynamic(invoker) {
            this.push(43 /* InvokeDynamic */, this.other(invoker));
        };

        BasicOpcodeBuilder.prototype.invokeStatic = function invokeStatic(block) {
            var callerCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var parameters = block.symbolTable.parameters;

            var calleeCount = parameters.length;
            var count = Math.min(callerCount, calleeCount);
            this.pushFrame();
            if (count) {
                this.pushChildScope();
                for (var i = 0; i < count; i++) {
                    this.dup(Register.fp, callerCount - i);
                    this.setVariable(parameters[i]);
                }
            }
            var _block = this.constants.block(block);
            this.push(42 /* InvokeStatic */, _block);
            if (count) {
                this.popScope();
            }
            this.popFrame();
        };

        BasicOpcodeBuilder.prototype.test = function test(testFunc) {
            var _func = void 0;
            if (testFunc === 'const') {
                _func = ConstTest;
            } else if (testFunc === 'simple') {
                _func = SimpleTest;
            } else if (testFunc === 'environment') {
                _func = EnvironmentTest;
            } else if (typeof testFunc === 'function') {
                _func = testFunc;
            } else {
                throw new Error('unreachable');
            }
            var func = this.constants.function(_func);
            this.push(51 /* Test */, func);
        };

        BasicOpcodeBuilder.prototype.jump = function jump(target) {
            this.reserve(44 /* Jump */);
            this.labels.target(this.pos, 44 /* Jump */, target);
        };

        BasicOpcodeBuilder.prototype.jumpIf = function jumpIf(target) {
            this.reserve(45 /* JumpIf */);
            this.labels.target(this.pos, 45 /* JumpIf */, target);
        };

        BasicOpcodeBuilder.prototype.jumpUnless = function jumpUnless(target) {
            this.reserve(46 /* JumpUnless */);
            this.labels.target(this.pos, 46 /* JumpUnless */, target);
        };

        BasicOpcodeBuilder.prototype.string = function string(_string) {
            return this.constants.string(_string);
        };

        BasicOpcodeBuilder.prototype.float = function float(num) {
            return this.constants.float(num);
        };

        BasicOpcodeBuilder.prototype.names = function names(_names) {
            var names = [];
            for (var i = 0; i < _names.length; i++) {
                var n = _names[i];
                names[i] = this.constants.string(n);
            }
            return this.constants.array(names);
        };

        BasicOpcodeBuilder.prototype.symbols = function symbols(_symbols) {
            return this.constants.array(_symbols);
        };

        BasicOpcodeBuilder.prototype.other = function other(value) {
            return this.constants.other(value);
        };

        BasicOpcodeBuilder.prototype.block = function block(_block2) {
            return _block2 ? this.constants.block(_block2) : 0;
        };

        BasicOpcodeBuilder.prototype.func = function func(_func2) {
            return this.constants.function(_func2);
        };

        _createClass$1(BasicOpcodeBuilder, [{
            key: 'pos',
            get: function () {
                return (0, _util.typePos)(this.heap.size());
            }
        }, {
            key: 'nextPos',
            get: function () {
                return this.heap.size();
            }
        }, {
            key: 'labels',
            get: function () {
                return this.labelsStack.current;
            }
        }]);

        return BasicOpcodeBuilder;
    }();

    function isCompilableExpression(expr$$1) {
        return typeof expr$$1 === 'object' && expr$$1 !== null && typeof expr$$1.compile === 'function';
    }

    var OpcodeBuilder = function (_BasicOpcodeBuilder) {
        _inherits$9(OpcodeBuilder, _BasicOpcodeBuilder);

        function OpcodeBuilder(env, meta) {
            var program = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : env.program;

            _classCallCheck$19(this, OpcodeBuilder);

            var _this = _possibleConstructorReturn$9(this, _BasicOpcodeBuilder.call(this, env, meta, program));

            _this.component = new ComponentBuilder(_this);
            return _this;
        }

        OpcodeBuilder.prototype.compileArgs = function compileArgs(params, hash, synthetic) {
            var positional = 0;
            if (params) {
                for (var i = 0; i < params.length; i++) {
                    expr(params[i], this);
                }
                positional = params.length;
            }
            this.pushImmediate(positional);
            var names = _util.EMPTY_ARRAY;
            if (hash) {
                names = hash[0];
                var val = hash[1];
                for (var _i = 0; _i < val.length; _i++) {
                    expr(val[_i], this);
                }
            }
            this.pushImmediate(names);
            this.pushArgs(synthetic);
        };

        OpcodeBuilder.prototype.compile = function compile(expr$$1) {
            if (isCompilableExpression(expr$$1)) {
                return expr$$1.compile(this);
            } else {
                return expr$$1;
            }
        };

        OpcodeBuilder.prototype.guardedAppend = function guardedAppend(expression, trusting) {
            this.startLabels();
            this.pushFrame();
            this.returnTo('END');
            expr(expression, this);
            this.dup();
            this.test(function (reference) {
                return IsComponentDefinitionReference.create(reference);
            });
            this.enter(2);
            this.jumpUnless('ELSE');
            this.pushDynamicComponentManager();
            this.invokeComponent(null, null, null, null, null);
            this.exit();
            this.return();
            this.label('ELSE');
            if (trusting) {
                this.trustingAppend();
            } else {
                this.cautiousAppend();
            }
            this.exit();
            this.return();
            this.label('END');
            this.popFrame();
            this.stopLabels();
        };

        OpcodeBuilder.prototype.invokeComponent = function invokeComponent(attrs, params, hash, block) {
            var inverse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;

            this.fetch(Register.s0);
            this.dup(Register.sp, 1);
            this.load(Register.s0);
            this.pushBlock(block);
            this.pushBlock(inverse);
            this.compileArgs(params, hash, false);
            this.prepareArgs(Register.s0);
            this.beginComponentTransaction();
            this.pushDynamicScope();
            this.createComponent(Register.s0, block !== null, inverse !== null);
            this.registerComponentDestructor(Register.s0);
            this.getComponentSelf(Register.s0);
            this.getComponentLayout(Register.s0);
            this.invokeDynamic(new InvokeDynamicLayout(attrs && attrs.scan()));
            this.popFrame();
            this.popScope();
            this.popDynamicScope();
            this.commitComponentTransaction();
            this.load(Register.s0);
        };

        OpcodeBuilder.prototype.template = function template(block) {
            if (!block) return null;
            return new RawInlineBlock(this.meta, block.statements, block.parameters);
        };

        return OpcodeBuilder;
    }(BasicOpcodeBuilder);

    function _classCallCheck$18(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Ops$3 = _wireFormat.Ops;
    var ATTRS_BLOCK = '&attrs';

    var Compilers = function () {
        function Compilers() {
            var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            _classCallCheck$18(this, Compilers);

            this.offset = offset;
            this.names = (0, _util.dict)();
            this.funcs = [];
        }

        Compilers.prototype.add = function add(name, func) {
            this.funcs.push(func);
            this.names[name] = this.funcs.length - 1;
        };

        Compilers.prototype.compile = function compile(sexp, builder) {
            var name = sexp[this.offset];
            var index = this.names[name];
            var func = this.funcs[index];
            (0, _util.assert)(!!func, 'expected an implementation for ' + (this.offset === 0 ? Ops$3[sexp[0]] : Ops$2[sexp[1]]));
            func(sexp, builder);
        };

        return Compilers;
    }();

    var STATEMENTS = new Compilers();
    var CLIENT_SIDE = new Compilers(1);
    STATEMENTS.add(Ops$3.Text, function (sexp, builder) {
        builder.text(sexp[1]);
    });
    STATEMENTS.add(Ops$3.Comment, function (sexp, builder) {
        builder.comment(sexp[1]);
    });
    STATEMENTS.add(Ops$3.CloseElement, function (_sexp, builder) {
        builder.closeElement();
    });
    STATEMENTS.add(Ops$3.FlushElement, function (_sexp, builder) {
        builder.flushElement();
    });
    STATEMENTS.add(Ops$3.Modifier, function (sexp, builder) {
        var env = builder.env,
            meta = builder.meta;
        var name = sexp[1],
            params = sexp[2],
            hash = sexp[3];

        if (env.hasModifier(name, meta.templateMeta)) {
            builder.compileArgs(params, hash, true);
            builder.modifier(env.lookupModifier(name, meta.templateMeta));
        } else {
            throw new Error('Compile Error ' + name + ' is not a modifier: Helpers may not be used in the element form.');
        }
    });
    STATEMENTS.add(Ops$3.StaticAttr, function (sexp, builder) {
        var name = sexp[1],
            value = sexp[2],
            namespace = sexp[3];

        builder.staticAttr(name, namespace, value);
    });
    STATEMENTS.add(Ops$3.DynamicAttr, function (sexp, builder) {
        dynamicAttr(sexp, false, builder);
    });
    STATEMENTS.add(Ops$3.TrustingAttr, function (sexp, builder) {
        dynamicAttr(sexp, true, builder);
    });
    function dynamicAttr(sexp, trusting, builder) {
        var name = sexp[1],
            value = sexp[2],
            namespace = sexp[3];

        expr(value, builder);
        if (namespace) {
            builder.dynamicAttrNS(name, namespace, trusting);
        } else {
            builder.dynamicAttr(name, trusting);
        }
    }
    STATEMENTS.add(Ops$3.OpenElement, function (sexp, builder) {
        builder.openPrimitiveElement(sexp[1]);
    });
    CLIENT_SIDE.add(Ops$2.OpenComponentElement, function (sexp, builder) {
        builder.pushComponentOperations();
        builder.openElementWithOperations(sexp[2]);
    });
    CLIENT_SIDE.add(Ops$2.DidCreateElement, function (_sexp, builder) {
        builder.didCreateElement(Register.s0);
    });
    CLIENT_SIDE.add(Ops$2.DidRenderLayout, function (_sexp, builder) {
        builder.didRenderLayout(Register.s0);
    });
    STATEMENTS.add(Ops$3.Append, function (sexp, builder) {
        var value = sexp[1],
            trusting = sexp[2];

        var _builder$env$macros = builder.env.macros(),
            inlines = _builder$env$macros.inlines;

        var returned = inlines.compile(sexp, builder) || value;
        if (returned === true) return;
        var isGet = E.isGet(value);
        var isMaybeLocal = E.isMaybeLocal(value);
        if (trusting) {
            builder.guardedAppend(value, true);
        } else {
            if (isGet || isMaybeLocal) {
                builder.guardedAppend(value, false);
            } else {
                expr(value, builder);
                builder.cautiousAppend();
            }
        }
    });
    STATEMENTS.add(Ops$3.Block, function (sexp, builder) {
        var name = sexp[1],
            params = sexp[2],
            hash = sexp[3],
            _template = sexp[4],
            _inverse = sexp[5];

        var template = builder.template(_template);
        var inverse = builder.template(_inverse);
        var templateBlock = template && template.scan();
        var inverseBlock = inverse && inverse.scan();

        var _builder$env$macros2 = builder.env.macros(),
            blocks = _builder$env$macros2.blocks;

        blocks.compile(name, params, hash, templateBlock, inverseBlock, builder);
    });
    var InvokeDynamicLayout = function () {
        function InvokeDynamicLayout(attrs) {
            _classCallCheck$18(this, InvokeDynamicLayout);

            this.attrs = attrs;
        }

        InvokeDynamicLayout.prototype.invoke = function invoke(vm, layout) {
            var _layout$symbolTable = layout.symbolTable,
                symbols = _layout$symbolTable.symbols,
                hasEval = _layout$symbolTable.hasEval;

            var stack = vm.stack;
            var scope = vm.pushRootScope(symbols.length + 1, true);
            scope.bindSelf(stack.pop());
            scope.bindBlock(symbols.indexOf(ATTRS_BLOCK) + 1, this.attrs);
            var lookup = null;
            var $eval = -1;
            if (hasEval) {
                $eval = symbols.indexOf('$eval') + 1;
                lookup = (0, _util.dict)();
            }
            var callerNames = stack.pop();
            for (var i = callerNames.length - 1; i >= 0; i--) {
                var symbol = symbols.indexOf(callerNames[i]);
                var value = stack.pop();
                if (symbol !== -1) scope.bindSymbol(symbol + 1, value);
                if (hasEval) lookup[callerNames[i]] = value;
            }
            var numPositionalArgs = stack.pop();
            (0, _util.assert)(typeof numPositionalArgs === 'number', '[BUG] Incorrect value of positional argument count found during invoke-dynamic-layout.');
            // Currently we don't support accessing positional args in templates, so just throw them away
            stack.pop(numPositionalArgs);
            var inverseSymbol = symbols.indexOf('&inverse');
            var inverse = stack.pop();
            if (inverseSymbol !== -1) {
                scope.bindBlock(inverseSymbol + 1, inverse);
            }
            if (lookup) lookup['&inverse'] = inverse;
            var defaultSymbol = symbols.indexOf('&default');
            var defaultBlock = stack.pop();
            if (defaultSymbol !== -1) {
                scope.bindBlock(defaultSymbol + 1, defaultBlock);
            }
            if (lookup) lookup['&default'] = defaultBlock;
            if (lookup) scope.bindEvalScope(lookup);
            vm.pushFrame();
            vm.call(layout.handle);
        };

        InvokeDynamicLayout.prototype.toJSON = function toJSON() {
            return { GlimmerDebug: '<invoke-dynamic-layout>' };
        };

        return InvokeDynamicLayout;
    }();
    STATEMENTS.add(Ops$3.Component, function (sexp, builder) {
        var tag = sexp[1],
            attrs = sexp[2],
            args = sexp[3],
            block = sexp[4];

        if (builder.env.hasComponentDefinition(tag, builder.meta.templateMeta)) {
            var child = builder.template(block);
            var attrsBlock = new RawInlineBlock(builder.meta, attrs, _util.EMPTY_ARRAY);
            var definition = builder.env.getComponentDefinition(tag, builder.meta.templateMeta);
            builder.pushComponentManager(definition);
            builder.invokeComponent(attrsBlock, null, args, child && child.scan());
        } else if (block && block.parameters.length) {
            throw new Error('Compile Error: Cannot find component ' + tag);
        } else {
            builder.openPrimitiveElement(tag);
            for (var i = 0; i < attrs.length; i++) {
                STATEMENTS.compile(attrs[i], builder);
            }
            builder.flushElement();
            if (block) {
                var stmts = block.statements;
                for (var _i = 0; _i < stmts.length; _i++) {
                    STATEMENTS.compile(stmts[_i], builder);
                }
            }
            builder.closeElement();
        }
    });
    var PartialInvoker = function () {
        function PartialInvoker(outerSymbols, evalInfo) {
            _classCallCheck$18(this, PartialInvoker);

            this.outerSymbols = outerSymbols;
            this.evalInfo = evalInfo;
        }

        PartialInvoker.prototype.invoke = function invoke(vm, _partial) {
            var partial = _partial;
            var partialSymbols = partial.symbolTable.symbols;
            var outerScope = vm.scope();
            var partialScope = vm.pushRootScope(partialSymbols.length, false);
            partialScope.bindCallerScope(outerScope.getCallerScope());
            partialScope.bindEvalScope(outerScope.getEvalScope());
            partialScope.bindSelf(outerScope.getSelf());
            var evalInfo = this.evalInfo,
                outerSymbols = this.outerSymbols;

            var locals = (0, _util.dict)();
            for (var i = 0; i < evalInfo.length; i++) {
                var slot = evalInfo[i];
                var name = outerSymbols[slot - 1];
                var ref = outerScope.getSymbol(slot);
                locals[name] = ref;
            }
            var evalScope = outerScope.getEvalScope();
            for (var _i2 = 0; _i2 < partialSymbols.length; _i2++) {
                var _name = partialSymbols[_i2];
                var symbol = _i2 + 1;
                var value = evalScope[_name];
                if (value !== undefined) partialScope.bind(symbol, value);
            }
            partialScope.bindPartialMap(locals);
            vm.pushFrame();
            vm.call(partial.handle);
        };

        return PartialInvoker;
    }();
    STATEMENTS.add(Ops$3.Partial, function (sexp, builder) {
        var name = sexp[1],
            evalInfo = sexp[2];
        var _builder$meta = builder.meta,
            templateMeta = _builder$meta.templateMeta,
            symbols = _builder$meta.symbols;

        function helper(vm, args) {
            var env = vm.env;

            var nameRef = args.positional.at(0);
            return (0, _reference2.map)(nameRef, function (n) {
                if (typeof n === 'string' && n) {
                    if (!env.hasPartial(n, templateMeta)) {
                        throw new Error('Could not find a partial named "' + n + '"');
                    }
                    return env.lookupPartial(n, templateMeta);
                } else if (n) {
                    throw new Error('Could not find a partial named "' + String(n) + '"');
                } else {
                    return null;
                }
            });
        }
        builder.startLabels();
        builder.pushFrame();
        builder.returnTo('END');
        expr(name, builder);
        builder.pushImmediate(1);
        builder.pushImmediate(_util.EMPTY_ARRAY);
        builder.pushArgs(true);
        builder.helper(helper);
        builder.dup();
        builder.test('simple');
        builder.enter(2);
        builder.jumpUnless('ELSE');
        builder.getPartialTemplate();
        builder.compileDynamicBlock();
        builder.invokeDynamic(new PartialInvoker(symbols, evalInfo));
        builder.popScope();
        builder.popFrame();
        builder.label('ELSE');
        builder.exit();
        builder.return();
        builder.label('END');
        builder.popFrame();
        builder.stopLabels();
    });

    var InvokeDynamicYield = function () {
        function InvokeDynamicYield(callerCount) {
            _classCallCheck$18(this, InvokeDynamicYield);

            this.callerCount = callerCount;
        }

        InvokeDynamicYield.prototype.invoke = function invoke(vm, block) {
            var callerCount = this.callerCount;

            var stack = vm.stack;
            if (!block) {
                // To balance the pop{Frame,Scope}
                vm.pushFrame();
                vm.pushCallerScope();
                return;
            }
            var table = block.symbolTable;
            var locals = table.parameters; // always present in inline blocks
            var calleeCount = locals ? locals.length : 0;
            var count = Math.min(callerCount, calleeCount);
            vm.pushFrame();
            vm.pushCallerScope(calleeCount > 0);
            var scope = vm.scope();
            for (var i = 0; i < count; i++) {
                scope.bindSymbol(locals[i], stack.fromBase(callerCount - i));
            }
            vm.call(block.handle);
        };

        InvokeDynamicYield.prototype.toJSON = function toJSON() {
            return { GlimmerDebug: '<invoke-dynamic-yield caller-count=' + this.callerCount + '>' };
        };

        return InvokeDynamicYield;
    }();

    STATEMENTS.add(Ops$3.Yield, function (sexp, builder) {
        var to = sexp[1],
            params = sexp[2];

        var count = compileList(params, builder);
        builder.getBlock(to);
        builder.compileDynamicBlock();
        builder.invokeDynamic(new InvokeDynamicYield(count));
        builder.popScope();
        builder.popFrame();
        if (count) {
            builder.pop(count);
        }
    });
    STATEMENTS.add(Ops$3.Debugger, function (sexp, builder) {
        var evalInfo = sexp[1];

        builder.debugger(builder.meta.symbols, evalInfo);
    });
    STATEMENTS.add(Ops$3.ClientSideStatement, function (sexp, builder) {
        CLIENT_SIDE.compile(sexp, builder);
    });
    var EXPRESSIONS = new Compilers();
    var CLIENT_SIDE_EXPRS = new Compilers(1);
    var E = _wireFormat.Expressions;
    function expr(expression, builder) {
        if (Array.isArray(expression)) {
            EXPRESSIONS.compile(expression, builder);
        } else {
            builder.primitive(expression);
        }
    }
    EXPRESSIONS.add(Ops$3.Unknown, function (sexp, builder) {
        var name = sexp[1];
        if (builder.env.hasHelper(name, builder.meta.templateMeta)) {
            EXPRESSIONS.compile([Ops$3.Helper, name, _util.EMPTY_ARRAY, null], builder);
        } else if (builder.meta.asPartial) {
            builder.resolveMaybeLocal(name);
        } else {
            builder.getVariable(0);
            builder.getProperty(name);
        }
    });
    EXPRESSIONS.add(Ops$3.Concat, function (sexp, builder) {
        var parts = sexp[1];
        for (var i = 0; i < parts.length; i++) {
            expr(parts[i], builder);
        }
        builder.concat(parts.length);
    });
    CLIENT_SIDE_EXPRS.add(Ops$2.FunctionExpression, function (sexp, builder) {
        builder.function(sexp[2]);
    });
    EXPRESSIONS.add(Ops$3.Helper, function (sexp, builder) {
        var env = builder.env,
            meta = builder.meta;
        var name = sexp[1],
            params = sexp[2],
            hash = sexp[3];

        if (env.hasHelper(name, meta.templateMeta)) {
            builder.compileArgs(params, hash, true);
            builder.helper(env.lookupHelper(name, meta.templateMeta));
        } else {
            throw new Error('Compile Error: ' + name + ' is not a helper');
        }
    });
    EXPRESSIONS.add(Ops$3.Get, function (sexp, builder) {
        var head = sexp[1],
            path = sexp[2];

        builder.getVariable(head);
        for (var i = 0; i < path.length; i++) {
            builder.getProperty(path[i]);
        }
    });
    EXPRESSIONS.add(Ops$3.MaybeLocal, function (sexp, builder) {
        var path = sexp[1];

        if (builder.meta.asPartial) {
            var head = path[0];
            path = path.slice(1);
            builder.resolveMaybeLocal(head);
        } else {
            builder.getVariable(0);
        }
        for (var i = 0; i < path.length; i++) {
            builder.getProperty(path[i]);
        }
    });
    EXPRESSIONS.add(Ops$3.Undefined, function (_sexp, builder) {
        return builder.primitive(undefined);
    });
    EXPRESSIONS.add(Ops$3.HasBlock, function (sexp, builder) {
        builder.hasBlock(sexp[1]);
    });
    EXPRESSIONS.add(Ops$3.HasBlockParams, function (sexp, builder) {
        builder.hasBlockParams(sexp[1]);
    });
    EXPRESSIONS.add(Ops$3.ClientSideExpression, function (sexp, builder) {
        CLIENT_SIDE_EXPRS.compile(sexp, builder);
    });
    function compileList(params, builder) {
        if (!params) return 0;
        for (var i = 0; i < params.length; i++) {
            expr(params[i], builder);
        }
        return params.length;
    }
    var Blocks = function () {
        function Blocks() {
            _classCallCheck$18(this, Blocks);

            this.names = (0, _util.dict)();
            this.funcs = [];
        }

        Blocks.prototype.add = function add(name, func) {
            this.funcs.push(func);
            this.names[name] = this.funcs.length - 1;
        };

        Blocks.prototype.addMissing = function addMissing(func) {
            this.missing = func;
        };

        Blocks.prototype.compile = function compile(name, params, hash, template, inverse, builder) {
            var index = this.names[name];
            if (index === undefined) {
                (0, _util.assert)(!!this.missing, name + ' not found, and no catch-all block handler was registered');
                var func = this.missing;
                var handled = func(name, params, hash, template, inverse, builder);
                (0, _util.assert)(!!handled, name + ' not found, and the catch-all block handler didn\'t handle it');
            } else {
                var _func = this.funcs[index];
                _func(params, hash, template, inverse, builder);
            }
        };

        return Blocks;
    }();
    var BLOCKS = new Blocks();
    var Inlines = function () {
        function Inlines() {
            _classCallCheck$18(this, Inlines);

            this.names = (0, _util.dict)();
            this.funcs = [];
        }

        Inlines.prototype.add = function add(name, func) {
            this.funcs.push(func);
            this.names[name] = this.funcs.length - 1;
        };

        Inlines.prototype.addMissing = function addMissing(func) {
            this.missing = func;
        };

        Inlines.prototype.compile = function compile(sexp, builder) {
            var value = sexp[1];
            // TODO: Fix this so that expression macros can return
            // things like components, so that {{component foo}}
            // is the same as {{(component foo)}}
            if (!Array.isArray(value)) return ['expr', value];
            var name = void 0;
            var params = void 0;
            var hash = void 0;
            if (value[0] === Ops$3.Helper) {
                name = value[1];
                params = value[2];
                hash = value[3];
            } else if (value[0] === Ops$3.Unknown) {
                name = value[1];
                params = hash = null;
            } else {
                return ['expr', value];
            }
            var index = this.names[name];
            if (index === undefined && this.missing) {
                var func = this.missing;
                var returned = func(name, params, hash, builder);
                return returned === false ? ['expr', value] : returned;
            } else if (index !== undefined) {
                var _func2 = this.funcs[index];
                var _returned = _func2(name, params, hash, builder);
                return _returned === false ? ['expr', value] : _returned;
            } else {
                return ['expr', value];
            }
        };

        return Inlines;
    }();
    var INLINES = new Inlines();
    populateBuiltins(BLOCKS, INLINES);
    function populateBuiltins() {
        var blocks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Blocks();
        var inlines = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Inlines();

        blocks.add('if', function (params, _hash, template, inverse, builder) {
            //        PutArgs
            //        Test(Environment)
            //        Enter(BEGIN, END)
            // BEGIN: Noop
            //        JumpUnless(ELSE)
            //        Evaluate(default)
            //        Jump(END)
            // ELSE:  Noop
            //        Evalulate(inverse)
            // END:   Noop
            //        Exit
            if (!params || params.length !== 1) {
                throw new Error('SYNTAX ERROR: #if requires a single argument');
            }
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            expr(params[0], builder);
            builder.test('environment');
            builder.enter(1);
            builder.jumpUnless('ELSE');
            builder.invokeStatic(template);
            if (inverse) {
                builder.jump('EXIT');
                builder.label('ELSE');
                builder.invokeStatic(inverse);
                builder.label('EXIT');
                builder.exit();
                builder.return();
            } else {
                builder.label('ELSE');
                builder.exit();
                builder.return();
            }
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        });
        blocks.add('unless', function (params, _hash, template, inverse, builder) {
            //        PutArgs
            //        Test(Environment)
            //        Enter(BEGIN, END)
            // BEGIN: Noop
            //        JumpUnless(ELSE)
            //        Evaluate(default)
            //        Jump(END)
            // ELSE:  Noop
            //        Evalulate(inverse)
            // END:   Noop
            //        Exit
            if (!params || params.length !== 1) {
                throw new Error('SYNTAX ERROR: #unless requires a single argument');
            }
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            expr(params[0], builder);
            builder.test('environment');
            builder.enter(1);
            builder.jumpIf('ELSE');
            builder.invokeStatic(template);
            if (inverse) {
                builder.jump('EXIT');
                builder.label('ELSE');
                builder.invokeStatic(inverse);
                builder.label('EXIT');
                builder.exit();
                builder.return();
            } else {
                builder.label('ELSE');
                builder.exit();
                builder.return();
            }
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        });
        blocks.add('with', function (params, _hash, template, inverse, builder) {
            //        PutArgs
            //        Test(Environment)
            //        Enter(BEGIN, END)
            // BEGIN: Noop
            //        JumpUnless(ELSE)
            //        Evaluate(default)
            //        Jump(END)
            // ELSE:  Noop
            //        Evalulate(inverse)
            // END:   Noop
            //        Exit
            if (!params || params.length !== 1) {
                throw new Error('SYNTAX ERROR: #with requires a single argument');
            }
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            expr(params[0], builder);
            builder.dup();
            builder.test('environment');
            builder.enter(2);
            builder.jumpUnless('ELSE');
            builder.invokeStatic(template, 1);
            if (inverse) {
                builder.jump('EXIT');
                builder.label('ELSE');
                builder.invokeStatic(inverse);
                builder.label('EXIT');
                builder.exit();
                builder.return();
            } else {
                builder.label('ELSE');
                builder.exit();
                builder.return();
            }
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        });
        blocks.add('each', function (params, hash, template, inverse, builder) {
            //         Enter(BEGIN, END)
            // BEGIN:  Noop
            //         PutArgs
            //         PutIterable
            //         JumpUnless(ELSE)
            //         EnterList(BEGIN2, END2)
            // ITER:   Noop
            //         NextIter(BREAK)
            // BEGIN2: Noop
            //         PushChildScope
            //         Evaluate(default)
            //         PopScope
            // END2:   Noop
            //         Exit
            //         Jump(ITER)
            // BREAK:  Noop
            //         ExitList
            //         Jump(END)
            // ELSE:   Noop
            //         Evalulate(inverse)
            // END:    Noop
            //         Exit
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            if (hash && hash[0][0] === 'key') {
                expr(hash[1][0], builder);
            } else {
                builder.primitive(null);
            }
            expr(params[0], builder);
            builder.enter(2);
            builder.putIterator();
            builder.jumpUnless('ELSE');
            builder.pushFrame();
            builder.returnTo('ITER');
            builder.dup(Register.fp, 1);
            builder.enterList('BODY');
            builder.label('ITER');
            builder.iterate('BREAK');
            builder.label('BODY');
            builder.invokeStatic(template, 2);
            builder.pop(2);
            builder.exit();
            builder.return();
            builder.label('BREAK');
            builder.exitList();
            builder.popFrame();
            if (inverse) {
                builder.jump('EXIT');
                builder.label('ELSE');
                builder.invokeStatic(inverse);
                builder.label('EXIT');
                builder.exit();
                builder.return();
            } else {
                builder.label('ELSE');
                builder.exit();
                builder.return();
            }
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        });
        blocks.add('-in-element', function (params, hash, template, _inverse, builder) {
            if (!params || params.length !== 1) {
                throw new Error('SYNTAX ERROR: #-in-element requires a single argument');
            }
            builder.startLabels();
            builder.pushFrame();
            builder.returnTo('END');
            if (hash && hash[0].length) {
                var keys = hash[0],
                    values = hash[1];

                if (keys.length === 1 && keys[0] === 'nextSibling') {
                    expr(values[0], builder);
                } else {
                    throw new Error('SYNTAX ERROR: #-in-element does not take a `' + keys[0] + '` option');
                }
            } else {
                expr(null, builder);
            }
            expr(params[0], builder);
            builder.dup();
            builder.test('simple');
            builder.enter(3);
            builder.jumpUnless('ELSE');
            builder.pushRemoteElement();
            builder.invokeStatic(template);
            builder.popRemoteElement();
            builder.label('ELSE');
            builder.exit();
            builder.return();
            builder.label('END');
            builder.popFrame();
            builder.stopLabels();
        });
        blocks.add('-with-dynamic-vars', function (_params, hash, template, _inverse, builder) {
            if (hash) {
                var names = hash[0],
                    expressions = hash[1];

                compileList(expressions, builder);
                builder.pushDynamicScope();
                builder.bindDynamicScope(names);
                builder.invokeStatic(template);
                builder.popDynamicScope();
            } else {
                builder.invokeStatic(template);
            }
        });
        return { blocks: blocks, inlines: inlines };
    }
    function compileStatement(statement, builder) {
        STATEMENTS.compile(statement, builder);
    }
    function compileStatements(statements, meta, env) {
        var b = new OpcodeBuilder(env, meta);
        for (var i = 0; i < statements.length; i++) {
            compileStatement(statements[i], b);
        }
        return b;
    }

    function _classCallCheck$16(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var CompilableTemplate = function () {
        function CompilableTemplate(statements, symbolTable) {
            _classCallCheck$16(this, CompilableTemplate);

            this.statements = statements;
            this.symbolTable = symbolTable;
            this.compiledStatic = null;
            this.compiledDynamic = null;
        }

        CompilableTemplate.prototype.compileStatic = function compileStatic(env) {
            var compiledStatic = this.compiledStatic;

            if (!compiledStatic) {
                var builder = compileStatements(this.statements, this.symbolTable.meta, env);
                builder.finalize();
                var handle = builder.start;
                compiledStatic = this.compiledStatic = new CompiledStaticTemplate(handle);
            }
            return compiledStatic;
        };

        CompilableTemplate.prototype.compileDynamic = function compileDynamic(env) {
            var compiledDynamic = this.compiledDynamic;

            if (!compiledDynamic) {
                var staticBlock = this.compileStatic(env);
                compiledDynamic = new CompiledDynamicTemplate(staticBlock.handle, this.symbolTable);
            }
            return compiledDynamic;
        };

        return CompilableTemplate;
    }();

    function _classCallCheck$15(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Ops$1 = _wireFormat.Ops;

    var Scanner = function () {
        function Scanner(block, env) {
            _classCallCheck$15(this, Scanner);

            this.block = block;
            this.env = env;
        }

        Scanner.prototype.scanEntryPoint = function scanEntryPoint(meta) {
            var block = this.block;
            var statements = block.statements,
                symbols = block.symbols,
                hasEval = block.hasEval;

            return new CompilableTemplate(statements, { meta: meta, symbols: symbols, hasEval: hasEval });
        };

        Scanner.prototype.scanBlock = function scanBlock(meta) {
            var block = this.block;
            var statements = block.statements;

            return new CompilableTemplate(statements, { meta: meta, parameters: _util.EMPTY_ARRAY });
        };

        Scanner.prototype.scanLayout = function scanLayout(meta, attrs, componentName) {
            var block = this.block;
            var statements = block.statements,
                symbols = block.symbols,
                hasEval = block.hasEval;

            var symbolTable = { meta: meta, hasEval: hasEval, symbols: symbols };
            var newStatements = [];
            var toplevel = void 0;
            var inTopLevel = false;
            for (var i = 0; i < statements.length; i++) {
                var statement = statements[i];
                if (_wireFormat.Statements.isComponent(statement)) {
                    var tagName = statement[1];
                    if (!this.env.hasComponentDefinition(tagName, meta.templateMeta)) {
                        if (toplevel !== undefined) {
                            newStatements.push([Ops$1.OpenElement, tagName]);
                        } else {
                            toplevel = tagName;
                            decorateTopLevelElement(tagName, symbols, attrs, newStatements);
                        }
                        addFallback(statement, newStatements);
                    } else {
                        if (toplevel === undefined && tagName === componentName) {
                            toplevel = tagName;
                            decorateTopLevelElement(tagName, symbols, attrs, newStatements);
                            addFallback(statement, newStatements);
                        } else {
                            newStatements.push(statement);
                        }
                    }
                } else {
                    if (toplevel === undefined && _wireFormat.Statements.isOpenElement(statement)) {
                        toplevel = statement[1];
                        inTopLevel = true;
                        decorateTopLevelElement(toplevel, symbols, attrs, newStatements);
                    } else {
                        if (inTopLevel) {
                            if (_wireFormat.Statements.isFlushElement(statement)) {
                                inTopLevel = false;
                            } else if (_wireFormat.Statements.isModifier(statement)) {
                                throw Error('Found modifier "' + statement[1] + '" on the top-level element of "' + componentName + '". Modifiers cannot be on the top-level element');
                            }
                        }
                        newStatements.push(statement);
                    }
                }
            }
            newStatements.push([Ops$1.ClientSideStatement, Ops$2.DidRenderLayout]);
            return new CompilableTemplate(newStatements, symbolTable);
        };

        return Scanner;
    }();

    function addFallback(statement, buffer) {
        var attrs = statement[2],
            block = statement[4];

        for (var i = 0; i < attrs.length; i++) {
            buffer.push(attrs[i]);
        }
        buffer.push([Ops$1.FlushElement]);
        if (block) {
            var statements = block.statements;

            for (var _i = 0; _i < statements.length; _i++) {
                buffer.push(statements[_i]);
            }
        }
        buffer.push([Ops$1.CloseElement]);
    }
    function decorateTopLevelElement(tagName, symbols, attrs, buffer) {
        var attrsSymbol = symbols.push(ATTRS_BLOCK);
        buffer.push([Ops$1.ClientSideStatement, Ops$2.OpenComponentElement, tagName]);
        buffer.push([Ops$1.ClientSideStatement, Ops$2.DidCreateElement]);
        buffer.push([Ops$1.Yield, attrsSymbol, _util.EMPTY_ARRAY]);
        buffer.push.apply(buffer, attrs);
    }

    function _classCallCheck$24(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Constants = function () {
        function Constants() {
            _classCallCheck$24(this, Constants);

            // `0` means NULL
            this.references = [];
            this.strings = [];
            this.expressions = [];
            this.floats = [];
            this.arrays = [];
            this.blocks = [];
            this.functions = [];
            this.others = [];
        }

        Constants.prototype.getReference = function getReference(value) {
            return this.references[value - 1];
        };

        Constants.prototype.reference = function reference(value) {
            var index = this.references.length;
            this.references.push(value);
            return index + 1;
        };

        Constants.prototype.getString = function getString(value) {
            return this.strings[value - 1];
        };

        Constants.prototype.getFloat = function getFloat(value) {
            return this.floats[value - 1];
        };

        Constants.prototype.float = function float(value) {
            return this.floats.push(value);
        };

        Constants.prototype.string = function string(value) {
            var index = this.strings.length;
            this.strings.push(value);
            return index + 1;
        };

        Constants.prototype.getExpression = function getExpression(value) {
            return this.expressions[value - 1];
        };

        Constants.prototype.getArray = function getArray(value) {
            return this.arrays[value - 1];
        };

        Constants.prototype.getNames = function getNames(value) {
            var _names = [];
            var names = this.getArray(value);
            for (var i = 0; i < names.length; i++) {
                var n = names[i];
                _names[i] = this.getString(n);
            }
            return _names;
        };

        Constants.prototype.array = function array(values) {
            var index = this.arrays.length;
            this.arrays.push(values);
            return index + 1;
        };

        Constants.prototype.getBlock = function getBlock(value) {
            return this.blocks[value - 1];
        };

        Constants.prototype.block = function block(_block) {
            var index = this.blocks.length;
            this.blocks.push(_block);
            return index + 1;
        };

        Constants.prototype.getFunction = function getFunction(value) {
            return this.functions[value - 1];
        };

        Constants.prototype.function = function _function(f) {
            var index = this.functions.length;
            this.functions.push(f);
            return index + 1;
        };

        Constants.prototype.getOther = function getOther(value) {
            return this.others[value - 1];
        };

        Constants.prototype.other = function other(_other) {
            var index = this.others.length;
            this.others.push(_other);
            return index + 1;
        };

        return Constants;
    }();

    var badProtocols = ['javascript:', 'vbscript:'];
    var badTags = ['A', 'BODY', 'LINK', 'IMG', 'IFRAME', 'BASE', 'FORM'];
    var badTagsForDataURI = ['EMBED'];
    var badAttributes = ['href', 'src', 'background', 'action'];
    var badAttributesForDataURI = ['src'];
    function has(array, item) {
        return array.indexOf(item) !== -1;
    }
    function checkURI(tagName, attribute) {
        return (tagName === null || has(badTags, tagName)) && has(badAttributes, attribute);
    }
    function checkDataURI(tagName, attribute) {
        if (tagName === null) return false;
        return has(badTagsForDataURI, tagName) && has(badAttributesForDataURI, attribute);
    }
    function requiresSanitization(tagName, attribute) {
        return checkURI(tagName, attribute) || checkDataURI(tagName, attribute);
    }
    function sanitizeAttributeValue(env, element, attribute, value) {
        var tagName = null;
        if (value === null || value === undefined) {
            return value;
        }
        if (isSafeString(value)) {
            return value.toHTML();
        }
        if (!element) {
            tagName = null;
        } else {
            tagName = element.tagName.toUpperCase();
        }
        var str = normalizeTextValue(value);
        if (checkURI(tagName, attribute)) {
            var protocol = env.protocolForURL(str);
            if (has(badProtocols, protocol)) {
                return 'unsafe:' + str;
            }
        }
        if (checkDataURI(tagName, attribute)) {
            return 'unsafe:' + str;
        }
        return str;
    }

    /*
     * @method normalizeProperty
     * @param element {HTMLElement}
     * @param slotName {String}
     * @returns {Object} { name, type }
     */
    function normalizeProperty(element, slotName) {
        var type = void 0,
            normalized = void 0;
        if (slotName in element) {
            normalized = slotName;
            type = 'prop';
        } else {
            var lower = slotName.toLowerCase();
            if (lower in element) {
                type = 'prop';
                normalized = lower;
            } else {
                type = 'attr';
                normalized = slotName;
            }
        }
        if (type === 'prop' && (normalized.toLowerCase() === 'style' || preferAttr(element.tagName, normalized))) {
            type = 'attr';
        }
        return { normalized: normalized, type: type };
    }

    // properties that MUST be set as attributes, due to:
    // * browser bug
    // * strange spec outlier
    var ATTR_OVERRIDES = {
        // phantomjs < 2.0 lets you set it as a prop but won't reflect it
        // back to the attribute. button.getAttribute('type') === null
        BUTTON: { type: true, form: true },
        INPUT: {
            // Some version of IE (like IE9) actually throw an exception
            // if you set input.type = 'something-unknown'
            type: true,
            form: true,
            // Chrome 46.0.2464.0: 'autocorrect' in document.createElement('input') === false
            // Safari 8.0.7: 'autocorrect' in document.createElement('input') === false
            // Mobile Safari (iOS 8.4 simulator): 'autocorrect' in document.createElement('input') === true
            autocorrect: true,
            // Chrome 54.0.2840.98: 'list' in document.createElement('input') === true
            // Safari 9.1.3: 'list' in document.createElement('input') === false
            list: true
        },
        // element.form is actually a legitimate readOnly property, that is to be
        // mutated, but must be mutated by setAttribute...
        SELECT: { form: true },
        OPTION: { form: true },
        TEXTAREA: { form: true },
        LABEL: { form: true },
        FIELDSET: { form: true },
        LEGEND: { form: true },
        OBJECT: { form: true }
    };
    function preferAttr(tagName, propName) {
        var tag = ATTR_OVERRIDES[tagName.toUpperCase()];
        return tag && tag[propName.toLowerCase()] || false;
    }

    function _defaults$12(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$27(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$12(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$12(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$12(subClass, superClass);
    }

    var innerHTMLWrapper = {
        colgroup: { depth: 2, before: '<table><colgroup>', after: '</colgroup></table>' },
        table: { depth: 1, before: '<table>', after: '</table>' },
        tbody: { depth: 2, before: '<table><tbody>', after: '</tbody></table>' },
        tfoot: { depth: 2, before: '<table><tfoot>', after: '</tfoot></table>' },
        thead: { depth: 2, before: '<table><thead>', after: '</thead></table>' },
        tr: { depth: 3, before: '<table><tbody><tr>', after: '</tr></tbody></table>' }
    };
    // Patch:    innerHTML Fix
    // Browsers: IE9
    // Reason:   IE9 don't allow us to set innerHTML on col, colgroup, frameset,
    //           html, style, table, tbody, tfoot, thead, title, tr.
    // Fix:      Wrap the innerHTML we are about to set in its parents, apply the
    //           wrapped innerHTML on a div, then move the unwrapped nodes into the
    //           target position.
    function domChanges(document, DOMChangesClass) {
        if (!document) return DOMChangesClass;
        if (!shouldApplyFix(document)) {
            return DOMChangesClass;
        }
        var div = document.createElement('div');
        return function (_DOMChangesClass) {
            _inherits$12(DOMChangesWithInnerHTMLFix, _DOMChangesClass);

            function DOMChangesWithInnerHTMLFix() {
                _classCallCheck$27(this, DOMChangesWithInnerHTMLFix);

                return _possibleConstructorReturn$12(this, _DOMChangesClass.apply(this, arguments));
            }

            DOMChangesWithInnerHTMLFix.prototype.insertHTMLBefore = function insertHTMLBefore$$1(parent, nextSibling, html) {
                if (html === null || html === '') {
                    return _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                }
                var parentTag = parent.tagName.toLowerCase();
                var wrapper = innerHTMLWrapper[parentTag];
                if (wrapper === undefined) {
                    return _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                }
                return fixInnerHTML(parent, wrapper, div, html, nextSibling);
            };

            return DOMChangesWithInnerHTMLFix;
        }(DOMChangesClass);
    }
    function treeConstruction(document, DOMTreeConstructionClass) {
        if (!document) return DOMTreeConstructionClass;
        if (!shouldApplyFix(document)) {
            return DOMTreeConstructionClass;
        }
        var div = document.createElement('div');
        return function (_DOMTreeConstructionC) {
            _inherits$12(DOMTreeConstructionWithInnerHTMLFix, _DOMTreeConstructionC);

            function DOMTreeConstructionWithInnerHTMLFix() {
                _classCallCheck$27(this, DOMTreeConstructionWithInnerHTMLFix);

                return _possibleConstructorReturn$12(this, _DOMTreeConstructionC.apply(this, arguments));
            }

            DOMTreeConstructionWithInnerHTMLFix.prototype.insertHTMLBefore = function insertHTMLBefore$$1(parent, referenceNode, html) {
                if (html === null || html === '') {
                    return _DOMTreeConstructionC.prototype.insertHTMLBefore.call(this, parent, referenceNode, html);
                }
                var parentTag = parent.tagName.toLowerCase();
                var wrapper = innerHTMLWrapper[parentTag];
                if (wrapper === undefined) {
                    return _DOMTreeConstructionC.prototype.insertHTMLBefore.call(this, parent, referenceNode, html);
                }
                return fixInnerHTML(parent, wrapper, div, html, referenceNode);
            };

            return DOMTreeConstructionWithInnerHTMLFix;
        }(DOMTreeConstructionClass);
    }
    function fixInnerHTML(parent, wrapper, div, html, reference) {
        var wrappedHtml = wrapper.before + html + wrapper.after;
        div.innerHTML = wrappedHtml;
        var parentNode = div;
        for (var i = 0; i < wrapper.depth; i++) {
            parentNode = parentNode.childNodes[0];
        }

        var _moveNodesBefore = moveNodesBefore(parentNode, parent, reference),
            first = _moveNodesBefore[0],
            last = _moveNodesBefore[1];

        return new ConcreteBounds(parent, first, last);
    }
    function shouldApplyFix(document) {
        var table = document.createElement('table');
        try {
            table.innerHTML = '<tbody></tbody>';
        } catch (e) {} finally {
            if (table.childNodes.length !== 0) {
                // It worked as expected, no fix required
                return false;
            }
        }
        return true;
    }

    function _defaults$13(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$28(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$13(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$13(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$13(subClass, superClass);
    }

    var SVG_NAMESPACE$1 = 'http://www.w3.org/2000/svg';
    // Patch:    insertAdjacentHTML on SVG Fix
    // Browsers: Safari, IE, Edge, Firefox ~33-34
    // Reason:   insertAdjacentHTML does not exist on SVG elements in Safari. It is
    //           present but throws an exception on IE and Edge. Old versions of
    //           Firefox create nodes in the incorrect namespace.
    // Fix:      Since IE and Edge silently fail to create SVG nodes using
    //           innerHTML, and because Firefox may create nodes in the incorrect
    //           namespace using innerHTML on SVG elements, an HTML-string wrapping
    //           approach is used. A pre/post SVG tag is added to the string, then
    //           that whole string is added to a div. The created nodes are plucked
    //           out and applied to the target location on DOM.
    function domChanges$1(document, DOMChangesClass, svgNamespace) {
        if (!document) return DOMChangesClass;
        if (!shouldApplyFix$1(document, svgNamespace)) {
            return DOMChangesClass;
        }
        var div = document.createElement('div');
        return function (_DOMChangesClass) {
            _inherits$13(DOMChangesWithSVGInnerHTMLFix, _DOMChangesClass);

            function DOMChangesWithSVGInnerHTMLFix() {
                _classCallCheck$28(this, DOMChangesWithSVGInnerHTMLFix);

                return _possibleConstructorReturn$13(this, _DOMChangesClass.apply(this, arguments));
            }

            DOMChangesWithSVGInnerHTMLFix.prototype.insertHTMLBefore = function insertHTMLBefore$$1(parent, nextSibling, html) {
                if (html === null || html === '') {
                    return _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                }
                if (parent.namespaceURI !== svgNamespace) {
                    return _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                }
                return fixSVG(parent, div, html, nextSibling);
            };

            return DOMChangesWithSVGInnerHTMLFix;
        }(DOMChangesClass);
    }
    function treeConstruction$1(document, TreeConstructionClass, svgNamespace) {
        if (!document) return TreeConstructionClass;
        if (!shouldApplyFix$1(document, svgNamespace)) {
            return TreeConstructionClass;
        }
        var div = document.createElement('div');
        return function (_TreeConstructionClas) {
            _inherits$13(TreeConstructionWithSVGInnerHTMLFix, _TreeConstructionClas);

            function TreeConstructionWithSVGInnerHTMLFix() {
                _classCallCheck$28(this, TreeConstructionWithSVGInnerHTMLFix);

                return _possibleConstructorReturn$13(this, _TreeConstructionClas.apply(this, arguments));
            }

            TreeConstructionWithSVGInnerHTMLFix.prototype.insertHTMLBefore = function insertHTMLBefore$$1(parent, reference, html) {
                if (html === null || html === '') {
                    return _TreeConstructionClas.prototype.insertHTMLBefore.call(this, parent, reference, html);
                }
                if (parent.namespaceURI !== svgNamespace) {
                    return _TreeConstructionClas.prototype.insertHTMLBefore.call(this, parent, reference, html);
                }
                return fixSVG(parent, div, html, reference);
            };

            return TreeConstructionWithSVGInnerHTMLFix;
        }(TreeConstructionClass);
    }
    function fixSVG(parent, div, html, reference) {
        // IE, Edge: also do not correctly support using `innerHTML` on SVG
        // namespaced elements. So here a wrapper is used.
        var wrappedHtml = '<svg>' + html + '</svg>';
        div.innerHTML = wrappedHtml;

        var _moveNodesBefore = moveNodesBefore(div.firstChild, parent, reference),
            first = _moveNodesBefore[0],
            last = _moveNodesBefore[1];

        return new ConcreteBounds(parent, first, last);
    }
    function shouldApplyFix$1(document, svgNamespace) {
        var svg = document.createElementNS(svgNamespace, 'svg');
        try {
            svg['insertAdjacentHTML']('beforeend', '<circle></circle>');
        } catch (e) {
            // IE, Edge: Will throw, insertAdjacentHTML is unsupported on SVG
            // Safari: Will throw, insertAdjacentHTML is not present on SVG
        } finally {
            // FF: Old versions will create a node in the wrong namespace
            if (svg.childNodes.length === 1 && svg.firstChild.namespaceURI === SVG_NAMESPACE$1) {
                // The test worked as expected, no fix required
                return false;
            }
            return true;
        }
    }

    function _defaults$14(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _classCallCheck$29(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn$14(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$14(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$14(subClass, superClass);
    }

    // Patch:    Adjacent text node merging fix
    // Browsers: IE, Edge, Firefox w/o inspector open
    // Reason:   These browsers will merge adjacent text nodes. For exmaple given
    //           <div>Hello</div> with div.insertAdjacentHTML(' world') browsers
    //           with proper behavior will populate div.childNodes with two items.
    //           These browsers will populate it with one merged node instead.
    // Fix:      Add these nodes to a wrapper element, then iterate the childNodes
    //           of that wrapper and move the nodes to their target location. Note
    //           that potential SVG bugs will have been handled before this fix.
    //           Note that this fix must only apply to the previous text node, as
    //           the base implementation of `insertHTMLBefore` already handles
    //           following text nodes correctly.
    function domChanges$2(document, DOMChangesClass) {
        if (!document) return DOMChangesClass;
        if (!shouldApplyFix$2(document)) {
            return DOMChangesClass;
        }
        return function (_DOMChangesClass) {
            _inherits$14(DOMChangesWithTextNodeMergingFix, _DOMChangesClass);

            function DOMChangesWithTextNodeMergingFix(document) {
                _classCallCheck$29(this, DOMChangesWithTextNodeMergingFix);

                var _this = _possibleConstructorReturn$14(this, _DOMChangesClass.call(this, document));

                _this.uselessComment = document.createComment('');
                return _this;
            }

            DOMChangesWithTextNodeMergingFix.prototype.insertHTMLBefore = function insertHTMLBefore(parent, nextSibling, html) {
                if (html === null) {
                    return _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                }
                var didSetUselessComment = false;
                var nextPrevious = nextSibling ? nextSibling.previousSibling : parent.lastChild;
                if (nextPrevious && nextPrevious instanceof Text) {
                    didSetUselessComment = true;
                    parent.insertBefore(this.uselessComment, nextSibling);
                }
                var bounds = _DOMChangesClass.prototype.insertHTMLBefore.call(this, parent, nextSibling, html);
                if (didSetUselessComment) {
                    parent.removeChild(this.uselessComment);
                }
                return bounds;
            };

            return DOMChangesWithTextNodeMergingFix;
        }(DOMChangesClass);
    }
    function treeConstruction$2(document, TreeConstructionClass) {
        if (!document) return TreeConstructionClass;
        if (!shouldApplyFix$2(document)) {
            return TreeConstructionClass;
        }
        return function (_TreeConstructionClas) {
            _inherits$14(TreeConstructionWithTextNodeMergingFix, _TreeConstructionClas);

            function TreeConstructionWithTextNodeMergingFix(document) {
                _classCallCheck$29(this, TreeConstructionWithTextNodeMergingFix);

                var _this2 = _possibleConstructorReturn$14(this, _TreeConstructionClas.call(this, document));

                _this2.uselessComment = _this2.createComment('');
                return _this2;
            }

            TreeConstructionWithTextNodeMergingFix.prototype.insertHTMLBefore = function insertHTMLBefore(parent, reference, html) {
                if (html === null) {
                    return _TreeConstructionClas.prototype.insertHTMLBefore.call(this, parent, reference, html);
                }
                var didSetUselessComment = false;
                var nextPrevious = reference ? reference.previousSibling : parent.lastChild;
                if (nextPrevious && nextPrevious instanceof Text) {
                    didSetUselessComment = true;
                    parent.insertBefore(this.uselessComment, reference);
                }
                var bounds = _TreeConstructionClas.prototype.insertHTMLBefore.call(this, parent, reference, html);
                if (didSetUselessComment) {
                    parent.removeChild(this.uselessComment);
                }
                return bounds;
            };

            return TreeConstructionWithTextNodeMergingFix;
        }(TreeConstructionClass);
    }
    function shouldApplyFix$2(document) {
        var mergingTextDiv = document.createElement('div');
        mergingTextDiv.innerHTML = 'first';
        mergingTextDiv.insertAdjacentHTML('beforeend', 'second');
        if (mergingTextDiv.childNodes.length === 2) {
            // It worked as expected, no fix required
            return false;
        }
        return true;
    }

    function _defaults$11(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$11(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$11(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$11(subClass, superClass);
    }

    function _classCallCheck$26(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var SVG_NAMESPACE$$1 = 'http://www.w3.org/2000/svg';
    // http://www.w3.org/TR/html/syntax.html#html-integration-point
    var SVG_INTEGRATION_POINTS = { foreignObject: 1, desc: 1, title: 1 };
    // http://www.w3.org/TR/html/syntax.html#adjust-svg-attributes
    // TODO: Adjust SVG attributes
    // http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign
    // TODO: Adjust SVG elements
    // http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign
    var BLACKLIST_TABLE = Object.create(null);
    ["b", "big", "blockquote", "body", "br", "center", "code", "dd", "div", "dl", "dt", "em", "embed", "h1", "h2", "h3", "h4", "h5", "h6", "head", "hr", "i", "img", "li", "listing", "main", "meta", "nobr", "ol", "p", "pre", "ruby", "s", "small", "span", "strong", "strike", "sub", "sup", "table", "tt", "u", "ul", "var"].forEach(function (tag) {
        return BLACKLIST_TABLE[tag] = 1;
    });
    var WHITESPACE = /[\t-\r \xA0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]/;
    var doc = typeof document === 'undefined' ? null : document;
    function isWhitespace(string) {
        return WHITESPACE.test(string);
    }
    function moveNodesBefore(source, target, nextSibling) {
        var first = source.firstChild;
        var last = null;
        var current = first;
        while (current) {
            last = current;
            current = current.nextSibling;
            target.insertBefore(last, nextSibling);
        }
        return [first, last];
    }
    var DOMOperations = function () {
        function DOMOperations(document) {
            _classCallCheck$26(this, DOMOperations);

            this.document = document;
            this.setupUselessElement();
        }
        // split into seperate method so that NodeDOMTreeConstruction
        // can override it.


        DOMOperations.prototype.setupUselessElement = function setupUselessElement() {
            this.uselessElement = this.document.createElement('div');
        };

        DOMOperations.prototype.createElement = function createElement(tag, context) {
            var isElementInSVGNamespace = void 0,
                isHTMLIntegrationPoint = void 0;
            if (context) {
                isElementInSVGNamespace = context.namespaceURI === SVG_NAMESPACE$$1 || tag === 'svg';
                isHTMLIntegrationPoint = SVG_INTEGRATION_POINTS[context.tagName];
            } else {
                isElementInSVGNamespace = tag === 'svg';
                isHTMLIntegrationPoint = false;
            }
            if (isElementInSVGNamespace && !isHTMLIntegrationPoint) {
                // FIXME: This does not properly handle <font> with color, face, or
                // size attributes, which is also disallowed by the spec. We should fix
                // this.
                if (BLACKLIST_TABLE[tag]) {
                    throw new Error('Cannot create a ' + tag + ' inside an SVG context');
                }
                return this.document.createElementNS(SVG_NAMESPACE$$1, tag);
            } else {
                return this.document.createElement(tag);
            }
        };

        DOMOperations.prototype.insertBefore = function insertBefore(parent, node, reference) {
            parent.insertBefore(node, reference);
        };

        DOMOperations.prototype.insertHTMLBefore = function insertHTMLBefore(_parent, nextSibling, html) {
            return _insertHTMLBefore(this.uselessElement, _parent, nextSibling, html);
        };

        DOMOperations.prototype.createTextNode = function createTextNode(text) {
            return this.document.createTextNode(text);
        };

        DOMOperations.prototype.createComment = function createComment(data) {
            return this.document.createComment(data);
        };

        return DOMOperations;
    }();
    var DOM;
    (function (DOM) {
        var TreeConstruction = function (_DOMOperations) {
            _inherits$11(TreeConstruction, _DOMOperations);

            function TreeConstruction() {
                _classCallCheck$26(this, TreeConstruction);

                return _possibleConstructorReturn$11(this, _DOMOperations.apply(this, arguments));
            }

            TreeConstruction.prototype.createElementNS = function createElementNS(namespace, tag) {
                return this.document.createElementNS(namespace, tag);
            };

            TreeConstruction.prototype.setAttribute = function setAttribute(element, name, value, namespace) {
                if (namespace) {
                    element.setAttributeNS(namespace, name, value);
                } else {
                    element.setAttribute(name, value);
                }
            };

            return TreeConstruction;
        }(DOMOperations);

        DOM.TreeConstruction = TreeConstruction;
        var appliedTreeContruction = TreeConstruction;
        appliedTreeContruction = treeConstruction$2(doc, appliedTreeContruction);
        appliedTreeContruction = treeConstruction(doc, appliedTreeContruction);
        appliedTreeContruction = treeConstruction$1(doc, appliedTreeContruction, SVG_NAMESPACE$$1);
        DOM.DOMTreeConstruction = appliedTreeContruction;
    })(DOM || (DOM = {}));
    var DOMChanges = function (_DOMOperations2) {
        _inherits$11(DOMChanges, _DOMOperations2);

        function DOMChanges(document) {
            _classCallCheck$26(this, DOMChanges);

            var _this2 = _possibleConstructorReturn$11(this, _DOMOperations2.call(this, document));

            _this2.document = document;
            _this2.namespace = null;
            return _this2;
        }

        DOMChanges.prototype.setAttribute = function setAttribute(element, name, value) {
            element.setAttribute(name, value);
        };

        DOMChanges.prototype.setAttributeNS = function setAttributeNS(element, namespace, name, value) {
            element.setAttributeNS(namespace, name, value);
        };

        DOMChanges.prototype.removeAttribute = function removeAttribute(element, name) {
            element.removeAttribute(name);
        };

        DOMChanges.prototype.removeAttributeNS = function removeAttributeNS(element, namespace, name) {
            element.removeAttributeNS(namespace, name);
        };

        DOMChanges.prototype.insertNodeBefore = function insertNodeBefore(parent, node, reference) {
            if (isDocumentFragment(node)) {
                var firstChild = node.firstChild,
                    lastChild = node.lastChild;

                this.insertBefore(parent, node, reference);
                return new ConcreteBounds(parent, firstChild, lastChild);
            } else {
                this.insertBefore(parent, node, reference);
                return new SingleNodeBounds(parent, node);
            }
        };

        DOMChanges.prototype.insertTextBefore = function insertTextBefore(parent, nextSibling, text) {
            var textNode = this.createTextNode(text);
            this.insertBefore(parent, textNode, nextSibling);
            return textNode;
        };

        DOMChanges.prototype.insertBefore = function insertBefore(element, node, reference) {
            element.insertBefore(node, reference);
        };

        DOMChanges.prototype.insertAfter = function insertAfter(element, node, reference) {
            this.insertBefore(element, node, reference.nextSibling);
        };

        return DOMChanges;
    }(DOMOperations);
    function _insertHTMLBefore(_useless, _parent, _nextSibling, html) {
        // TypeScript vendored an old version of the DOM spec where `insertAdjacentHTML`
        // only exists on `HTMLElement` but not on `Element`. We actually work with the
        // newer version of the DOM API here (and monkey-patch this method in `./compat`
        // when we detect older browsers). This is a hack to work around this limitation.
        var parent = _parent;
        var useless = _useless;
        var nextSibling = _nextSibling;
        var prev = nextSibling ? nextSibling.previousSibling : parent.lastChild;
        var last = void 0;
        if (html === null || html === '') {
            return new ConcreteBounds(parent, null, null);
        }
        if (nextSibling === null) {
            parent.insertAdjacentHTML('beforeend', html);
            last = parent.lastChild;
        } else if (nextSibling instanceof HTMLElement) {
            nextSibling.insertAdjacentHTML('beforebegin', html);
            last = nextSibling.previousSibling;
        } else {
            // Non-element nodes do not support insertAdjacentHTML, so add an
            // element and call it on that element. Then remove the element.
            //
            // This also protects Edge, IE and Firefox w/o the inspector open
            // from merging adjacent text nodes. See ./compat/text-node-merging-fix.ts
            parent.insertBefore(useless, nextSibling);
            useless.insertAdjacentHTML('beforebegin', html);
            last = useless.previousSibling;
            parent.removeChild(useless);
        }
        var first = prev ? prev.nextSibling : parent.firstChild;
        return new ConcreteBounds(parent, first, last);
    }
    function isDocumentFragment(node) {
        return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;
    }
    var helper = DOMChanges;
    helper = domChanges$2(doc, helper);
    helper = domChanges(doc, helper);
    helper = domChanges$1(doc, helper, SVG_NAMESPACE$$1);
    var helper$1 = helper;
    var DOMTreeConstruction = DOM.DOMTreeConstruction;

    function _defaults$10(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    function _possibleConstructorReturn$10(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$10(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$10(subClass, superClass);
    }

    function _classCallCheck$25(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function defaultManagers(element, attr, _isTrusting, _namespace) {
        var tagName = element.tagName;
        var isSVG = element.namespaceURI === SVG_NAMESPACE$$1;
        if (isSVG) {
            return defaultAttributeManagers(tagName, attr);
        }

        var _normalizeProperty = normalizeProperty(element, attr),
            type = _normalizeProperty.type,
            normalized = _normalizeProperty.normalized;

        if (type === 'attr') {
            return defaultAttributeManagers(tagName, normalized);
        } else {
            return defaultPropertyManagers(tagName, normalized);
        }
    }
    function defaultPropertyManagers(tagName, attr) {
        if (requiresSanitization(tagName, attr)) {
            return new SafePropertyManager(attr);
        }
        if (isUserInputValue(tagName, attr)) {
            return INPUT_VALUE_PROPERTY_MANAGER;
        }
        if (isOptionSelected(tagName, attr)) {
            return OPTION_SELECTED_MANAGER;
        }
        return new PropertyManager(attr);
    }
    function defaultAttributeManagers(tagName, attr) {
        if (requiresSanitization(tagName, attr)) {
            return new SafeAttributeManager(attr);
        }
        return new AttributeManager(attr);
    }
    function readDOMAttr(element, attr) {
        var isSVG = element.namespaceURI === SVG_NAMESPACE$$1;

        var _normalizeProperty2 = normalizeProperty(element, attr),
            type = _normalizeProperty2.type,
            normalized = _normalizeProperty2.normalized;

        if (isSVG) {
            return element.getAttribute(normalized);
        }
        if (type === 'attr') {
            return element.getAttribute(normalized);
        }
        {
            return element[normalized];
        }
    }

    var AttributeManager = function () {
        function AttributeManager(attr) {
            _classCallCheck$25(this, AttributeManager);

            this.attr = attr;
        }

        AttributeManager.prototype.setAttribute = function setAttribute(env, element, value, namespace) {
            var dom = env.getAppendOperations();
            var normalizedValue = normalizeAttributeValue(value);
            if (!isAttrRemovalValue(normalizedValue)) {
                dom.setAttribute(element, this.attr, normalizedValue, namespace);
            }
        };

        AttributeManager.prototype.updateAttribute = function updateAttribute(env, element, value, namespace) {
            if (value === null || value === undefined || value === false) {
                if (namespace) {
                    env.getDOM().removeAttributeNS(element, namespace, this.attr);
                } else {
                    env.getDOM().removeAttribute(element, this.attr);
                }
            } else {
                this.setAttribute(env, element, value);
            }
        };

        return AttributeManager;
    }();

    var PropertyManager = function (_AttributeManager) {
        _inherits$10(PropertyManager, _AttributeManager);

        function PropertyManager() {
            _classCallCheck$25(this, PropertyManager);

            return _possibleConstructorReturn$10(this, _AttributeManager.apply(this, arguments));
        }

        PropertyManager.prototype.setAttribute = function setAttribute(_env, element, value, _namespace) {
            if (!isAttrRemovalValue(value)) {
                element[this.attr] = value;
            }
        };

        PropertyManager.prototype.removeAttribute = function removeAttribute(env, element, namespace) {
            // TODO this sucks but to preserve properties first and to meet current
            // semantics we must do this.
            var attr = this.attr;

            if (namespace) {
                env.getDOM().removeAttributeNS(element, namespace, attr);
            } else {
                env.getDOM().removeAttribute(element, attr);
            }
        };

        PropertyManager.prototype.updateAttribute = function updateAttribute(env, element, value, namespace) {
            // ensure the property is always updated
            element[this.attr] = value;
            if (isAttrRemovalValue(value)) {
                this.removeAttribute(env, element, namespace);
            }
        };

        return PropertyManager;
    }(AttributeManager);

    function normalizeAttributeValue(value) {
        if (value === false || value === undefined || value === null) {
            return null;
        }
        if (value === true) {
            return '';
        }
        // onclick function etc in SSR
        if (typeof value === 'function') {
            return null;
        }
        return String(value);
    }
    function isAttrRemovalValue(value) {
        return value === null || value === undefined;
    }

    var SafePropertyManager = function (_PropertyManager) {
        _inherits$10(SafePropertyManager, _PropertyManager);

        function SafePropertyManager() {
            _classCallCheck$25(this, SafePropertyManager);

            return _possibleConstructorReturn$10(this, _PropertyManager.apply(this, arguments));
        }

        SafePropertyManager.prototype.setAttribute = function setAttribute(env, element, value) {
            _PropertyManager.prototype.setAttribute.call(this, env, element, sanitizeAttributeValue(env, element, this.attr, value));
        };

        SafePropertyManager.prototype.updateAttribute = function updateAttribute(env, element, value) {
            _PropertyManager.prototype.updateAttribute.call(this, env, element, sanitizeAttributeValue(env, element, this.attr, value));
        };

        return SafePropertyManager;
    }(PropertyManager);

    function isUserInputValue(tagName, attribute) {
        return (tagName === 'INPUT' || tagName === 'TEXTAREA') && attribute === 'value';
    }

    var InputValuePropertyManager = function (_AttributeManager2) {
        _inherits$10(InputValuePropertyManager, _AttributeManager2);

        function InputValuePropertyManager() {
            _classCallCheck$25(this, InputValuePropertyManager);

            return _possibleConstructorReturn$10(this, _AttributeManager2.apply(this, arguments));
        }

        InputValuePropertyManager.prototype.setAttribute = function setAttribute(_env, element, value) {
            var input = element;
            input.value = normalizeTextValue(value);
        };

        InputValuePropertyManager.prototype.updateAttribute = function updateAttribute(_env, element, value) {
            var input = element;
            var currentValue = input.value;
            var normalizedValue = normalizeTextValue(value);
            if (currentValue !== normalizedValue) {
                input.value = normalizedValue;
            }
        };

        return InputValuePropertyManager;
    }(AttributeManager);

    var INPUT_VALUE_PROPERTY_MANAGER = new InputValuePropertyManager('value');
    function isOptionSelected(tagName, attribute) {
        return tagName === 'OPTION' && attribute === 'selected';
    }

    var OptionSelectedManager = function (_PropertyManager2) {
        _inherits$10(OptionSelectedManager, _PropertyManager2);

        function OptionSelectedManager() {
            _classCallCheck$25(this, OptionSelectedManager);

            return _possibleConstructorReturn$10(this, _PropertyManager2.apply(this, arguments));
        }

        OptionSelectedManager.prototype.setAttribute = function setAttribute(_env, element, value) {
            if (value !== null && value !== undefined && value !== false) {
                var option = element;
                option.selected = true;
            }
        };

        OptionSelectedManager.prototype.updateAttribute = function updateAttribute(_env, element, value) {
            var option = element;
            if (value) {
                option.selected = true;
            } else {
                option.selected = false;
            }
        };

        return OptionSelectedManager;
    }(PropertyManager);

    var OPTION_SELECTED_MANAGER = new OptionSelectedManager('selected');

    var SafeAttributeManager = function (_AttributeManager3) {
        _inherits$10(SafeAttributeManager, _AttributeManager3);

        function SafeAttributeManager() {
            _classCallCheck$25(this, SafeAttributeManager);

            return _possibleConstructorReturn$10(this, _AttributeManager3.apply(this, arguments));
        }

        SafeAttributeManager.prototype.setAttribute = function setAttribute(env, element, value) {
            _AttributeManager3.prototype.setAttribute.call(this, env, element, sanitizeAttributeValue(env, element, this.attr, value));
        };

        SafeAttributeManager.prototype.updateAttribute = function updateAttribute(env, element, value, _namespace) {
            _AttributeManager3.prototype.updateAttribute.call(this, env, element, sanitizeAttributeValue(env, element, this.attr, value));
        };

        return SafeAttributeManager;
    }(AttributeManager);

    var _createClass$4 = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck$23(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var Scope = function () {
        function Scope(
        // the 0th slot is `self`
        slots, callerScope,
        // named arguments and blocks passed to a layout that uses eval
        evalScope,
        // locals in scope when the partial was invoked
        partialMap) {
            _classCallCheck$23(this, Scope);

            this.slots = slots;
            this.callerScope = callerScope;
            this.evalScope = evalScope;
            this.partialMap = partialMap;
        }

        Scope.root = function root(self) {
            var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            var refs = new Array(size + 1);
            for (var i = 0; i <= size; i++) {
                refs[i] = UNDEFINED_REFERENCE;
            }
            return new Scope(refs, null, null, null).init({ self: self });
        };

        Scope.sized = function sized() {
            var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            var refs = new Array(size + 1);
            for (var i = 0; i <= size; i++) {
                refs[i] = UNDEFINED_REFERENCE;
            }
            return new Scope(refs, null, null, null);
        };

        Scope.prototype.init = function init(_ref) {
            var self = _ref.self;

            this.slots[0] = self;
            return this;
        };

        Scope.prototype.getSelf = function getSelf() {
            return this.get(0);
        };

        Scope.prototype.getSymbol = function getSymbol(symbol) {
            return this.get(symbol);
        };

        Scope.prototype.getBlock = function getBlock(symbol) {
            return this.get(symbol);
        };

        Scope.prototype.getEvalScope = function getEvalScope() {
            return this.evalScope;
        };

        Scope.prototype.getPartialMap = function getPartialMap() {
            return this.partialMap;
        };

        Scope.prototype.bind = function bind(symbol, value) {
            this.set(symbol, value);
        };

        Scope.prototype.bindSelf = function bindSelf(self) {
            this.set(0, self);
        };

        Scope.prototype.bindSymbol = function bindSymbol(symbol, value) {
            this.set(symbol, value);
        };

        Scope.prototype.bindBlock = function bindBlock(symbol, value) {
            this.set(symbol, value);
        };

        Scope.prototype.bindEvalScope = function bindEvalScope(map$$1) {
            this.evalScope = map$$1;
        };

        Scope.prototype.bindPartialMap = function bindPartialMap(map$$1) {
            this.partialMap = map$$1;
        };

        Scope.prototype.bindCallerScope = function bindCallerScope(scope) {
            this.callerScope = scope;
        };

        Scope.prototype.getCallerScope = function getCallerScope() {
            return this.callerScope;
        };

        Scope.prototype.child = function child() {
            return new Scope(this.slots.slice(), this.callerScope, this.evalScope, this.partialMap);
        };

        Scope.prototype.get = function get(index) {
            if (index >= this.slots.length) {
                throw new RangeError('BUG: cannot get $' + index + ' from scope; length=' + this.slots.length);
            }
            return this.slots[index];
        };

        Scope.prototype.set = function set(index, value) {
            if (index >= this.slots.length) {
                throw new RangeError('BUG: cannot get $' + index + ' from scope; length=' + this.slots.length);
            }
            this.slots[index] = value;
        };

        return Scope;
    }();

    var Transaction = function () {
        function Transaction() {
            _classCallCheck$23(this, Transaction);

            this.scheduledInstallManagers = [];
            this.scheduledInstallModifiers = [];
            this.scheduledUpdateModifierManagers = [];
            this.scheduledUpdateModifiers = [];
            this.createdComponents = [];
            this.createdManagers = [];
            this.updatedComponents = [];
            this.updatedManagers = [];
            this.destructors = [];
        }

        Transaction.prototype.didCreate = function didCreate(component, manager) {
            this.createdComponents.push(component);
            this.createdManagers.push(manager);
        };

        Transaction.prototype.didUpdate = function didUpdate(component, manager) {
            this.updatedComponents.push(component);
            this.updatedManagers.push(manager);
        };

        Transaction.prototype.scheduleInstallModifier = function scheduleInstallModifier(modifier, manager) {
            this.scheduledInstallManagers.push(manager);
            this.scheduledInstallModifiers.push(modifier);
        };

        Transaction.prototype.scheduleUpdateModifier = function scheduleUpdateModifier(modifier, manager) {
            this.scheduledUpdateModifierManagers.push(manager);
            this.scheduledUpdateModifiers.push(modifier);
        };

        Transaction.prototype.didDestroy = function didDestroy(d) {
            this.destructors.push(d);
        };

        Transaction.prototype.commit = function commit() {
            var createdComponents = this.createdComponents,
                createdManagers = this.createdManagers;

            for (var i = 0; i < createdComponents.length; i++) {
                var component = createdComponents[i];
                var manager = createdManagers[i];
                manager.didCreate(component);
            }
            var updatedComponents = this.updatedComponents,
                updatedManagers = this.updatedManagers;

            for (var _i = 0; _i < updatedComponents.length; _i++) {
                var _component = updatedComponents[_i];
                var _manager = updatedManagers[_i];
                _manager.didUpdate(_component);
            }
            var destructors = this.destructors;

            for (var _i2 = 0; _i2 < destructors.length; _i2++) {
                destructors[_i2].destroy();
            }
            var scheduledInstallManagers = this.scheduledInstallManagers,
                scheduledInstallModifiers = this.scheduledInstallModifiers;

            for (var _i3 = 0; _i3 < scheduledInstallManagers.length; _i3++) {
                var _manager2 = scheduledInstallManagers[_i3];
                var modifier = scheduledInstallModifiers[_i3];
                _manager2.install(modifier);
            }
            var scheduledUpdateModifierManagers = this.scheduledUpdateModifierManagers,
                scheduledUpdateModifiers = this.scheduledUpdateModifiers;

            for (var _i4 = 0; _i4 < scheduledUpdateModifierManagers.length; _i4++) {
                var _manager3 = scheduledUpdateModifierManagers[_i4];
                var _modifier = scheduledUpdateModifiers[_i4];
                _manager3.update(_modifier);
            }
        };

        return Transaction;
    }();

    var Opcode = function () {
        function Opcode(heap) {
            _classCallCheck$23(this, Opcode);

            this.heap = heap;
            this.offset = 0;
        }

        _createClass$4(Opcode, [{
            key: 'type',
            get: function () {
                return this.heap.getbyaddr(this.offset);
            }
        }, {
            key: 'op1',
            get: function () {
                return this.heap.getbyaddr(this.offset + 1);
            }
        }, {
            key: 'op2',
            get: function () {
                return this.heap.getbyaddr(this.offset + 2);
            }
        }, {
            key: 'op3',
            get: function () {
                return this.heap.getbyaddr(this.offset + 3);
            }
        }]);

        return Opcode;
    }();
    var TableSlotState;
    (function (TableSlotState) {
        TableSlotState[TableSlotState["Allocated"] = 0] = "Allocated";
        TableSlotState[TableSlotState["Freed"] = 1] = "Freed";
        TableSlotState[TableSlotState["Purged"] = 2] = "Purged";
        TableSlotState[TableSlotState["Pointer"] = 3] = "Pointer";
    })(TableSlotState || (TableSlotState = {}));
    var Heap = function () {
        function Heap() {
            _classCallCheck$23(this, Heap);

            this.heap = [];
            this.offset = 0;
            this.handle = 0;
            /**
             * layout:
             *
             * - pointer into heap
             * - size
             * - freed (0 or 1)
             */
            this.table = [];
        }

        Heap.prototype.push = function push(item) {
            this.heap[this.offset++] = item;
        };

        Heap.prototype.getbyaddr = function getbyaddr(address) {
            return this.heap[address];
        };

        Heap.prototype.setbyaddr = function setbyaddr(address, value) {
            this.heap[address] = value;
        };

        Heap.prototype.malloc = function malloc() {
            this.table.push(this.offset, 0, 0);
            var handle = this.handle;
            this.handle += 3;
            return handle;
        };

        Heap.prototype.finishMalloc = function finishMalloc(handle) {
            var start = this.table[handle];
            var finish = this.offset;
            this.table[handle + 1] = finish - start;
        };

        Heap.prototype.size = function size() {
            return this.offset;
        };
        // It is illegal to close over this address, as compaction
        // may move it. However, it is legal to use this address
        // multiple times between compactions.


        Heap.prototype.getaddr = function getaddr(handle) {
            return this.table[handle];
        };

        Heap.prototype.gethandle = function gethandle(address) {
            this.table.push(address, 0, TableSlotState.Pointer);
            var handle = this.handle;
            this.handle += 3;
            return handle;
        };

        Heap.prototype.sizeof = function sizeof(handle) {
            return -1;
        };

        Heap.prototype.free = function free(handle) {
            this.table[handle + 2] = 1;
        };

        Heap.prototype.compact = function compact() {
            var compactedSize = 0;
            var table = this.table,
                length = this.table.length,
                heap = this.heap;

            for (var i = 0; i < length; i += 3) {
                var offset = table[i];
                var size = table[i + 1];
                var state = table[i + 2];
                if (state === TableSlotState.Purged) {
                    continue;
                } else if (state === TableSlotState.Freed) {
                    // transition to "already freed"
                    // a good improvement would be to reuse
                    // these slots
                    table[i + 2] = 2;
                    compactedSize += size;
                } else if (state === TableSlotState.Allocated) {
                    for (var j = offset; j <= i + size; j++) {
                        heap[j - compactedSize] = heap[j];
                    }
                    table[i] = offset - compactedSize;
                } else if (state === TableSlotState.Pointer) {
                    table[i] = offset - compactedSize;
                }
            }
            this.offset = this.offset - compactedSize;
        };

        return Heap;
    }();
    var Program = function () {
        function Program() {
            _classCallCheck$23(this, Program);

            this.heap = new Heap();
            this._opcode = new Opcode(this.heap);
            this.constants = new Constants();
        }

        Program.prototype.opcode = function opcode(offset) {
            this._opcode.offset = offset;
            return this._opcode;
        };

        return Program;
    }();
    var Environment = function () {
        function Environment(_ref2) {
            var appendOperations = _ref2.appendOperations,
                updateOperations = _ref2.updateOperations;

            _classCallCheck$23(this, Environment);

            this._macros = null;
            this._transaction = null;
            this.program = new Program();
            this.appendOperations = appendOperations;
            this.updateOperations = updateOperations;
        }

        Environment.prototype.toConditionalReference = function toConditionalReference(reference) {
            return new ConditionalReference(reference);
        };

        Environment.prototype.getAppendOperations = function getAppendOperations() {
            return this.appendOperations;
        };

        Environment.prototype.getDOM = function getDOM() {
            return this.updateOperations;
        };

        Environment.prototype.getIdentity = function getIdentity(object) {
            return (0, _util.ensureGuid)(object) + '';
        };

        Environment.prototype.begin = function begin() {
            (0, _util.assert)(!this._transaction, 'a glimmer transaction was begun, but one already exists. You may have a nested transaction');
            this._transaction = new Transaction();
        };

        Environment.prototype.didCreate = function didCreate(component, manager) {
            this.transaction.didCreate(component, manager);
        };

        Environment.prototype.didUpdate = function didUpdate(component, manager) {
            this.transaction.didUpdate(component, manager);
        };

        Environment.prototype.scheduleInstallModifier = function scheduleInstallModifier(modifier, manager) {
            this.transaction.scheduleInstallModifier(modifier, manager);
        };

        Environment.prototype.scheduleUpdateModifier = function scheduleUpdateModifier(modifier, manager) {
            this.transaction.scheduleUpdateModifier(modifier, manager);
        };

        Environment.prototype.didDestroy = function didDestroy(d) {
            this.transaction.didDestroy(d);
        };

        Environment.prototype.commit = function commit() {
            var transaction = this.transaction;
            this._transaction = null;
            transaction.commit();
        };

        Environment.prototype.attributeFor = function attributeFor(element, attr, isTrusting, namespace) {
            return defaultManagers(element, attr, isTrusting, namespace === undefined ? null : namespace);
        };

        Environment.prototype.macros = function macros() {
            var macros = this._macros;
            if (!macros) {
                this._macros = macros = this.populateBuiltins();
            }
            return macros;
        };

        Environment.prototype.populateBuiltins = function populateBuiltins$$1() {
            return populateBuiltins();
        };

        _createClass$4(Environment, [{
            key: 'transaction',
            get: function () {
                return this._transaction;
            }
        }]);

        return Environment;
    }();

    function _defaults$15(obj, defaults) {
        var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
            var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
                Object.defineProperty(obj, key, value);
            }
        }return obj;
    }

    var _createClass$5 = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _possibleConstructorReturn$15(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits$15(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults$15(subClass, superClass);
    }

    function _classCallCheck$30(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var UpdatingVM = function () {
        function UpdatingVM(env, _ref) {
            var _ref$alwaysRevalidate = _ref.alwaysRevalidate,
                alwaysRevalidate = _ref$alwaysRevalidate === undefined ? false : _ref$alwaysRevalidate;

            _classCallCheck$30(this, UpdatingVM);

            this.frameStack = new _util.Stack();
            this.env = env;
            this.constants = env.program.constants;
            this.dom = env.getDOM();
            this.alwaysRevalidate = alwaysRevalidate;
        }

        UpdatingVM.prototype.execute = function execute(opcodes, handler) {
            var frameStack = this.frameStack;

            this.try(opcodes, handler);
            while (true) {
                if (frameStack.isEmpty()) break;
                var opcode = this.frame.nextStatement();
                if (opcode === null) {
                    this.frameStack.pop();
                    continue;
                }
                opcode.evaluate(this);
            }
        };

        UpdatingVM.prototype.goto = function goto(op) {
            this.frame.goto(op);
        };

        UpdatingVM.prototype.try = function _try(ops, handler) {
            this.frameStack.push(new UpdatingVMFrame(this, ops, handler));
        };

        UpdatingVM.prototype.throw = function _throw() {
            this.frame.handleException();
            this.frameStack.pop();
        };

        UpdatingVM.prototype.evaluateOpcode = function evaluateOpcode(opcode) {
            opcode.evaluate(this);
        };

        _createClass$5(UpdatingVM, [{
            key: 'frame',
            get: function () {
                return this.frameStack.current;
            }
        }]);

        return UpdatingVM;
    }();

    var BlockOpcode = function (_UpdatingOpcode) {
        _inherits$15(BlockOpcode, _UpdatingOpcode);

        function BlockOpcode(start, state, bounds$$1, children) {
            _classCallCheck$30(this, BlockOpcode);

            var _this = _possibleConstructorReturn$15(this, _UpdatingOpcode.call(this));

            _this.start = start;
            _this.type = "block";
            _this.next = null;
            _this.prev = null;
            var env = state.env,
                scope = state.scope,
                dynamicScope = state.dynamicScope,
                stack = state.stack;

            _this.children = children;
            _this.env = env;
            _this.scope = scope;
            _this.dynamicScope = dynamicScope;
            _this.stack = stack;
            _this.bounds = bounds$$1;
            return _this;
        }

        BlockOpcode.prototype.parentElement = function parentElement() {
            return this.bounds.parentElement();
        };

        BlockOpcode.prototype.firstNode = function firstNode() {
            return this.bounds.firstNode();
        };

        BlockOpcode.prototype.lastNode = function lastNode() {
            return this.bounds.lastNode();
        };

        BlockOpcode.prototype.evaluate = function evaluate(vm) {
            vm.try(this.children, null);
        };

        BlockOpcode.prototype.destroy = function destroy() {
            this.bounds.destroy();
        };

        BlockOpcode.prototype.didDestroy = function didDestroy() {
            this.env.didDestroy(this.bounds);
        };

        BlockOpcode.prototype.toJSON = function toJSON() {
            var details = (0, _util.dict)();
            details["guid"] = '' + this._guid;
            return {
                guid: this._guid,
                type: this.type,
                details: details,
                children: this.children.toArray().map(function (op) {
                    return op.toJSON();
                })
            };
        };

        return BlockOpcode;
    }(UpdatingOpcode);
    var TryOpcode = function (_BlockOpcode) {
        _inherits$15(TryOpcode, _BlockOpcode);

        function TryOpcode(start, state, bounds$$1, children) {
            _classCallCheck$30(this, TryOpcode);

            var _this2 = _possibleConstructorReturn$15(this, _BlockOpcode.call(this, start, state, bounds$$1, children));

            _this2.type = "try";
            _this2.tag = _this2._tag = _reference2.UpdatableTag.create(_reference2.CONSTANT_TAG);
            return _this2;
        }

        TryOpcode.prototype.didInitializeChildren = function didInitializeChildren() {
            this._tag.inner.update((0, _reference2.combineSlice)(this.children));
        };

        TryOpcode.prototype.evaluate = function evaluate(vm) {
            vm.try(this.children, this);
        };

        TryOpcode.prototype.handleException = function handleException() {
            var _this3 = this;

            var env = this.env,
                bounds$$1 = this.bounds,
                children = this.children,
                scope = this.scope,
                dynamicScope = this.dynamicScope,
                start = this.start,
                stack = this.stack,
                prev = this.prev,
                next = this.next;

            children.clear();
            var elementStack = ElementStack.resume(env, bounds$$1, bounds$$1.reset(env));
            var vm = new VM(env, scope, dynamicScope, elementStack);
            var updating = new _util.LinkedList();
            vm.execute(start, function (vm) {
                vm.stack = EvaluationStack.restore(stack);
                vm.updatingOpcodeStack.push(updating);
                vm.updateWith(_this3);
                vm.updatingOpcodeStack.push(children);
            });
            this.prev = prev;
            this.next = next;
        };

        TryOpcode.prototype.toJSON = function toJSON() {
            var json = _BlockOpcode.prototype.toJSON.call(this);
            var details = json["details"];
            if (!details) {
                details = json["details"] = {};
            }
            return _BlockOpcode.prototype.toJSON.call(this);
        };

        return TryOpcode;
    }(BlockOpcode);

    var ListRevalidationDelegate = function () {
        function ListRevalidationDelegate(opcode, marker) {
            _classCallCheck$30(this, ListRevalidationDelegate);

            this.opcode = opcode;
            this.marker = marker;
            this.didInsert = false;
            this.didDelete = false;
            this.map = opcode.map;
            this.updating = opcode['children'];
        }

        ListRevalidationDelegate.prototype.insert = function insert(key, item, memo, before) {
            var map$$1 = this.map,
                opcode = this.opcode,
                updating = this.updating;

            var nextSibling = null;
            var reference = null;
            if (before) {
                reference = map$$1[before];
                nextSibling = reference['bounds'].firstNode();
            } else {
                nextSibling = this.marker;
            }
            var vm = opcode.vmForInsertion(nextSibling);
            var tryOpcode = null;
            var start = opcode.start;

            vm.execute(start, function (vm) {
                map$$1[key] = tryOpcode = vm.iterate(memo, item);
                vm.updatingOpcodeStack.push(new _util.LinkedList());
                vm.updateWith(tryOpcode);
                vm.updatingOpcodeStack.push(tryOpcode.children);
            });
            updating.insertBefore(tryOpcode, reference);
            this.didInsert = true;
        };

        ListRevalidationDelegate.prototype.retain = function retain(_key, _item, _memo) {};

        ListRevalidationDelegate.prototype.move = function move$$1(key, _item, _memo, before) {
            var map$$1 = this.map,
                updating = this.updating;

            var entry = map$$1[key];
            var reference = map$$1[before] || null;
            if (before) {
                move(entry, reference.firstNode());
            } else {
                move(entry, this.marker);
            }
            updating.remove(entry);
            updating.insertBefore(entry, reference);
        };

        ListRevalidationDelegate.prototype.delete = function _delete(key) {
            var map$$1 = this.map;

            var opcode = map$$1[key];
            opcode.didDestroy();
            clear(opcode);
            this.updating.remove(opcode);
            delete map$$1[key];
            this.didDelete = true;
        };

        ListRevalidationDelegate.prototype.done = function done() {
            this.opcode.didInitializeChildren(this.didInsert || this.didDelete);
        };

        return ListRevalidationDelegate;
    }();

    var ListBlockOpcode = function (_BlockOpcode2) {
        _inherits$15(ListBlockOpcode, _BlockOpcode2);

        function ListBlockOpcode(start, state, bounds$$1, children, artifacts) {
            _classCallCheck$30(this, ListBlockOpcode);

            var _this4 = _possibleConstructorReturn$15(this, _BlockOpcode2.call(this, start, state, bounds$$1, children));

            _this4.type = "list-block";
            _this4.map = (0, _util.dict)();
            _this4.lastIterated = _reference2.INITIAL;
            _this4.artifacts = artifacts;
            var _tag = _this4._tag = _reference2.UpdatableTag.create(_reference2.CONSTANT_TAG);
            _this4.tag = (0, _reference2.combine)([artifacts.tag, _tag]);
            return _this4;
        }

        ListBlockOpcode.prototype.didInitializeChildren = function didInitializeChildren() {
            var listDidChange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            this.lastIterated = this.artifacts.tag.value();
            if (listDidChange) {
                this._tag.inner.update((0, _reference2.combineSlice)(this.children));
            }
        };

        ListBlockOpcode.prototype.evaluate = function evaluate(vm) {
            var artifacts = this.artifacts,
                lastIterated = this.lastIterated;

            if (!artifacts.tag.validate(lastIterated)) {
                var bounds$$1 = this.bounds;
                var dom = vm.dom;

                var marker = dom.createComment('');
                dom.insertAfter(bounds$$1.parentElement(), marker, bounds$$1.lastNode());
                var target = new ListRevalidationDelegate(this, marker);
                var synchronizer = new _reference2.IteratorSynchronizer({ target: target, artifacts: artifacts });
                synchronizer.sync();
                this.parentElement().removeChild(marker);
            }
            // Run now-updated updating opcodes
            _BlockOpcode2.prototype.evaluate.call(this, vm);
        };

        ListBlockOpcode.prototype.vmForInsertion = function vmForInsertion(nextSibling) {
            var env = this.env,
                scope = this.scope,
                dynamicScope = this.dynamicScope;

            var elementStack = ElementStack.forInitialRender(this.env, this.bounds.parentElement(), nextSibling);
            return new VM(env, scope, dynamicScope, elementStack);
        };

        ListBlockOpcode.prototype.toJSON = function toJSON() {
            var json = _BlockOpcode2.prototype.toJSON.call(this);
            var map$$1 = this.map;
            var inner = Object.keys(map$$1).map(function (key) {
                return JSON.stringify(key) + ': ' + map$$1[key]._guid;
            }).join(", ");
            var details = json["details"];
            if (!details) {
                details = json["details"] = {};
            }
            details["map"] = '{' + inner + '}';
            return json;
        };

        return ListBlockOpcode;
    }(BlockOpcode);

    var UpdatingVMFrame = function () {
        function UpdatingVMFrame(vm, ops, exceptionHandler) {
            _classCallCheck$30(this, UpdatingVMFrame);

            this.vm = vm;
            this.ops = ops;
            this.exceptionHandler = exceptionHandler;
            this.vm = vm;
            this.ops = ops;
            this.current = ops.head();
        }

        UpdatingVMFrame.prototype.goto = function goto(op) {
            this.current = op;
        };

        UpdatingVMFrame.prototype.nextStatement = function nextStatement() {
            var current = this.current,
                ops = this.ops;

            if (current) this.current = ops.nextNode(current);
            return current;
        };

        UpdatingVMFrame.prototype.handleException = function handleException() {
            if (this.exceptionHandler) {
                this.exceptionHandler.handleException();
            }
        };

        return UpdatingVMFrame;
    }();

    function _classCallCheck$31(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var RenderResult = function () {
        function RenderResult(env, updating, bounds$$1) {
            _classCallCheck$31(this, RenderResult);

            this.env = env;
            this.updating = updating;
            this.bounds = bounds$$1;
        }

        RenderResult.prototype.rerender = function rerender() {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { alwaysRevalidate: false },
                _ref$alwaysRevalidate = _ref.alwaysRevalidate,
                alwaysRevalidate = _ref$alwaysRevalidate === undefined ? false : _ref$alwaysRevalidate;

            var env = this.env,
                updating = this.updating;

            var vm = new UpdatingVM(env, { alwaysRevalidate: alwaysRevalidate });
            vm.execute(updating, this);
        };

        RenderResult.prototype.parentElement = function parentElement() {
            return this.bounds.parentElement();
        };

        RenderResult.prototype.firstNode = function firstNode() {
            return this.bounds.firstNode();
        };

        RenderResult.prototype.lastNode = function lastNode() {
            return this.bounds.lastNode();
        };

        RenderResult.prototype.opcodes = function opcodes() {
            return this.updating;
        };

        RenderResult.prototype.handleException = function handleException() {
            throw "this should never happen";
        };

        RenderResult.prototype.destroy = function destroy() {
            this.bounds.destroy();
            clear(this.bounds);
        };

        return RenderResult;
    }();

    var _createClass$3 = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
            }
        }return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
    }();

    function _classCallCheck$22(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var EvaluationStack = function () {
        function EvaluationStack(stack, fp, sp) {
            _classCallCheck$22(this, EvaluationStack);

            this.stack = stack;
            this.fp = fp;
            this.sp = sp;
        }

        EvaluationStack.empty = function empty() {
            return new this([], 0, -1);
        };

        EvaluationStack.restore = function restore(snapshot) {
            return new this(snapshot.slice(), 0, snapshot.length - 1);
        };

        EvaluationStack.prototype.isEmpty = function isEmpty() {
            return this.sp === -1;
        };

        EvaluationStack.prototype.push = function push(value) {
            this.stack[++this.sp] = value;
        };

        EvaluationStack.prototype.dup = function dup() {
            var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.sp;

            this.push(this.stack[position]);
        };

        EvaluationStack.prototype.pop = function pop() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            var top = this.stack[this.sp];
            this.sp -= n;
            return top;
        };

        EvaluationStack.prototype.peek = function peek() {
            return this.stack[this.sp];
        };

        EvaluationStack.prototype.fromBase = function fromBase(offset) {
            return this.stack[this.fp - offset];
        };

        EvaluationStack.prototype.fromTop = function fromTop(offset) {
            return this.stack[this.sp - offset];
        };

        EvaluationStack.prototype.capture = function capture(items) {
            var end = this.sp + 1;
            var start = end - items;
            return this.stack.slice(start, end);
        };

        EvaluationStack.prototype.reset = function reset() {
            this.stack.length = 0;
        };

        EvaluationStack.prototype.toArray = function toArray() {
            return this.stack.slice(this.fp, this.sp + 1);
        };

        return EvaluationStack;
    }();

    var VM = function () {
        function VM(env, scope, dynamicScope, elementStack) {
            _classCallCheck$22(this, VM);

            this.env = env;
            this.elementStack = elementStack;
            this.dynamicScopeStack = new _util.Stack();
            this.scopeStack = new _util.Stack();
            this.updatingOpcodeStack = new _util.Stack();
            this.cacheGroups = new _util.Stack();
            this.listBlockStack = new _util.Stack();
            this.stack = EvaluationStack.empty();
            /* Registers */
            this.pc = -1;
            this.ra = -1;
            this.s0 = null;
            this.s1 = null;
            this.t0 = null;
            this.t1 = null;
            this.env = env;
            this.heap = env.program.heap;
            this.constants = env.program.constants;
            this.elementStack = elementStack;
            this.scopeStack.push(scope);
            this.dynamicScopeStack.push(dynamicScope);
        }

        // Fetch a value from a register onto the stack
        VM.prototype.fetch = function fetch(register) {
            this.stack.push(this[Register[register]]);
        };
        // Load a value from the stack into a register


        VM.prototype.load = function load(register) {
            this[Register[register]] = this.stack.pop();
        };
        // Fetch a value from a register


        VM.prototype.fetchValue = function fetchValue(register) {
            return this[Register[register]];
        };
        // Load a value into a register


        VM.prototype.loadValue = function loadValue(register, value) {
            this[Register[register]] = value;
        };
        // Start a new frame and save $ra and $fp on the stack


        VM.prototype.pushFrame = function pushFrame() {
            this.stack.push(this.ra);
            this.stack.push(this.fp);
            this.fp = this.sp - 1;
        };
        // Restore $ra, $sp and $fp


        VM.prototype.popFrame = function popFrame() {
            this.sp = this.fp - 1;
            this.ra = this.stack.fromBase(0);
            this.fp = this.stack.fromBase(-1);
        };
        // Jump to an address in `program`


        VM.prototype.goto = function goto(offset) {
            this.pc = (0, _util.typePos)(this.pc + offset);
        };
        // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)


        VM.prototype.call = function call(handle) {
            var pc = this.heap.getaddr(handle);
            this.ra = this.pc;
            this.pc = pc;
        };
        // Put a specific `program` address in $ra


        VM.prototype.returnTo = function returnTo(offset) {
            this.ra = (0, _util.typePos)(this.pc + offset);
        };
        // Return to the `program` address stored in $ra


        VM.prototype.return = function _return() {
            this.pc = this.ra;
        };

        VM.initial = function initial(env, self, dynamicScope, elementStack, program) {
            var scope = Scope.root(self, program.symbolTable.symbols.length);
            var vm = new VM(env, scope, dynamicScope, elementStack);
            vm.pc = vm.heap.getaddr(program.handle);
            vm.updatingOpcodeStack.push(new _util.LinkedList());
            return vm;
        };

        VM.prototype.capture = function capture(args) {
            return {
                dynamicScope: this.dynamicScope(),
                env: this.env,
                scope: this.scope(),
                stack: this.stack.capture(args)
            };
        };

        VM.prototype.beginCacheGroup = function beginCacheGroup() {
            this.cacheGroups.push(this.updating().tail());
        };

        VM.prototype.commitCacheGroup = function commitCacheGroup() {
            //        JumpIfNotModified(END)
            //        (head)
            //        (....)
            //        (tail)
            //        DidModify
            // END:   Noop
            var END = new LabelOpcode("END");
            var opcodes = this.updating();
            var marker = this.cacheGroups.pop();
            var head = marker ? opcodes.nextNode(marker) : opcodes.head();
            var tail = opcodes.tail();
            var tag = (0, _reference2.combineSlice)(new _util.ListSlice(head, tail));
            var guard = new JumpIfNotModifiedOpcode(tag, END);
            opcodes.insertBefore(guard, head);
            opcodes.append(new DidModifyOpcode(guard));
            opcodes.append(END);
        };

        VM.prototype.enter = function enter(args) {
            var updating = new _util.LinkedList();
            var state = this.capture(args);
            var tracker = this.elements().pushUpdatableBlock();
            var tryOpcode = new TryOpcode(this.heap.gethandle(this.pc), state, tracker, updating);
            this.didEnter(tryOpcode);
        };

        VM.prototype.iterate = function iterate(memo, value) {
            var stack = this.stack;
            stack.push(value);
            stack.push(memo);
            var state = this.capture(2);
            var tracker = this.elements().pushUpdatableBlock();
            // let ip = this.ip;
            // this.ip = end + 4;
            // this.frames.push(ip);
            return new TryOpcode(this.heap.gethandle(this.pc), state, tracker, new _util.LinkedList());
        };

        VM.prototype.enterItem = function enterItem(key, opcode) {
            this.listBlock().map[key] = opcode;
            this.didEnter(opcode);
        };

        VM.prototype.enterList = function enterList(relativeStart) {
            var updating = new _util.LinkedList();
            var state = this.capture(0);
            var tracker = this.elements().pushBlockList(updating);
            var artifacts = this.stack.peek().artifacts;
            var start = this.heap.gethandle((0, _util.typePos)(this.pc + relativeStart));
            var opcode = new ListBlockOpcode(start, state, tracker, updating, artifacts);
            this.listBlockStack.push(opcode);
            this.didEnter(opcode);
        };

        VM.prototype.didEnter = function didEnter(opcode) {
            this.updateWith(opcode);
            this.updatingOpcodeStack.push(opcode.children);
        };

        VM.prototype.exit = function exit() {
            this.elements().popBlock();
            this.updatingOpcodeStack.pop();
            var parent = this.updating().tail();
            parent.didInitializeChildren();
        };

        VM.prototype.exitList = function exitList() {
            this.exit();
            this.listBlockStack.pop();
        };

        VM.prototype.updateWith = function updateWith(opcode) {
            this.updating().append(opcode);
        };

        VM.prototype.listBlock = function listBlock() {
            return this.listBlockStack.current;
        };

        VM.prototype.updating = function updating() {
            return this.updatingOpcodeStack.current;
        };

        VM.prototype.elements = function elements() {
            return this.elementStack;
        };

        VM.prototype.scope = function scope() {
            return this.scopeStack.current;
        };

        VM.prototype.dynamicScope = function dynamicScope() {
            return this.dynamicScopeStack.current;
        };

        VM.prototype.pushChildScope = function pushChildScope() {
            this.scopeStack.push(this.scope().child());
        };

        VM.prototype.pushCallerScope = function pushCallerScope() {
            var childScope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            var callerScope = this.scope().getCallerScope();
            this.scopeStack.push(childScope ? callerScope.child() : callerScope);
        };

        VM.prototype.pushDynamicScope = function pushDynamicScope() {
            var child = this.dynamicScope().child();
            this.dynamicScopeStack.push(child);
            return child;
        };

        VM.prototype.pushRootScope = function pushRootScope(size, bindCaller) {
            var scope = Scope.sized(size);
            if (bindCaller) scope.bindCallerScope(this.scope());
            this.scopeStack.push(scope);
            return scope;
        };

        VM.prototype.popScope = function popScope() {
            this.scopeStack.pop();
        };

        VM.prototype.popDynamicScope = function popDynamicScope() {
            this.dynamicScopeStack.pop();
        };

        VM.prototype.newDestroyable = function newDestroyable(d) {
            this.elements().newDestroyable(d);
        };
        /// SCOPE HELPERS


        VM.prototype.getSelf = function getSelf() {
            return this.scope().getSelf();
        };

        VM.prototype.referenceForSymbol = function referenceForSymbol(symbol) {
            return this.scope().getSymbol(symbol);
        };
        /// EXECUTION


        VM.prototype.execute = function execute(start, initialize) {
            this.pc = this.heap.getaddr(start);
            if (initialize) initialize(this);
            var result = void 0;
            while (true) {
                result = this.next();
                if (result.done) break;
            }
            return result.value;
        };

        VM.prototype.next = function next() {
            var env = this.env,
                updatingOpcodeStack = this.updatingOpcodeStack,
                elementStack = this.elementStack;

            var opcode = this.nextStatement(env);
            var result = void 0;
            if (opcode !== null) {
                APPEND_OPCODES.evaluate(this, opcode, opcode.type);
                result = { done: false, value: null };
            } else {
                // Unload the stack
                this.stack.reset();
                result = {
                    done: true,
                    value: new RenderResult(env, updatingOpcodeStack.pop(), elementStack.popBlock())
                };
            }
            return result;
        };

        VM.prototype.nextStatement = function nextStatement(env) {
            var pc = this.pc;

            if (pc === -1) {
                return null;
            }
            var program = env.program;
            this.pc += 4;
            return program.opcode(pc);
        };

        VM.prototype.evaluateOpcode = function evaluateOpcode(opcode) {
            APPEND_OPCODES.evaluate(this, opcode, opcode.type);
        };

        VM.prototype.bindDynamicScope = function bindDynamicScope(names) {
            var scope = this.dynamicScope();
            for (var i = names.length - 1; i >= 0; i--) {
                var name = this.constants.getString(names[i]);
                scope.set(name, this.stack.pop());
            }
        };

        _createClass$3(VM, [{
            key: 'fp',
            get: function () {
                return this.stack.fp;
            },
            set: function (fp) {
                this.stack.fp = fp;
            }
        }, {
            key: 'sp',
            get: function () {
                return this.stack.sp;
            },
            set: function (sp) {
                this.stack.sp = sp;
            }
        }]);

        return VM;
    }();

    function _classCallCheck$14(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var TemplateIterator = function () {
        function TemplateIterator(vm) {
            _classCallCheck$14(this, TemplateIterator);

            this.vm = vm;
        }

        TemplateIterator.prototype.next = function next() {
            return this.vm.next();
        };

        return TemplateIterator;
    }();
    var clientId = 0;
    function templateFactory(_ref) {
        var templateId = _ref.id,
            meta = _ref.meta,
            block = _ref.block;

        var parsedBlock = void 0;
        var id = templateId || 'client-' + clientId++;
        var create = function (env, envMeta) {
            var newMeta = envMeta ? (0, _util.assign)({}, envMeta, meta) : meta;
            if (!parsedBlock) {
                parsedBlock = JSON.parse(block);
            }
            return new ScannableTemplate(id, newMeta, env, parsedBlock);
        };
        return { id: id, meta: meta, create: create };
    }

    var ScannableTemplate = function () {
        function ScannableTemplate(id, meta, env, rawBlock) {
            _classCallCheck$14(this, ScannableTemplate);

            this.id = id;
            this.meta = meta;
            this.env = env;
            this.entryPoint = null;
            this.layout = null;
            this.partial = null;
            this.block = null;
            this.scanner = new Scanner(rawBlock, env);
            this.symbols = rawBlock.symbols;
            this.hasEval = rawBlock.hasEval;
        }

        ScannableTemplate.prototype.render = function render(self, appendTo, dynamicScope) {
            var env = this.env;

            var elementStack = ElementStack.forInitialRender(env, appendTo, null);
            var compiled = this.asEntryPoint().compileDynamic(env);
            var vm = VM.initial(env, self, dynamicScope, elementStack, compiled);
            return new TemplateIterator(vm);
        };

        ScannableTemplate.prototype.asEntryPoint = function asEntryPoint() {
            if (!this.entryPoint) this.entryPoint = this.scanner.scanEntryPoint(this.compilationMeta());
            return this.entryPoint;
        };

        ScannableTemplate.prototype.asLayout = function asLayout(componentName, attrs) {
            if (!this.layout) this.layout = this.scanner.scanLayout(this.compilationMeta(), attrs || _util.EMPTY_ARRAY, componentName);
            return this.layout;
        };

        ScannableTemplate.prototype.asPartial = function asPartial() {
            if (!this.partial) this.partial = this.scanner.scanEntryPoint(this.compilationMeta(true));
            return this.partial;
        };

        ScannableTemplate.prototype.asBlock = function asBlock() {
            if (!this.block) this.block = this.scanner.scanBlock(this.compilationMeta());
            return this.block;
        };

        ScannableTemplate.prototype.compilationMeta = function compilationMeta() {
            var asPartial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            return { templateMeta: this.meta, symbols: this.symbols, asPartial: asPartial };
        };

        return ScannableTemplate;
    }();

    function _classCallCheck$32(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var DynamicVarReference = function () {
        function DynamicVarReference(scope, nameRef) {
            _classCallCheck$32(this, DynamicVarReference);

            this.scope = scope;
            this.nameRef = nameRef;
            var varTag = this.varTag = _reference2.UpdatableTag.create(_reference2.CONSTANT_TAG);
            this.tag = (0, _reference2.combine)([nameRef.tag, varTag]);
        }

        DynamicVarReference.prototype.value = function value() {
            return this.getVar().value();
        };

        DynamicVarReference.prototype.get = function get(key) {
            return this.getVar().get(key);
        };

        DynamicVarReference.prototype.getVar = function getVar() {
            var name = String(this.nameRef.value());
            var ref = this.scope.get(name);
            this.varTag.inner.update(ref.tag);
            return ref;
        };

        return DynamicVarReference;
    }();

    function getDynamicVar(vm, args) {
        var scope = vm.dynamicScope();
        var nameRef = args.positional.at(0);
        return new DynamicVarReference(scope, nameRef);
    }

    function _classCallCheck$33(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var PartialDefinition = function PartialDefinition(name, // for debugging
    template) {
        _classCallCheck$33(this, PartialDefinition);

        this.name = name;
        this.template = template;
    };

    var NodeType;
    (function (NodeType) {
        NodeType[NodeType["Element"] = 0] = "Element";
        NodeType[NodeType["Attribute"] = 1] = "Attribute";
        NodeType[NodeType["Text"] = 2] = "Text";
        NodeType[NodeType["CdataSection"] = 3] = "CdataSection";
        NodeType[NodeType["EntityReference"] = 4] = "EntityReference";
        NodeType[NodeType["Entity"] = 5] = "Entity";
        NodeType[NodeType["ProcessingInstruction"] = 6] = "ProcessingInstruction";
        NodeType[NodeType["Comment"] = 7] = "Comment";
        NodeType[NodeType["Document"] = 8] = "Document";
        NodeType[NodeType["DocumentType"] = 9] = "DocumentType";
        NodeType[NodeType["DocumentFragment"] = 10] = "DocumentFragment";
        NodeType[NodeType["Notation"] = 11] = "Notation";
    })(NodeType || (NodeType = {}));

    var interfaces = Object.freeze({
        get NodeType() {
            return NodeType;
        }
    });

    exports.Simple = interfaces;
    exports.templateFactory = templateFactory;
    exports.NULL_REFERENCE = NULL_REFERENCE;
    exports.UNDEFINED_REFERENCE = UNDEFINED_REFERENCE;
    exports.PrimitiveReference = PrimitiveReference;
    exports.ConditionalReference = ConditionalReference;
    exports.OpcodeBuilderDSL = OpcodeBuilder;
    exports.compileLayout = compileLayout;
    exports.CompiledStaticTemplate = CompiledStaticTemplate;
    exports.CompiledDynamicTemplate = CompiledDynamicTemplate;
    exports.IAttributeManager = AttributeManager;
    exports.AttributeManager = AttributeManager;
    exports.PropertyManager = PropertyManager;
    exports.INPUT_VALUE_PROPERTY_MANAGER = INPUT_VALUE_PROPERTY_MANAGER;
    exports.defaultManagers = defaultManagers;
    exports.defaultAttributeManagers = defaultAttributeManagers;
    exports.defaultPropertyManagers = defaultPropertyManagers;
    exports.readDOMAttr = readDOMAttr;
    exports.Register = Register;
    exports.debugSlice = debugSlice;
    exports.normalizeTextValue = normalizeTextValue;
    exports.setDebuggerCallback = setDebuggerCallback;
    exports.resetDebuggerCallback = resetDebuggerCallback;
    exports.getDynamicVar = getDynamicVar;
    exports.BlockMacros = Blocks;
    exports.InlineMacros = Inlines;
    exports.compileList = compileList;
    exports.compileExpression = expr;
    exports.UpdatingVM = UpdatingVM;
    exports.RenderResult = RenderResult;
    exports.isSafeString = isSafeString;
    exports.Scope = Scope;
    exports.Environment = Environment;
    exports.PartialDefinition = PartialDefinition;
    exports.ComponentDefinition = ComponentDefinition;
    exports.isComponentDefinition = isComponentDefinition;
    exports.DOMChanges = helper$1;
    exports.IDOMChanges = DOMChanges;
    exports.DOMTreeConstruction = DOMTreeConstruction;
    exports.isWhitespace = isWhitespace;
    exports.insertHTMLBefore = _insertHTMLBefore;
    exports.ElementStack = ElementStack;
    exports.ConcreteBounds = ConcreteBounds;
});
enifed('@glimmer/util', ['exports'], function (exports) {
    'use strict';

    // There is a small whitelist of namespaced attributes specially
    // enumerated in
    // https://www.w3.org/TR/html/syntax.html#attributes-0
    //
    // > When a foreign element has one of the namespaced attributes given by
    // > the local name and namespace of the first and second cells of a row
    // > from the following table, it must be written using the name given by
    // > the third cell from the same row.
    //
    // In all other cases, colons are interpreted as a regular character
    // with no special meaning:
    //
    // > No other namespaced attribute can be expressed in the HTML syntax.
    var XLINK = 'http://www.w3.org/1999/xlink';
    var XML = 'http://www.w3.org/XML/1998/namespace';
    var XMLNS = 'http://www.w3.org/2000/xmlns/';
    var WHITELIST = {
        'xlink:actuate': XLINK,
        'xlink:arcrole': XLINK,
        'xlink:href': XLINK,
        'xlink:role': XLINK,
        'xlink:show': XLINK,
        'xlink:title': XLINK,
        'xlink:type': XLINK,
        'xml:base': XML,
        'xml:lang': XML,
        'xml:space': XML,
        'xmlns': XMLNS,
        'xmlns:xlink': XMLNS
    };
    function getAttrNamespace(attrName) {
        return WHITELIST[attrName] || null;
    }

    function unwrap(val) {
        if (val === null || val === undefined) throw new Error('Expected value to be present');
        return val;
    }
    function expect(val, message) {
        if (val === null || val === undefined) throw new Error(message);
        return val;
    }
    function unreachable() {
        return new Error('unreachable');
    }
    function typePos(lastOperand) {
        return lastOperand - 4;
    }

    // import Logger from './logger';
    // let alreadyWarned = false;
    // import Logger from './logger';
    function debugAssert(test, msg) {
        // if (!alreadyWarned) {
        //   alreadyWarned = true;
        //   Logger.warn("Don't leave debug assertions on in public builds");
        // }
        if (!test) {
            throw new Error(msg || "assertion failure");
        }
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var LogLevel;
    (function (LogLevel) {
        LogLevel[LogLevel["Trace"] = 0] = "Trace";
        LogLevel[LogLevel["Debug"] = 1] = "Debug";
        LogLevel[LogLevel["Warn"] = 2] = "Warn";
        LogLevel[LogLevel["Error"] = 3] = "Error";
    })(LogLevel || (exports.LogLevel = LogLevel = {}));

    var NullConsole = function () {
        function NullConsole() {
            _classCallCheck(this, NullConsole);
        }

        NullConsole.prototype.log = function log(_message) {};

        NullConsole.prototype.warn = function warn(_message) {};

        NullConsole.prototype.error = function error(_message) {};

        NullConsole.prototype.trace = function trace() {};

        return NullConsole;
    }();

    var ALWAYS = void 0;
    var Logger = function () {
        function Logger(_ref) {
            var console = _ref.console,
                level = _ref.level;

            _classCallCheck(this, Logger);

            this.f = ALWAYS;
            this.force = ALWAYS;
            this.console = console;
            this.level = level;
        }

        Logger.prototype.skipped = function skipped(level) {
            return level < this.level;
        };

        Logger.prototype.trace = function trace(message) {
            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref2$stackTrace = _ref2.stackTrace,
                stackTrace = _ref2$stackTrace === undefined ? false : _ref2$stackTrace;

            if (this.skipped(LogLevel.Trace)) return;
            this.console.log(message);
            if (stackTrace) this.console.trace();
        };

        Logger.prototype.debug = function debug(message) {
            var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref3$stackTrace = _ref3.stackTrace,
                stackTrace = _ref3$stackTrace === undefined ? false : _ref3$stackTrace;

            if (this.skipped(LogLevel.Debug)) return;
            this.console.log(message);
            if (stackTrace) this.console.trace();
        };

        Logger.prototype.warn = function warn(message) {
            var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
                _ref4$stackTrace = _ref4.stackTrace,
                stackTrace = _ref4$stackTrace === undefined ? false : _ref4$stackTrace;

            if (this.skipped(LogLevel.Warn)) return;
            this.console.warn(message);
            if (stackTrace) this.console.trace();
        };

        Logger.prototype.error = function error(message) {
            if (this.skipped(LogLevel.Error)) return;
            this.console.error(message);
        };

        return Logger;
    }();
    var _console = typeof console === 'undefined' ? new NullConsole() : console;
    ALWAYS = new Logger({ console: _console, level: LogLevel.Trace });
    var LOG_LEVEL = LogLevel.Debug;
    var logger = new Logger({ console: _console, level: LOG_LEVEL });

    var objKeys = Object.keys;

    function assign(obj) {
        for (var i = 1; i < arguments.length; i++) {
            var assignment = arguments[i];
            if (assignment === null || typeof assignment !== 'object') continue;
            var keys = objKeys(assignment);
            for (var j = 0; j < keys.length; j++) {
                var key = keys[j];
                obj[key] = assignment[key];
            }
        }
        return obj;
    }
    function fillNulls(count) {
        var arr = new Array(count);
        for (var i = 0; i < count; i++) {
            arr[i] = null;
        }
        return arr;
    }

    var GUID = 0;
    function initializeGuid(object) {
        return object._guid = ++GUID;
    }
    function ensureGuid(object) {
        return object._guid || initializeGuid(object);
    }

    function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var proto = Object.create(null, {
        // without this, we will always still end up with (new
        // EmptyObject()).constructor === Object
        constructor: {
            value: undefined,
            enumerable: false,
            writable: true
        }
    });
    function EmptyObject() {}
    EmptyObject.prototype = proto;
    function dict() {
        // let d = Object.create(null);
        // d.x = 1;
        // delete d.x;
        // return d;
        return new EmptyObject();
    }
    var DictSet = function () {
        function DictSet() {
            _classCallCheck$1(this, DictSet);

            this.dict = dict();
        }

        DictSet.prototype.add = function add(obj) {
            if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;
            return this;
        };

        DictSet.prototype.delete = function _delete(obj) {
            if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];
        };

        DictSet.prototype.forEach = function forEach(callback) {
            var dict = this.dict;

            var dictKeys = Object.keys(dict);
            for (var i = 0; dictKeys.length; i++) {
                callback(dict[dictKeys[i]]);
            }
        };

        DictSet.prototype.toArray = function toArray() {
            return Object.keys(this.dict);
        };

        return DictSet;
    }();
    var Stack = function () {
        function Stack() {
            _classCallCheck$1(this, Stack);

            this.stack = [];
            this.current = null;
        }

        Stack.prototype.toArray = function toArray() {
            return this.stack;
        };

        Stack.prototype.push = function push(item) {
            this.current = item;
            this.stack.push(item);
        };

        Stack.prototype.pop = function pop() {
            var item = this.stack.pop();
            var len = this.stack.length;
            this.current = len === 0 ? null : this.stack[len - 1];
            return item === undefined ? null : item;
        };

        Stack.prototype.isEmpty = function isEmpty() {
            return this.stack.length === 0;
        };

        return Stack;
    }();

    function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var ListNode = function ListNode(value) {
        _classCallCheck$2(this, ListNode);

        this.next = null;
        this.prev = null;
        this.value = value;
    };
    var LinkedList = function () {
        function LinkedList() {
            _classCallCheck$2(this, LinkedList);

            this.clear();
        }

        LinkedList.fromSlice = function fromSlice(slice) {
            var list = new LinkedList();
            slice.forEachNode(function (n) {
                return list.append(n.clone());
            });
            return list;
        };

        LinkedList.prototype.head = function head() {
            return this._head;
        };

        LinkedList.prototype.tail = function tail() {
            return this._tail;
        };

        LinkedList.prototype.clear = function clear() {
            this._head = this._tail = null;
        };

        LinkedList.prototype.isEmpty = function isEmpty() {
            return this._head === null;
        };

        LinkedList.prototype.toArray = function toArray() {
            var out = [];
            this.forEachNode(function (n) {
                return out.push(n);
            });
            return out;
        };

        LinkedList.prototype.splice = function splice(start, end, reference) {
            var before = void 0;
            if (reference === null) {
                before = this._tail;
                this._tail = end;
            } else {
                before = reference.prev;
                end.next = reference;
                reference.prev = end;
            }
            if (before) {
                before.next = start;
                start.prev = before;
            }
        };

        LinkedList.prototype.nextNode = function nextNode(node) {
            return node.next;
        };

        LinkedList.prototype.prevNode = function prevNode(node) {
            return node.prev;
        };

        LinkedList.prototype.forEachNode = function forEachNode(callback) {
            var node = this._head;
            while (node !== null) {
                callback(node);
                node = node.next;
            }
        };

        LinkedList.prototype.contains = function contains(needle) {
            var node = this._head;
            while (node !== null) {
                if (node === needle) return true;
                node = node.next;
            }
            return false;
        };

        LinkedList.prototype.insertBefore = function insertBefore(node) {
            var reference = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            if (reference === null) return this.append(node);
            if (reference.prev) reference.prev.next = node;else this._head = node;
            node.prev = reference.prev;
            node.next = reference;
            reference.prev = node;
            return node;
        };

        LinkedList.prototype.append = function append(node) {
            var tail = this._tail;
            if (tail) {
                tail.next = node;
                node.prev = tail;
                node.next = null;
            } else {
                this._head = node;
            }
            return this._tail = node;
        };

        LinkedList.prototype.pop = function pop() {
            if (this._tail) return this.remove(this._tail);
            return null;
        };

        LinkedList.prototype.prepend = function prepend(node) {
            if (this._head) return this.insertBefore(node, this._head);
            return this._head = this._tail = node;
        };

        LinkedList.prototype.remove = function remove(node) {
            if (node.prev) node.prev.next = node.next;else this._head = node.next;
            if (node.next) node.next.prev = node.prev;else this._tail = node.prev;
            return node;
        };

        return LinkedList;
    }();
    var ListSlice = function () {
        function ListSlice(head, tail) {
            _classCallCheck$2(this, ListSlice);

            this._head = head;
            this._tail = tail;
        }

        ListSlice.toList = function toList(slice) {
            var list = new LinkedList();
            slice.forEachNode(function (n) {
                return list.append(n.clone());
            });
            return list;
        };

        ListSlice.prototype.forEachNode = function forEachNode(callback) {
            var node = this._head;
            while (node !== null) {
                callback(node);
                node = this.nextNode(node);
            }
        };

        ListSlice.prototype.contains = function contains(needle) {
            var node = this._head;
            while (node !== null) {
                if (node === needle) return true;
                node = node.next;
            }
            return false;
        };

        ListSlice.prototype.head = function head() {
            return this._head;
        };

        ListSlice.prototype.tail = function tail() {
            return this._tail;
        };

        ListSlice.prototype.toArray = function toArray() {
            var out = [];
            this.forEachNode(function (n) {
                return out.push(n);
            });
            return out;
        };

        ListSlice.prototype.nextNode = function nextNode(node) {
            if (node === this._tail) return null;
            return node.next;
        };

        ListSlice.prototype.prevNode = function prevNode(node) {
            if (node === this._head) return null;
            return node.prev;
        };

        ListSlice.prototype.isEmpty = function isEmpty() {
            return false;
        };

        return ListSlice;
    }();
    var EMPTY_SLICE = new ListSlice(null, null);

    var HAS_NATIVE_WEAKMAP = function () {
        // detect if `WeakMap` is even present
        var hasWeakMap = typeof WeakMap === 'function';
        if (!hasWeakMap) {
            return false;
        }
        var instance = new WeakMap();
        // use `Object`'s `.toString` directly to prevent us from detecting
        // polyfills as native weakmaps
        return Object.prototype.toString.call(instance) === '[object WeakMap]';
    }();

    var HAS_TYPED_ARRAYS = typeof Uint32Array !== 'undefined';
    var A = void 0;
    if (HAS_TYPED_ARRAYS) {
        A = Uint32Array;
    } else {
        A = Array;
    }
    var A$1 = A;
    var EMPTY_ARRAY = HAS_NATIVE_WEAKMAP ? Object.freeze([]) : [];

    exports.getAttrNamespace = getAttrNamespace;
    exports.assert = debugAssert;
    exports.LOGGER = logger;
    exports.Logger = Logger;
    exports.LogLevel = LogLevel;
    exports.assign = assign;
    exports.fillNulls = fillNulls;
    exports.ensureGuid = ensureGuid;
    exports.initializeGuid = initializeGuid;
    exports.Stack = Stack;
    exports.DictSet = DictSet;
    exports.dict = dict;
    exports.EMPTY_SLICE = EMPTY_SLICE;
    exports.LinkedList = LinkedList;
    exports.ListNode = ListNode;
    exports.ListSlice = ListSlice;
    exports.A = A$1;
    exports.EMPTY_ARRAY = EMPTY_ARRAY;
    exports.HAS_NATIVE_WEAKMAP = HAS_NATIVE_WEAKMAP;
    exports.unwrap = unwrap;
    exports.expect = expect;
    exports.unreachable = unreachable;
    exports.typePos = typePos;
});
enifed("@glimmer/wire-format", ["exports"], function (exports) {
    "use strict";

    var Opcodes;
    (function (Opcodes) {
        // Statements
        Opcodes[Opcodes["Text"] = 0] = "Text";
        Opcodes[Opcodes["Append"] = 1] = "Append";
        Opcodes[Opcodes["Comment"] = 2] = "Comment";
        Opcodes[Opcodes["Modifier"] = 3] = "Modifier";
        Opcodes[Opcodes["Block"] = 4] = "Block";
        Opcodes[Opcodes["Component"] = 5] = "Component";
        Opcodes[Opcodes["OpenElement"] = 6] = "OpenElement";
        Opcodes[Opcodes["FlushElement"] = 7] = "FlushElement";
        Opcodes[Opcodes["CloseElement"] = 8] = "CloseElement";
        Opcodes[Opcodes["StaticAttr"] = 9] = "StaticAttr";
        Opcodes[Opcodes["DynamicAttr"] = 10] = "DynamicAttr";
        Opcodes[Opcodes["Yield"] = 11] = "Yield";
        Opcodes[Opcodes["Partial"] = 12] = "Partial";
        Opcodes[Opcodes["DynamicArg"] = 13] = "DynamicArg";
        Opcodes[Opcodes["StaticArg"] = 14] = "StaticArg";
        Opcodes[Opcodes["TrustingAttr"] = 15] = "TrustingAttr";
        Opcodes[Opcodes["Debugger"] = 16] = "Debugger";
        Opcodes[Opcodes["ClientSideStatement"] = 17] = "ClientSideStatement";
        // Expressions
        Opcodes[Opcodes["Unknown"] = 18] = "Unknown";
        Opcodes[Opcodes["Get"] = 19] = "Get";
        Opcodes[Opcodes["MaybeLocal"] = 20] = "MaybeLocal";
        Opcodes[Opcodes["FixThisBeforeWeMerge"] = 21] = "FixThisBeforeWeMerge";
        Opcodes[Opcodes["HasBlock"] = 22] = "HasBlock";
        Opcodes[Opcodes["HasBlockParams"] = 23] = "HasBlockParams";
        Opcodes[Opcodes["Undefined"] = 24] = "Undefined";
        Opcodes[Opcodes["Helper"] = 25] = "Helper";
        Opcodes[Opcodes["Concat"] = 26] = "Concat";
        Opcodes[Opcodes["ClientSideExpression"] = 27] = "ClientSideExpression";
    })(Opcodes || (exports.Ops = Opcodes = {}));

    function is(variant) {
        return function (value) {
            return Array.isArray(value) && value[0] === variant;
        };
    }
    var Expressions;
    (function (Expressions) {
        Expressions.isUnknown = is(Opcodes.Unknown);
        Expressions.isGet = is(Opcodes.Get);
        Expressions.isConcat = is(Opcodes.Concat);
        Expressions.isHelper = is(Opcodes.Helper);
        Expressions.isHasBlock = is(Opcodes.HasBlock);
        Expressions.isHasBlockParams = is(Opcodes.HasBlockParams);
        Expressions.isUndefined = is(Opcodes.Undefined);
        Expressions.isClientSide = is(Opcodes.ClientSideExpression);
        Expressions.isMaybeLocal = is(Opcodes.MaybeLocal);
        function isPrimitiveValue(value) {
            if (value === null) {
                return true;
            }
            return typeof value !== 'object';
        }
        Expressions.isPrimitiveValue = isPrimitiveValue;
    })(Expressions || (exports.Expressions = Expressions = {}));
    var Statements;
    (function (Statements) {
        Statements.isText = is(Opcodes.Text);
        Statements.isAppend = is(Opcodes.Append);
        Statements.isComment = is(Opcodes.Comment);
        Statements.isModifier = is(Opcodes.Modifier);
        Statements.isBlock = is(Opcodes.Block);
        Statements.isComponent = is(Opcodes.Component);
        Statements.isOpenElement = is(Opcodes.OpenElement);
        Statements.isFlushElement = is(Opcodes.FlushElement);
        Statements.isCloseElement = is(Opcodes.CloseElement);
        Statements.isStaticAttr = is(Opcodes.StaticAttr);
        Statements.isDynamicAttr = is(Opcodes.DynamicAttr);
        Statements.isYield = is(Opcodes.Yield);
        Statements.isPartial = is(Opcodes.Partial);
        Statements.isDynamicArg = is(Opcodes.DynamicArg);
        Statements.isStaticArg = is(Opcodes.StaticArg);
        Statements.isTrustingAttr = is(Opcodes.TrustingAttr);
        Statements.isDebugger = is(Opcodes.Debugger);
        Statements.isClientSide = is(Opcodes.ClientSideStatement);
        function isAttribute(val) {
            return val[0] === Opcodes.StaticAttr || val[0] === Opcodes.DynamicAttr || val[0] === Opcodes.TrustingAttr;
        }
        Statements.isAttribute = isAttribute;
        function isArgument(val) {
            return val[0] === Opcodes.StaticArg || val[0] === Opcodes.DynamicArg;
        }
        Statements.isArgument = isArgument;
        function isParameter(val) {
            return isAttribute(val) || isArgument(val);
        }
        Statements.isParameter = isParameter;
        function getParameterName(s) {
            return s[1];
        }
        Statements.getParameterName = getParameterName;
    })(Statements || (exports.Statements = Statements = {}));

    exports.is = is;
    exports.Expressions = Expressions;
    exports.Statements = Statements;
    exports.Ops = Opcodes;
});
enifed('backburner', ['exports', 'ember-babel'], function (exports, _emberBabel) {
    'use strict';

    var NUMBER = /\d+/;
    function isString(suspect) {
        return typeof suspect === 'string';
    }
    function isFunction(suspect) {
        return typeof suspect === 'function';
    }
    function isNumber(suspect) {
        return typeof suspect === 'number';
    }
    function isCoercableNumber(suspect) {
        return isNumber(suspect) && suspect === suspect || NUMBER.test(suspect);
    }
    function noSuchQueue(name) {
        throw new Error('You attempted to schedule an action in a queue (' + name + ') that doesn\'t exist');
    }
    function noSuchMethod(name) {
        throw new Error('You attempted to schedule an action in a queue (' + name + ') for a method that doesn\'t exist');
    }
    function getOnError(options) {
        return options.onError || options.onErrorTarget && options.onErrorTarget[options.onErrorMethod];
    }
    function findItem(target, method, collection) {
        var index = -1;
        for (var i = 0, l = collection.length; i < l; i += 3) {
            if (collection[i] === target && collection[i + 1] === method) {
                index = i;
                break;
            }
        }
        return index;
    }
    function findTimer(timer, collection) {
        var index = -1;
        for (var i = 2; i < collection.length; i += 3) {
            if (collection[i] === timer) {
                index = i - 2;
                break;
            }
        }
        return index;
    }

    function binarySearch(time, timers) {
        var start = 0;
        var end = timers.length - 2;
        var middle = void 0;
        var l = void 0;
        while (start < end) {
            // since timers is an array of pairs 'l' will always
            // be an integer
            l = (end - start) / 2;
            // compensate for the index in case even number
            // of pairs inside timers
            middle = start + l - l % 2;
            if (time >= timers[middle]) {
                start = middle + 2;
            } else {
                end = middle;
            }
        }
        return time >= timers[start] ? start + 2 : start;
    }

    var Queue = function () {
        function Queue(name) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var globalOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            (0, _emberBabel.classCallCheck)(this, Queue);

            this._queue = []; // TODO: should be private
            this._queueBeingFlushed = [];
            this.targetQueues = Object.create(null);
            this.index = 0;
            this.name = name;
            this.options = options;
            this.globalOptions = globalOptions;
        }

        Queue.prototype.push = function push(target, method, args, stack) {
            this._queue.push(target, method, args, stack);
            return {
                queue: this,
                target: target,
                method: method
            };
        };

        Queue.prototype.pushUnique = function pushUnique(target, method, args, stack) {
            var guid = this.guidForTarget(target);
            if (guid) {
                this.pushUniqueWithGuid(guid, target, method, args, stack);
            } else {
                this.pushUniqueWithoutGuid(target, method, args, stack);
            }
            return {
                queue: this,
                target: target,
                method: method
            };
        };

        Queue.prototype.flush = function flush(sync) {
            var _options = this.options,
                before = _options.before,
                after = _options.after;

            var target = void 0;
            var method = void 0;
            var args = void 0;
            var errorRecordedForStack = void 0;
            this.targetQueues = Object.create(null);
            var queueItems = void 0;
            if (this._queueBeingFlushed.length > 0) {
                queueItems = this._queueBeingFlushed;
            } else {
                queueItems = this._queueBeingFlushed = this._queue;
                this._queue = [];
            }
            if (before) {
                before();
            }
            var invoke = void 0;
            if (queueItems.length > 0) {
                var onError = getOnError(this.globalOptions);
                invoke = onError ? this.invokeWithOnError : this.invoke;
                for (var i = this.index; i < queueItems.length; i += 4) {
                    this.index += 4;
                    target = queueItems[i];
                    method = queueItems[i + 1];
                    args = queueItems[i + 2];
                    errorRecordedForStack = queueItems[i + 3]; // Debugging assistance
                    // method could have been nullified / canceled during flush
                    if (method !== null) {
                        //
                        //    ** Attention intrepid developer **
                        //
                        //    To find out the stack of this task when it was scheduled onto
                        //    the run loop, add the following to your app.js:
                        //
                        //    Ember.run.backburner.DEBUG = true; // NOTE: This slows your app, don't leave it on in production.
                        //
                        //    Once that is in place, when you are at a breakpoint and navigate
                        //    here in the stack explorer, you can look at `errorRecordedForStack.stack`,
                        //    which will be the captured stack when this job was scheduled.
                        //
                        //    One possible long-term solution is the following Chrome issue:
                        //       https://bugs.chromium.org/p/chromium/issues/detail?id=332624
                        //
                        invoke(target, method, args, onError, errorRecordedForStack);
                    }
                    if (this.index !== this._queueBeingFlushed.length && this.globalOptions.mustYield && this.globalOptions.mustYield()) {
                        return 1 /* Pause */;
                    }
                }
            }
            if (after) {
                after();
            }
            this._queueBeingFlushed.length = 0;
            this.index = 0;
            if (sync !== false && this._queue.length > 0) {
                // check if new items have been added
                this.flush(true);
            }
        };

        Queue.prototype.hasWork = function hasWork() {
            return this._queueBeingFlushed.length > 0 || this._queue.length > 0;
        };

        Queue.prototype.cancel = function cancel(_ref) {
            var target = _ref.target,
                method = _ref.method;

            var queue = this._queue;
            var currentTarget = void 0;
            var currentMethod = void 0;
            var i = void 0;
            var l = void 0;
            var t = void 0;
            var guid = this.guidForTarget(target);
            var targetQueue = guid ? this.targetQueues[guid] : undefined;
            if (targetQueue !== undefined) {
                for (i = 0, l = targetQueue.length; i < l; i += 2) {
                    t = targetQueue[i];
                    if (t === method) {
                        targetQueue.splice(i, 1);
                    }
                }
            }
            for (i = 0, l = queue.length; i < l; i += 4) {
                currentTarget = queue[i];
                currentMethod = queue[i + 1];
                if (currentTarget === target && currentMethod === method) {
                    queue.splice(i, 4);
                    return true;
                }
            }
            // if not found in current queue
            // could be in the queue that is being flushed
            queue = this._queueBeingFlushed;
            for (i = 0, l = queue.length; i < l; i += 4) {
                currentTarget = queue[i];
                currentMethod = queue[i + 1];
                if (currentTarget === target && currentMethod === method) {
                    // don't mess with array during flush
                    // just nullify the method
                    queue[i + 1] = null;
                    return true;
                }
            }
            return false;
        };

        Queue.prototype.guidForTarget = function guidForTarget(target) {
            if (!target) {
                return;
            }
            var peekGuid = this.globalOptions.peekGuid;
            if (peekGuid) {
                return peekGuid(target);
            }
            var KEY = this.globalOptions.GUID_KEY;
            if (KEY) {
                return target[KEY];
            }
        };

        Queue.prototype.pushUniqueWithoutGuid = function pushUniqueWithoutGuid(target, method, args, stack) {
            var queue = this._queue;
            for (var i = 0, l = queue.length; i < l; i += 4) {
                var currentTarget = queue[i];
                var currentMethod = queue[i + 1];
                if (currentTarget === target && currentMethod === method) {
                    queue[i + 2] = args; // replace args
                    queue[i + 3] = stack; // replace stack
                    return;
                }
            }
            queue.push(target, method, args, stack);
        };

        Queue.prototype.targetQueue = function targetQueue(_targetQueue, target, method, args, stack) {
            var queue = this._queue;
            for (var i = 0, l = _targetQueue.length; i < l; i += 2) {
                var currentMethod = _targetQueue[i];
                if (currentMethod === method) {
                    var currentIndex = _targetQueue[i + 1];
                    queue[currentIndex + 2] = args; // replace args
                    queue[currentIndex + 3] = stack; // replace stack
                    return;
                }
            }
            _targetQueue.push(method, queue.push(target, method, args, stack) - 4);
        };

        Queue.prototype.pushUniqueWithGuid = function pushUniqueWithGuid(guid, target, method, args, stack) {
            var localQueue = this.targetQueues[guid];
            if (localQueue !== undefined) {
                this.targetQueue(localQueue, target, method, args, stack);
            } else {
                this.targetQueues[guid] = [method, this._queue.push(target, method, args, stack) - 4];
            }
        };

        Queue.prototype.invoke = function invoke(target, method, args /*, onError, errorRecordedForStack */) {
            if (args && args.length > 0) {
                method.apply(target, args);
            } else {
                method.call(target);
            }
        };

        Queue.prototype.invokeWithOnError = function invokeWithOnError(target, method, args, onError, errorRecordedForStack) {
            try {
                if (args && args.length > 0) {
                    method.apply(target, args);
                } else {
                    method.call(target);
                }
            } catch (error) {
                onError(error, errorRecordedForStack);
            }
        };

        return Queue;
    }();

    var DeferredActionQueues = function () {
        function DeferredActionQueues() {
            var queueNames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var options = arguments[1];
            (0, _emberBabel.classCallCheck)(this, DeferredActionQueues);

            this.queues = {};
            this.queueNameIndex = 0;
            this.queueNames = queueNames;
            queueNames.reduce(function (queues, queueName) {
                queues[queueName] = new Queue(queueName, options[queueName], options);
                return queues;
            }, this.queues);
        }
        /*
          @method schedule
          @param {String} queueName
          @param {Any} target
          @param {Any} method
          @param {Any} args
          @param {Boolean} onceFlag
          @param {Any} stack
          @return queue
        */


        DeferredActionQueues.prototype.schedule = function schedule(queueName, target, method, args, onceFlag, stack) {
            var queues = this.queues;
            var queue = queues[queueName];
            if (!queue) {
                noSuchQueue(queueName);
            }
            if (!method) {
                noSuchMethod(queueName);
            }
            if (onceFlag) {
                return queue.pushUnique(target, method, args, stack);
            } else {
                return queue.push(target, method, args, stack);
            }
        };

        DeferredActionQueues.prototype.flush = function flush() {
            var queue = void 0;
            var queueName = void 0;
            var numberOfQueues = this.queueNames.length;
            while (this.queueNameIndex < numberOfQueues) {
                queueName = this.queueNames[this.queueNameIndex];
                queue = this.queues[queueName];
                if (queue.hasWork() === false) {
                    this.queueNameIndex++;
                } else {
                    if (queue.flush(false /* async */) === 1 /* Pause */) {
                            return 1 /* Pause */;
                        }
                    this.queueNameIndex = 0; // only reset to first queue if non-pause break
                }
            }
        };

        return DeferredActionQueues;
    }();

    // accepts a function that when invoked will return an iterator
    // iterator will drain until completion
    var iteratorDrain = function (fn) {
        var iterator = fn();
        var result = iterator.next();
        while (result.done === false) {
            result.value();
            result = iterator.next();
        }
    };

    var noop = function () {};
    var SET_TIMEOUT = setTimeout;

    var Backburner = function () {
        function Backburner(queueNames) {
            var _this = this;

            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            (0, _emberBabel.classCallCheck)(this, Backburner);

            this.DEBUG = false;
            this.currentInstance = null;
            this._timerTimeoutId = null;
            this._autorun = null;
            this.queueNames = queueNames;
            this.options = options;
            if (!this.options.defaultQueue) {
                this.options.defaultQueue = queueNames[0];
            }
            this.instanceStack = [];
            this._timers = [];
            this._debouncees = [];
            this._throttlers = [];
            this._eventCallbacks = {
                end: [],
                begin: []
            };
            this._onBegin = this.options.onBegin || noop;
            this._onEnd = this.options.onEnd || noop;
            var _platform = this.options._platform || {};
            var platform = Object.create(null);
            platform.setTimeout = _platform.setTimeout || function (fn, ms) {
                return setTimeout(fn, ms);
            };
            platform.clearTimeout = _platform.clearTimeout || function (id) {
                return clearTimeout(id);
            };
            platform.next = _platform.next || function (fn) {
                return SET_TIMEOUT(fn, 0);
            };
            platform.clearNext = _platform.clearNext || platform.clearTimeout;
            platform.now = _platform.now || function () {
                return Date.now();
            };
            this._platform = platform;
            this._boundRunExpiredTimers = function () {
                _this._runExpiredTimers();
            };
            this._boundAutorunEnd = function () {
                _this._autorun = null;
                _this.end();
            };
        }
        /*
          @method begin
          @return instantiated class DeferredActionQueues
        */


        Backburner.prototype.begin = function begin() {
            var options = this.options;
            var previousInstance = this.currentInstance;
            var current = void 0;
            if (this._autorun !== null) {
                current = previousInstance;
                this._cancelAutorun();
            } else {
                if (previousInstance !== null) {
                    this.instanceStack.push(previousInstance);
                }
                current = this.currentInstance = new DeferredActionQueues(this.queueNames, options);
                this._trigger('begin', current, previousInstance);
            }
            this._onBegin(current, previousInstance);
            return current;
        };

        Backburner.prototype.end = function end() {
            var currentInstance = this.currentInstance;
            var nextInstance = null;
            if (currentInstance === null) {
                throw new Error('end called without begin');
            }
            // Prevent double-finally bug in Safari 6.0.2 and iOS 6
            // This bug appears to be resolved in Safari 6.0.5 and iOS 7
            var finallyAlreadyCalled = false;
            var result = void 0;
            try {
                result = currentInstance.flush();
            } finally {
                if (!finallyAlreadyCalled) {
                    finallyAlreadyCalled = true;
                    if (result === 1 /* Pause */) {
                            var next = this._platform.next;
                            this._autorun = next(this._boundAutorunEnd);
                        } else {
                        this.currentInstance = null;
                        if (this.instanceStack.length > 0) {
                            nextInstance = this.instanceStack.pop();
                            this.currentInstance = nextInstance;
                        }
                        this._trigger('end', currentInstance, nextInstance);
                        this._onEnd(currentInstance, nextInstance);
                    }
                }
            }
        };

        Backburner.prototype.on = function on(eventName, callback) {
            if (typeof callback !== 'function') {
                throw new TypeError('Callback must be a function');
            }
            var callbacks = this._eventCallbacks[eventName];
            if (callbacks !== undefined) {
                callbacks.push(callback);
            } else {
                throw new TypeError('Cannot on() event ' + eventName + ' because it does not exist');
            }
        };

        Backburner.prototype.off = function off(eventName, callback) {
            var callbacks = this._eventCallbacks[eventName];
            if (!eventName || callbacks === undefined) {
                throw new TypeError('Cannot off() event ' + eventName + ' because it does not exist');
            }
            var callbackFound = false;
            if (callback) {
                for (var i = 0; i < callbacks.length; i++) {
                    if (callbacks[i] === callback) {
                        callbackFound = true;
                        callbacks.splice(i, 1);
                        i--;
                    }
                }
            }
            if (!callbackFound) {
                throw new TypeError('Cannot off() callback that does not exist');
            }
        };

        Backburner.prototype.run = function run(target, method) {
            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            var length = arguments.length;
            var _method = void 0;
            var _target = void 0;
            if (length === 1) {
                _method = target;
                _target = null;
            } else {
                _method = method;
                _target = target;
                if (isString(_method)) {
                    _method = _target[_method];
                }
            }
            var onError = getOnError(this.options);
            this.begin();
            if (onError) {
                try {
                    return _method.apply(_target, args);
                } catch (error) {
                    onError(error);
                } finally {
                    this.end();
                }
            } else {
                try {
                    return _method.apply(_target, args);
                } finally {
                    this.end();
                }
            }
        };

        Backburner.prototype.join = function join() {
            if (this.currentInstance === null) {
                return this.run.apply(this, arguments);
            }
            var length = arguments.length;
            var method = void 0;
            var target = void 0;
            var args = void 0;
            if (length === 1) {
                method = arguments[0];
                target = null;
            } else {
                target = arguments[0];
                method = arguments[1];
                if (isString(method)) {
                    method = target[method];
                }
                if (length > 2) {
                    args = new Array(length - 2);
                    for (var i = 0, l = length - 2; i < l; i++) {
                        args[i] = arguments[i + 2];
                    }
                }
            }
            var onError = getOnError(this.options);
            if (onError) {
                try {
                    return method.apply(target, args);
                } catch (error) {
                    onError(error);
                }
            } else {
                return method.apply(target, args);
            }
        };

        Backburner.prototype.defer = function defer() {
            return this.schedule.apply(this, arguments);
        };

        Backburner.prototype.schedule = function schedule(queueName) {
            var length = arguments.length;
            var method = void 0;
            var target = void 0;
            var args = void 0;
            if (length === 2) {
                method = arguments[1];
                target = null;
            } else {
                target = arguments[1];
                method = arguments[2];
                if (isString(method)) {
                    method = target[method];
                }
                if (length > 3) {
                    args = new Array(length - 3);
                    for (var i = 3; i < length; i++) {
                        args[i - 3] = arguments[i];
                    }
                }
            }
            var stack = this.DEBUG ? new Error() : undefined;
            return this._ensureInstance().schedule(queueName, target, method, args, false, stack);
        };

        Backburner.prototype.scheduleIterable = function scheduleIterable(queueName, iterable) {
            var stack = this.DEBUG ? new Error() : undefined;
            return this._ensureInstance().schedule(queueName, null, iteratorDrain, [iterable], false, stack);
        };

        Backburner.prototype.deferOnce = function deferOnce() {
            return this.scheduleOnce.apply(this, arguments);
        };

        Backburner.prototype.scheduleOnce = function scheduleOnce(queueName /* , target, method, args */) {
            var length = arguments.length;
            var method = void 0;
            var target = void 0;
            var args = void 0;
            if (length === 2) {
                method = arguments[1];
                target = null;
            } else {
                target = arguments[1];
                method = arguments[2];
                if (isString(method)) {
                    method = target[method];
                }
                if (length > 3) {
                    args = new Array(length - 3);
                    for (var i = 3; i < length; i++) {
                        args[i - 3] = arguments[i];
                    }
                }
            }
            var stack = this.DEBUG ? new Error() : undefined;
            return this._ensureInstance().schedule(queueName, target, method, args, true, stack);
        };

        Backburner.prototype.setTimeout = function setTimeout() {
            return this.later.apply(this, arguments);
        };

        Backburner.prototype.later = function later() {
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }

            var length = args.length;
            var wait = 0;
            var method = void 0;
            var target = void 0;
            var methodOrTarget = void 0;
            var methodOrWait = void 0;
            var methodOrArgs = void 0;
            if (length === 0) {
                return;
            } else if (length === 1) {
                method = args.shift();
            } else if (length === 2) {
                methodOrTarget = args[0];
                methodOrWait = args[1];
                if (isFunction(methodOrWait)) {
                    target = args.shift();
                    method = args.shift();
                } else if (methodOrTarget !== null && isString(methodOrWait) && methodOrWait in methodOrTarget) {
                    target = args.shift();
                    method = target[args.shift()];
                } else if (isCoercableNumber(methodOrWait)) {
                    method = args.shift();
                    wait = parseInt(args.shift(), 10);
                } else {
                    method = args.shift();
                }
            } else {
                var last = args[args.length - 1];
                if (isCoercableNumber(last)) {
                    wait = parseInt(args.pop(), 10);
                }
                methodOrTarget = args[0];
                methodOrArgs = args[1];
                if (isFunction(methodOrArgs)) {
                    target = args.shift();
                    method = args.shift();
                } else if (methodOrTarget !== null && isString(methodOrArgs) && methodOrArgs in methodOrTarget) {
                    target = args.shift();
                    method = target[args.shift()];
                } else {
                    method = args.shift();
                }
            }
            var onError = getOnError(this.options);
            var executeAt = this._platform.now() + wait;
            var fn = void 0;
            if (onError) {
                fn = function () {
                    try {
                        method.apply(target, args);
                    } catch (e) {
                        onError(e);
                    }
                };
            } else {
                fn = function () {
                    method.apply(target, args);
                };
            }
            return this._setTimeout(fn, executeAt);
        };

        Backburner.prototype.throttle = function throttle(target, method /*, ...args, wait, [immediate] */) {
            var _this2 = this;

            var args = new Array(arguments.length);
            for (var i = 0; i < arguments.length; i++) {
                args[i] = arguments[i];
            }
            var immediate = args.pop();
            var isImmediate = void 0;
            var wait = void 0;
            var index = void 0;
            var timer = void 0;
            if (isCoercableNumber(immediate)) {
                wait = immediate;
                isImmediate = true;
            } else {
                wait = args.pop();
                isImmediate = immediate === true;
            }
            wait = parseInt(wait, 10);
            index = findItem(target, method, this._throttlers);
            if (index > -1) {
                return this._throttlers[index + 2];
            } // throttled
            timer = this._platform.setTimeout(function () {
                if (isImmediate === false) {
                    _this2.run.apply(_this2, args);
                }
                index = findTimer(timer, _this2._throttlers);
                if (index > -1) {
                    _this2._throttlers.splice(index, 3);
                }
            }, wait);
            if (isImmediate) {
                this.join.apply(this, args);
            }
            this._throttlers.push(target, method, timer);
            return timer;
        };

        Backburner.prototype.debounce = function debounce(target, method /* , args, wait, [immediate] */) {
            var _this3 = this;

            var args = new Array(arguments.length);
            for (var i = 0; i < arguments.length; i++) {
                args[i] = arguments[i];
            }
            var immediate = args.pop();
            var isImmediate = void 0;
            var wait = void 0;
            var index = void 0;
            var timer = void 0;
            if (isCoercableNumber(immediate)) {
                wait = immediate;
                isImmediate = false;
            } else {
                wait = args.pop();
                isImmediate = immediate === true;
            }
            wait = parseInt(wait, 10);
            // Remove debouncee
            index = findItem(target, method, this._debouncees);
            if (index > -1) {
                var timerId = this._debouncees[index + 2];
                this._debouncees.splice(index, 3);
                this._platform.clearTimeout(timerId);
            }
            timer = this._platform.setTimeout(function () {
                if (isImmediate === false) {
                    _this3.run.apply(_this3, args);
                }
                index = findTimer(timer, _this3._debouncees);
                if (index > -1) {
                    _this3._debouncees.splice(index, 3);
                }
            }, wait);
            if (isImmediate && index === -1) {
                this.join.apply(this, args);
            }
            this._debouncees.push(target, method, timer);
            return timer;
        };

        Backburner.prototype.cancelTimers = function cancelTimers() {
            for (var i = 2; i < this._throttlers.length; i += 3) {
                this._platform.clearTimeout(this._throttlers[i]);
            }
            this._throttlers = [];
            for (var t = 2; t < this._debouncees.length; t += 3) {
                this._platform.clearTimeout(this._debouncees[t]);
            }
            this._debouncees = [];
            this._clearTimerTimeout();
            this._timers = [];
            this._cancelAutorun();
        };

        Backburner.prototype.hasTimers = function hasTimers() {
            return this._timers.length > 0 || this._debouncees.length > 0 || this._throttlers.length > 0 || this._autorun !== null;
        };

        Backburner.prototype.cancel = function cancel(timer) {
            if (!timer) {
                return false;
            }
            var timerType = typeof timer;
            if (timerType === 'number' || timerType === 'string') {
                return this._cancelItem(timer, this._throttlers) || this._cancelItem(timer, this._debouncees);
            } else if (timerType === 'function') {
                return this._cancelLaterTimer(timer);
            } else if (timerType === 'object' && timer.queue && timer.method) {
                return timer.queue.cancel(timer);
            }
            return false;
        };

        Backburner.prototype.ensureInstance = function ensureInstance() {
            this._ensureInstance();
        };

        Backburner.prototype._cancelAutorun = function _cancelAutorun() {
            if (this._autorun !== null) {
                this._platform.clearNext(this._autorun);
                this._autorun = null;
            }
        };

        Backburner.prototype._setTimeout = function _setTimeout(fn, executeAt) {
            if (this._timers.length === 0) {
                this._timers.push(executeAt, fn);
                this._installTimerTimeout();
                return fn;
            }
            // find position to insert
            var i = binarySearch(executeAt, this._timers);
            this._timers.splice(i, 0, executeAt, fn);
            // we should be the new earliest timer if i == 0
            if (i === 0) {
                this._reinstallTimerTimeout();
            }
            return fn;
        };

        Backburner.prototype._cancelLaterTimer = function _cancelLaterTimer(timer) {
            for (var i = 1; i < this._timers.length; i += 2) {
                if (this._timers[i] === timer) {
                    i = i - 1;
                    this._timers.splice(i, 2); // remove the two elements
                    if (i === 0) {
                        this._reinstallTimerTimeout();
                    }
                    return true;
                }
            }
            return false;
        };

        Backburner.prototype._cancelItem = function _cancelItem(timer, array) {
            var index = findTimer(timer, array);
            if (index > -1) {
                array.splice(index, 3);
                this._platform.clearTimeout(timer);
                return true;
            }
            return false;
        };

        Backburner.prototype._trigger = function _trigger(eventName, arg1, arg2) {
            var callbacks = this._eventCallbacks[eventName];
            if (callbacks !== undefined) {
                for (var i = 0; i < callbacks.length; i++) {
                    callbacks[i](arg1, arg2);
                }
            }
        };

        Backburner.prototype._runExpiredTimers = function _runExpiredTimers() {
            this._timerTimeoutId = null;
            if (this._timers.length === 0) {
                return;
            }
            this.begin();
            this._scheduleExpiredTimers();
            this.end();
        };

        Backburner.prototype._scheduleExpiredTimers = function _scheduleExpiredTimers() {
            var timers = this._timers;
            var l = timers.length;
            var i = 0;
            var defaultQueue = this.options.defaultQueue;
            var n = this._platform.now();
            for (; i < l; i += 2) {
                var executeAt = timers[i];
                if (executeAt <= n) {
                    var fn = timers[i + 1];
                    this.schedule(defaultQueue, null, fn);
                } else {
                    break;
                }
            }
            timers.splice(0, i);
            this._installTimerTimeout();
        };

        Backburner.prototype._reinstallTimerTimeout = function _reinstallTimerTimeout() {
            this._clearTimerTimeout();
            this._installTimerTimeout();
        };

        Backburner.prototype._clearTimerTimeout = function _clearTimerTimeout() {
            if (this._timerTimeoutId === null) {
                return;
            }
            this._platform.clearTimeout(this._timerTimeoutId);
            this._timerTimeoutId = null;
        };

        Backburner.prototype._installTimerTimeout = function _installTimerTimeout() {
            if (this._timers.length === 0) {
                return;
            }
            var minExpiresAt = this._timers[0];
            var n = this._platform.now();
            var wait = Math.max(0, minExpiresAt - n);
            this._timerTimeoutId = this._platform.setTimeout(this._boundRunExpiredTimers, wait);
        };

        Backburner.prototype._ensureInstance = function _ensureInstance() {
            var currentInstance = this.currentInstance;
            if (currentInstance === null) {
                currentInstance = this.begin();
                var next = this._platform.next;
                this._autorun = next(this._boundAutorunEnd);
            }
            return currentInstance;
        };

        return Backburner;
    }();

    Backburner.Queue = Queue;

    exports.default = Backburner;
});
enifed('container', ['exports', 'ember-babel', 'ember-utils', 'ember-debug', 'ember/features'], function (exports, _emberBabel, _emberUtils, _emberDebug, _features) {
  'use strict';

  exports.Container = exports.privatize = exports.Registry = undefined;


  /* globals Proxy */
  var CONTAINER_OVERRIDE = (0, _emberUtils.symbol)('CONTAINER_OVERRIDE');

  /**
   A container used to instantiate and cache objects.
  
   Every `Container` must be associated with a `Registry`, which is referenced
   to determine the factory and options that should be used to instantiate
   objects.
  
   The public API for `Container` is still in flux and should not be considered
   stable.
  
   @private
   @class Container
   */
  function Container(registry) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    this.registry = registry;
    this.owner = options.owner || null;
    this.cache = (0, _emberUtils.dictionary)(options.cache || null);
    this.factoryManagerCache = (0, _emberUtils.dictionary)(options.factoryManagerCache || null);
    this[CONTAINER_OVERRIDE] = undefined;
    this.isDestroyed = false;

    if (true) {
      this.validationCache = (0, _emberUtils.dictionary)(options.validationCache || null);
    }
  }

  Container.prototype = {
    lookup: function (fullName, options) {
      (true && !(this.registry.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.registry.validateFullName(fullName)));

      return lookup(this, this.registry.normalize(fullName), options);
    },
    destroy: function () {
      destroyDestroyables(this);
      this.isDestroyed = true;
    },
    reset: function (fullName) {
      if (fullName !== undefined) {
        resetMember(this, this.registry.normalize(fullName));
      } else {
        resetCache(this);
      }
    },
    ownerInjection: function () {
      var _ref;

      return _ref = {}, _ref[_emberUtils.OWNER] = this.owner, _ref;
    },
    _resolverCacheKey: function (name, options) {
      return this.registry.resolverCacheKey(name, options);
    },
    factoryFor: function (fullName) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var normalizedName = this.registry.normalize(fullName);

      (true && !(this.registry.validateFullName(normalizedName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.registry.validateFullName(normalizedName)));


      if (options.source) {
        var expandedFullName = this.registry.expandLocalLookup(fullName, options);
        // if expandLocalLookup returns falsey, we do not support local lookup
        if (!_features.EMBER_MODULE_UNIFICATION) {
          if (!expandedFullName) {
            return;
          }

          normalizedName = expandedFullName;
        } else if (expandedFullName) {
          // with ember-module-unification, if expandLocalLookup returns something,
          // pass it to the resolve without the source
          normalizedName = expandedFullName;
          options = {};
        }
      }

      var cacheKey = this._resolverCacheKey(normalizedName, options);
      var cached = this.factoryManagerCache[cacheKey];

      if (cached !== undefined) {
        return cached;
      }

      var factory = _features.EMBER_MODULE_UNIFICATION ? this.registry.resolve(normalizedName, options) : this.registry.resolve(normalizedName);

      if (factory === undefined) {
        return;
      }

      if (true && factory && typeof factory._onLookup === 'function') {
        factory._onLookup(fullName);
      }

      var manager = new FactoryManager(this, factory, fullName, normalizedName);

      if (true) {
        manager = wrapManagerInDeprecationProxy(manager);
      }

      this.factoryManagerCache[cacheKey] = manager;
      return manager;
    }
  };

  /*
   * Wrap a factory manager in a proxy which will not permit properties to be
   * set on the manager.
   */
  function wrapManagerInDeprecationProxy(manager) {
    if (_emberUtils.HAS_NATIVE_PROXY) {
      var validator = {
        set: function (obj, prop, value) {
          throw new Error('You attempted to set "' + prop + '" on a factory manager created by container#factoryFor. A factory manager is a read-only construct.');
        }
      };

      // Note:
      // We have to proxy access to the manager here so that private property
      // access doesn't cause the above errors to occur.
      var m = manager;
      var proxiedManager = {
        class: m.class,
        create: function (props) {
          return m.create(props);
        }
      };

      return new Proxy(proxiedManager, validator);
    }

    return manager;
  }

  function isSingleton(container, fullName) {
    return container.registry.getOption(fullName, 'singleton') !== false;
  }

  function isInstantiatable(container, fullName) {
    return container.registry.getOption(fullName, 'instantiate') !== false;
  }

  function lookup(container, fullName) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (options.source) {
      var expandedFullName = container.registry.expandLocalLookup(fullName, options);

      if (!_features.EMBER_MODULE_UNIFICATION) {
        // if expandLocalLookup returns falsey, we do not support local lookup
        if (!expandedFullName) {
          return;
        }

        fullName = expandedFullName;
      } else if (expandedFullName) {
        // with ember-module-unification, if expandLocalLookup returns something,
        // pass it to the resolve without the source
        fullName = expandedFullName;
        options = {};
      }
    }

    var cacheKey = container._resolverCacheKey(fullName, options);
    var cached = container.cache[cacheKey];
    if (cached !== undefined && options.singleton !== false) {
      return cached;
    }

    return instantiateFactory(container, fullName, options);
  }

  function isSingletonClass(container, fullName, _ref2) {
    var instantiate = _ref2.instantiate,
        singleton = _ref2.singleton;

    return singleton !== false && !instantiate && isSingleton(container, fullName) && !isInstantiatable(container, fullName);
  }

  function isSingletonInstance(container, fullName, _ref3) {
    var instantiate = _ref3.instantiate,
        singleton = _ref3.singleton;

    return singleton !== false && instantiate !== false && isSingleton(container, fullName) && isInstantiatable(container, fullName);
  }

  function isFactoryClass(container, fullname, _ref4) {
    var instantiate = _ref4.instantiate,
        singleton = _ref4.singleton;

    return instantiate === false && (singleton === false || !isSingleton(container, fullname)) && !isInstantiatable(container, fullname);
  }

  function isFactoryInstance(container, fullName, _ref5) {
    var instantiate = _ref5.instantiate,
        singleton = _ref5.singleton;

    return instantiate !== false && (singleton !== false || isSingleton(container, fullName)) && isInstantiatable(container, fullName);
  }

  function instantiateFactory(container, fullName, options) {
    var factoryManager = _features.EMBER_MODULE_UNIFICATION && options && options.source ? container.factoryFor(fullName, options) : container.factoryFor(fullName);

    if (factoryManager === undefined) {
      return;
    }

    var cacheKey = container._resolverCacheKey(fullName, options);

    // SomeClass { singleton: true, instantiate: true } | { singleton: true } | { instantiate: true } | {}
    // By default majority of objects fall into this case
    if (isSingletonInstance(container, fullName, options)) {
      return container.cache[cacheKey] = factoryManager.create();
    }

    // SomeClass { singleton: false, instantiate: true }
    if (isFactoryInstance(container, fullName, options)) {
      return factoryManager.create();
    }

    // SomeClass { singleton: true, instantiate: false } | { instantiate: false } | { singleton: false, instantiation: false }
    if (isSingletonClass(container, fullName, options) || isFactoryClass(container, fullName, options)) {
      return factoryManager.class;
    }

    throw new Error('Could not create factory');
  }

  function markInjectionsAsDynamic(injections) {
    injections._dynamic = true;
  }

  function areInjectionsNotDynamic(injections) {
    return injections._dynamic !== true;
  }

  function buildInjections() /* container, ...injections */{
    var hash = {};

    if (arguments.length > 1) {
      var container = arguments[0];
      var injections = [];
      var injection = void 0;

      for (var i = 1; i < arguments.length; i++) {
        if (arguments[i]) {
          injections = injections.concat(arguments[i]);
        }
      }

      if (true) {
        container.registry.validateInjections(injections);
      }

      var markAsDynamic = false;
      for (var _i = 0; _i < injections.length; _i++) {
        injection = injections[_i];
        hash[injection.property] = lookup(container, injection.fullName);
        if (!markAsDynamic) {
          markAsDynamic = !isSingleton(container, injection.fullName);
        }
      }

      if (markAsDynamic) {
        markInjectionsAsDynamic(hash);
      }
    }

    return hash;
  }

  function injectionsFor(container, fullName) {
    var registry = container.registry;
    var splitName = fullName.split(':');
    var type = splitName[0];

    var injections = buildInjections(container, registry.getTypeInjections(type), registry.getInjections(fullName));

    return injections;
  }

  function destroyDestroyables(container) {
    var cache = container.cache;
    var keys = Object.keys(cache);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = cache[key];

      if (isInstantiatable(container, key) && value.destroy) {
        value.destroy();
      }
    }
  }

  function resetCache(container) {
    destroyDestroyables(container);
    container.cache.dict = (0, _emberUtils.dictionary)(null);
  }

  function resetMember(container, fullName) {
    var member = container.cache[fullName];

    delete container.factoryManagerCache[fullName];

    if (member) {
      delete container.cache[fullName];

      if (member.destroy) {
        member.destroy();
      }
    }
  }

  var FactoryManager = function () {
    function FactoryManager(container, factory, fullName, normalizedName) {
      (0, _emberBabel.classCallCheck)(this, FactoryManager);

      this.container = container;
      this.owner = container.owner;
      this.class = factory;
      this.fullName = fullName;
      this.normalizedName = normalizedName;
      this.madeToString = undefined;
      this.injections = undefined;
    }

    FactoryManager.prototype.toString = function toString() {
      if (!this.madeToString) {
        this.madeToString = this.container.registry.makeToString(this.class, this.fullName);
      }

      return this.madeToString;
    };

    FactoryManager.prototype.create = function create() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var injections = this.injections;
      if (injections === undefined) {
        injections = injectionsFor(this.container, this.normalizedName);
        if (areInjectionsNotDynamic(injections)) {
          this.injections = injections;
        }
      }
      var props = (0, _emberUtils.assign)({}, injections, options);

      if (true) {
        var lazyInjections = void 0;
        var validationCache = this.container.validationCache;
        // Ensure that all lazy injections are valid at instantiation time
        if (!validationCache[this.fullName] && this.class && typeof this.class._lazyInjections === 'function') {
          lazyInjections = this.class._lazyInjections();
          lazyInjections = this.container.registry.normalizeInjectionsHash(lazyInjections);

          this.container.registry.validateInjections(lazyInjections);
        }

        validationCache[this.fullName] = true;
      }

      if (!this.class.create) {
        throw new Error('Failed to create an instance of \'' + this.normalizedName + '\'. Most likely an improperly defined class or' + ' an invalid module export.');
      }

      // required to allow access to things like
      // the customized toString, _debugContainerKey,
      // owner, etc. without a double extend and without
      // modifying the objects properties
      if (typeof this.class._initFactory === 'function') {
        this.class._initFactory(this);
      } else {
        // in the non-EmberObject case we need to still setOwner
        // this is required for supporting glimmer environment and
        // template instantiation which rely heavily on
        // `options[OWNER]` being passed into `create`
        // TODO: clean this up, and remove in future versions
        (0, _emberUtils.setOwner)(props, this.owner);
      }

      return this.class.create(props);
    };

    return FactoryManager;
  }();

  var VALID_FULL_NAME_REGEXP = /^[^:]+:[^:]+$/;

  /**
   A registry used to store factory and option information keyed
   by type.
  
   A `Registry` stores the factory and option information needed by a
   `Container` to instantiate and cache objects.
  
   The API for `Registry` is still in flux and should not be considered stable.
  
   @private
   @class Registry
   @since 1.11.0
  */
  function Registry() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    this.fallback = options.fallback || null;

    if (options.resolver) {
      this.resolver = options.resolver;
      if (typeof this.resolver === 'function') {
        deprecateResolverFunction(this);
      }
    }

    this.registrations = (0, _emberUtils.dictionary)(options.registrations || null);

    this._typeInjections = (0, _emberUtils.dictionary)(null);
    this._injections = (0, _emberUtils.dictionary)(null);

    this._localLookupCache = Object.create(null);
    this._normalizeCache = (0, _emberUtils.dictionary)(null);
    this._resolveCache = (0, _emberUtils.dictionary)(null);
    this._failCache = (0, _emberUtils.dictionary)(null);

    this._options = (0, _emberUtils.dictionary)(null);
    this._typeOptions = (0, _emberUtils.dictionary)(null);
  }

  Registry.prototype = {
    /**
     A backup registry for resolving registrations when no matches can be found.
      @private
     @property fallback
     @type Registry
     */
    fallback: null,

    /**
     An object that has a `resolve` method that resolves a name.
      @private
     @property resolver
     @type Resolver
     */
    resolver: null,

    /**
     @private
     @property registrations
     @type InheritingDict
     */
    registrations: null,

    /**
     @private
      @property _typeInjections
     @type InheritingDict
     */
    _typeInjections: null,

    /**
     @private
      @property _injections
     @type InheritingDict
     */
    _injections: null,

    /**
     @private
      @property _normalizeCache
     @type InheritingDict
     */
    _normalizeCache: null,

    /**
     @private
      @property _resolveCache
     @type InheritingDict
     */
    _resolveCache: null,

    /**
     @private
      @property _options
     @type InheritingDict
     */
    _options: null,

    /**
     @private
      @property _typeOptions
     @type InheritingDict
     */
    _typeOptions: null,

    container: function (options) {
      return new Container(this, options);
    },
    register: function (fullName, factory) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));


      if (factory === undefined) {
        throw new TypeError('Attempting to register an unknown factory: \'' + fullName + '\'');
      }

      var normalizedName = this.normalize(fullName);

      if (this._resolveCache[normalizedName]) {
        throw new Error('Cannot re-register: \'' + fullName + '\', as it has already been resolved.');
      }

      delete this._failCache[normalizedName];
      this.registrations[normalizedName] = factory;
      this._options[normalizedName] = options;
    },
    unregister: function (fullName) {
      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));


      var normalizedName = this.normalize(fullName);

      this._localLookupCache = Object.create(null);

      delete this.registrations[normalizedName];
      delete this._resolveCache[normalizedName];
      delete this._failCache[normalizedName];
      delete this._options[normalizedName];
    },
    resolve: function (fullName, options) {
      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));

      var factory = resolve(this, this.normalize(fullName), options);
      if (factory === undefined && this.fallback) {
        var _fallback;

        factory = (_fallback = this.fallback).resolve.apply(_fallback, arguments);
      }
      return factory;
    },
    describe: function (fullName) {
      if (this.resolver && this.resolver.lookupDescription) {
        return this.resolver.lookupDescription(fullName);
      } else if (this.fallback) {
        return this.fallback.describe(fullName);
      } else {
        return fullName;
      }
    },
    normalizeFullName: function (fullName) {
      if (this.resolver && this.resolver.normalize) {
        return this.resolver.normalize(fullName);
      } else if (this.fallback) {
        return this.fallback.normalizeFullName(fullName);
      } else {
        return fullName;
      }
    },
    normalize: function (fullName) {
      return this._normalizeCache[fullName] || (this._normalizeCache[fullName] = this.normalizeFullName(fullName));
    },
    makeToString: function (factory, fullName) {
      if (this.resolver && this.resolver.makeToString) {
        return this.resolver.makeToString(factory, fullName);
      } else if (this.fallback) {
        return this.fallback.makeToString(factory, fullName);
      } else {
        return factory.toString();
      }
    },
    has: function (fullName, options) {
      if (!this.isValidFullName(fullName)) {
        return false;
      }

      var source = options && options.source && this.normalize(options.source);

      return has(this, this.normalize(fullName), source);
    },
    optionsForType: function (type, options) {
      this._typeOptions[type] = options;
    },
    getOptionsForType: function (type) {
      var optionsForType = this._typeOptions[type];
      if (optionsForType === undefined && this.fallback) {
        optionsForType = this.fallback.getOptionsForType(type);
      }
      return optionsForType;
    },
    options: function (fullName) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var normalizedName = this.normalize(fullName);
      this._options[normalizedName] = options;
    },
    getOptions: function (fullName) {
      var normalizedName = this.normalize(fullName);
      var options = this._options[normalizedName];

      if (options === undefined && this.fallback) {
        options = this.fallback.getOptions(fullName);
      }
      return options;
    },
    getOption: function (fullName, optionName) {
      var options = this._options[fullName];

      if (options && options[optionName] !== undefined) {
        return options[optionName];
      }

      var type = fullName.split(':')[0];
      options = this._typeOptions[type];

      if (options && options[optionName] !== undefined) {
        return options[optionName];
      } else if (this.fallback) {
        return this.fallback.getOption(fullName, optionName);
      }
    },
    typeInjection: function (type, property, fullName) {
      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));


      var fullNameType = fullName.split(':')[0];
      if (fullNameType === type) {
        throw new Error('Cannot inject a \'' + fullName + '\' on other ' + type + '(s).');
      }

      var injections = this._typeInjections[type] || (this._typeInjections[type] = []);

      injections.push({
        property: property,
        fullName: fullName
      });
    },
    injection: function (fullName, property, injectionName) {
      this.validateFullName(injectionName);
      var normalizedInjectionName = this.normalize(injectionName);

      if (fullName.indexOf(':') === -1) {
        return this.typeInjection(fullName, property, normalizedInjectionName);
      }

      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));

      var normalizedName = this.normalize(fullName);

      var injections = this._injections[normalizedName] || (this._injections[normalizedName] = []);

      injections.push({
        property: property,
        fullName: normalizedInjectionName
      });
    },
    knownForType: function (type) {
      var fallbackKnown = void 0,
          resolverKnown = void 0;

      var localKnown = (0, _emberUtils.dictionary)(null);
      var registeredNames = Object.keys(this.registrations);
      for (var index = 0; index < registeredNames.length; index++) {
        var fullName = registeredNames[index];
        var itemType = fullName.split(':')[0];

        if (itemType === type) {
          localKnown[fullName] = true;
        }
      }

      if (this.fallback) {
        fallbackKnown = this.fallback.knownForType(type);
      }

      if (this.resolver && this.resolver.knownForType) {
        resolverKnown = this.resolver.knownForType(type);
      }

      return (0, _emberUtils.assign)({}, fallbackKnown, localKnown, resolverKnown);
    },
    validateFullName: function (fullName) {
      if (!this.isValidFullName(fullName)) {
        throw new TypeError('Invalid Fullname, expected: \'type:name\' got: ' + fullName);
      }

      return true;
    },
    isValidFullName: function (fullName) {
      return VALID_FULL_NAME_REGEXP.test(fullName);
    },
    normalizeInjectionsHash: function (hash) {
      var injections = [];

      for (var key in hash) {
        if (hash.hasOwnProperty(key)) {
          (true && !(this.validateFullName(hash[key])) && (0, _emberDebug.assert)('Expected a proper full name, given \'' + hash[key] + '\'', this.validateFullName(hash[key])));


          injections.push({
            property: key,
            fullName: hash[key]
          });
        }
      }

      return injections;
    },
    getInjections: function (fullName) {
      var injections = this._injections[fullName] || [];
      if (this.fallback) {
        injections = injections.concat(this.fallback.getInjections(fullName));
      }
      return injections;
    },
    getTypeInjections: function (type) {
      var injections = this._typeInjections[type] || [];
      if (this.fallback) {
        injections = injections.concat(this.fallback.getTypeInjections(type));
      }
      return injections;
    },
    resolverCacheKey: function (name, options) {
      if (!_features.EMBER_MODULE_UNIFICATION) {
        return name;
      }

      return options && options.source ? options.source + ':' + name : name;
    }
  };

  function deprecateResolverFunction(registry) {
    (true && !(false) && (0, _emberDebug.deprecate)('Passing a `resolver` function into a Registry is deprecated. Please pass in a Resolver object with a `resolve` method.', false, { id: 'ember-application.registry-resolver-as-function', until: '3.0.0', url: 'https://emberjs.com/deprecations/v2.x#toc_registry-resolver-as-function' }));

    registry.resolver = {
      resolve: registry.resolver
    };
  }

  if (true) {
    Registry.prototype.validateInjections = function (injections) {
      if (!injections) {
        return;
      }

      var fullName = void 0;

      for (var i = 0; i < injections.length; i++) {
        fullName = injections[i].fullName;

        (true && !(this.has(fullName)) && (0, _emberDebug.assert)('Attempting to inject an unknown injection: \'' + fullName + '\'', this.has(fullName)));
      }
    };
  }

  /**
   Given a fullName and a source fullName returns the fully resolved
   fullName. Used to allow for local lookup.
  
   ```javascript
   let registry = new Registry();
  
   // the twitter factory is added to the module system
   registry.expandLocalLookup('component:post-title', { source: 'template:post' }) // => component:post/post-title
   ```
  
   @private
   @method expandLocalLookup
   @param {String} fullName
   @param {Object} [options]
   @param {String} [options.source] the fullname of the request source (used for local lookups)
   @return {String} fullName
   */
  Registry.prototype.expandLocalLookup = function Registry_expandLocalLookup(fullName, options) {
    if (this.resolver && this.resolver.expandLocalLookup) {
      (true && !(this.validateFullName(fullName)) && (0, _emberDebug.assert)('fullName must be a proper full name', this.validateFullName(fullName)));
      (true && !(options && options.source) && (0, _emberDebug.assert)('options.source must be provided to expandLocalLookup', options && options.source));
      (true && !(this.validateFullName(options.source)) && (0, _emberDebug.assert)('options.source must be a proper full name', this.validateFullName(options.source)));


      var normalizedFullName = this.normalize(fullName);
      var normalizedSource = this.normalize(options.source);

      return expandLocalLookup(this, normalizedFullName, normalizedSource);
    } else if (this.fallback) {
      return this.fallback.expandLocalLookup(fullName, options);
    } else {
      return null;
    }
  };

  function expandLocalLookup(registry, normalizedName, normalizedSource) {
    var cache = registry._localLookupCache;
    var normalizedNameCache = cache[normalizedName];

    if (!normalizedNameCache) {
      normalizedNameCache = cache[normalizedName] = Object.create(null);
    }

    var cached = normalizedNameCache[normalizedSource];

    if (cached !== undefined) {
      return cached;
    }

    var expanded = registry.resolver.expandLocalLookup(normalizedName, normalizedSource);

    return normalizedNameCache[normalizedSource] = expanded;
  }

  function resolve(registry, normalizedName, options) {
    if (options && options.source) {
      // when `source` is provided expand normalizedName
      // and source into the full normalizedName
      var expandedNormalizedName = registry.expandLocalLookup(normalizedName, options);

      // if expandLocalLookup returns falsey, we do not support local lookup
      if (!_features.EMBER_MODULE_UNIFICATION) {
        if (!expandedNormalizedName) {
          return;
        }

        normalizedName = expandedNormalizedName;
      } else if (expandedNormalizedName) {
        // with ember-module-unification, if expandLocalLookup returns something,
        // pass it to the resolve without the source
        normalizedName = expandedNormalizedName;
        options = {};
      }
    }

    var cacheKey = registry.resolverCacheKey(normalizedName, options);
    var cached = registry._resolveCache[cacheKey];
    if (cached !== undefined) {
      return cached;
    }
    if (registry._failCache[cacheKey]) {
      return;
    }

    var resolved = void 0;

    if (registry.resolver) {
      resolved = registry.resolver.resolve(normalizedName, options && options.source);
    }

    if (resolved === undefined) {
      resolved = registry.registrations[normalizedName];
    }

    if (resolved === undefined) {
      registry._failCache[cacheKey] = true;
    } else {
      registry._resolveCache[cacheKey] = resolved;
    }

    return resolved;
  }

  function has(registry, fullName, source) {
    return registry.resolve(fullName, { source: source }) !== undefined;
  }

  var privateNames = (0, _emberUtils.dictionary)(null);
  var privateSuffix = ('' + Math.random() + Date.now()).replace('.', '');

  function privatize(_ref6) {
    var fullName = _ref6[0];

    var name = privateNames[fullName];
    if (name) {
      return name;
    }

    var _fullName$split = fullName.split(':'),
        type = _fullName$split[0],
        rawName = _fullName$split[1];

    return privateNames[fullName] = (0, _emberUtils.intern)(type + ':' + rawName + '-' + privateSuffix);
  }

  /*
  Public API for the container is still in flux.
  The public API, specified on the application namespace should be considered the stable API.
  // @module container
    @private
  */

  exports.Registry = Registry;
  exports.privatize = privatize;
  exports.Container = Container;
});
enifed("dag-map", ["exports"], function (exports) {
    "use strict";

    /**
     * A topologically ordered map of key/value pairs with a simple API for adding constraints.
     *
     * Edges can forward reference keys that have not been added yet (the forward reference will
     * map the key to undefined).
     */
    var DAG = function () {
        function DAG() {
            this._vertices = new Vertices();
        }
        /**
         * Adds a key/value pair with dependencies on other key/value pairs.
         *
         * @public
         * @param key    The key of the vertex to be added.
         * @param value  The value of that vertex.
         * @param before A key or array of keys of the vertices that must
         *               be visited before this vertex.
         * @param after  An string or array of strings with the keys of the
         *               vertices that must be after this vertex is visited.
         */
        DAG.prototype.add = function (key, value, before, after) {
            if (!key) throw new Error('argument `key` is required');
            var vertices = this._vertices;
            var v = vertices.add(key);
            v.val = value;
            if (before) {
                if (typeof before === "string") {
                    vertices.addEdge(v, vertices.add(before));
                } else {
                    for (var i = 0; i < before.length; i++) {
                        vertices.addEdge(v, vertices.add(before[i]));
                    }
                }
            }
            if (after) {
                if (typeof after === "string") {
                    vertices.addEdge(vertices.add(after), v);
                } else {
                    for (var i = 0; i < after.length; i++) {
                        vertices.addEdge(vertices.add(after[i]), v);
                    }
                }
            }
        };
        /**
         * @deprecated please use add.
         */
        DAG.prototype.addEdges = function (key, value, before, after) {
            this.add(key, value, before, after);
        };
        /**
         * Visits key/value pairs in topological order.
         *
         * @public
         * @param callback The function to be invoked with each key/value.
         */
        DAG.prototype.each = function (callback) {
            this._vertices.walk(callback);
        };
        /**
         * @deprecated please use each.
         */
        DAG.prototype.topsort = function (callback) {
            this.each(callback);
        };
        return DAG;
    }();
    exports.default = DAG;

    /** @private */
    var Vertices = function () {
        function Vertices() {
            this.length = 0;
            this.stack = new IntStack();
            this.path = new IntStack();
            this.result = new IntStack();
        }
        Vertices.prototype.add = function (key) {
            if (!key) throw new Error("missing key");
            var l = this.length | 0;
            var vertex;
            for (var i = 0; i < l; i++) {
                vertex = this[i];
                if (vertex.key === key) return vertex;
            }
            this.length = l + 1;
            return this[l] = {
                idx: l,
                key: key,
                val: undefined,
                out: false,
                flag: false,
                length: 0
            };
        };
        Vertices.prototype.addEdge = function (v, w) {
            this.check(v, w.key);
            var l = w.length | 0;
            for (var i = 0; i < l; i++) {
                if (w[i] === v.idx) return;
            }
            w.length = l + 1;
            w[l] = v.idx;
            v.out = true;
        };
        Vertices.prototype.walk = function (cb) {
            this.reset();
            for (var i = 0; i < this.length; i++) {
                var vertex = this[i];
                if (vertex.out) continue;
                this.visit(vertex, "");
            }
            this.each(this.result, cb);
        };
        Vertices.prototype.check = function (v, w) {
            if (v.key === w) {
                throw new Error("cycle detected: " + w + " <- " + w);
            }
            // quick check
            if (v.length === 0) return;
            // shallow check
            for (var i = 0; i < v.length; i++) {
                var key = this[v[i]].key;
                if (key === w) {
                    throw new Error("cycle detected: " + w + " <- " + v.key + " <- " + w);
                }
            }
            // deep check
            this.reset();
            this.visit(v, w);
            if (this.path.length > 0) {
                var msg_1 = "cycle detected: " + w;
                this.each(this.path, function (key) {
                    msg_1 += " <- " + key;
                });
                throw new Error(msg_1);
            }
        };
        Vertices.prototype.reset = function () {
            this.stack.length = 0;
            this.path.length = 0;
            this.result.length = 0;
            for (var i = 0, l = this.length; i < l; i++) {
                this[i].flag = false;
            }
        };
        Vertices.prototype.visit = function (start, search) {
            var _a = this,
                stack = _a.stack,
                path = _a.path,
                result = _a.result;
            stack.push(start.idx);
            while (stack.length) {
                var index = stack.pop() | 0;
                if (index >= 0) {
                    // enter
                    var vertex = this[index];
                    if (vertex.flag) continue;
                    vertex.flag = true;
                    path.push(index);
                    if (search === vertex.key) break;
                    // push exit
                    stack.push(~index);
                    this.pushIncoming(vertex);
                } else {
                    // exit
                    path.pop();
                    result.push(~index);
                }
            }
        };
        Vertices.prototype.pushIncoming = function (incomming) {
            var stack = this.stack;
            for (var i = incomming.length - 1; i >= 0; i--) {
                var index = incomming[i];
                if (!this[index].flag) {
                    stack.push(index);
                }
            }
        };
        Vertices.prototype.each = function (indices, cb) {
            for (var i = 0, l = indices.length; i < l; i++) {
                var vertex = this[indices[i]];
                cb(vertex.key, vertex.val);
            }
        };
        return Vertices;
    }();
    /** @private */
    var IntStack = function () {
        function IntStack() {
            this.length = 0;
        }
        IntStack.prototype.push = function (n) {
            this[this.length++] = n | 0;
        };
        IntStack.prototype.pop = function () {
            return this[--this.length] | 0;
        };
        return IntStack;
    }();
});
enifed('ember-application/index', ['exports', 'ember-application/system/application', 'ember-application/system/application-instance', 'ember-application/system/resolver', 'ember-application/system/engine', 'ember-application/system/engine-instance', 'ember-application/system/engine-parent', 'ember-application/initializers/dom-templates'], function (exports, _application, _applicationInstance, _resolver, _engine, _engineInstance, _engineParent) {
  'use strict';

  exports.setEngineParent = exports.getEngineParent = exports.EngineInstance = exports.Engine = exports.Resolver = exports.ApplicationInstance = exports.Application = undefined;
  Object.defineProperty(exports, 'Application', {
    enumerable: true,
    get: function () {
      return _application.default;
    }
  });
  Object.defineProperty(exports, 'ApplicationInstance', {
    enumerable: true,
    get: function () {
      return _applicationInstance.default;
    }
  });
  Object.defineProperty(exports, 'Resolver', {
    enumerable: true,
    get: function () {
      return _resolver.default;
    }
  });
  Object.defineProperty(exports, 'Engine', {
    enumerable: true,
    get: function () {
      return _engine.default;
    }
  });
  Object.defineProperty(exports, 'EngineInstance', {
    enumerable: true,
    get: function () {
      return _engineInstance.default;
    }
  });
  Object.defineProperty(exports, 'getEngineParent', {
    enumerable: true,
    get: function () {
      return _engineParent.getEngineParent;
    }
  });
  Object.defineProperty(exports, 'setEngineParent', {
    enumerable: true,
    get: function () {
      return _engineParent.setEngineParent;
    }
  });
});
enifed('ember-application/initializers/dom-templates', ['require', 'ember-glimmer', 'ember-environment', 'ember-application/system/application'], function (_require2, _emberGlimmer, _emberEnvironment, _application) {
  'use strict';

  var bootstrap = function () {};

  _application.default.initializer({
    name: 'domTemplates',
    initialize: function () {
      var bootstrapModuleId = 'ember-template-compiler/system/bootstrap';
      var context = void 0;
      if (_emberEnvironment.environment.hasDOM && (0, _require2.has)(bootstrapModuleId)) {
        bootstrap = (0, _require2.default)(bootstrapModuleId).default;
        context = document;
      }

      bootstrap({ context: context, hasTemplate: _emberGlimmer.hasTemplate, setTemplate: _emberGlimmer.setTemplate });
    }
  });
});
enifed('ember-application/system/application-instance', ['exports', 'ember-utils', 'ember-debug', 'ember-metal', 'ember-runtime', 'ember-environment', 'ember-views', 'ember-application/system/engine-instance'], function (exports, _emberUtils, _emberDebug, _emberMetal, _emberRuntime, _emberEnvironment, _emberViews, _engineInstance) {
  'use strict';

  var BootOptions = void 0;

  /**
    The `ApplicationInstance` encapsulates all of the stateful aspects of a
    running `Application`.
  
    At a high-level, we break application boot into two distinct phases:
  
    * Definition time, where all of the classes, templates, and other
      dependencies are loaded (typically in the browser).
    * Run time, where we begin executing the application once everything
      has loaded.
  
    Definition time can be expensive and only needs to happen once since it is
    an idempotent operation. For example, between test runs and FastBoot
    requests, the application stays the same. It is only the state that we want
    to reset.
  
    That state is what the `ApplicationInstance` manages: it is responsible for
    creating the container that contains all application state, and disposing of
    it once the particular test run or FastBoot request has finished.
  
    @public
    @class ApplicationInstance
    @extends EngineInstance
  */

  /**
  @module @ember/application
  */

  var ApplicationInstance = _engineInstance.default.extend({
    /**
      The `Application` for which this is an instance.
       @property {Application} application
      @private
    */
    application: null,

    /**
      The DOM events for which the event dispatcher should listen.
       By default, the application's `Ember.EventDispatcher` listens
      for a set of standard DOM events, such as `mousedown` and
      `keyup`, and delegates them to your application's `Ember.View`
      instances.
       @private
      @property {Object} customEvents
    */
    customEvents: null,

    /**
      The root DOM element of the Application as an element or a
      [jQuery-compatible selector
      string](http://api.jquery.com/category/selectors/).
       @private
      @property {String|DOMElement} rootElement
    */
    rootElement: null,

    init: function () {
      this._super.apply(this, arguments);

      // Register this instance in the per-instance registry.
      //
      // Why do we need to register the instance in the first place?
      // Because we need a good way for the root route (a.k.a ApplicationRoute)
      // to notify us when it has created the root-most view. That view is then
      // appended to the rootElement, in the case of apps, to the fixture harness
      // in tests, or rendered to a string in the case of FastBoot.
      this.register('-application-instance:main', this, { instantiate: false });
    },
    _bootSync: function (options) {
      if (this._booted) {
        return this;
      }

      options = new BootOptions(options);

      this.setupRegistry(options);

      if (options.rootElement) {
        this.rootElement = options.rootElement;
      } else {
        this.rootElement = this.application.rootElement;
      }

      if (options.location) {
        var router = (0, _emberMetal.get)(this, 'router');
        (0, _emberMetal.set)(router, 'location', options.location);
      }

      this.application.runInstanceInitializers(this);

      if (options.isInteractive) {
        this.setupEventDispatcher();
      }

      this._booted = true;

      return this;
    },
    setupRegistry: function (options) {
      this.constructor.setupRegistry(this.__registry__, options);
    },


    router: (0, _emberMetal.computed)(function () {
      return this.lookup('router:main');
    }).readOnly(),

    didCreateRootView: function (view) {
      view.appendTo(this.rootElement);
    },
    startRouting: function () {
      var router = (0, _emberMetal.get)(this, 'router');
      router.startRouting();
      this._didSetupRouter = true;
    },
    setupRouter: function () {
      if (this._didSetupRouter) {
        return;
      }
      this._didSetupRouter = true;

      var router = (0, _emberMetal.get)(this, 'router');
      router.setupRouter();
    },
    handleURL: function (url) {
      var router = (0, _emberMetal.get)(this, 'router');

      this.setupRouter();
      return router.handleURL(url);
    },
    setupEventDispatcher: function () {
      var dispatcher = this.lookup('event_dispatcher:main');
      var applicationCustomEvents = (0, _emberMetal.get)(this.application, 'customEvents');
      var instanceCustomEvents = (0, _emberMetal.get)(this, 'customEvents');

      var customEvents = (0, _emberUtils.assign)({}, applicationCustomEvents, instanceCustomEvents);
      dispatcher.setup(customEvents, this.rootElement);

      return dispatcher;
    },
    getURL: function () {
      var router = (0, _emberMetal.get)(this, 'router');
      return (0, _emberMetal.get)(router, 'url');
    },
    visit: function (url) {
      var _this = this;

      this.setupRouter();

      var bootOptions = this.__container__.lookup('-environment:main');

      var router = (0, _emberMetal.get)(this, 'router');

      var handleTransitionResolve = function () {
        if (!bootOptions.options.shouldRender) {
          // No rendering is needed, and routing has completed, simply return.
          return _this;
        } else {
          return new _emberRuntime.RSVP.Promise(function (resolve) {
            // Resolve once rendering is completed. `router.handleURL` returns the transition (as a thennable)
            // which resolves once the transition is completed, but the transition completion only queues up
            // a scheduled revalidation (into the `render` queue) in the Renderer.
            //
            // This uses `run.schedule('afterRender', ....)` to resolve after that rendering has completed.
            _emberMetal.run.schedule('afterRender', null, resolve, _this);
          });
        }
      };

      var handleTransitionReject = function (error) {
        if (error.error) {
          throw error.error;
        } else if (error.name === 'TransitionAborted' && router._routerMicrolib.activeTransition) {
          return router._routerMicrolib.activeTransition.then(handleTransitionResolve, handleTransitionReject);
        } else if (error.name === 'TransitionAborted') {
          throw new Error(error.message);
        } else {
          throw error;
        }
      };

      var location = (0, _emberMetal.get)(router, 'location');

      // Keeps the location adapter's internal URL in-sync
      location.setURL(url);

      // getURL returns the set url with the rootURL stripped off
      return router.handleURL(location.getURL()).then(handleTransitionResolve, handleTransitionReject);
    }
  });

  ApplicationInstance.reopenClass({
    setupRegistry: function (registry) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!options.toEnvironment) {
        options = new BootOptions(options);
      }

      registry.register('-environment:main', options.toEnvironment(), { instantiate: false });
      registry.register('service:-document', options.document, { instantiate: false });

      this._super(registry, options);
    }
  });

  /**
    A list of boot-time configuration options for customizing the behavior of
    an `Ember.ApplicationInstance`.
  
    This is an interface class that exists purely to document the available
    options; you do not need to construct it manually. Simply pass a regular
    JavaScript object containing the desired options into methods that require
    one of these options object:
  
    ```javascript
    MyApp.visit("/", { location: "none", rootElement: "#container" });
    ```
  
    Not all combinations of the supported options are valid. See the documentation
    on `Ember.Application#visit` for the supported configurations.
  
    Internal, experimental or otherwise unstable flags are marked as private.
  
    @class BootOptions
    @namespace ApplicationInstance
    @public
  */
  BootOptions = function BootOptions() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    /**
      Provide a specific instance of jQuery. This is useful in conjunction with
      the `document` option, as it allows you to use a copy of `jQuery` that is
      appropriately bound to the foreign `document` (e.g. a jsdom).
       This is highly experimental and support very incomplete at the moment.
       @property jQuery
      @type Object
      @default auto-detected
      @private
    */
    this.jQuery = _emberViews.jQuery; // This default is overridable below

    /**
      Interactive mode: whether we need to set up event delegation and invoke
      lifecycle callbacks on Components.
       @property isInteractive
      @type boolean
      @default auto-detected
      @private
    */
    this.isInteractive = _emberEnvironment.environment.hasDOM; // This default is overridable below

    /**
      Run in a full browser environment.
       When this flag is set to `false`, it will disable most browser-specific
      and interactive features. Specifically:
       * It does not use `jQuery` to append the root view; the `rootElement`
        (either specified as a subsequent option or on the application itself)
        must already be an `Element` in the given `document` (as opposed to a
        string selector).
       * It does not set up an `EventDispatcher`.
       * It does not run any `Component` lifecycle hooks (such as `didInsertElement`).
       * It sets the `location` option to `"none"`. (If you would like to use
        the location adapter specified in the app's router instead, you can also
        specify `{ location: null }` to specifically opt-out.)
       @property isBrowser
      @type boolean
      @default auto-detected
      @public
    */
    if (options.isBrowser !== undefined) {
      this.isBrowser = !!options.isBrowser;
    } else {
      this.isBrowser = _emberEnvironment.environment.hasDOM;
    }

    if (!this.isBrowser) {
      this.jQuery = null;
      this.isInteractive = false;
      this.location = 'none';
    }

    /**
      Disable rendering completely.
       When this flag is set to `true`, it will disable the entire rendering
      pipeline. Essentially, this puts the app into "routing-only" mode. No
      templates will be rendered, and no Components will be created.
       @property shouldRender
      @type boolean
      @default true
      @public
    */
    if (options.shouldRender !== undefined) {
      this.shouldRender = !!options.shouldRender;
    } else {
      this.shouldRender = true;
    }

    if (!this.shouldRender) {
      this.jQuery = null;
      this.isInteractive = false;
    }

    /**
      If present, render into the given `Document` object instead of the
      global `window.document` object.
       In practice, this is only useful in non-browser environment or in
      non-interactive mode, because Ember's `jQuery` dependency is
      implicitly bound to the current document, causing event delegation
      to not work properly when the app is rendered into a foreign
      document object (such as an iframe's `contentDocument`).
       In non-browser mode, this could be a "`Document`-like" object as
      Ember only interact with a small subset of the DOM API in non-
      interactive mode. While the exact requirements have not yet been
      formalized, the `SimpleDOM` library's implementation is known to
      work.
       @property document
      @type Document
      @default the global `document` object
      @public
    */
    if (options.document) {
      this.document = options.document;
    } else {
      this.document = typeof document !== 'undefined' ? document : null;
    }

    /**
      If present, overrides the application's `rootElement` property on
      the instance. This is useful for testing environment, where you
      might want to append the root view to a fixture area.
       In non-browser mode, because Ember does not have access to jQuery,
      this options must be specified as a DOM `Element` object instead of
      a selector string.
       See the documentation on `Ember.Applications`'s `rootElement` for
      details.
       @property rootElement
      @type String|Element
      @default null
      @public
     */
    if (options.rootElement) {
      this.rootElement = options.rootElement;
    }

    // Set these options last to give the user a chance to override the
    // defaults from the "combo" options like `isBrowser` (although in
    // practice, the resulting combination is probably invalid)

    /**
      If present, overrides the router's `location` property with this
      value. This is useful for environments where trying to modify the
      URL would be inappropriate.
       @property location
      @type string
      @default null
      @public
    */
    if (options.location !== undefined) {
      this.location = options.location;
    }

    if (options.jQuery !== undefined) {
      this.jQuery = options.jQuery;
    }

    if (options.isInteractive !== undefined) {
      this.isInteractive = !!options.isInteractive;
    }
  };

  BootOptions.prototype.toEnvironment = function () {
    var env = (0, _emberUtils.assign)({}, _emberEnvironment.environment);
    // For compatibility with existing code
    env.hasDOM = this.isBrowser;
    env.isInteractive = this.isInteractive;
    env.options = this;
    return env;
  };

  Object.defineProperty(ApplicationInstance.prototype, 'registry', {
    configurable: true,
    enumerable: false,
    get: function () {
      return (0, _emberRuntime.buildFakeRegistryWithDeprecations)(this, 'ApplicationInstance');
    }
  });

  exports.default = ApplicationInstance;
});
enifed('ember-application/system/application', ['exports', 'ember-babel', 'ember-utils', 'ember-environment', 'ember-debug', 'ember-metal', 'ember-runtime', 'ember-views', 'ember-routing', 'ember-application/system/application-instance', 'container', 'ember-application/system/engine', 'ember-glimmer', 'ember/features'], function (exports, _emberBabel, _emberUtils, _emberEnvironment, _emberDebug, _emberMetal, _emberRuntime, _emberViews, _emberRouting, _applicationInstance, _container, _engine, _emberGlimmer, _features) {
  'use strict';

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['-bucket-cache:main'], ['-bucket-cache:main']);

  var librariesRegistered = false;

  /**
    An instance of `Ember.Application` is the starting point for every Ember
    application. It helps to instantiate, initialize and coordinate the many
    objects that make up your app.
  
    Each Ember app has one and only one `Ember.Application` object. In fact, the
    very first thing you should do in your application is create the instance:
  
    ```javascript
    window.App = Ember.Application.create();
    ```
  
    Typically, the application object is the only global variable. All other
    classes in your app should be properties on the `Ember.Application` instance,
    which highlights its first role: a global namespace.
  
    For example, if you define a view class, it might look like this:
  
    ```javascript
    App.MyView = Ember.View.extend();
    ```
  
    By default, calling `Ember.Application.create()` will automatically initialize
    your application by calling the `Ember.Application.initialize()` method. If
    you need to delay initialization, you can call your app's `deferReadiness()`
    method. When you are ready for your app to be initialized, call its
    `advanceReadiness()` method.
  
    You can define a `ready` method on the `Ember.Application` instance, which
    will be run by Ember when the application is initialized.
  
    Because `Ember.Application` inherits from `Ember.Namespace`, any classes
    you create will have useful string representations when calling `toString()`.
    See the `Ember.Namespace` documentation for more information.
  
    While you can think of your `Ember.Application` as a container that holds the
    other classes in your application, there are several other responsibilities
    going on under-the-hood that you may want to understand.
  
    ### Event Delegation
  
    Ember uses a technique called _event delegation_. This allows the framework
    to set up a global, shared event listener instead of requiring each view to
    do it manually. For example, instead of each view registering its own
    `mousedown` listener on its associated element, Ember sets up a `mousedown`
    listener on the `body`.
  
    If a `mousedown` event occurs, Ember will look at the target of the event and
    start walking up the DOM node tree, finding corresponding views and invoking
    their `mouseDown` method as it goes.
  
    `Ember.Application` has a number of default events that it listens for, as
    well as a mapping from lowercase events to camel-cased view method names. For
    example, the `keypress` event causes the `keyPress` method on the view to be
    called, the `dblclick` event causes `doubleClick` to be called, and so on.
  
    If there is a bubbling browser event that Ember does not listen for by
    default, you can specify custom events and their corresponding view method
    names by setting the application's `customEvents` property:
  
    ```javascript
    let App = Ember.Application.create({
      customEvents: {
        // add support for the paste event
        paste: 'paste'
      }
    });
    ```
  
    To prevent Ember from setting up a listener for a default event,
    specify the event name with a `null` value in the `customEvents`
    property:
  
    ```javascript
    let App = Ember.Application.create({
      customEvents: {
        // prevent listeners for mouseenter/mouseleave events
        mouseenter: null,
        mouseleave: null
      }
    });
    ```
  
    By default, the application sets up these event listeners on the document
    body. However, in cases where you are embedding an Ember application inside
    an existing page, you may want it to set up the listeners on an element
    inside the body.
  
    For example, if only events inside a DOM element with the ID of `ember-app`
    should be delegated, set your application's `rootElement` property:
  
    ```javascript
    let App = Ember.Application.create({
      rootElement: '#ember-app'
    });
    ```
  
    The `rootElement` can be either a DOM element or a jQuery-compatible selector
    string. Note that *views appended to the DOM outside the root element will
    not receive events.* If you specify a custom root element, make sure you only
    append views inside it!
  
    To learn more about the events Ember components use, see
    [components/handling-events](https://guides.emberjs.com/v2.6.0/components/handling-events/#toc_event-names).
  
    ### Initializers
  
    Libraries on top of Ember can add initializers, like so:
  
    ```javascript
    Ember.Application.initializer({
      name: 'api-adapter',
  
      initialize: function(application) {
        application.register('api-adapter:main', ApiAdapter);
      }
    });
    ```
  
    Initializers provide an opportunity to access the internal registry, which
    organizes the different components of an Ember application. Additionally
    they provide a chance to access the instantiated application. Beyond
    being used for libraries, initializers are also a great way to organize
    dependency injection or setup in your own application.
  
    ### Routing
  
    In addition to creating your application's router, `Ember.Application` is
    also responsible for telling the router when to start routing. Transitions
    between routes can be logged with the `LOG_TRANSITIONS` flag, and more
    detailed intra-transition logging can be logged with
    the `LOG_TRANSITIONS_INTERNAL` flag:
  
    ```javascript
    let App = Ember.Application.create({
      LOG_TRANSITIONS: true, // basic logging of successful transitions
      LOG_TRANSITIONS_INTERNAL: true // detailed logging of all routing steps
    });
    ```
  
    By default, the router will begin trying to translate the current URL into
    application state once the browser emits the `DOMContentReady` event. If you
    need to defer routing, you can call the application's `deferReadiness()`
    method. Once routing can begin, call the `advanceReadiness()` method.
  
    If there is any setup required before routing begins, you can implement a
    `ready()` method on your app that will be invoked immediately before routing
    begins.
  
    @class Application
    @extends Engine
    @uses RegistryProxyMixin
    @public
  */

  var Application = _engine.default.extend({
    /**
      The root DOM element of the Application. This can be specified as an
      element or a
      [jQuery-compatible selector string](http://api.jquery.com/category/selectors/).
       This is the element that will be passed to the Application's,
      `eventDispatcher`, which sets up the listeners for event delegation. Every
      view in your application should be a child of the element you specify here.
       @property rootElement
      @type DOMElement
      @default 'body'
      @public
    */
    rootElement: 'body',

    /**
      The `Ember.EventDispatcher` responsible for delegating events to this
      application's views.
       The event dispatcher is created by the application at initialization time
      and sets up event listeners on the DOM element described by the
      application's `rootElement` property.
       See the documentation for `Ember.EventDispatcher` for more information.
       @property eventDispatcher
      @type Ember.EventDispatcher
      @default null
      @public
    */
    eventDispatcher: null,

    /**
      The DOM events for which the event dispatcher should listen.
       By default, the application's `Ember.EventDispatcher` listens
      for a set of standard DOM events, such as `mousedown` and
      `keyup`, and delegates them to your application's `Ember.View`
      instances.
       If you would like additional bubbling events to be delegated to your
      views, set your `Ember.Application`'s `customEvents` property
      to a hash containing the DOM event name as the key and the
      corresponding view method name as the value. Setting an event to
      a value of `null` will prevent a default event listener from being
      added for that event.
       To add new events to be listened to:
       ```javascript
      let App = Ember.Application.create({
        customEvents: {
          // add support for the paste event
          paste: 'paste'
        }
      });
      ```
       To prevent default events from being listened to:
       ```javascript
      let App = Ember.Application.create({
        customEvents: {
          // remove support for mouseenter / mouseleave events
          mouseenter: null,
          mouseleave: null
        }
      });
      ```
      @property customEvents
      @type Object
      @default null
      @public
    */
    customEvents: null,

    /**
      Whether the application should automatically start routing and render
      templates to the `rootElement` on DOM ready. While default by true,
      other environments such as FastBoot or a testing harness can set this
      property to `false` and control the precise timing and behavior of the boot
      process.
       @property autoboot
      @type Boolean
      @default true
      @private
    */
    autoboot: true,

    /**
      Whether the application should be configured for the legacy "globals mode".
      Under this mode, the Application object serves as a global namespace for all
      classes.
       ```javascript
      let App = Ember.Application.create({
        ...
      });
       App.Router.reopen({
        location: 'none'
      });
       App.Router.map({
        ...
      });
       App.MyComponent = Ember.Component.extend({
        ...
      });
      ```
       This flag also exposes other internal APIs that assumes the existence of
      a special "default instance", like `App.__container__.lookup(...)`.
       This option is currently not configurable, its value is derived from
      the `autoboot` flag – disabling `autoboot` also implies opting-out of
      globals mode support, although they are ultimately orthogonal concerns.
       Some of the global modes features are already deprecated in 1.x. The
      existence of this flag is to untangle the globals mode code paths from
      the autoboot code paths, so that these legacy features can be reviewed
      for deprecation/removal separately.
       Forcing the (autoboot=true, _globalsMode=false) here and running the tests
      would reveal all the places where we are still relying on these legacy
      behavior internally (mostly just tests).
       @property _globalsMode
      @type Boolean
      @default true
      @private
    */
    _globalsMode: true,

    init: function (options) {
      this._super.apply(this, arguments);

      if (!this.$) {
        this.$ = _emberViews.jQuery;
      }

      registerLibraries();

      if (true) {
        logLibraryVersions();
      }

      // Start off the number of deferrals at 1. This will be decremented by
      // the Application's own `boot` method.
      this._readinessDeferrals = 1;
      this._booted = false;

      this.autoboot = this._globalsMode = !!this.autoboot;

      if (this._globalsMode) {
        this._prepareForGlobalsMode();
      }

      if (this.autoboot) {
        this.waitForDOMReady();
      }
    },
    buildInstance: function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      options.base = this;
      options.application = this;
      return _applicationInstance.default.create(options);
    },
    _prepareForGlobalsMode: function () {
      // Create subclass of Ember.Router for this Application instance.
      // This is to ensure that someone reopening `App.Router` does not
      // tamper with the default `Ember.Router`.
      this.Router = (this.Router || _emberRouting.Router).extend();

      this._buildDeprecatedInstance();
    },
    _buildDeprecatedInstance: function () {
      // Build a default instance
      var instance = this.buildInstance();

      // Legacy support for App.__container__ and other global methods
      // on App that rely on a single, default instance.
      this.__deprecatedInstance__ = instance;
      this.__container__ = instance.__container__;
    },
    waitForDOMReady: function () {
      if (!this.$ || this.$.isReady) {
        _emberMetal.run.schedule('actions', this, 'domReady');
      } else {
        this.$().ready(_emberMetal.run.bind(this, 'domReady'));
      }
    },
    domReady: function () {
      if (this.isDestroyed) {
        return;
      }

      this._bootSync();

      // Continues to `didBecomeReady`
    },
    deferReadiness: function () {
      (true && !(this instanceof Application) && (0, _emberDebug.assert)('You must call deferReadiness on an instance of Ember.Application', this instanceof Application));
      (true && !(this._readinessDeferrals > 0) && (0, _emberDebug.assert)('You cannot defer readiness since the `ready()` hook has already been called.', this._readinessDeferrals > 0));

      this._readinessDeferrals++;
    },
    advanceReadiness: function () {
      (true && !(this instanceof Application) && (0, _emberDebug.assert)('You must call advanceReadiness on an instance of Ember.Application', this instanceof Application));

      this._readinessDeferrals--;

      if (this._readinessDeferrals === 0) {
        _emberMetal.run.once(this, this.didBecomeReady);
      }
    },
    boot: function () {
      if (this._bootPromise) {
        return this._bootPromise;
      }

      try {
        this._bootSync();
      } catch (_) {
        // Ignore th error: in the asynchronous boot path, the error is already reflected
        // in the promise rejection
      }

      return this._bootPromise;
    },
    _bootSync: function () {
      if (this._booted) {
        return;
      }

      // Even though this returns synchronously, we still need to make sure the
      // boot promise exists for book-keeping purposes: if anything went wrong in
      // the boot process, we need to store the error as a rejection on the boot
      // promise so that a future caller of `boot()` can tell what failed.
      var defer = this._bootResolver = new _emberRuntime.RSVP.defer();
      this._bootPromise = defer.promise;

      try {
        this.runInitializers();
        (0, _emberRuntime.runLoadHooks)('application', this);
        this.advanceReadiness();
        // Continues to `didBecomeReady`
      } catch (error) {
        // For the asynchronous boot path
        defer.reject(error);

        // For the synchronous boot path
        throw error;
      }
    },
    reset: function () {
      (true && !(this._globalsMode && this.autoboot) && (0, _emberDebug.assert)('Calling reset() on instances of `Ember.Application` is not\n            supported when globals mode is disabled; call `visit()` to\n            create new `Ember.ApplicationInstance`s and dispose them\n            via their `destroy()` method instead.', this._globalsMode && this.autoboot));


      var instance = this.__deprecatedInstance__;

      this._readinessDeferrals = 1;
      this._bootPromise = null;
      this._bootResolver = null;
      this._booted = false;

      function handleReset() {
        (0, _emberMetal.run)(instance, 'destroy');
        this._buildDeprecatedInstance();
        _emberMetal.run.schedule('actions', this, '_bootSync');
      }

      _emberMetal.run.join(this, handleReset);
    },
    didBecomeReady: function () {
      try {
        // TODO: Is this still needed for _globalsMode = false?
        if (!(0, _emberDebug.isTesting)()) {
          // Eagerly name all classes that are already loaded
          _emberRuntime.Namespace.processAll();
          (0, _emberRuntime.setNamespaceSearchDisabled)(true);
        }

        // See documentation on `_autoboot()` for details
        if (this.autoboot) {
          var instance = void 0;

          if (this._globalsMode) {
            // If we already have the __deprecatedInstance__ lying around, boot it to
            // avoid unnecessary work
            instance = this.__deprecatedInstance__;
          } else {
            // Otherwise, build an instance and boot it. This is currently unreachable,
            // because we forced _globalsMode to === autoboot; but having this branch
            // allows us to locally toggle that flag for weeding out legacy globals mode
            // dependencies independently
            instance = this.buildInstance();
          }

          instance._bootSync();

          // TODO: App.ready() is not called when autoboot is disabled, is this correct?
          this.ready();

          instance.startRouting();
        }

        // For the asynchronous boot path
        this._bootResolver.resolve(this);

        // For the synchronous boot path
        this._booted = true;
      } catch (error) {
        // For the asynchronous boot path
        this._bootResolver.reject(error);

        // For the synchronous boot path
        throw error;
      }
    },
    ready: function () {
      return this;
    },
    willDestroy: function () {
      this._super.apply(this, arguments);
      (0, _emberRuntime.setNamespaceSearchDisabled)(false);
      this._booted = false;
      this._bootPromise = null;
      this._bootResolver = null;

      if (_emberRuntime._loaded.application === this) {
        _emberRuntime._loaded.application = undefined;
      }

      if (this._globalsMode && this.__deprecatedInstance__) {
        this.__deprecatedInstance__.destroy();
      }
    },
    visit: function (url, options) {
      var _this = this;

      return this.boot().then(function () {
        var instance = _this.buildInstance();

        return instance.boot(options).then(function () {
          return instance.visit(url);
        }).catch(function (error) {
          (0, _emberMetal.run)(instance, 'destroy');
          throw error;
        });
      });
    }
  });

  Object.defineProperty(Application.prototype, 'registry', {
    configurable: true,
    enumerable: false,
    get: function () {
      return (0, _emberRuntime.buildFakeRegistryWithDeprecations)(this, 'Application');
    }
  });

  Application.reopenClass({
    buildRegistry: function (application) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var registry = this._super.apply(this, arguments);

      commonSetupRegistry(registry);

      (0, _emberGlimmer.setupApplicationRegistry)(registry);

      return registry;
    }
  });

  function commonSetupRegistry(registry) {
    registry.register('router:main', _emberRouting.Router.extend());
    registry.register('-view-registry:main', {
      create: function () {
        return (0, _emberUtils.dictionary)(null);
      }
    });

    registry.register('route:basic', _emberRouting.Route);
    registry.register('event_dispatcher:main', _emberViews.EventDispatcher);

    registry.injection('router:main', 'namespace', 'application:main');

    registry.register('location:auto', _emberRouting.AutoLocation);
    registry.register('location:hash', _emberRouting.HashLocation);
    registry.register('location:history', _emberRouting.HistoryLocation);
    registry.register('location:none', _emberRouting.NoneLocation);

    registry.register((0, _container.privatize)(_templateObject), _emberRouting.BucketCache);

    if (_features.EMBER_ROUTING_ROUTER_SERVICE) {
      registry.register('service:router', _emberRouting.RouterService);
      registry.injection('service:router', '_router', 'router:main');
    }
  }

  function registerLibraries() {
    if (!librariesRegistered) {
      librariesRegistered = true;

      if (_emberEnvironment.environment.hasDOM && typeof _emberViews.jQuery === 'function') {
        _emberMetal.libraries.registerCoreLibrary('jQuery', (0, _emberViews.jQuery)().jquery);
      }
    }
  }

  function logLibraryVersions() {
    if (true) {
      if (_emberEnvironment.ENV.LOG_VERSION) {
        // we only need to see this once per Application#init
        _emberEnvironment.ENV.LOG_VERSION = false;
        var libs = _emberMetal.libraries._registry;

        var nameLengths = libs.map(function (item) {
          return (0, _emberMetal.get)(item, 'name.length');
        });

        var maxNameLength = Math.max.apply(this, nameLengths);

        (0, _emberDebug.debug)('-------------------------------');
        for (var i = 0; i < libs.length; i++) {
          var lib = libs[i];
          var spaces = new Array(maxNameLength - lib.name.length + 1).join(' ');
          (0, _emberDebug.debug)([lib.name, spaces, ' : ', lib.version].join(''));
        }
        (0, _emberDebug.debug)('-------------------------------');
      }
    }
  }

  exports.default = Application;
});
enifed('ember-application/system/engine-instance', ['exports', 'ember-babel', 'ember-utils', 'ember-runtime', 'ember-debug', 'ember-metal', 'container', 'ember-application/system/engine-parent'], function (exports, _emberBabel, _emberUtils, _emberRuntime, _emberDebug, _emberMetal, _container, _engineParent) {
  'use strict';

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['-bucket-cache:main'], ['-bucket-cache:main']);

  /**
    The `EngineInstance` encapsulates all of the stateful aspects of a
    running `Engine`.
  
    @public
    @class EngineInstance
    @extends EmberObject
    @uses RegistryProxyMixin
    @uses ContainerProxyMixin
  */

  var EngineInstance = _emberRuntime.Object.extend(_emberRuntime.RegistryProxyMixin, _emberRuntime.ContainerProxyMixin, {
    /**
      The base `Engine` for which this is an instance.
       @property {Ember.Engine} engine
      @private
    */
    base: null,

    init: function () {
      this._super.apply(this, arguments);

      (0, _emberUtils.guidFor)(this);

      var base = this.base;

      if (!base) {
        base = this.application;
        this.base = base;
      }

      // Create a per-instance registry that will use the application's registry
      // as a fallback for resolving registrations.
      var registry = this.__registry__ = new _container.Registry({
        fallback: base.__registry__
      });

      // Create a per-instance container from the instance's registry
      this.__container__ = registry.container({ owner: this });

      this._booted = false;
    },
    boot: function (options) {
      var _this = this;

      if (this._bootPromise) {
        return this._bootPromise;
      }

      this._bootPromise = new _emberRuntime.RSVP.Promise(function (resolve) {
        return resolve(_this._bootSync(options));
      });

      return this._bootPromise;
    },
    _bootSync: function (options) {
      if (this._booted) {
        return this;
      }

      (true && !((0, _engineParent.getEngineParent)(this)) && (0, _emberDebug.assert)('An engine instance\'s parent must be set via `setEngineParent(engine, parent)` prior to calling `engine.boot()`.', (0, _engineParent.getEngineParent)(this)));


      this.cloneParentDependencies();

      this.setupRegistry(options);

      this.base.runInstanceInitializers(this);

      this._booted = true;

      return this;
    },
    setupRegistry: function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.__container__.lookup('-environment:main');

      this.constructor.setupRegistry(this.__registry__, options);
    },
    unregister: function (fullName) {
      this.__container__.reset(fullName);
      this._super.apply(this, arguments);
    },
    buildChildEngineInstance: function (name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var Engine = this.lookup('engine:' + name);

      if (!Engine) {
        throw new _emberDebug.Error('You attempted to mount the engine \'' + name + '\', but it is not registered with its parent.');
      }

      var engineInstance = Engine.buildInstance(options);

      (0, _engineParent.setEngineParent)(engineInstance, this);

      return engineInstance;
    },
    cloneParentDependencies: function () {
      var _this2 = this;

      var parent = (0, _engineParent.getEngineParent)(this);

      var registrations = ['route:basic', 'service:-routing', 'service:-glimmer-environment'];

      registrations.forEach(function (key) {
        return _this2.register(key, parent.resolveRegistration(key));
      });

      var env = parent.lookup('-environment:main');
      this.register('-environment:main', env, { instantiate: false });

      var singletons = ['router:main', (0, _container.privatize)(_templateObject), '-view-registry:main', 'renderer:-' + (env.isInteractive ? 'dom' : 'inert'), 'service:-document'];

      if (env.isInteractive) {
        singletons.push('event_dispatcher:main');
      }

      singletons.forEach(function (key) {
        return _this2.register(key, parent.lookup(key), { instantiate: false });
      });

      this.inject('view', '_environment', '-environment:main');
      this.inject('route', '_environment', '-environment:main');
    }
  });

  EngineInstance.reopenClass({
    setupRegistry: function (registry, options) {
      // when no options/environment is present, do nothing
      if (!options) {
        return;
      }

      registry.injection('view', '_environment', '-environment:main');
      registry.injection('route', '_environment', '-environment:main');

      if (options.isInteractive) {
        registry.injection('view', 'renderer', 'renderer:-dom');
        registry.injection('component', 'renderer', 'renderer:-dom');
      } else {
        registry.injection('view', 'renderer', 'renderer:-inert');
        registry.injection('component', 'renderer', 'renderer:-inert');
      }
    }
  });

  exports.default = EngineInstance;
});
enifed('ember-application/system/engine-parent', ['exports', 'ember-utils'], function (exports, _emberUtils) {
  'use strict';

  exports.ENGINE_PARENT = undefined;
  exports.getEngineParent = getEngineParent;
  exports.setEngineParent = setEngineParent;
  var ENGINE_PARENT = exports.ENGINE_PARENT = (0, _emberUtils.symbol)('ENGINE_PARENT');

  /**
    `getEngineParent` retrieves an engine instance's parent instance.
  
    @method getEngineParent
    @param {EngineInstance} engine An engine instance.
    @return {EngineInstance} The parent engine instance.
    @for @ember/engine
    @static
    @private
  */
  function getEngineParent(engine) {
    return engine[ENGINE_PARENT];
  }

  /**
    `setEngineParent` sets an engine instance's parent instance.
  
    @method setEngineParent
    @param {EngineInstance} engine An engine instance.
    @param {EngineInstance} parent The parent engine instance.
    @private
  */
  function setEngineParent(engine, parent) {
    engine[ENGINE_PARENT] = parent;
  }
});
enifed('ember-application/system/engine', ['exports', 'ember-babel', 'ember-utils', 'ember-runtime', 'container', 'dag-map', 'ember-debug', 'ember-metal', 'ember-application/system/resolver', 'ember-application/system/engine-instance', 'ember-routing', 'ember-extension-support', 'ember-views', 'ember-glimmer'], function (exports, _emberBabel, _emberUtils, _emberRuntime, _container, _dagMap, _emberDebug, _emberMetal, _resolver, _engineInstance, _emberRouting, _emberExtensionSupport, _emberViews, _emberGlimmer) {
  'use strict';

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['-bucket-cache:main'], ['-bucket-cache:main']);

  function props(obj) {
    var properties = [];

    for (var key in obj) {
      properties.push(key);
    }

    return properties;
  }

  /**
    The `Engine` class contains core functionality for both applications and
    engines.
  
    Each engine manages a registry that's used for dependency injection and
    exposed through `RegistryProxy`.
  
    Engines also manage initializers and instance initializers.
  
    Engines can spawn `EngineInstance` instances via `buildInstance()`.
  
    @class Engine
    @extends Ember.Namespace
    @uses RegistryProxy
    @public
  */
  var Engine = _emberRuntime.Namespace.extend(_emberRuntime.RegistryProxyMixin, {
    init: function () {
      this._super.apply(this, arguments);

      this.buildRegistry();
    },


    /**
      A private flag indicating whether an engine's initializers have run yet.
       @private
      @property _initializersRan
    */
    _initializersRan: false,

    ensureInitializers: function () {
      if (!this._initializersRan) {
        this.runInitializers();
        this._initializersRan = true;
      }
    },
    buildInstance: function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.ensureInitializers();
      options.base = this;
      return _engineInstance.default.create(options);
    },
    buildRegistry: function () {
      var registry = this.__registry__ = this.constructor.buildRegistry(this);

      return registry;
    },
    initializer: function (options) {
      this.constructor.initializer(options);
    },
    instanceInitializer: function (options) {
      this.constructor.instanceInitializer(options);
    },
    runInitializers: function () {
      var _this = this;

      this._runInitializer('initializers', function (name, initializer) {
        (true && !(!!initializer) && (0, _emberDebug.assert)('No application initializer named \'' + name + '\'', !!initializer));

        if (initializer.initialize.length === 2) {
          (true && !(false) && (0, _emberDebug.deprecate)('The `initialize` method for Application initializer \'' + name + '\' should take only one argument - `App`, an instance of an `Application`.', false, {
            id: 'ember-application.app-initializer-initialize-arguments',
            until: '3.0.0',
            url: 'https://emberjs.com/deprecations/v2.x/#toc_initializer-arity'
          }));


          initializer.initialize(_this.__registry__, _this);
        } else {
          initializer.initialize(_this);
        }
      });
    },
    runInstanceInitializers: function (instance) {
      this._runInitializer('instanceInitializers', function (name, initializer) {
        (true && !(!!initializer) && (0, _emberDebug.assert)('No instance initializer named \'' + name + '\'', !!initializer));

        initializer.initialize(instance);
      });
    },
    _runInitializer: function (bucketName, cb) {
      var initializersByName = (0, _emberMetal.get)(this.constructor, bucketName);
      var initializers = props(initializersByName);
      var graph = new _dagMap.default();
      var initializer = void 0;

      for (var i = 0; i < initializers.length; i++) {
        initializer = initializersByName[initializers[i]];
        graph.add(initializer.name, initializer, initializer.before, initializer.after);
      }

      graph.topsort(cb);
    }
  });

  Engine.reopenClass({
    initializers: Object.create(null),
    instanceInitializers: Object.create(null),

    /**
      The goal of initializers should be to register dependencies and injections.
      This phase runs once. Because these initializers may load code, they are
      allowed to defer application readiness and advance it. If you need to access
      the container or store you should use an InstanceInitializer that will be run
      after all initializers and therefore after all code is loaded and the app is
      ready.
       Initializer receives an object which has the following attributes:
      `name`, `before`, `after`, `initialize`. The only required attribute is
      `initialize`, all others are optional.
       * `name` allows you to specify under which name the initializer is registered.
      This must be a unique name, as trying to register two initializers with the
      same name will result in an error.
       ```app/initializer/named-initializer.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('Running namedInitializer!');
      }
       export default {
        name: 'named-initializer',
        initialize
      };
      ```
       * `before` and `after` are used to ensure that this initializer is ran prior
      or after the one identified by the value. This value can be a single string
      or an array of strings, referencing the `name` of other initializers.
       An example of ordering initializers, we create an initializer named `first`:
       ```app/initializer/first.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('First initializer!');
      }
       export default {
        name: 'first',
        initialize
      };
      ```
       ```bash
      // DEBUG: First initializer!
      ```
       We add another initializer named `second`, specifying that it should run
      after the initializer named `first`:
       ```app/initializer/second.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('Second initializer!');
      }
       export default {
        name: 'second',
        after: 'first',
        initialize
      };
      ```
       ```
      // DEBUG: First initializer!
      // DEBUG: Second initializer!
      ```
       Afterwards we add a further initializer named `pre`, this time specifying
      that it should run before the initializer named `first`:
       ```app/initializer/pre.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('Pre initializer!');
      }
       export default {
        name: 'pre',
        before: 'first',
        initialize
      };
      ```
       ```bash
      // DEBUG: Pre initializer!
      // DEBUG: First initializer!
      // DEBUG: Second initializer!
      ```
       Finally we add an initializer named `post`, specifying it should run after
      both the `first` and the `second` initializers:
       ```app/initializer/post.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('Post initializer!');
      }
       export default {
        name: 'post',
        after: ['first', 'second'],
        initialize
      };
      ```
       ```bash
      // DEBUG: Pre initializer!
      // DEBUG: First initializer!
      // DEBUG: Second initializer!
      // DEBUG: Post initializer!
      ```
       * `initialize` is a callback function that receives one argument,
        `application`, on which you can operate.
       Example of using `application` to register an adapter:
       ```app/initializer/api-adapter.js
      import ApiAdapter from '../utils/api-adapter';
       export function initialize(application) {
        application.register('api-adapter:main', ApiAdapter);
      }
       export default {
        name: 'post',
        after: ['first', 'second'],
        initialize
      };
      ```
       @method initializer
      @param initializer {Object}
      @public
    */

    initializer: buildInitializerMethod('initializers', 'initializer'),

    /**
      Instance initializers run after all initializers have run. Because
      instance initializers run after the app is fully set up. We have access
      to the store, container, and other items. However, these initializers run
      after code has loaded and are not allowed to defer readiness.
       Instance initializer receives an object which has the following attributes:
      `name`, `before`, `after`, `initialize`. The only required attribute is
      `initialize`, all others are optional.
       * `name` allows you to specify under which name the instanceInitializer is
      registered. This must be a unique name, as trying to register two
      instanceInitializer with the same name will result in an error.
       ```app/initializer/named-instance-initializer.js
      import { debug } from '@ember/debug';
       export function initialize() {
        debug('Running named-instance-initializer!');
      }
       export default {
        name: 'named-instance-initializer',
        initialize
      };
      ```
       * `before` and `after` are used to ensure that this initializer is ran prior
      or after the one identified by the value. This value can be a single string
      or an array of strings, referencing the `name` of other initializers.
       * See Ember.Application.initializer for discussion on the usage of before
      and after.
       Example instanceInitializer to preload data into the store.
       ```app/initializer/preload-data.js
      import $ from 'jquery';
       export function initialize(application) {
          var userConfig, userConfigEncoded, store;
          // We have a HTML escaped JSON representation of the user's basic
          // configuration generated server side and stored in the DOM of the main
          // index.html file. This allows the app to have access to a set of data
          // without making any additional remote calls. Good for basic data that is
          // needed for immediate rendering of the page. Keep in mind, this data,
          // like all local models and data can be manipulated by the user, so it
          // should not be relied upon for security or authorization.
           // Grab the encoded data from the meta tag
          userConfigEncoded = $('head meta[name=app-user-config]').attr('content');
           // Unescape the text, then parse the resulting JSON into a real object
          userConfig = JSON.parse(unescape(userConfigEncoded));
           // Lookup the store
          store = application.lookup('service:store');
           // Push the encoded JSON into the store
          store.pushPayload(userConfig);
      }
       export default {
        name: 'named-instance-initializer',
        initialize
      };
      ```
       @method instanceInitializer
      @param instanceInitializer
      @public
    */
    instanceInitializer: buildInitializerMethod('instanceInitializers', 'instance initializer'),

    buildRegistry: function (namespace) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var registry = new _container.Registry({
        resolver: resolverFor(namespace)
      });

      registry.set = _emberMetal.set;

      registry.register('application:main', namespace, { instantiate: false });

      commonSetupRegistry(registry);
      (0, _emberGlimmer.setupEngineRegistry)(registry);

      return registry;
    },


    /**
      Set this to provide an alternate class to `Ember.DefaultResolver`
       @deprecated Use 'Resolver' instead
      @property resolver
      @public
    */
    resolver: null,

    /**
      Set this to provide an alternate class to `Ember.DefaultResolver`
       @property resolver
      @public
    */
    Resolver: null
  });

  /**
    This function defines the default lookup rules for container lookups:
  
    * templates are looked up on `Ember.TEMPLATES`
    * other names are looked up on the application after classifying the name.
      For example, `controller:post` looks up `App.PostController` by default.
    * if the default lookup fails, look for registered classes on the container
  
    This allows the application to register default injections in the container
    that could be overridden by the normal naming convention.
  
    @private
    @method resolverFor
    @param {Ember.Namespace} namespace the namespace to look for classes
    @return {*} the resolved value for a given lookup
  */
  function resolverFor(namespace) {
    var ResolverClass = namespace.get('Resolver') || _resolver.default;

    return ResolverClass.create({
      namespace: namespace
    });
  }

  function buildInitializerMethod(bucketName, humanName) {
    return function (initializer) {
      // If this is the first initializer being added to a subclass, we are going to reopen the class
      // to make sure we have a new `initializers` object, which extends from the parent class' using
      // prototypal inheritance. Without this, attempting to add initializers to the subclass would
      // pollute the parent class as well as other subclasses.
      if (this.superclass[bucketName] !== undefined && this.superclass[bucketName] === this[bucketName]) {
        var attrs = {};
        attrs[bucketName] = Object.create(this[bucketName]);
        this.reopenClass(attrs);
      }

      (true && !(!this[bucketName][initializer.name]) && (0, _emberDebug.assert)('The ' + humanName + ' \'' + initializer.name + '\' has already been registered', !this[bucketName][initializer.name]));
      (true && !((0, _emberUtils.canInvoke)(initializer, 'initialize')) && (0, _emberDebug.assert)('An ' + humanName + ' cannot be registered without an initialize function', (0, _emberUtils.canInvoke)(initializer, 'initialize')));
      (true && !(initializer.name !== undefined) && (0, _emberDebug.assert)('An ' + humanName + ' cannot be registered without a name property', initializer.name !== undefined));


      this[bucketName][initializer.name] = initializer;
    };
  }

  function commonSetupRegistry(registry) {
    registry.optionsForType('component', { singleton: false });
    registry.optionsForType('view', { singleton: false });

    registry.register('controller:basic', _emberRuntime.Controller, { instantiate: false });

    registry.injection('view', '_viewRegistry', '-view-registry:main');
    registry.injection('renderer', '_viewRegistry', '-view-registry:main');
    registry.injection('event_dispatcher:main', '_viewRegistry', '-view-registry:main');

    registry.injection('route', '_topLevelViewTemplate', 'template:-outlet');

    registry.injection('view:-outlet', 'namespace', 'application:main');

    registry.injection('controller', 'target', 'router:main');
    registry.injection('controller', 'namespace', 'application:main');

    registry.injection('router', '_bucketCache', (0, _container.privatize)(_templateObject));
    registry.injection('route', '_bucketCache', (0, _container.privatize)(_templateObject));

    registry.injection('route', 'router', 'router:main');

    // Register the routing service...
    registry.register('service:-routing', _emberRouting.RoutingService);
    // Then inject the app router into it
    registry.injection('service:-routing', 'router', 'router:main');

    // DEBUGGING
    registry.register('resolver-for-debugging:main', registry.resolver, { instantiate: false });
    registry.injection('container-debug-adapter:main', 'resolver', 'resolver-for-debugging:main');
    registry.injection('data-adapter:main', 'containerDebugAdapter', 'container-debug-adapter:main');
    // Custom resolver authors may want to register their own ContainerDebugAdapter with this key

    registry.register('container-debug-adapter:main', _emberExtensionSupport.ContainerDebugAdapter);

    registry.register('component-lookup:main', _emberViews.ComponentLookup);
  }

  exports.default = Engine;
});
enifed('ember-application/system/resolver', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-runtime', 'ember-application/utils/validate-type', 'ember-glimmer'], function (exports, _emberUtils, _emberMetal, _emberDebug, _emberRuntime, _validateType, _emberGlimmer) {
  'use strict';

  exports.Resolver = undefined;
  /**
  @module @ember/application
  */

  var Resolver = exports.Resolver = _emberRuntime.Object.extend({
    /*
      This will be set to the Application instance when it is
      created.
       @property namespace
    */
    namespace: null,
    normalize: null, // required
    resolve: null, // required
    parseName: null, // required
    lookupDescription: null, // required
    makeToString: null, // required
    resolveOther: null, // required
    _logLookup: null // required
  });

  /**
    The DefaultResolver defines the default lookup rules to resolve
    container lookups before consulting the container for registered
    items:
  
    * templates are looked up on `Ember.TEMPLATES`
    * other names are looked up on the application after converting
      the name. For example, `controller:post` looks up
      `App.PostController` by default.
    * there are some nuances (see examples below)
  
    ### How Resolving Works
  
    The container calls this object's `resolve` method with the
    `fullName` argument.
  
    It first parses the fullName into an object using `parseName`.
  
    Then it checks for the presence of a type-specific instance
    method of the form `resolve[Type]` and calls it if it exists.
    For example if it was resolving 'template:post', it would call
    the `resolveTemplate` method.
  
    Its last resort is to call the `resolveOther` method.
  
    The methods of this object are designed to be easy to override
    in a subclass. For example, you could enhance how a template
    is resolved like so:
  
    ```app/app.js
    import Application from '@ember/application';
    import GlobalsResolver from '@ember/application/globals-resolver';
  
    App = Application.create({
      Resolver: GlobalsResolver.extend({
        resolveTemplate(parsedName) {
          let resolvedTemplate = this._super(parsedName);
          if (resolvedTemplate) { return resolvedTemplate; }
  
          return Ember.TEMPLATES['not_found'];
        }
      })
    });
    ```
  
    Some examples of how names are resolved:
  
    ```text
    'template:post'           //=> Ember.TEMPLATES['post']
    'template:posts/byline'   //=> Ember.TEMPLATES['posts/byline']
    'template:posts.byline'   //=> Ember.TEMPLATES['posts/byline']
    'template:blogPost'       //=> Ember.TEMPLATES['blog-post']
    'controller:post'         //=> App.PostController
    'controller:posts.index'  //=> App.PostsIndexController
    'controller:blog/post'    //=> Blog.PostController
    'controller:basic'        //=> Controller
    'route:post'              //=> App.PostRoute
    'route:posts.index'       //=> App.PostsIndexRoute
    'route:blog/post'         //=> Blog.PostRoute
    'route:basic'             //=> Route
    'foo:post'                //=> App.PostFoo
    'model:post'              //=> App.Post
    ```
  
    @class GlobalsResolver
    @extends EmberObject
    @public
  */

  exports.default = _emberRuntime.Object.extend({
    /**
      This will be set to the Application instance when it is
      created.
       @property namespace
      @public
    */
    namespace: null,

    init: function () {
      this._parseNameCache = (0, _emberUtils.dictionary)(null);
    },
    normalize: function (fullName) {
      var _fullName$split = fullName.split(':'),
          type = _fullName$split[0],
          name = _fullName$split[1];

      (true && !(fullName.split(':').length === 2) && (0, _emberDebug.assert)('Tried to normalize a container name without a colon (:) in it. ' + 'You probably tried to lookup a name that did not contain a type, ' + 'a colon, and a name. A proper lookup name would be `view:post`.', fullName.split(':').length === 2));


      if (type !== 'template') {
        var result = name.replace(/(\.|_|-)./g, function (m) {
          return m.charAt(1).toUpperCase();
        });

        return type + ':' + result;
      } else {
        return fullName;
      }
    },


    /**
      This method is called via the container's resolver method.
      It parses the provided `fullName` and then looks up and
      returns the appropriate template or class.
       @method resolve
      @param {String} fullName the lookup string
      @return {Object} the resolved factory
      @public
    */
    resolve: function (fullName) {
      var parsedName = this.parseName(fullName);
      var resolveMethodName = parsedName.resolveMethodName;
      var resolved = void 0;

      if (this[resolveMethodName]) {
        resolved = this[resolveMethodName](parsedName);
      }

      resolved = resolved || this.resolveOther(parsedName);

      if (true) {
        if (parsedName.root && parsedName.root.LOG_RESOLVER) {
          this._logLookup(resolved, parsedName);
        }
      }

      if (resolved) {
        (0, _validateType.default)(resolved, parsedName);
      }

      return resolved;
    },


    /**
      Convert the string name of the form 'type:name' to
      a Javascript object with the parsed aspects of the name
      broken out.
       @param {String} fullName the lookup string
      @method parseName
      @protected
    */

    parseName: function (fullName) {
      return this._parseNameCache[fullName] || (this._parseNameCache[fullName] = this._parseName(fullName));
    },
    _parseName: function (fullName) {
      var _fullName$split2 = fullName.split(':'),
          type = _fullName$split2[0],
          fullNameWithoutType = _fullName$split2[1];

      var name = fullNameWithoutType;
      var namespace = (0, _emberMetal.get)(this, 'namespace');
      var root = namespace;
      var lastSlashIndex = name.lastIndexOf('/');
      var dirname = lastSlashIndex !== -1 ? name.slice(0, lastSlashIndex) : null;

      if (type !== 'template' && lastSlashIndex !== -1) {
        var parts = name.split('/');
        name = parts[parts.length - 1];
        var namespaceName = _emberRuntime.String.capitalize(parts.slice(0, -1).join('.'));
        root = _emberRuntime.Namespace.byName(namespaceName);

        (true && !(root) && (0, _emberDebug.assert)('You are looking for a ' + name + ' ' + type + ' in the ' + namespaceName + ' namespace, but the namespace could not be found', root));
      }

      var resolveMethodName = fullNameWithoutType === 'main' ? 'Main' : _emberRuntime.String.classify(type);

      if (!(name && type)) {
        throw new TypeError('Invalid fullName: `' + fullName + '`, must be of the form `type:name` ');
      }

      return {
        fullName: fullName,
        type: type,
        fullNameWithoutType: fullNameWithoutType,
        dirname: dirname,
        name: name,
        root: root,
        resolveMethodName: 'resolve' + resolveMethodName
      };
    },


    /**
      Returns a human-readable description for a fullName. Used by the
      Application namespace in assertions to describe the
      precise name of the class that Ember is looking for, rather than
      container keys.
       @param {String} fullName the lookup string
      @method lookupDescription
      @protected
    */
    lookupDescription: function (fullName) {
      var parsedName = this.parseName(fullName);
      var description = void 0;

      if (parsedName.type === 'template') {
        return 'template at ' + parsedName.fullNameWithoutType.replace(/\./g, '/');
      }

      description = parsedName.root + '.' + _emberRuntime.String.classify(parsedName.name).replace(/\./g, '');

      if (parsedName.type !== 'model') {
        description += _emberRuntime.String.classify(parsedName.type);
      }

      return description;
    },
    makeToString: function (factory, fullName) {
      return factory.toString();
    },


    /**
      Given a parseName object (output from `parseName`), apply
      the conventions expected by `Ember.Router`
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method useRouterNaming
      @protected
    */
    useRouterNaming: function (parsedName) {
      if (parsedName.name === 'basic') {
        parsedName.name = '';
      } else {
        parsedName.name = parsedName.name.replace(/\./g, '_');
      }
    },

    /**
      Look up the template in Ember.TEMPLATES
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveTemplate
      @protected
    */
    resolveTemplate: function (parsedName) {
      var templateName = parsedName.fullNameWithoutType.replace(/\./g, '/');

      return (0, _emberGlimmer.getTemplate)(templateName) || (0, _emberGlimmer.getTemplate)(_emberRuntime.String.decamelize(templateName));
    },


    /**
      Lookup the view using `resolveOther`
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveView
      @protected
    */
    resolveView: function (parsedName) {
      this.useRouterNaming(parsedName);
      return this.resolveOther(parsedName);
    },


    /**
      Lookup the controller using `resolveOther`
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveController
      @protected
    */
    resolveController: function (parsedName) {
      this.useRouterNaming(parsedName);
      return this.resolveOther(parsedName);
    },

    /**
      Lookup the route using `resolveOther`
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveRoute
      @protected
    */
    resolveRoute: function (parsedName) {
      this.useRouterNaming(parsedName);
      return this.resolveOther(parsedName);
    },


    /**
      Lookup the model on the Application namespace
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveModel
      @protected
    */
    resolveModel: function (parsedName) {
      var className = _emberRuntime.String.classify(parsedName.name);
      var factory = (0, _emberMetal.get)(parsedName.root, className);

      return factory;
    },

    /**
      Look up the specified object (from parsedName) on the appropriate
      namespace (usually on the Application)
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveHelper
      @protected
    */
    resolveHelper: function (parsedName) {
      return this.resolveOther(parsedName);
    },

    /**
      Look up the specified object (from parsedName) on the appropriate
      namespace (usually on the Application)
       @param {Object} parsedName a parseName object with the parsed
        fullName lookup string
      @method resolveOther
      @protected
    */
    resolveOther: function (parsedName) {
      var className = _emberRuntime.String.classify(parsedName.name) + _emberRuntime.String.classify(parsedName.type);
      var factory = (0, _emberMetal.get)(parsedName.root, className);
      return factory;
    },
    resolveMain: function (parsedName) {
      var className = _emberRuntime.String.classify(parsedName.type);
      return (0, _emberMetal.get)(parsedName.root, className);
    },


    /**
      @method _logLookup
      @param {Boolean} found
      @param {Object} parsedName
      @private
    */
    _logLookup: function (found, parsedName) {
      var symbol = found ? '[✓]' : '[ ]';

      var padding = void 0;
      if (parsedName.fullName.length > 60) {
        padding = '.';
      } else {
        padding = new Array(60 - parsedName.fullName.length).join('.');
      }

      (0, _emberDebug.info)(symbol, parsedName.fullName, padding, this.lookupDescription(parsedName.fullName));
    },


    /**
      Used to iterate all items of a given type.
       @method knownForType
      @param {String} type the type to search for
      @private
    */
    knownForType: function (type) {
      var namespace = (0, _emberMetal.get)(this, 'namespace');
      var suffix = _emberRuntime.String.classify(type);
      var typeRegexp = new RegExp(suffix + '$');

      var known = (0, _emberUtils.dictionary)(null);
      var knownKeys = Object.keys(namespace);
      for (var index = 0; index < knownKeys.length; index++) {
        var name = knownKeys[index];

        if (typeRegexp.test(name)) {
          var containerName = this.translateToContainerFullname(type, name);

          known[containerName] = true;
        }
      }

      return known;
    },


    /**
      Converts provided name from the backing namespace into a container lookup name.
       Examples:
       * App.FooBarHelper -> helper:foo-bar
      * App.THelper -> helper:t
       @method translateToContainerFullname
      @param {String} type
      @param {String} name
      @private
    */
    translateToContainerFullname: function (type, name) {
      var suffix = _emberRuntime.String.classify(type);
      var namePrefix = name.slice(0, suffix.length * -1);
      var dasherizedName = _emberRuntime.String.dasherize(namePrefix);

      return type + ':' + dasherizedName;
    }
  });
});
enifed('ember-application/utils/validate-type', ['exports', 'ember-debug'], function (exports, _emberDebug) {
  'use strict';

  exports.default = validateType;


  var VALIDATED_TYPES = {
    route: ['assert', 'isRouteFactory', 'Ember.Route'],
    component: ['deprecate', 'isComponentFactory', 'Ember.Component'],
    view: ['deprecate', 'isViewFactory', 'Ember.View'],
    service: ['deprecate', 'isServiceFactory', 'Ember.Service']
  };

  function validateType(resolvedType, parsedName) {
    var validationAttributes = VALIDATED_TYPES[parsedName.type];

    if (!validationAttributes) {
      return;
    }

    var action = validationAttributes[0],
        factoryFlag = validationAttributes[1],
        expectedType = validationAttributes[2];
    (true && !(!!resolvedType[factoryFlag]) && (0, _emberDebug.assert)('Expected ' + parsedName.fullName + ' to resolve to an ' + expectedType + ' but ' + ('instead it was ' + resolvedType + '.'), !!resolvedType[factoryFlag]));
  }
});
enifed('ember-babel', ['exports'], function (exports) {
  'use strict';

  exports.classCallCheck = classCallCheck;
  exports.inherits = inherits;
  exports.taggedTemplateLiteralLoose = taggedTemplateLiteralLoose;
  exports.createClass = createClass;
  exports.defaults = defaults;
  function classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }

  function inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });

    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : defaults(subClass, superClass);
  }

  function taggedTemplateLiteralLoose(strings, raw) {
    strings.raw = raw;
    return strings;
  }

  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function createClass(Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }

  var possibleConstructorReturn = exports.possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError('this hasn\'t been initialized - super() hasn\'t been called');
    }
    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
  };

  var slice = exports.slice = Array.prototype.slice;
});
enifed('ember-console', ['exports', 'ember-environment'], function (exports, _emberEnvironment) {
  'use strict';

  function K() {}

  function consoleMethod(name) {
    var consoleObj = void 0;
    if (_emberEnvironment.context.imports.console) {
      consoleObj = _emberEnvironment.context.imports.console;
    } else if (typeof console !== 'undefined') {
      // eslint-disable-line no-undef
      consoleObj = console; // eslint-disable-line no-undef
    }

    var method = typeof consoleObj === 'object' ? consoleObj[name] : null;

    if (typeof method !== 'function') {
      return;
    }

    if (typeof method.bind === 'function') {
      return method.bind(consoleObj);
    }

    return function () {
      method.apply(consoleObj, arguments);
    };
  }

  function assertPolyfill(test, message) {
    if (!test) {
      try {
        // attempt to preserve the stack
        throw new Error('assertion failed: ' + message);
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }
  }

  /**
    Inside Ember-Metal, simply uses the methods from `imports.console`.
    Override this to provide more robust logging functionality.
  
    @class Logger
    @namespace Ember
    @public
  */
  var index = {
    /**
     Logs the arguments to the console.
     You can pass as many arguments as you want and they will be joined together with a space.
       ```javascript
      var foo = 1;
      Ember.Logger.log('log value of foo:', foo);
      // "log value of foo: 1" will be printed to the console
      ```
      @method log
     @for Ember.Logger
     @param {*} arguments
     @public
    */
    log: consoleMethod('log') || K,

    /**
     Prints the arguments to the console with a warning icon.
     You can pass as many arguments as you want and they will be joined together with a space.
       ```javascript
      Ember.Logger.warn('Something happened!');
      // "Something happened!" will be printed to the console with a warning icon.
      ```
      @method warn
     @for Ember.Logger
     @param {*} arguments
     @public
    */
    warn: consoleMethod('warn') || K,

    /**
     Prints the arguments to the console with an error icon, red text and a stack trace.
     You can pass as many arguments as you want and they will be joined together with a space.
       ```javascript
      Ember.Logger.error('Danger! Danger!');
      // "Danger! Danger!" will be printed to the console in red text.
      ```
      @method error
     @for Ember.Logger
     @param {*} arguments
     @public
    */
    error: consoleMethod('error') || K,

    /**
     Logs the arguments to the console.
     You can pass as many arguments as you want and they will be joined together with a space.
       ```javascript
      var foo = 1;
      Ember.Logger.info('log value of foo:', foo);
      // "log value of foo: 1" will be printed to the console
      ```
      @method info
     @for Ember.Logger
     @param {*} arguments
     @public
    */
    info: consoleMethod('info') || K,

    /**
     Logs the arguments to the console in blue text.
     You can pass as many arguments as you want and they will be joined together with a space.
       ```javascript
      var foo = 1;
      Ember.Logger.debug('log value of foo:', foo);
      // "log value of foo: 1" will be printed to the console
      ```
      @method debug
     @for Ember.Logger
     @param {*} arguments
     @public
    */
    debug: consoleMethod('debug') || consoleMethod('info') || K,

    /**
     If the value passed into `Ember.Logger.assert` is not truthy it will throw an error with a stack trace.
       ```javascript
      Ember.Logger.assert(true); // undefined
      Ember.Logger.assert(true === false); // Throws an Assertion failed error.
      Ember.Logger.assert(true === false, 'Something invalid'); // Throws an Assertion failed error with message.
      ```
      @method assert
     @for Ember.Logger
     @param {Boolean} bool Value to test
     @param {String} message Assertion message on failed
     @public
    */
    assert: consoleMethod('assert') || assertPolyfill
  };

  exports.default = index;
});
enifed('ember-debug/deprecate', ['exports', 'ember-debug/error', 'ember-console', 'ember-environment', 'ember-debug/handlers'], function (exports, _error, _emberConsole, _emberEnvironment, _handlers) {
  'use strict';

  exports.missingOptionsUntilDeprecation = exports.missingOptionsIdDeprecation = exports.missingOptionsDeprecation = exports.registerHandler = undefined;

  /**
   @module @ember/debug
   @public
  */
  /**
    Allows for runtime registration of handler functions that override the default deprecation behavior.
    Deprecations are invoked by calls to [Ember.deprecate](https://emberjs.com/api/classes/Ember.html#method_deprecate).
    The following example demonstrates its usage by registering a handler that throws an error if the
    message contains the word "should", otherwise defers to the default handler.
  
    ```javascript
    Ember.Debug.registerDeprecationHandler((message, options, next) => {
      if (message.indexOf('should') !== -1) {
        throw new Error(`Deprecation message with should: ${message}`);
      } else {
        // defer to whatever handler was registered before this one
        next(message, options);
      }
    });
    ```
  
    The handler function takes the following arguments:
  
    <ul>
      <li> <code>message</code> - The message received from the deprecation call.</li>
      <li> <code>options</code> - An object passed in with the deprecation call containing additional information including:</li>
        <ul>
          <li> <code>id</code> - An id of the deprecation in the form of <code>package-name.specific-deprecation</code>.</li>
          <li> <code>until</code> - The Ember version number the feature and deprecation will be removed in.</li>
        </ul>
      <li> <code>next</code> - A function that calls into the previously registered handler.</li>
    </ul>
  
    @public
    @static
    @method registerDeprecationHandler
    @for @ember/debug
    @param handler {Function} A function to handle deprecation calls.
    @since 2.1.0
  */
  var registerHandler = function () {}; /*global __fail__*/

  var missingOptionsDeprecation = void 0,
      missingOptionsIdDeprecation = void 0,
      missingOptionsUntilDeprecation = void 0,
      deprecate = void 0;

  if (true) {
    exports.registerHandler = registerHandler = function registerHandler(handler) {
      (0, _handlers.registerHandler)('deprecate', handler);
    };

    var formatMessage = function formatMessage(_message, options) {
      var message = _message;

      if (options && options.id) {
        message = message + (' [deprecation id: ' + options.id + ']');
      }

      if (options && options.url) {
        message += ' See ' + options.url + ' for more details.';
      }

      return message;
    };

    registerHandler(function logDeprecationToConsole(message, options) {
      var updatedMessage = formatMessage(message, options);

      _emberConsole.default.warn('DEPRECATION: ' + updatedMessage);
    });

    var captureErrorForStack = void 0;

    if (new Error().stack) {
      captureErrorForStack = function () {
        return new Error();
      };
    } else {
      captureErrorForStack = function () {
        try {
          __fail__.fail();
        } catch (e) {
          return e;
        }
      };
    }

    registerHandler(function logDeprecationStackTrace(message, options, next) {
      if (_emberEnvironment.ENV.LOG_STACKTRACE_ON_DEPRECATION) {
        var stackStr = '';
        var error = captureErrorForStack();
        var stack = void 0;

        if (error.stack) {
          if (error['arguments']) {
            // Chrome
            stack = error.stack.replace(/^\s+at\s+/gm, '').replace(/^([^\(]+?)([\n$])/gm, '{anonymous}($1)$2').replace(/^Object.<anonymous>\s*\(([^\)]+)\)/gm, '{anonymous}($1)').split('\n');
            stack.shift();
          } else {
            // Firefox
            stack = error.stack.replace(/(?:\n@:0)?\s+$/m, '').replace(/^\(/gm, '{anonymous}(').split('\n');
          }

          stackStr = '\n    ' + stack.slice(2).join('\n    ');
        }

        var updatedMessage = formatMessage(message, options);

        _emberConsole.default.warn('DEPRECATION: ' + updatedMessage + stackStr);
      } else {
        next.apply(undefined, arguments);
      }
    });

    registerHandler(function raiseOnDeprecation(message, options, next) {
      if (_emberEnvironment.ENV.RAISE_ON_DEPRECATION) {
        var updatedMessage = formatMessage(message);

        throw new _error.default(updatedMessage);
      } else {
        next.apply(undefined, arguments);
      }
    });

    exports.missingOptionsDeprecation = missingOptionsDeprecation = 'When calling `Ember.deprecate` you ' + 'must provide an `options` hash as the third parameter.  ' + '`options` should include `id` and `until` properties.';
    exports.missingOptionsIdDeprecation = missingOptionsIdDeprecation = 'When calling `Ember.deprecate` you must provide `id` in options.';
    exports.missingOptionsUntilDeprecation = missingOptionsUntilDeprecation = 'When calling `Ember.deprecate` you must provide `until` in options.';
    /**
     @module @ember/application
     @public
     */
    /**
      Display a deprecation warning with the provided message and a stack trace
      (Chrome and Firefox only).
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       @method deprecate
      @for @ember/application/deprecations
      @param {String} message A description of the deprecation.
      @param {Boolean} test A boolean. If falsy, the deprecation will be displayed.
      @param {Object} options
      @param {String} options.id A unique id for this deprecation. The id can be
        used by Ember debugging tools to change the behavior (raise, log or silence)
        for that specific deprecation. The id should be namespaced by dots, e.g.
        "view.helper.select".
      @param {string} options.until The version of Ember when this deprecation
        warning will be removed.
      @param {String} [options.url] An optional url to the transition guide on the
        emberjs.com website.
      @static
      @public
      @since 1.0.0
    */
    deprecate = function deprecate(message, test, options) {
      if (!options || !options.id && !options.until) {
        deprecate(missingOptionsDeprecation, false, {
          id: 'ember-debug.deprecate-options-missing',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options'
        });
      }

      if (options && !options.id) {
        deprecate(missingOptionsIdDeprecation, false, {
          id: 'ember-debug.deprecate-id-missing',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options'
        });
      }

      if (options && !options.until) {
        deprecate(missingOptionsUntilDeprecation, options && options.until, {
          id: 'ember-debug.deprecate-until-missing',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options'
        });
      }

      _handlers.invoke.apply(undefined, ['deprecate'].concat(Array.prototype.slice.call(arguments)));
    };
  }

  exports.default = deprecate;
  exports.registerHandler = registerHandler;
  exports.missingOptionsDeprecation = missingOptionsDeprecation;
  exports.missingOptionsIdDeprecation = missingOptionsIdDeprecation;
  exports.missingOptionsUntilDeprecation = missingOptionsUntilDeprecation;
});
enifed("ember-debug/error", ["exports", "ember-babel"], function (exports, _emberBabel) {
  "use strict";

  /**
   @module @ember/error
  */
  function ExtendBuiltin(klass) {
    function ExtendableBuiltin() {
      klass.apply(this, arguments);
    }

    ExtendableBuiltin.prototype = Object.create(klass.prototype);
    ExtendableBuiltin.prototype.constructor = ExtendableBuiltin;
    return ExtendableBuiltin;
  }

  /**
    A subclass of the JavaScript Error object for use in Ember.
  
    @class EmberError
    @extends Error
    @constructor
    @public
  */

  var EmberError = function (_ExtendBuiltin) {
    (0, _emberBabel.inherits)(EmberError, _ExtendBuiltin);

    function EmberError(message) {
      (0, _emberBabel.classCallCheck)(this, EmberError);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _ExtendBuiltin.call(this));

      if (!(_this instanceof EmberError)) {
        var _ret;

        return _ret = new EmberError(message), (0, _emberBabel.possibleConstructorReturn)(_this, _ret);
      }

      var error = Error.call(_this, message);
      _this.stack = error.stack;
      _this.description = error.description;
      _this.fileName = error.fileName;
      _this.lineNumber = error.lineNumber;
      _this.message = error.message;
      _this.name = error.name;
      _this.number = error.number;
      _this.code = error.code;
      return _this;
    }

    return EmberError;
  }(ExtendBuiltin(Error));

  exports.default = EmberError;
});
enifed('ember-debug/features', ['exports', 'ember-environment', 'ember/features'], function (exports, _emberEnvironment, _features) {
  'use strict';

  exports.default = isEnabled;
  var FEATURES = _features.FEATURES;


  /**
   @module ember
  */

  /**
    The hash of enabled Canary features. Add to this, any canary features
    before creating your application.
  
    Alternatively (and recommended), you can also define `EmberENV.FEATURES`
    if you need to enable features flagged at runtime.
  
    @class FEATURES
    @namespace Ember
    @static
    @since 1.1.0
    @public
  */

  // Auto-generated

  /**
    Determine whether the specified `feature` is enabled. Used by Ember's
    build tools to exclude experimental features from beta/stable builds.
  
    You can define the following configuration options:
  
    * `EmberENV.ENABLE_OPTIONAL_FEATURES` - enable any features that have not been explicitly
      enabled/disabled.
  
    @method isEnabled
    @param {String} feature The feature to check
    @return {Boolean}
    @for Ember.FEATURES
    @since 1.1.0
    @public
  */
  function isEnabled(feature) {
    var featureValue = FEATURES[feature];

    if (featureValue === true || featureValue === false || featureValue === undefined) {
      return featureValue;
    } else if (_emberEnvironment.ENV.ENABLE_OPTIONAL_FEATURES) {
      return true;
    } else {
      return false;
    }
  }
});
enifed('ember-debug/handlers', ['exports'], function (exports) {
  'use strict';

  var HANDLERS = exports.HANDLERS = {};

  var registerHandler = function () {};
  var invoke = function () {};

  if (true) {
    exports.registerHandler = registerHandler = function registerHandler(type, callback) {
      var nextHandler = HANDLERS[type] || function () {};

      HANDLERS[type] = function (message, options) {
        callback(message, options, nextHandler);
      };
    };

    exports.invoke = invoke = function invoke(type, message, test, options) {
      if (test) {
        return;
      }

      var handlerForType = HANDLERS[type];

      if (handlerForType) {
        handlerForType(message, options);
      }
    };
  }

  exports.registerHandler = registerHandler;
  exports.invoke = invoke;
});
enifed('ember-debug/index', ['exports', 'ember-debug/warn', 'ember-debug/deprecate', 'ember-debug/features', 'ember-debug/error', 'ember-debug/testing', 'ember-environment', 'ember-console', 'ember/features'], function (exports, _warn2, _deprecate2, _features, _error, _testing, _emberEnvironment, _emberConsole, _features2) {
  'use strict';

  exports._warnIfUsingStrippedFeatureFlags = exports.getDebugFunction = exports.setDebugFunction = exports.deprecateFunc = exports.runInDebug = exports.debugFreeze = exports.debugSeal = exports.deprecate = exports.debug = exports.warn = exports.info = exports.assert = exports.setTesting = exports.isTesting = exports.Error = exports.isFeatureEnabled = exports.registerDeprecationHandler = exports.registerWarnHandler = undefined;
  Object.defineProperty(exports, 'registerWarnHandler', {
    enumerable: true,
    get: function () {
      return _warn2.registerHandler;
    }
  });
  Object.defineProperty(exports, 'registerDeprecationHandler', {
    enumerable: true,
    get: function () {
      return _deprecate2.registerHandler;
    }
  });
  Object.defineProperty(exports, 'isFeatureEnabled', {
    enumerable: true,
    get: function () {
      return _features.default;
    }
  });
  Object.defineProperty(exports, 'Error', {
    enumerable: true,
    get: function () {
      return _error.default;
    }
  });
  Object.defineProperty(exports, 'isTesting', {
    enumerable: true,
    get: function () {
      return _testing.isTesting;
    }
  });
  Object.defineProperty(exports, 'setTesting', {
    enumerable: true,
    get: function () {
      return _testing.setTesting;
    }
  });
  var DEFAULT_FEATURES = _features2.DEFAULT_FEATURES,
      FEATURES = _features2.FEATURES;


  // These are the default production build versions:
  var noop = function () {};

  var assert = noop;
  var info = noop;
  var warn = noop;
  var debug = noop;
  var deprecate = noop;
  var debugSeal = noop;
  var debugFreeze = noop;
  var runInDebug = noop;
  var setDebugFunction = noop;
  var getDebugFunction = noop;

  var deprecateFunc = function () {
    return arguments[arguments.length - 1];
  };

  if (true) {
    exports.setDebugFunction = setDebugFunction = function (type, callback) {
      switch (type) {
        case 'assert':
          return exports.assert = assert = callback;
        case 'info':
          return exports.info = info = callback;
        case 'warn':
          return exports.warn = warn = callback;
        case 'debug':
          return exports.debug = debug = callback;
        case 'deprecate':
          return exports.deprecate = deprecate = callback;
        case 'debugSeal':
          return exports.debugSeal = debugSeal = callback;
        case 'debugFreeze':
          return exports.debugFreeze = debugFreeze = callback;
        case 'runInDebug':
          return exports.runInDebug = runInDebug = callback;
        case 'deprecateFunc':
          return exports.deprecateFunc = deprecateFunc = callback;
      }
    };

    exports.getDebugFunction = getDebugFunction = function (type) {
      switch (type) {
        case 'assert':
          return assert;
        case 'info':
          return info;
        case 'warn':
          return warn;
        case 'debug':
          return debug;
        case 'deprecate':
          return deprecate;
        case 'debugSeal':
          return debugSeal;
        case 'debugFreeze':
          return debugFreeze;
        case 'runInDebug':
          return runInDebug;
        case 'deprecateFunc':
          return deprecateFunc;
      }
    };
  }

  /**
  @module @ember/debug
  */

  if (true) {
    /**
      Define an assertion that will throw an exception if the condition is not met.
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       ```javascript
      import { assert } from '@ember/debug';
       // Test for truthiness
      assert('Must pass a valid object', obj);
       // Fail unconditionally
      assert('This code path should never be run');
      ```
       @method assert
      @static
      @for @ember/debug
      @param {String} desc A description of the assertion. This will become
        the text of the Error thrown if the assertion fails.
      @param {Boolean} test Must be truthy for the assertion to pass. If
        falsy, an exception will be thrown.
      @public
      @since 1.0.0
    */
    setDebugFunction('assert', function assert(desc, test) {
      if (!test) {
        throw new _error.default('Assertion Failed: ' + desc);
      }
    });

    /**
      Display a debug notice.
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       ```javascript
      import { debug } from '@ember/debug';
       debug('I\'m a debug notice!');
      ```
       @method debug
      @for @ember/debug
      @static
      @param {String} message A debug message to display.
      @public
    */
    setDebugFunction('debug', function debug(message) {
      _emberConsole.default.debug('DEBUG: ' + message);
    });

    /**
      Display an info notice.
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       @method info
      @private
    */
    setDebugFunction('info', function info() {
      _emberConsole.default.info.apply(undefined, arguments);
    });

    /**
     @module @ember/application
     @public
    */

    /**
      Alias an old, deprecated method with its new counterpart.
       Display a deprecation warning with the provided message and a stack trace
      (Chrome and Firefox only) when the assigned method is called.
       * In a production build, this method is defined as an empty function (NOP).
       ```javascript
      Ember.oldMethod = Ember.deprecateFunc('Please use the new, updated method', Ember.newMethod);
      ```
       @method deprecateFunc
      @static
      @for @ember/application/deprecations
      @param {String} message A description of the deprecation.
      @param {Object} [options] The options object for Ember.deprecate.
      @param {Function} func The new function called to replace its deprecated counterpart.
      @return {Function} A new function that wraps the original function with a deprecation warning
      @private
    */
    setDebugFunction('deprecateFunc', function deprecateFunc() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (args.length === 3) {
        var message = args[0],
            options = args[1],
            func = args[2];

        return function () {
          deprecate(message, false, options);
          return func.apply(this, arguments);
        };
      } else {
        var _message = args[0],
            _func = args[1];

        return function () {
          deprecate(_message);
          return _func.apply(this, arguments);
        };
      }
    });

    /**
     @module @ember/debug
     @public
    */
    /**
      Run a function meant for debugging.
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       ```javascript
      import Component from '@ember/component';
      import { runInDebug } from '@ember/debug';
       runInDebug(() => {
        Component.reopen({
          didInsertElement() {
            console.log("I'm happy");
          }
        });
      });
      ```
       @method runInDebug
      @for @ember/debug
      @static
      @param {Function} func The function to be executed.
      @since 1.5.0
      @public
    */
    setDebugFunction('runInDebug', function runInDebug(func) {
      func();
    });

    setDebugFunction('debugSeal', function debugSeal(obj) {
      Object.seal(obj);
    });

    setDebugFunction('debugFreeze', function debugFreeze(obj) {
      Object.freeze(obj);
    });

    setDebugFunction('deprecate', _deprecate2.default);

    setDebugFunction('warn', _warn2.default);
  }

  var _warnIfUsingStrippedFeatureFlags = void 0;

  if (true && !(0, _testing.isTesting)()) {
    /**
       Will call `warn()` if ENABLE_OPTIONAL_FEATURES or
       any specific FEATURES flag is truthy.
        This method is called automatically in debug canary builds.
        @private
       @method _warnIfUsingStrippedFeatureFlags
       @return {void}
    */
    exports._warnIfUsingStrippedFeatureFlags = _warnIfUsingStrippedFeatureFlags = function _warnIfUsingStrippedFeatureFlags(FEATURES, knownFeatures, featuresWereStripped) {
      if (featuresWereStripped) {
        warn('Ember.ENV.ENABLE_OPTIONAL_FEATURES is only available in canary builds.', !_emberEnvironment.ENV.ENABLE_OPTIONAL_FEATURES, { id: 'ember-debug.feature-flag-with-features-stripped' });

        var keys = Object.keys(FEATURES || {});
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          if (key === 'isEnabled' || !(key in knownFeatures)) {
            continue;
          }

          warn('FEATURE["' + key + '"] is set as enabled, but FEATURE flags are only available in canary builds.', !FEATURES[key], { id: 'ember-debug.feature-flag-with-features-stripped' });
        }
      }
    };

    // Complain if they're using FEATURE flags in builds other than canary
    FEATURES['features-stripped-test'] = true;
    var featuresWereStripped = true;

    if ((0, _features.default)('features-stripped-test')) {
      featuresWereStripped = false;
    }

    delete FEATURES['features-stripped-test'];
    _warnIfUsingStrippedFeatureFlags(_emberEnvironment.ENV.FEATURES, DEFAULT_FEATURES, featuresWereStripped);

    // Inform the developer about the Ember Inspector if not installed.
    var isFirefox = _emberEnvironment.environment.isFirefox;
    var isChrome = _emberEnvironment.environment.isChrome;

    if (typeof window !== 'undefined' && (isFirefox || isChrome) && window.addEventListener) {
      window.addEventListener('load', function () {
        if (document.documentElement && document.documentElement.dataset && !document.documentElement.dataset.emberExtension) {
          var downloadURL = void 0;

          if (isChrome) {
            downloadURL = 'https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi';
          } else if (isFirefox) {
            downloadURL = 'https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/';
          }

          debug('For more advanced debugging, install the Ember Inspector from ' + downloadURL);
        }
      }, false);
    }
  }

  exports.assert = assert;
  exports.info = info;
  exports.warn = warn;
  exports.debug = debug;
  exports.deprecate = deprecate;
  exports.debugSeal = debugSeal;
  exports.debugFreeze = debugFreeze;
  exports.runInDebug = runInDebug;
  exports.deprecateFunc = deprecateFunc;
  exports.setDebugFunction = setDebugFunction;
  exports.getDebugFunction = getDebugFunction;
  exports._warnIfUsingStrippedFeatureFlags = _warnIfUsingStrippedFeatureFlags;
});
enifed("ember-debug/testing", ["exports"], function (exports) {
  "use strict";

  exports.isTesting = isTesting;
  exports.setTesting = setTesting;
  var testing = false;

  function isTesting() {
    return testing;
  }

  function setTesting(value) {
    testing = !!value;
  }
});
enifed('ember-debug/warn', ['exports', 'ember-console', 'ember-debug/deprecate', 'ember-debug/handlers'], function (exports, _emberConsole, _deprecate, _handlers) {
  'use strict';

  exports.missingOptionsDeprecation = exports.missingOptionsIdDeprecation = exports.registerHandler = undefined;


  var registerHandler = function () {};
  var warn = function () {};
  var missingOptionsDeprecation = void 0,
      missingOptionsIdDeprecation = void 0;

  /**
  @module @ember/debug
  */

  if (true) {
    /**
      Allows for runtime registration of handler functions that override the default warning behavior.
      Warnings are invoked by calls made to [warn](https://emberjs.com/api/classes/Ember.html#method_warn).
      The following example demonstrates its usage by registering a handler that does nothing overriding Ember's
      default warning behavior.
       ```javascript
      import { registerWarnHandler } from '@ember/debug';
       // next is not called, so no warnings get the default behavior
      registerWarnHandler(() => {});
      ```
       The handler function takes the following arguments:
       <ul>
        <li> <code>message</code> - The message received from the warn call. </li>
        <li> <code>options</code> - An object passed in with the warn call containing additional information including:</li>
          <ul>
            <li> <code>id</code> - An id of the warning in the form of <code>package-name.specific-warning</code>.</li>
          </ul>
        <li> <code>next</code> - A function that calls into the previously registered handler.</li>
      </ul>
       @public
      @static
      @method registerWarnHandler
      @for @ember/debug
      @param handler {Function} A function to handle warnings.
      @since 2.1.0
    */
    exports.registerHandler = registerHandler = function registerHandler(handler) {
      (0, _handlers.registerHandler)('warn', handler);
    };

    registerHandler(function logWarning(message, options) {
      _emberConsole.default.warn('WARNING: ' + message);
      if ('trace' in _emberConsole.default) {
        _emberConsole.default.trace();
      }
    });

    exports.missingOptionsDeprecation = missingOptionsDeprecation = 'When calling `warn` you ' + 'must provide an `options` hash as the third parameter.  ' + '`options` should include an `id` property.';
    exports.missingOptionsIdDeprecation = missingOptionsIdDeprecation = 'When calling `warn` you must provide `id` in options.';

    /**
      Display a warning with the provided message.
       * In a production build, this method is defined as an empty function (NOP).
      Uses of this method in Ember itself are stripped from the ember.prod.js build.
       @method warn
      @for @ember/debug
      @static
      @param {String} message A warning to display.
      @param {Boolean} test An optional boolean. If falsy, the warning
        will be displayed.
      @param {Object} options An object that can be used to pass a unique
        `id` for this warning.  The `id` can be used by Ember debugging tools
        to change the behavior (raise, log, or silence) for that specific warning.
        The `id` should be namespaced by dots, e.g. "ember-debug.feature-flag-with-features-stripped"
      @public
      @since 1.0.0
    */
    warn = function warn(message, test, options) {
      if (arguments.length === 2 && typeof test === 'object') {
        options = test;
        test = false;
      }
      if (!options) {
        (0, _deprecate.default)(missingOptionsDeprecation, false, {
          id: 'ember-debug.warn-options-missing',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options'
        });
      }

      if (options && !options.id) {
        (0, _deprecate.default)(missingOptionsIdDeprecation, false, {
          id: 'ember-debug.warn-id-missing',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-debug-function-options'
        });
      }

      (0, _handlers.invoke)('warn', message, test, options);
    };
  }

  exports.default = warn;
  exports.registerHandler = registerHandler;
  exports.missingOptionsIdDeprecation = missingOptionsIdDeprecation;
  exports.missingOptionsDeprecation = missingOptionsDeprecation;
});
enifed('ember-environment', ['exports'], function (exports) {
  'use strict';

  /* globals global, window, self, mainContext */

  // from lodash to catch fake globals
  function checkGlobal(value) {
    return value && value.Object === Object ? value : undefined;
  }

  // element ids can ruin global miss checks
  function checkElementIdShadowing(value) {
    return value && value.nodeType === undefined ? value : undefined;
  }

  // export real global
  var global$1 = checkGlobal(checkElementIdShadowing(typeof global === 'object' && global)) || checkGlobal(typeof self === 'object' && self) || checkGlobal(typeof window === 'object' && window) || mainContext || // set before strict mode in Ember loader/wrapper
  new Function('return this')(); // eval outside of strict mode

  function defaultTrue(v) {
    return v === false ? false : true;
  }

  function defaultFalse(v) {
    return v === true ? true : false;
  }

  function normalizeExtendPrototypes(obj) {
    if (obj === false) {
      return { String: false, Array: false, Function: false };
    } else if (!obj || obj === true) {
      return { String: true, Array: true, Function: true };
    } else {
      return {
        String: defaultTrue(obj.String),
        Array: defaultTrue(obj.Array),
        Function: defaultTrue(obj.Function)
      };
    }
  }

  /* globals module */
  /**
    The hash of environment variables used to control various configuration
    settings. To specify your own or override default settings, add the
    desired properties to a global hash named `EmberENV` (or `ENV` for
    backwards compatibility with earlier versions of Ember). The `EmberENV`
    hash must be created before loading Ember.
  
    @class EmberENV
    @type Object
    @public
  */
  var ENV = typeof global$1.EmberENV === 'object' && global$1.EmberENV || typeof global$1.ENV === 'object' && global$1.ENV || {};

  // ENABLE_ALL_FEATURES was documented, but you can't actually enable non optional features.
  if (ENV.ENABLE_ALL_FEATURES) {
    ENV.ENABLE_OPTIONAL_FEATURES = true;
  }

  /**
    Determines whether Ember should add to `Array`, `Function`, and `String`
    native object prototypes, a few extra methods in order to provide a more
    friendly API.
  
    We generally recommend leaving this option set to true however, if you need
    to turn it off, you can add the configuration property
    `EXTEND_PROTOTYPES` to `EmberENV` and set it to `false`.
  
    Note, when disabled (the default configuration for Ember Addons), you will
    instead have to access all methods and functions from the Ember
    namespace.
  
    @property EXTEND_PROTOTYPES
    @type Boolean
    @default true
    @for EmberENV
    @public
  */
  ENV.EXTEND_PROTOTYPES = normalizeExtendPrototypes(ENV.EXTEND_PROTOTYPES);

  /**
    The `LOG_STACKTRACE_ON_DEPRECATION` property, when true, tells Ember to log
    a full stack trace during deprecation warnings.
  
    @property LOG_STACKTRACE_ON_DEPRECATION
    @type Boolean
    @default true
    @for EmberENV
    @public
  */
  ENV.LOG_STACKTRACE_ON_DEPRECATION = defaultTrue(ENV.LOG_STACKTRACE_ON_DEPRECATION);

  /**
    The `LOG_VERSION` property, when true, tells Ember to log versions of all
    dependent libraries in use.
  
    @property LOG_VERSION
    @type Boolean
    @default true
    @for EmberENV
    @public
  */
  ENV.LOG_VERSION = defaultTrue(ENV.LOG_VERSION);

  /**
    Debug parameter you can turn on. This will log all bindings that fire to
    the console. This should be disabled in production code. Note that you
    can also enable this from the console or temporarily.
  
    @property LOG_BINDINGS
    @for EmberENV
    @type Boolean
    @default false
    @public
  */
  ENV.LOG_BINDINGS = defaultFalse(ENV.LOG_BINDINGS);

  ENV.RAISE_ON_DEPRECATION = defaultFalse(ENV.RAISE_ON_DEPRECATION);

  // check if window exists and actually is the global
  var hasDOM = typeof window !== 'undefined' && window === global$1 && window.document && window.document.createElement && !ENV.disableBrowserEnvironment; // is this a public thing?

  // legacy imports/exports/lookup stuff (should we keep this??)
  var originalContext = global$1.Ember || {};

  var context = {
    // import jQuery
    imports: originalContext.imports || global$1,
    // export Ember
    exports: originalContext.exports || global$1,
    // search for Namespaces
    lookup: originalContext.lookup || global$1
  };

  // TODO: cleanup single source of truth issues with this stuff
  var environment = hasDOM ? {
    hasDOM: true,
    isChrome: !!window.chrome && !window.opera,
    isFirefox: typeof InstallTrigger !== 'undefined',
    isPhantom: !!window.callPhantom,
    location: window.location,
    history: window.history,
    userAgent: window.navigator.userAgent,
    window: window
  } : {
    hasDOM: false,
    isChrome: false,
    isFirefox: false,
    isPhantom: false,
    location: null,
    history: null,
    userAgent: 'Lynx (textmode)',
    window: null
  };

  exports.ENV = ENV;
  exports.context = context;
  exports.environment = environment;
});
enifed('ember-extension-support/container_debug_adapter', ['exports', 'ember-metal', 'ember-runtime'], function (exports, _emberMetal, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    /**
      The resolver instance of the application
      being debugged. This property will be injected
      on creation.
       @property resolver
      @default null
      @public
    */
    resolver: null,

    /**
      Returns true if it is possible to catalog a list of available
      classes in the resolver for a given type.
       @method canCatalogEntriesByType
      @param {String} type The type. e.g. "model", "controller", "route".
      @return {boolean} whether a list is available for this type.
      @public
    */
    canCatalogEntriesByType: function (type) {
      if (type === 'model' || type === 'template') {
        return false;
      }

      return true;
    },


    /**
      Returns the available classes a given type.
       @method catalogEntriesByType
      @param {String} type The type. e.g. "model", "controller", "route".
      @return {Array} An array of strings.
      @public
    */
    catalogEntriesByType: function (type) {
      var namespaces = (0, _emberRuntime.A)(_emberRuntime.Namespace.NAMESPACES);
      var types = (0, _emberRuntime.A)();
      var typeSuffixRegex = new RegExp(_emberRuntime.String.classify(type) + '$');

      namespaces.forEach(function (namespace) {
        if (namespace !== _emberMetal.default) {
          for (var key in namespace) {
            if (!namespace.hasOwnProperty(key)) {
              continue;
            }
            if (typeSuffixRegex.test(key)) {
              var klass = namespace[key];
              if ((0, _emberRuntime.typeOf)(klass) === 'class') {
                types.push(_emberRuntime.String.dasherize(key.replace(typeSuffixRegex, '')));
              }
            }
          }
        }
      });
      return types;
    }
  });
});
enifed('ember-extension-support/data_adapter', ['exports', 'ember-utils', 'ember-metal', 'ember-runtime'], function (exports, _emberUtils, _emberMetal, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    init: function () {
      this._super.apply(this, arguments);
      this.releaseMethods = (0, _emberRuntime.A)();
    },


    /**
      The container-debug-adapter which is used
      to list all models.
       @property containerDebugAdapter
      @default undefined
      @since 1.5.0
      @public
    **/
    containerDebugAdapter: undefined,

    /**
      The number of attributes to send
      as columns. (Enough to make the record
      identifiable).
       @private
      @property attributeLimit
      @default 3
      @since 1.3.0
    */
    attributeLimit: 3,

    /**
       Ember Data > v1.0.0-beta.18
       requires string model names to be passed
       around instead of the actual factories.
        This is a stamp for the Ember Inspector
       to differentiate between the versions
       to be able to support older versions too.
        @public
       @property acceptsModelName
     */
    acceptsModelName: true,

    /**
      Stores all methods that clear observers.
      These methods will be called on destruction.
       @private
      @property releaseMethods
      @since 1.3.0
    */
    releaseMethods: (0, _emberRuntime.A)(),

    /**
      Specifies how records can be filtered.
      Records returned will need to have a `filterValues`
      property with a key for every name in the returned array.
       @public
      @method getFilters
      @return {Array} List of objects defining filters.
       The object should have a `name` and `desc` property.
    */
    getFilters: function () {
      return (0, _emberRuntime.A)();
    },


    /**
      Fetch the model types and observe them for changes.
       @public
      @method watchModelTypes
       @param {Function} typesAdded Callback to call to add types.
      Takes an array of objects containing wrapped types (returned from `wrapModelType`).
       @param {Function} typesUpdated Callback to call when a type has changed.
      Takes an array of objects containing wrapped types.
       @return {Function} Method to call to remove all observers
    */
    watchModelTypes: function (typesAdded, typesUpdated) {
      var _this = this;

      var modelTypes = this.getModelTypes();
      var releaseMethods = (0, _emberRuntime.A)();
      var typesToSend = void 0;

      typesToSend = modelTypes.map(function (type) {
        var klass = type.klass;
        var wrapped = _this.wrapModelType(klass, type.name);
        releaseMethods.push(_this.observeModelType(type.name, typesUpdated));
        return wrapped;
      });

      typesAdded(typesToSend);

      var release = function () {
        releaseMethods.forEach(function (fn) {
          return fn();
        });
        _this.releaseMethods.removeObject(release);
      };
      this.releaseMethods.pushObject(release);
      return release;
    },
    _nameToClass: function (type) {
      if (typeof type === 'string') {
        var owner = (0, _emberUtils.getOwner)(this);
        var Factory = owner.factoryFor('model:' + type);
        type = Factory && Factory.class;
      }
      return type;
    },


    /**
      Fetch the records of a given type and observe them for changes.
       @public
      @method watchRecords
       @param {String} modelName The model name.
       @param {Function} recordsAdded Callback to call to add records.
      Takes an array of objects containing wrapped records.
      The object should have the following properties:
        columnValues: {Object} The key and value of a table cell.
        object: {Object} The actual record object.
       @param {Function} recordsUpdated Callback to call when a record has changed.
      Takes an array of objects containing wrapped records.
       @param {Function} recordsRemoved Callback to call when a record has removed.
      Takes the following parameters:
        index: The array index where the records were removed.
        count: The number of records removed.
       @return {Function} Method to call to remove all observers.
    */
    watchRecords: function (modelName, recordsAdded, recordsUpdated, recordsRemoved) {
      var _this2 = this;

      var releaseMethods = (0, _emberRuntime.A)();
      var klass = this._nameToClass(modelName);
      var records = this.getRecords(klass, modelName);
      var release = void 0;

      function recordUpdated(updatedRecord) {
        recordsUpdated([updatedRecord]);
      }

      var recordsToSend = records.map(function (record) {
        releaseMethods.push(_this2.observeRecord(record, recordUpdated));
        return _this2.wrapRecord(record);
      });

      var contentDidChange = function (array, idx, removedCount, addedCount) {
        for (var i = idx; i < idx + addedCount; i++) {
          var record = (0, _emberRuntime.objectAt)(array, i);
          var wrapped = _this2.wrapRecord(record);
          releaseMethods.push(_this2.observeRecord(record, recordUpdated));
          recordsAdded([wrapped]);
        }

        if (removedCount) {
          recordsRemoved(idx, removedCount);
        }
      };

      var observer = { didChange: contentDidChange, willChange: function () {
          return this;
        }
      };
      (0, _emberRuntime.addArrayObserver)(records, this, observer);

      release = function () {
        releaseMethods.forEach(function (fn) {
          return fn();
        });
        (0, _emberRuntime.removeArrayObserver)(records, _this2, observer);
        _this2.releaseMethods.removeObject(release);
      };

      recordsAdded(recordsToSend);

      this.releaseMethods.pushObject(release);
      return release;
    },


    /**
      Clear all observers before destruction
      @private
      @method willDestroy
    */
    willDestroy: function () {
      this._super.apply(this, arguments);
      this.releaseMethods.forEach(function (fn) {
        return fn();
      });
    },


    /**
      Detect whether a class is a model.
       Test that against the model class
      of your persistence library.
       @private
      @method detect
      @param {Class} klass The class to test.
      @return boolean Whether the class is a model class or not.
    */
    detect: function (klass) {
      return false;
    },


    /**
      Get the columns for a given model type.
       @private
      @method columnsForType
      @param {Class} type The model type.
      @return {Array} An array of columns of the following format:
       name: {String} The name of the column.
       desc: {String} Humanized description (what would show in a table column name).
    */
    columnsForType: function (type) {
      return (0, _emberRuntime.A)();
    },


    /**
      Adds observers to a model type class.
       @private
      @method observeModelType
      @param {String} modelName The model type name.
      @param {Function} typesUpdated Called when a type is modified.
      @return {Function} The function to call to remove observers.
    */

    observeModelType: function (modelName, typesUpdated) {
      var _this3 = this;

      var klass = this._nameToClass(modelName);
      var records = this.getRecords(klass, modelName);

      function onChange() {
        typesUpdated([this.wrapModelType(klass, modelName)]);
      }

      var observer = {
        didChange: function (array, idx, removedCount, addedCount) {
          // Only re-fetch records if the record count changed
          // (which is all we care about as far as model types are concerned).
          if (removedCount > 0 || addedCount > 0) {
            _emberMetal.run.scheduleOnce('actions', this, onChange);
          }
        },
        willChange: function () {
          return this;
        }
      };

      (0, _emberRuntime.addArrayObserver)(records, this, observer);

      var release = function () {
        return (0, _emberRuntime.removeArrayObserver)(records, _this3, observer);
      };

      return release;
    },


    /**
      Wraps a given model type and observes changes to it.
       @private
      @method wrapModelType
      @param {Class} klass A model class.
      @param {String} modelName Name of the class.
      @return {Object} Contains the wrapped type and the function to remove observers
      Format:
        type: {Object} The wrapped type.
          The wrapped type has the following format:
            name: {String} The name of the type.
            count: {Integer} The number of records available.
            columns: {Columns} An array of columns to describe the record.
            object: {Class} The actual Model type class.
        release: {Function} The function to remove observers.
    */
    wrapModelType: function (klass, name) {
      var records = this.getRecords(klass, name);
      var typeToSend = void 0;

      typeToSend = {
        name: name,
        count: (0, _emberMetal.get)(records, 'length'),
        columns: this.columnsForType(klass),
        object: klass
      };

      return typeToSend;
    },


    /**
      Fetches all models defined in the application.
       @private
      @method getModelTypes
      @return {Array} Array of model types.
    */
    getModelTypes: function () {
      var _this4 = this;

      var containerDebugAdapter = this.get('containerDebugAdapter');
      var types = void 0;

      if (containerDebugAdapter.canCatalogEntriesByType('model')) {
        types = containerDebugAdapter.catalogEntriesByType('model');
      } else {
        types = this._getObjectsOnNamespaces();
      }

      // New adapters return strings instead of classes.
      types = (0, _emberRuntime.A)(types).map(function (name) {
        return {
          klass: _this4._nameToClass(name),
          name: name
        };
      });
      types = (0, _emberRuntime.A)(types).filter(function (type) {
        return _this4.detect(type.klass);
      });

      return (0, _emberRuntime.A)(types);
    },


    /**
      Loops over all namespaces and all objects
      attached to them.
       @private
      @method _getObjectsOnNamespaces
      @return {Array} Array of model type strings.
    */
    _getObjectsOnNamespaces: function () {
      var _this5 = this;

      var namespaces = (0, _emberRuntime.A)(_emberRuntime.Namespace.NAMESPACES);
      var types = (0, _emberRuntime.A)();

      namespaces.forEach(function (namespace) {
        for (var key in namespace) {
          if (!namespace.hasOwnProperty(key)) {
            continue;
          }
          // Even though we will filter again in `getModelTypes`,
          // we should not call `lookupFactory` on non-models
          if (!_this5.detect(namespace[key])) {
            continue;
          }
          var name = _emberRuntime.String.dasherize(key);
          types.push(name);
        }
      });
      return types;
    },


    /**
      Fetches all loaded records for a given type.
       @private
      @method getRecords
      @return {Array} An array of records.
       This array will be observed for changes,
       so it should update when new records are added/removed.
    */
    getRecords: function (type) {
      return (0, _emberRuntime.A)();
    },


    /**
      Wraps a record and observers changes to it.
       @private
      @method wrapRecord
      @param {Object} record The record instance.
      @return {Object} The wrapped record. Format:
      columnValues: {Array}
      searchKeywords: {Array}
    */
    wrapRecord: function (record) {
      var recordToSend = { object: record };

      recordToSend.columnValues = this.getRecordColumnValues(record);
      recordToSend.searchKeywords = this.getRecordKeywords(record);
      recordToSend.filterValues = this.getRecordFilterValues(record);
      recordToSend.color = this.getRecordColor(record);

      return recordToSend;
    },


    /**
      Gets the values for each column.
       @private
      @method getRecordColumnValues
      @return {Object} Keys should match column names defined
      by the model type.
    */
    getRecordColumnValues: function (record) {
      return {};
    },


    /**
      Returns keywords to match when searching records.
       @private
      @method getRecordKeywords
      @return {Array} Relevant keywords for search.
    */
    getRecordKeywords: function (record) {
      return (0, _emberRuntime.A)();
    },


    /**
      Returns the values of filters defined by `getFilters`.
       @private
      @method getRecordFilterValues
      @param {Object} record The record instance.
      @return {Object} The filter values.
    */
    getRecordFilterValues: function (record) {
      return {};
    },


    /**
      Each record can have a color that represents its state.
       @private
      @method getRecordColor
      @param {Object} record The record instance
      @return {String} The records color.
        Possible options: black, red, blue, green.
    */
    getRecordColor: function (record) {
      return null;
    },


    /**
      Observes all relevant properties and re-sends the wrapped record
      when a change occurs.
       @private
      @method observerRecord
      @param {Object} record The record instance.
      @param {Function} recordUpdated The callback to call when a record is updated.
      @return {Function} The function to call to remove all observers.
    */
    observeRecord: function (record, recordUpdated) {
      return function () {};
    }
  });
});
enifed('ember-extension-support/index', ['exports', 'ember-extension-support/data_adapter', 'ember-extension-support/container_debug_adapter'], function (exports, _data_adapter, _container_debug_adapter) {
  'use strict';

  Object.defineProperty(exports, 'DataAdapter', {
    enumerable: true,
    get: function () {
      return _data_adapter.default;
    }
  });
  Object.defineProperty(exports, 'ContainerDebugAdapter', {
    enumerable: true,
    get: function () {
      return _container_debug_adapter.default;
    }
  });
});
enifed('ember-glimmer/component-managers/abstract', ['exports', 'ember-babel'], function (exports, _emberBabel) {
  'use strict';

  var AbstractManager = function () {
    function AbstractManager() {
      (0, _emberBabel.classCallCheck)(this, AbstractManager);

      this.debugStack = undefined;
    }

    AbstractManager.prototype.prepareArgs = function prepareArgs(definition, args) {
      return null;
    };

    AbstractManager.prototype.create = function create(env, definition, args, dynamicScope, caller, hasBlock) {
      if (true) {
        throw new Error('AbstractManager#create must be implemented.');
      }
    };

    AbstractManager.prototype.layoutFor = function layoutFor(definition, bucket, env) {
      if (true) {
        throw new Error('AbstractManager#create must be implemented.');
      }
    };

    AbstractManager.prototype.getSelf = function getSelf(bucket) {
      return bucket;
    };

    AbstractManager.prototype.didCreateElement = function didCreateElement(bucket, element, operations) {};

    AbstractManager.prototype.didRenderLayout = function didRenderLayout(bucket, bounds) {};

    AbstractManager.prototype.didCreate = function didCreate(bucket) {};

    AbstractManager.prototype.getTag = function getTag(bucket) {
      return null;
    };

    AbstractManager.prototype.update = function update(bucket, dynamicScope) {};

    AbstractManager.prototype.didUpdateLayout = function didUpdateLayout(bucket, bounds) {};

    AbstractManager.prototype.didUpdate = function didUpdate(bucket) {};

    AbstractManager.prototype.getDestructor = function getDestructor(bucket) {};

    return AbstractManager;
  }();

  exports.default = AbstractManager;


  if (true) {
    AbstractManager.prototype._pushToDebugStack = function (name, environment) {
      this.debugStack = environment.debugStack;
      this.debugStack.push(name);
    };

    AbstractManager.prototype._pushEngineToDebugStack = function (name, environment) {
      this.debugStack = environment.debugStack;
      this.debugStack.pushEngine(name);
    };
  }
});
enifed('ember-glimmer/component-managers/curly', ['exports', 'ember-babel', 'ember-utils', '@glimmer/reference', '@glimmer/runtime', 'ember-debug', 'ember-glimmer/component', 'ember-glimmer/utils/bindings', 'ember-metal', 'ember-glimmer/utils/process-args', 'ember-views', 'container', 'ember-glimmer/component-managers/abstract', 'ember-glimmer/utils/curly-component-state-bucket', 'ember-glimmer/utils/references'], function (exports, _emberBabel, _emberUtils, _reference, _runtime, _emberDebug, _component, _bindings, _emberMetal, _processArgs, _emberViews, _container, _abstract, _curlyComponentStateBucket, _references) {
  'use strict';

  exports.CurlyComponentDefinition = exports.PositionalArgumentReference = undefined;
  exports.validatePositionalParameters = validatePositionalParameters;
  exports.processComponentInitializationAssertions = processComponentInitializationAssertions;
  exports.initialRenderInstrumentDetails = initialRenderInstrumentDetails;
  exports.rerenderInstrumentDetails = rerenderInstrumentDetails;

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['template:components/-default'], ['template:components/-default']);

  var DEFAULT_LAYOUT = (0, _container.privatize)(_templateObject);

  function aliasIdToElementId(args, props) {
    if (args.named.has('id')) {
      (true && !(!args.named.has('elementId')) && (0, _emberDebug.assert)('You cannot invoke a component with both \'id\' and \'elementId\' at the same time.', !args.named.has('elementId')));

      props.elementId = props.id;
    }
  }

  // We must traverse the attributeBindings in reverse keeping track of
  // what has already been applied. This is essentially refining the concated
  // properties applying right to left.
  function applyAttributeBindings(element, attributeBindings, component, operations) {
    var seen = [];
    var i = attributeBindings.length - 1;

    while (i !== -1) {
      var binding = attributeBindings[i];
      var parsed = _bindings.AttributeBinding.parse(binding);
      var attribute = parsed[1];

      if (seen.indexOf(attribute) === -1) {
        seen.push(attribute);
        _bindings.AttributeBinding.install(element, component, parsed, operations);
      }

      i--;
    }

    if (seen.indexOf('id') === -1) {
      operations.addStaticAttribute(element, 'id', component.elementId);
    }

    if (seen.indexOf('style') === -1) {
      _bindings.IsVisibleBinding.install(element, component, operations);
    }
  }

  function tagName(vm) {
    var tagName = vm.dynamicScope().view.tagName;


    return _runtime.PrimitiveReference.create(tagName === '' ? null : tagName || 'div');
  }

  function ariaRole(vm) {
    return vm.getSelf().get('ariaRole');
  }

  var CurlyComponentLayoutCompiler = function () {
    function CurlyComponentLayoutCompiler(template) {
      (0, _emberBabel.classCallCheck)(this, CurlyComponentLayoutCompiler);

      this.template = template;
    }

    CurlyComponentLayoutCompiler.prototype.compile = function compile(builder) {
      builder.wrapLayout(this.template);
      builder.tag.dynamic(tagName);
      builder.attrs.dynamic('role', ariaRole);
      builder.attrs.static('class', 'ember-view');
    };

    return CurlyComponentLayoutCompiler;
  }();

  CurlyComponentLayoutCompiler.id = 'curly';

  var PositionalArgumentReference = exports.PositionalArgumentReference = function () {
    function PositionalArgumentReference(references) {
      (0, _emberBabel.classCallCheck)(this, PositionalArgumentReference);

      this.tag = (0, _reference.combineTagged)(references);
      this._references = references;
    }

    PositionalArgumentReference.prototype.value = function value() {
      return this._references.map(function (reference) {
        return reference.value();
      });
    };

    PositionalArgumentReference.prototype.get = function get(key) {
      return _references.PropertyReference.create(this, key);
    };

    return PositionalArgumentReference;
  }();

  var CurlyComponentManager = function (_AbstractManager) {
    (0, _emberBabel.inherits)(CurlyComponentManager, _AbstractManager);

    function CurlyComponentManager() {
      (0, _emberBabel.classCallCheck)(this, CurlyComponentManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractManager.apply(this, arguments));
    }

    CurlyComponentManager.prototype.prepareArgs = function prepareArgs(definition, args) {
      var componentPositionalParamsDefinition = definition.ComponentClass.class.positionalParams;

      if (true && componentPositionalParamsDefinition) {
        validatePositionalParameters(args.named, args.positional, componentPositionalParamsDefinition);
      }

      var componentHasRestStylePositionalParams = typeof componentPositionalParamsDefinition === 'string';
      var componentHasPositionalParams = componentHasRestStylePositionalParams || componentPositionalParamsDefinition.length > 0;
      var needsPositionalParamMunging = componentHasPositionalParams && args.positional.length !== 0;
      var isClosureComponent = definition.args;

      if (!needsPositionalParamMunging && !isClosureComponent) {
        return null;
      }

      var capturedArgs = args.capture();
      // grab raw positional references array
      var positional = capturedArgs.positional.references;

      // handle prep for closure component with positional params
      var curriedNamed = void 0;
      if (definition.args) {
        var remainingDefinitionPositionals = definition.args.positional.slice(positional.length);
        positional = positional.concat(remainingDefinitionPositionals);
        curriedNamed = definition.args.named;
      }

      // handle positionalParams
      var positionalParamsToNamed = void 0;
      if (componentHasRestStylePositionalParams) {
        var _positionalParamsToNa;

        positionalParamsToNamed = (_positionalParamsToNa = {}, _positionalParamsToNa[componentPositionalParamsDefinition] = new PositionalArgumentReference(positional), _positionalParamsToNa);
        positional = [];
      } else if (componentHasPositionalParams) {
        positionalParamsToNamed = {};
        var length = Math.min(positional.length, componentPositionalParamsDefinition.length);
        for (var i = 0; i < length; i++) {
          var name = componentPositionalParamsDefinition[i];
          positionalParamsToNamed[name] = positional[i];
        }
      }

      var named = (0, _emberUtils.assign)({}, curriedNamed, positionalParamsToNamed, capturedArgs.named.map);

      return { positional: positional, named: named };
    };

    CurlyComponentManager.prototype.create = function create(environment, definition, args, dynamicScope, callerSelfRef, hasBlock) {
      if (true) {
        this._pushToDebugStack('component:' + definition.name, environment);
      }

      var parentView = dynamicScope.view;

      var factory = definition.ComponentClass;

      var capturedArgs = args.named.capture();
      var props = (0, _processArgs.processComponentArgs)(capturedArgs);

      aliasIdToElementId(args, props);

      props.parentView = parentView;
      props[_component.HAS_BLOCK] = hasBlock;

      props._targetObject = callerSelfRef.value();

      var component = factory.create(props);

      var finalizer = (0, _emberMetal._instrumentStart)('render.component', initialRenderInstrumentDetails, component);

      dynamicScope.view = component;

      if (parentView !== null) {
        parentView.appendChild(component);
      }

      // We usually do this in the `didCreateElement`, but that hook doesn't fire for tagless components
      if (component.tagName === '') {
        if (environment.isInteractive) {
          component.trigger('willRender');
        }

        component._transitionTo('hasElement');

        if (environment.isInteractive) {
          component.trigger('willInsertElement');
        }
      }

      var bucket = new _curlyComponentStateBucket.default(environment, component, capturedArgs, finalizer);

      if (args.named.has('class')) {
        bucket.classRef = args.named.get('class');
      }

      if (true) {
        processComponentInitializationAssertions(component, props);
      }

      if (environment.isInteractive && component.tagName !== '') {
        component.trigger('willRender');
      }

      return bucket;
    };

    CurlyComponentManager.prototype.layoutFor = function layoutFor(definition, bucket, env) {
      var template = definition.template;
      if (!template) {
        var component = bucket.component;

        template = this.templateFor(component, env);
      }
      return env.getCompiledBlock(CurlyComponentLayoutCompiler, template);
    };

    CurlyComponentManager.prototype.templateFor = function templateFor(component, env) {
      var Template = (0, _emberMetal.get)(component, 'layout');
      var owner = component[_emberUtils.OWNER];
      if (Template) {
        return env.getTemplate(Template, owner);
      }
      var layoutName = (0, _emberMetal.get)(component, 'layoutName');
      if (layoutName) {
        var template = owner.lookup('template:' + layoutName);
        if (template) {
          return template;
        }
      }
      return owner.lookup(DEFAULT_LAYOUT);
    };

    CurlyComponentManager.prototype.getSelf = function getSelf(_ref) {
      var component = _ref.component;

      return component[_component.ROOT_REF];
    };

    CurlyComponentManager.prototype.didCreateElement = function didCreateElement(_ref2, element, operations) {
      var component = _ref2.component,
          classRef = _ref2.classRef,
          environment = _ref2.environment;

      (0, _emberViews.setViewElement)(component, element);

      var attributeBindings = component.attributeBindings,
          classNames = component.classNames,
          classNameBindings = component.classNameBindings;


      if (attributeBindings && attributeBindings.length) {
        applyAttributeBindings(element, attributeBindings, component, operations);
      } else {
        operations.addStaticAttribute(element, 'id', component.elementId);
        _bindings.IsVisibleBinding.install(element, component, operations);
      }

      if (classRef) {
        operations.addDynamicAttribute(element, 'class', classRef);
      }

      if (classNames && classNames.length) {
        classNames.forEach(function (name) {
          operations.addStaticAttribute(element, 'class', name);
        });
      }

      if (classNameBindings && classNameBindings.length) {
        classNameBindings.forEach(function (binding) {
          _bindings.ClassNameBinding.install(element, component, binding, operations);
        });
      }

      component._transitionTo('hasElement');

      if (environment.isInteractive) {
        component.trigger('willInsertElement');
      }
    };

    CurlyComponentManager.prototype.didRenderLayout = function didRenderLayout(bucket, bounds) {
      bucket.component[_component.BOUNDS] = bounds;
      bucket.finalize();

      if (true) {
        this.debugStack.pop();
      }
    };

    CurlyComponentManager.prototype.getTag = function getTag(_ref3) {
      var component = _ref3.component;

      return component[_component.DIRTY_TAG];
    };

    CurlyComponentManager.prototype.didCreate = function didCreate(_ref4) {
      var component = _ref4.component,
          environment = _ref4.environment;

      if (environment.isInteractive) {
        component._transitionTo('inDOM');
        component.trigger('didInsertElement');
        component.trigger('didRender');
      }
    };

    CurlyComponentManager.prototype.update = function update(bucket, _, dynamicScope) {
      var component = bucket.component,
          args = bucket.args,
          argsRevision = bucket.argsRevision,
          environment = bucket.environment;


      if (true) {
        this._pushToDebugStack(component._debugContainerKey, environment);
      }

      bucket.finalizer = (0, _emberMetal._instrumentStart)('render.component', rerenderInstrumentDetails, component);

      if (!args.tag.validate(argsRevision)) {
        var props = (0, _processArgs.processComponentArgs)(args);

        bucket.argsRevision = args.tag.value();

        component[_component.IS_DISPATCHING_ATTRS] = true;
        component.setProperties(props);
        component[_component.IS_DISPATCHING_ATTRS] = false;

        component.trigger('didUpdateAttrs');
        component.trigger('didReceiveAttrs');
      }

      if (environment.isInteractive) {
        component.trigger('willUpdate');
        component.trigger('willRender');
      }
    };

    CurlyComponentManager.prototype.didUpdateLayout = function didUpdateLayout(bucket) {
      bucket.finalize();

      if (true) {
        this.debugStack.pop();
      }
    };

    CurlyComponentManager.prototype.didUpdate = function didUpdate(_ref5) {
      var component = _ref5.component,
          environment = _ref5.environment;

      if (environment.isInteractive) {
        component.trigger('didUpdate');
        component.trigger('didRender');
      }
    };

    CurlyComponentManager.prototype.getDestructor = function getDestructor(stateBucket) {
      return stateBucket;
    };

    return CurlyComponentManager;
  }(_abstract.default);

  exports.default = CurlyComponentManager;
  function validatePositionalParameters(named, positional, positionalParamsDefinition) {
    if (true) {
      if (!named || !positional || !positional.length) {
        return;
      }

      var paramType = typeof positionalParamsDefinition;

      if (paramType === 'string') {
        (true && !(!named.has(positionalParamsDefinition)) && (0, _emberDebug.assert)('You cannot specify positional parameters and the hash argument `' + positionalParamsDefinition + '`.', !named.has(positionalParamsDefinition)));
      } else {
        if (positional.length < positionalParamsDefinition.length) {
          positionalParamsDefinition = positionalParamsDefinition.slice(0, positional.length);
        }

        for (var i = 0; i < positionalParamsDefinition.length; i++) {
          var name = positionalParamsDefinition[i];

          (true && !(!named.has(name)) && (0, _emberDebug.assert)('You cannot specify both a positional param (at position ' + i + ') and the hash argument `' + name + '`.', !named.has(name)));
        }
      }
    }
  }

  function processComponentInitializationAssertions(component, props) {
    (true && !(function () {
      var classNameBindings = component.classNameBindings;

      for (var i = 0; i < classNameBindings.length; i++) {
        var binding = classNameBindings[i];
        if (binding.split(' ').length > 1) {
          return false;
        }
      }
      return true;
    }()) && (0, _emberDebug.assert)('classNameBindings must not have spaces in them: ' + component.toString(), function () {
      var classNameBindings = component.classNameBindings;
      for (var i = 0; i < classNameBindings.length; i++) {
        var binding = classNameBindings[i];if (binding.split(' ').length > 1) {
          return false;
        }
      }return true;
    }()));
    (true && !(function () {
      var classNameBindings = component.classNameBindings,
          tagName = component.tagName;

      return tagName !== '' || !classNameBindings || classNameBindings.length === 0;
    }()) && (0, _emberDebug.assert)('You cannot use `classNameBindings` on a tag-less component: ' + component.toString(), function () {
      var classNameBindings = component.classNameBindings,
          tagName = component.tagName;
      return tagName !== '' || !classNameBindings || classNameBindings.length === 0;
    }()));
    (true && !(function () {
      var elementId = component.elementId,
          tagName = component.tagName;

      return tagName !== '' || props.id === elementId || !elementId && elementId !== '';
    }()) && (0, _emberDebug.assert)('You cannot use `elementId` on a tag-less component: ' + component.toString(), function () {
      var elementId = component.elementId,
          tagName = component.tagName;
      return tagName !== '' || props.id === elementId || !elementId && elementId !== '';
    }()));
    (true && !(function () {
      var attributeBindings = component.attributeBindings,
          tagName = component.tagName;

      return tagName !== '' || !attributeBindings || attributeBindings.length === 0;
    }()) && (0, _emberDebug.assert)('You cannot use `attributeBindings` on a tag-less component: ' + component.toString(), function () {
      var attributeBindings = component.attributeBindings,
          tagName = component.tagName;
      return tagName !== '' || !attributeBindings || attributeBindings.length === 0;
    }()));
  }

  function initialRenderInstrumentDetails(component) {
    return component.instrumentDetails({ initialRender: true });
  }

  function rerenderInstrumentDetails(component) {
    return component.instrumentDetails({ initialRender: false });
  }

  var MANAGER = new CurlyComponentManager();

  var CurlyComponentDefinition = exports.CurlyComponentDefinition = function (_ComponentDefinition) {
    (0, _emberBabel.inherits)(CurlyComponentDefinition, _ComponentDefinition);

    function CurlyComponentDefinition(name, ComponentClass, template, args, customManager) {
      (0, _emberBabel.classCallCheck)(this, CurlyComponentDefinition);

      var _this2 = (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition.call(this, name, customManager || MANAGER, ComponentClass));

      _this2.template = template;
      _this2.args = args;
      return _this2;
    }

    return CurlyComponentDefinition;
  }(_runtime.ComponentDefinition);
});
enifed('ember-glimmer/component-managers/mount', ['exports', 'ember-babel', '@glimmer/runtime', '@glimmer/reference', 'ember-glimmer/utils/references', 'ember-glimmer/component-managers/outlet', 'ember-glimmer/component-managers/abstract', 'ember-routing', 'ember/features'], function (exports, _emberBabel, _runtime, _reference, _references, _outlet, _abstract, _emberRouting, _features) {
  'use strict';

  exports.MountDefinition = undefined;

  var MountManager = function (_AbstractManager) {
    (0, _emberBabel.inherits)(MountManager, _AbstractManager);

    function MountManager() {
      (0, _emberBabel.classCallCheck)(this, MountManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractManager.apply(this, arguments));
    }

    MountManager.prototype.prepareArgs = function prepareArgs(definition, args) {
      return null;
    };

    MountManager.prototype.create = function create(environment, _ref, args, dynamicScope) {
      var name = _ref.name;

      if (true) {
        this._pushEngineToDebugStack('engine:' + name, environment);
      }

      dynamicScope.outletState = _reference.UNDEFINED_REFERENCE;

      var engine = environment.owner.buildChildEngineInstance(name);

      engine.boot();

      var bucket = { engine: engine };

      if (_features.EMBER_ENGINES_MOUNT_PARAMS) {
        bucket.modelReference = args.named.get('model');
      }

      return bucket;
    };

    MountManager.prototype.layoutFor = function layoutFor(definition, _ref2, env) {
      var engine = _ref2.engine;

      var template = engine.lookup('template:application');
      return env.getCompiledBlock(_outlet.OutletLayoutCompiler, template);
    };

    MountManager.prototype.getSelf = function getSelf(bucket) {
      var engine = bucket.engine,
          modelReference = bucket.modelReference;


      var applicationFactory = engine.factoryFor('controller:application');
      var controllerFactory = applicationFactory || (0, _emberRouting.generateControllerFactory)(engine, 'application');
      var controller = bucket.controller = controllerFactory.create();

      if (_features.EMBER_ENGINES_MOUNT_PARAMS) {
        var model = modelReference.value();
        bucket.modelRevision = modelReference.tag.value();
        controller.set('model', model);
      }

      return new _references.RootReference(controller);
    };

    MountManager.prototype.getDestructor = function getDestructor(_ref3) {
      var engine = _ref3.engine;

      return engine;
    };

    MountManager.prototype.didRenderLayout = function didRenderLayout() {
      if (true) {
        this.debugStack.pop();
      }
    };

    MountManager.prototype.update = function update(bucket) {
      if (_features.EMBER_ENGINES_MOUNT_PARAMS) {
        var controller = bucket.controller,
            modelReference = bucket.modelReference,
            modelRevision = bucket.modelRevision;


        if (!modelReference.tag.validate(modelRevision)) {
          var model = modelReference.value();
          bucket.modelRevision = modelReference.tag.value();
          controller.set('model', model);
        }
      }
    };

    return MountManager;
  }(_abstract.default);

  var MOUNT_MANAGER = new MountManager();

  var MountDefinition = exports.MountDefinition = function (_ComponentDefinition) {
    (0, _emberBabel.inherits)(MountDefinition, _ComponentDefinition);

    function MountDefinition(name) {
      (0, _emberBabel.classCallCheck)(this, MountDefinition);
      return (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition.call(this, name, MOUNT_MANAGER, null));
    }

    return MountDefinition;
  }(_runtime.ComponentDefinition);
});
enifed('ember-glimmer/component-managers/outlet', ['exports', 'ember-babel', 'ember-utils', '@glimmer/runtime', 'ember-metal', 'ember-glimmer/utils/references', 'ember-glimmer/component-managers/abstract'], function (exports, _emberBabel, _emberUtils, _runtime, _emberMetal, _references, _abstract) {
  'use strict';

  exports.OutletLayoutCompiler = exports.OutletComponentDefinition = exports.TopLevelOutletComponentDefinition = undefined;


  function instrumentationPayload(_ref) {
    var _ref$render = _ref.render,
        name = _ref$render.name,
        outlet = _ref$render.outlet;

    return { object: name + ':' + outlet };
  }

  function NOOP() {}

  var StateBucket = function () {
    function StateBucket(outletState) {
      (0, _emberBabel.classCallCheck)(this, StateBucket);

      this.outletState = outletState;
      this.instrument();
    }

    StateBucket.prototype.instrument = function instrument() {
      this.finalizer = (0, _emberMetal._instrumentStart)('render.outlet', instrumentationPayload, this.outletState);
    };

    StateBucket.prototype.finalize = function finalize() {
      var finalizer = this.finalizer;

      finalizer();
      this.finalizer = NOOP;
    };

    return StateBucket;
  }();

  var OutletComponentManager = function (_AbstractManager) {
    (0, _emberBabel.inherits)(OutletComponentManager, _AbstractManager);

    function OutletComponentManager() {
      (0, _emberBabel.classCallCheck)(this, OutletComponentManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractManager.apply(this, arguments));
    }

    OutletComponentManager.prototype.create = function create(environment, definition, args, dynamicScope) {
      if (true) {
        this._pushToDebugStack('template:' + definition.template.meta.moduleName, environment);
      }

      var outletStateReference = dynamicScope.outletState = dynamicScope.outletState.get('outlets').get(definition.outletName);
      var outletState = outletStateReference.value();
      return new StateBucket(outletState);
    };

    OutletComponentManager.prototype.layoutFor = function layoutFor(definition, bucket, env) {
      return env.getCompiledBlock(OutletLayoutCompiler, definition.template);
    };

    OutletComponentManager.prototype.getSelf = function getSelf(_ref2) {
      var outletState = _ref2.outletState;

      return new _references.RootReference(outletState.render.controller);
    };

    OutletComponentManager.prototype.didRenderLayout = function didRenderLayout(bucket) {
      bucket.finalize();

      if (true) {
        this.debugStack.pop();
      }
    };

    return OutletComponentManager;
  }(_abstract.default);

  var MANAGER = new OutletComponentManager();

  var TopLevelOutletComponentManager = function (_OutletComponentManag) {
    (0, _emberBabel.inherits)(TopLevelOutletComponentManager, _OutletComponentManag);

    function TopLevelOutletComponentManager() {
      (0, _emberBabel.classCallCheck)(this, TopLevelOutletComponentManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _OutletComponentManag.apply(this, arguments));
    }

    TopLevelOutletComponentManager.prototype.create = function create(environment, definition, args, dynamicScope) {
      if (true) {
        this._pushToDebugStack('template:' + definition.template.meta.moduleName, environment);
      }
      return new StateBucket(dynamicScope.outletState.value());
    };

    TopLevelOutletComponentManager.prototype.layoutFor = function layoutFor(definition, bucket, env) {
      return env.getCompiledBlock(TopLevelOutletLayoutCompiler, definition.template);
    };

    return TopLevelOutletComponentManager;
  }(OutletComponentManager);

  var TOP_LEVEL_MANAGER = new TopLevelOutletComponentManager();

  var TopLevelOutletComponentDefinition = exports.TopLevelOutletComponentDefinition = function (_ComponentDefinition) {
    (0, _emberBabel.inherits)(TopLevelOutletComponentDefinition, _ComponentDefinition);

    function TopLevelOutletComponentDefinition(instance) {
      (0, _emberBabel.classCallCheck)(this, TopLevelOutletComponentDefinition);

      var _this3 = (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition.call(this, 'outlet', TOP_LEVEL_MANAGER, instance));

      _this3.template = instance.template;
      (0, _emberUtils.generateGuid)(_this3);
      return _this3;
    }

    return TopLevelOutletComponentDefinition;
  }(_runtime.ComponentDefinition);

  var TopLevelOutletLayoutCompiler = function () {
    function TopLevelOutletLayoutCompiler(template) {
      (0, _emberBabel.classCallCheck)(this, TopLevelOutletLayoutCompiler);

      this.template = template;
    }

    TopLevelOutletLayoutCompiler.prototype.compile = function compile(builder) {
      builder.wrapLayout(this.template);
      builder.tag.static('div');
      builder.attrs.static('id', (0, _emberUtils.guidFor)(this));
      builder.attrs.static('class', 'ember-view');
    };

    return TopLevelOutletLayoutCompiler;
  }();

  TopLevelOutletLayoutCompiler.id = 'top-level-outlet';

  var OutletComponentDefinition = exports.OutletComponentDefinition = function (_ComponentDefinition2) {
    (0, _emberBabel.inherits)(OutletComponentDefinition, _ComponentDefinition2);

    function OutletComponentDefinition(outletName, template) {
      (0, _emberBabel.classCallCheck)(this, OutletComponentDefinition);

      var _this4 = (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition2.call(this, 'outlet', MANAGER, null));

      _this4.outletName = outletName;
      _this4.template = template;
      (0, _emberUtils.generateGuid)(_this4);
      return _this4;
    }

    return OutletComponentDefinition;
  }(_runtime.ComponentDefinition);

  var OutletLayoutCompiler = exports.OutletLayoutCompiler = function () {
    function OutletLayoutCompiler(template) {
      (0, _emberBabel.classCallCheck)(this, OutletLayoutCompiler);

      this.template = template;
    }

    OutletLayoutCompiler.prototype.compile = function compile(builder) {
      builder.wrapLayout(this.template);
    };

    return OutletLayoutCompiler;
  }();

  OutletLayoutCompiler.id = 'outlet';
});
enifed('ember-glimmer/component-managers/render', ['exports', 'ember-babel', '@glimmer/runtime', 'ember-debug', 'ember-glimmer/utils/references', 'ember-routing', 'ember-glimmer/component-managers/outlet', 'ember-glimmer/component-managers/abstract'], function (exports, _emberBabel, _runtime, _emberDebug, _references, _emberRouting, _outlet, _abstract) {
  'use strict';

  exports.RenderDefinition = exports.NON_SINGLETON_RENDER_MANAGER = exports.SINGLETON_RENDER_MANAGER = exports.AbstractRenderManager = undefined;

  var AbstractRenderManager = exports.AbstractRenderManager = function (_AbstractManager) {
    (0, _emberBabel.inherits)(AbstractRenderManager, _AbstractManager);

    function AbstractRenderManager() {
      (0, _emberBabel.classCallCheck)(this, AbstractRenderManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractManager.apply(this, arguments));
    }

    AbstractRenderManager.prototype.layoutFor = function layoutFor(definition, bucket, env) {
      return env.getCompiledBlock(_outlet.OutletLayoutCompiler, definition.template);
    };

    AbstractRenderManager.prototype.getSelf = function getSelf(_ref) {
      var controller = _ref.controller;

      return new _references.RootReference(controller);
    };

    return AbstractRenderManager;
  }(_abstract.default);

  if (true) {
    AbstractRenderManager.prototype.didRenderLayout = function () {
      this.debugStack.pop();
    };
  }

  var SingletonRenderManager = function (_AbstractRenderManage) {
    (0, _emberBabel.inherits)(SingletonRenderManager, _AbstractRenderManage);

    function SingletonRenderManager() {
      (0, _emberBabel.classCallCheck)(this, SingletonRenderManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractRenderManage.apply(this, arguments));
    }

    SingletonRenderManager.prototype.create = function create(environment, definition, args, dynamicScope) {
      var name = definition.name,
          env = definition.env;

      var controller = env.owner.lookup('controller:' + name) || (0, _emberRouting.generateController)(env.owner, name);

      if (true) {
        this._pushToDebugStack('controller:' + name + ' (with the render helper)', environment);
      }

      if (dynamicScope.rootOutletState) {
        dynamicScope.outletState = dynamicScope.rootOutletState.getOrphan(name);
      }

      return { controller: controller };
    };

    return SingletonRenderManager;
  }(AbstractRenderManager);

  var SINGLETON_RENDER_MANAGER = exports.SINGLETON_RENDER_MANAGER = new SingletonRenderManager();

  var NonSingletonRenderManager = function (_AbstractRenderManage2) {
    (0, _emberBabel.inherits)(NonSingletonRenderManager, _AbstractRenderManage2);

    function NonSingletonRenderManager() {
      (0, _emberBabel.classCallCheck)(this, NonSingletonRenderManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _AbstractRenderManage2.apply(this, arguments));
    }

    NonSingletonRenderManager.prototype.create = function create(environment, definition, args, dynamicScope) {
      var name = definition.name,
          env = definition.env;

      var modelRef = args.positional.at(0);
      var controllerFactory = env.owner.factoryFor('controller:' + name);

      var factory = controllerFactory || (0, _emberRouting.generateControllerFactory)(env.owner, name);
      var controller = factory.create({ model: modelRef.value() });

      if (true) {
        this._pushToDebugStack('controller:' + name + ' (with the render helper)', environment);
      }

      if (dynamicScope.rootOutletState) {
        dynamicScope.outletState = dynamicScope.rootOutletState.getOrphan(name);
      }

      return { controller: controller, model: modelRef };
    };

    NonSingletonRenderManager.prototype.update = function update(_ref2, dynamicScope) {
      var controller = _ref2.controller,
          model = _ref2.model;

      controller.set('model', model.value());
    };

    NonSingletonRenderManager.prototype.getDestructor = function getDestructor(_ref3) {
      var controller = _ref3.controller;

      return controller;
    };

    return NonSingletonRenderManager;
  }(AbstractRenderManager);

  var NON_SINGLETON_RENDER_MANAGER = exports.NON_SINGLETON_RENDER_MANAGER = new NonSingletonRenderManager();

  var RenderDefinition = exports.RenderDefinition = function (_ComponentDefinition) {
    (0, _emberBabel.inherits)(RenderDefinition, _ComponentDefinition);

    function RenderDefinition(name, template, env, manager) {
      (0, _emberBabel.classCallCheck)(this, RenderDefinition);

      var _this4 = (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition.call(this, 'render', manager, null));

      _this4.name = name;
      _this4.template = template;
      _this4.env = env;
      return _this4;
    }

    return RenderDefinition;
  }(_runtime.ComponentDefinition);
});
enifed('ember-glimmer/component-managers/root', ['exports', 'ember-babel', '@glimmer/runtime', 'ember-metal', 'ember-debug', 'ember-glimmer/utils/curly-component-state-bucket', 'ember-glimmer/component-managers/curly'], function (exports, _emberBabel, _runtime, _emberMetal, _emberDebug, _curlyComponentStateBucket, _curly) {
  'use strict';

  exports.RootComponentDefinition = undefined;

  var RootComponentManager = function (_CurlyComponentManage) {
    (0, _emberBabel.inherits)(RootComponentManager, _CurlyComponentManage);

    function RootComponentManager() {
      (0, _emberBabel.classCallCheck)(this, RootComponentManager);
      return (0, _emberBabel.possibleConstructorReturn)(this, _CurlyComponentManage.apply(this, arguments));
    }

    RootComponentManager.prototype.create = function create(environment, definition, args, dynamicScope, currentScope, hasBlock) {
      var component = definition.ComponentClass.create();

      if (true) {
        this._pushToDebugStack(component._debugContainerKey, environment);
      }

      var finalizer = (0, _emberMetal._instrumentStart)('render.component', _curly.initialRenderInstrumentDetails, component);

      dynamicScope.view = component;

      // We usually do this in the `didCreateElement`, but that hook doesn't fire for tagless components
      if (component.tagName === '') {
        if (environment.isInteractive) {
          component.trigger('willRender');
        }

        component._transitionTo('hasElement');

        if (environment.isInteractive) {
          component.trigger('willInsertElement');
        }
      }

      if (true) {
        (0, _curly.processComponentInitializationAssertions)(component, {});
      }

      return new _curlyComponentStateBucket.default(environment, component, args.named.capture(), finalizer);
    };

    return RootComponentManager;
  }(_curly.default);

  var ROOT_MANAGER = new RootComponentManager();

  var RootComponentDefinition = exports.RootComponentDefinition = function (_ComponentDefinition) {
    (0, _emberBabel.inherits)(RootComponentDefinition, _ComponentDefinition);

    function RootComponentDefinition(instance) {
      (0, _emberBabel.classCallCheck)(this, RootComponentDefinition);

      var _this2 = (0, _emberBabel.possibleConstructorReturn)(this, _ComponentDefinition.call(this, '-root', ROOT_MANAGER, {
        class: instance.constructor,
        create: function () {
          return instance;
        }
      }));

      _this2.template = undefined;
      _this2.args = undefined;
      return _this2;
    }

    return RootComponentDefinition;
  }(_runtime.ComponentDefinition);
});
enifed('ember-glimmer/component', ['exports', 'ember-utils', 'ember-views', 'ember-runtime', 'ember-debug', 'ember-metal', 'ember-glimmer/utils/references', '@glimmer/reference', '@glimmer/runtime'], function (exports, _emberUtils, _emberViews, _emberRuntime, _emberDebug, _emberMetal, _references, _reference, _runtime) {
  'use strict';

  exports.BOUNDS = exports.HAS_BLOCK = exports.IS_DISPATCHING_ATTRS = exports.ROOT_REF = exports.ARGS = exports.DIRTY_TAG = undefined;

  var _CoreView$extend;

  var DIRTY_TAG = exports.DIRTY_TAG = (0, _emberUtils.symbol)('DIRTY_TAG');
  var ARGS = exports.ARGS = (0, _emberUtils.symbol)('ARGS');
  var ROOT_REF = exports.ROOT_REF = (0, _emberUtils.symbol)('ROOT_REF');
  var IS_DISPATCHING_ATTRS = exports.IS_DISPATCHING_ATTRS = (0, _emberUtils.symbol)('IS_DISPATCHING_ATTRS');
  var HAS_BLOCK = exports.HAS_BLOCK = (0, _emberUtils.symbol)('HAS_BLOCK');
  var BOUNDS = exports.BOUNDS = (0, _emberUtils.symbol)('BOUNDS');

  /**
  @module @ember/component
  */

  /**
    A `Component` is a view that is completely
    isolated. Properties accessed in its templates go
    to the view object and actions are targeted at
    the view object. There is no access to the
    surrounding context or outer controller; all
    contextual information must be passed in.
  
    The easiest way to create a `Component` is via
    a template. If you name a template
    `app/components/my-foo.hbs`, you will be able to use
    `{{my-foo}}` in other templates, which will make
    an instance of the isolated component.
  
    ```app/components/my-foo.hbs
    {{person-profile person=currentUser}}
    ```
  
    ```app/components/person-profile.hbs
    <h1>{{person.title}}</h1>
    <img src={{person.avatar}}>
    <p class='signature'>{{person.signature}}</p>
    ```
  
    You can use `yield` inside a template to
    include the **contents** of any block attached to
    the component. The block will be executed in the
    context of the surrounding context or outer controller:
  
    ```handlebars
    {{#person-profile person=currentUser}}
      <p>Admin mode</p>
      {{! Executed in the controller's context. }}
    {{/person-profile}}
    ```
  
    ```app/components/person-profile.hbs
    <h1>{{person.title}}</h1>
    {{! Executed in the component's context. }}
    {{yield}} {{! block contents }}
    ```
  
    If you want to customize the component, in order to
    handle events or actions, you implement a subclass
    of `Component` named after the name of the
    component.
  
    For example, you could implement the action
    `hello` for the `person-profile` component:
  
    ```app/components/person-profile.js
    import Component from '@ember/component';
  
    export default Component.extend({
      actions: {
        hello(name) {
          console.log("Hello", name);
        }
      }
    });
    ```
  
    And then use it in the component's template:
  
    ```app/templates/components/person-profile.hbs
    <h1>{{person.title}}</h1>
    {{yield}} <!-- block contents -->
    <button {{action 'hello' person.name}}>
      Say Hello to {{person.name}}
    </button>
    ```
  
    Components must have a `-` in their name to avoid
    conflicts with built-in controls that wrap HTML
    elements. This is consistent with the same
    requirement in web components.
  
  
    ## HTML Tag
  
    The default HTML tag name used for a component's DOM representation is `div`.
    This can be customized by setting the `tagName` property.
    The following component class:
  
    ```app/components/emphasized-paragraph.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'em'
    });
    ```
  
    Would result in instances with the following HTML:
  
    ```html
    <em id="ember1" class="ember-view"></em>
    ```
  
  
    ## HTML `class` Attribute
  
    The HTML `class` attribute of a component's tag can be set by providing a
    `classNames` property that is set to an array of strings:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      classNames: ['my-class', 'my-other-class']
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view my-class my-other-class"></div>
    ```
  
    `class` attribute values can also be set by providing a `classNameBindings`
    property set to an array of properties names for the component. The return value
    of these properties will be added as part of the value for the components's `class`
    attribute. These properties can be computed properties:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
    import { computed } from '@ember/object';
  
    export default Component.extend({
      classNameBindings: ['propertyA', 'propertyB'],
  
      propertyA: 'from-a',
      propertyB: computed(function() {
        if (someLogic) { return 'from-b'; }
      })
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view from-a from-b"></div>
    ```
  
    If the value of a class name binding returns a boolean the property name
    itself will be used as the class name if the property is true.
    The class name will not be added if the value is `false` or `undefined`.
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      classNameBindings: ['hovered'],
  
      hovered: true
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view hovered"></div>
    ```
  
    When using boolean class name bindings you can supply a string value other
    than the property name for use as the `class` HTML attribute by appending the
    preferred value after a ":" character when defining the binding:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      classNameBindings: ['awesome:so-very-cool'],
  
      awesome: true
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view so-very-cool"></div>
    ```
  
    Boolean value class name bindings whose property names are in a
    camelCase-style format will be converted to a dasherized format:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      classNameBindings: ['isUrgent'],
  
      isUrgent: true
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view is-urgent"></div>
    ```
  
    Class name bindings can also refer to object values that are found by
    traversing a path relative to the component itself:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
    import EmberObject from '@ember/object';
  
    export default Component.extend({
      classNameBindings: ['messages.empty'],
  
      messages: EmberObject.create({
        empty: true
      })
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view empty"></div>
    ```
  
    If you want to add a class name for a property which evaluates to true and
    and a different class name if it evaluates to false, you can pass a binding
    like this:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      classNameBindings: ['isEnabled:enabled:disabled'],
      isEnabled: true
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view enabled"></div>
    ```
  
    When isEnabled is `false`, the resulting HTML representation looks like
    this:
  
    ```html
    <div id="ember1" class="ember-view disabled"></div>
    ```
  
    This syntax offers the convenience to add a class if a property is `false`:
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    // Applies no class when isEnabled is true and class 'disabled' when isEnabled is false
    export default Component.extend({
      classNameBindings: ['isEnabled::disabled'],
      isEnabled: true
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view"></div>
    ```
  
    When the `isEnabled` property on the component is set to `false`, it will result
    in component instances with an HTML representation of:
  
    ```html
    <div id="ember1" class="ember-view disabled"></div>
    ```
  
    Updates to the value of a class name binding will result in automatic
    update of the  HTML `class` attribute in the component's rendered HTML
    representation. If the value becomes `false` or `undefined` the class name
    will be removed.
    Both `classNames` and `classNameBindings` are concatenated properties. See
    [EmberObject](/api/classes/Ember.Object.html) documentation for more
    information about concatenated properties.
  
  
    ## HTML Attributes
  
    The HTML attribute section of a component's tag can be set by providing an
    `attributeBindings` property set to an array of property names on the component.
    The return value of these properties will be used as the value of the component's
    HTML associated attribute:
  
    ```app/components/my-anchor.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'a',
      attributeBindings: ['href'],
  
      href: 'http://google.com'
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <a id="ember1" class="ember-view" href="http://google.com"></a>
    ```
  
    One property can be mapped on to another by placing a ":" between
    the source property and the destination property:
  
    ```app/components/my-anchor.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'a',
      attributeBindings: ['url:href'],
  
      url: 'http://google.com'
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <a id="ember1" class="ember-view" href="http://google.com"></a>
    ```
  
    Namespaced attributes (e.g. `xlink:href`) are supported, but have to be
    mapped, since `:` is not a valid character for properties in Javascript:
  
    ```app/components/my-use.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'use',
      attributeBindings: ['xlinkHref:xlink:href'],
  
      xlinkHref: '#triangle'
    });
    ```
  
    Will result in component instances with an HTML representation of:
  
    ```html
    <use xlink:href="#triangle"></use>
    ```
  
    If the return value of an `attributeBindings` monitored property is a boolean
    the attribute will be present or absent depending on the value:
  
    ```app/components/my-text-input.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'input',
      attributeBindings: ['disabled'],
  
      disabled: false
    });
    ```
  
    Will result in a component instance with an HTML representation of:
  
    ```html
    <input id="ember1" class="ember-view" />
    ```
  
    `attributeBindings` can refer to computed properties:
  
    ```app/components/my-text-input.js
    import Component from '@ember/component';
    import { computed } from '@ember/object';
  
    export default Component.extend({
      tagName: 'input',
      attributeBindings: ['disabled'],
  
      disabled: computed(function() {
        if (someLogic) {
          return true;
        } else {
          return false;
        }
      })
    });
    ```
  
    To prevent setting an attribute altogether, use `null` or `undefined` as the
    return value of the `attributeBindings` monitored property:
  
    ```app/components/my-text-input.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'form',
      attributeBindings: ['novalidate'],
      novalidate: null
    });
    ```
  
    Updates to the property of an attribute binding will result in automatic
    update of the  HTML attribute in the component's rendered HTML representation.
    `attributeBindings` is a concatenated property. See [EmberObject](/api/classes/Ember.Object.html)
    documentation for more information about concatenated properties.
  
  
    ## Layouts
  
    See [Ember.Templates.helpers.yield](/api/classes/Ember.Templates.helpers.html#method_yield)
    for more information.
  
    Layout can be used to wrap content in a component. In addition
    to wrapping content in a Component's template, you can also use
    the public layout API in your Component JavaScript.
  
    ```app/templates/components/person-profile.hbs
      <h1>Person's Title</h1>
      <div class='details'>{{yield}}</div>
    ```
  
    ```app/components/person-profile.js
      import Component from '@ember/component';
      import layout from '../templates/components/person-profile';
  
      export default Component.extend({
        layout
      });
    ```
  
    The above will result in the following HTML output:
  
    ```html
      <h1>Person's Title</h1>
      <div class="details">
        <h2>Chief Basket Weaver</h2>
        <h3>Fisherman Industries</h3>
      </div>
    ```
  
  
    ## Responding to Browser Events
  
    Components can respond to user-initiated events in one of three ways: method
    implementation, through an event manager, and through `{{action}}` helper use
    in their template or layout.
  
  
    ### Method Implementation
  
    Components can respond to user-initiated events by implementing a method that
    matches the event name. A `jQuery.Event` object will be passed as the
    argument to this method.
  
    ```app/components/my-widget.js
    import Component from '@ember/component';
  
    export default Component.extend({
      click(event) {
        // will be called when an instance's
        // rendered element is clicked
      }
    });
    ```
  
  
    ### `{{action}}` Helper
  
    See [Ember.Templates.helpers.action](/api/classes/Ember.Templates.helpers.html#method_action).
  
  
    ### Event Names
  
    All of the event handling approaches described above respond to the same set
    of events. The names of the built-in events are listed below. (The hash of
    built-in events exists in `Ember.EventDispatcher`.) Additional, custom events
    can be registered by using `Ember.Application.customEvents`.
  
    Touch events:
  
    * `touchStart`
    * `touchMove`
    * `touchEnd`
    * `touchCancel`
  
    Keyboard events:
  
    * `keyDown`
    * `keyUp`
    * `keyPress`
  
    Mouse events:
  
    * `mouseDown`
    * `mouseUp`
    * `contextMenu`
    * `click`
    * `doubleClick`
    * `mouseMove`
    * `focusIn`
    * `focusOut`
    * `mouseEnter`
    * `mouseLeave`
  
    Form events:
  
    * `submit`
    * `change`
    * `focusIn`
    * `focusOut`
    * `input`
  
    HTML5 drag and drop events:
  
    * `dragStart`
    * `drag`
    * `dragEnter`
    * `dragLeave`
    * `dragOver`
    * `dragEnd`
    * `drop`
  
    @class Component
    @extends Ember.CoreView
    @uses Ember.TargetActionSupport
    @uses Ember.ClassNamesSupport
    @uses Ember.ActionSupport
    @uses Ember.ViewMixin
    @uses Ember.ViewStateSupport
    @public
  */
  var Component = _emberViews.CoreView.extend(_emberViews.ChildViewsSupport, _emberViews.ViewStateSupport, _emberViews.ClassNamesSupport, _emberRuntime.TargetActionSupport, _emberViews.ActionSupport, _emberViews.ViewMixin, (_CoreView$extend = {
    isComponent: true,

    init: function () {
      var _this = this;

      this._super.apply(this, arguments);
      this[IS_DISPATCHING_ATTRS] = false;
      this[DIRTY_TAG] = new _reference.DirtyableTag();
      this[ROOT_REF] = new _references.RootReference(this);
      this[BOUNDS] = null;

      // If a `defaultLayout` was specified move it to the `layout` prop.
      // `layout` is no longer a CP, so this just ensures that the `defaultLayout`
      // logic is supported with a deprecation
      if (this.defaultLayout && !this.layout) {
        (true && !(false) && (0, _emberDebug.deprecate)('Specifying `defaultLayout` to ' + this + ' is deprecated. Please use `layout` instead.', false, {
          id: 'ember-views.component.defaultLayout',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-component-defaultlayout'
        }));


        this.layout = this.defaultLayout;
      }

      // If in a tagless component, assert that no event handlers are defined
      (true && !(this.tagName !== '' || !this.renderer._destinedForDOM || !function () {
        var eventDispatcher = (0, _emberUtils.getOwner)(_this).lookup('event_dispatcher:main');
        var events = eventDispatcher && eventDispatcher._finalEvents || {};

        for (var key in events) {
          var methodName = events[key];

          if (typeof _this[methodName] === 'function') {
            return true; // indicate that the assertion should be triggered
          }
        }
      }()) && (0, _emberDebug.assert)('You can not define a function that handles DOM events in the `' + this + '` tagless component since it doesn\'t have any DOM element.', this.tagName !== '' || !this.renderer._destinedForDOM || !function () {
        var eventDispatcher = (0, _emberUtils.getOwner)(_this).lookup('event_dispatcher:main');var events = eventDispatcher && eventDispatcher._finalEvents || {};for (var key in events) {
          var methodName = events[key];if (typeof _this[methodName] === 'function') {
            return true;
          }
        }
      }()));
      (true && !(!(this.tagName && this.tagName.isDescriptor)) && (0, _emberDebug.assert)('You cannot use a computed property for the component\'s `tagName` (' + this + ').', !(this.tagName && this.tagName.isDescriptor)));
    },
    rerender: function () {
      this[DIRTY_TAG].dirty();
      this._super();
    },
    __defineNonEnumerable: function (property) {
      this[property.name] = property.descriptor.value;
    }
  }, _CoreView$extend[_emberMetal.PROPERTY_DID_CHANGE] = function (key) {
    if (this[IS_DISPATCHING_ATTRS]) {
      return;
    }

    var args = void 0,
        reference = void 0;

    if ((args = this[ARGS]) && (reference = args[key])) {
      if (reference[_references.UPDATE]) {
        reference[_references.UPDATE]((0, _emberMetal.get)(this, key));
      }
    }
  }, _CoreView$extend.getAttr = function (key) {
    // TODO Intimate API should be deprecated
    return this.get(key);
  }, _CoreView$extend.readDOMAttr = function (name) {
    var element = (0, _emberViews.getViewElement)(this);
    return (0, _runtime.readDOMAttr)(element, name);
  }, _CoreView$extend));

  Component[_emberUtils.NAME_KEY] = 'Ember.Component';

  Component.reopenClass({
    isComponentFactory: true,
    positionalParams: []
  });

  exports.default = Component;
});
enifed('ember-glimmer/components/checkbox', ['exports', 'ember-metal', 'ember-glimmer/component', 'ember-glimmer/templates/empty'], function (exports, _emberMetal, _component, _empty) {
  'use strict';

  exports.default = _component.default.extend({
    layout: _empty.default,
    classNames: ['ember-checkbox'],

    tagName: 'input',

    attributeBindings: ['type', 'checked', 'indeterminate', 'disabled', 'tabindex', 'name', 'autofocus', 'required', 'form'],

    type: 'checkbox',
    disabled: false,
    indeterminate: false,

    didInsertElement: function () {
      this._super.apply(this, arguments);
      (0, _emberMetal.get)(this, 'element').indeterminate = !!(0, _emberMetal.get)(this, 'indeterminate');
    },
    change: function () {
      (0, _emberMetal.set)(this, 'checked', this.$().prop('checked'));
    }
  });
});
enifed('ember-glimmer/components/link-to', ['exports', 'ember-console', 'ember-debug', 'ember-metal', 'ember-runtime', 'ember-views', 'ember-glimmer/templates/link-to', 'ember-glimmer/component'], function (exports, _emberConsole, _emberDebug, _emberMetal, _emberRuntime, _emberViews, _linkTo, _component) {
  'use strict';

  /**
    @module @ember/routing
  */
  /**
    `LinkComponent` renders an element whose `click` event triggers a
    transition of the application's instance of `Router` to
    a supplied route by name.
  
    `LinkComponent` components are invoked with {{#link-to}}. Properties
    of this class can be overridden with `reopen` to customize application-wide
    behavior.
  
    @class LinkComponent
    @extends Component
    @see {Ember.Templates.helpers.link-to}
    @public
  **/
  var LinkComponent = _component.default.extend({
    layout: _linkTo.default,

    tagName: 'a',

    /**
      @deprecated Use current-when instead.
      @property currentWhen
      @private
    */
    currentWhen: (0, _emberRuntime.deprecatingAlias)('current-when', { id: 'ember-routing-view.deprecated-current-when', until: '3.0.0' }),

    /**
      Used to determine when this `LinkComponent` is active.
       @property currentWhen
      @public
    */
    'current-when': null,

    /**
      Sets the `title` attribute of the `LinkComponent`'s HTML element.
       @property title
      @default null
      @public
    **/
    title: null,

    /**
      Sets the `rel` attribute of the `LinkComponent`'s HTML element.
       @property rel
      @default null
      @public
    **/
    rel: null,

    /**
      Sets the `tabindex` attribute of the `LinkComponent`'s HTML element.
       @property tabindex
      @default null
      @public
    **/
    tabindex: null,

    /**
      Sets the `target` attribute of the `LinkComponent`'s HTML element.
       @since 1.8.0
      @property target
      @default null
      @public
    **/
    target: null,

    /**
      The CSS class to apply to `LinkComponent`'s element when its `active`
      property is `true`.
       @property activeClass
      @type String
      @default active
      @public
    **/
    activeClass: 'active',

    /**
      The CSS class to apply to `LinkComponent`'s element when its `loading`
      property is `true`.
       @property loadingClass
      @type String
      @default loading
      @private
    **/
    loadingClass: 'loading',

    /**
      The CSS class to apply to a `LinkComponent`'s element when its `disabled`
      property is `true`.
       @property disabledClass
      @type String
      @default disabled
      @private
    **/
    disabledClass: 'disabled',
    _isDisabled: false,

    /**
      Determines whether the `LinkComponent` will trigger routing via
      the `replaceWith` routing strategy.
       @property replace
      @type Boolean
      @default false
      @public
    **/
    replace: false,

    /**
      By default the `{{link-to}}` component will bind to the `href` and
      `title` attributes. It's discouraged that you override these defaults,
      however you can push onto the array if needed.
       @property attributeBindings
      @type Array | String
      @default ['title', 'rel', 'tabindex', 'target']
      @public
    */
    attributeBindings: ['href', 'title', 'rel', 'tabindex', 'target'],

    /**
      By default the `{{link-to}}` component will bind to the `active`, `loading`,
      and `disabled` classes. It is discouraged to override these directly.
       @property classNameBindings
      @type Array
      @default ['active', 'loading', 'disabled', 'ember-transitioning-in', 'ember-transitioning-out']
      @public
    */
    classNameBindings: ['active', 'loading', 'disabled', 'transitioningIn', 'transitioningOut'],

    /**
      By default the `{{link-to}}` component responds to the `click` event. You
      can override this globally by setting this property to your custom
      event name.
       This is particularly useful on mobile when one wants to avoid the 300ms
      click delay using some sort of custom `tap` event.
       @property eventName
      @type String
      @default click
      @private
    */
    eventName: 'click',

    init: function () {
      this._super.apply(this, arguments);

      // Map desired event name to invoke function
      var eventName = (0, _emberMetal.get)(this, 'eventName');
      this.on(eventName, this, this._invoke);
    },


    _routing: _emberRuntime.inject.service('-routing'),

    /**
      Accessed as a classname binding to apply the `LinkComponent`'s `disabledClass`
      CSS `class` to the element when the link is disabled.
       When `true` interactions with the element will not trigger route changes.
      @property disabled
      @private
    */
    disabled: (0, _emberMetal.computed)({
      get: function (key, value) {
        return false;
      },
      set: function (key, value) {
        if (value !== undefined) {
          this.set('_isDisabled', value);
        }

        return value ? (0, _emberMetal.get)(this, 'disabledClass') : false;
      }
    }),

    _computeActive: function (routerState) {
      if ((0, _emberMetal.get)(this, 'loading')) {
        return false;
      }

      var routing = (0, _emberMetal.get)(this, '_routing');
      var models = (0, _emberMetal.get)(this, 'models');
      var resolvedQueryParams = (0, _emberMetal.get)(this, 'resolvedQueryParams');
      var currentWhen = (0, _emberMetal.get)(this, 'current-when');

      if (typeof currentWhen === 'boolean') {
        return currentWhen ? (0, _emberMetal.get)(this, 'activeClass') : false;
      }

      var isCurrentWhenSpecified = !!currentWhen;
      currentWhen = currentWhen || (0, _emberMetal.get)(this, 'qualifiedRouteName');
      currentWhen = currentWhen.split(' ');

      for (var i = 0; i < currentWhen.length; i++) {
        if (routing.isActiveForRoute(models, resolvedQueryParams, currentWhen[i], routerState, isCurrentWhenSpecified)) {
          return (0, _emberMetal.get)(this, 'activeClass');
        }
      }

      return false;
    },


    /**
      Accessed as a classname binding to apply the `LinkComponent`'s `activeClass`
      CSS `class` to the element when the link is active.
       A `LinkComponent` is considered active when its `currentWhen` property is `true`
      or the application's current route is the route the `LinkComponent` would trigger
      transitions into.
       The `currentWhen` property can match against multiple routes by separating
      route names using the ` ` (space) character.
       @property active
      @private
    */
    active: (0, _emberMetal.computed)('attrs.params', '_routing.currentState', function computeLinkToComponentActive() {
      var currentState = (0, _emberMetal.get)(this, '_routing.currentState');
      if (!currentState) {
        return false;
      }

      return this._computeActive(currentState);
    }),

    willBeActive: (0, _emberMetal.computed)('_routing.targetState', function computeLinkToComponentWillBeActive() {
      var routing = (0, _emberMetal.get)(this, '_routing');
      var targetState = (0, _emberMetal.get)(routing, 'targetState');
      if ((0, _emberMetal.get)(routing, 'currentState') === targetState) {
        return;
      }

      return !!this._computeActive(targetState);
    }),

    transitioningIn: (0, _emberMetal.computed)('active', 'willBeActive', function computeLinkToComponentTransitioningIn() {
      if ((0, _emberMetal.get)(this, 'willBeActive') === true && !(0, _emberMetal.get)(this, 'active')) {
        return 'ember-transitioning-in';
      } else {
        return false;
      }
    }),

    transitioningOut: (0, _emberMetal.computed)('active', 'willBeActive', function computeLinkToComponentTransitioningOut() {
      if ((0, _emberMetal.get)(this, 'willBeActive') === false && (0, _emberMetal.get)(this, 'active')) {
        return 'ember-transitioning-out';
      } else {
        return false;
      }
    }),

    _invoke: function (event) {
      if (!(0, _emberViews.isSimpleClick)(event)) {
        return true;
      }

      var preventDefault = (0, _emberMetal.get)(this, 'preventDefault');
      var targetAttribute = (0, _emberMetal.get)(this, 'target');

      if (preventDefault !== false) {
        if (!targetAttribute || targetAttribute === '_self') {
          event.preventDefault();
        }
      }

      if ((0, _emberMetal.get)(this, 'bubbles') === false) {
        event.stopPropagation();
      }

      if ((0, _emberMetal.get)(this, '_isDisabled')) {
        return false;
      }

      if ((0, _emberMetal.get)(this, 'loading')) {
        _emberConsole.default.warn('This link-to is in an inactive loading state because at least one of its parameters presently has a null/undefined value, or the provided route name is invalid.');
        return false;
      }

      if (targetAttribute && targetAttribute !== '_self') {
        return false;
      }

      var qualifiedRouteName = (0, _emberMetal.get)(this, 'qualifiedRouteName');
      var models = (0, _emberMetal.get)(this, 'models');
      var queryParams = (0, _emberMetal.get)(this, 'queryParams.values');
      var shouldReplace = (0, _emberMetal.get)(this, 'replace');

      var payload = {
        queryParams: queryParams,
        routeName: qualifiedRouteName
      };

      (0, _emberMetal.flaggedInstrument)('interaction.link-to', payload, this._generateTransition(payload, qualifiedRouteName, models, queryParams, shouldReplace));
    },
    _generateTransition: function (payload, qualifiedRouteName, models, queryParams, shouldReplace) {
      var routing = (0, _emberMetal.get)(this, '_routing');
      return function () {
        payload.transition = routing.transitionTo(qualifiedRouteName, models, queryParams, shouldReplace);
      };
    },


    queryParams: null,

    qualifiedRouteName: (0, _emberMetal.computed)('targetRouteName', '_routing.currentState', function computeLinkToComponentQualifiedRouteName() {
      var params = (0, _emberMetal.get)(this, 'params');
      var paramsLength = params.length;
      var lastParam = params[paramsLength - 1];
      if (lastParam && lastParam.isQueryParams) {
        paramsLength--;
      }
      var onlyQueryParamsSupplied = this[_component.HAS_BLOCK] ? paramsLength === 0 : paramsLength === 1;
      if (onlyQueryParamsSupplied) {
        return (0, _emberMetal.get)(this, '_routing.currentRouteName');
      }
      return (0, _emberMetal.get)(this, 'targetRouteName');
    }),

    resolvedQueryParams: (0, _emberMetal.computed)('queryParams', function computeLinkToComponentResolvedQueryParams() {
      var resolvedQueryParams = {};
      var queryParams = (0, _emberMetal.get)(this, 'queryParams');

      if (!queryParams) {
        return resolvedQueryParams;
      }

      var values = queryParams.values;
      for (var key in values) {
        if (!values.hasOwnProperty(key)) {
          continue;
        }
        resolvedQueryParams[key] = values[key];
      }

      return resolvedQueryParams;
    }),

    /**
      Sets the element's `href` attribute to the url for
      the `LinkComponent`'s targeted route.
       If the `LinkComponent`'s `tagName` is changed to a value other
      than `a`, this property will be ignored.
       @property href
      @private
    */
    href: (0, _emberMetal.computed)('models', 'qualifiedRouteName', function computeLinkToComponentHref() {
      if ((0, _emberMetal.get)(this, 'tagName') !== 'a') {
        return;
      }

      var qualifiedRouteName = (0, _emberMetal.get)(this, 'qualifiedRouteName');
      var models = (0, _emberMetal.get)(this, 'models');

      if ((0, _emberMetal.get)(this, 'loading')) {
        return (0, _emberMetal.get)(this, 'loadingHref');
      }

      var routing = (0, _emberMetal.get)(this, '_routing');
      var queryParams = (0, _emberMetal.get)(this, 'queryParams.values');

      if (true) {
        /*
         * Unfortunately, to get decent error messages, we need to do this.
         * In some future state we should be able to use a "feature flag"
         * which allows us to strip this without needing to call it twice.
         *
         * if (isDebugBuild()) {
         *   // Do the useful debug thing, probably including try/catch.
         * } else {
         *   // Do the performant thing.
         * }
         */
        try {
          routing.generateURL(qualifiedRouteName, models, queryParams);
        } catch (e) {
          (true && !(false) && (0, _emberDebug.assert)('You attempted to define a `{{link-to "' + qualifiedRouteName + '"}}` but did not pass the parameters required for generating its dynamic segments. ' + e.message));
        }
      }

      return routing.generateURL(qualifiedRouteName, models, queryParams);
    }),

    loading: (0, _emberMetal.computed)('_modelsAreLoaded', 'qualifiedRouteName', function computeLinkToComponentLoading() {
      var qualifiedRouteName = (0, _emberMetal.get)(this, 'qualifiedRouteName');
      var modelsAreLoaded = (0, _emberMetal.get)(this, '_modelsAreLoaded');

      if (!modelsAreLoaded || qualifiedRouteName == null) {
        return (0, _emberMetal.get)(this, 'loadingClass');
      }
    }),

    _modelsAreLoaded: (0, _emberMetal.computed)('models', function computeLinkToComponentModelsAreLoaded() {
      var models = (0, _emberMetal.get)(this, 'models');
      for (var i = 0; i < models.length; i++) {
        if (models[i] == null) {
          return false;
        }
      }

      return true;
    }),

    _getModels: function (params) {
      var modelCount = params.length - 1;
      var models = new Array(modelCount);

      for (var i = 0; i < modelCount; i++) {
        var value = params[i + 1];

        while (_emberRuntime.ControllerMixin.detect(value)) {
          (true && !(false) && (0, _emberDebug.deprecate)('Providing `{{link-to}}` with a param that is wrapped in a controller is deprecated. ' + (this.parentView ? 'Please update `' + this.parentView + '` to use `{{link-to "post" someController.model}}` instead.' : ''), false, { id: 'ember-routing-views.controller-wrapped-param', until: '3.0.0' }));

          value = value.get('model');
        }

        models[i] = value;
      }

      return models;
    },


    /**
      The default href value to use while a link-to is loading.
      Only applies when tagName is 'a'
       @property loadingHref
      @type String
      @default #
      @private
    */
    loadingHref: '#',

    didReceiveAttrs: function () {
      var queryParams = void 0;

      var params = (0, _emberMetal.get)(this, 'params');

      if (params) {
        // Do not mutate params in place
        params = params.slice();
      }

      (true && !(params && params.length) && (0, _emberDebug.assert)('You must provide one or more parameters to the link-to component.', params && params.length));


      var disabledWhen = (0, _emberMetal.get)(this, 'disabledWhen');
      if (disabledWhen !== undefined) {
        this.set('disabled', disabledWhen);
      }

      // Process the positional arguments, in order.
      // 1. Inline link title comes first, if present.
      if (!this[_component.HAS_BLOCK]) {
        this.set('linkTitle', params.shift());
      }

      // 2. `targetRouteName` is now always at index 0.
      this.set('targetRouteName', params[0]);

      // 3. The last argument (if still remaining) is the `queryParams` object.
      var lastParam = params[params.length - 1];

      if (lastParam && lastParam.isQueryParams) {
        queryParams = params.pop();
      } else {
        queryParams = { values: {} };
      }
      this.set('queryParams', queryParams);

      // 4. Any remaining indices (excepting `targetRouteName` at 0) are `models`.
      if (params.length > 1) {
        this.set('models', this._getModels(params));
      } else {
        this.set('models', []);
      }
    }
  }); /**
      @module ember
      */

  /**
    The `{{link-to}}` component renders a link to the supplied
    `routeName` passing an optionally supplied model to the
    route as its `model` context of the route. The block
    for `{{link-to}}` becomes the innerHTML of the rendered
    element:
  
    ```handlebars
    {{#link-to 'photoGallery'}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    You can also use an inline form of `{{link-to}}` component by
    passing the link text as the first argument
    to the component:
  
    ```handlebars
    {{link-to 'Great Hamster Photos' 'photoGallery'}}
    ```
  
    Both will result in:
  
    ```html
    <a href="/hamster-photos">
      Great Hamster Photos
    </a>
    ```
  
    ### Supplying a tagName
    By default `{{link-to}}` renders an `<a>` element. This can
    be overridden for a single use of `{{link-to}}` by supplying
    a `tagName` option:
  
    ```handlebars
    {{#link-to 'photoGallery' tagName="li"}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    ```html
    <li>
      Great Hamster Photos
    </li>
    ```
  
    To override this option for your entire application, see
    "Overriding Application-wide Defaults".
  
    ### Disabling the `link-to` component
    By default `{{link-to}}` is enabled.
    any passed value to the `disabled` component property will disable
    the `link-to` component.
  
    static use: the `disabled` option:
  
    ```handlebars
    {{#link-to 'photoGallery' disabled=true}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    dynamic use: the `disabledWhen` option:
  
    ```handlebars
    {{#link-to 'photoGallery' disabledWhen=controller.someProperty}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    any passed value to `disabled` will disable it except `undefined`.
    to ensure that only `true` disable the `link-to` component you can
    override the global behavior of `LinkComponent`.
  
    ```javascript
    import LinkComponent from '@ember/routing/link-component';
    import { computed } from '@ember/object';
  
    LinkComponent.reopen({
      disabled: computed(function(key, value) {
        if (value !== undefined) {
          this.set('_isDisabled', value === true);
        }
        return value === true ? get(this, 'disabledClass') : false;
      })
    });
    ```
  
    see "Overriding Application-wide Defaults" for more.
  
    ### Handling `href`
    `{{link-to}}` will use your application's Router to
    fill the element's `href` property with a url that
    matches the path to the supplied `routeName` for your
    router's configured `Location` scheme, which defaults
    to HashLocation.
  
    ### Handling current route
    `{{link-to}}` will apply a CSS class name of 'active'
    when the application's current route matches
    the supplied routeName. For example, if the application's
    current route is 'photoGallery.recent' the following
    use of `{{link-to}}`:
  
    ```handlebars
    {{#link-to 'photoGallery.recent'}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    will result in
  
    ```html
    <a href="/hamster-photos/this-week" class="active">
      Great Hamster Photos
    </a>
    ```
  
    The CSS class name used for active classes can be customized
    for a single use of `{{link-to}}` by passing an `activeClass`
    option:
  
    ```handlebars
    {{#link-to 'photoGallery.recent' activeClass="current-url"}}
      Great Hamster Photos
    {{/link-to}}
    ```
  
    ```html
    <a href="/hamster-photos/this-week" class="current-url">
      Great Hamster Photos
    </a>
    ```
  
    To override this option for your entire application, see
    "Overriding Application-wide Defaults".
  
    ### Keeping a link active for other routes
  
    If you need a link to be 'active' even when it doesn't match
    the current route, you can use the `current-when` argument.
  
    ```handlebars
    {{#link-to 'photoGallery' current-when='photos'}}
      Photo Gallery
    {{/link-to}}
    ```
  
    This may be helpful for keeping links active for:
  
    * non-nested routes that are logically related
    * some secondary menu approaches
    * 'top navigation' with 'sub navigation' scenarios
  
    A link will be active if `current-when` is `true` or the current
    route is the route this link would transition to.
  
    To match multiple routes 'space-separate' the routes:
  
    ```handlebars
    {{#link-to 'gallery' current-when='photos drawings paintings'}}
      Art Gallery
    {{/link-to}}
    ```
  
    ### Supplying a model
    An optional model argument can be used for routes whose
    paths contain dynamic segments. This argument will become
    the model context of the linked route:
  
    ```javascript
    Router.map(function() {
      this.route("photoGallery", {path: "hamster-photos/:photo_id"});
    });
    ```
  
    ```handlebars
    {{#link-to 'photoGallery' aPhoto}}
      {{aPhoto.title}}
    {{/link-to}}
    ```
  
    ```html
    <a href="/hamster-photos/42">
      Tomster
    </a>
    ```
  
    ### Supplying multiple models
    For deep-linking to route paths that contain multiple
    dynamic segments, multiple model arguments can be used.
    As the router transitions through the route path, each
    supplied model argument will become the context for the
    route with the dynamic segments:
  
    ```javascript
    Router.map(function() {
      this.route("photoGallery", { path: "hamster-photos/:photo_id" }, function() {
        this.route("comment", {path: "comments/:comment_id"});
      });
    });
    ```
    This argument will become the model context of the linked route:
  
    ```handlebars
    {{#link-to 'photoGallery.comment' aPhoto comment}}
      {{comment.body}}
    {{/link-to}}
    ```
  
    ```html
    <a href="/hamster-photos/42/comments/718">
      A+++ would snuggle again.
    </a>
    ```
  
    ### Supplying an explicit dynamic segment value
    If you don't have a model object available to pass to `{{link-to}}`,
    an optional string or integer argument can be passed for routes whose
    paths contain dynamic segments. This argument will become the value
    of the dynamic segment:
  
    ```javascript
    Router.map(function() {
      this.route("photoGallery", { path: "hamster-photos/:photo_id" });
    });
    ```
  
    ```handlebars
    {{#link-to 'photoGallery' aPhotoId}}
      {{aPhoto.title}}
    {{/link-to}}
    ```
  
    ```html
    <a href="/hamster-photos/42">
      Tomster
    </a>
    ```
  
    When transitioning into the linked route, the `model` hook will
    be triggered with parameters including this passed identifier.
  
    ### Allowing Default Action
  
    By default the `{{link-to}}` component prevents the default browser action
    by calling `preventDefault()` as this sort of action bubbling is normally
    handled internally and we do not want to take the browser to a new URL (for
    example).
  
    If you need to override this behavior specify `preventDefault=false` in
    your template:
  
    ```handlebars
    {{#link-to 'photoGallery' aPhotoId preventDefault=false}}
      {{aPhotoId.title}}
    {{/link-to}}
    ```
  
    ### Overriding attributes
    You can override any given property of the `LinkComponent`
    that is generated by the `{{link-to}}` component by passing
    key/value pairs, like so:
  
    ```handlebars
    {{#link-to  aPhoto tagName='li' title='Following this link will change your life' classNames='pic sweet'}}
      Uh-mazing!
    {{/link-to}}
    ```
  
    See [LinkComponent](/api/classes/Ember.LinkComponent.html) for a
    complete list of overrideable properties. Be sure to also
    check out inherited properties of `LinkComponent`.
  
    ### Overriding Application-wide Defaults
    ``{{link-to}}`` creates an instance of `LinkComponent`
    for rendering. To override options for your entire
    application, reopen `LinkComponent` and supply the
    desired values:
  
    ``` javascript
    import LinkComponent from '@ember/routing/link-component';
  
    LinkComponent.reopen({
      activeClass: "is-active",
      tagName: 'li'
    })
    ```
  
    It is also possible to override the default event in
    this manner:
  
    ``` javascript
    import LinkCompoennt from '@ember/routing/link-component';
  
    LinkComponent.reopen({
      eventName: 'customEventName'
    });
    ```
    @method link-to
    @for Ember.Templates.helpers
    @param {String} routeName
    @param {Object} [context]*
    @param [options] {Object} Handlebars key/value pairs of options, you can override any property of Ember.LinkComponent
    @return {String} HTML string
    @see {LinkComponent}
    @public
  */

  LinkComponent.toString = function () {
    return 'LinkComponent';
  };

  LinkComponent.reopenClass({
    positionalParams: 'params'
  });

  exports.default = LinkComponent;
});
enifed('ember-glimmer/components/text_area', ['exports', 'ember-glimmer/component', 'ember-views', 'ember-glimmer/templates/empty'], function (exports, _component, _emberViews, _empty) {
  'use strict';

  exports.default = _component.default.extend(_emberViews.TextSupport, {
    classNames: ['ember-text-area'],

    layout: _empty.default,

    tagName: 'textarea',
    attributeBindings: ['rows', 'cols', 'name', 'selectionEnd', 'selectionStart', 'wrap', 'lang', 'dir', 'value'],
    rows: null,
    cols: null
  });
});
enifed('ember-glimmer/components/text_field', ['exports', 'ember-metal', 'ember-environment', 'ember-glimmer/component', 'ember-glimmer/templates/empty', 'ember-views'], function (exports, _emberMetal, _emberEnvironment, _component, _empty, _emberViews) {
  'use strict';

  var inputTypes = Object.create(null); /**
                                        @module @ember/component
                                        */

  function canSetTypeOfInput(type) {
    if (type in inputTypes) {
      return inputTypes[type];
    }

    // if running in outside of a browser always return the
    // original type
    if (!_emberEnvironment.environment.hasDOM) {
      inputTypes[type] = type;

      return type;
    }

    var inputTypeTestElement = document.createElement('input');

    try {
      inputTypeTestElement.type = type;
    } catch (e) {
      // ignored
    }

    return inputTypes[type] = inputTypeTestElement.type === type;
  }

  /**
  
    The internal class used to create text inputs when the `{{input}}`
    helper is used with `type` of `text`.
  
    See [Ember.Templates.helpers.input](/api/classes/Ember.Templates.helpers.html#method_input)  for usage details.
  
    ## Layout and LayoutName properties
  
    Because HTML `input` elements are self closing `layout` and `layoutName`
    properties will not be applied.
  
    @class TextField
    @extends Component
    @uses Ember.TextSupport
    @public
  */
  exports.default = _component.default.extend(_emberViews.TextSupport, {
    layout: _empty.default,
    classNames: ['ember-text-field'],
    tagName: 'input',
    attributeBindings: ['accept', 'autocomplete', 'autosave', 'dir', 'formaction', 'formenctype', 'formmethod', 'formnovalidate', 'formtarget', 'height', 'inputmode', 'lang', 'list', 'type', // needs to be before min and max. See #15675
    'max', 'min', 'multiple', 'name', 'pattern', 'size', 'step', 'value', 'width'],

    /**
      The `value` attribute of the input element. As the user inputs text, this
      property is updated live.
       @property value
      @type String
      @default ""
      @public
    */
    value: '',

    /**
      The `type` attribute of the input element.
       @property type
      @type String
      @default "text"
      @public
    */
    type: (0, _emberMetal.computed)({
      get: function () {
        return 'text';
      },
      set: function (key, value) {
        var type = 'text';

        if (canSetTypeOfInput(value)) {
          type = value;
        }

        return type;
      }
    }),

    /**
      The `size` of the text field in characters.
       @property size
      @type String
      @default null
      @public
    */
    size: null,

    /**
      The `pattern` attribute of input element.
       @property pattern
      @type String
      @default null
      @public
    */
    pattern: null,

    /**
      The `min` attribute of input element used with `type="number"` or `type="range"`.
       @property min
      @type String
      @default null
      @since 1.4.0
      @public
    */
    min: null,

    /**
      The `max` attribute of input element used with `type="number"` or `type="range"`.
       @property max
      @type String
      @default null
      @since 1.4.0
      @public
    */
    max: null
  });
});
enifed('ember-glimmer/dom', ['exports', '@glimmer/runtime', '@glimmer/node'], function (exports, _runtime, _node) {
  'use strict';

  Object.defineProperty(exports, 'DOMChanges', {
    enumerable: true,
    get: function () {
      return _runtime.DOMChanges;
    }
  });
  Object.defineProperty(exports, 'DOMTreeConstruction', {
    enumerable: true,
    get: function () {
      return _runtime.DOMTreeConstruction;
    }
  });
  Object.defineProperty(exports, 'NodeDOMTreeConstruction', {
    enumerable: true,
    get: function () {
      return _node.NodeDOMTreeConstruction;
    }
  });
});
enifed('ember-glimmer/environment', ['exports', 'ember-babel', 'ember-utils', 'ember-metal', 'ember-debug', 'ember/features', 'ember-views', '@glimmer/runtime', 'ember-glimmer/component-managers/curly', 'ember-glimmer/syntax', 'ember-glimmer/utils/iterable', 'ember-glimmer/utils/references', 'ember-glimmer/utils/debug-stack', 'ember-glimmer/helpers/if-unless', 'ember-glimmer/helpers/action', 'ember-glimmer/helpers/component', 'ember-glimmer/helpers/concat', 'ember-glimmer/helpers/get', 'ember-glimmer/helpers/hash', 'ember-glimmer/helpers/loc', 'ember-glimmer/helpers/log', 'ember-glimmer/helpers/mut', 'ember-glimmer/helpers/readonly', 'ember-glimmer/helpers/unbound', 'ember-glimmer/helpers/-class', 'ember-glimmer/helpers/-input-type', 'ember-glimmer/helpers/query-param', 'ember-glimmer/helpers/each-in', 'ember-glimmer/helpers/-normalize-class', 'ember-glimmer/helpers/-html-safe', 'ember-glimmer/protocol-for-url', 'ember-glimmer/modifiers/action'], function (exports, _emberBabel, _emberUtils, _emberMetal, _emberDebug, _features, _emberViews, _runtime, _curly, _syntax, _iterable, _references, _debugStack, _ifUnless, _action, _component, _concat, _get, _hash, _loc, _log, _mut, _readonly, _unbound, _class, _inputType, _queryParam, _eachIn, _normalizeClass, _htmlSafe, _protocolForUrl, _action2) {
  'use strict';

  function instrumentationPayload(name) {
    return { object: 'component:' + name };
  }

  var Environment = function (_GlimmerEnvironment) {
    (0, _emberBabel.inherits)(Environment, _GlimmerEnvironment);

    Environment.create = function create(options) {
      return new this(options);
    };

    function Environment(_ref) {
      var owner = _ref[_emberUtils.OWNER];
      (0, _emberBabel.classCallCheck)(this, Environment);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _GlimmerEnvironment.apply(this, arguments));

      _this.owner = owner;
      _this.isInteractive = owner.lookup('-environment:main').isInteractive;

      // can be removed once https://github.com/tildeio/glimmer/pull/305 lands
      _this.destroyedComponents = [];

      (0, _protocolForUrl.default)(_this);

      _this._definitionCache = new _emberMetal.Cache(2000, function (_ref2) {
        var name = _ref2.name,
            source = _ref2.source,
            owner = _ref2.owner;

        var _lookupComponent = (0, _emberViews.lookupComponent)(owner, name, { source: source }),
            componentFactory = _lookupComponent.component,
            layout = _lookupComponent.layout;

        var customManager = undefined;

        if (componentFactory || layout) {
          if (_features.GLIMMER_CUSTOM_COMPONENT_MANAGER) {
            var managerId = layout && layout.meta.managerId;

            if (managerId) {
              customManager = owner.factoryFor('component-manager:' + managerId).class;
            }
          }
          return new _curly.CurlyComponentDefinition(name, componentFactory, layout, undefined, customManager);
        }
      }, function (_ref3) {
        var name = _ref3.name,
            source = _ref3.source,
            owner = _ref3.owner;

        var expandedName = source && _this._resolveLocalLookupName(name, source, owner) || name;

        var ownerGuid = (0, _emberUtils.guidFor)(owner);

        return ownerGuid + '|' + expandedName;
      });

      _this._templateCache = new _emberMetal.Cache(1000, function (_ref4) {
        var Template = _ref4.Template,
            owner = _ref4.owner;

        if (Template.create) {
          var _Template$create;

          // we received a factory
          return Template.create((_Template$create = { env: _this }, _Template$create[_emberUtils.OWNER] = owner, _Template$create));
        } else {
          // we were provided an instance already
          return Template;
        }
      }, function (_ref5) {
        var Template = _ref5.Template,
            owner = _ref5.owner;
        return (0, _emberUtils.guidFor)(owner) + '|' + Template.id;
      });

      _this._compilerCache = new _emberMetal.Cache(10, function (Compiler) {
        return new _emberMetal.Cache(2000, function (template) {
          var compilable = new Compiler(template);
          return (0, _runtime.compileLayout)(compilable, _this);
        }, function (template) {
          var owner = template.meta.owner;
          return (0, _emberUtils.guidFor)(owner) + '|' + template.id;
        });
      }, function (Compiler) {
        return Compiler.id;
      });

      _this.builtInModifiers = {
        action: new _action2.default()
      };

      _this.builtInHelpers = {
        if: _ifUnless.inlineIf,
        action: _action.default,
        concat: _concat.default,
        get: _get.default,
        hash: _hash.default,
        loc: _loc.default,
        log: _log.default,
        mut: _mut.default,
        'query-params': _queryParam.default,
        readonly: _readonly.default,
        unbound: _unbound.default,
        unless: _ifUnless.inlineUnless,
        '-class': _class.default,
        '-each-in': _eachIn.default,
        '-input-type': _inputType.default,
        '-normalize-class': _normalizeClass.default,
        '-html-safe': _htmlSafe.default,
        '-get-dynamic-var': _runtime.getDynamicVar
      };

      if (true) {
        _this.debugStack = new _debugStack.default();
      }
      return _this;
    }

    Environment.prototype._resolveLocalLookupName = function _resolveLocalLookupName(name, source, owner) {
      return _features.EMBER_MODULE_UNIFICATION ? source + ':' + name : owner._resolveLocalLookupName(name, source);
    };

    Environment.prototype.macros = function macros() {
      var macros = _GlimmerEnvironment.prototype.macros.call(this);
      (0, _syntax.populateMacros)(macros.blocks, macros.inlines);
      return macros;
    };

    Environment.prototype.hasComponentDefinition = function hasComponentDefinition() {
      return false;
    };

    Environment.prototype.getComponentDefinition = function getComponentDefinition(name, _ref6) {
      var owner = _ref6.owner,
          moduleName = _ref6.moduleName;

      var finalizer = (0, _emberMetal._instrumentStart)('render.getComponentDefinition', instrumentationPayload, name);
      var source = moduleName && 'template:' + moduleName;
      var definition = this._definitionCache.get({ name: name, source: source, owner: owner });
      finalizer();
      return definition;
    };

    Environment.prototype.getTemplate = function getTemplate(Template, owner) {
      return this._templateCache.get({ Template: Template, owner: owner });
    };

    Environment.prototype.getCompiledBlock = function getCompiledBlock(Compiler, template) {
      var compilerCache = this._compilerCache.get(Compiler);
      return compilerCache.get(template);
    };

    Environment.prototype.hasPartial = function hasPartial(name, _ref7) {
      var owner = _ref7.owner;

      return (0, _emberViews.hasPartial)(name, owner);
    };

    Environment.prototype.lookupPartial = function lookupPartial(name, _ref8) {
      var owner = _ref8.owner;

      var partial = {
        template: (0, _emberViews.lookupPartial)(name, owner)
      };

      if (partial.template) {
        return partial;
      } else {
        throw new Error(name + ' is not a partial');
      }
    };

    Environment.prototype.hasHelper = function hasHelper(name, _ref9) {
      var owner = _ref9.owner,
          moduleName = _ref9.moduleName;

      if (name === 'component' || this.builtInHelpers[name]) {
        return true;
      }

      var options = { source: 'template:' + moduleName };

      return owner.hasRegistration('helper:' + name, options) || owner.hasRegistration('helper:' + name);
    };

    Environment.prototype.lookupHelper = function lookupHelper(name, meta) {
      if (name === 'component') {
        return function (vm, args) {
          return (0, _component.default)(vm, args, meta);
        };
      }

      var owner = meta.owner,
          moduleName = meta.moduleName;

      var helper = this.builtInHelpers[name];

      if (helper) {
        return helper;
      }

      var options = moduleName && { source: 'template:' + moduleName } || {};
      var helperFactory = owner.factoryFor('helper:' + name, options) || owner.factoryFor('helper:' + name);

      // TODO: try to unify this into a consistent protocol to avoid wasteful closure allocations
      if (helperFactory.class.isHelperInstance) {
        return function (vm, args) {
          return _references.SimpleHelperReference.create(helperFactory.class.compute, args.capture());
        };
      } else if (helperFactory.class.isHelperFactory) {
        return function (vm, args) {
          return _references.ClassBasedHelperReference.create(helperFactory, vm, args.capture());
        };
      } else {
        throw new Error(name + ' is not a helper');
      }
    };

    Environment.prototype.hasModifier = function hasModifier(name) {
      return !!this.builtInModifiers[name];
    };

    Environment.prototype.lookupModifier = function lookupModifier(name) {
      var modifier = this.builtInModifiers[name];

      if (modifier) {
        return modifier;
      } else {
        throw new Error(name + ' is not a modifier');
      }
    };

    Environment.prototype.toConditionalReference = function toConditionalReference(reference) {
      return _references.ConditionalReference.create(reference);
    };

    Environment.prototype.iterableFor = function iterableFor(ref, key) {
      return (0, _iterable.default)(ref, key);
    };

    Environment.prototype.scheduleInstallModifier = function scheduleInstallModifier() {
      if (this.isInteractive) {
        var _GlimmerEnvironment$p;

        (_GlimmerEnvironment$p = _GlimmerEnvironment.prototype.scheduleInstallModifier).call.apply(_GlimmerEnvironment$p, [this].concat(Array.prototype.slice.call(arguments)));
      }
    };

    Environment.prototype.scheduleUpdateModifier = function scheduleUpdateModifier() {
      if (this.isInteractive) {
        var _GlimmerEnvironment$p2;

        (_GlimmerEnvironment$p2 = _GlimmerEnvironment.prototype.scheduleUpdateModifier).call.apply(_GlimmerEnvironment$p2, [this].concat(Array.prototype.slice.call(arguments)));
      }
    };

    Environment.prototype.didDestroy = function didDestroy(destroyable) {
      destroyable.destroy();
    };

    Environment.prototype.begin = function begin() {
      this.inTransaction = true;

      _GlimmerEnvironment.prototype.begin.call(this);
    };

    Environment.prototype.commit = function commit() {
      var destroyedComponents = this.destroyedComponents;
      this.destroyedComponents = [];
      // components queued for destruction must be destroyed before firing
      // `didCreate` to prevent errors when removing and adding a component
      // with the same name (would throw an error when added to view registry)
      for (var i = 0; i < destroyedComponents.length; i++) {
        destroyedComponents[i].destroy();
      }

      _GlimmerEnvironment.prototype.commit.call(this);

      this.inTransaction = false;
    };

    return Environment;
  }(_runtime.Environment);

  exports.default = Environment;


  if (true) {
    var StyleAttributeManager = function (_AttributeManager) {
      (0, _emberBabel.inherits)(StyleAttributeManager, _AttributeManager);

      function StyleAttributeManager() {
        (0, _emberBabel.classCallCheck)(this, StyleAttributeManager);
        return (0, _emberBabel.possibleConstructorReturn)(this, _AttributeManager.apply(this, arguments));
      }

      StyleAttributeManager.prototype.setAttribute = function setAttribute(dom, element, value) {
        var _AttributeManager$pro;

        (true && (0, _emberDebug.warn)((0, _emberViews.constructStyleDeprecationMessage)(value), function () {
          if (value === null || value === undefined || (0, _runtime.isSafeString)(value)) {
            return true;
          }
          return false;
        }(), { id: 'ember-htmlbars.style-xss-warning' }));

        (_AttributeManager$pro = _AttributeManager.prototype.setAttribute).call.apply(_AttributeManager$pro, [this].concat(Array.prototype.slice.call(arguments)));
      };

      StyleAttributeManager.prototype.updateAttribute = function updateAttribute(dom, element, value) {
        var _AttributeManager$pro2;

        (true && (0, _emberDebug.warn)((0, _emberViews.constructStyleDeprecationMessage)(value), function () {
          if (value === null || value === undefined || (0, _runtime.isSafeString)(value)) {
            return true;
          }
          return false;
        }(), { id: 'ember-htmlbars.style-xss-warning' }));

        (_AttributeManager$pro2 = _AttributeManager.prototype.updateAttribute).call.apply(_AttributeManager$pro2, [this].concat(Array.prototype.slice.call(arguments)));
      };

      return StyleAttributeManager;
    }(_runtime.AttributeManager);

    var STYLE_ATTRIBUTE_MANANGER = new StyleAttributeManager('style');

    Environment.prototype.attributeFor = function (element, attribute, isTrusting, namespace) {
      if (attribute === 'style' && !isTrusting) {
        return STYLE_ATTRIBUTE_MANANGER;
      }

      return _runtime.Environment.prototype.attributeFor.call(this, element, attribute, isTrusting);
    };
  }
});
enifed('ember-glimmer/helper', ['exports', 'ember-utils', 'ember-runtime', '@glimmer/reference'], function (exports, _emberUtils, _emberRuntime, _reference) {
  'use strict';

  exports.RECOMPUTE_TAG = undefined;
  exports.helper = helper;
  var RECOMPUTE_TAG = exports.RECOMPUTE_TAG = (0, _emberUtils.symbol)('RECOMPUTE_TAG');

  /**
    Ember Helpers are functions that can compute values, and are used in templates.
    For example, this code calls a helper named `format-currency`:
  
    ```handlebars
    <div>{{format-currency cents currency="$"}}</div>
    ```
  
    Additionally a helper can be called as a nested helper (sometimes called a
    subexpression). In this example, the computed value of a helper is passed
    to a component named `show-money`:
  
    ```handlebars
    {{show-money amount=(format-currency cents currency="$")}}
    ```
  
    Helpers defined using a class must provide a `compute` function. For example:
  
    ```app/helpers/format-currency.js
    import Helper from '@ember/component/helper';
  
    export default Helper.extend({
      compute(params, hash) {
        let cents = params[0];
        let currency = hash.currency;
        return `${currency}${cents * 0.01}`;
      }
    });
    ```
  
    Each time the input to a helper changes, the `compute` function will be
    called again.
  
    As instances, these helpers also have access to the container an will accept
    injected dependencies.
  
    Additionally, class helpers can call `recompute` to force a new computation.
  
    @class Helper
    @public
    @since 1.13.0
  */
  /**
  @module @ember/component
  */

  var Helper = _emberRuntime.FrameworkObject.extend({
    isHelperInstance: true,

    init: function () {
      this._super.apply(this, arguments);
      this[RECOMPUTE_TAG] = new _reference.DirtyableTag();
    },
    recompute: function () {
      this[RECOMPUTE_TAG].dirty();
    }
  }

  /**
    Override this function when writing a class-based helper.
     @method compute
    @param {Array} params The positional arguments to the helper
    @param {Object} hash The named arguments to the helper
    @public
    @since 1.13.0
  */
  );

  Helper.reopenClass({
    isHelperFactory: true
  });

  /**
    In many cases, the ceremony of a full `Helper` class is not required.
    The `helper` method create pure-function helpers without instances. For
    example:
  
    ```app/helpers/format-currency.js
    import { helper } from '@ember/component/helper';
  
    export default helper(function(params, hash) {
      let cents = params[0];
      let currency = hash.currency;
      return `${currency}${cents * 0.01}`;
    });
    ```
  
    @static
    @param {Function} helper The helper function
    @method helper
    @for @ember/component/helper
    @public
    @since 1.13.0
  */
  function helper(helperFn) {
    return {
      isHelperInstance: true,
      compute: helperFn
    };
  }

  exports.default = Helper;
});
enifed('ember-glimmer/helpers/-class', ['exports', 'ember-glimmer/utils/references', 'ember-runtime'], function (exports, _references, _emberRuntime) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(classHelper, args.capture());
  };

  function classHelper(_ref) {
    var positional = _ref.positional;

    var path = positional.at(0);
    var args = positional.length;
    var value = path.value();

    if (value === true) {
      if (args > 1) {
        return _emberRuntime.String.dasherize(positional.at(1).value());
      }
      return null;
    }

    if (value === false) {
      if (args > 2) {
        return _emberRuntime.String.dasherize(positional.at(2).value());
      }
      return null;
    }

    return value;
  }
});
enifed('ember-glimmer/helpers/-html-safe', ['exports', 'ember-glimmer/utils/references', 'ember-glimmer/utils/string'], function (exports, _references, _string) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(htmlSafe, args.capture());
  };

  function htmlSafe(_ref) {
    var positional = _ref.positional;

    var path = positional.at(0);
    return new _string.SafeString(path.value());
  }
});
enifed('ember-glimmer/helpers/-input-type', ['exports', 'ember-glimmer/utils/references'], function (exports, _references) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(inputTypeHelper, args.capture());
  };

  function inputTypeHelper(_ref) {
    var positional = _ref.positional,
        named = _ref.named;

    var type = positional.at(0).value();
    if (type === 'checkbox') {
      return '-checkbox';
    }
    return '-text-field';
  }
});
enifed('ember-glimmer/helpers/-normalize-class', ['exports', 'ember-glimmer/utils/references', 'ember-runtime'], function (exports, _references, _emberRuntime) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(normalizeClass, args.capture());
  };

  function normalizeClass(_ref) {
    var positional = _ref.positional,
        named = _ref.named;

    var classNameParts = positional.at(0).value().split('.');
    var className = classNameParts[classNameParts.length - 1];
    var value = positional.at(1).value();

    if (value === true) {
      return _emberRuntime.String.dasherize(className);
    } else if (!value && value !== 0) {
      return '';
    } else {
      return String(value);
    }
  }
});
enifed('ember-glimmer/helpers/action', ['exports', 'ember-utils', 'ember-metal', 'ember-glimmer/utils/references', '@glimmer/reference', 'ember-debug'], function (exports, _emberUtils, _emberMetal, _references, _reference, _emberDebug) {
  'use strict';

  exports.ACTION = exports.INVOKE = undefined;

  exports.default = function (vm, args) {
    var named = args.named,
        positional = args.positional;


    var capturedArgs = positional.capture();

    // The first two argument slots are reserved.
    // pos[0] is the context (or `this`)
    // pos[1] is the action name or function
    // Anything else is an action argument.

    var _capturedArgs$referen = capturedArgs.references,
        context = _capturedArgs$referen[0],
        action = _capturedArgs$referen[1],
        restArgs = _capturedArgs$referen.slice(2);

    // TODO: Is there a better way of doing this?


    var debugKey = action._propertyKey;

    var target = named.has('target') ? named.get('target') : context;
    var processArgs = makeArgsProcessor(named.has('value') && named.get('value'), restArgs);

    var fn = void 0;

    if (typeof action[INVOKE] === 'function') {
      fn = makeClosureAction(action, action, action[INVOKE], processArgs, debugKey);
    } else if ((0, _reference.isConst)(target) && (0, _reference.isConst)(action)) {
      fn = makeClosureAction(context.value(), target.value(), action.value(), processArgs, debugKey);
    } else {
      fn = makeDynamicClosureAction(context.value(), target, action, processArgs, debugKey);
    }

    fn[ACTION] = true;

    return new _references.UnboundReference(fn);
  };

  var INVOKE = exports.INVOKE = (0, _emberUtils.symbol)('INVOKE'); /**
                                                                   @module ember
                                                                   */
  var ACTION = exports.ACTION = (0, _emberUtils.symbol)('ACTION');

  /**
    The `{{action}}` helper provides a way to pass triggers for behavior (usually
    just a function) between components, and into components from controllers.
  
    ### Passing functions with the action helper
  
    There are three contexts an action helper can be used in. The first two
    contexts to discuss are attribute context, and Handlebars value context.
  
    ```handlebars
    {{! An example of attribute context }}
    <div onclick={{action "save"}}></div>
    {{! Examples of Handlebars value context }}
    {{input on-input=(action "save")}}
    {{yield (action "refreshData") andAnotherParam}}
    ```
  
    In these contexts,
    the helper is called a "closure action" helper. Its behavior is simple:
    If passed a function name, read that function off the `actions` property
    of the current context. Once that function is read (or if a function was
    passed), create a closure over that function and any arguments.
    The resulting value of an action helper used this way is simply a function.
  
    For example, in the attribute context:
  
    ```handlebars
    {{! An example of attribute context }}
    <div onclick={{action "save"}}></div>
    ```
  
    The resulting template render logic would be:
  
    ```js
    var div = document.createElement('div');
    var actionFunction = (function(context){
      return function() {
        return context.actions.save.apply(context, arguments);
      };
    })(context);
    div.onclick = actionFunction;
    ```
  
    Thus when the div is clicked, the action on that context is called.
    Because the `actionFunction` is just a function, closure actions can be
    passed between components and still execute in the correct context.
  
    Here is an example action handler on a component:
  
    ```app/components/my-component.js
    import Component from '@ember/component';
  
    export default Component.extend({
      actions: {
        save() {
          this.get('model').save();
        }
      }
    });
    ```
  
    Actions are always looked up on the `actions` property of the current context.
    This avoids collisions in the naming of common actions, such as `destroy`.
    Two options can be passed to the `action` helper when it is used in this way.
  
    * `target=someProperty` will look to `someProperty` instead of the current
      context for the `actions` hash. This can be useful when targeting a
      service for actions.
    * `value="target.value"` will read the path `target.value` off the first
      argument to the action when it is called and rewrite the first argument
      to be that value. This is useful when attaching actions to event listeners.
  
    ### Invoking an action
  
    Closure actions curry both their scope and any arguments. When invoked, any
    additional arguments are added to the already curried list.
    Actions should be invoked using the [sendAction](/api/classes/Ember.Component.html#method_sendAction)
    method. The first argument to `sendAction` is the action to be called, and
    additional arguments are passed to the action function. This has interesting
    properties combined with currying of arguments. For example:
  
    ```app/components/my-component.js
    import Component from '@ember/component';
  
    export default Component.extend({
      actions: {
        // Usage {{input on-input=(action (action 'setName' model) value="target.value")}}
        setName(model, name) {
          model.set('name', name);
        }
      }
    });
    ```
  
    The first argument (`model`) was curried over, and the run-time argument (`event`)
    becomes a second argument. Action calls can be nested this way because each simply
    returns a function. Any function can be passed to the `{{action}}` helper, including
    other actions.
  
    Actions invoked with `sendAction` have the same currying behavior as demonstrated
    with `on-input` above. For example:
  
    ```app/components/my-input.js
    import Component from '@ember/component';
  
    export default Component.extend({
      actions: {
        setName(model, name) {
          model.set('name', name);
        }
      }
    });
    ```
  
    ```handlebars
    {{my-input submit=(action 'setName' model)}}
    ```
  
    ```app/components/my-component.js
    import Component from '@ember/component';
  
    export default Component.extend({
      click() {
        // Note that model is not passed, it was curried in the template
        this.sendAction('submit', 'bob');
      }
    });
    ```
  
    ### Attaching actions to DOM elements
  
    The third context of the `{{action}}` helper can be called "element space".
    For example:
  
    ```handlebars
    {{! An example of element space }}
    <div {{action "save"}}></div>
    ```
  
    Used this way, the `{{action}}` helper provides a useful shortcut for
    registering an HTML element in a template for a single DOM event and
    forwarding that interaction to the template's context (controller or component).
    If the context of a template is a controller, actions used this way will
    bubble to routes when the controller does not implement the specified action.
    Once an action hits a route, it will bubble through the route hierarchy.
  
    ### Event Propagation
  
    `{{action}}` helpers called in element space can control event bubbling. Note
    that the closure style actions cannot.
  
    Events triggered through the action helper will automatically have
    `.preventDefault()` called on them. You do not need to do so in your event
    handlers. If you need to allow event propagation (to handle file inputs for
    example) you can supply the `preventDefault=false` option to the `{{action}}` helper:
  
    ```handlebars
    <div {{action "sayHello" preventDefault=false}}>
      <input type="file" />
      <input type="checkbox" />
    </div>
    ```
  
    To disable bubbling, pass `bubbles=false` to the helper:
  
    ```handlebars
    <button {{action 'edit' post bubbles=false}}>Edit</button>
    ```
  
    To disable bubbling with closure style actions you must create your own
    wrapper helper that makes use of `event.stopPropagation()`:
  
    ```handlebars
    <div onclick={{disable-bubbling (action "sayHello")}}>Hello</div>
    ```
  
    ```app/helpers/disable-bubbling.js
    import { helper } from '@ember/component/helper';
  
    export function disableBubbling([action]) {
      return function(event) {
        event.stopPropagation();
        return action(event);
      };
    }
    export default helper(disableBubbling);
    ```
  
    If you need the default handler to trigger you should either register your
    own event handler, or use event methods on your view class. See
    ["Responding to Browser Events"](/api/classes/Ember.Component#responding-to-browser-events)
    in the documentation for `Component` for more information.
  
    ### Specifying DOM event type
  
    `{{action}}` helpers called in element space can specify an event type.
    By default the `{{action}}` helper registers for DOM `click` events. You can
    supply an `on` option to the helper to specify a different DOM event name:
  
    ```handlebars
    <div {{action "anActionName" on="doubleClick"}}>
      click me
    </div>
    ```
  
    See ["Event Names"](/api/classes/Ember.Component#event-names) for a list of
    acceptable DOM event names.
  
    ### Specifying whitelisted modifier keys
  
    `{{action}}` helpers called in element space can specify modifier keys.
    By default the `{{action}}` helper will ignore click events with pressed modifier
    keys. You can supply an `allowedKeys` option to specify which keys should not be ignored.
  
    ```handlebars
    <div {{action "anActionName" allowedKeys="alt"}}>
      click me
    </div>
    ```
  
    This way the action will fire when clicking with the alt key pressed down.
    Alternatively, supply "any" to the `allowedKeys` option to accept any combination of modifier keys.
  
    ```handlebars
    <div {{action "anActionName" allowedKeys="any"}}>
      click me with any key pressed
    </div>
    ```
  
    ### Specifying a Target
  
    A `target` option can be provided to the helper to change
    which object will receive the method call. This option must be a path
    to an object, accessible in the current context:
  
    ```app/templates/application.hbs
    <div {{action "anActionName" target=someService}}>
      click me
    </div>
    ```
  
    ```app/controllers/application.js
    import Controller from '@ember/controller';
    import { inject as service } from '@ember/service';
  
    export default Controller.extend({
      someService: service()
    });
    ```
  
    @method action
    @for Ember.Templates.helpers
    @public
  */


  function NOOP(args) {
    return args;
  }

  function makeArgsProcessor(valuePathRef, actionArgsRef) {
    var mergeArgs = null;

    if (actionArgsRef.length > 0) {
      mergeArgs = function (args) {
        return actionArgsRef.map(function (ref) {
          return ref.value();
        }).concat(args);
      };
    }

    var readValue = null;

    if (valuePathRef) {
      readValue = function (args) {
        var valuePath = valuePathRef.value();

        if (valuePath && args.length > 0) {
          args[0] = (0, _emberMetal.get)(args[0], valuePath);
        }

        return args;
      };
    }

    if (mergeArgs && readValue) {
      return function (args) {
        return readValue(mergeArgs(args));
      };
    } else {
      return mergeArgs || readValue || NOOP;
    }
  }

  function makeDynamicClosureAction(context, targetRef, actionRef, processArgs, debugKey) {
    // We don't allow undefined/null values, so this creates a throw-away action to trigger the assertions
    if (true) {
      makeClosureAction(context, targetRef.value(), actionRef.value(), processArgs, debugKey);
    }

    return function () {
      return makeClosureAction(context, targetRef.value(), actionRef.value(), processArgs, debugKey).apply(undefined, arguments);
    };
  }

  function makeClosureAction(context, target, action, processArgs, debugKey) {
    var self = void 0,
        fn = void 0;

    (true && !(!(0, _emberMetal.isNone)(action)) && (0, _emberDebug.assert)('Action passed is null or undefined in (action) from ' + target + '.', !(0, _emberMetal.isNone)(action)));


    if (typeof action[INVOKE] === 'function') {
      self = action;
      fn = action[INVOKE];
    } else {
      var typeofAction = typeof action;

      if (typeofAction === 'string') {
        self = target;
        fn = target.actions && target.actions[action];

        (true && !(fn) && (0, _emberDebug.assert)('An action named \'' + action + '\' was not found in ' + target, fn));
      } else if (typeofAction === 'function') {
        self = context;
        fn = action;
      } else {
        (true && !(false) && (0, _emberDebug.assert)('An action could not be made for `' + (debugKey || action) + '` in ' + target + '. Please confirm that you are using either a quoted action name (i.e. `(action \'' + (debugKey || 'myAction') + '\')`) or a function available in ' + target + '.', false));
      }
    }

    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var payload = { target: self, args: args, label: '@glimmer/closure-action' };
      return (0, _emberMetal.flaggedInstrument)('interaction.ember-action', payload, function () {
        return _emberMetal.run.join.apply(_emberMetal.run, [self, fn].concat(processArgs(args)));
      });
    };
  }
});
enifed('ember-glimmer/helpers/component', ['exports', 'ember-babel', 'ember-utils', 'ember-glimmer/utils/references', 'ember-glimmer/component-managers/curly', '@glimmer/runtime', 'ember-debug'], function (exports, _emberBabel, _emberUtils, _references, _curly, _runtime, _emberDebug) {
  'use strict';

  exports.ClosureComponentReference = undefined;

  exports.default = function (vm, args, meta) {
    return ClosureComponentReference.create(args.capture(), meta, vm.env);
  };

  var ClosureComponentReference = exports.ClosureComponentReference = function (_CachedReference) {
    (0, _emberBabel.inherits)(ClosureComponentReference, _CachedReference);

    ClosureComponentReference.create = function create(args, meta, env) {
      return new ClosureComponentReference(args, meta, env);
    };

    function ClosureComponentReference(args, meta, env) {
      (0, _emberBabel.classCallCheck)(this, ClosureComponentReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference.call(this));

      var firstArg = args.positional.at(0);
      _this.defRef = firstArg;
      _this.tag = firstArg.tag;
      _this.args = args;
      _this.meta = meta;
      _this.env = env;
      _this.lastDefinition = undefined;
      _this.lastName = undefined;
      return _this;
    }

    ClosureComponentReference.prototype.compute = function compute() {
      // TODO: Figure out how to extract this because it's nearly identical to
      // DynamicComponentReference::compute(). The only differences besides
      // currying are in the assertion messages.
      var args = this.args,
          defRef = this.defRef,
          env = this.env,
          meta = this.meta,
          lastDefinition = this.lastDefinition,
          lastName = this.lastName;

      var nameOrDef = defRef.value();
      var definition = null;

      if (nameOrDef && nameOrDef === lastName) {
        return lastDefinition;
      }

      this.lastName = nameOrDef;

      if (typeof nameOrDef === 'string') {
        (true && !(nameOrDef !== 'input') && (0, _emberDebug.assert)('You cannot use the input helper as a contextual helper. Please extend TextField or Checkbox to use it as a contextual component.', nameOrDef !== 'input'));
        (true && !(nameOrDef !== 'textarea') && (0, _emberDebug.assert)('You cannot use the textarea helper as a contextual helper. Please extend TextArea to use it as a contextual component.', nameOrDef !== 'textarea'));

        definition = env.getComponentDefinition(nameOrDef, meta);
        (true && !(definition) && (0, _emberDebug.assert)('The component helper cannot be used without a valid component name. You used "' + nameOrDef + '" via (component "' + nameOrDef + '")', definition));
      } else if ((0, _runtime.isComponentDefinition)(nameOrDef)) {
        definition = nameOrDef;
      } else {
        (true && !(nameOrDef) && (0, _emberDebug.assert)('You cannot create a component from ' + nameOrDef + ' using the {{component}} helper', nameOrDef));

        return null;
      }

      var newDef = createCurriedDefinition(definition, args);

      this.lastDefinition = newDef;

      return newDef;
    };

    return ClosureComponentReference;
  }(_references.CachedReference);

  function createCurriedDefinition(definition, args) {
    var curriedArgs = curryArgs(definition, args);

    return new _curly.CurlyComponentDefinition(definition.name, definition.ComponentClass, definition.template, curriedArgs);
  }

  var EMPTY_BLOCKS = {
    default: null,
    inverse: null
  };

  if (true) {
    EMPTY_BLOCKS = Object.freeze(EMPTY_BLOCKS);
  }

  function curryArgs(definition, newArgs) {
    var args = definition.args,
        ComponentClass = definition.ComponentClass;

    var positionalParams = ComponentClass.class.positionalParams;

    // The args being passed in are from the (component ...) invocation,
    // so the first positional argument is actually the name or component
    // definition. It needs to be dropped in order for any actual positional
    // args to coincide with the ComponentClass's positionParams.

    // For "normal" curly components this slicing is done at the syntax layer,
    // but we don't have that luxury here.

    var _newArgs$positional$r = newArgs.positional.references,
        slicedPositionalArgs = _newArgs$positional$r.slice(1);

    if (positionalParams && slicedPositionalArgs.length) {
      (0, _curly.validatePositionalParameters)(newArgs.named, slicedPositionalArgs, positionalParams);
    }

    var isRest = typeof positionalParams === 'string';

    // For non-rest position params, we need to perform the position -> name mapping
    // at each layer to avoid a collision later when the args are used to construct
    // the component instance (inside of processArgs(), inside of create()).
    var positionalToNamedParams = {};

    if (!isRest && positionalParams.length > 0) {
      var limit = Math.min(positionalParams.length, slicedPositionalArgs.length);

      for (var i = 0; i < limit; i++) {
        var name = positionalParams[i];
        positionalToNamedParams[name] = slicedPositionalArgs[i];
      }

      slicedPositionalArgs.length = 0; // Throw them away since you're merged in.
    }

    // args (aka 'oldArgs') may be undefined or simply be empty args, so
    // we need to fall back to an empty array or object.
    var oldNamed = args && args.named || {};
    var oldPositional = args && args.positional || [];

    // Merge positional arrays
    var positional = new Array(Math.max(oldPositional.length, slicedPositionalArgs.length));
    positional.splice.apply(positional, [0, oldPositional.length].concat(oldPositional));
    positional.splice.apply(positional, [0, slicedPositionalArgs.length].concat(slicedPositionalArgs));

    // Merge named maps
    var named = (0, _emberUtils.assign)({}, oldNamed, positionalToNamedParams, newArgs.named.map);

    return { positional: positional, named: named };
  }
});
enifed('ember-glimmer/helpers/concat', ['exports', 'ember-glimmer/utils/references', '@glimmer/runtime'], function (exports, _references, _runtime) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(concat, args.capture());
  };

  /**
  @module ember
  */

  /**
    Concatenates the given arguments into a string.
  
    Example:
  
    ```handlebars
    {{some-component name=(concat firstName " " lastName)}}
  
    {{! would pass name="<first name value> <last name value>" to the component}}
    ```
  
    @public
    @method concat
    @for Ember.Templates.helpers
    @since 1.13.0
  */
  function concat(_ref) {
    var positional = _ref.positional;

    return positional.value().map(_runtime.normalizeTextValue).join('');
  }
});
enifed('ember-glimmer/helpers/each-in', ['exports', 'ember-utils'], function (exports, _emberUtils) {
  'use strict';

  exports.isEachIn = isEachIn;

  exports.default = function (vm, args) {
    var ref = Object.create(args.positional.at(0));
    ref[EACH_IN_REFERENCE] = true;
    return ref;
  };

  /**
    The `{{#each}}` helper loops over elements in a collection. It is an extension
    of the base Handlebars `{{#each}}` helper.
    The default behavior of `{{#each}}` is to yield its inner block once for every
    item in an array passing the item as the first block parameter.
  
    ```javascript
    var developers = [{ name: 'Yehuda' },{ name: 'Tom' }, { name: 'Paul' }];
    ```
  
    ```handlebars
    {{#each developers key="name" as |person|}}
      {{person.name}}
      {{! `this` is whatever it was outside the #each }}
    {{/each}}
    ```
  
    The same rules apply to arrays of primitives.
  
    ```javascript
    var developerNames = ['Yehuda', 'Tom', 'Paul']
    ```
  
    ```handlebars
    {{#each developerNames key="@index" as |name|}}
      {{name}}
    {{/each}}
    ```
  
    During iteration, the index of each item in the array is provided as a second block parameter.
  
    ```handlebars
    <ul>
      {{#each people as |person index|}}
        <li>Hello, {{person.name}}! You're number {{index}} in line</li>
      {{/each}}
    </ul>
    ```
  
    ### Specifying Keys
  
    The `key` option is used to tell Ember how to determine if the array being
    iterated over with `{{#each}}` has changed between renders. By helping Ember
    detect that some elements in the array are the same, DOM elements can be
    re-used, significantly improving rendering speed.
  
    For example, here's the `{{#each}}` helper with its `key` set to `id`:
  
    ```handlebars
    {{#each model key="id" as |item|}}
    {{/each}}
    ```
  
    When this `{{#each}}` re-renders, Ember will match up the previously rendered
    items (and reorder the generated DOM elements) based on each item's `id`
    property.
    By default the item's own reference is used.
  
    ### {{else}} condition
  
    `{{#each}}` can have a matching `{{else}}`. The contents of this block will render
    if the collection is empty.
  
    ```handlebars
    {{#each developers as |person|}}
      {{person.name}}
    {{else}}
      <p>Sorry, nobody is available for this task.</p>
    {{/each}}
    ```
  
    @method each
    @for Ember.Templates.helpers
    @public
   */

  /**
    The `{{each-in}}` helper loops over properties on an object.
  
    For example, given a `user` object that looks like:
  
    ```javascript
    {
      "name": "Shelly Sails",
      "age": 42
    }
    ```
  
    This template would display all properties on the `user`
    object in a list:
  
    ```handlebars
    <ul>
    {{#each-in user as |key value|}}
      <li>{{key}}: {{value}}</li>
    {{/each-in}}
    </ul>
    ```
  
    Outputting their name and age.
  
    @method each-in
    @for Ember.Templates.helpers
    @public
    @since 2.1.0
  */
  var EACH_IN_REFERENCE = (0, _emberUtils.symbol)('EACH_IN'); /**
                                                              @module ember
                                                              */
  function isEachIn(ref) {
    return ref && ref[EACH_IN_REFERENCE];
  }
});
enifed('ember-glimmer/helpers/get', ['exports', 'ember-babel', 'ember-metal', 'ember-glimmer/utils/references', '@glimmer/reference'], function (exports, _emberBabel, _emberMetal, _references, _reference) {
  'use strict';

  exports.default = function (vm, args) {
    return GetHelperReference.create(args.positional.at(0), args.positional.at(1));
  };

  var GetHelperReference = function (_CachedReference) {
    (0, _emberBabel.inherits)(GetHelperReference, _CachedReference);

    GetHelperReference.create = function create(sourceReference, pathReference) {
      if ((0, _reference.isConst)(pathReference)) {
        var parts = pathReference.value().split('.');
        return (0, _reference.referenceFromParts)(sourceReference, parts);
      } else {
        return new GetHelperReference(sourceReference, pathReference);
      }
    };

    function GetHelperReference(sourceReference, pathReference) {
      (0, _emberBabel.classCallCheck)(this, GetHelperReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference.call(this));

      _this.sourceReference = sourceReference;
      _this.pathReference = pathReference;

      _this.lastPath = null;
      _this.innerReference = null;

      var innerTag = _this.innerTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);

      _this.tag = (0, _reference.combine)([sourceReference.tag, pathReference.tag, innerTag]);
      return _this;
    }

    GetHelperReference.prototype.compute = function compute() {
      var lastPath = this.lastPath,
          innerReference = this.innerReference,
          innerTag = this.innerTag;


      var path = this.lastPath = this.pathReference.value();

      if (path !== lastPath) {
        if (path !== undefined && path !== null && path !== '') {
          var pathType = typeof path;

          if (pathType === 'string') {
            innerReference = this.innerReference = (0, _reference.referenceFromParts)(this.sourceReference, path.split('.'));
          } else if (pathType === 'number') {
            innerReference = this.innerReference = this.sourceReference.get('' + path);
          }

          innerTag.update(innerReference.tag);
        } else {
          innerReference = this.innerReference = null;
          innerTag.update(_reference.CONSTANT_TAG);
        }
      }

      return innerReference ? innerReference.value() : null;
    };

    GetHelperReference.prototype[_references.UPDATE] = function (value) {
      (0, _emberMetal.set)(this.sourceReference.value(), this.pathReference.value(), value);
    };

    return GetHelperReference;
  }(_references.CachedReference);
});
enifed("ember-glimmer/helpers/hash", ["exports"], function (exports) {
  "use strict";

  exports.default = function (vm, args) {
    return args.named.capture();
  };
});
enifed('ember-glimmer/helpers/if-unless', ['exports', 'ember-babel', 'ember-debug', 'ember-glimmer/utils/references', '@glimmer/reference'], function (exports, _emberBabel, _emberDebug, _references, _reference) {
  'use strict';

  exports.inlineIf = inlineIf;
  exports.inlineUnless = inlineUnless;

  var ConditionalHelperReference = function (_CachedReference) {
    (0, _emberBabel.inherits)(ConditionalHelperReference, _CachedReference);

    ConditionalHelperReference.create = function create(_condRef, truthyRef, falsyRef) {
      var condRef = _references.ConditionalReference.create(_condRef);
      if ((0, _reference.isConst)(condRef)) {
        return condRef.value() ? truthyRef : falsyRef;
      } else {
        return new ConditionalHelperReference(condRef, truthyRef, falsyRef);
      }
    };

    function ConditionalHelperReference(cond, truthy, falsy) {
      (0, _emberBabel.classCallCheck)(this, ConditionalHelperReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference.call(this));

      _this.branchTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);
      _this.tag = (0, _reference.combine)([cond.tag, _this.branchTag]);

      _this.cond = cond;
      _this.truthy = truthy;
      _this.falsy = falsy;
      return _this;
    }

    ConditionalHelperReference.prototype.compute = function compute() {
      var branch = this.cond.value() ? this.truthy : this.falsy;

      this.branchTag.update(branch.tag);

      return branch.value();
    };

    return ConditionalHelperReference;
  }(_references.CachedReference);

  /**
    The `if` helper allows you to conditionally render one of two branches,
    depending on the "truthiness" of a property.
    For example the following values are all falsey: `false`, `undefined`, `null`, `""`, `0`, `NaN` or an empty array.
  
    This helper has two forms, block and inline.
  
    ## Block form
  
    You can use the block form of `if` to conditionally render a section of the template.
  
    To use it, pass the conditional value to the `if` helper,
    using the block form to wrap the section of template you want to conditionally render.
    Like so:
  
    ```handlebars
    {{! will not render if foo is falsey}}
    {{#if foo}}
      Welcome to the {{foo.bar}}
    {{/if}}
    ```
  
    You can also specify a template to show if the property is falsey by using
    the `else` helper.
  
    ```handlebars
    {{! is it raining outside?}}
    {{#if isRaining}}
      Yes, grab an umbrella!
    {{else}}
      No, it's lovely outside!
    {{/if}}
    ```
  
    You are also able to combine `else` and `if` helpers to create more complex
    conditional logic.
  
    ```handlebars
    {{#if isMorning}}
      Good morning
    {{else if isAfternoon}}
      Good afternoon
    {{else}}
      Good night
    {{/if}}
    ```
  
    ## Inline form
  
    The inline `if` helper conditionally renders a single property or string.
  
    In this form, the `if` helper receives three arguments, the conditional value,
    the value to render when truthy, and the value to render when falsey.
  
    For example, if `useLongGreeting` is truthy, the following:
  
    ```handlebars
    {{if useLongGreeting "Hello" "Hi"}} Alex
    ```
  
    Will render:
  
    ```html
    Hello Alex
    ```
  
    ### Nested `if`
  
    You can use the `if` helper inside another helper as a nested helper:
  
    ```handlebars
    {{some-component height=(if isBig "100" "10")}}
    ```
  
    One detail to keep in mind is that both branches of the `if` helper will be evaluated,
    so if you have `{{if condition "foo" (expensive-operation "bar")`,
    `expensive-operation` will always calculate.
  
    @method if
    @for Ember.Templates.helpers
    @public
  */
  function inlineIf(vm, _ref) {
    var positional = _ref.positional;
    (true && !(positional.length === 3 || positional.length === 2) && (0, _emberDebug.assert)('The inline form of the `if` helper expects two or three arguments, e.g. ' + '`{{if trialExpired "Expired" expiryDate}}`.', positional.length === 3 || positional.length === 2));

    return ConditionalHelperReference.create(positional.at(0), positional.at(1), positional.at(2));
  }

  /**
    The inline `unless` helper conditionally renders a single property or string.
    This helper acts like a ternary operator. If the first property is falsy,
    the second argument will be displayed, otherwise, the third argument will be
    displayed
  
    ```handlebars
    {{unless useLongGreeting "Hi" "Hello"}} Ben
    ```
  
    You can use the `unless` helper inside another helper as a subexpression.
  
    ```handlebars
    {{some-component height=(unless isBig "10" "100")}}
    ```
  
    @method unless
    @for Ember.Templates.helpers
    @public
  */
  function inlineUnless(vm, _ref2) {
    var positional = _ref2.positional;
    (true && !(positional.length === 3 || positional.length === 2) && (0, _emberDebug.assert)('The inline form of the `unless` helper expects two or three arguments, e.g. ' + '`{{unless isFirstLogin "Welcome back!"}}`.', positional.length === 3 || positional.length === 2));

    return ConditionalHelperReference.create(positional.at(0), positional.at(2), positional.at(1));
  }
});
enifed('ember-glimmer/helpers/loc', ['exports', 'ember-glimmer/utils/references', 'ember-runtime'], function (exports, _references, _emberRuntime) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(locHelper, args.capture());
  };

  /**
    Calls [loc](/api/classes/Ember.String.html#method_loc) with the
    provided string. This is a convenient way to localize text within a template.
    For example:
  
    ```javascript
    Ember.STRINGS = {
      '_welcome_': 'Bonjour'
    };
    ```
  
    ```handlebars
    <div class='message'>
      {{loc '_welcome_'}}
    </div>
    ```
  
    ```html
    <div class='message'>
      Bonjour
    </div>
    ```
  
    See [Ember.String.loc](/api/classes/Ember.String.html#method_loc) for how to
    set up localized string references.
  
    @method loc
    @for Ember.Templates.helpers
    @param {String} str The string to format.
    @see {Ember.String#loc}
    @public
  */

  /**
  @module ember
  */
  function locHelper(_ref) {
    var positional = _ref.positional;

    return _emberRuntime.String.loc.apply(null, positional.value());
  }
});
enifed('ember-glimmer/helpers/log', ['exports', 'ember-glimmer/utils/references', 'ember-console'], function (exports, _references, _emberConsole) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(log, args.capture());
  };

  /**
    `log` allows you to output the value of variables in the current rendering
    context. `log` also accepts primitive types such as strings or numbers.
  
    ```handlebars
    {{log "myVariable:" myVariable }}
    ```
  
    @method log
    @for Ember.Templates.helpers
    @param {Array} params
    @public
  */
  function log(_ref) {
    var positional = _ref.positional;

    _emberConsole.default.log.apply(null, positional.value());
  }
  /**
  @module ember
  */
});
enifed('ember-glimmer/helpers/mut', ['exports', 'ember-utils', 'ember-debug', 'ember-glimmer/utils/references', 'ember-glimmer/helpers/action'], function (exports, _emberUtils, _emberDebug, _references, _action) {
  'use strict';

  exports.isMut = isMut;
  exports.unMut = unMut;

  exports.default = function (vm, args) {
    var rawRef = args.positional.at(0);

    if (isMut(rawRef)) {
      return rawRef;
    }

    // TODO: Improve this error message. This covers at least two distinct
    // cases:
    //
    // 1. (mut "not a path") – passing a literal, result from a helper
    //    invocation, etc
    //
    // 2. (mut receivedValue) – passing a value received from the caller
    //    that was originally derived from a literal, result from a helper
    //    invocation, etc
    //
    // This message is alright for the first case, but could be quite
    // confusing for the second case.
    (true && !(rawRef[_references.UPDATE]) && (0, _emberDebug.assert)('You can only pass a path to mut', rawRef[_references.UPDATE]));


    var wrappedRef = Object.create(rawRef);

    wrappedRef[SOURCE] = rawRef;
    wrappedRef[_action.INVOKE] = rawRef[_references.UPDATE];
    wrappedRef[MUT_REFERENCE] = true;

    return wrappedRef;
  };

  /**
    The `mut` helper lets you __clearly specify__ that a child `Component` can update the
    (mutable) value passed to it, which will __change the value of the parent component__.
  
    To specify that a parameter is mutable, when invoking the child `Component`:
  
    ```handlebars
    {{my-child childClickCount=(mut totalClicks)}}
    ```
  
    The child `Component` can then modify the parent's value just by modifying its own
    property:
  
    ```javascript
    // my-child.js
    export default Component.extend({
      click() {
        this.incrementProperty('childClickCount');
      }
    });
    ```
  
    Note that for curly components (`{{my-component}}`) the bindings are already mutable,
    making the `mut` unnecessary.
  
    Additionally, the `mut` helper can be combined with the `action` helper to
    mutate a value. For example:
  
    ```handlebars
    {{my-child childClickCount=totalClicks click-count-change=(action (mut totalClicks))}}
    ```
  
    The child `Component` would invoke the action with the new click value:
  
    ```javascript
    // my-child.js
    export default Component.extend({
      click() {
        this.get('click-count-change')(this.get('childClickCount') + 1);
      }
    });
    ```
  
    The `mut` helper changes the `totalClicks` value to what was provided as the action argument.
  
    The `mut` helper, when used with `action`, will return a function that
    sets the value passed to `mut` to its first argument. This works like any other
    closure action and interacts with the other features `action` provides.
    As an example, we can create a button that increments a value passing the value
    directly to the `action`:
  
    ```handlebars
    {{! inc helper is not provided by Ember }}
    <button onclick={{action (mut count) (inc count)}}>
      Increment count
    </button>
    ```
  
    You can also use the `value` option:
  
    ```handlebars
    <input value={{name}} oninput={{action (mut name) value="target.value"}}>
    ```
  
    @method mut
    @param {Object} [attr] the "two-way" attribute that can be modified.
    @for Ember.Templates.helpers
    @public
  */
  /**
  @module ember
  */
  var MUT_REFERENCE = (0, _emberUtils.symbol)('MUT');
  var SOURCE = (0, _emberUtils.symbol)('SOURCE');

  function isMut(ref) {
    return ref && ref[MUT_REFERENCE];
  }

  function unMut(ref) {
    return ref[SOURCE] || ref;
  }
});
enifed('ember-glimmer/helpers/query-param', ['exports', 'ember-utils', 'ember-glimmer/utils/references', 'ember-debug', 'ember-routing'], function (exports, _emberUtils, _references, _emberDebug, _emberRouting) {
  'use strict';

  exports.default = function (vm, args) {
    return new _references.InternalHelperReference(queryParams, args.capture());
  };

  /**
    This is a helper to be used in conjunction with the link-to helper.
    It will supply url query parameters to the target route.
  
    Example
  
    ```handlebars
    {{#link-to 'posts' (query-params direction="asc")}}Sort{{/link-to}}
    ```
  
    @method query-params
    @for Ember.Templates.helpers
    @param {Object} hash takes a hash of query parameters
    @return {Object} A `QueryParams` object for `{{link-to}}`
    @public
  */
  /**
  @module ember
  */
  function queryParams(_ref) {
    var positional = _ref.positional,
        named = _ref.named;
    (true && !(positional.value().length === 0) && (0, _emberDebug.assert)('The `query-params` helper only accepts hash parameters, e.g. (query-params queryParamPropertyName=\'foo\') as opposed to just (query-params \'foo\')', positional.value().length === 0));


    return _emberRouting.QueryParams.create({
      values: (0, _emberUtils.assign)({}, named.value())
    });
  }
});
enifed('ember-glimmer/helpers/readonly', ['exports', 'ember-glimmer/utils/references', 'ember-glimmer/helpers/mut'], function (exports, _references, _mut) {
  'use strict';

  exports.default = function (vm, args) {
    var ref = (0, _mut.unMut)(args.positional.at(0));

    var wrapped = Object.create(ref);

    wrapped[_references.UPDATE] = undefined;

    return wrapped;
  };
});
enifed('ember-glimmer/helpers/unbound', ['exports', 'ember-debug', 'ember-glimmer/utils/references'], function (exports, _emberDebug, _references) {
  'use strict';

  exports.default = function (vm, args) {
    (true && !(args.positional.length === 1 && args.named.length === 0) && (0, _emberDebug.assert)('unbound helper cannot be called with multiple params or hash params', args.positional.length === 1 && args.named.length === 0));


    return _references.UnboundReference.create(args.positional.at(0).value());
  };
});
enifed('ember-glimmer/index', ['exports', 'ember-glimmer/helpers/action', 'ember-glimmer/templates/root', 'ember-glimmer/template', 'ember-glimmer/components/checkbox', 'ember-glimmer/components/text_field', 'ember-glimmer/components/text_area', 'ember-glimmer/components/link-to', 'ember-glimmer/component', 'ember-glimmer/helper', 'ember-glimmer/environment', 'ember-glimmer/utils/string', 'ember-glimmer/renderer', 'ember-glimmer/template_registry', 'ember-glimmer/setup-registry', 'ember-glimmer/dom', 'ember-glimmer/syntax', 'ember-glimmer/component-managers/abstract'], function (exports, _action, _root, _template, _checkbox, _text_field, _text_area, _linkTo, _component, _helper, _environment, _string, _renderer, _template_registry, _setupRegistry, _dom, _syntax, _abstract) {
  'use strict';

  Object.defineProperty(exports, 'INVOKE', {
    enumerable: true,
    get: function () {
      return _action.INVOKE;
    }
  });
  Object.defineProperty(exports, 'RootTemplate', {
    enumerable: true,
    get: function () {
      return _root.default;
    }
  });
  Object.defineProperty(exports, 'template', {
    enumerable: true,
    get: function () {
      return _template.default;
    }
  });
  Object.defineProperty(exports, 'Checkbox', {
    enumerable: true,
    get: function () {
      return _checkbox.default;
    }
  });
  Object.defineProperty(exports, 'TextField', {
    enumerable: true,
    get: function () {
      return _text_field.default;
    }
  });
  Object.defineProperty(exports, 'TextArea', {
    enumerable: true,
    get: function () {
      return _text_area.default;
    }
  });
  Object.defineProperty(exports, 'LinkComponent', {
    enumerable: true,
    get: function () {
      return _linkTo.default;
    }
  });
  Object.defineProperty(exports, 'Component', {
    enumerable: true,
    get: function () {
      return _component.default;
    }
  });
  Object.defineProperty(exports, 'Helper', {
    enumerable: true,
    get: function () {
      return _helper.default;
    }
  });
  Object.defineProperty(exports, 'helper', {
    enumerable: true,
    get: function () {
      return _helper.helper;
    }
  });
  Object.defineProperty(exports, 'Environment', {
    enumerable: true,
    get: function () {
      return _environment.default;
    }
  });
  Object.defineProperty(exports, 'SafeString', {
    enumerable: true,
    get: function () {
      return _string.SafeString;
    }
  });
  Object.defineProperty(exports, 'escapeExpression', {
    enumerable: true,
    get: function () {
      return _string.escapeExpression;
    }
  });
  Object.defineProperty(exports, 'htmlSafe', {
    enumerable: true,
    get: function () {
      return _string.htmlSafe;
    }
  });
  Object.defineProperty(exports, 'isHTMLSafe', {
    enumerable: true,
    get: function () {
      return _string.isHTMLSafe;
    }
  });
  Object.defineProperty(exports, '_getSafeString', {
    enumerable: true,
    get: function () {
      return _string.getSafeString;
    }
  });
  Object.defineProperty(exports, 'Renderer', {
    enumerable: true,
    get: function () {
      return _renderer.Renderer;
    }
  });
  Object.defineProperty(exports, 'InertRenderer', {
    enumerable: true,
    get: function () {
      return _renderer.InertRenderer;
    }
  });
  Object.defineProperty(exports, 'InteractiveRenderer', {
    enumerable: true,
    get: function () {
      return _renderer.InteractiveRenderer;
    }
  });
  Object.defineProperty(exports, '_resetRenderers', {
    enumerable: true,
    get: function () {
      return _renderer._resetRenderers;
    }
  });
  Object.defineProperty(exports, 'getTemplate', {
    enumerable: true,
    get: function () {
      return _template_registry.getTemplate;
    }
  });
  Object.defineProperty(exports, 'setTemplate', {
    enumerable: true,
    get: function () {
      return _template_registry.setTemplate;
    }
  });
  Object.defineProperty(exports, 'hasTemplate', {
    enumerable: true,
    get: function () {
      return _template_registry.hasTemplate;
    }
  });
  Object.defineProperty(exports, 'getTemplates', {
    enumerable: true,
    get: function () {
      return _template_registry.getTemplates;
    }
  });
  Object.defineProperty(exports, 'setTemplates', {
    enumerable: true,
    get: function () {
      return _template_registry.setTemplates;
    }
  });
  Object.defineProperty(exports, 'setupEngineRegistry', {
    enumerable: true,
    get: function () {
      return _setupRegistry.setupEngineRegistry;
    }
  });
  Object.defineProperty(exports, 'setupApplicationRegistry', {
    enumerable: true,
    get: function () {
      return _setupRegistry.setupApplicationRegistry;
    }
  });
  Object.defineProperty(exports, 'DOMChanges', {
    enumerable: true,
    get: function () {
      return _dom.DOMChanges;
    }
  });
  Object.defineProperty(exports, 'NodeDOMTreeConstruction', {
    enumerable: true,
    get: function () {
      return _dom.NodeDOMTreeConstruction;
    }
  });
  Object.defineProperty(exports, 'DOMTreeConstruction', {
    enumerable: true,
    get: function () {
      return _dom.DOMTreeConstruction;
    }
  });
  Object.defineProperty(exports, '_registerMacros', {
    enumerable: true,
    get: function () {
      return _syntax.registerMacros;
    }
  });
  Object.defineProperty(exports, '_experimentalMacros', {
    enumerable: true,
    get: function () {
      return _syntax.experimentalMacros;
    }
  });
  Object.defineProperty(exports, 'AbstractComponentManager', {
    enumerable: true,
    get: function () {
      return _abstract.default;
    }
  });
});
enifed('ember-glimmer/modifiers/action', ['exports', 'ember-babel', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-views', 'ember-glimmer/helpers/action'], function (exports, _emberBabel, _emberUtils, _emberMetal, _emberDebug, _emberViews, _action) {
  'use strict';

  exports.ActionState = exports.ActionHelper = undefined;


  var MODIFIERS = ['alt', 'shift', 'meta', 'ctrl'];
  var POINTER_EVENT_TYPE_REGEX = /^click|mouse|touch/;

  function isAllowedEvent(event, allowedKeys) {
    if (allowedKeys === null || allowedKeys === undefined) {
      if (POINTER_EVENT_TYPE_REGEX.test(event.type)) {
        return (0, _emberViews.isSimpleClick)(event);
      } else {
        allowedKeys = '';
      }
    }

    if (allowedKeys.indexOf('any') >= 0) {
      return true;
    }

    for (var i = 0; i < MODIFIERS.length; i++) {
      if (event[MODIFIERS[i] + 'Key'] && allowedKeys.indexOf(MODIFIERS[i]) === -1) {
        return false;
      }
    }

    return true;
  }

  var ActionHelper = exports.ActionHelper = {
    // registeredActions is re-exported for compatibility with older plugins
    // that were using this undocumented API.
    registeredActions: _emberViews.ActionManager.registeredActions,

    registerAction: function (actionState) {
      var actionId = actionState.actionId;


      _emberViews.ActionManager.registeredActions[actionId] = actionState;

      return actionId;
    },
    unregisterAction: function (actionState) {
      var actionId = actionState.actionId;


      delete _emberViews.ActionManager.registeredActions[actionId];
    }
  };

  var ActionState = exports.ActionState = function () {
    function ActionState(element, actionId, actionName, actionArgs, namedArgs, positionalArgs, implicitTarget, dom) {
      (0, _emberBabel.classCallCheck)(this, ActionState);

      this.element = element;
      this.actionId = actionId;
      this.actionName = actionName;
      this.actionArgs = actionArgs;
      this.namedArgs = namedArgs;
      this.positional = positionalArgs;
      this.implicitTarget = implicitTarget;
      this.dom = dom;
      this.eventName = this.getEventName();
    }

    ActionState.prototype.getEventName = function getEventName() {
      return this.namedArgs.get('on').value() || 'click';
    };

    ActionState.prototype.getActionArgs = function getActionArgs() {
      var result = new Array(this.actionArgs.length);

      for (var i = 0; i < this.actionArgs.length; i++) {
        result[i] = this.actionArgs[i].value();
      }

      return result;
    };

    ActionState.prototype.getTarget = function getTarget() {
      var implicitTarget = this.implicitTarget,
          namedArgs = this.namedArgs;

      var target = void 0;

      if (namedArgs.has('target')) {
        target = namedArgs.get('target').value();
      } else {
        target = implicitTarget.value();
      }

      return target;
    };

    ActionState.prototype.handler = function handler(event) {
      var _this = this;

      var actionName = this.actionName,
          namedArgs = this.namedArgs;

      var bubbles = namedArgs.get('bubbles');
      var preventDefault = namedArgs.get('preventDefault');
      var allowedKeys = namedArgs.get('allowedKeys');
      var target = this.getTarget();

      if (!isAllowedEvent(event, allowedKeys.value())) {
        return true;
      }

      if (preventDefault.value() !== false) {
        event.preventDefault();
      }

      if (bubbles.value() === false) {
        event.stopPropagation();
      }

      (0, _emberMetal.run)(function () {
        var args = _this.getActionArgs();
        var payload = {
          args: args,
          target: target
        };
        if (typeof actionName[_action.INVOKE] === 'function') {
          (0, _emberMetal.flaggedInstrument)('interaction.ember-action', payload, function () {
            actionName[_action.INVOKE].apply(actionName, args);
          });
          return;
        }
        if (typeof actionName === 'function') {
          (0, _emberMetal.flaggedInstrument)('interaction.ember-action', payload, function () {
            actionName.apply(target, args);
          });
          return;
        }
        payload.name = actionName;
        if (target.send) {
          (0, _emberMetal.flaggedInstrument)('interaction.ember-action', payload, function () {
            target.send.apply(target, [actionName].concat(args));
          });
        } else {
          (true && !(typeof target[actionName] === 'function') && (0, _emberDebug.assert)('The action \'' + actionName + '\' did not exist on ' + target, typeof target[actionName] === 'function'));

          (0, _emberMetal.flaggedInstrument)('interaction.ember-action', payload, function () {
            target[actionName].apply(target, args);
          });
        }
      });
    };

    ActionState.prototype.destroy = function destroy() {
      ActionHelper.unregisterAction(this);
    };

    return ActionState;
  }();

  var ActionModifierManager = function () {
    function ActionModifierManager() {
      (0, _emberBabel.classCallCheck)(this, ActionModifierManager);
    }

    ActionModifierManager.prototype.create = function create(element, args, dynamicScope, dom) {
      var _args$capture = args.capture(),
          named = _args$capture.named,
          positional = _args$capture.positional;

      var implicitTarget = void 0;
      var actionName = void 0;
      var actionNameRef = void 0;
      if (positional.length > 1) {
        implicitTarget = positional.at(0);
        actionNameRef = positional.at(1);

        if (actionNameRef[_action.INVOKE]) {
          actionName = actionNameRef;
        } else {
          var actionLabel = actionNameRef._propertyKey;
          actionName = actionNameRef.value();

          (true && !(typeof actionName === 'string' || typeof actionName === 'function') && (0, _emberDebug.assert)('You specified a quoteless path, `' + actionLabel + '`, to the ' + '{{action}} helper which did not resolve to an action name (a ' + 'string). Perhaps you meant to use a quoted actionName? (e.g. ' + '{{action "' + actionLabel + '"}}).', typeof actionName === 'string' || typeof actionName === 'function'));
        }
      }

      var actionArgs = [];
      // The first two arguments are (1) `this` and (2) the action name.
      // Everything else is a param.
      for (var i = 2; i < positional.length; i++) {
        actionArgs.push(positional.at(i));
      }

      var actionId = (0, _emberUtils.uuid)();
      return new ActionState(element, actionId, actionName, actionArgs, named, positional, implicitTarget, dom);
    };

    ActionModifierManager.prototype.install = function install(actionState) {
      var dom = actionState.dom,
          element = actionState.element,
          actionId = actionState.actionId;


      ActionHelper.registerAction(actionState);

      dom.setAttribute(element, 'data-ember-action', '');
      dom.setAttribute(element, 'data-ember-action-' + actionId, actionId);
    };

    ActionModifierManager.prototype.update = function update(actionState) {
      var positional = actionState.positional;

      var actionNameRef = positional.at(1);

      if (!actionNameRef[_action.INVOKE]) {
        actionState.actionName = actionNameRef.value();
      }

      actionState.eventName = actionState.getEventName();
    };

    ActionModifierManager.prototype.getDestructor = function getDestructor(modifier) {
      return modifier;
    };

    return ActionModifierManager;
  }();

  exports.default = ActionModifierManager;
});
enifed('ember-glimmer/protocol-for-url', ['exports', 'ember-environment', 'node-module'], function (exports, _emberEnvironment, _nodeModule) {
  'use strict';

  exports.default = installProtocolForURL;
  /* globals module, URL */

  var nodeURL = void 0;
  var parsingNode = void 0;

  function installProtocolForURL(environment) {
    var protocol = void 0;

    if (_emberEnvironment.environment.hasDOM) {
      protocol = browserProtocolForURL.call(environment, 'foobar:baz');
    }

    // Test to see if our DOM implementation parses
    // and normalizes URLs.
    if (protocol === 'foobar:') {
      // Swap in the method that doesn't do this test now that
      // we know it works.
      environment.protocolForURL = browserProtocolForURL;
    } else if (typeof URL === 'object') {
      // URL globally provided, likely from FastBoot's sandbox
      nodeURL = URL;
      environment.protocolForURL = nodeProtocolForURL;
    } else if (_nodeModule.IS_NODE) {
      // Otherwise, we need to fall back to our own URL parsing.
      // Global `require` is shadowed by Ember's loader so we have to use the fully
      // qualified `module.require`.
      nodeURL = (0, _nodeModule.require)('url');
      environment.protocolForURL = nodeProtocolForURL;
    } else {
      throw new Error('Could not find valid URL parsing mechanism for URL Sanitization');
    }
  }

  function browserProtocolForURL(url) {
    if (!parsingNode) {
      parsingNode = document.createElement('a');
    }

    parsingNode.href = url;
    return parsingNode.protocol;
  }

  function nodeProtocolForURL(url) {
    var protocol = null;
    if (typeof url === 'string') {
      protocol = nodeURL.parse(url).protocol;
    }
    return protocol === null ? ':' : protocol;
  }
});
enifed('ember-glimmer/renderer', ['exports', 'ember-babel', 'ember-glimmer/utils/references', 'ember-metal', '@glimmer/reference', 'ember-views', 'ember-glimmer/component', 'ember-glimmer/component-managers/root', 'ember-glimmer/component-managers/outlet', 'ember-debug'], function (exports, _emberBabel, _references, _emberMetal, _reference, _emberViews, _component, _root2, _outlet, _emberDebug) {
  'use strict';

  exports.InteractiveRenderer = exports.InertRenderer = undefined;
  exports._resetRenderers = _resetRenderers;
  var backburner = _emberMetal.run.backburner;

  var DynamicScope = function () {
    function DynamicScope(view, outletState, rootOutletState, targetObject) {
      (0, _emberBabel.classCallCheck)(this, DynamicScope);

      this.view = view;
      this.outletState = outletState;
      this.rootOutletState = rootOutletState;
    }

    DynamicScope.prototype.child = function child() {
      return new DynamicScope(this.view, this.outletState, this.rootOutletState);
    };

    DynamicScope.prototype.get = function get(key) {
      (true && !(key === 'outletState') && (0, _emberDebug.assert)('Using `-get-dynamic-scope` is only supported for `outletState` (you used `' + key + '`).', key === 'outletState'));

      return this.outletState;
    };

    DynamicScope.prototype.set = function set(key, value) {
      (true && !(key === 'outletState') && (0, _emberDebug.assert)('Using `-with-dynamic-scope` is only supported for `outletState` (you used `' + key + '`).', key === 'outletState'));

      this.outletState = value;
      return value;
    };

    return DynamicScope;
  }();

  var RootState = function () {
    function RootState(root, env, template, self, parentElement, dynamicScope) {
      var _this = this;

      (0, _emberBabel.classCallCheck)(this, RootState);
      (true && !(template) && (0, _emberDebug.assert)('You cannot render `' + self.value() + '` without a template.', template));


      this.id = (0, _emberViews.getViewId)(root);
      this.env = env;
      this.root = root;
      this.result = undefined;
      this.shouldReflush = false;
      this.destroyed = false;
      this._removing = false;

      var options = this.options = {
        alwaysRevalidate: false
      };

      this.render = function () {
        var iterator = template.render(self, parentElement, dynamicScope);
        var iteratorResult = void 0;

        do {
          iteratorResult = iterator.next();
        } while (!iteratorResult.done);

        var result = _this.result = iteratorResult.value;

        // override .render function after initial render
        _this.render = function () {
          return result.rerender(options);
        };
      };
    }

    RootState.prototype.isFor = function isFor(possibleRoot) {
      return this.root === possibleRoot;
    };

    RootState.prototype.destroy = function destroy() {
      var result = this.result,
          env = this.env;


      this.destroyed = true;

      this.env = null;
      this.root = null;
      this.result = null;
      this.render = null;

      if (result) {
        /*
         Handles these scenarios:
          * When roots are removed during standard rendering process, a transaction exists already
           `.begin()` / `.commit()` are not needed.
         * When roots are being destroyed manually (`component.append(); component.destroy() case), no
           transaction exists already.
         * When roots are being destroyed during `Renderer#destroy`, no transaction exists
          */
        var needsTransaction = !env.inTransaction;

        if (needsTransaction) {
          env.begin();
        }

        result.destroy();

        if (needsTransaction) {
          env.commit();
        }
      }
    };

    return RootState;
  }();

  var renderers = [];

  function _resetRenderers() {
    renderers.length = 0;
  }

  (0, _emberMetal.setHasViews)(function () {
    return renderers.length > 0;
  });

  function register(renderer) {
    (true && !(renderers.indexOf(renderer) === -1) && (0, _emberDebug.assert)('Cannot register the same renderer twice', renderers.indexOf(renderer) === -1));

    renderers.push(renderer);
  }

  function deregister(renderer) {
    var index = renderers.indexOf(renderer);
    (true && !(index !== -1) && (0, _emberDebug.assert)('Cannot deregister unknown unregistered renderer', index !== -1));

    renderers.splice(index, 1);
  }

  function loopBegin() {
    for (var i = 0; i < renderers.length; i++) {
      renderers[i]._scheduleRevalidate();
    }
  }

  function K() {}

  var loops = 0;
  function loopEnd(current, next) {
    for (var i = 0; i < renderers.length; i++) {
      if (!renderers[i]._isValid()) {
        if (loops > 10) {
          loops = 0;
          // TODO: do something better
          renderers[i].destroy();
          throw new Error('infinite rendering invalidation detected');
        }
        loops++;
        return backburner.join(null, K);
      }
    }
    loops = 0;
  }

  backburner.on('begin', loopBegin);
  backburner.on('end', loopEnd);

  var Renderer = function () {
    function Renderer(env, rootTemplate) {
      var _viewRegistry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emberViews.fallbackViewRegistry;

      var destinedForDOM = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      (0, _emberBabel.classCallCheck)(this, Renderer);

      this._env = env;
      this._rootTemplate = rootTemplate;
      this._viewRegistry = _viewRegistry;
      this._destinedForDOM = destinedForDOM;
      this._destroyed = false;
      this._roots = [];
      this._lastRevision = null;
      this._isRenderingRoots = false;
      this._removedRoots = [];
    }

    // renderer HOOKS

    Renderer.prototype.appendOutletView = function appendOutletView(view, target) {
      var definition = new _outlet.TopLevelOutletComponentDefinition(view);
      var outletStateReference = view.toReference();
      var targetObject = view.outletState.render.controller;

      this._appendDefinition(view, definition, target, outletStateReference, targetObject);
    };

    Renderer.prototype.appendTo = function appendTo(view, target) {
      var rootDef = new _root2.RootComponentDefinition(view);

      this._appendDefinition(view, rootDef, target);
    };

    Renderer.prototype._appendDefinition = function _appendDefinition(root, definition, target) {
      var outletStateReference = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _reference.UNDEFINED_REFERENCE;
      var targetObject = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;

      var self = new _references.RootReference(definition);
      var dynamicScope = new DynamicScope(null, outletStateReference, outletStateReference, true, targetObject);
      var rootState = new RootState(root, this._env, this._rootTemplate, self, target, dynamicScope);

      this._renderRoot(rootState);
    };

    Renderer.prototype.rerender = function rerender(view) {
      this._scheduleRevalidate();
    };

    Renderer.prototype.register = function register(view) {
      var id = (0, _emberViews.getViewId)(view);
      (true && !(!this._viewRegistry[id]) && (0, _emberDebug.assert)('Attempted to register a view with an id already in use: ' + id, !this._viewRegistry[id]));

      this._viewRegistry[id] = view;
    };

    Renderer.prototype.unregister = function unregister(view) {
      delete this._viewRegistry[(0, _emberViews.getViewId)(view)];
    };

    Renderer.prototype.remove = function remove(view) {
      view._transitionTo('destroying');

      this.cleanupRootFor(view);

      (0, _emberViews.setViewElement)(view, null);

      if (this._destinedForDOM) {
        view.trigger('didDestroyElement');
      }

      if (!view.isDestroying) {
        view.destroy();
      }
    };

    Renderer.prototype.cleanupRootFor = function cleanupRootFor(view) {
      // no need to cleanup roots if we have already been destroyed
      if (this._destroyed) {
        return;
      }

      var roots = this._roots;

      // traverse in reverse so we can remove items
      // without mucking up the index
      var i = this._roots.length;
      while (i--) {
        var root = roots[i];
        if (root.isFor(view)) {
          root.destroy();
          roots.splice(i, 1);
        }
      }
    };

    Renderer.prototype.destroy = function destroy() {
      if (this._destroyed) {
        return;
      }
      this._destroyed = true;
      this._clearAllRoots();
    };

    Renderer.prototype.getElement = function getElement(view) {
      // overridden in the subclasses
    };

    Renderer.prototype.getBounds = function getBounds(view) {
      var bounds = view[_component.BOUNDS];

      var parentElement = bounds.parentElement();
      var firstNode = bounds.firstNode();
      var lastNode = bounds.lastNode();

      return { parentElement: parentElement, firstNode: firstNode, lastNode: lastNode };
    };

    Renderer.prototype.createElement = function createElement(tagName) {
      return this._env.getAppendOperations().createElement(tagName);
    };

    Renderer.prototype._renderRoot = function _renderRoot(root) {
      var roots = this._roots;


      roots.push(root);

      if (roots.length === 1) {
        register(this);
      }

      this._renderRootsTransaction();
    };

    Renderer.prototype._renderRoots = function _renderRoots() {
      var roots = this._roots,
          env = this._env,
          removedRoots = this._removedRoots;

      var globalShouldReflush = void 0,
          initialRootsLength = void 0;

      do {
        env.begin();

        // ensure that for the first iteration of the loop
        // each root is processed
        initialRootsLength = roots.length;
        globalShouldReflush = false;

        for (var i = 0; i < roots.length; i++) {
          var root = roots[i];

          if (root.destroyed) {
            // add to the list of roots to be removed
            // they will be removed from `this._roots` later
            removedRoots.push(root);

            // skip over roots that have been marked as destroyed
            continue;
          }

          var shouldReflush = root.shouldReflush;


          // when processing non-initial reflush loops,
          // do not process more roots than needed
          if (i >= initialRootsLength && !shouldReflush) {
            continue;
          }

          root.options.alwaysRevalidate = shouldReflush;
          // track shouldReflush based on this roots render result
          shouldReflush = root.shouldReflush = (0, _emberMetal.runInTransaction)(root, 'render');

          // globalShouldReflush should be `true` if *any* of
          // the roots need to reflush
          globalShouldReflush = globalShouldReflush || shouldReflush;
        }

        this._lastRevision = _reference.CURRENT_TAG.value();

        env.commit();
      } while (globalShouldReflush || roots.length > initialRootsLength);

      // remove any roots that were destroyed during this transaction
      while (removedRoots.length) {
        var _root = removedRoots.pop();

        var rootIndex = roots.indexOf(_root);
        roots.splice(rootIndex, 1);
      }

      if (this._roots.length === 0) {
        deregister(this);
      }
    };

    Renderer.prototype._renderRootsTransaction = function _renderRootsTransaction() {
      if (this._isRenderingRoots) {
        // currently rendering roots, a new root was added and will
        // be processed by the existing _renderRoots invocation
        return;
      }

      // used to prevent calling _renderRoots again (see above)
      // while we are actively rendering roots
      this._isRenderingRoots = true;

      var completedWithoutError = false;
      try {
        this._renderRoots();
        completedWithoutError = true;
      } finally {
        if (!completedWithoutError) {
          this._lastRevision = _reference.CURRENT_TAG.value();
        }
        this._isRenderingRoots = false;
      }
    };

    Renderer.prototype._clearAllRoots = function _clearAllRoots() {
      var roots = this._roots;
      for (var i = 0; i < roots.length; i++) {
        var root = roots[i];
        root.destroy();
      }

      this._removedRoots.length = 0;
      this._roots = null;

      // if roots were present before destroying
      // deregister this renderer instance
      if (roots.length) {
        deregister(this);
      }
    };

    Renderer.prototype._scheduleRevalidate = function _scheduleRevalidate() {
      backburner.scheduleOnce('render', this, this._revalidate);
    };

    Renderer.prototype._isValid = function _isValid() {
      return this._destroyed || this._roots.length === 0 || _reference.CURRENT_TAG.validate(this._lastRevision);
    };

    Renderer.prototype._revalidate = function _revalidate() {
      if (this._isValid()) {
        return;
      }
      this._renderRootsTransaction();
    };

    return Renderer;
  }();

  var InertRenderer = exports.InertRenderer = function (_Renderer) {
    (0, _emberBabel.inherits)(InertRenderer, _Renderer);

    function InertRenderer() {
      (0, _emberBabel.classCallCheck)(this, InertRenderer);
      return (0, _emberBabel.possibleConstructorReturn)(this, _Renderer.apply(this, arguments));
    }

    InertRenderer.create = function create(_ref) {
      var env = _ref.env,
          rootTemplate = _ref.rootTemplate,
          _viewRegistry = _ref._viewRegistry;

      return new this(env, rootTemplate, _viewRegistry, false);
    };

    InertRenderer.prototype.getElement = function getElement(view) {
      throw new Error('Accessing `this.element` is not allowed in non-interactive environments (such as FastBoot).');
    };

    return InertRenderer;
  }(Renderer);

  var InteractiveRenderer = exports.InteractiveRenderer = function (_Renderer2) {
    (0, _emberBabel.inherits)(InteractiveRenderer, _Renderer2);

    function InteractiveRenderer() {
      (0, _emberBabel.classCallCheck)(this, InteractiveRenderer);
      return (0, _emberBabel.possibleConstructorReturn)(this, _Renderer2.apply(this, arguments));
    }

    InteractiveRenderer.create = function create(_ref2) {
      var env = _ref2.env,
          rootTemplate = _ref2.rootTemplate,
          _viewRegistry = _ref2._viewRegistry;

      return new this(env, rootTemplate, _viewRegistry, true);
    };

    InteractiveRenderer.prototype.getElement = function getElement(view) {
      return (0, _emberViews.getViewElement)(view);
    };

    return InteractiveRenderer;
  }(Renderer);
});
enifed('ember-glimmer/setup-registry', ['exports', 'ember-babel', 'ember-environment', 'container', 'ember-glimmer/renderer', 'ember-glimmer/dom', 'ember-glimmer/views/outlet', 'ember-glimmer/components/text_field', 'ember-glimmer/components/text_area', 'ember-glimmer/components/checkbox', 'ember-glimmer/components/link-to', 'ember-glimmer/component', 'ember-glimmer/templates/component', 'ember-glimmer/templates/root', 'ember-glimmer/templates/outlet', 'ember-glimmer/environment'], function (exports, _emberBabel, _emberEnvironment, _container, _renderer, _dom, _outlet, _text_field, _text_area, _checkbox, _linkTo, _component, _component2, _root, _outlet2, _environment) {
  'use strict';

  exports.setupApplicationRegistry = setupApplicationRegistry;
  exports.setupEngineRegistry = setupEngineRegistry;

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['template:-root'], ['template:-root']),
      _templateObject2 = (0, _emberBabel.taggedTemplateLiteralLoose)(['template:components/-default'], ['template:components/-default']),
      _templateObject3 = (0, _emberBabel.taggedTemplateLiteralLoose)(['component:-default'], ['component:-default']);

  function setupApplicationRegistry(registry) {
    registry.injection('service:-glimmer-environment', 'appendOperations', 'service:-dom-tree-construction');
    registry.injection('renderer', 'env', 'service:-glimmer-environment');

    registry.register((0, _container.privatize)(_templateObject), _root.default);
    registry.injection('renderer', 'rootTemplate', (0, _container.privatize)(_templateObject));

    registry.register('renderer:-dom', _renderer.InteractiveRenderer);
    registry.register('renderer:-inert', _renderer.InertRenderer);

    if (_emberEnvironment.environment.hasDOM) {
      registry.injection('service:-glimmer-environment', 'updateOperations', 'service:-dom-changes');
    }

    registry.register('service:-dom-changes', {
      create: function (_ref) {
        var document = _ref.document;

        return new _dom.DOMChanges(document);
      }
    });

    registry.register('service:-dom-tree-construction', {
      create: function (_ref2) {
        var document = _ref2.document;

        var Implementation = _emberEnvironment.environment.hasDOM ? _dom.DOMTreeConstruction : _dom.NodeDOMTreeConstruction;
        return new Implementation(document);
      }
    });
  }

  function setupEngineRegistry(registry) {
    registry.register('view:-outlet', _outlet.default);
    registry.register('template:-outlet', _outlet2.default);
    registry.injection('view:-outlet', 'template', 'template:-outlet');

    registry.injection('service:-dom-changes', 'document', 'service:-document');
    registry.injection('service:-dom-tree-construction', 'document', 'service:-document');

    registry.register((0, _container.privatize)(_templateObject2), _component2.default);

    registry.register('service:-glimmer-environment', _environment.default);
    registry.injection('template', 'env', 'service:-glimmer-environment');

    registry.optionsForType('helper', { instantiate: false });

    registry.register('component:-text-field', _text_field.default);
    registry.register('component:-text-area', _text_area.default);
    registry.register('component:-checkbox', _checkbox.default);
    registry.register('component:link-to', _linkTo.default);
    registry.register((0, _container.privatize)(_templateObject3), _component.default);
  }
});
enifed('ember-glimmer/syntax', ['exports', 'ember-glimmer/syntax/render', 'ember-glimmer/syntax/outlet', 'ember-glimmer/syntax/mount', 'ember-glimmer/syntax/dynamic-component', 'ember-glimmer/utils/bindings', 'ember-glimmer/syntax/input', 'ember-glimmer/syntax/-text-area', 'ember-glimmer/syntax/utils', 'ember-debug'], function (exports, _render, _outlet, _mount, _dynamicComponent, _bindings, _input, _textArea, _utils, _emberDebug) {
  'use strict';

  exports.experimentalMacros = undefined;
  exports.registerMacros = registerMacros;
  exports.populateMacros = populateMacros;


  function refineInlineSyntax(name, params, hash, builder) {
    (true && !(!(builder.env.builtInHelpers[name] && builder.env.owner.hasRegistration('helper:' + name))) && (0, _emberDebug.assert)('You attempted to overwrite the built-in helper "' + name + '" which is not allowed. Please rename the helper.', !(builder.env.builtInHelpers[name] && builder.env.owner.hasRegistration('helper:' + name))));


    var definition = void 0;
    if (name.indexOf('-') > -1) {
      definition = builder.env.getComponentDefinition(name, builder.meta.templateMeta);
    }

    if (definition) {
      (0, _bindings.wrapComponentClassAttribute)(hash);
      builder.component.static(definition, [params, (0, _utils.hashToArgs)(hash), null, null]);
      return true;
    }

    return false;
  }

  function refineBlockSyntax(name, params, hash, _default, inverse, builder) {
    if (name.indexOf('-') === -1) {
      return false;
    }

    var meta = builder.meta.templateMeta;

    var definition = void 0;
    if (name.indexOf('-') > -1) {
      definition = builder.env.getComponentDefinition(name, meta);
    }

    if (definition) {
      (0, _bindings.wrapComponentClassAttribute)(hash);
      builder.component.static(definition, [params, (0, _utils.hashToArgs)(hash), _default, inverse]);
      return true;
    }

    (true && !(builder.env.hasHelper(name, meta)) && (0, _emberDebug.assert)('A component or helper named "' + name + '" could not be found', builder.env.hasHelper(name, meta)));
    (true && !(!builder.env.hasHelper(name, meta)) && (0, _emberDebug.assert)('Helpers may not be used in the block form, for example {{#' + name + '}}{{/' + name + '}}. Please use a component, or alternatively use the helper in combination with a built-in Ember helper, for example {{#if (' + name + ')}}{{/if}}.', !builder.env.hasHelper(name, meta)));


    return false;
  }

  var experimentalMacros = exports.experimentalMacros = [];

  // This is a private API to allow for experimental macros
  // to be created in user space. Registering a macro should
  // should be done in an initializer.
  function registerMacros(macro) {
    experimentalMacros.push(macro);
  }

  function populateMacros(blocks, inlines) {
    inlines.add('outlet', _outlet.outletMacro);
    inlines.add('component', _dynamicComponent.inlineComponentMacro);
    inlines.add('render', _render.renderMacro);
    inlines.add('mount', _mount.mountMacro);
    inlines.add('input', _input.inputMacro);
    inlines.add('textarea', _textArea.textAreaMacro);
    inlines.addMissing(refineInlineSyntax);
    blocks.add('component', _dynamicComponent.blockComponentMacro);
    blocks.addMissing(refineBlockSyntax);

    for (var i = 0; i < experimentalMacros.length; i++) {
      var macro = experimentalMacros[i];
      macro(blocks, inlines);
    }

    return { blocks: blocks, inlines: inlines };
  }
});
enifed('ember-glimmer/syntax/-text-area', ['exports', 'ember-glimmer/utils/bindings', 'ember-glimmer/syntax/utils'], function (exports, _bindings, _utils) {
  'use strict';

  exports.textAreaMacro = textAreaMacro;
  function textAreaMacro(name, params, hash, builder) {
    var definition = builder.env.getComponentDefinition('-text-area', builder.meta.templateMeta);
    (0, _bindings.wrapComponentClassAttribute)(hash);
    builder.component.static(definition, [params, (0, _utils.hashToArgs)(hash), null, null]);
    return true;
  }
});
enifed('ember-glimmer/syntax/dynamic-component', ['exports', 'ember-babel', '@glimmer/runtime', '@glimmer/reference', 'ember-debug', 'ember-glimmer/syntax/utils'], function (exports, _emberBabel, _runtime, _reference, _emberDebug, _utils) {
  'use strict';

  exports.dynamicComponentMacro = dynamicComponentMacro;
  exports.blockComponentMacro = blockComponentMacro;
  exports.inlineComponentMacro = inlineComponentMacro;


  function dynamicComponentFor(vm, args, meta) {
    var env = vm.env;
    var nameRef = args.positional.at(0);

    return new DynamicComponentReference({ nameRef: nameRef, env: env, meta: meta });
  }

  function dynamicComponentMacro(params, hash, _default, inverse, builder) {
    var definitionArgs = [params.slice(0, 1), null, null, null];
    var args = [params.slice(1), (0, _utils.hashToArgs)(hash), null, null];
    builder.component.dynamic(definitionArgs, dynamicComponentFor, args);
    return true;
  }

  function blockComponentMacro(params, hash, _default, inverse, builder) {
    var definitionArgs = [params.slice(0, 1), null, null, null];
    var args = [params.slice(1), (0, _utils.hashToArgs)(hash), _default, inverse];
    builder.component.dynamic(definitionArgs, dynamicComponentFor, args);
    return true;
  }

  function inlineComponentMacro(name, params, hash, builder) {
    var definitionArgs = [params.slice(0, 1), null, null, null];
    var args = [params.slice(1), (0, _utils.hashToArgs)(hash), null, null];
    builder.component.dynamic(definitionArgs, dynamicComponentFor, args);
    return true;
  }

  var DynamicComponentReference = function () {
    function DynamicComponentReference(_ref) {
      var nameRef = _ref.nameRef,
          env = _ref.env,
          meta = _ref.meta,
          args = _ref.args;
      (0, _emberBabel.classCallCheck)(this, DynamicComponentReference);

      this.tag = nameRef.tag;
      this.nameRef = nameRef;
      this.env = env;
      this.meta = meta;
      this.args = args;
    }

    DynamicComponentReference.prototype.value = function value() {
      var env = this.env,
          nameRef = this.nameRef,
          meta = this.meta;

      var nameOrDef = nameRef.value();

      if (typeof nameOrDef === 'string') {
        var definition = env.getComponentDefinition(nameOrDef, meta);

        (true && !(definition) && (0, _emberDebug.assert)('Could not find component named "' + nameOrDef + '" (no component or template with that name was found)', definition));


        return definition;
      } else if ((0, _runtime.isComponentDefinition)(nameOrDef)) {
        return nameOrDef;
      } else {
        return null;
      }
    };

    DynamicComponentReference.prototype.get = function get() {
      return _reference.UNDEFINED_REFERENCE;
    };

    return DynamicComponentReference;
  }();
});
enifed('ember-glimmer/syntax/input', ['exports', 'ember-debug', 'ember-glimmer/utils/bindings', 'ember-glimmer/syntax/dynamic-component', 'ember-glimmer/syntax/utils'], function (exports, _emberDebug, _bindings, _dynamicComponent, _utils) {
  'use strict';

  exports.inputMacro = inputMacro;
  /**
  @module ember
  */
  function buildTextFieldSyntax(params, hash, builder) {
    var definition = builder.env.getComponentDefinition('-text-field', builder.meta.templateMeta);
    builder.component.static(definition, [params, (0, _utils.hashToArgs)(hash), null, null]);
    return true;
  }

  /**
    The `{{input}}` helper lets you create an HTML `<input />` component.
    It causes an `TextField` component to be rendered.  For more info,
    see the [TextField](/api/classes/Ember.TextField.html) docs and
    the [templates guide](https://emberjs.com/guides/templates/input-helpers/).
  
    ```handlebars
    {{input value="987"}}
    ```
  
    renders as:
  
    ```HTML
    <input type="text" value="987" />
    ```
  
    ### Text field
  
    If no `type` option is specified, a default of type 'text' is used.
    Many of the standard HTML attributes may be passed to this helper.
    <table>
      <tr><td>`readonly`</td><td>`required`</td><td>`autofocus`</td></tr>
      <tr><td>`value`</td><td>`placeholder`</td><td>`disabled`</td></tr>
      <tr><td>`size`</td><td>`tabindex`</td><td>`maxlength`</td></tr>
      <tr><td>`name`</td><td>`min`</td><td>`max`</td></tr>
      <tr><td>`pattern`</td><td>`accept`</td><td>`autocomplete`</td></tr>
      <tr><td>`autosave`</td><td>`formaction`</td><td>`formenctype`</td></tr>
      <tr><td>`formmethod`</td><td>`formnovalidate`</td><td>`formtarget`</td></tr>
      <tr><td>`height`</td><td>`inputmode`</td><td>`multiple`</td></tr>
      <tr><td>`step`</td><td>`width`</td><td>`form`</td></tr>
      <tr><td>`selectionDirection`</td><td>`spellcheck`</td><td>&nbsp;</td></tr>
    </table>
    When set to a quoted string, these values will be directly applied to the HTML
    element. When left unquoted, these values will be bound to a property on the
    template's current rendering context (most typically a controller instance).
    A very common use of this helper is to bind the `value` of an input to an Object's attribute:
  
    ```handlebars
    Search:
    {{input value=searchWord}}
    ```
  
    In this example, the initial value in the `<input />` will be set to the value of `searchWord`.
    If the user changes the text, the value of `searchWord` will also be updated.
  
    ### Actions
  
    The helper can send multiple actions based on user events.
    The action property defines the action which is sent when
    the user presses the return key.
  
    ```handlebars
    {{input action="submit"}}
    ```
  
    The helper allows some user events to send actions.
  
    * `enter`
    * `insert-newline`
    * `escape-press`
    * `focus-in`
    * `focus-out`
    * `key-press`
    * `key-up`
  
    For example, if you desire an action to be sent when the input is blurred,
    you only need to setup the action name to the event name property.
  
    ```handlebars
    {{input focus-out="alertMessage"}}
    ```
    See more about [Text Support Actions](/api/classes/Ember.TextField.html)
  
    ### Extending `TextField`
  
    Internally, `{{input type="text"}}` creates an instance of `TextField`, passing
    arguments from the helper to `TextField`'s `create` method. You can extend the
    capabilities of text inputs in your applications by reopening this class. For example,
    if you are building a Bootstrap project where `data-*` attributes are used, you
    can add one to the `TextField`'s `attributeBindings` property:
  
    ```javascript
    import TextField from '@ember/component/text-field';
    TextField.reopen({
      attributeBindings: ['data-error']
    });
    ```
  
    Keep in mind when writing `TextField` subclasses that `TextField`
    itself extends `Component`. Expect isolated component semantics, not
    legacy 1.x view semantics (like `controller` being present).
    See more about [Ember components](/api/classes/Ember.Component.html)
  
    ### Checkbox
  
    Checkboxes are special forms of the `{{input}}` helper.  To create a `<checkbox />`:
  
    ```handlebars
    Emberize Everything:
    {{input type="checkbox" name="isEmberized" checked=isEmberized}}
    ```
  
    This will bind checked state of this checkbox to the value of `isEmberized`  -- if either one changes,
    it will be reflected in the other.
  
    The following HTML attributes can be set via the helper:
  
    * `checked`
    * `disabled`
    * `tabindex`
    * `indeterminate`
    * `name`
    * `autofocus`
    * `form`
  
    ### Extending `Checkbox`
  
    Internally, `{{input type="checkbox"}}` creates an instance of `Checkbox`, passing
    arguments from the helper to `Checkbox`'s `create` method. You can extend the
    capablilties of checkbox inputs in your applications by reopening this class. For example,
    if you wanted to add a css class to all checkboxes in your application:
  
    ```javascript
    import Checkbox from '@ember/component/checkbox';
  
    Checkbox.reopen({
      classNames: ['my-app-checkbox']
    });
    ```
  
    @method input
    @for Ember.Templates.helpers
    @param {Hash} options
    @public
  */

  function inputMacro(name, params, hash, builder) {
    var keys = void 0;
    var values = void 0;
    var typeIndex = -1;
    var valueIndex = -1;

    if (hash) {
      keys = hash[0];
      values = hash[1];
      typeIndex = keys.indexOf('type');
      valueIndex = keys.indexOf('value');
    }

    if (!params) {
      params = [];
    }

    if (typeIndex > -1) {
      var typeArg = values[typeIndex];
      if (!Array.isArray(typeArg)) {
        if (typeArg === 'checkbox') {
          (true && !(valueIndex === -1) && (0, _emberDebug.assert)('{{input type=\'checkbox\'}} does not support setting `value=someBooleanValue`; ' + 'you must use `checked=someBooleanValue` instead.', valueIndex === -1));


          (0, _bindings.wrapComponentClassAttribute)(hash);

          var definition = builder.env.getComponentDefinition('-checkbox', builder.meta.templateMeta);
          builder.component.static(definition, [params, (0, _utils.hashToArgs)(hash), null, null]);
          return true;
        } else {
          return buildTextFieldSyntax(params, hash, builder);
        }
      }
    } else {
      return buildTextFieldSyntax(params, hash, builder);
    }

    return (0, _dynamicComponent.dynamicComponentMacro)(params, hash, null, null, builder);
  }
});
enifed('ember-glimmer/syntax/mount', ['exports', 'ember-babel', 'ember-debug', 'ember/features', 'ember-glimmer/syntax/utils', 'ember-glimmer/component-managers/mount'], function (exports, _emberBabel, _emberDebug, _features, _utils, _mount) {
  'use strict';

  exports.mountMacro = mountMacro;
  /**
  @module ember
  */
  function dynamicEngineFor(vm, args, meta) {
    var env = vm.env;
    var nameRef = args.positional.at(0);

    return new DynamicEngineReference({ nameRef: nameRef, env: env, meta: meta });
  }

  /**
    The `{{mount}}` helper lets you embed a routeless engine in a template.
    Mounting an engine will cause an instance to be booted and its `application`
    template to be rendered.
  
    For example, the following template mounts the `ember-chat` engine:
  
    ```handlebars
    {{! application.hbs }}
    {{mount "ember-chat"}}
    ```
  
    Additionally, you can also pass in a `model` argument that will be
    set as the engines model. This can be an existing object:
  
    ```
    <div>
      {{mount 'admin' model=userSettings}}
    </div>
    ```
  
    Or an inline `hash`, and you can even pass components:
  
    ```
    <div>
      <h1>Application template!</h1>
      {{mount 'admin' model=(hash
          title='Secret Admin'
          signInButton=(component 'sign-in-button')
      )}}
    </div>
    ```
  
    @method mount
    @param {String} name Name of the engine to mount.
    @param {Object} [model] Object that will be set as
                            the model of the engine.
    @for Ember.Templates.helpers
    @category ember-application-engines
    @public
  */
  function mountMacro(name, params, hash, builder) {
    if (_features.EMBER_ENGINES_MOUNT_PARAMS) {
      (true && !(params.length === 1) && (0, _emberDebug.assert)('You can only pass a single positional argument to the {{mount}} helper, e.g. {{mount "chat-engine"}}.', params.length === 1));
    } else {
      (true && !(params.length === 1 && hash === null) && (0, _emberDebug.assert)('You can only pass a single argument to the {{mount}} helper, e.g. {{mount "chat-engine"}}.', params.length === 1 && hash === null));
    }

    var definitionArgs = [params.slice(0, 1), null, null, null];
    var args = [null, (0, _utils.hashToArgs)(hash), null, null];
    builder.component.dynamic(definitionArgs, dynamicEngineFor, args);
    return true;
  }

  var DynamicEngineReference = function () {
    function DynamicEngineReference(_ref) {
      var nameRef = _ref.nameRef,
          env = _ref.env,
          meta = _ref.meta;
      (0, _emberBabel.classCallCheck)(this, DynamicEngineReference);

      this.tag = nameRef.tag;
      this.nameRef = nameRef;
      this.env = env;
      this.meta = meta;
      this._lastName = undefined;
      this._lastDef = undefined;
    }

    DynamicEngineReference.prototype.value = function value() {
      var env = this.env,
          nameRef = this.nameRef;

      var nameOrDef = nameRef.value();

      if (typeof nameOrDef === 'string') {
        if (this._lastName === nameOrDef) {
          return this._lastDef;
        }

        (true && !(env.owner.hasRegistration('engine:' + nameOrDef)) && (0, _emberDebug.assert)('You used `{{mount \'' + nameOrDef + '\'}}`, but the engine \'' + nameOrDef + '\' can not be found.', env.owner.hasRegistration('engine:' + nameOrDef)));


        if (!env.owner.hasRegistration('engine:' + nameOrDef)) {
          return null;
        }

        this._lastName = nameOrDef;
        this._lastDef = new _mount.MountDefinition(nameOrDef);

        return this._lastDef;
      } else {
        (true && !(nameOrDef === null || nameOrDef === undefined) && (0, _emberDebug.assert)('Invalid engine name \'' + nameOrDef + '\' specified, engine name must be either a string, null or undefined.', nameOrDef === null || nameOrDef === undefined));


        return null;
      }
    };

    return DynamicEngineReference;
  }();
});
enifed('ember-glimmer/syntax/outlet', ['exports', 'ember-babel', '@glimmer/reference', 'ember-glimmer/component-managers/outlet'], function (exports, _emberBabel, _reference, _outlet) {
  'use strict';

  exports.outletMacro = outletMacro;

  var OutletComponentReference = function () {
    function OutletComponentReference(outletNameRef, parentOutletStateRef) {
      (0, _emberBabel.classCallCheck)(this, OutletComponentReference);

      this.outletNameRef = outletNameRef;
      this.parentOutletStateRef = parentOutletStateRef;
      this.definition = null;
      this.lastState = null;
      var outletStateTag = this.outletStateTag = new _reference.UpdatableTag(parentOutletStateRef.tag);
      this.tag = (0, _reference.combine)([outletStateTag.tag, outletNameRef.tag]);
    }

    OutletComponentReference.prototype.value = function value() {
      var outletNameRef = this.outletNameRef,
          parentOutletStateRef = this.parentOutletStateRef,
          definition = this.definition,
          lastState = this.lastState;


      var outletName = outletNameRef.value();
      var outletStateRef = parentOutletStateRef.get('outlets').get(outletName);
      var newState = this.lastState = outletStateRef.value();

      this.outletStateTag.update(outletStateRef.tag);

      definition = revalidate(definition, lastState, newState);

      var hasTemplate = newState && newState.render.template;

      if (definition) {
        return definition;
      } else if (hasTemplate) {
        return this.definition = new _outlet.OutletComponentDefinition(outletName, newState.render.template);
      } else {
        return this.definition = null;
      }
    };

    return OutletComponentReference;
  }();

  function revalidate(definition, lastState, newState) {
    if (!lastState && !newState) {
      return definition;
    }

    if (!lastState && newState || lastState && !newState) {
      return null;
    }

    if (newState.render.template === lastState.render.template && newState.render.controller === lastState.render.controller) {
      return definition;
    }

    return null;
  }

  function outletComponentFor(vm, args) {
    var _vm$dynamicScope = vm.dynamicScope(),
        outletState = _vm$dynamicScope.outletState;

    var outletNameRef = void 0;
    if (args.positional.length === 0) {
      outletNameRef = new _reference.ConstReference('main');
    } else {
      outletNameRef = args.positional.at(0);
    }

    return new OutletComponentReference(outletNameRef, outletState);
  }

  /**
    The `{{outlet}}` helper lets you specify where a child route will render in
    your template. An important use of the `{{outlet}}` helper is in your
    application's `application.hbs` file:
  
    ```handlebars
    {{! app/templates/application.hbs }}
    <!-- header content goes here, and will always display -->
    {{my-header}}
    <div class="my-dynamic-content">
      <!-- this content will change based on the current route, which depends on the current URL -->
      {{outlet}}
    </div>
    <!-- footer content goes here, and will always display -->
    {{my-footer}}
    ```
  
    See [templates guide](https://emberjs.com/guides/templates/the-application-template/) for
    additional information on using `{{outlet}}` in `application.hbs`.
    You may also specify a name for the `{{outlet}}`, which is useful when using more than one
    `{{outlet}}` in a template:
  
    ```handlebars
    {{outlet "menu"}}
    {{outlet "sidebar"}}
    {{outlet "main"}}
    ```
  
    Your routes can then render into a specific one of these `outlet`s by specifying the `outlet`
    attribute in your `renderTemplate` function:
  
    ```app/routes/menu.js
    import Route from '@ember/routing/route';
  
    export default Route.extend({
      renderTemplate() {
        this.render({ outlet: 'menu' });
      }
    });
    ```
  
    See the [routing guide](https://emberjs.com/guides/routing/rendering-a-template/) for more
    information on how your `route` interacts with the `{{outlet}}` helper.
    Note: Your content __will not render__ if there isn't an `{{outlet}}` for it.
  
    @method outlet
    @param {String} [name]
    @for Ember.Templates.helpers
    @public
  */
  function outletMacro(name, params, hash, builder) {
    if (!params) {
      params = [];
    }
    var definitionArgs = [params.slice(0, 1), null, null, null];
    var emptyArgs = [[], null, null, null]; // FIXME
    builder.component.dynamic(definitionArgs, outletComponentFor, emptyArgs);
    return true;
  }
});
enifed('ember-glimmer/syntax/render', ['exports', '@glimmer/reference', 'ember-debug', 'ember-glimmer/syntax/utils', 'ember-glimmer/component-managers/render'], function (exports, _reference, _emberDebug, _utils, _render) {
  'use strict';

  exports.renderMacro = renderMacro;
  /**
  @module ember
  */

  function makeComponentDefinition(vm, args) {
    var env = vm.env;
    var nameRef = args.positional.at(0);

    (true && !((0, _reference.isConst)(nameRef)) && (0, _emberDebug.assert)('The first argument of {{render}} must be quoted, e.g. {{render "sidebar"}}.', (0, _reference.isConst)(nameRef)));
    (true && !(args.positional.length === 1 || !(0, _reference.isConst)(args.positional.at(1))) && (0, _emberDebug.assert)('The second argument of {{render}} must be a path, e.g. {{render "post" post}}.', args.positional.length === 1 || !(0, _reference.isConst)(args.positional.at(1))));


    var templateName = nameRef.value();

    (true && !(env.owner.hasRegistration('template:' + templateName)) && (0, _emberDebug.assert)('You used `{{render \'' + templateName + '\'}}`, but \'' + templateName + '\' can not be found as a template.', env.owner.hasRegistration('template:' + templateName)));


    var template = env.owner.lookup('template:' + templateName);

    var controllerName = void 0;

    if (args.named.has('controller')) {
      var controllerNameRef = args.named.get('controller');

      (true && !((0, _reference.isConst)(controllerNameRef)) && (0, _emberDebug.assert)('The controller argument for {{render}} must be quoted, e.g. {{render "sidebar" controller="foo"}}.', (0, _reference.isConst)(controllerNameRef)));


      controllerName = controllerNameRef.value();

      (true && !(env.owner.hasRegistration('controller:' + controllerName)) && (0, _emberDebug.assert)('The controller name you supplied \'' + controllerName + '\' did not resolve to a controller.', env.owner.hasRegistration('controller:' + controllerName)));
    } else {
      controllerName = templateName;
    }

    if (args.positional.length === 1) {
      return new _reference.ConstReference(new _render.RenderDefinition(controllerName, template, env, _render.SINGLETON_RENDER_MANAGER));
    } else {
      return new _reference.ConstReference(new _render.RenderDefinition(controllerName, template, env, _render.NON_SINGLETON_RENDER_MANAGER));
    }
  }

  /**
    Calling ``{{render}}`` from within a template will insert another
    template that matches the provided name. The inserted template will
    access its properties on its own controller (rather than the controller
    of the parent template).
  
    If a view class with the same name exists, the view class also will be used.
    Note: A given controller may only be used *once* in your app in this manner.
    A singleton instance of the controller will be created for you.
  
    Example:
  
    ```app/controllers/navigation.js
    import Controller from '@ember/controller';
  
    export default Controller.extend({
      who: "world"
    });
    ```
  
    ```handlebars
    <!-- navigation.hbs -->
    Hello, {{who}}.
    ```
  
    ```handlebars
    <!-- application.hbs -->
    <h1>My great app</h1>
    {{render "navigation"}}
    ```
  
    ```html
    <h1>My great app</h1>
    <div class='ember-view'>
      Hello, world.
    </div>
    ```
  
    Optionally you may provide a second argument: a property path
    that will be bound to the `model` property of the controller.
    If a `model` property path is specified, then a new instance of the
    controller will be created and `{{render}}` can be used multiple times
    with the same name.
  
    For example if you had this `author` template.
  
    ```handlebars
    <div class="author">
      Written by {{firstName}} {{lastName}}.
      Total Posts: {{postCount}}
    </div>
    ```
  
    You could render it inside the `post` template using the `render` helper.
  
    ```handlebars
    <div class="post">
      <h1>{{title}}</h1>
      <div>{{body}}</div>
      {{render "author" author}}
    </div>
    ```
  
    @method render
    @for Ember.Templates.helpers
    @param {String} name
    @param {Object?} context
    @param {Hash} options
    @return {String} HTML string
    @public
    @deprecated Use a component instead
  */
  function renderMacro(name, params, hash, builder) {
    if (!params) {
      params = [];
    }
    var definitionArgs = [params.slice(0), hash, null, null];
    var args = [params.slice(1), (0, _utils.hashToArgs)(hash), null, null];
    builder.component.dynamic(definitionArgs, makeComponentDefinition, args);
    return true;
  }
});
enifed("ember-glimmer/syntax/utils", ["exports"], function (exports) {
  "use strict";

  exports.hashToArgs = hashToArgs;
  function hashToArgs(hash) {
    if (hash === null) return null;
    var names = hash[0].map(function (key) {
      return "@" + key;
    });
    return [names, hash[1]];
  }
});
enifed('ember-glimmer/template', ['exports', 'ember-utils', '@glimmer/runtime'], function (exports, _emberUtils, _runtime) {
  'use strict';

  exports.default = template;
  function template(json) {
    var factory = (0, _runtime.templateFactory)(json);

    return {
      id: factory.id,
      meta: factory.meta,
      create: function (props) {
        return factory.create(props.env, { owner: props[_emberUtils.OWNER] });
      }
    };
  }
});
enifed("ember-glimmer/template_registry", ["exports"], function (exports) {
  "use strict";

  exports.setTemplates = setTemplates;
  exports.getTemplates = getTemplates;
  exports.getTemplate = getTemplate;
  exports.hasTemplate = hasTemplate;
  exports.setTemplate = setTemplate;
  // STATE within a module is frowned upon, this exists
  // to support Ember.TEMPLATES but shield ember internals from this legacy
  // global API.
  var TEMPLATES = {};

  function setTemplates(templates) {
    TEMPLATES = templates;
  }

  function getTemplates() {
    return TEMPLATES;
  }

  function getTemplate(name) {
    if (TEMPLATES.hasOwnProperty(name)) {
      return TEMPLATES[name];
    }
  }

  function hasTemplate(name) {
    return TEMPLATES.hasOwnProperty(name);
  }

  function setTemplate(name, template) {
    return TEMPLATES[name] = template;
  }
});
enifed("ember-glimmer/templates/component", ["exports", "ember-glimmer/template"], function (exports, _template) {
  "use strict";

  exports.default = (0, _template.default)({ "id": "mvSJ6iUj", "block": "{\"symbols\":[\"&default\"],\"statements\":[[11,1]],\"hasEval\":false}", "meta": { "moduleName": "ember-glimmer/templates/component.hbs" } });
});
enifed("ember-glimmer/templates/empty", ["exports", "ember-glimmer/template"], function (exports, _template) {
  "use strict";

  exports.default = (0, _template.default)({ "id": "EPhvcwzD", "block": "{\"symbols\":[],\"statements\":[],\"hasEval\":false}", "meta": { "moduleName": "ember-glimmer/templates/empty.hbs" } });
});
enifed("ember-glimmer/templates/link-to", ["exports", "ember-glimmer/template"], function (exports, _template) {
  "use strict";

  exports.default = (0, _template.default)({ "id": "Gq3gxZ6f", "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[20,[\"linkTitle\"]]],null,{\"statements\":[[1,[18,\"linkTitle\"],false]],\"parameters\":[]},{\"statements\":[[11,1]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "ember-glimmer/templates/link-to.hbs" } });
});
enifed("ember-glimmer/templates/outlet", ["exports", "ember-glimmer/template"], function (exports, _template) {
  "use strict";

  exports.default = (0, _template.default)({ "id": "NblF8298", "block": "{\"symbols\":[],\"statements\":[[1,[18,\"outlet\"],false]],\"hasEval\":false}", "meta": { "moduleName": "ember-glimmer/templates/outlet.hbs" } });
});
enifed("ember-glimmer/templates/root", ["exports", "ember-glimmer/template"], function (exports, _template) {
  "use strict";

  exports.default = (0, _template.default)({ "id": "Jhwo1zmY", "block": "{\"symbols\":[],\"statements\":[[1,[25,\"component\",[[19,0,[]]],null],false]],\"hasEval\":false}", "meta": { "moduleName": "ember-glimmer/templates/root.hbs" } });
});
enifed('ember-glimmer/utils/bindings', ['exports', 'ember-babel', '@glimmer/reference', '@glimmer/wire-format', 'ember-debug', 'ember-metal', 'ember-runtime', 'ember-glimmer/component', 'ember-glimmer/utils/string'], function (exports, _emberBabel, _reference, _wireFormat, _emberDebug, _emberMetal, _emberRuntime, _component, _string) {
  'use strict';

  exports.ClassNameBinding = exports.IsVisibleBinding = exports.AttributeBinding = undefined;
  exports.wrapComponentClassAttribute = wrapComponentClassAttribute;


  function referenceForKey(component, key) {
    return component[_component.ROOT_REF].get(key);
  }

  function referenceForParts(component, parts) {
    var isAttrs = parts[0] === 'attrs';

    // TODO deprecate this
    if (isAttrs) {
      parts.shift();

      if (parts.length === 1) {
        return referenceForKey(component, parts[0]);
      }
    }

    return (0, _reference.referenceFromParts)(component[_component.ROOT_REF], parts);
  }

  // TODO we should probably do this transform at build time
  function wrapComponentClassAttribute(hash) {
    if (!hash) {
      return hash;
    }

    var keys = hash[0],
        values = hash[1];

    var index = keys.indexOf('class');

    if (index !== -1) {
      var _values$index = values[index],
          type = _values$index[0];


      if (type === _wireFormat.Ops.Get || type === _wireFormat.Ops.MaybeLocal) {
        var getExp = values[index];
        var path = getExp[getExp.length - 1];
        var propName = path[path.length - 1];
        hash[1][index] = [_wireFormat.Ops.Helper, ['-class'], [getExp, propName]];
      }
    }

    return hash;
  }

  var AttributeBinding = exports.AttributeBinding = {
    parse: function (microsyntax) {
      var colonIndex = microsyntax.indexOf(':');

      if (colonIndex === -1) {
        (true && !(microsyntax !== 'class') && (0, _emberDebug.assert)('You cannot use class as an attributeBinding, use classNameBindings instead.', microsyntax !== 'class'));

        return [microsyntax, microsyntax, true];
      } else {
        var prop = microsyntax.substring(0, colonIndex);
        var attribute = microsyntax.substring(colonIndex + 1);

        (true && !(attribute !== 'class') && (0, _emberDebug.assert)('You cannot use class as an attributeBinding, use classNameBindings instead.', attribute !== 'class'));


        return [prop, attribute, false];
      }
    },
    install: function (element, component, parsed, operations) {
      var prop = parsed[0],
          attribute = parsed[1],
          isSimple = parsed[2];


      if (attribute === 'id') {
        var elementId = (0, _emberMetal.get)(component, prop);
        if (elementId === undefined || elementId === null) {
          elementId = component.elementId;
        }
        operations.addStaticAttribute(element, 'id', elementId);
        return;
      }

      var isPath = prop.indexOf('.') > -1;
      var reference = isPath ? referenceForParts(component, prop.split('.')) : referenceForKey(component, prop);

      (true && !(!(isSimple && isPath)) && (0, _emberDebug.assert)('Illegal attributeBinding: \'' + prop + '\' is not a valid attribute name.', !(isSimple && isPath)));


      if (attribute === 'style') {
        reference = new StyleBindingReference(reference, referenceForKey(component, 'isVisible'));
      }

      operations.addDynamicAttribute(element, attribute, reference);
    }
  };

  var DISPLAY_NONE = 'display: none;';
  var SAFE_DISPLAY_NONE = (0, _string.htmlSafe)(DISPLAY_NONE);

  var StyleBindingReference = function (_CachedReference) {
    (0, _emberBabel.inherits)(StyleBindingReference, _CachedReference);

    function StyleBindingReference(inner, isVisible) {
      (0, _emberBabel.classCallCheck)(this, StyleBindingReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference.call(this));

      _this.tag = (0, _reference.combine)([inner.tag, isVisible.tag]);
      _this.inner = inner;
      _this.isVisible = isVisible;
      return _this;
    }

    StyleBindingReference.prototype.compute = function compute() {
      var value = this.inner.value();
      var isVisible = this.isVisible.value();

      if (isVisible !== false) {
        return value;
      } else if (!value && value !== 0) {
        return SAFE_DISPLAY_NONE;
      } else {
        var style = value + ' ' + DISPLAY_NONE;
        return (0, _string.isHTMLSafe)(value) ? (0, _string.htmlSafe)(style) : style;
      }
    };

    return StyleBindingReference;
  }(_reference.CachedReference);

  var IsVisibleBinding = exports.IsVisibleBinding = {
    install: function (element, component, operations) {
      operations.addDynamicAttribute(element, 'style', (0, _reference.map)(referenceForKey(component, 'isVisible'), this.mapStyleValue));
    },
    mapStyleValue: function (isVisible) {
      return isVisible === false ? SAFE_DISPLAY_NONE : null;
    }
  };

  var ClassNameBinding = exports.ClassNameBinding = {
    install: function (element, component, microsyntax, operations) {
      var _microsyntax$split = microsyntax.split(':'),
          prop = _microsyntax$split[0],
          truthy = _microsyntax$split[1],
          falsy = _microsyntax$split[2];

      var isStatic = prop === '';

      if (isStatic) {
        operations.addStaticAttribute(element, 'class', truthy);
      } else {
        var isPath = prop.indexOf('.') > -1;
        var parts = isPath && prop.split('.');
        var value = isPath ? referenceForParts(component, parts) : referenceForKey(component, prop);
        var ref = void 0;

        if (truthy === undefined) {
          ref = new SimpleClassNameBindingReference(value, isPath ? parts[parts.length - 1] : prop);
        } else {
          ref = new ColonClassNameBindingReference(value, truthy, falsy);
        }

        operations.addDynamicAttribute(element, 'class', ref);
      }
    }
  };

  var SimpleClassNameBindingReference = function (_CachedReference2) {
    (0, _emberBabel.inherits)(SimpleClassNameBindingReference, _CachedReference2);

    function SimpleClassNameBindingReference(inner, path) {
      (0, _emberBabel.classCallCheck)(this, SimpleClassNameBindingReference);

      var _this2 = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference2.call(this));

      _this2.tag = inner.tag;
      _this2.inner = inner;
      _this2.path = path;
      _this2.dasherizedPath = null;
      return _this2;
    }

    SimpleClassNameBindingReference.prototype.compute = function compute() {
      var value = this.inner.value();

      if (value === true) {
        var path = this.path,
            dasherizedPath = this.dasherizedPath;

        return dasherizedPath || (this.dasherizedPath = _emberRuntime.String.dasherize(path));
      } else if (value || value === 0) {
        return value;
      } else {
        return null;
      }
    };

    return SimpleClassNameBindingReference;
  }(_reference.CachedReference);

  var ColonClassNameBindingReference = function (_CachedReference3) {
    (0, _emberBabel.inherits)(ColonClassNameBindingReference, _CachedReference3);

    function ColonClassNameBindingReference(inner, truthy, falsy) {
      (0, _emberBabel.classCallCheck)(this, ColonClassNameBindingReference);

      var _this3 = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference3.call(this));

      _this3.tag = inner.tag;
      _this3.inner = inner;
      _this3.truthy = truthy || null;
      _this3.falsy = falsy || null;
      return _this3;
    }

    ColonClassNameBindingReference.prototype.compute = function compute() {
      var inner = this.inner,
          truthy = this.truthy,
          falsy = this.falsy;

      return inner.value() ? truthy : falsy;
    };

    return ColonClassNameBindingReference;
  }(_reference.CachedReference);
});
enifed('ember-glimmer/utils/curly-component-state-bucket', ['exports', 'ember-babel'], function (exports, _emberBabel) {
  'use strict';

  function NOOP() {}

  /**
    @module ember
  */

  /**
    Represents the internal state of the component.
  
    @class ComponentStateBucket
    @private
  */

  var ComponentStateBucket = function () {
    function ComponentStateBucket(environment, component, args, finalizer) {
      (0, _emberBabel.classCallCheck)(this, ComponentStateBucket);

      this.environment = environment;
      this.component = component;
      this.classRef = null;
      this.args = args;
      this.argsRevision = args.tag.value();
      this.finalizer = finalizer;
    }

    ComponentStateBucket.prototype.destroy = function destroy() {
      var component = this.component,
          environment = this.environment;


      if (environment.isInteractive) {
        component.trigger('willDestroyElement');
        component.trigger('willClearRender');
      }

      environment.destroyedComponents.push(component);
    };

    ComponentStateBucket.prototype.finalize = function finalize() {
      var finalizer = this.finalizer;

      finalizer();
      this.finalizer = NOOP;
    };

    return ComponentStateBucket;
  }();

  exports.default = ComponentStateBucket;
});
enifed('ember-glimmer/utils/debug-stack', ['exports', 'ember-babel'], function (exports, _emberBabel) {
  'use strict';

  var DebugStack = void 0;

  if (true) {
    var Element = function Element(name) {
      (0, _emberBabel.classCallCheck)(this, Element);

      this.name = name;
    };

    var TemplateElement = function (_Element) {
      (0, _emberBabel.inherits)(TemplateElement, _Element);

      function TemplateElement() {
        (0, _emberBabel.classCallCheck)(this, TemplateElement);
        return (0, _emberBabel.possibleConstructorReturn)(this, _Element.apply(this, arguments));
      }

      return TemplateElement;
    }(Element);

    var EngineElement = function (_Element2) {
      (0, _emberBabel.inherits)(EngineElement, _Element2);

      function EngineElement() {
        (0, _emberBabel.classCallCheck)(this, EngineElement);
        return (0, _emberBabel.possibleConstructorReturn)(this, _Element2.apply(this, arguments));
      }

      return EngineElement;
    }(Element);

    DebugStack = function () {
      function DebugStack() {
        (0, _emberBabel.classCallCheck)(this, DebugStack);

        this._stack = [];
      }

      DebugStack.prototype.push = function push(name) {
        this._stack.push(new TemplateElement(name));
      };

      DebugStack.prototype.pushEngine = function pushEngine(name) {
        this._stack.push(new EngineElement(name));
      };

      DebugStack.prototype.pop = function pop() {
        var element = this._stack.pop();

        if (element) {
          return element.name;
        }
      };

      DebugStack.prototype.peek = function peek() {
        var template = this._currentTemplate();
        var engine = this._currentEngine();

        if (engine) {
          return '"' + template + '" (in "' + engine + '")';
        } else if (template) {
          return '"' + template + '"';
        }
      };

      DebugStack.prototype._currentTemplate = function _currentTemplate() {
        return this._getCurrentByType(TemplateElement);
      };

      DebugStack.prototype._currentEngine = function _currentEngine() {
        return this._getCurrentByType(EngineElement);
      };

      DebugStack.prototype._getCurrentByType = function _getCurrentByType(type) {
        for (var i = this._stack.length; i >= 0; i--) {
          var element = this._stack[i];
          if (element instanceof type) {
            return element.name;
          }
        }
      };

      return DebugStack;
    }();
  }

  exports.default = DebugStack;
});
enifed('ember-glimmer/utils/iterable', ['exports', 'ember-babel', 'ember-utils', 'ember-metal', 'ember-runtime', 'ember-glimmer/utils/references', 'ember-glimmer/helpers/each-in', '@glimmer/reference'], function (exports, _emberBabel, _emberUtils, _emberMetal, _emberRuntime, _references, _eachIn, _reference) {
  'use strict';

  exports.default = iterableFor;


  var ITERATOR_KEY_GUID = 'be277757-bbbe-4620-9fcb-213ef433cca2';

  function iterableFor(ref, keyPath) {
    if ((0, _eachIn.isEachIn)(ref)) {
      return new EachInIterable(ref, keyForEachIn(keyPath));
    } else {
      return new ArrayIterable(ref, keyForArray(keyPath));
    }
  }

  function keyForEachIn(keyPath) {
    switch (keyPath) {
      case '@index':
      case undefined:
      case null:
        return index;
      case '@identity':
        return identity;
      default:
        return function (item) {
          return (0, _emberMetal.get)(item, keyPath);
        };
    }
  }

  function keyForArray(keyPath) {
    switch (keyPath) {
      case '@index':
        return index;
      case '@identity':
      case undefined:
      case null:
        return identity;
      default:
        return function (item) {
          return (0, _emberMetal.get)(item, keyPath);
        };
    }
  }

  function index(item, index) {
    return String(index);
  }

  function identity(item) {
    switch (typeof item) {
      case 'string':
      case 'number':
        return String(item);
      default:
        return (0, _emberUtils.guidFor)(item);
    }
  }

  function ensureUniqueKey(seen, key) {
    var seenCount = seen[key];

    if (seenCount > 0) {
      seen[key]++;
      return '' + key + ITERATOR_KEY_GUID + seenCount;
    } else {
      seen[key] = 1;
    }

    return key;
  }

  var ArrayIterator = function () {
    function ArrayIterator(array, keyFor) {
      (0, _emberBabel.classCallCheck)(this, ArrayIterator);

      this.array = array;
      this.length = array.length;
      this.keyFor = keyFor;
      this.position = 0;
      this.seen = Object.create(null);
    }

    ArrayIterator.prototype.isEmpty = function isEmpty() {
      return false;
    };

    ArrayIterator.prototype.getMemo = function getMemo(position) {
      return position;
    };

    ArrayIterator.prototype.getValue = function getValue(position) {
      return this.array[position];
    };

    ArrayIterator.prototype.next = function next() {
      var length = this.length,
          keyFor = this.keyFor,
          position = this.position,
          seen = this.seen;


      if (position >= length) {
        return null;
      }

      var value = this.getValue(position);
      var memo = this.getMemo(position);
      var key = ensureUniqueKey(seen, keyFor(value, memo));

      this.position++;

      return { key: key, value: value, memo: memo };
    };

    return ArrayIterator;
  }();

  var EmberArrayIterator = function (_ArrayIterator) {
    (0, _emberBabel.inherits)(EmberArrayIterator, _ArrayIterator);

    function EmberArrayIterator(array, keyFor) {
      (0, _emberBabel.classCallCheck)(this, EmberArrayIterator);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _ArrayIterator.call(this, array, keyFor));

      _this.length = (0, _emberMetal.get)(array, 'length');
      return _this;
    }

    EmberArrayIterator.prototype.getValue = function getValue(position) {
      return (0, _emberRuntime.objectAt)(this.array, position);
    };

    return EmberArrayIterator;
  }(ArrayIterator);

  var ObjectKeysIterator = function (_ArrayIterator2) {
    (0, _emberBabel.inherits)(ObjectKeysIterator, _ArrayIterator2);

    function ObjectKeysIterator(keys, values, keyFor) {
      (0, _emberBabel.classCallCheck)(this, ObjectKeysIterator);

      var _this2 = (0, _emberBabel.possibleConstructorReturn)(this, _ArrayIterator2.call(this, values, keyFor));

      _this2.keys = keys;
      _this2.length = keys.length;
      return _this2;
    }

    ObjectKeysIterator.prototype.getMemo = function getMemo(position) {
      return this.keys[position];
    };

    ObjectKeysIterator.prototype.getValue = function getValue(position) {
      return this.array[position];
    };

    return ObjectKeysIterator;
  }(ArrayIterator);

  var EmptyIterator = function () {
    function EmptyIterator() {
      (0, _emberBabel.classCallCheck)(this, EmptyIterator);
    }

    EmptyIterator.prototype.isEmpty = function isEmpty() {
      return true;
    };

    EmptyIterator.prototype.next = function next() {
      throw new Error('Cannot call next() on an empty iterator');
    };

    return EmptyIterator;
  }();

  var EMPTY_ITERATOR = new EmptyIterator();

  var EachInIterable = function () {
    function EachInIterable(ref, keyFor) {
      (0, _emberBabel.classCallCheck)(this, EachInIterable);

      this.ref = ref;
      this.keyFor = keyFor;

      var valueTag = this.valueTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);

      this.tag = (0, _reference.combine)([ref.tag, valueTag]);
    }

    EachInIterable.prototype.iterate = function iterate() {
      var ref = this.ref,
          keyFor = this.keyFor,
          valueTag = this.valueTag;


      var iterable = ref.value();

      valueTag.update((0, _emberMetal.tagFor)(iterable));

      if ((0, _emberMetal.isProxy)(iterable)) {
        iterable = (0, _emberMetal.get)(iterable, 'content');
      }

      var typeofIterable = typeof iterable;

      if (iterable && (typeofIterable === 'object' || typeofIterable === 'function')) {
        var keys = Object.keys(iterable);
        var values = keys.map(function (key) {
          return iterable[key];
        });
        return keys.length > 0 ? new ObjectKeysIterator(keys, values, keyFor) : EMPTY_ITERATOR;
      } else {
        return EMPTY_ITERATOR;
      }
    };

    EachInIterable.prototype.valueReferenceFor = function valueReferenceFor(item) {
      return new _references.UpdatablePrimitiveReference(item.memo);
    };

    EachInIterable.prototype.updateValueReference = function updateValueReference(reference, item) {
      reference.update(item.memo);
    };

    EachInIterable.prototype.memoReferenceFor = function memoReferenceFor(item) {
      return new _references.UpdatableReference(item.value);
    };

    EachInIterable.prototype.updateMemoReference = function updateMemoReference(reference, item) {
      reference.update(item.value);
    };

    return EachInIterable;
  }();

  var ArrayIterable = function () {
    function ArrayIterable(ref, keyFor) {
      (0, _emberBabel.classCallCheck)(this, ArrayIterable);

      this.ref = ref;
      this.keyFor = keyFor;

      var valueTag = this.valueTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);

      this.tag = (0, _reference.combine)([ref.tag, valueTag]);
    }

    ArrayIterable.prototype.iterate = function iterate() {
      var ref = this.ref,
          keyFor = this.keyFor,
          valueTag = this.valueTag;


      var iterable = ref.value();

      valueTag.update((0, _emberMetal.tagForProperty)(iterable, '[]'));

      if (!iterable || typeof iterable !== 'object') {
        return EMPTY_ITERATOR;
      }

      if (Array.isArray(iterable)) {
        return iterable.length > 0 ? new ArrayIterator(iterable, keyFor) : EMPTY_ITERATOR;
      } else if ((0, _emberRuntime.isEmberArray)(iterable)) {
        return (0, _emberMetal.get)(iterable, 'length') > 0 ? new EmberArrayIterator(iterable, keyFor) : EMPTY_ITERATOR;
      } else if (typeof iterable.forEach === 'function') {
        var array = [];
        iterable.forEach(function (item) {
          array.push(item);
        });
        return array.length > 0 ? new ArrayIterator(array, keyFor) : EMPTY_ITERATOR;
      } else {
        return EMPTY_ITERATOR;
      }
    };

    ArrayIterable.prototype.valueReferenceFor = function valueReferenceFor(item) {
      return new _references.UpdatableReference(item.value);
    };

    ArrayIterable.prototype.updateValueReference = function updateValueReference(reference, item) {
      reference.update(item.value);
    };

    ArrayIterable.prototype.memoReferenceFor = function memoReferenceFor(item) {
      return new _references.UpdatablePrimitiveReference(item.memo);
    };

    ArrayIterable.prototype.updateMemoReference = function updateMemoReference(reference, item) {
      reference.update(item.memo);
    };

    return ArrayIterable;
  }();
});
enifed('ember-glimmer/utils/process-args', ['exports', 'ember-babel', 'ember-utils', 'ember-glimmer/component', 'ember-glimmer/utils/references', 'ember-views', 'ember-glimmer/helpers/action'], function (exports, _emberBabel, _emberUtils, _component, _references, _emberViews, _action) {
  'use strict';

  exports.processComponentArgs = processComponentArgs;


  // ComponentArgs takes EvaluatedNamedArgs and converts them into the
  // inputs needed by CurlyComponents (attrs and props, with mutable
  // cells, etc).
  function processComponentArgs(namedArgs) {
    var keys = namedArgs.names;
    var attrs = namedArgs.value();
    var props = Object.create(null);
    var args = Object.create(null);

    props[_component.ARGS] = args;

    for (var i = 0; i < keys.length; i++) {
      var name = keys[i];
      var ref = namedArgs.get(name);
      var value = attrs[name];

      if (typeof value === 'function' && value[_action.ACTION]) {
        attrs[name] = value;
      } else if (ref[_references.UPDATE]) {
        attrs[name] = new MutableCell(ref, value);
      }

      args[name] = ref;
      props[name] = value;
    }

    props.attrs = attrs;

    return props;
  }

  var REF = (0, _emberUtils.symbol)('REF');

  var MutableCell = function () {
    function MutableCell(ref, value) {
      (0, _emberBabel.classCallCheck)(this, MutableCell);

      this[_emberViews.MUTABLE_CELL] = true;
      this[REF] = ref;
      this.value = value;
    }

    MutableCell.prototype.update = function update(val) {
      this[REF][_references.UPDATE](val);
    };

    return MutableCell;
  }();
});
enifed('ember-glimmer/utils/references', ['exports', 'ember-babel', 'ember-utils', 'ember-metal', '@glimmer/reference', '@glimmer/runtime', 'ember-glimmer/utils/to-bool', 'ember-glimmer/helper', 'ember/features'], function (exports, _emberBabel, _emberUtils, _emberMetal, _reference, _runtime, _toBool, _helper, _features) {
  'use strict';

  exports.UnboundReference = exports.InternalHelperReference = exports.ClassBasedHelperReference = exports.SimpleHelperReference = exports.ConditionalReference = exports.UpdatablePrimitiveReference = exports.UpdatableReference = exports.NestedPropertyReference = exports.RootPropertyReference = exports.PropertyReference = exports.RootReference = exports.CachedReference = exports.UPDATE = undefined;
  var UPDATE = exports.UPDATE = (0, _emberUtils.symbol)('UPDATE');

  var maybeFreeze = void 0;
  if (true) {
    // gaurding this in a DEBUG gaurd (as well as all invocations)
    // so that it is properly stripped during the minification's
    // dead code elimination
    maybeFreeze = function (obj) {
      // re-freezing an already frozen object introduces a significant
      // performance penalty on Chrome (tested through 59).
      //
      // See: https://bugs.chromium.org/p/v8/issues/detail?id=6450
      if (!Object.isFrozen(obj) && _emberUtils.HAS_NATIVE_WEAKMAP) {
        Object.freeze(obj);
      }
    };
  }

  // @abstract
  // @implements PathReference

  var EmberPathReference = function () {
    function EmberPathReference() {
      (0, _emberBabel.classCallCheck)(this, EmberPathReference);
    }

    EmberPathReference.prototype.get = function get(key) {
      return PropertyReference.create(this, key);
    };

    return EmberPathReference;
  }();

  var CachedReference = exports.CachedReference = function (_EmberPathReference) {
    (0, _emberBabel.inherits)(CachedReference, _EmberPathReference);

    function CachedReference() {
      (0, _emberBabel.classCallCheck)(this, CachedReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _EmberPathReference.call(this));

      _this._lastRevision = null;
      _this._lastValue = null;
      return _this;
    }

    CachedReference.prototype.value = function value() {
      var tag = this.tag,
          _lastRevision = this._lastRevision,
          _lastValue = this._lastValue;


      if (!_lastRevision || !tag.validate(_lastRevision)) {
        _lastValue = this._lastValue = this.compute();
        this._lastRevision = tag.value();
      }

      return _lastValue;
    };

    // @abstract compute()


    return CachedReference;
  }(EmberPathReference);

  var RootReference = exports.RootReference = function (_ConstReference) {
    (0, _emberBabel.inherits)(RootReference, _ConstReference);

    function RootReference(value) {
      (0, _emberBabel.classCallCheck)(this, RootReference);

      var _this2 = (0, _emberBabel.possibleConstructorReturn)(this, _ConstReference.call(this, value));

      _this2.children = Object.create(null);
      return _this2;
    }

    RootReference.prototype.get = function get(propertyKey) {
      var ref = this.children[propertyKey];

      if (ref === undefined) {
        ref = this.children[propertyKey] = new RootPropertyReference(this.inner, propertyKey);
      }

      return ref;
    };

    return RootReference;
  }(_reference.ConstReference);

  var TwoWayFlushDetectionTag = void 0;

  if (_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || _features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
    TwoWayFlushDetectionTag = function () {
      function TwoWayFlushDetectionTag(tag, key, ref) {
        (0, _emberBabel.classCallCheck)(this, TwoWayFlushDetectionTag);

        this.tag = tag;
        this.parent = null;
        this.key = key;
        this.ref = ref;
      }

      TwoWayFlushDetectionTag.prototype.value = function value() {
        return this.tag.value();
      };

      TwoWayFlushDetectionTag.prototype.validate = function validate(ticket) {
        var parent = this.parent,
            key = this.key;


        var isValid = this.tag.validate(ticket);

        if (isValid && parent) {
          (0, _emberMetal.didRender)(parent, key, this.ref);
        }

        return isValid;
      };

      TwoWayFlushDetectionTag.prototype.didCompute = function didCompute(parent) {
        this.parent = parent;
        (0, _emberMetal.didRender)(parent, this.key, this.ref);
      };

      return TwoWayFlushDetectionTag;
    }();
  }

  var PropertyReference = exports.PropertyReference = function (_CachedReference) {
    (0, _emberBabel.inherits)(PropertyReference, _CachedReference);

    function PropertyReference() {
      (0, _emberBabel.classCallCheck)(this, PropertyReference);
      return (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference.apply(this, arguments));
    }

    PropertyReference.create = function create(parentReference, propertyKey) {
      if ((0, _reference.isConst)(parentReference)) {
        return new RootPropertyReference(parentReference.value(), propertyKey);
      } else {
        return new NestedPropertyReference(parentReference, propertyKey);
      }
    };

    PropertyReference.prototype.get = function get(key) {
      return new NestedPropertyReference(this, key);
    };

    return PropertyReference;
  }(CachedReference);

  var RootPropertyReference = exports.RootPropertyReference = function (_PropertyReference) {
    (0, _emberBabel.inherits)(RootPropertyReference, _PropertyReference);

    function RootPropertyReference(parentValue, propertyKey) {
      (0, _emberBabel.classCallCheck)(this, RootPropertyReference);

      var _this4 = (0, _emberBabel.possibleConstructorReturn)(this, _PropertyReference.call(this));

      _this4._parentValue = parentValue;
      _this4._propertyKey = propertyKey;

      if (_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || _features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
        _this4.tag = new TwoWayFlushDetectionTag((0, _emberMetal.tagForProperty)(parentValue, propertyKey), propertyKey, _this4);
      } else {
        _this4.tag = (0, _emberMetal.tagForProperty)(parentValue, propertyKey);
      }

      if (_features.MANDATORY_SETTER) {
        (0, _emberMetal.watchKey)(parentValue, propertyKey);
      }
      return _this4;
    }

    RootPropertyReference.prototype.compute = function compute() {
      var _parentValue = this._parentValue,
          _propertyKey = this._propertyKey;


      if (_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || _features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
        this.tag.didCompute(_parentValue);
      }

      return (0, _emberMetal.get)(_parentValue, _propertyKey);
    };

    RootPropertyReference.prototype[UPDATE] = function (value) {
      (0, _emberMetal.set)(this._parentValue, this._propertyKey, value);
    };

    return RootPropertyReference;
  }(PropertyReference);

  var NestedPropertyReference = exports.NestedPropertyReference = function (_PropertyReference2) {
    (0, _emberBabel.inherits)(NestedPropertyReference, _PropertyReference2);

    function NestedPropertyReference(parentReference, propertyKey) {
      (0, _emberBabel.classCallCheck)(this, NestedPropertyReference);

      var _this5 = (0, _emberBabel.possibleConstructorReturn)(this, _PropertyReference2.call(this));

      var parentReferenceTag = parentReference.tag;
      var parentObjectTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);

      _this5._parentReference = parentReference;
      _this5._parentObjectTag = parentObjectTag;
      _this5._propertyKey = propertyKey;

      if (_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || _features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
        var tag = (0, _reference.combine)([parentReferenceTag, parentObjectTag]);
        _this5.tag = new TwoWayFlushDetectionTag(tag, propertyKey, _this5);
      } else {
        _this5.tag = (0, _reference.combine)([parentReferenceTag, parentObjectTag]);
      }
      return _this5;
    }

    NestedPropertyReference.prototype.compute = function compute() {
      var _parentReference = this._parentReference,
          _parentObjectTag = this._parentObjectTag,
          _propertyKey = this._propertyKey;


      var parentValue = _parentReference.value();

      _parentObjectTag.update((0, _emberMetal.tagForProperty)(parentValue, _propertyKey));

      var parentValueType = typeof parentValue;

      if (parentValueType === 'string' && _propertyKey === 'length') {
        return parentValue.length;
      }

      if (parentValueType === 'object' && parentValue !== null || parentValueType === 'function') {
        if (_features.MANDATORY_SETTER) {
          (0, _emberMetal.watchKey)(parentValue, _propertyKey);
        }

        if (_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || _features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
          this.tag.didCompute(parentValue);
        }

        return (0, _emberMetal.get)(parentValue, _propertyKey);
      } else {
        return undefined;
      }
    };

    NestedPropertyReference.prototype[UPDATE] = function (value) {
      var parent = this._parentReference.value();
      (0, _emberMetal.set)(parent, this._propertyKey, value);
    };

    return NestedPropertyReference;
  }(PropertyReference);

  var UpdatableReference = exports.UpdatableReference = function (_EmberPathReference2) {
    (0, _emberBabel.inherits)(UpdatableReference, _EmberPathReference2);

    function UpdatableReference(value) {
      (0, _emberBabel.classCallCheck)(this, UpdatableReference);

      var _this6 = (0, _emberBabel.possibleConstructorReturn)(this, _EmberPathReference2.call(this));

      _this6.tag = new _reference.DirtyableTag();
      _this6._value = value;
      return _this6;
    }

    UpdatableReference.prototype.value = function value() {
      return this._value;
    };

    UpdatableReference.prototype.update = function update(value) {
      var _value = this._value;


      if (value !== _value) {
        this.tag.dirty();
        this._value = value;
      }
    };

    return UpdatableReference;
  }(EmberPathReference);

  var UpdatablePrimitiveReference = exports.UpdatablePrimitiveReference = function (_UpdatableReference) {
    (0, _emberBabel.inherits)(UpdatablePrimitiveReference, _UpdatableReference);

    function UpdatablePrimitiveReference() {
      (0, _emberBabel.classCallCheck)(this, UpdatablePrimitiveReference);
      return (0, _emberBabel.possibleConstructorReturn)(this, _UpdatableReference.apply(this, arguments));
    }

    UpdatablePrimitiveReference.prototype.get = function get() {
      return _runtime.UNDEFINED_REFERENCE;
    };

    return UpdatablePrimitiveReference;
  }(UpdatableReference);

  var ConditionalReference = exports.ConditionalReference = function (_GlimmerConditionalRe) {
    (0, _emberBabel.inherits)(ConditionalReference, _GlimmerConditionalRe);

    ConditionalReference.create = function create(reference) {
      if ((0, _reference.isConst)(reference)) {
        var value = reference.value();

        if ((0, _emberMetal.isProxy)(value)) {
          return new RootPropertyReference(value, 'isTruthy');
        } else {
          return _runtime.PrimitiveReference.create((0, _toBool.default)(value));
        }
      }

      return new ConditionalReference(reference);
    };

    function ConditionalReference(reference) {
      (0, _emberBabel.classCallCheck)(this, ConditionalReference);

      var _this8 = (0, _emberBabel.possibleConstructorReturn)(this, _GlimmerConditionalRe.call(this, reference));

      _this8.objectTag = new _reference.UpdatableTag(_reference.CONSTANT_TAG);
      _this8.tag = (0, _reference.combine)([reference.tag, _this8.objectTag]);
      return _this8;
    }

    ConditionalReference.prototype.toBool = function toBool(predicate) {
      if ((0, _emberMetal.isProxy)(predicate)) {
        this.objectTag.update((0, _emberMetal.tagForProperty)(predicate, 'isTruthy'));
        return (0, _emberMetal.get)(predicate, 'isTruthy');
      } else {
        this.objectTag.update((0, _emberMetal.tagFor)(predicate));
        return (0, _toBool.default)(predicate);
      }
    };

    return ConditionalReference;
  }(_runtime.ConditionalReference);

  var SimpleHelperReference = exports.SimpleHelperReference = function (_CachedReference2) {
    (0, _emberBabel.inherits)(SimpleHelperReference, _CachedReference2);

    SimpleHelperReference.create = function create(helper, args) {
      if ((0, _reference.isConst)(args)) {
        var positional = args.positional,
            named = args.named;


        var positionalValue = positional.value();
        var namedValue = named.value();

        if (true) {
          maybeFreeze(positionalValue);
          maybeFreeze(namedValue);
        }

        var _result = helper(positionalValue, namedValue);

        if (typeof _result === 'object' && _result !== null || typeof _result === 'function') {
          return new RootReference(_result);
        } else {
          return _runtime.PrimitiveReference.create(_result);
        }
      } else {
        return new SimpleHelperReference(helper, args);
      }
    };

    function SimpleHelperReference(helper, args) {
      (0, _emberBabel.classCallCheck)(this, SimpleHelperReference);

      var _this9 = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference2.call(this));

      _this9.tag = args.tag;
      _this9.helper = helper;
      _this9.args = args;
      return _this9;
    }

    SimpleHelperReference.prototype.compute = function compute() {
      var helper = this.helper,
          _args = this.args,
          positional = _args.positional,
          named = _args.named;


      var positionalValue = positional.value();
      var namedValue = named.value();

      if (true) {
        maybeFreeze(positionalValue);
        maybeFreeze(namedValue);
      }

      return helper(positionalValue, namedValue);
    };

    return SimpleHelperReference;
  }(CachedReference);

  var ClassBasedHelperReference = exports.ClassBasedHelperReference = function (_CachedReference3) {
    (0, _emberBabel.inherits)(ClassBasedHelperReference, _CachedReference3);

    ClassBasedHelperReference.create = function create(helperClass, vm, args) {
      var instance = helperClass.create();
      vm.newDestroyable(instance);
      return new ClassBasedHelperReference(instance, args);
    };

    function ClassBasedHelperReference(instance, args) {
      (0, _emberBabel.classCallCheck)(this, ClassBasedHelperReference);

      var _this10 = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference3.call(this));

      _this10.tag = (0, _reference.combine)([instance[_helper.RECOMPUTE_TAG], args.tag]);
      _this10.instance = instance;
      _this10.args = args;
      return _this10;
    }

    ClassBasedHelperReference.prototype.compute = function compute() {
      var instance = this.instance,
          _args2 = this.args,
          positional = _args2.positional,
          named = _args2.named;


      var positionalValue = positional.value();
      var namedValue = named.value();

      if (true) {
        maybeFreeze(positionalValue);
        maybeFreeze(namedValue);
      }

      return instance.compute(positionalValue, namedValue);
    };

    return ClassBasedHelperReference;
  }(CachedReference);

  var InternalHelperReference = exports.InternalHelperReference = function (_CachedReference4) {
    (0, _emberBabel.inherits)(InternalHelperReference, _CachedReference4);

    function InternalHelperReference(helper, args) {
      (0, _emberBabel.classCallCheck)(this, InternalHelperReference);

      var _this11 = (0, _emberBabel.possibleConstructorReturn)(this, _CachedReference4.call(this));

      _this11.tag = args.tag;
      _this11.helper = helper;
      _this11.args = args;
      return _this11;
    }

    InternalHelperReference.prototype.compute = function compute() {
      var helper = this.helper,
          args = this.args;

      return helper(args);
    };

    return InternalHelperReference;
  }(CachedReference);

  var UnboundReference = exports.UnboundReference = function (_ConstReference2) {
    (0, _emberBabel.inherits)(UnboundReference, _ConstReference2);

    function UnboundReference() {
      (0, _emberBabel.classCallCheck)(this, UnboundReference);
      return (0, _emberBabel.possibleConstructorReturn)(this, _ConstReference2.apply(this, arguments));
    }

    UnboundReference.create = function create(value) {
      if (typeof value === 'object' && value !== null || typeof result === 'function') {
        return new UnboundReference(value);
      } else {
        return _runtime.PrimitiveReference.create(value);
      }
    };

    UnboundReference.prototype.get = function get(key) {
      return new UnboundReference((0, _emberMetal.get)(this.inner, key));
    };

    return UnboundReference;
  }(_reference.ConstReference);
});
enifed('ember-glimmer/utils/string', ['exports', 'ember-babel', 'ember-debug'], function (exports, _emberBabel, _emberDebug) {
  'use strict';

  exports.SafeString = undefined;
  exports.getSafeString = getSafeString;
  exports.escapeExpression = escapeExpression;
  exports.htmlSafe = htmlSafe;
  exports.isHTMLSafe = isHTMLSafe;

  var SafeString = exports.SafeString = function () {
    function SafeString(string) {
      (0, _emberBabel.classCallCheck)(this, SafeString);

      this.string = string;
    }

    SafeString.prototype.toString = function toString() {
      return '' + this.string;
    };

    SafeString.prototype.toHTML = function toHTML() {
      return this.toString();
    };

    return SafeString;
  }();

  function getSafeString() {
    (true && !(false) && (0, _emberDebug.deprecate)('Ember.Handlebars.SafeString is deprecated in favor of Ember.String.htmlSafe', false, {
      id: 'ember-htmlbars.ember-handlebars-safestring',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_use-ember-string-htmlsafe-over-ember-handlebars-safestring'
    }));


    return SafeString;
  }

  var escape = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    // jscs:disable
    "'": '&#x27;',
    // jscs:enable
    '`': '&#x60;',
    '=': '&#x3D;'
  };

  var possible = /[&<>"'`=]/;
  var badChars = /[&<>"'`=]/g;

  function escapeChar(chr) {
    return escape[chr];
  }

  function escapeExpression(string) {
    if (typeof string !== 'string') {
      // don't escape SafeStrings, since they're already safe
      if (string && string.toHTML) {
        return string.toHTML();
      } else if (string == null) {
        return '';
      } else if (!string) {
        return string + '';
      }

      // Force a string conversion as this will be done by the append regardless and
      // the regex test will do this transparently behind the scenes, causing issues if
      // an object's to string has escaped characters in it.
      string = '' + string;
    }

    if (!possible.test(string)) {
      return string;
    }
    return string.replace(badChars, escapeChar);
  }

  /**
    Mark a string as safe for unescaped output with Ember templates. If you
    return HTML from a helper, use this function to
    ensure Ember's rendering layer does not escape the HTML.
  
    ```javascript
    import { htmlSafe } from '@ember/string';
  
    htmlSafe('<div>someString</div>')
    ```
  
    @method htmlSafe
    @for @ember/string
    @static
    @return {Handlebars.SafeString} A string that will not be HTML escaped by Handlebars.
    @public
  */
  function htmlSafe(str) {
    if (str === null || str === undefined) {
      str = '';
    } else if (typeof str !== 'string') {
      str = '' + str;
    }
    return new SafeString(str);
  }

  /**
    Detects if a string was decorated using `htmlSafe`.
  
    ```javascript
    import { htmlSafe, isHTMLSafe } from '@ember/string';
  
    var plainString = 'plain string',
        safeString = htmlSafe('<div>someValue</div>');
  
    isHTMLSafe(plainString); // false
    isHTMLSafe(safeString);  // true
    ```
  
    @method isHTMLSafe
    @for @ember/string
    @static
    @return {Boolean} `true` if the string was decorated with `htmlSafe`, `false` otherwise.
    @public
  */
  function isHTMLSafe(str) {
    return str && typeof str.toHTML === 'function';
  }
});
enifed('ember-glimmer/utils/to-bool', ['exports', 'ember-runtime', 'ember-metal'], function (exports, _emberRuntime, _emberMetal) {
  'use strict';

  exports.default = toBool;
  function toBool(predicate) {
    if (!predicate) {
      return false;
    }

    if (predicate === true) {
      return true;
    }

    if ((0, _emberRuntime.isArray)(predicate)) {
      return (0, _emberMetal.get)(predicate, 'length') !== 0;
    }

    return true;
  }
});
enifed('ember-glimmer/views/outlet', ['exports', 'ember-babel', 'ember-utils', '@glimmer/reference', 'ember-environment', 'ember-metal'], function (exports, _emberBabel, _emberUtils, _reference, _emberEnvironment, _emberMetal) {
  'use strict';

  var OutletStateReference = function () {
    function OutletStateReference(outletView) {
      (0, _emberBabel.classCallCheck)(this, OutletStateReference);

      this.outletView = outletView;
      this.tag = outletView._tag;
    }

    OutletStateReference.prototype.get = function get(key) {
      return new ChildOutletStateReference(this, key);
    };

    OutletStateReference.prototype.value = function value() {
      return this.outletView.outletState;
    };

    OutletStateReference.prototype.getOrphan = function getOrphan(name) {
      return new OrphanedOutletStateReference(this, name);
    };

    OutletStateReference.prototype.update = function update(state) {
      this.outletView.setOutletState(state);
    };

    return OutletStateReference;
  }();

  var OrphanedOutletStateReference = function (_OutletStateReference) {
    (0, _emberBabel.inherits)(OrphanedOutletStateReference, _OutletStateReference);

    function OrphanedOutletStateReference(root, name) {
      (0, _emberBabel.classCallCheck)(this, OrphanedOutletStateReference);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _OutletStateReference.call(this, root.outletView));

      _this.root = root;
      _this.name = name;
      return _this;
    }

    OrphanedOutletStateReference.prototype.value = function value() {
      var rootState = this.root.value();

      var orphans = rootState.outlets.main.outlets.__ember_orphans__;

      if (!orphans) {
        return null;
      }

      var matched = orphans.outlets[this.name];

      if (!matched) {
        return null;
      }

      var state = Object.create(null);
      state[matched.render.outlet] = matched;
      matched.wasUsed = true;
      return { outlets: state };
    };

    return OrphanedOutletStateReference;
  }(OutletStateReference);

  var ChildOutletStateReference = function () {
    function ChildOutletStateReference(parent, key) {
      (0, _emberBabel.classCallCheck)(this, ChildOutletStateReference);

      this.parent = parent;
      this.key = key;
      this.tag = parent.tag;
    }

    ChildOutletStateReference.prototype.get = function get(key) {
      return new ChildOutletStateReference(this, key);
    };

    ChildOutletStateReference.prototype.value = function value() {
      return this.parent.value()[this.key];
    };

    return ChildOutletStateReference;
  }();

  var OutletView = function () {
    OutletView.extend = function extend(injections) {
      return function (_OutletView) {
        (0, _emberBabel.inherits)(_class, _OutletView);

        function _class() {
          (0, _emberBabel.classCallCheck)(this, _class);
          return (0, _emberBabel.possibleConstructorReturn)(this, _OutletView.apply(this, arguments));
        }

        _class.create = function create(options) {
          if (options) {
            return _OutletView.create.call(this, (0, _emberUtils.assign)({}, injections, options));
          } else {
            return _OutletView.create.call(this, injections);
          }
        };

        return _class;
      }(OutletView);
    };

    OutletView.reopenClass = function reopenClass(injections) {
      (0, _emberUtils.assign)(this, injections);
    };

    OutletView.create = function create(options) {
      var _environment = options._environment,
          renderer = options.renderer,
          template = options.template;

      var owner = options[_emberUtils.OWNER];
      return new OutletView(_environment, renderer, owner, template);
    };

    function OutletView(_environment, renderer, owner, template) {
      (0, _emberBabel.classCallCheck)(this, OutletView);

      this._environment = _environment;
      this.renderer = renderer;
      this.owner = owner;
      this.template = template;
      this.outletState = null;
      this._tag = new _reference.DirtyableTag();
    }

    OutletView.prototype.appendTo = function appendTo(selector) {
      var env = this._environment || _emberEnvironment.environment;
      var target = void 0;

      if (env.hasDOM) {
        target = typeof selector === 'string' ? document.querySelector(selector) : selector;
      } else {
        target = selector;
      }

      _emberMetal.run.schedule('render', this.renderer, 'appendOutletView', this, target);
    };

    OutletView.prototype.rerender = function rerender() {};

    OutletView.prototype.setOutletState = function setOutletState(state) {
      this.outletState = {
        outlets: {
          main: state
        },
        render: {
          owner: undefined,
          into: undefined,
          outlet: 'main',
          name: '-top-level',
          controller: undefined,
          ViewClass: undefined,
          template: undefined
        }
      };
      this._tag.dirty();
    };

    OutletView.prototype.toReference = function toReference() {
      return new OutletStateReference(this);
    };

    OutletView.prototype.destroy = function destroy() {};

    return OutletView;
  }();

  exports.default = OutletView;
});
enifed('ember-metal', ['exports', 'ember-environment', 'ember-utils', 'ember-debug', 'ember-babel', 'ember/features', '@glimmer/reference', 'require', 'ember-console', 'backburner'], function (exports, emberEnvironment, emberUtils, emberDebug, emberBabel, ember_features, _glimmer_reference, require, Logger, Backburner) {
  'use strict';

  require = 'default' in require ? require['default'] : require;
  Logger = 'default' in Logger ? Logger['default'] : Logger;
  Backburner = 'default' in Backburner ? Backburner['default'] : Backburner;

  /**
  @module ember
  */

  /**
    This namespace contains all Ember methods and functions. Future versions of
    Ember may overwrite this namespace and therefore, you should avoid adding any
    new properties.
  
    At the heart of Ember is Ember-Runtime, a set of core functions that provide
    cross-platform compatibility and object property observing.  Ember-Runtime is
    small and performance-focused so you can use it alongside other
    cross-platform libraries such as jQuery. For more details, see
    [Ember-Runtime](https://emberjs.com/api/modules/ember-runtime.html).
  
    @class Ember
    @static
    @public
  */
  var Ember = typeof emberEnvironment.context.imports.Ember === 'object' && emberEnvironment.context.imports.Ember || {};

  // Make sure these are set whether Ember was already defined or not
  Ember.isNamespace = true;
  Ember.toString = function () {
    return 'Ember';
  };

  /*
   When we render a rich template hierarchy, the set of events that
   *might* happen tends to be much larger than the set of events that
   actually happen. This implies that we should make listener creation &
   destruction cheap, even at the cost of making event dispatch more
   expensive.
  
   Thus we store a new listener with a single push and no new
   allocations, without even bothering to do deduplication -- we can
   save that for dispatch time, if an event actually happens.
   */

  /* listener flags */
  var ONCE = 1;
  var SUSPENDED = 2;

  var protoMethods = {
    addToListeners: function (eventName, target, method, flags) {
      if (this._listeners === undefined) {
        this._listeners = [];
      }
      this._listeners.push(eventName, target, method, flags);
    },
    _finalizeListeners: function () {
      if (this._listenersFinalized) {
        return;
      }
      if (this._listeners === undefined) {
        this._listeners = [];
      }
      var pointer = this.parent;
      while (pointer !== undefined) {
        var listeners = pointer._listeners;
        if (listeners !== undefined) {
          this._listeners = this._listeners.concat(listeners);
        }
        if (pointer._listenersFinalized) {
          break;
        }
        pointer = pointer.parent;
      }
      this._listenersFinalized = true;
    },
    removeFromListeners: function (eventName, target, method, didRemove) {
      var pointer = this;
      while (pointer !== undefined) {
        var listeners = pointer._listeners;
        if (listeners !== undefined) {
          for (var index = listeners.length - 4; index >= 0; index -= 4) {
            if (listeners[index] === eventName && (!method || listeners[index + 1] === target && listeners[index + 2] === method)) {
              if (pointer === this) {
                // we are modifying our own list, so we edit directly
                if (typeof didRemove === 'function') {
                  didRemove(eventName, target, listeners[index + 2]);
                }
                listeners.splice(index, 4);
              } else {
                // we are trying to remove an inherited listener, so we do
                // just-in-time copying to detach our own listeners from
                // our inheritance chain.
                this._finalizeListeners();
                return this.removeFromListeners(eventName, target, method);
              }
            }
          }
        }
        if (pointer._listenersFinalized) {
          break;
        }
        pointer = pointer.parent;
      }
    },
    matchingListeners: function (eventName) {
      var pointer = this;
      var result = void 0;
      while (pointer !== undefined) {
        var listeners = pointer._listeners;
        if (listeners !== undefined) {
          for (var index = 0; index < listeners.length; index += 4) {
            if (listeners[index] === eventName) {
              result = result || [];
              pushUniqueListener(result, listeners, index);
            }
          }
        }
        if (pointer._listenersFinalized) {
          break;
        }
        pointer = pointer.parent;
      }
      var sus = this._suspendedListeners;
      if (sus !== undefined && result !== undefined) {
        for (var susIndex = 0; susIndex < sus.length; susIndex += 3) {
          if (eventName === sus[susIndex]) {
            for (var resultIndex = 0; resultIndex < result.length; resultIndex += 3) {
              if (result[resultIndex] === sus[susIndex + 1] && result[resultIndex + 1] === sus[susIndex + 2]) {
                result[resultIndex + 2] |= SUSPENDED;
              }
            }
          }
        }
      }
      return result;
    },
    suspendListeners: function (eventNames, target, method, callback) {
      var sus = this._suspendedListeners;
      if (sus === undefined) {
        sus = this._suspendedListeners = [];
      }
      for (var i = 0; i < eventNames.length; i++) {
        sus.push(eventNames[i], target, method);
      }
      try {
        return callback.call(target);
      } finally {
        if (sus.length === eventNames.length) {
          this._suspendedListeners = undefined;
        } else {
          for (var _i = sus.length - 3; _i >= 0; _i -= 3) {
            if (sus[_i + 1] === target && sus[_i + 2] === method && eventNames.indexOf(sus[_i]) !== -1) {
              sus.splice(_i, 3);
            }
          }
        }
      }
    },
    watchedEvents: function () {
      var pointer = this;
      var names = {};
      while (pointer !== undefined) {
        var listeners = pointer._listeners;
        if (listeners !== undefined) {
          for (var index = 0; index < listeners.length; index += 4) {
            names[listeners[index]] = true;
          }
        }
        if (pointer._listenersFinalized) {
          break;
        }
        pointer = pointer.parent;
      }
      return Object.keys(names);
    }
  };

  function pushUniqueListener(destination, source, index) {
    var target = source[index + 1];
    var method = source[index + 2];
    for (var destinationIndex = 0; destinationIndex < destination.length; destinationIndex += 3) {
      if (destination[destinationIndex] === target && destination[destinationIndex + 1] === method) {
        return;
      }
    }
    destination.push(target, method, source[index + 3]);
  }

  /**
  @module @ember/object
  */
  /*
    The event system uses a series of nested hashes to store listeners on an
    object. When a listener is registered, or when an event arrives, these
    hashes are consulted to determine which target and action pair to invoke.
  
    The hashes are stored in the object's meta hash, and look like this:
  
        // Object's meta hash
        {
          listeners: {       // variable name: `listenerSet`
            "foo:changed": [ // variable name: `actions`
              target, method, flags
            ]
          }
        }
  
  */

  /**
    Add an event listener
  
    @method addListener
    @static
    @for @ember/object/events
    @param obj
    @param {String} eventName
    @param {Object|Function} target A target object or a function
    @param {Function|String} method A function or the name of a function to be called on `target`
    @param {Boolean} once A flag whether a function should only be called once
    @public
  */
  function addListener(obj, eventName, target, method, once) {
    true && !(!!obj && !!eventName) && emberDebug.assert('You must pass at least an object and event name to addListener', !!obj && !!eventName);
    true && !(eventName !== 'didInitAttrs') && emberDebug.deprecate('didInitAttrs called in ' + (obj && obj.toString && obj.toString()) + '.', eventName !== 'didInitAttrs', {
      id: 'ember-views.did-init-attrs',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_ember-component-didinitattrs'
    });

    if (!method && 'function' === typeof target) {
      method = target;
      target = null;
    }

    var flags = 0;
    if (once) {
      flags |= ONCE;
    }

    meta(obj).addToListeners(eventName, target, method, flags);

    if ('function' === typeof obj.didAddListener) {
      obj.didAddListener(eventName, target, method);
    }
  }

  /**
    Remove an event listener
  
    Arguments should match those passed to `addListener`.
  
    @method removeListener
    @static
    @for @ember/object/events
    @param obj
    @param {String} eventName
    @param {Object|Function} target A target object or a function
    @param {Function|String} method A function or the name of a function to be called on `target`
    @public
  */
  function removeListener(obj, eventName, target, method) {
    true && !(!!obj && !!eventName) && emberDebug.assert('You must pass at least an object and event name to removeListener', !!obj && !!eventName);

    if (!method && 'function' === typeof target) {
      method = target;
      target = null;
    }

    var func = 'function' === typeof obj.didRemoveListener ? obj.didRemoveListener.bind(obj) : function () {};
    meta(obj).removeFromListeners(eventName, target, method, func);
  }

  /**
    Suspend listener during callback.
  
    This should only be used by the target of the event listener
    when it is taking an action that would cause the event, e.g.
    an object might suspend its property change listener while it is
    setting that property.
  
    @method suspendListener
    @static
    @for @ember/object/events
  
    @private
    @param obj
    @param {String} eventName
    @param {Object|Function} target A target object or a function
    @param {Function|String} method A function or the name of a function to be called on `target`
    @param {Function} callback
  */
  function suspendListener(obj, eventName, target, method, callback) {
    return suspendListeners(obj, [eventName], target, method, callback);
  }

  /**
    Suspends multiple listeners during a callback.
  
    @method suspendListeners
    @static
    @for @ember/object/events
  
    @private
    @param obj
    @param {Array} eventNames Array of event names
    @param {Object|Function} target A target object or a function
    @param {Function|String} method A function or the name of a function to be called on `target`
    @param {Function} callback
  */
  function suspendListeners(obj, eventNames, target, method, callback) {
    if (!method && 'function' === typeof target) {
      method = target;
      target = null;
    }
    return meta(obj).suspendListeners(eventNames, target, method, callback);
  }

  /**
    Return a list of currently watched events
  
    @private
    @method watchedEvents
    @static
    @for @ember/object/events
    @param obj
  */
  function watchedEvents(obj) {
    var meta$$1 = exports.peekMeta(obj);
    return meta$$1 && meta$$1.watchedEvents() || [];
  }

  /**
    Send an event. The execution of suspended listeners
    is skipped, and once listeners are removed. A listener without
    a target is executed on the passed object. If an array of actions
    is not passed, the actions stored on the passed object are invoked.
  
    @method sendEvent
    @static
    @for @ember/object/events
    @param obj
    @param {String} eventName
    @param {Array} params Optional parameters for each listener.
    @param {Array} actions Optional array of actions (listeners).
    @param {Meta}  meta Optional meta to lookup listeners
    @return true
    @public
  */
  function sendEvent(obj, eventName, params, actions, _meta) {
    if (actions === undefined) {
      var meta$$1 = _meta || exports.peekMeta(obj);
      actions = typeof meta$$1 === 'object' && meta$$1 !== null && meta$$1.matchingListeners(eventName);
    }

    if (actions === undefined || actions.length === 0) {
      return false;
    }

    for (var i = actions.length - 3; i >= 0; i -= 3) {
      // looping in reverse for once listeners
      var target = actions[i];
      var method = actions[i + 1];
      var flags = actions[i + 2];

      if (!method) {
        continue;
      }
      if (flags & SUSPENDED) {
        continue;
      }
      if (flags & ONCE) {
        removeListener(obj, eventName, target, method);
      }
      if (!target) {
        target = obj;
      }
      if ('string' === typeof method) {
        if (params) {
          emberUtils.applyStr(target, method, params);
        } else {
          target[method]();
        }
      } else {
        if (params) {
          method.apply(target, params);
        } else {
          method.call(target);
        }
      }
    }
    return true;
  }

  /**
    @private
    @method hasListeners
    @static
    @for @ember/object/events
    @param obj
    @param {String} eventName
  */
  function hasListeners(obj, eventName) {
    var meta$$1 = exports.peekMeta(obj);
    if (meta$$1 === undefined) {
      return false;
    }
    var matched = meta$$1.matchingListeners(eventName);
    return matched !== undefined && matched.length > 0;
  }

  /**
    @private
    @method listenersFor
    @static
    @for @ember/object/events
    @param obj
    @param {String} eventName
  */
  function listenersFor(obj, eventName) {
    var ret = [];
    var meta$$1 = exports.peekMeta(obj);
    var actions = meta$$1 && meta$$1.matchingListeners(eventName);

    if (!actions) {
      return ret;
    }

    for (var i = 0; i < actions.length; i += 3) {
      var target = actions[i];
      var method = actions[i + 1];
      ret.push([target, method]);
    }

    return ret;
  }

  /**
    Define a property as a function that should be executed when
    a specified event or events are triggered.
  
  
    ``` javascript
    import EmberObject from '@ember/object';
    import { on } from '@ember/object/evented';
    import { sendEvent } from '@ember/object/events';
  
    let Job = EmberObject.extend({
      logCompleted: on('completed', function() {
        console.log('Job completed!');
      })
    });
  
    let job = Job.create();
  
    sendEvent(job, 'completed'); // Logs 'Job completed!'
   ```
  
    @method on
    @static
    @for @ember/object/evented
    @param {String} eventNames*
    @param {Function} func
    @return func
    @public
  */
  function on() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var func = args.pop();
    var events = args;

    true && !(typeof func === 'function') && emberDebug.assert('on expects function as last argument', typeof func === 'function');
    true && !(events.length > 0 && events.every(function (p) {
      return typeof p === 'string' && p.length;
    })) && emberDebug.assert('on called without valid event names', events.length > 0 && events.every(function (p) {
      return typeof p === 'string' && p.length;
    }));

    func.__ember_listens__ = events;
    return func;
  }

  var hasViews = function () {
    return false;
  };

  function setHasViews(fn) {
    hasViews = fn;
  }

  function makeTag() {
    return new _glimmer_reference.DirtyableTag();
  }

  function tagForProperty(object, propertyKey, _meta) {
    if (typeof object !== 'object' || object === null) {
      return _glimmer_reference.CONSTANT_TAG;
    }

    var meta$$1 = _meta || meta(object);
    if (meta$$1.isProxy()) {
      return tagFor(object, meta$$1);
    }

    var tags = meta$$1.writableTags();
    var tag = tags[propertyKey];
    if (tag) {
      return tag;
    }

    return tags[propertyKey] = makeTag();
  }

  function tagFor(object, _meta) {
    if (typeof object === 'object' && object !== null) {
      var meta$$1 = _meta || meta(object);
      return meta$$1.writableTag(makeTag);
    } else {
      return _glimmer_reference.CONSTANT_TAG;
    }
  }

  function markObjectAsDirty(meta$$1, propertyKey) {
    var objectTag = meta$$1.readableTag();

    if (objectTag !== undefined) {
      objectTag.dirty();
    }

    var tags = meta$$1.readableTags();
    var propertyTag = tags !== undefined ? tags[propertyKey] : undefined;

    if (propertyTag !== undefined) {
      propertyTag.dirty();
    }

    if (propertyKey === 'content' && meta$$1.isProxy()) {
      objectTag.contentDidChange();
    }

    if (objectTag !== undefined || propertyTag !== undefined) {
      ensureRunloop();
    }
  }

  var backburner = void 0;
  function ensureRunloop() {
    if (backburner === undefined) {
      backburner = require('ember-metal').run.backburner;
    }

    if (hasViews()) {
      backburner.ensureInstance();
    }
  }

  /*
    this.observerSet = {
      [senderGuid]: { // variable name: `keySet`
        [keyName]: listIndex
      }
    },
    this.observers = [
      {
        sender: obj,
        keyName: keyName,
        eventName: eventName,
        listeners: [
          [target, method, flags]
        ]
      },
      ...
    ]
  */

  var ObserverSet = function () {
    function ObserverSet() {
      emberBabel.classCallCheck(this, ObserverSet);

      this.clear();
    }

    ObserverSet.prototype.add = function add(sender, keyName, eventName) {
      var observerSet = this.observerSet;
      var observers = this.observers;
      var senderGuid = emberUtils.guidFor(sender);
      var keySet = observerSet[senderGuid];

      if (keySet === undefined) {
        observerSet[senderGuid] = keySet = {};
      }

      var index = keySet[keyName];
      if (index === undefined) {
        index = observers.push({
          sender: sender,
          keyName: keyName,
          eventName: eventName,
          listeners: []
        }) - 1;
        keySet[keyName] = index;
      }
      return observers[index].listeners;
    };

    ObserverSet.prototype.flush = function flush() {
      var observers = this.observers;
      var observer = void 0,
          sender = void 0;
      this.clear();
      for (var i = 0; i < observers.length; ++i) {
        observer = observers[i];
        sender = observer.sender;
        if (sender.isDestroying || sender.isDestroyed) {
          continue;
        }
        sendEvent(sender, observer.eventName, [sender, observer.keyName], observer.listeners);
      }
    };

    ObserverSet.prototype.clear = function clear() {
      this.observerSet = {};
      this.observers = [];
    };

    return ObserverSet;
  }();

  exports.runInTransaction = void 0;
  exports.didRender = void 0;
  exports.assertNotRendered = void 0;

  // detect-backtracking-rerender by default is debug build only
  // detect-glimmer-allow-backtracking-rerender can be enabled in custom builds
  if (ember_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || ember_features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
    var counter = 0;
    var inTransaction = false;
    var shouldReflush = void 0;
    var debugStack = void 0;

    exports.runInTransaction = function (context$$1, methodName) {
      shouldReflush = false;
      inTransaction = true;
      {
        debugStack = context$$1.env.debugStack;
      }
      context$$1[methodName]();
      inTransaction = false;
      counter++;
      return shouldReflush;
    };

    exports.didRender = function (object, key, reference) {
      if (!inTransaction) {
        return;
      }
      var meta$$1 = meta(object);
      var lastRendered = meta$$1.writableLastRendered();
      lastRendered[key] = counter;

      {
        var referenceMap = meta$$1.writableLastRenderedReferenceMap();
        referenceMap[key] = reference;

        var templateMap = meta$$1.writableLastRenderedTemplateMap();
        if (templateMap[key] === undefined) {
          templateMap[key] = debugStack.peek();
        }
      }
    };

    exports.assertNotRendered = function (object, key, _meta) {
      var meta$$1 = _meta || meta(object);
      var lastRendered = meta$$1.readableLastRendered();

      if (lastRendered && lastRendered[key] === counter) {
        {
          var templateMap = meta$$1.readableLastRenderedTemplateMap();
          var lastRenderedIn = templateMap[key];
          var currentlyIn = debugStack.peek();

          var referenceMap = meta$$1.readableLastRenderedReferenceMap();
          var lastRef = referenceMap[key];
          var parts = [];
          var label = void 0;

          if (lastRef) {
            while (lastRef && lastRef._propertyKey) {
              parts.unshift(lastRef._propertyKey);
              lastRef = lastRef._parentReference;
            }

            label = parts.join('.');
          } else {
            label = 'the same value';
          }

          var message = 'You modified "' + label + '" twice on ' + object + ' in a single render. It was rendered in ' + lastRenderedIn + ' and modified in ' + currentlyIn + '. This was unreliable and slow in Ember 1.x and';

          if (ember_features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
            true && !false && emberDebug.deprecate(message + ' will be removed in Ember 3.0.', false, { id: 'ember-views.render-double-modify', until: '3.0.0' });
          } else {
            true && !false && emberDebug.assert(message + ' is no longer supported. See https://github.com/emberjs/ember.js/issues/13948 for more details.', false);
          }
        }

        shouldReflush = true;
      }
    };
  } else {
    // in production do nothing to detect reflushes
    exports.runInTransaction = function (context$$1, methodName) {
      context$$1[methodName]();
      return false;
    };
  }

  /**
   @module ember
   @private
   */

  var PROPERTY_DID_CHANGE = emberUtils.symbol('PROPERTY_DID_CHANGE');

  var beforeObserverSet = new ObserverSet();
  var observerSet = new ObserverSet();
  var deferred = 0;

  // ..........................................................
  // PROPERTY CHANGES
  //

  /**
    This function is called just before an object property is about to change.
    It will notify any before observers and prepare caches among other things.
  
    Normally you will not need to call this method directly but if for some
    reason you can't directly watch a property you can invoke this method
    manually along with `Ember.propertyDidChange()` which you should call just
    after the property value changes.
  
    @method propertyWillChange
    @for Ember
    @param {Object} obj The object with the property that will change
    @param {String} keyName The property key (or path) that will change.
    @return {void}
    @private
  */
  function propertyWillChange(obj, keyName, _meta) {
    var meta$$1 = _meta || exports.peekMeta(obj);
    if (meta$$1 && !meta$$1.isInitialized(obj)) {
      return;
    }

    var watching = meta$$1 && meta$$1.peekWatching(keyName) > 0;
    var possibleDesc = obj[keyName];
    var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

    if (isDescriptor && possibleDesc.willChange) {
      possibleDesc.willChange(obj, keyName);
    }

    if (watching) {
      dependentKeysWillChange(obj, keyName, meta$$1);
      chainsWillChange(obj, keyName, meta$$1);
      notifyBeforeObservers(obj, keyName, meta$$1);
    }
  }

  /**
    This function is called just after an object property has changed.
    It will notify any observers and clear caches among other things.
  
    Normally you will not need to call this method directly but if for some
    reason you can't directly watch a property you can invoke this method
    manually along with `Ember.propertyWillChange()` which you should call just
    before the property value changes.
  
    @method propertyDidChange
    @for Ember
    @param {Object} obj The object with the property that will change
    @param {String} keyName The property key (or path) that will change.
    @param {Meta} meta The objects meta.
    @return {void}
    @private
  */
  function propertyDidChange(obj, keyName, _meta) {
    var meta$$1 = _meta || exports.peekMeta(obj);
    var hasMeta = !!meta$$1;

    if (hasMeta && !meta$$1.isInitialized(obj)) {
      return;
    }

    var possibleDesc = obj[keyName];
    var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

    // shouldn't this mean that we're watching this key?
    if (isDescriptor && possibleDesc.didChange) {
      possibleDesc.didChange(obj, keyName);
    }

    if (hasMeta && meta$$1.peekWatching(keyName) > 0) {
      dependentKeysDidChange(obj, keyName, meta$$1);
      chainsDidChange(obj, keyName, meta$$1);
      notifyObservers(obj, keyName, meta$$1);
    }

    if (obj[PROPERTY_DID_CHANGE]) {
      obj[PROPERTY_DID_CHANGE](keyName);
    }

    if (hasMeta) {
      if (meta$$1.isSourceDestroying()) {
        return;
      }
      markObjectAsDirty(meta$$1, keyName);
    }

    if (ember_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || ember_features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
      exports.assertNotRendered(obj, keyName, meta$$1);
    }
  }

  var WILL_SEEN = void 0;
  var DID_SEEN = void 0;
  // called whenever a property is about to change to clear the cache of any dependent keys (and notify those properties of changes, etc...)
  function dependentKeysWillChange(obj, depKey, meta$$1) {
    if (meta$$1.isSourceDestroying() || !meta$$1.hasDeps(depKey)) {
      return;
    }
    var seen = WILL_SEEN;
    var top = !seen;

    if (top) {
      seen = WILL_SEEN = {};
    }

    iterDeps(propertyWillChange, obj, depKey, seen, meta$$1);

    if (top) {
      WILL_SEEN = null;
    }
  }

  // called whenever a property has just changed to update dependent keys
  function dependentKeysDidChange(obj, depKey, meta$$1) {
    if (meta$$1.isSourceDestroying() || !meta$$1.hasDeps(depKey)) {
      return;
    }
    var seen = DID_SEEN;
    var top = !seen;

    if (top) {
      seen = DID_SEEN = {};
    }

    iterDeps(propertyDidChange, obj, depKey, seen, meta$$1);

    if (top) {
      DID_SEEN = null;
    }
  }

  function iterDeps(method, obj, depKey, seen, meta$$1) {
    var possibleDesc = void 0,
        isDescriptor = void 0;
    var guid = emberUtils.guidFor(obj);
    var current = seen[guid];

    if (!current) {
      current = seen[guid] = {};
    }

    if (current[depKey]) {
      return;
    }

    current[depKey] = true;

    meta$$1.forEachInDeps(depKey, function (key, value) {
      if (!value) {
        return;
      }

      possibleDesc = obj[key];
      isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

      if (isDescriptor && possibleDesc._suspended === obj) {
        return;
      }

      method(obj, key, meta$$1);
    });
  }

  function chainsWillChange(obj, keyName, meta$$1) {
    var chainWatchers = meta$$1.readableChainWatchers();
    if (chainWatchers !== undefined) {
      chainWatchers.notify(keyName, false, propertyWillChange);
    }
  }

  function chainsDidChange(obj, keyName, meta$$1) {
    var chainWatchers = meta$$1.readableChainWatchers();
    if (chainWatchers !== undefined) {
      chainWatchers.notify(keyName, true, propertyDidChange);
    }
  }

  function overrideChains(obj, keyName, meta$$1) {
    var chainWatchers = meta$$1.readableChainWatchers();
    if (chainWatchers !== undefined) {
      chainWatchers.revalidate(keyName);
    }
  }

  /**
    @method beginPropertyChanges
    @chainable
    @private
  */
  function beginPropertyChanges() {
    deferred++;
  }

  /**
    @method endPropertyChanges
    @private
  */
  function endPropertyChanges() {
    deferred--;
    if (deferred <= 0) {
      beforeObserverSet.clear();
      observerSet.flush();
    }
  }

  /**
    Make a series of property changes together in an
    exception-safe way.
  
    ```javascript
    Ember.changeProperties(function() {
      obj1.set('foo', mayBlowUpWhenSet);
      obj2.set('bar', baz);
    });
    ```
  
    @method changeProperties
    @param {Function} callback
    @param [binding]
    @private
  */
  function changeProperties(callback, binding) {
    beginPropertyChanges();
    try {
      callback.call(binding);
    } finally {
      endPropertyChanges();
    }
  }

  function indexOf(array, target, method) {
    var index = -1;
    // hashes are added to the end of the event array
    // so it makes sense to start searching at the end
    // of the array and search in reverse
    for (var i = array.length - 3; i >= 0; i -= 3) {
      if (target === array[i] && method === array[i + 1]) {
        index = i;
        break;
      }
    }
    return index;
  }

  function accumulateListeners(obj, eventName, otherActions, meta$$1) {
    var actions = meta$$1.matchingListeners(eventName);
    if (actions === undefined) {
      return;
    }
    var newActions = [];

    for (var i = actions.length - 3; i >= 0; i -= 3) {
      var target = actions[i];
      var method = actions[i + 1];
      var flags = actions[i + 2];
      var actionIndex = indexOf(otherActions, target, method);

      if (actionIndex === -1) {
        otherActions.push(target, method, flags);
        newActions.push(target, method, flags);
      }
    }

    return newActions;
  }

  function notifyBeforeObservers(obj, keyName, meta$$1) {
    if (meta$$1.isSourceDestroying()) {
      return;
    }

    var eventName = keyName + ':before';
    var listeners = void 0,
        added = void 0;
    if (deferred > 0) {
      listeners = beforeObserverSet.add(obj, keyName, eventName);
      added = accumulateListeners(obj, eventName, listeners, meta$$1);
    }
    sendEvent(obj, eventName, [obj, keyName], added);
  }

  function notifyObservers(obj, keyName, meta$$1) {
    if (meta$$1.isSourceDestroying()) {
      return;
    }

    var eventName = keyName + ':change';
    var listeners = void 0;
    if (deferred > 0) {
      listeners = observerSet.add(obj, keyName, eventName);
      accumulateListeners(obj, eventName, listeners, meta$$1);
    } else {
      sendEvent(obj, eventName, [obj, keyName]);
    }
  }

  /**
  @module @ember/object
  */

  // ..........................................................
  // DESCRIPTOR
  //

  /**
    Objects of this type can implement an interface to respond to requests to
    get and set. The default implementation handles simple properties.
  
    @class Descriptor
    @private
  */
  function Descriptor() {
    this.isDescriptor = true;
  }

  var REDEFINE_SUPPORTED = function () {
    // https://github.com/spalger/kibana/commit/b7e35e6737df585585332857a4c397dc206e7ff9
    var a = Object.create(Object.prototype, {
      prop: {
        configurable: true,
        value: 1
      }
    });

    Object.defineProperty(a, 'prop', {
      configurable: true,
      value: 2
    });

    return a.prop === 2;
  }();
  // ..........................................................
  // DEFINING PROPERTIES API
  //

  function MANDATORY_SETTER_FUNCTION(name) {
    function SETTER_FUNCTION(value) {
      var m = exports.peekMeta(this);
      if (!m.isInitialized(this)) {
        m.writeValues(name, value);
      } else {
        true && !false && emberDebug.assert('You must use set() to set the `' + name + '` property (of ' + this + ') to `' + value + '`.', false);
      }
    }

    SETTER_FUNCTION.isMandatorySetter = true;
    return SETTER_FUNCTION;
  }

  function DEFAULT_GETTER_FUNCTION(name) {
    return function GETTER_FUNCTION() {
      var meta$$1 = exports.peekMeta(this);
      if (meta$$1 !== undefined) {
        return meta$$1.peekValues(name);
      }
    };
  }

  function INHERITING_GETTER_FUNCTION(name) {
    function IGETTER_FUNCTION() {
      var meta$$1 = exports.peekMeta(this);
      var val = void 0;
      if (meta$$1 !== undefined) {
        val = meta$$1.readInheritedValue('values', name);
      }

      if (val === UNDEFINED) {
        var proto = Object.getPrototypeOf(this);
        return proto && proto[name];
      } else {
        return val;
      }
    }

    IGETTER_FUNCTION.isInheritingGetter = true;
    return IGETTER_FUNCTION;
  }

  /**
    NOTE: This is a low-level method used by other parts of the API. You almost
    never want to call this method directly. Instead you should use
    `mixin()` to define new properties.
  
    Defines a property on an object. This method works much like the ES5
    `Object.defineProperty()` method except that it can also accept computed
    properties and other special descriptors.
  
    Normally this method takes only three parameters. However if you pass an
    instance of `Descriptor` as the third param then you can pass an
    optional value as the fourth parameter. This is often more efficient than
    creating new descriptor hashes for each property.
  
    ## Examples
  
    ```javascript
    import { defineProperty, computed } from '@ember/object';
  
    // ES5 compatible mode
    defineProperty(contact, 'firstName', {
      writable: true,
      configurable: false,
      enumerable: true,
      value: 'Charles'
    });
  
    // define a simple property
    defineProperty(contact, 'lastName', undefined, 'Jolley');
  
    // define a computed property
    defineProperty(contact, 'fullName', computed('firstName', 'lastName', function() {
      return this.firstName+' '+this.lastName;
    }));
    ```
  
    @private
    @method defineProperty
    @for @ember/object
    @param {Object} obj the object to define this property on. This may be a prototype.
    @param {String} keyName the name of the property
    @param {Descriptor} [desc] an instance of `Descriptor` (typically a
      computed property) or an ES5 descriptor.
      You must provide this or `data` but not both.
    @param {*} [data] something other than a descriptor, that will
      become the explicit value of this property.
  */
  function defineProperty(obj, keyName, desc, data, meta$$1) {
    if (meta$$1 === undefined) {
      meta$$1 = meta(obj);
    }

    var watchEntry = meta$$1.peekWatching(keyName);
    var watching = watchEntry !== undefined && watchEntry > 0;
    var possibleDesc = obj[keyName];
    var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

    if (isDescriptor) {
      possibleDesc.teardown(obj, keyName, meta$$1);
    }

    var value = void 0;
    if (desc instanceof Descriptor) {
      value = desc;
      if (ember_features.MANDATORY_SETTER) {
        if (watching) {
          Object.defineProperty(obj, keyName, {
            configurable: true,
            enumerable: true,
            writable: true,
            value: value
          });
        } else {
          obj[keyName] = value;
        }
      } else {
        obj[keyName] = value;
      }

      didDefineComputedProperty(obj.constructor);

      if (typeof desc.setup === 'function') {
        desc.setup(obj, keyName);
      }
    } else if (desc === undefined || desc === null) {
      value = data;

      if (ember_features.MANDATORY_SETTER) {
        if (watching) {
          meta$$1.writeValues(keyName, data);

          var defaultDescriptor = {
            configurable: true,
            enumerable: true,
            set: MANDATORY_SETTER_FUNCTION(keyName),
            get: DEFAULT_GETTER_FUNCTION(keyName)
          };

          if (REDEFINE_SUPPORTED) {
            Object.defineProperty(obj, keyName, defaultDescriptor);
          } else {
            handleBrokenPhantomDefineProperty(obj, keyName, defaultDescriptor);
          }
        } else {
          obj[keyName] = data;
        }
      } else {
        obj[keyName] = data;
      }
    } else {
      value = desc;

      // fallback to ES5
      Object.defineProperty(obj, keyName, desc);
    }

    // if key is being watched, override chains that
    // were initialized with the prototype
    if (watching) {
      overrideChains(obj, keyName, meta$$1);
    }

    // The `value` passed to the `didDefineProperty` hook is
    // either the descriptor or data, whichever was passed.
    if (typeof obj.didDefineProperty === 'function') {
      obj.didDefineProperty(obj, keyName, value);
    }

    return this;
  }

  var hasCachedComputedProperties = false;
  function _hasCachedComputedProperties() {
    hasCachedComputedProperties = true;
  }

  function didDefineComputedProperty(constructor) {
    if (hasCachedComputedProperties === false) {
      return;
    }
    var cache = meta(constructor).readableCache();

    if (cache && cache._computedProperties !== undefined) {
      cache._computedProperties = undefined;
    }
  }

  function handleBrokenPhantomDefineProperty(obj, keyName, desc) {
    // https://github.com/ariya/phantomjs/issues/11856
    Object.defineProperty(obj, keyName, { configurable: true, writable: true, value: 'iCry' });
    Object.defineProperty(obj, keyName, desc);
  }

  var handleMandatorySetter = void 0;

  function watchKey(obj, keyName, meta$$1) {
    if (typeof obj !== 'object' || obj === null) {
      return;
    }

    var m = meta$$1 || meta(obj);
    var count = m.peekWatching(keyName) || 0;
    m.writeWatching(keyName, count + 1);

    if (count === 0) {
      // activate watching first time
      var possibleDesc = obj[keyName];
      var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;
      if (isDescriptor && possibleDesc.willWatch) {
        possibleDesc.willWatch(obj, keyName);
      }

      if ('function' === typeof obj.willWatchProperty) {
        obj.willWatchProperty(keyName);
      }

      if (ember_features.MANDATORY_SETTER) {
        // NOTE: this is dropped for prod + minified builds
        handleMandatorySetter(m, obj, keyName);
      }
    }
  }

  if (ember_features.MANDATORY_SETTER) {
    var _hasOwnProperty = function (obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    };

    var _propertyIsEnumerable = function (obj, key) {
      return Object.prototype.propertyIsEnumerable.call(obj, key);
    };

    // Future traveler, although this code looks scary. It merely exists in
    // development to aid in development asertions. Production builds of
    // ember strip this entire block out
    handleMandatorySetter = function handleMandatorySetter(m, obj, keyName) {
      var descriptor = emberUtils.lookupDescriptor(obj, keyName);
      var hasDescriptor = descriptor !== null;
      var configurable = hasDescriptor ? descriptor.configurable : true;
      var isWritable = hasDescriptor ? descriptor.writable : true;
      var hasValue = hasDescriptor ? 'value' in descriptor : true;
      var possibleDesc = hasDescriptor && descriptor.value;
      var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

      if (isDescriptor) {
        return;
      }

      // this x in Y deopts, so keeping it in this function is better;
      if (configurable && isWritable && hasValue && keyName in obj) {
        var desc = {
          configurable: true,
          set: MANDATORY_SETTER_FUNCTION(keyName),
          enumerable: _propertyIsEnumerable(obj, keyName),
          get: undefined
        };

        if (_hasOwnProperty(obj, keyName)) {
          m.writeValues(keyName, obj[keyName]);
          desc.get = DEFAULT_GETTER_FUNCTION(keyName);
        } else {
          desc.get = INHERITING_GETTER_FUNCTION(keyName);
        }

        Object.defineProperty(obj, keyName, desc);
      }
    };
  }

  function unwatchKey(obj, keyName, _meta) {
    if (typeof obj !== 'object' || obj === null) {
      return;
    }
    var meta$$1 = _meta || exports.peekMeta(obj);

    // do nothing of this object has already been destroyed
    if (meta$$1 === undefined || meta$$1.isSourceDestroyed()) {
      return;
    }

    var count = meta$$1.peekWatching(keyName);
    if (count === 1) {
      meta$$1.writeWatching(keyName, 0);

      var possibleDesc = obj[keyName];
      var isDescriptor = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor;

      if (isDescriptor && possibleDesc.didUnwatch) {
        possibleDesc.didUnwatch(obj, keyName);
      }

      if ('function' === typeof obj.didUnwatchProperty) {
        obj.didUnwatchProperty(keyName);
      }

      if (ember_features.MANDATORY_SETTER) {
        // It is true, the following code looks quite WAT. But have no fear, It
        // exists purely to improve development ergonomics and is removed from
        // ember.min.js and ember.prod.js builds.
        //
        // Some further context: Once a property is watched by ember, bypassing `set`
        // for mutation, will bypass observation. This code exists to assert when
        // that occurs, and attempt to provide more helpful feedback. The alternative
        // is tricky to debug partially observable properties.
        if (!isDescriptor && keyName in obj) {
          var maybeMandatoryDescriptor = emberUtils.lookupDescriptor(obj, keyName);

          if (maybeMandatoryDescriptor.set && maybeMandatoryDescriptor.set.isMandatorySetter) {
            if (maybeMandatoryDescriptor.get && maybeMandatoryDescriptor.get.isInheritingGetter) {
              var possibleValue = meta$$1.readInheritedValue('values', keyName);
              if (possibleValue === UNDEFINED) {
                delete obj[keyName];
                return;
              }
            }

            Object.defineProperty(obj, keyName, {
              configurable: true,
              enumerable: Object.prototype.propertyIsEnumerable.call(obj, keyName),
              writable: true,
              value: meta$$1.peekValues(keyName)
            });
            meta$$1.deleteFromValues(keyName);
          }
        }
      }
    } else if (count > 1) {
      meta$$1.writeWatching(keyName, count - 1);
    }
  }

  function makeChainNode(obj) {
    return new ChainNode(null, null, obj);
  }

  function watchPath(obj, keyPath, meta$$1) {
    if (typeof obj !== 'object' || obj === null) {
      return;
    }
    var m = meta$$1 || meta(obj);
    var counter = m.peekWatching(keyPath) || 0;

    m.writeWatching(keyPath, counter + 1);
    if (counter === 0) {
      // activate watching first time
      m.writableChains(makeChainNode).add(keyPath);
    }
  }

  function unwatchPath(obj, keyPath, meta$$1) {
    if (typeof obj !== 'object' || obj === null) {
      return;
    }
    var m = meta$$1 || exports.peekMeta(obj);
    if (m === undefined) {
      return;
    }
    var counter = m.peekWatching(keyPath) || 0;

    if (counter === 1) {
      m.writeWatching(keyPath, 0);
      m.readableChains().remove(keyPath);
    } else if (counter > 1) {
      m.writeWatching(keyPath, counter - 1);
    }
  }

  var FIRST_KEY = /^([^\.]+)/;

  function firstKey(path) {
    return path.match(FIRST_KEY)[0];
  }

  function isObject(obj) {
    return typeof obj === 'object' && obj !== null;
  }

  function isVolatile(obj) {
    return !(isObject(obj) && obj.isDescriptor && obj._volatile === false);
  }

  var ChainWatchers = function () {
    function ChainWatchers() {
      emberBabel.classCallCheck(this, ChainWatchers);

      // chain nodes that reference a key in this obj by key
      // we only create ChainWatchers when we are going to add them
      // so create this upfront
      this.chains = Object.create(null);
    }

    ChainWatchers.prototype.add = function add(key, node) {
      var nodes = this.chains[key];
      if (nodes === undefined) {
        this.chains[key] = [node];
      } else {
        nodes.push(node);
      }
    };

    ChainWatchers.prototype.remove = function remove(key, node) {
      var nodes = this.chains[key];
      if (nodes !== undefined) {
        for (var i = 0; i < nodes.length; i++) {
          if (nodes[i] === node) {
            nodes.splice(i, 1);
            break;
          }
        }
      }
    };

    ChainWatchers.prototype.has = function has(key, node) {
      var nodes = this.chains[key];
      if (nodes !== undefined) {
        for (var i = 0; i < nodes.length; i++) {
          if (nodes[i] === node) {
            return true;
          }
        }
      }
      return false;
    };

    ChainWatchers.prototype.revalidateAll = function revalidateAll() {
      for (var key in this.chains) {
        this.notify(key, true, undefined);
      }
    };

    ChainWatchers.prototype.revalidate = function revalidate(key) {
      this.notify(key, true, undefined);
    };

    // key: the string key that is part of a path changed
    // revalidate: boolean; the chains that are watching this value should revalidate
    // callback: function that will be called with the object and path that
    //           will be/are invalidated by this key change, depending on
    //           whether the revalidate flag is passed


    ChainWatchers.prototype.notify = function notify(key, revalidate, callback) {
      var nodes = this.chains[key];
      if (nodes === undefined || nodes.length === 0) {
        return;
      }

      var affected = void 0;

      if (callback) {
        affected = [];
      }

      for (var i = 0; i < nodes.length; i++) {
        nodes[i].notify(revalidate, affected);
      }

      if (callback === undefined) {
        return;
      }

      // we gather callbacks so we don't notify them during revalidation
      for (var _i = 0; _i < affected.length; _i += 2) {
        var obj = affected[_i];
        var path = affected[_i + 1];
        callback(obj, path);
      }
    };

    return ChainWatchers;
  }();

  function makeChainWatcher() {
    return new ChainWatchers();
  }

  function addChainWatcher(obj, keyName, node) {
    var m = meta(obj);
    m.writableChainWatchers(makeChainWatcher).add(keyName, node);
    watchKey(obj, keyName, m);
  }

  function removeChainWatcher(obj, keyName, node, _meta) {
    if (!isObject(obj)) {
      return;
    }

    var meta$$1 = _meta === undefined ? exports.peekMeta(obj) : _meta;

    if (meta$$1 === undefined || meta$$1.readableChainWatchers() === undefined) {
      return;
    }

    // make meta writable
    meta$$1 = meta(obj);

    meta$$1.readableChainWatchers().remove(keyName, node);

    unwatchKey(obj, keyName, meta$$1);
  }

  // A ChainNode watches a single key on an object. If you provide a starting
  // value for the key then the node won't actually watch it. For a root node
  // pass null for parent and key and object for value.

  var ChainNode = function () {
    function ChainNode(parent, key, value) {
      emberBabel.classCallCheck(this, ChainNode);

      this._parent = parent;
      this._key = key;

      // _watching is true when calling get(this._parent, this._key) will
      // return the value of this node.
      //
      // It is false for the root of a chain (because we have no parent)
      // and for global paths (because the parent node is the object with
      // the observer on it)
      var isWatching = this._watching = value === undefined;

      this._chains = undefined;
      this._object = undefined;
      this.count = 0;

      this._value = value;
      this._paths = undefined;
      if (isWatching) {
        var obj = parent.value();

        if (!isObject(obj)) {
          return;
        }

        this._object = obj;

        addChainWatcher(this._object, this._key, this);
      }
    }

    ChainNode.prototype.value = function value() {
      if (this._value === undefined && this._watching) {
        var obj = this._parent.value();
        this._value = lazyGet(obj, this._key);
      }
      return this._value;
    };

    ChainNode.prototype.destroy = function destroy() {
      if (this._watching) {
        removeChainWatcher(this._object, this._key, this);
        this._watching = false; // so future calls do nothing
      }
    };

    // copies a top level object only


    ChainNode.prototype.copy = function copy(obj) {
      var ret = new ChainNode(null, null, obj);
      var paths = this._paths;
      if (paths !== undefined) {
        var path = void 0;
        for (path in paths) {
          if (paths[path] > 0) {
            ret.add(path);
          }
        }
      }
      return ret;
    };

    // called on the root node of a chain to setup watchers on the specified
    // path.


    ChainNode.prototype.add = function add(path) {
      var paths = this._paths || (this._paths = {});
      paths[path] = (paths[path] || 0) + 1;

      var key = firstKey(path);
      var tail = path.slice(key.length + 1);

      this.chain(key, tail);
    };

    // called on the root node of a chain to teardown watcher on the specified
    // path


    ChainNode.prototype.remove = function remove(path) {
      var paths = this._paths;
      if (paths === undefined) {
        return;
      }
      if (paths[path] > 0) {
        paths[path]--;
      }

      var key = firstKey(path);
      var tail = path.slice(key.length + 1);

      this.unchain(key, tail);
    };

    ChainNode.prototype.chain = function chain(key, path) {
      var chains = this._chains;
      var node = void 0;
      if (chains === undefined) {
        chains = this._chains = Object.create(null);
      } else {
        node = chains[key];
      }

      if (node === undefined) {
        node = chains[key] = new ChainNode(this, key, undefined);
      }

      node.count++; // count chains...

      // chain rest of path if there is one
      if (path) {
        key = firstKey(path);
        path = path.slice(key.length + 1);
        node.chain(key, path);
      }
    };

    ChainNode.prototype.unchain = function unchain(key, path) {
      var chains = this._chains;
      var node = chains[key];

      // unchain rest of path first...
      if (path && path.length > 1) {
        var nextKey = firstKey(path);
        var nextPath = path.slice(nextKey.length + 1);
        node.unchain(nextKey, nextPath);
      }

      // delete node if needed.
      node.count--;
      if (node.count <= 0) {
        chains[node._key] = undefined;
        node.destroy();
      }
    };

    ChainNode.prototype.notify = function notify(revalidate, affected) {
      if (revalidate && this._watching) {
        var parentValue = this._parent.value();

        if (parentValue !== this._object) {
          removeChainWatcher(this._object, this._key, this);

          if (isObject(parentValue)) {
            this._object = parentValue;
            addChainWatcher(parentValue, this._key, this);
          } else {
            this._object = undefined;
          }
        }
        this._value = undefined;
      }

      // then notify chains...
      var chains = this._chains;
      if (chains !== undefined) {
        var node = void 0;
        for (var key in chains) {
          node = chains[key];
          if (node !== undefined) {
            node.notify(revalidate, affected);
          }
        }
      }

      if (affected && this._parent) {
        this._parent.populateAffected(this._key, 1, affected);
      }
    };

    ChainNode.prototype.populateAffected = function populateAffected(path, depth, affected) {
      if (this._key) {
        path = this._key + '.' + path;
      }

      if (this._parent) {
        this._parent.populateAffected(path, depth + 1, affected);
      } else if (depth > 1) {
        affected.push(this.value(), path);
      }
    };

    return ChainNode;
  }();

  function lazyGet(obj, key) {
    if (!isObject(obj)) {
      return;
    }

    var meta$$1 = exports.peekMeta(obj);

    // check if object meant only to be a prototype
    if (meta$$1 !== undefined && meta$$1.proto === obj) {
      return;
    }

    // Use `get` if the return value is an EachProxy or an uncacheable value.
    if (isVolatile(obj[key])) {
      return get(obj, key);
      // Otherwise attempt to get the cached value of the computed property
    } else {
      var cache = meta$$1.readableCache();
      if (cache !== undefined) {
        return cacheFor.get(cache, key);
      }
    }
  }

  function finishChains(meta$$1) {
    // finish any current chains node watchers that reference obj
    var chainWatchers = meta$$1.readableChainWatchers();
    if (chainWatchers !== undefined) {
      chainWatchers.revalidateAll();
    }
    // ensure that if we have inherited any chains they have been
    // copied onto our own meta.
    if (meta$$1.readableChains() !== undefined) {
      meta$$1.writableChains(makeChainNode);
    }
  }

  var counters = void 0;
  {
    counters = {
      peekCalls: 0,
      peekParentCalls: 0,
      peekPrototypeWalks: 0,
      setCalls: 0,
      deleteCalls: 0,
      metaCalls: 0,
      metaInstantiated: 0
    };
  }

  /**
  @module ember
  */

  var UNDEFINED = emberUtils.symbol('undefined');

  // FLAGS
  var SOURCE_DESTROYING = 1 << 1;
  var SOURCE_DESTROYED = 1 << 2;
  var META_DESTROYED = 1 << 3;
  var IS_PROXY = 1 << 4;

  var META_FIELD = '__ember_meta__';
  var NODE_STACK = [];

  var Meta = function () {
    function Meta(obj, parentMeta) {
      emberBabel.classCallCheck(this, Meta);

      {
        counters.metaInstantiated++;
      }

      this._cache = undefined;
      this._weak = undefined;
      this._watching = undefined;
      this._mixins = undefined;
      this._bindings = undefined;
      this._values = undefined;
      this._deps = undefined;
      this._chainWatchers = undefined;
      this._chains = undefined;
      this._tag = undefined;
      this._tags = undefined;
      this._factory = undefined;

      // initial value for all flags right now is false
      // see FLAGS const for detailed list of flags used
      this._flags = 0;

      // used only internally
      this.source = obj;

      // when meta(obj).proto === obj, the object is intended to be only a
      // prototype and doesn't need to actually be observable itself
      this.proto = undefined;

      // The next meta in our inheritance chain. We (will) track this
      // explicitly instead of using prototypical inheritance because we
      // have detailed knowledge of how each property should really be
      // inherited, and we can optimize it much better than JS runtimes.
      this.parent = parentMeta;

      if (ember_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || ember_features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
        this._lastRendered = undefined;
        {
          this._lastRenderedReferenceMap = undefined;
          this._lastRenderedTemplateMap = undefined;
        }
      }

      this._listeners = undefined;
      this._listenersFinalized = false;
      this._suspendedListeners = undefined;
    }

    Meta.prototype.isInitialized = function isInitialized(obj) {
      return this.proto !== obj;
    };

    Meta.prototype.destroy = function destroy() {
      if (this.isMetaDestroyed()) {
        return;
      }

      // remove chainWatchers to remove circular references that would prevent GC
      var nodes = void 0,
          key = void 0,
          nodeObject = void 0;
      var node = this.readableChains();
      if (node !== undefined) {
        NODE_STACK.push(node);
        // process tree
        while (NODE_STACK.length > 0) {
          node = NODE_STACK.pop();
          // push children
          nodes = node._chains;
          if (nodes !== undefined) {
            for (key in nodes) {
              if (nodes[key] !== undefined) {
                NODE_STACK.push(nodes[key]);
              }
            }
          }

          // remove chainWatcher in node object
          if (node._watching) {
            nodeObject = node._object;
            if (nodeObject !== undefined) {
              var foreignMeta = exports.peekMeta(nodeObject);
              // avoid cleaning up chain watchers when both current and
              // foreign objects are being destroyed
              // if both are being destroyed manual cleanup is not needed
              // as they will be GC'ed and no non-destroyed references will
              // be remaining
              if (foreignMeta && !foreignMeta.isSourceDestroying()) {
                removeChainWatcher(nodeObject, node._key, node, foreignMeta);
              }
            }
          }
        }
      }

      this.setMetaDestroyed();
    };

    Meta.prototype.isSourceDestroying = function isSourceDestroying() {
      return (this._flags & SOURCE_DESTROYING) !== 0;
    };

    Meta.prototype.setSourceDestroying = function setSourceDestroying() {
      this._flags |= SOURCE_DESTROYING;
    };

    Meta.prototype.isSourceDestroyed = function isSourceDestroyed() {
      return (this._flags & SOURCE_DESTROYED) !== 0;
    };

    Meta.prototype.setSourceDestroyed = function setSourceDestroyed() {
      this._flags |= SOURCE_DESTROYED;
    };

    Meta.prototype.isMetaDestroyed = function isMetaDestroyed() {
      return (this._flags & META_DESTROYED) !== 0;
    };

    Meta.prototype.setMetaDestroyed = function setMetaDestroyed() {
      this._flags |= META_DESTROYED;
    };

    Meta.prototype.isProxy = function isProxy() {
      return (this._flags & IS_PROXY) !== 0;
    };

    Meta.prototype.setProxy = function setProxy() {
      this._flags |= IS_PROXY;
    };

    Meta.prototype._getOrCreateOwnMap = function _getOrCreateOwnMap(key) {
      return this[key] || (this[key] = Object.create(null));
    };

    Meta.prototype._getInherited = function _getInherited(key) {
      var pointer = this;
      while (pointer !== undefined) {
        var map = pointer[key];
        if (map !== undefined) {
          return map;
        }
        pointer = pointer.parent;
      }
    };

    Meta.prototype._findInherited = function _findInherited(key, subkey) {
      var pointer = this;
      while (pointer !== undefined) {
        var map = pointer[key];
        if (map !== undefined) {
          var value = map[subkey];
          if (value !== undefined) {
            return value;
          }
        }
        pointer = pointer.parent;
      }
    };

    // Implements a member that provides a lazily created map of maps,
    // with inheritance at both levels.


    Meta.prototype.writeDeps = function writeDeps(subkey, itemkey, value) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot modify dependent keys for `' + itemkey + '` on `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var outerMap = this._getOrCreateOwnMap('_deps');
      var innerMap = outerMap[subkey];
      if (innerMap === undefined) {
        innerMap = outerMap[subkey] = Object.create(null);
      }
      innerMap[itemkey] = value;
    };

    Meta.prototype.peekDeps = function peekDeps(subkey, itemkey) {
      var pointer = this;
      while (pointer !== undefined) {
        var map = pointer._deps;
        if (map !== undefined) {
          var value = map[subkey];
          if (value !== undefined) {
            var itemvalue = value[itemkey];
            if (itemvalue !== undefined) {
              return itemvalue;
            }
          }
        }
        pointer = pointer.parent;
      }
    };

    Meta.prototype.hasDeps = function hasDeps(subkey) {
      var pointer = this;
      while (pointer !== undefined) {
        var deps = pointer._deps;
        if (deps !== undefined && deps[subkey] !== undefined) {
          return true;
        }
        pointer = pointer.parent;
      }
      return false;
    };

    Meta.prototype.forEachInDeps = function forEachInDeps(subkey, fn) {
      return this._forEachIn('_deps', subkey, fn);
    };

    Meta.prototype._forEachIn = function _forEachIn(key, subkey, fn) {
      var pointer = this;
      var seen = void 0;
      var calls = void 0;
      while (pointer !== undefined) {
        var map = pointer[key];
        if (map !== undefined) {
          var innerMap = map[subkey];
          if (innerMap !== undefined) {
            for (var innerKey in innerMap) {
              seen = seen || Object.create(null);
              if (seen[innerKey] === undefined) {
                seen[innerKey] = true;
                calls = calls || [];
                calls.push(innerKey, innerMap[innerKey]);
              }
            }
          }
        }
        pointer = pointer.parent;
      }

      if (calls !== undefined) {
        for (var i = 0; i < calls.length; i += 2) {
          fn(calls[i], calls[i + 1]);
        }
      }
    };

    Meta.prototype.writableCache = function writableCache() {
      return this._getOrCreateOwnMap('_cache');
    };

    Meta.prototype.readableCache = function readableCache() {
      return this._cache;
    };

    Meta.prototype.writableWeak = function writableWeak() {
      return this._getOrCreateOwnMap('_weak');
    };

    Meta.prototype.readableWeak = function readableWeak() {
      return this._weak;
    };

    Meta.prototype.writableTags = function writableTags() {
      return this._getOrCreateOwnMap('_tags');
    };

    Meta.prototype.readableTags = function readableTags() {
      return this._tags;
    };

    Meta.prototype.writableTag = function writableTag(create) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot create a new tag for `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var ret = this._tag;
      if (ret === undefined) {
        ret = this._tag = create(this.source);
      }
      return ret;
    };

    Meta.prototype.readableTag = function readableTag() {
      return this._tag;
    };

    Meta.prototype.writableChainWatchers = function writableChainWatchers(create) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot create a new chain watcher for `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var ret = this._chainWatchers;
      if (ret === undefined) {
        ret = this._chainWatchers = create(this.source);
      }
      return ret;
    };

    Meta.prototype.readableChainWatchers = function readableChainWatchers() {
      return this._chainWatchers;
    };

    Meta.prototype.writableChains = function writableChains(create) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot create a new chains for `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var ret = this._chains;
      if (ret === undefined) {
        if (this.parent === undefined) {
          ret = create(this.source);
        } else {
          ret = this.parent.writableChains(create).copy(this.source);
        }
        this._chains = ret;
      }
      return ret;
    };

    Meta.prototype.readableChains = function readableChains() {
      return this._getInherited('_chains');
    };

    Meta.prototype.writeWatching = function writeWatching(subkey, value) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot update watchers for `' + subkey + '` on `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var map = this._getOrCreateOwnMap('_watching');
      map[subkey] = value;
    };

    Meta.prototype.peekWatching = function peekWatching(subkey) {
      return this._findInherited('_watching', subkey);
    };

    Meta.prototype.writeMixins = function writeMixins(subkey, value) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot add mixins for `' + subkey + '` on `' + emberUtils.toString(this.source) + '` call writeMixins after it has been destroyed.', !this.isMetaDestroyed());

      var map = this._getOrCreateOwnMap('_mixins');
      map[subkey] = value;
    };

    Meta.prototype.peekMixins = function peekMixins(subkey) {
      return this._findInherited('_mixins', subkey);
    };

    Meta.prototype.forEachMixins = function forEachMixins(fn) {
      var pointer = this;
      var seen = void 0;
      while (pointer !== undefined) {
        var map = pointer._mixins;
        if (map !== undefined) {
          for (var key in map) {
            seen = seen || Object.create(null);
            if (seen[key] === undefined) {
              seen[key] = true;
              fn(key, map[key]);
            }
          }
        }
        pointer = pointer.parent;
      }
    };

    Meta.prototype.writeBindings = function writeBindings(subkey, value) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot add a binding for `' + subkey + '` on `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var map = this._getOrCreateOwnMap('_bindings');
      map[subkey] = value;
    };

    Meta.prototype.peekBindings = function peekBindings(subkey) {
      return this._findInherited('_bindings', subkey);
    };

    Meta.prototype.forEachBindings = function forEachBindings(fn) {
      var pointer = this;
      var seen = void 0;
      while (pointer !== undefined) {
        var map = pointer._bindings;
        if (map !== undefined) {
          for (var key in map) {
            seen = seen || Object.create(null);
            if (seen[key] === undefined) {
              seen[key] = true;
              fn(key, map[key]);
            }
          }
        }
        pointer = pointer.parent;
      }
    };

    Meta.prototype.clearBindings = function clearBindings() {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot clear bindings on `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      this._bindings = undefined;
    };

    Meta.prototype.writeValues = function writeValues(subkey, value) {
      true && !!this.isMetaDestroyed() && emberDebug.assert('Cannot set the value of `' + subkey + '` on `' + emberUtils.toString(this.source) + '` after it has been destroyed.', !this.isMetaDestroyed());

      var map = this._getOrCreateOwnMap('_values');
      map[subkey] = value;
    };

    Meta.prototype.peekValues = function peekValues(subkey) {
      return this._findInherited('_values', subkey);
    };

    Meta.prototype.deleteFromValues = function deleteFromValues(subkey) {
      delete this._getOrCreateOwnMap('_values')[subkey];
    };

    emberBabel.createClass(Meta, [{
      key: 'factory',
      set: function (factory) {
        this._factory = factory;
      },
      get: function () {
        return this._factory;
      }
    }]);

    return Meta;
  }();

  if (ember_features.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER || ember_features.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER) {
    Meta.prototype.writableLastRendered = function () {
      return this._getOrCreateOwnMap('_lastRendered');
    };
    Meta.prototype.readableLastRendered = function () {
      return this._lastRendered;
    };
    {
      Meta.prototype.writableLastRenderedReferenceMap = function () {
        return this._getOrCreateOwnMap('_lastRenderedReferenceMap');
      };
      Meta.prototype.readableLastRenderedReferenceMap = function () {
        return this._lastRenderedReferenceMap;
      };
      Meta.prototype.writableLastRenderedTemplateMap = function () {
        return this._getOrCreateOwnMap('_lastRenderedTemplateMap');
      };
      Meta.prototype.readableLastRenderedTemplateMap = function () {
        return this._lastRenderedTemplateMap;
      };
    }
  }

  for (var name in protoMethods) {
    Meta.prototype[name] = protoMethods[name];
  }

  var META_DESC = {
    writable: true,
    configurable: true,
    enumerable: false,
    value: null
  };

  var EMBER_META_PROPERTY = {
    name: META_FIELD,
    descriptor: META_DESC
  };

  if (ember_features.MANDATORY_SETTER) {
    Meta.prototype.readInheritedValue = function (key, subkey) {
      var internalKey = '_' + key;

      var pointer = this;

      while (pointer !== undefined) {
        var map = pointer[internalKey];
        if (map !== undefined) {
          var value = map[subkey];
          if (value !== undefined || subkey in map) {
            return value;
          }
        }
        pointer = pointer.parent;
      }

      return UNDEFINED;
    };

    Meta.prototype.writeValue = function (obj, key, value) {
      var descriptor = emberUtils.lookupDescriptor(obj, key);
      var isMandatorySetter = descriptor !== null && descriptor.set && descriptor.set.isMandatorySetter;

      if (isMandatorySetter) {
        this.writeValues(key, value);
      } else {
        obj[key] = value;
      }
    };
  }

  var setMeta = void 0;
  exports.peekMeta = void 0;

  // choose the one appropriate for given platform
  if (emberUtils.HAS_NATIVE_WEAKMAP) {
    var getPrototypeOf = Object.getPrototypeOf;
    var metaStore = new WeakMap();

    setMeta = function WeakMap_setMeta(obj, meta) {
      {
        counters.setCalls++;
      }
      metaStore.set(obj, meta);
    };

    exports.peekMeta = function WeakMap_peekParentMeta(obj) {
      var pointer = obj;
      var meta = void 0;
      while (pointer !== undefined && pointer !== null) {
        meta = metaStore.get(pointer);
        // jshint loopfunc:true
        {
          counters.peekCalls++;
        }
        if (meta !== undefined) {
          return meta;
        }

        pointer = getPrototypeOf(pointer);
        {
          counters.peekPrototypeWalks++;
        }
      }
    };
  } else {
    setMeta = function Fallback_setMeta(obj, meta) {
      if (obj.__defineNonEnumerable) {
        obj.__defineNonEnumerable(EMBER_META_PROPERTY);
      } else {
        Object.defineProperty(obj, META_FIELD, META_DESC);
      }

      obj[META_FIELD] = meta;
    };

    exports.peekMeta = function Fallback_peekMeta(obj) {
      return obj[META_FIELD];
    };
  }

  function deleteMeta(obj) {
    {
      counters.deleteCalls++;
    }

    var meta = exports.peekMeta(obj);
    if (meta !== undefined) {
      meta.destroy();
    }
  }

  /**
    Retrieves the meta hash for an object. If `writable` is true ensures the
    hash is writable for this object as well.
  
    The meta object contains information about computed property descriptors as
    well as any watched properties and other information. You generally will
    not access this information directly but instead work with higher level
    methods that manipulate this hash indirectly.
  
    @method meta
    @for Ember
    @private
  
    @param {Object} obj The object to retrieve meta for
    @param {Boolean} [writable=true] Pass `false` if you do not intend to modify
      the meta hash, allowing the method to avoid making an unnecessary copy.
    @return {Object} the meta hash for an object
  */
  function meta(obj) {
    {
      counters.metaCalls++;
    }

    var maybeMeta = exports.peekMeta(obj);
    var parent = void 0;

    // remove this code, in-favor of explicit parent
    if (maybeMeta !== undefined) {
      if (maybeMeta.source === obj) {
        return maybeMeta;
      }
      parent = maybeMeta;
    }

    var newMeta = new Meta(obj, parent);
    setMeta(obj, newMeta);
    return newMeta;
  }

  var Cache = function () {
    function Cache(limit, func, key, store) {
      emberBabel.classCallCheck(this, Cache);

      this.size = 0;
      this.misses = 0;
      this.hits = 0;
      this.limit = limit;
      this.func = func;
      this.key = key;
      this.store = store || new DefaultStore();
    }

    Cache.prototype.get = function get(obj) {
      var key = this.key === undefined ? obj : this.key(obj);
      var value = this.store.get(key);
      if (value === undefined) {
        this.misses++;
        value = this._set(key, this.func(obj));
      } else if (value === UNDEFINED) {
        this.hits++;
        value = undefined;
      } else {
        this.hits++;
        // nothing to translate
      }

      return value;
    };

    Cache.prototype.set = function set(obj, value) {
      var key = this.key === undefined ? obj : this.key(obj);
      return this._set(key, value);
    };

    Cache.prototype._set = function _set(key, value) {
      if (this.limit > this.size) {
        this.size++;
        if (value === undefined) {
          this.store.set(key, UNDEFINED);
        } else {
          this.store.set(key, value);
        }
      }

      return value;
    };

    Cache.prototype.purge = function purge() {
      this.store.clear();
      this.size = 0;
      this.hits = 0;
      this.misses = 0;
    };

    return Cache;
  }();

  var DefaultStore = function () {
    function DefaultStore() {
      emberBabel.classCallCheck(this, DefaultStore);

      this.data = Object.create(null);
    }

    DefaultStore.prototype.get = function get(key) {
      return this.data[key];
    };

    DefaultStore.prototype.set = function set(key, value) {
      this.data[key] = value;
    };

    DefaultStore.prototype.clear = function clear() {
      this.data = Object.create(null);
    };

    return DefaultStore;
  }();

  var IS_GLOBAL_PATH = /^[A-Z$].*[\.]/;

  var isGlobalPathCache = new Cache(1000, function (key) {
    return IS_GLOBAL_PATH.test(key);
  });
  var firstDotIndexCache = new Cache(1000, function (key) {
    return key.indexOf('.');
  });

  var firstKeyCache = new Cache(1000, function (path) {
    var index = firstDotIndexCache.get(path);
    return index === -1 ? path : path.slice(0, index);
  });

  var tailPathCache = new Cache(1000, function (path) {
    var index = firstDotIndexCache.get(path);
    return index === -1 ? undefined : path.slice(index + 1);
  });

  function isGlobalPath(path) {
    return isGlobalPathCache.get(path);
  }

  function isPath(path) {
    return firstDotIndexCache.get(path) !== -1;
  }

  function getFirstKey(path) {
    return firstKeyCache.get(path);
  }

  function getTailPath(path) {
    return tailPathCache.get(path);
  }

  /**
  @module @ember/object
  */

  var ALLOWABLE_TYPES = {
    object: true,
    function: true,
    string: true
  };

  // ..........................................................
  // GET AND SET
  //
  // If we are on a platform that supports accessors we can use those.
  // Otherwise simulate accessors by looking up the property directly on the
  // object.

  /**
    Gets the value of a property on an object. If the property is computed,
    the function will be invoked. If the property is not defined but the
    object implements the `unknownProperty` method then that will be invoked.
  
    ```javascript
    Ember.get(obj, "name");
    ```
  
    If you plan to run on IE8 and older browsers then you should use this
    method anytime you want to retrieve a property on an object that you don't
    know for sure is private. (Properties beginning with an underscore '_'
    are considered private.)
  
    On all newer browsers, you only need to use this method to retrieve
    properties if the property might not be defined on the object and you want
    to respect the `unknownProperty` handler. Otherwise you can ignore this
    method.
  
    Note that if the object itself is `undefined`, this method will throw
    an error.
  
    @method get
    @for @ember/object
    @static
    @param {Object} obj The object to retrieve from.
    @param {String} keyName The property key to retrieve
    @return {Object} the property value or `null`.
    @public
  */
  function get(obj, keyName) {
    true && !(arguments.length === 2) && emberDebug.assert('Get must be called with two arguments; an object and a property key', arguments.length === 2);
    true && !(obj !== undefined && obj !== null) && emberDebug.assert('Cannot call get with \'' + keyName + '\' on an undefined object.', obj !== undefined && obj !== null);
    true && !(typeof keyName === 'string') && emberDebug.assert('The key provided to get must be a string, you passed ' + keyName, typeof keyName === 'string');
    true && !(keyName.lastIndexOf('this.', 0) !== 0) && emberDebug.assert('\'this\' in paths is not supported', keyName.lastIndexOf('this.', 0) !== 0);
    true && !(keyName !== '') && emberDebug.assert('Cannot call `Ember.get` with an empty string', keyName !== '');

    var value = obj[keyName];
    var isDescriptor = value !== null && typeof value === 'object' && value.isDescriptor;

    if (isDescriptor) {
      return value.get(obj, keyName);
    } else if (isPath(keyName)) {
      return _getPath(obj, keyName);
    } else if (value === undefined && 'object' === typeof obj && !(keyName in obj) && typeof obj.unknownProperty === 'function') {
      return obj.unknownProperty(keyName);
    } else {
      return value;
    }
  }

  function _getPath(root, path) {
    var obj = root;
    var parts = path.split('.');

    for (var i = 0; i < parts.length; i++) {
      if (!isGettable(obj)) {
        return undefined;
      }

      obj = get(obj, parts[i]);

      if (obj && obj.isDestroyed) {
        return undefined;
      }
    }

    return obj;
  }

  function isGettable(obj) {
    return obj !== undefined && obj !== null && ALLOWABLE_TYPES[typeof obj];
  }

  /**
    Retrieves the value of a property from an Object, or a default value in the
    case that the property returns `undefined`.
  
    ```javascript
    Ember.getWithDefault(person, 'lastName', 'Doe');
    ```
  
    @method getWithDefault
    @for @ember/object
    @static
    @param {Object} obj The object to retrieve from.
    @param {String} keyName The name of the property to retrieve
    @param {Object} defaultValue The value to return if the property value is undefined
    @return {Object} The property value or the defaultValue.
    @public
  */
  function getWithDefault(root, key, defaultValue) {
    var value = get(root, key);

    if (value === undefined) {
      return defaultValue;
    }
    return value;
  }

  /**
   @module @ember/object
  */
  /**
    Sets the value of a property on an object, respecting computed properties
    and notifying observers and other listeners of the change. If the
    property is not defined but the object implements the `setUnknownProperty`
    method then that will be invoked as well.
  
    ```javascript
    Ember.set(obj, "name", value);
    ```
  
    @method set
    @static
    @for @ember/object
    @param {Object} obj The object to modify.
    @param {String} keyName The property key to set
    @param {Object} value The value to set
    @return {Object} the passed value.
    @public
  */
  function set(obj, keyName, value, tolerant) {
    true && !(arguments.length === 3 || arguments.length === 4) && emberDebug.assert('Set must be called with three or four arguments; an object, a property key, a value and tolerant true/false', arguments.length === 3 || arguments.length === 4);
    true && !(obj && typeof obj === 'object' || typeof obj === 'function') && emberDebug.assert('Cannot call set with \'' + keyName + '\' on an undefined object.', obj && typeof obj === 'object' || typeof obj === 'function');
    true && !(typeof keyName === 'string') && emberDebug.assert('The key provided to set must be a string, you passed ' + keyName, typeof keyName === 'string');
    true && !(keyName.lastIndexOf('this.', 0) !== 0) && emberDebug.assert('\'this\' in paths is not supported', keyName.lastIndexOf('this.', 0) !== 0);
    true && !!obj.isDestroyed && emberDebug.assert('calling set on destroyed object: ' + emberUtils.toString(obj) + '.' + keyName + ' = ' + emberUtils.toString(value), !obj.isDestroyed);

    if (isPath(keyName)) {
      return setPath(obj, keyName, value, tolerant);
    }

    var currentValue = obj[keyName];
    var isDescriptor = currentValue !== null && typeof currentValue === 'object' && currentValue.isDescriptor;

    if (isDescriptor) {
      /* computed property */
      currentValue.set(obj, keyName, value);
    } else if (currentValue === undefined && 'object' === typeof obj && !(keyName in obj) && typeof obj.setUnknownProperty === 'function') {
      /* unknown property */
      obj.setUnknownProperty(keyName, value);
    } else if (currentValue === value) {/* no change */
    } else {
      var meta$$1 = exports.peekMeta(obj);
      propertyWillChange(obj, keyName, meta$$1);

      if (ember_features.MANDATORY_SETTER) {
        setWithMandatorySetter(meta$$1, obj, keyName, value);
      } else {
        obj[keyName] = value;
      }

      propertyDidChange(obj, keyName, meta$$1);
    }

    return value;
  }

  if (ember_features.MANDATORY_SETTER) {
    var setWithMandatorySetter = function (meta$$1, obj, keyName, value) {
      if (meta$$1 && meta$$1.peekWatching(keyName) > 0) {
        makeEnumerable(obj, keyName);
        meta$$1.writeValue(obj, keyName, value);
      } else {
        obj[keyName] = value;
      }
    };

    var makeEnumerable = function (obj, key) {
      var desc = Object.getOwnPropertyDescriptor(obj, key);

      if (desc && desc.set && desc.set.isMandatorySetter) {
        desc.enumerable = true;
        Object.defineProperty(obj, key, desc);
      }
    };
  }

  function setPath(root, path, value, tolerant) {
    var parts = path.split('.');
    var keyName = parts.pop();

    true && !(keyName.trim().length > 0) && emberDebug.assert('Property set failed: You passed an empty path', keyName.trim().length > 0);

    var newPath = parts.join('.');

    var newRoot = _getPath(root, newPath);

    if (newRoot) {
      return set(newRoot, keyName, value);
    } else if (!tolerant) {
      throw new emberDebug.Error('Property set failed: object in path "' + newPath + '" could not be found or was destroyed.');
    }
  }

  /**
    Error-tolerant form of `Ember.set`. Will not blow up if any part of the
    chain is `undefined`, `null`, or destroyed.
  
    This is primarily used when syncing bindings, which may try to update after
    an object has been destroyed.
  
    @method trySet
    @static
    @for @ember/object
    @param {Object} root The object to modify.
    @param {String} path The property path to set
    @param {Object} value The value to set
    @public
  */
  function trySet(root, path, value) {
    return set(root, path, value, true);
  }

  /**
  @module @ember/object
  */

  var END_WITH_EACH_REGEX = /\.@each$/;

  /**
    Expands `pattern`, invoking `callback` for each expansion.
  
    The only pattern supported is brace-expansion, anything else will be passed
    once to `callback` directly.
  
    Example
  
    ```js
    import { expandProperties } from '@ember/object/computed';
  
    function echo(arg){ console.log(arg); }
  
    expandProperties('foo.bar', echo);              //=> 'foo.bar'
    expandProperties('{foo,bar}', echo);            //=> 'foo', 'bar'
    expandProperties('foo.{bar,baz}', echo);        //=> 'foo.bar', 'foo.baz'
    expandProperties('{foo,bar}.baz', echo);        //=> 'foo.baz', 'bar.baz'
    expandProperties('foo.{bar,baz}.[]', echo)      //=> 'foo.bar.[]', 'foo.baz.[]'
    expandProperties('{foo,bar}.{spam,eggs}', echo) //=> 'foo.spam', 'foo.eggs', 'bar.spam', 'bar.eggs'
    expandProperties('{foo}.bar.{baz}')             //=> 'foo.bar.baz'
    ```
  
    @method expandProperties
    @static
    @for @ember/object
    @public
    @param {String} pattern The property pattern to expand.
    @param {Function} callback The callback to invoke.  It is invoked once per
    expansion, and is passed the expansion.
  */
  function expandProperties(pattern, callback) {
    true && !(typeof pattern === 'string') && emberDebug.assert('A computed property key must be a string, you passed ' + typeof pattern + ' ' + pattern, typeof pattern === 'string');
    true && !(pattern.indexOf(' ') === -1) && emberDebug.assert('Brace expanded properties cannot contain spaces, e.g. "user.{firstName, lastName}" should be "user.{firstName,lastName}"', pattern.indexOf(' ') === -1);
    // regex to look for double open, double close, or unclosed braces

    true && !(pattern.match(/\{[^}{]*\{|\}[^}{]*\}|\{[^}]*$/g) === null) && emberDebug.assert('Brace expanded properties have to be balanced and cannot be nested, pattern: ' + pattern, pattern.match(/\{[^}{]*\{|\}[^}{]*\}|\{[^}]*$/g) === null);

    var start = pattern.indexOf('{');
    if (start < 0) {
      callback(pattern.replace(END_WITH_EACH_REGEX, '.[]'));
    } else {
      dive('', pattern, start, callback);
    }
  }

  function dive(prefix, pattern, start, callback) {
    var end = pattern.indexOf('}'),
        i = 0,
        newStart = void 0,
        arrayLength = void 0;
    var tempArr = pattern.substring(start + 1, end).split(',');
    var after = pattern.substring(end + 1);
    prefix = prefix + pattern.substring(0, start);

    arrayLength = tempArr.length;
    while (i < arrayLength) {
      newStart = after.indexOf('{');
      if (newStart < 0) {
        callback((prefix + tempArr[i++] + after).replace(END_WITH_EACH_REGEX, '.[]'));
      } else {
        dive(prefix + tempArr[i++], after, newStart, callback);
      }
    }
  }

  /**
  @module ember
  */
  /**
    Starts watching a property on an object. Whenever the property changes,
    invokes `Ember.propertyWillChange` and `Ember.propertyDidChange`. This is the
    primitive used by observers and dependent keys; usually you will never call
    this method directly but instead use higher level methods like
    `Ember.addObserver()`
  
    @private
    @method watch
    @for Ember
    @param obj
    @param {String} _keyPath
  */
  function watch(obj, _keyPath, m) {
    if (isPath(_keyPath)) {
      watchPath(obj, _keyPath, m);
    } else {
      watchKey(obj, _keyPath, m);
    }
  }

  function isWatching(obj, key) {
    return watcherCount(obj, key) > 0;
  }

  function watcherCount(obj, key) {
    var meta$$1 = exports.peekMeta(obj);
    return meta$$1 && meta$$1.peekWatching(key) || 0;
  }

  function unwatch(obj, _keyPath, m) {
    if (isPath(_keyPath)) {
      unwatchPath(obj, _keyPath, m);
    } else {
      unwatchKey(obj, _keyPath, m);
    }
  }

  // ..........................................................
  // DEPENDENT KEYS
  //

  function addDependentKeys(desc, obj, keyName, meta) {
    // the descriptor has a list of dependent keys, so
    // add all of its dependent keys.
    var depKeys = desc._dependentKeys;
    if (depKeys === null || depKeys === undefined) {
      return;
    }

    for (var idx = 0; idx < depKeys.length; idx++) {
      var depKey = depKeys[idx];
      // Increment the number of times depKey depends on keyName.
      meta.writeDeps(depKey, keyName, (meta.peekDeps(depKey, keyName) || 0) + 1);
      // Watch the depKey
      watch(obj, depKey, meta);
    }
  }

  function removeDependentKeys(desc, obj, keyName, meta) {
    // the descriptor has a list of dependent keys, so
    // remove all of its dependent keys.
    var depKeys = desc._dependentKeys;
    if (depKeys === null || depKeys === undefined) {
      return;
    }

    for (var idx = 0; idx < depKeys.length; idx++) {
      var depKey = depKeys[idx];
      // Decrement the number of times depKey depends on keyName.
      meta.writeDeps(depKey, keyName, (meta.peekDeps(depKey, keyName) || 0) - 1);
      // Unwatch the depKey
      unwatch(obj, depKey, meta);
    }
  }

  /**
  @module @ember/object
  */

  var DEEP_EACH_REGEX = /\.@each\.[^.]+\./;

  /**
    A computed property transforms an object literal with object's accessor function(s) into a property.
  
    By default the function backing the computed property will only be called
    once and the result will be cached. You can specify various properties
    that your computed property depends on. This will force the cached
    result to be recomputed if the dependencies are modified.
  
    In the following example we declare a computed property - `fullName` - by calling
    `computed` with property dependencies (`firstName` and `lastName`) as leading arguments and getter accessor function. The `fullName` getter function
    will be called once (regardless of how many times it is accessed) as long
    as its dependencies have not changed. Once `firstName` or `lastName` are updated
    any future calls (or anything bound) to `fullName` will incorporate the new
    values.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      // these will be supplied by `create`
      firstName: null,
      lastName: null,
  
      fullName: computed('firstName', 'lastName', function() {
        let firstName = this.get('firstName'),
            lastName  = this.get('lastName');
  
        return `${firstName} ${lastName}`;
      })
    });
  
    let tom = Person.create({
      firstName: 'Tom',
      lastName: 'Dale'
    });
  
    tom.get('fullName') // 'Tom Dale'
    ```
  
    You can also define what Ember should do when setting a computed property by providing additional function (`set`) in hash argument.
    If you try to set a computed property, it will try to invoke setter accessor function with the key and
    value you want to set it to as arguments.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      // these will be supplied by `create`
      firstName: null,
      lastName: null,
  
      fullName: computed('firstName', 'lastName', {
        get(key) {
          let firstName = this.get('firstName'),
              lastName  = this.get('lastName');
  
          return firstName + ' ' + lastName;
        },
        set(key, value) {
          let [firstName, lastName] = value.split(' ');
  
          this.set('firstName', firstName);
          this.set('lastName', lastName);
  
          return value;
        }
      })
    });
  
    let person = Person.create();
  
    person.set('fullName', 'Peter Wagenet');
    person.get('firstName'); // 'Peter'
    person.get('lastName');  // 'Wagenet'
    ```
  
    You can overwrite computed property with normal property (no longer computed), that won't change if dependencies change, if you set computed property and it won't have setter accessor function defined.
  
    You can also mark computed property as `.readOnly()` and block all attempts to set it.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      // these will be supplied by `create`
      firstName: null,
      lastName: null,
  
      fullName: computed('firstName', 'lastName', {
        get(key) {
          let firstName = this.get('firstName');
          let lastName  = this.get('lastName');
  
          return firstName + ' ' + lastName;
        }
      }).readOnly()
    });
  
    let person = Person.create();
    person.set('fullName', 'Peter Wagenet'); // Uncaught Error: Cannot set read-only property "fullName" on object: <(...):emberXXX>
    ```
  
    Additional resources:
    - [New CP syntax RFC](https://github.com/emberjs/rfcs/blob/master/text/0011-improved-cp-syntax.md)
    - [New computed syntax explained in "Ember 1.12 released" ](https://emberjs.com/blog/2015/05/13/ember-1-12-released.html#toc_new-computed-syntax)
  
    @class ComputedProperty
    @public
  */
  function ComputedProperty(config, opts) {
    this.isDescriptor = true;
    var hasGetterOnly = typeof config === 'function';
    if (hasGetterOnly) {
      this._getter = config;
    } else {
      true && !(typeof config === 'object' && !Array.isArray(config)) && emberDebug.assert('computed expects a function or an object as last argument.', typeof config === 'object' && !Array.isArray(config));
      true && !Object.keys(config).every(function (key) {
        return key === 'get' || key === 'set';
      }) && emberDebug.assert('Config object passed to computed can only contain `get` or `set` keys.', Object.keys(config).every(function (key) {
        return key === 'get' || key === 'set';
      }));

      this._getter = config.get;
      this._setter = config.set;
    }
    true && !(!!this._getter || !!this._setter) && emberDebug.assert('Computed properties must receive a getter or a setter, you passed none.', !!this._getter || !!this._setter);

    this._suspended = undefined;
    this._meta = undefined;
    this._volatile = false;

    this._dependentKeys = opts && opts.dependentKeys;
    this._readOnly = opts && hasGetterOnly && opts.readOnly === true;
  }

  ComputedProperty.prototype = new Descriptor();
  ComputedProperty.prototype.constructor = ComputedProperty;

  var ComputedPropertyPrototype = ComputedProperty.prototype;

  /**
    Call on a computed property to set it into non-cached mode. When in this
    mode the computed property will not automatically cache the return value.
  
    It also does not automatically fire any change events. You must manually notify
    any changes if you want to observe this property.
  
    Dependency keys have no effect on volatile properties as they are for cache
    invalidation and notification when cached value is invalidated.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let outsideService = EmberObject.extend({
      value: computed(function() {
        return OutsideService.getValue();
      }).volatile()
    }).create();
    ```
  
    @method volatile
    @static
    @for @ember/object/computed
    @return {ComputedProperty} this
    @chainable
    @public
  */
  ComputedPropertyPrototype.volatile = function () {
    this._volatile = true;
    return this;
  };

  /**
    Call on a computed property to set it into read-only mode. When in this
    mode the computed property will throw an error when set.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      guid: computed(function() {
        return 'guid-guid-guid';
      }).readOnly()
    });
  
    let person = Person.create();
  
    person.set('guid', 'new-guid'); // will throw an exception
    ```
  
    @method readOnly
    @static
    @for @ember/object/computed
    @return {ComputedProperty} this
    @chainable
    @public
  */
  ComputedPropertyPrototype.readOnly = function () {
    this._readOnly = true;
    true && !!(this._readOnly && this._setter && this._setter !== this._getter) && emberDebug.assert('Computed properties that define a setter using the new syntax cannot be read-only', !(this._readOnly && this._setter && this._setter !== this._getter));

    return this;
  };

  /**
    Sets the dependent keys on this computed property. Pass any number of
    arguments containing key paths that this computed property depends on.
  
    ```javascript
    import EmberObject, { computed } from '@ember/object';
  
    let President = EmberObject.extend({
      fullName: computed('firstName', 'lastName', function() {
        return this.get('firstName') + ' ' + this.get('lastName');
  
        // Tell Ember that this computed property depends on firstName
        // and lastName
      })
    });
  
    let president = President.create({
      firstName: 'Barack',
      lastName: 'Obama'
    });
  
    president.get('fullName'); // 'Barack Obama'
    ```
  
    @method property
    @static
    @for @ember/object/computed
    @param {String} path* zero or more property paths
    @return {ComputedProperty} this
    @chainable
    @public
  */
  ComputedPropertyPrototype.property = function () {
    var args = [];

    function addArg(property) {
      true && emberDebug.warn('Dependent keys containing @each only work one level deep. ' + ('You used the key "' + property + '" which is invalid. ') + 'Please create an intermediary computed property.', DEEP_EACH_REGEX.test(property) === false, { id: 'ember-metal.computed-deep-each' });

      args.push(property);
    }

    for (var i = 0; i < arguments.length; i++) {
      expandProperties(arguments[i], addArg);
    }

    this._dependentKeys = args;
    return this;
  };

  /**
    In some cases, you may want to annotate computed properties with additional
    metadata about how they function or what values they operate on. For example,
    computed property functions may close over variables that are then no longer
    available for introspection.
  
    You can pass a hash of these values to a computed property like this:
  
    ```
    import { computed } from '@ember/object';
    import Person from 'my-app/utils/person';
  
    person: computed(function() {
      let personId = this.get('personId');
      return Person.create({ id: personId });
    }).meta({ type: Person })
    ```
  
    The hash that you pass to the `meta()` function will be saved on the
    computed property descriptor under the `_meta` key. Ember runtime
    exposes a public API for retrieving these values from classes,
    via the `metaForProperty()` function.
  
    @method meta
    @static
    @for @ember/object/computed
    @param {Object} meta
    @chainable
    @public
  */
  ComputedPropertyPrototype.meta = function (meta$$1) {
    if (arguments.length === 0) {
      return this._meta || {};
    } else {
      this._meta = meta$$1;
      return this;
    }
  };

  // invalidate cache when CP key changes
  ComputedPropertyPrototype.didChange = function (obj, keyName) {
    // _suspended is set via a CP.set to ensure we don't clear
    // the cached value set by the setter
    if (this._volatile || this._suspended === obj) {
      return;
    }

    // don't create objects just to invalidate
    var meta$$1 = exports.peekMeta(obj);
    if (meta$$1 === undefined || meta$$1.source !== obj) {
      return;
    }

    var cache = meta$$1.readableCache();
    if (cache !== undefined && cache[keyName] !== undefined) {
      cache[keyName] = undefined;
      removeDependentKeys(this, obj, keyName, meta$$1);
    }
  };

  ComputedPropertyPrototype.get = function (obj, keyName) {
    if (this._volatile) {
      return this._getter.call(obj, keyName);
    }

    var meta$$1 = meta(obj);
    var cache = meta$$1.writableCache();

    var result = cache[keyName];
    if (result === UNDEFINED) {
      return undefined;
    } else if (result !== undefined) {
      return result;
    }

    var ret = this._getter.call(obj, keyName);
    cache[keyName] = ret === undefined ? UNDEFINED : ret;

    var chainWatchers = meta$$1.readableChainWatchers();
    if (chainWatchers !== undefined) {
      chainWatchers.revalidate(keyName);
    }
    addDependentKeys(this, obj, keyName, meta$$1);

    return ret;
  };

  ComputedPropertyPrototype.set = function computedPropertySetEntry(obj, keyName, value) {
    if (this._readOnly) {
      this._throwReadOnlyError(obj, keyName);
    }

    if (!this._setter) {
      return this.clobberSet(obj, keyName, value);
    }

    if (this._volatile) {
      return this.volatileSet(obj, keyName, value);
    }

    return this.setWithSuspend(obj, keyName, value);
  };

  ComputedPropertyPrototype._throwReadOnlyError = function computedPropertyThrowReadOnlyError(obj, keyName) {
    throw new emberDebug.Error('Cannot set read-only property "' + keyName + '" on object: ' + emberUtils.inspect(obj));
  };

  ComputedPropertyPrototype.clobberSet = function computedPropertyClobberSet(obj, keyName, value) {
    var cachedValue = cacheFor(obj, keyName);
    defineProperty(obj, keyName, null, cachedValue);
    set(obj, keyName, value);
    return value;
  };

  ComputedPropertyPrototype.volatileSet = function computedPropertyVolatileSet(obj, keyName, value) {
    return this._setter.call(obj, keyName, value);
  };

  ComputedPropertyPrototype.setWithSuspend = function computedPropertySetWithSuspend(obj, keyName, value) {
    var oldSuspended = this._suspended;
    this._suspended = obj;
    try {
      return this._set(obj, keyName, value);
    } finally {
      this._suspended = oldSuspended;
    }
  };

  ComputedPropertyPrototype._set = function computedPropertySet(obj, keyName, value) {
    var meta$$1 = meta(obj);
    var cache = meta$$1.writableCache();
    var hadCachedValue = false;
    var cachedValue = void 0;
    var val = cache[keyName];
    if (val !== undefined) {
      if (val !== UNDEFINED) {
        cachedValue = val;
      }
      hadCachedValue = true;
    }

    var ret = this._setter.call(obj, keyName, value, cachedValue);

    // allows setter to return the same value that is cached already
    if (hadCachedValue && cachedValue === ret) {
      return ret;
    }

    propertyWillChange(obj, keyName, meta$$1);

    if (hadCachedValue) {
      cache[keyName] = undefined;
    } else {
      addDependentKeys(this, obj, keyName, meta$$1);
    }

    if (ret === undefined) {
      cache[keyName] = UNDEFINED;
    } else {
      cache[keyName] = ret;
    }

    propertyDidChange(obj, keyName, meta$$1);

    return ret;
  };

  /* called before property is overridden */
  ComputedPropertyPrototype.teardown = function (obj, keyName, meta$$1) {
    if (this._volatile) {
      return;
    }
    var cache = meta$$1.readableCache();
    if (cache !== undefined && cache[keyName] !== undefined) {
      removeDependentKeys(this, obj, keyName, meta$$1);
      cache[keyName] = undefined;
    }
  };

  /**
    This helper returns a new property descriptor that wraps the passed
    computed property function. You can use this helper to define properties
    with mixins or via `defineProperty()`.
  
    If you pass a function as an argument, it will be used as a getter. A computed
    property defined in this way might look like this:
  
    ```js
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      init() {
        this._super(...arguments);
  
        this.firstName = 'Betty';
        this.lastName = 'Jones';
      },
  
      fullName: computed('firstName', 'lastName', function() {
        return `${this.get('firstName')} ${this.get('lastName')}`;
      })
    });
  
    let client = Person.create();
  
    client.get('fullName'); // 'Betty Jones'
  
    client.set('lastName', 'Fuller');
    client.get('fullName'); // 'Betty Fuller'
    ```
  
    You can pass a hash with two functions, `get` and `set`, as an
    argument to provide both a getter and setter:
  
    ```js
    import EmberObject, { computed } from '@ember/object';
  
    let Person = EmberObject.extend({
      init() {
        this._super(...arguments);
  
        this.firstName = 'Betty';
        this.lastName = 'Jones';
      },
  
      fullName: computed('firstName', 'lastName', {
        get(key) {
          return `${this.get('firstName')} ${this.get('lastName')}`;
        },
        set(key, value) {
          let [firstName, lastName] = value.split(/\s+/);
          this.setProperties({ firstName, lastName });
          return value;
        }
      })
    });
  
    let client = Person.create();
    client.get('firstName'); // 'Betty'
  
    client.set('fullName', 'Carroll Fuller');
    client.get('firstName'); // 'Carroll'
    ```
  
    The `set` function should accept two parameters, `key` and `value`. The value
    returned from `set` will be the new value of the property.
  
    _Note: This is the preferred way to define computed properties when writing third-party
    libraries that depend on or use Ember, since there is no guarantee that the user
    will have [prototype Extensions](https://emberjs.com/guides/configuring-ember/disabling-prototype-extensions/) enabled._
  
    The alternative syntax, with prototype extensions, might look like:
  
    ```js
    fullName: function() {
      return this.get('firstName') + ' ' + this.get('lastName');
    }.property('firstName', 'lastName')
    ```
  
    @method computed
    @for @ember/object
    @static
    @param {String} [dependentKeys*] Optional dependent keys that trigger this computed property.
    @param {Function} func The computed property function.
    @return {ComputedProperty} property descriptor instance
    @public
  */
  function computed() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var func = args.pop();

    var cp = new ComputedProperty(func);

    if (args.length > 0) {
      cp.property.apply(cp, args);
    }

    return cp;
  }

  /**
    Returns the cached value for a property, if one exists.
    This can be useful for peeking at the value of a computed
    property that is generated lazily, without accidentally causing
    it to be created.
  
    @method cacheFor
    @static
    @for @ember/object/internals
    @param {Object} obj the object whose property you want to check
    @param {String} key the name of the property whose cached value you want
      to return
    @return {Object} the cached value
    @public
  */
  function cacheFor(obj, key) {
    var meta$$1 = exports.peekMeta(obj);
    var cache = meta$$1 && meta$$1.source === obj && meta$$1.readableCache();
    var ret = cache && cache[key];

    if (ret === UNDEFINED) {
      return undefined;
    }
    return ret;
  }

  cacheFor.set = function (cache, key, value) {
    if (value === undefined) {
      cache[key] = UNDEFINED;
    } else {
      cache[key] = value;
    }
  };

  cacheFor.get = function (cache, key) {
    var ret = cache[key];
    if (ret === UNDEFINED) {
      return undefined;
    }
    return ret;
  };

  cacheFor.remove = function (cache, key) {
    cache[key] = undefined;
  };

  var CONSUMED = {};

  function alias(altKey) {
    return new AliasedProperty(altKey);
  }

  var AliasedProperty = function (_Descriptor) {
    emberBabel.inherits(AliasedProperty, _Descriptor);

    function AliasedProperty(altKey) {
      emberBabel.classCallCheck(this, AliasedProperty);

      var _this = emberBabel.possibleConstructorReturn(this, _Descriptor.call(this));

      _this.isDescriptor = true;
      _this.altKey = altKey;
      _this._dependentKeys = [altKey];
      return _this;
    }

    AliasedProperty.prototype.setup = function setup(obj, keyName) {
      true && !(this.altKey !== keyName) && emberDebug.assert('Setting alias \'' + keyName + '\' on self', this.altKey !== keyName);

      var meta$$1 = meta(obj);
      if (meta$$1.peekWatching(keyName)) {
        addDependentKeys(this, obj, keyName, meta$$1);
      }
    };

    AliasedProperty.prototype.teardown = function teardown(obj, keyName, meta$$1) {
      if (meta$$1 && meta$$1.peekWatching(keyName)) {
        removeDependentKeys(this, obj, keyName, meta$$1);
      }
    };

    AliasedProperty.prototype.willWatch = function willWatch(obj, keyName) {
      addDependentKeys(this, obj, keyName, meta(obj));
    };

    AliasedProperty.prototype.didUnwatch = function didUnwatch(obj, keyName) {
      removeDependentKeys(this, obj, keyName, meta(obj));
    };

    AliasedProperty.prototype.get = function get$$1(obj, keyName) {
      var ret = get(obj, this.altKey);
      var meta$$1 = meta(obj);
      var cache = meta$$1.writableCache();
      if (cache[keyName] !== CONSUMED) {
        cache[keyName] = CONSUMED;
        addDependentKeys(this, obj, keyName, meta$$1);
      }
      return ret;
    };

    AliasedProperty.prototype.set = function set$$1(obj, keyName, value) {
      return set(obj, this.altKey, value);
    };

    AliasedProperty.prototype.readOnly = function readOnly() {
      this.set = AliasedProperty_readOnlySet;
      return this;
    };

    AliasedProperty.prototype.oneWay = function oneWay() {
      this.set = AliasedProperty_oneWaySet;
      return this;
    };

    return AliasedProperty;
  }(Descriptor);

  function AliasedProperty_readOnlySet(obj, keyName, value) {
    throw new emberDebug.Error('Cannot set read-only property \'' + keyName + '\' on object: ' + emberUtils.inspect(obj));
  }

  function AliasedProperty_oneWaySet(obj, keyName, value) {
    defineProperty(obj, keyName, null);
    return set(obj, keyName, value);
  }

  // Backwards compatibility with Ember Data.
  AliasedProperty.prototype._meta = undefined;
  AliasedProperty.prototype.meta = ComputedProperty.prototype.meta;

  /**
   @module @ember/polyfills
  */
  /**
    Merge the contents of two objects together into the first object.
  
    ```javascript
    import { merge } from '@ember/polyfills';
  
    merge({ first: 'Tom' }, { last: 'Dale' }); // { first: 'Tom', last: 'Dale' }
    var a = { first: 'Yehuda' };
    var b = { last: 'Katz' };
    merge(a, b); // a == { first: 'Yehuda', last: 'Katz' }, b == { last: 'Katz' }
    ```
  
    @method merge
    @static
    @for @ember/polyfills
    @param {Object} original The object to merge into
    @param {Object} updates The object to copy properties from
    @return {Object}
    @public
  */
  function merge(original, updates) {
    if (!updates || typeof updates !== 'object') {
      return original;
    }

    var props = Object.keys(updates);
    var prop = void 0;

    for (var i = 0; i < props.length; i++) {
      prop = props[i];
      original[prop] = updates[prop];
    }

    return original;
  }

  /**
  @module ember
  */

  /**
    Used internally to allow changing properties in a backwards compatible way, and print a helpful
    deprecation warning.
  
    @method deprecateProperty
    @param {Object} object The object to add the deprecated property to.
    @param {String} deprecatedKey The property to add (and print deprecation warnings upon accessing).
    @param {String} newKey The property that will be aliased.
    @private
    @since 1.7.0
  */

  function deprecateProperty(object, deprecatedKey, newKey, options) {
    function _deprecate() {
      true && !false && emberDebug.deprecate('Usage of `' + deprecatedKey + '` is deprecated, use `' + newKey + '` instead.', false, options);
    }

    Object.defineProperty(object, deprecatedKey, {
      configurable: true,
      enumerable: false,
      set: function (value) {
        _deprecate();
        set(this, newKey, value);
      },
      get: function () {
        _deprecate();
        return get(this, newKey);
      }
    });
  }

  /* eslint no-console:off */
  /* global console */

  /**
  @module @ember/instrumentation
  @private
  */

  /**
    The purpose of the Ember Instrumentation module is
    to provide efficient, general-purpose instrumentation
    for Ember.
  
    Subscribe to a listener by using `subscribe`:
  
    ```javascript
    import { subscribe } from '@ember/instrumentation';
  
    subscribe("render", {
      before(name, timestamp, payload) {
  
      },
  
      after(name, timestamp, payload) {
  
      }
    });
    ```
  
    If you return a value from the `before` callback, that same
    value will be passed as a fourth parameter to the `after`
    callback.
  
    Instrument a block of code by using `instrument`:
  
    ```javascript
    import { instrument } from '@ember/instrumentation';
  
    instrument("render.handlebars", payload, function() {
      // rendering logic
    }, binding);
    ```
  
    Event names passed to `instrument` are namespaced
    by periods, from more general to more specific. Subscribers
    can listen for events by whatever level of granularity they
    are interested in.
  
    In the above example, the event is `render.handlebars`,
    and the subscriber listened for all events beginning with
    `render`. It would receive callbacks for events named
    `render`, `render.handlebars`, `render.container`, or
    even `render.handlebars.layout`.
  
    @class Instrumentation
    @static
    @private
  */
  var subscribers = [];
  var cache = {};

  function populateListeners(name) {
    var listeners = [];
    var subscriber = void 0;

    for (var i = 0; i < subscribers.length; i++) {
      subscriber = subscribers[i];
      if (subscriber.regex.test(name)) {
        listeners.push(subscriber.object);
      }
    }

    cache[name] = listeners;
    return listeners;
  }

  var time = function () {
    var perf = 'undefined' !== typeof window ? window.performance || {} : {};
    var fn = perf.now || perf.mozNow || perf.webkitNow || perf.msNow || perf.oNow;
    // fn.bind will be available in all the browsers that support the advanced window.performance... ;-)
    return fn ? fn.bind(perf) : function () {
      return +new Date();
    };
  }();

  /**
    Notifies event's subscribers, calls `before` and `after` hooks.
  
    @method instrument
    @for @ember/instrumentation
    @static
    @param {String} [name] Namespaced event name.
    @param {Object} _payload
    @param {Function} callback Function that you're instrumenting.
    @param {Object} binding Context that instrument function is called with.
    @private
  */
  function instrument(name, _payload, callback, binding) {
    if (arguments.length <= 3 && typeof _payload === 'function') {
      binding = callback;
      callback = _payload;
      _payload = undefined;
    }
    if (subscribers.length === 0) {
      return callback.call(binding);
    }
    var payload = _payload || {};
    var finalizer = _instrumentStart(name, function () {
      return payload;
    });

    if (finalizer) {
      return withFinalizer(callback, finalizer, payload, binding);
    } else {
      return callback.call(binding);
    }
  }

  exports.flaggedInstrument = void 0;
  if (ember_features.EMBER_IMPROVED_INSTRUMENTATION) {
    exports.flaggedInstrument = instrument;
  } else {
    exports.flaggedInstrument = function (name, payload, callback) {
      return callback();
    };
  }
  function withFinalizer(callback, finalizer, payload, binding) {
    var result = void 0;
    try {
      result = callback.call(binding);
    } catch (e) {
      payload.exception = e;
      result = payload;
    } finally {
      finalizer();
    }
    return result;
  }

  function NOOP() {}

  // private for now
  function _instrumentStart(name, _payload, _payloadParam) {
    if (subscribers.length === 0) {
      return NOOP;
    }

    var listeners = cache[name];

    if (!listeners) {
      listeners = populateListeners(name);
    }

    if (listeners.length === 0) {
      return NOOP;
    }

    var payload = _payload(_payloadParam);

    var STRUCTURED_PROFILE = emberEnvironment.ENV.STRUCTURED_PROFILE;
    var timeName = void 0;
    if (STRUCTURED_PROFILE) {
      timeName = name + ': ' + payload.object;
      console.time(timeName);
    }

    var beforeValues = new Array(listeners.length);
    var i = void 0,
        listener = void 0;
    var timestamp = time();
    for (i = 0; i < listeners.length; i++) {
      listener = listeners[i];
      beforeValues[i] = listener.before(name, timestamp, payload);
    }

    return function _instrumentEnd() {
      var i = void 0,
          listener = void 0;
      var timestamp = time();
      for (i = 0; i < listeners.length; i++) {
        listener = listeners[i];
        if (typeof listener.after === 'function') {
          listener.after(name, timestamp, payload, beforeValues[i]);
        }
      }

      if (STRUCTURED_PROFILE) {
        console.timeEnd(timeName);
      }
    };
  }

  /**
    Subscribes to a particular event or instrumented block of code.
  
    @method subscribe
    @for @ember/instrumentation
    @static
  
    @param {String} [pattern] Namespaced event name.
    @param {Object} [object] Before and After hooks.
  
    @return {Subscriber}
    @private
  */
  function subscribe(pattern, object) {
    var paths = pattern.split('.');
    var path = void 0;
    var regex = [];

    for (var i = 0; i < paths.length; i++) {
      path = paths[i];
      if (path === '*') {
        regex.push('[^\\.]*');
      } else {
        regex.push(path);
      }
    }

    regex = regex.join('\\.');
    regex = regex + '(\\..*)?';

    var subscriber = {
      pattern: pattern,
      regex: new RegExp('^' + regex + '$'),
      object: object
    };

    subscribers.push(subscriber);
    cache = {};

    return subscriber;
  }

  /**
    Unsubscribes from a particular event or instrumented block of code.
  
    @method unsubscribe
    @for @ember/instrumentation
    @static
  
    @param {Object} [subscriber]
    @private
  */
  function unsubscribe(subscriber) {
    var index = void 0;

    for (var i = 0; i < subscribers.length; i++) {
      if (subscribers[i] === subscriber) {
        index = i;
      }
    }

    subscribers.splice(index, 1);
    cache = {};
  }

  /**
    Resets `Instrumentation` by flushing list of subscribers.
  
    @method reset
    @for @ember/instrumentation
    @static
    @private
  */
  function reset() {
    subscribers.length = 0;
    cache = {};
  }

  // To maintain stacktrace consistency across browsers
  var getStack = function (error) {
    var stack = error.stack;
    var message = error.message;

    if (stack && stack.indexOf(message) === -1) {
      stack = message + '\n' + stack;
    }

    return stack;
  };

  var onerror = void 0;
  var onErrorTarget = {
    get onerror() {
      return dispatchOverride || onerror;
    }
  };

  // Ember.onerror getter
  function getOnerror() {
    return onerror;
  }
  // Ember.onerror setter
  function setOnerror(handler) {
    onerror = handler;
  }

  var dispatchOverride = void 0;
  // dispatch error
  function dispatchError(error) {
    if (dispatchOverride) {
      dispatchOverride(error);
    } else {
      defaultDispatch(error);
    }
  }

  // allows testing adapter to override dispatch
  function getDispatchOverride() {
    return dispatchOverride;
  }
  function setDispatchOverride(handler) {
    dispatchOverride = handler;
  }

  function defaultDispatch(error) {
    if (emberDebug.isTesting()) {
      throw error;
    }
    if (onerror) {
      onerror(error);
    } else {
      Logger.error(getStack(error));
    }
  }

  /**
   @module ember
  */
  var id = 0;

  // Returns whether Type(value) is Object according to the terminology in the spec
  function isObject$1(value) {
    return typeof value === 'object' && value !== null || typeof value === 'function';
  }

  /*
   * @class Ember.WeakMap
   * @public
   * @category ember-metal-weakmap
   *
   * A partial polyfill for [WeakMap](http://www.ecma-international.org/ecma-262/6.0/#sec-weakmap-objects).
   *
   * There is a small but important caveat. This implementation assumes that the
   * weak map will live longer (in the sense of garbage collection) than all of its
   * keys, otherwise it is possible to leak the values stored in the weak map. In
   * practice, most use cases satisfy this limitation which is why it is included
   * in ember-metal.
   */
  var WeakMapPolyfill = function () {
    function WeakMapPolyfill(iterable) {
      emberBabel.classCallCheck(this, WeakMapPolyfill);

      this._id = emberUtils.GUID_KEY + id++;

      if (iterable === null || iterable === undefined) {
        return;
      } else if (Array.isArray(iterable)) {
        for (var i = 0; i < iterable.length; i++) {
          var _iterable$i = iterable[i],
              key = _iterable$i[0],
              value = _iterable$i[1];

          this.set(key, value);
        }
      } else {
        throw new TypeError('The weak map constructor polyfill only supports an array argument');
      }
    }

    /*
     * @method get
     * @param key {Object | Function}
     * @return {Any} stored value
     */

    WeakMapPolyfill.prototype.get = function get(obj) {
      if (!isObject$1(obj)) {
        return undefined;
      }

      var meta$$1 = exports.peekMeta(obj);
      if (meta$$1 !== undefined) {
        var map = meta$$1.readableWeak();
        if (map !== undefined) {
          var val = map[this._id];
          if (val === UNDEFINED) {
            return undefined;
          }
          return val;
        }
      }
    };

    /*
     * @method set
     * @param key {Object | Function}
     * @param value {Any}
     * @return {WeakMap} the weak map
     */

    WeakMapPolyfill.prototype.set = function set(obj, value) {
      if (!isObject$1(obj)) {
        throw new TypeError('Invalid value used as weak map key');
      }

      if (value === undefined) {
        value = UNDEFINED;
      }

      meta(obj).writableWeak()[this._id] = value;

      return this;
    };

    /*
     * @method has
     * @param key {Object | Function}
     * @return {boolean} if the key exists
     */

    WeakMapPolyfill.prototype.has = function has(obj) {
      if (!isObject$1(obj)) {
        return false;
      }

      var meta$$1 = exports.peekMeta(obj);
      if (meta$$1 !== undefined) {
        var map = meta$$1.readableWeak();
        if (map !== undefined) {
          return map[this._id] !== undefined;
        }
      }

      return false;
    };

    /*
     * @method delete
     * @param key {Object | Function}
     * @return {boolean} if the key was deleted
     */

    WeakMapPolyfill.prototype.delete = function _delete(obj) {
      if (this.has(obj)) {
        delete exports.peekMeta(obj).writableWeak()[this._id];
        return true;
      } else {
        return false;
      }
    };

    /*
     * @method toString
     * @return {String}
     */

    WeakMapPolyfill.prototype.toString = function toString$$1() {
      return '[object WeakMap]';
    };

    return WeakMapPolyfill;
  }();

  var weak_map = emberUtils.HAS_NATIVE_WEAKMAP ? WeakMap : WeakMapPolyfill;

  /**
   @module @ember/utils
  */
  /**
    Returns true if the passed value is null or undefined. This avoids errors
    from JSLint complaining about use of ==, which can be technically
    confusing.
  
    ```javascript
    isNone();              // true
    isNone(null);          // true
    isNone(undefined);     // true
    isNone('');            // false
    isNone([]);            // false
    isNone(function() {}); // false
    ```
  
    @method isNone
    @static
    @for @ember/utils
    @param {Object} obj Value to test
    @return {Boolean}
    @public
  */
  function isNone(obj) {
    return obj === null || obj === undefined;
  }

  /**
   @module @ember/utils
  */
  /**
    Verifies that a value is `null` or `undefined`, an empty string, or an empty
    array.
  
    Constrains the rules on `isNone` by returning true for empty strings and
    empty arrays.
  
    ```javascript
    isEmpty();                // true
    isEmpty(null);            // true
    isEmpty(undefined);       // true
    isEmpty('');              // true
    isEmpty([]);              // true
    isEmpty({});              // false
    isEmpty('Adam Hawkins');  // false
    isEmpty([0,1,2]);         // false
    isEmpty('\n\t');          // false
    isEmpty('  ');            // false
    ```
  
    @method isEmpty
    @static
    @for @ember/utils
    @param {Object} obj Value to test
    @return {Boolean}
    @public
  */
  function isEmpty(obj) {
    var none = isNone(obj);
    if (none) {
      return none;
    }

    if (typeof obj.size === 'number') {
      return !obj.size;
    }

    var objectType = typeof obj;

    if (objectType === 'object') {
      var size = get(obj, 'size');
      if (typeof size === 'number') {
        return !size;
      }
    }

    if (typeof obj.length === 'number' && objectType !== 'function') {
      return !obj.length;
    }

    if (objectType === 'object') {
      var length = get(obj, 'length');
      if (typeof length === 'number') {
        return !length;
      }
    }

    return false;
  }

  /**
   @module @ember/utils
  */
  /**
    A value is blank if it is empty or a whitespace string.
  
    ```javascript
    import { isBlank } from '@ember/utils';
  
    isBlank();                // true
    isBlank(null);            // true
    isBlank(undefined);       // true
    isBlank('');              // true
    isBlank([]);              // true
    isBlank('\n\t');          // true
    isBlank('  ');            // true
    isBlank({});              // false
    isBlank('\n\t Hello');    // false
    isBlank('Hello world');   // false
    isBlank([1,2,3]);         // false
    ```
  
    @method isBlank
    @static
    @for @ember/utils
    @param {Object} obj Value to test
    @return {Boolean}
    @since 1.5.0
    @public
  */
  function isBlank(obj) {
    return isEmpty(obj) || typeof obj === 'string' && /\S/.test(obj) === false;
  }

  /**
   @module @ember/utils
  */
  /**
    A value is present if it not `isBlank`.
  
    ```javascript
    isPresent();                // false
    isPresent(null);            // false
    isPresent(undefined);       // false
    isPresent('');              // false
    isPresent('  ');            // false
    isPresent('\n\t');          // false
    isPresent([]);              // false
    isPresent({ length: 0 })    // false
    isPresent(false);           // true
    isPresent(true);            // true
    isPresent('string');        // true
    isPresent(0);               // true
    isPresent(function() {})    // true
    isPresent({});              // true
    isPresent(false);           // true
    isPresent('\n\t Hello');    // true
    isPresent([1,2,3]);         // true
    ```
  
    @method isPresent
    @static
    @for @ember/utils
    @param {Object} obj Value to test
    @return {Boolean}
    @since 1.8.0
    @public
  */
  function isPresent(obj) {
    return !isBlank(obj);
  }

  function onBegin(current) {
    run.currentRunLoop = current;
  }

  function onEnd(current, next) {
    run.currentRunLoop = next;
  }

  var backburner$1 = new Backburner(['sync', 'actions', 'destroy'], {
    GUID_KEY: emberUtils.GUID_KEY,
    sync: {
      before: beginPropertyChanges,
      after: endPropertyChanges
    },
    defaultQueue: 'actions',
    onBegin: onBegin,
    onEnd: onEnd,
    onErrorTarget: onErrorTarget,
    onErrorMethod: 'onerror'
  });

  /**
   @module @ember/runloop
  */
  // ..........................................................
  // run - this is ideally the only public API the dev sees
  //

  /**
    Runs the passed target and method inside of a RunLoop, ensuring any
    deferred actions including bindings and views updates are flushed at the
    end.
  
    Normally you should not need to invoke this method yourself. However if
    you are implementing raw event handlers when interfacing with other
    libraries or plugins, you should probably wrap all of your code inside this
    call.
  
    ```javascript
    run(function() {
      // code to be executed within a RunLoop
    });
    ```
  
    @class @ember/runloop
    @static
    @constructor
    @param {Object} [target] target of method to call
    @param {Function|String} method Method to invoke.
      May be a function or a string. If you pass a string
      then it will be looked up on the passed target.
    @param {Object} [args*] Any additional arguments you wish to pass to the method.
    @return {Object} return value from invoking the passed function.
    @public
  */
  function run() {
    return backburner$1.run.apply(backburner$1, arguments);
  }

  /**
    If no run-loop is present, it creates a new one. If a run loop is
    present it will queue itself to run on the existing run-loops action
    queue.
  
    Please note: This is not for normal usage, and should be used sparingly.
  
    If invoked when not within a run loop:
  
    ```javascript
    run.join(function() {
      // creates a new run-loop
    });
    ```
  
    Alternatively, if called within an existing run loop:
  
    ```javascript
    run(function() {
      // creates a new run-loop
      run.join(function() {
        // joins with the existing run-loop, and queues for invocation on
        // the existing run-loops action queue.
      });
    });
    ```
  
    @method join
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to call
    @param {Function|String} method Method to invoke.
      May be a function or a string. If you pass a string
      then it will be looked up on the passed target.
    @param {Object} [args*] Any additional arguments you wish to pass to the method.
    @return {Object} Return value from invoking the passed function. Please note,
    when called within an existing loop, no return value is possible.
    @public
  */
  run.join = function () {
    return backburner$1.join.apply(backburner$1, arguments);
  };

  /**
    Allows you to specify which context to call the specified function in while
    adding the execution of that function to the Ember run loop. This ability
    makes this method a great way to asynchronously integrate third-party libraries
    into your Ember application.
  
    `run.bind` takes two main arguments, the desired context and the function to
    invoke in that context. Any additional arguments will be supplied as arguments
    to the function that is passed in.
  
    Let's use the creation of a TinyMCE component as an example. Currently,
    TinyMCE provides a setup configuration option we can use to do some processing
    after the TinyMCE instance is initialized but before it is actually rendered.
    We can use that setup option to do some additional setup for our component.
    The component itself could look something like the following:
  
    ```app/components/rich-text-editor.js
    import Component from '@ember/component';
    import { bind } from '@ember/runloop';
  
    export default Component.extend({
      initializeTinyMCE: Ember.on('didInsertElement', function() {
        tinymce.init({
          selector: '#' + this.$().prop('id'),
          setup: Ember.run.bind(this, this.setupEditor)
        });
      }),
      
      didInsertElement() {
        tinymce.init({
          selector: '#' + this.$().prop('id'),
          setup: Ember.run.bind(this, this.setupEditor)
        });
      }
  
      setupEditor(editor) {
        this.set('editor', editor);
  
        editor.on('change', function() {
          console.log('content changed!');
        });
      }
    });
    ```
  
    In this example, we use Ember.run.bind to bind the setupEditor method to the
    context of the RichTextEditor component and to have the invocation of that
    method be safely handled and executed by the Ember run loop.
  
    @method bind
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to call
    @param {Function|String} method Method to invoke.
      May be a function or a string. If you pass a string
      then it will be looked up on the passed target.
    @param {Object} [args*] Any additional arguments you wish to pass to the method.
    @return {Function} returns a new function that will always have a particular context
    @since 1.4.0
    @public
  */
  run.bind = function () {
    for (var _len = arguments.length, curried = Array(_len), _key = 0; _key < _len; _key++) {
      curried[_key] = arguments[_key];
    }

    return function () {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return run.join.apply(run, curried.concat(args));
    };
  };

  run.backburner = backburner$1;
  run.currentRunLoop = null;
  run.queues = backburner$1.queueNames;

  /**
    Begins a new RunLoop. Any deferred actions invoked after the begin will
    be buffered until you invoke a matching call to `run.end()`. This is
    a lower-level way to use a RunLoop instead of using `run()`.
  
    ```javascript
    run.begin();
    // code to be executed within a RunLoop
    run.end();
    ```
  
    @method begin
    @static
    @for @ember/runloop
    @return {void}
    @public
  */
  run.begin = function () {
    backburner$1.begin();
  };

  /**
    Ends a RunLoop. This must be called sometime after you call
    `run.begin()` to flush any deferred actions. This is a lower-level way
    to use a RunLoop instead of using `run()`.
  
    ```javascript
    run.begin();
    // code to be executed within a RunLoop
    run.end();
    ```
  
    @method end
    @static
    @for @ember/runloop
    @return {void}
    @public
  */
  run.end = function () {
    backburner$1.end();
  };

  /**
    Array of named queues. This array determines the order in which queues
    are flushed at the end of the RunLoop. You can define your own queues by
    simply adding the queue name to this array. Normally you should not need
    to inspect or modify this property.
  
    @property queues
    @type Array
    @default ['sync', 'actions', 'destroy']
    @private
  */

  /**
    Adds the passed target/method and any optional arguments to the named
    queue to be executed at the end of the RunLoop. If you have not already
    started a RunLoop when calling this method one will be started for you
    automatically.
  
    At the end of a RunLoop, any methods scheduled in this way will be invoked.
    Methods will be invoked in an order matching the named queues defined in
    the `run.queues` property.
  
    ```javascript
    run.schedule('sync', this, function() {
      // this will be executed in the first RunLoop queue, when bindings are synced
      console.log('scheduled on sync queue');
    });
  
    run.schedule('actions', this, function() {
      // this will be executed in the 'actions' queue, after bindings have synced.
      console.log('scheduled on actions queue');
    });
  
    // Note the functions will be run in order based on the run queues order.
    // Output would be:
    //   scheduled on sync queue
    //   scheduled on actions queue
    ```
  
    @method schedule
    @static
    @for @ember/runloop
    @param {String} queue The name of the queue to schedule against.
      Default queues are 'sync' and 'actions'
    @param {Object} [target] target object to use as the context when invoking a method.
    @param {String|Function} method The method to invoke. If you pass a string it
      will be resolved on the target object at the time the scheduled item is
      invoked allowing you to change the target function.
    @param {Object} [arguments*] Optional arguments to be passed to the queued method.
    @return {*} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.schedule = function () /* queue, target, method */{
    true && !(run.currentRunLoop || !emberDebug.isTesting()) && emberDebug.assert('You have turned on testing mode, which disabled the run-loop\'s autorun. ' + 'You will need to wrap any code with asynchronous side-effects in a run', run.currentRunLoop || !emberDebug.isTesting());

    return backburner$1.schedule.apply(backburner$1, arguments);
  };

  // Used by global test teardown
  run.hasScheduledTimers = function () {
    return backburner$1.hasTimers();
  };

  // Used by global test teardown
  run.cancelTimers = function () {
    backburner$1.cancelTimers();
  };

  /**
    Immediately flushes any events scheduled in the 'sync' queue. Bindings
    use this queue so this method is a useful way to immediately force all
    bindings in the application to sync.
  
    You should call this method anytime you need any changed state to propagate
    throughout the app immediately without repainting the UI (which happens
    in the later 'render' queue added by the `ember-views` package).
  
    ```javascript
    run.sync();
    ```
  
    @method sync
    @static
    @for @ember/runloop
    @return {void}
    @private
  */
  run.sync = function () {
    if (backburner$1.currentInstance) {
      backburner$1.currentInstance.queues.sync.flush();
    }
  };

  /**
    Invokes the passed target/method and optional arguments after a specified
    period of time. The last parameter of this method must always be a number
    of milliseconds.
  
    You should use this method whenever you need to run some action after a
    period of time instead of using `setTimeout()`. This method will ensure that
    items that expire during the same script execution cycle all execute
    together, which is often more efficient than using a real setTimeout.
  
    ```javascript
    run.later(myContext, function() {
      // code here will execute within a RunLoop in about 500ms with this == myContext
    }, 500);
    ```
  
    @method later
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to invoke
    @param {Function|String} method The method to invoke.
      If you pass a string it will be resolved on the
      target at the time the method is invoked.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @param {Number} wait Number of milliseconds to wait.
    @return {*} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.later = function () /*target, method*/{
    return backburner$1.later.apply(backburner$1, arguments);
  };

  /**
    Schedule a function to run one time during the current RunLoop. This is equivalent
    to calling `scheduleOnce` with the "actions" queue.
  
    @method once
    @static
    @for @ember/runloop
    @param {Object} [target] The target of the method to invoke.
    @param {Function|String} method The method to invoke.
      If you pass a string it will be resolved on the
      target at the time the method is invoked.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @return {Object} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.once = function () {
    true && !(run.currentRunLoop || !emberDebug.isTesting()) && emberDebug.assert('You have turned on testing mode, which disabled the run-loop\'s autorun. ' + 'You will need to wrap any code with asynchronous side-effects in a run', run.currentRunLoop || !emberDebug.isTesting());

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    args.unshift('actions');
    return backburner$1.scheduleOnce.apply(backburner$1, args);
  };

  /**
    Schedules a function to run one time in a given queue of the current RunLoop.
    Calling this method with the same queue/target/method combination will have
    no effect (past the initial call).
  
    Note that although you can pass optional arguments these will not be
    considered when looking for duplicates. New arguments will replace previous
    calls.
  
    ```javascript
    function sayHi() {
      console.log('hi');
    }
  
    run(function() {
      run.scheduleOnce('afterRender', myContext, sayHi);
      run.scheduleOnce('afterRender', myContext, sayHi);
      // sayHi will only be executed once, in the afterRender queue of the RunLoop
    });
    ```
  
    Also note that for `run.scheduleOnce` to prevent additional calls, you need to
    pass the same function instance. The following case works as expected:
  
    ```javascript
    function log() {
      console.log('Logging only once');
    }
  
    function scheduleIt() {
      run.scheduleOnce('actions', myContext, log);
    }
  
    scheduleIt();
    scheduleIt();
    ```
  
    But this other case will schedule the function multiple times:
  
    ```javascript
    function scheduleIt() {
      run.scheduleOnce('actions', myContext, function() {
        console.log('Closure');
      });
    }
  
    scheduleIt();
    scheduleIt();
  
    // "Closure" will print twice, even though we're using `run.scheduleOnce`,
    // because the function we pass to it won't match the
    // previously scheduled operation.
    ```
  
    Available queues, and their order, can be found at `run.queues`
  
    @method scheduleOnce
    @static
    @for @ember/runloop
    @param {String} [queue] The name of the queue to schedule against. Default queues are 'sync' and 'actions'.
    @param {Object} [target] The target of the method to invoke.
    @param {Function|String} method The method to invoke.
      If you pass a string it will be resolved on the
      target at the time the method is invoked.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @return {Object} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.scheduleOnce = function () /*queue, target, method*/{
    true && !(run.currentRunLoop || !emberDebug.isTesting()) && emberDebug.assert('You have turned on testing mode, which disabled the run-loop\'s autorun. ' + 'You will need to wrap any code with asynchronous side-effects in a run', run.currentRunLoop || !emberDebug.isTesting());

    return backburner$1.scheduleOnce.apply(backburner$1, arguments);
  };

  /**
    Schedules an item to run from within a separate run loop, after
    control has been returned to the system. This is equivalent to calling
    `run.later` with a wait time of 1ms.
  
    ```javascript
    run.next(myContext, function() {
      // code to be executed in the next run loop,
      // which will be scheduled after the current one
    });
    ```
  
    Multiple operations scheduled with `run.next` will coalesce
    into the same later run loop, along with any other operations
    scheduled by `run.later` that expire right around the same
    time that `run.next` operations will fire.
  
    Note that there are often alternatives to using `run.next`.
    For instance, if you'd like to schedule an operation to happen
    after all DOM element operations have completed within the current
    run loop, you can make use of the `afterRender` run loop queue (added
    by the `ember-views` package, along with the preceding `render` queue
    where all the DOM element operations happen).
  
    Example:
  
    ```app/components/my-component.js
    import Component from '@ember/component';
  
    export Component.extend({
      didInsertElement() {
        this._super(...arguments);
        run.scheduleOnce('afterRender', this, 'processChildElements');
      },
  
      processChildElements() {
        // ... do something with component's child component
        // elements after they've finished rendering, which
        // can't be done within this component's
        // `didInsertElement` hook because that gets run
        // before the child elements have been added to the DOM.
      }
    });
    ```
  
    One benefit of the above approach compared to using `run.next` is
    that you will be able to perform DOM/CSS operations before unprocessed
    elements are rendered to the screen, which may prevent flickering or
    other artifacts caused by delaying processing until after rendering.
  
    The other major benefit to the above approach is that `run.next`
    introduces an element of non-determinism, which can make things much
    harder to test, due to its reliance on `setTimeout`; it's much harder
    to guarantee the order of scheduled operations when they are scheduled
    outside of the current run loop, i.e. with `run.next`.
  
    @method next
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to invoke
    @param {Function|String} method The method to invoke.
      If you pass a string it will be resolved on the
      target at the time the method is invoked.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @return {Object} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.next = function () {
    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    args.push(1);
    return backburner$1.later.apply(backburner$1, args);
  };

  /**
    Cancels a scheduled item. Must be a value returned by `run.later()`,
    `run.once()`, `run.scheduleOnce()`, `run.next()`, `run.debounce()`, or
    `run.throttle()`.
  
    ```javascript
    let runNext = run.next(myContext, function() {
      // will not be executed
    });
  
    run.cancel(runNext);
  
    let runLater = run.later(myContext, function() {
      // will not be executed
    }, 500);
  
    run.cancel(runLater);
  
    let runScheduleOnce = run.scheduleOnce('afterRender', myContext, function() {
      // will not be executed
    });
  
    run.cancel(runScheduleOnce);
  
    let runOnce = run.once(myContext, function() {
      // will not be executed
    });
  
    run.cancel(runOnce);
  
    let throttle = run.throttle(myContext, function() {
      // will not be executed
    }, 1, false);
  
    run.cancel(throttle);
  
    let debounce = run.debounce(myContext, function() {
      // will not be executed
    }, 1);
  
    run.cancel(debounce);
  
    let debounceImmediate = run.debounce(myContext, function() {
      // will be executed since we passed in true (immediate)
    }, 100, true);
  
    // the 100ms delay until this method can be called again will be canceled
    run.cancel(debounceImmediate);
    ```
  
    @method cancel
    @static
    @for @ember/runloop
    @param {Object} timer Timer object to cancel
    @return {Boolean} true if canceled or false/undefined if it wasn't found
    @public
  */
  run.cancel = function (timer) {
    return backburner$1.cancel(timer);
  };

  /**
    Delay calling the target method until the debounce period has elapsed
    with no additional debounce calls. If `debounce` is called again before
    the specified time has elapsed, the timer is reset and the entire period
    must pass again before the target method is called.
  
    This method should be used when an event may be called multiple times
    but the action should only be called once when the event is done firing.
    A common example is for scroll events where you only want updates to
    happen once scrolling has ceased.
  
    ```javascript
    function whoRan() {
      console.log(this.name + ' ran.');
    }
  
    let myContext = { name: 'debounce' };
  
    run.debounce(myContext, whoRan, 150);
  
    // less than 150ms passes
    run.debounce(myContext, whoRan, 150);
  
    // 150ms passes
    // whoRan is invoked with context myContext
    // console logs 'debounce ran.' one time.
    ```
  
    Immediate allows you to run the function immediately, but debounce
    other calls for this function until the wait time has elapsed. If
    `debounce` is called again before the specified time has elapsed,
    the timer is reset and the entire period must pass again before
    the method can be called again.
  
    ```javascript
    function whoRan() {
      console.log(this.name + ' ran.');
    }
  
    let myContext = { name: 'debounce' };
  
    run.debounce(myContext, whoRan, 150, true);
  
    // console logs 'debounce ran.' one time immediately.
    // 100ms passes
    run.debounce(myContext, whoRan, 150, true);
  
    // 150ms passes and nothing else is logged to the console and
    // the debouncee is no longer being watched
    run.debounce(myContext, whoRan, 150, true);
  
    // console logs 'debounce ran.' one time immediately.
    // 150ms passes and nothing else is logged to the console and
    // the debouncee is no longer being watched
  
    ```
  
    @method debounce
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to invoke
    @param {Function|String} method The method to invoke.
      May be a function or a string. If you pass a string
      then it will be looked up on the passed target.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @param {Number} wait Number of milliseconds to wait.
    @param {Boolean} immediate Trigger the function on the leading instead
      of the trailing edge of the wait interval. Defaults to false.
    @return {Array} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.debounce = function () {
    return backburner$1.debounce.apply(backburner$1, arguments);
  };

  /**
    Ensure that the target method is never called more frequently than
    the specified spacing period. The target method is called immediately.
  
    ```javascript
    function whoRan() {
      console.log(this.name + ' ran.');
    }
  
    let myContext = { name: 'throttle' };
  
    run.throttle(myContext, whoRan, 150);
    // whoRan is invoked with context myContext
    // console logs 'throttle ran.'
  
    // 50ms passes
    run.throttle(myContext, whoRan, 150);
  
    // 50ms passes
    run.throttle(myContext, whoRan, 150);
  
    // 150ms passes
    run.throttle(myContext, whoRan, 150);
    // whoRan is invoked with context myContext
    // console logs 'throttle ran.'
    ```
  
    @method throttle
    @static
    @for @ember/runloop
    @param {Object} [target] target of method to invoke
    @param {Function|String} method The method to invoke.
      May be a function or a string. If you pass a string
      then it will be looked up on the passed target.
    @param {Object} [args*] Optional arguments to pass to the timeout.
    @param {Number} spacing Number of milliseconds to space out requests.
    @param {Boolean} immediate Trigger the function on the leading instead
      of the trailing edge of the wait interval. Defaults to true.
    @return {Array} Timer information for use in canceling, see `run.cancel`.
    @public
  */
  run.throttle = function () {
    return backburner$1.throttle.apply(backburner$1, arguments);
  };

  /**
    Add a new named queue after the specified queue.
  
    The queue to add will only be added once.
  
    @method _addQueue
    @param {String} name the name of the queue to add.
    @param {String} after the name of the queue to add after.
    @private
  */
  run._addQueue = function (name, after) {
    if (run.queues.indexOf(name) === -1) {
      run.queues.splice(run.queues.indexOf(after) + 1, 0, name);
    }
  };

  /**
   @module ember
  */
  /**
    Helper class that allows you to register your library with Ember.
  
    Singleton created at `Ember.libraries`.
  
    @class Libraries
    @constructor
    @private
  */
  var Libraries = function () {
    function Libraries() {
      emberBabel.classCallCheck(this, Libraries);

      this._registry = [];
      this._coreLibIndex = 0;
    }

    Libraries.prototype.isRegistered = function isRegistered(name) {
      return !!this._getLibraryByName(name);
    };

    return Libraries;
  }();

  Libraries.prototype = {
    constructor: Libraries,

    _getLibraryByName: function (name) {
      var libs = this._registry;
      var count = libs.length;

      for (var i = 0; i < count; i++) {
        if (libs[i].name === name) {
          return libs[i];
        }
      }
    },
    register: function (name, version, isCoreLibrary) {
      var index = this._registry.length;

      if (!this._getLibraryByName(name)) {
        if (isCoreLibrary) {
          index = this._coreLibIndex++;
        }
        this._registry.splice(index, 0, { name: name, version: version });
      } else {
        true && emberDebug.warn('Library "' + name + '" is already registered with Ember.', false, { id: 'ember-metal.libraries-register' });
      }
    },
    registerCoreLibrary: function (name, version) {
      this.register(name, version, true);
    },
    deRegister: function (name) {
      var lib = this._getLibraryByName(name);
      var index = void 0;

      if (lib) {
        index = this._registry.indexOf(lib);
        this._registry.splice(index, 1);
      }
    }
  };

  if (ember_features.EMBER_LIBRARIES_ISREGISTERED) {
    Libraries.prototype.isRegistered = function (name) {
      return !!this._getLibraryByName(name);
    };
  }

  var libraries = new Libraries();

  /**
  @module ember
  */

  /*
    JavaScript (before ES6) does not have a Map implementation. Objects,
    which are often used as dictionaries, may only have Strings as keys.
  
    Because Ember has a way to get a unique identifier for every object
    via `guidFor`, we can implement a performant Map with arbitrary
    keys. Because it is commonly used in low-level bookkeeping, Map is
    implemented as a pure JavaScript object for performance.
  
    This implementation follows the current iteration of the ES6 proposal for
    maps (http://wiki.ecmascript.org/doku.php?id=harmony:simple_maps_and_sets),
    with one exception:  as we do not have the luxury of in-VM iteration, we implement a
    forEach method for iteration.
  
    Map is mocked out to look like an Ember object, so you can do
    `EmberMap.create()` for symmetry with other Ember classes.
  */
  function missingFunction(fn) {
    throw new TypeError(Object.prototype.toString.call(fn) + ' is not a function');
  }

  function missingNew(name) {
    throw new TypeError('Constructor ' + name + ' requires \'new\'');
  }

  function copyNull(obj) {
    var output = Object.create(null);

    for (var prop in obj) {
      // hasOwnPropery is not needed because obj is Object.create(null);
      output[prop] = obj[prop];
    }

    return output;
  }

  function copyMap(original, newObject) {
    var keys = original._keys.copy();
    var values = copyNull(original._values);

    newObject._keys = keys;
    newObject._values = values;
    newObject.size = original.size;

    return newObject;
  }

  /**
    This class is used internally by Ember and Ember Data.
    Please do not use it at this time. We plan to clean it up
    and add many tests soon.
  
    @class OrderedSet
    @namespace Ember
    @constructor
    @private
  */
  function OrderedSet() {
    if (this instanceof OrderedSet) {
      this.clear();
    } else {
      missingNew('OrderedSet');
    }
  }

  /**
    @method create
    @static
    @return {Ember.OrderedSet}
    @private
  */
  OrderedSet.create = function () {
    var Constructor = this;

    return new Constructor();
  };

  OrderedSet.prototype = {
    constructor: OrderedSet,
    /**
      @method clear
      @private
    */
    clear: function () {
      this.presenceSet = Object.create(null);
      this.list = [];
      this.size = 0;
    },

    /**
      @method add
      @param obj
      @param guid (optional, and for internal use)
      @return {Ember.OrderedSet}
      @private
    */
    add: function (obj, _guid) {
      var guid = _guid || emberUtils.guidFor(obj);
      var presenceSet = this.presenceSet;
      var list = this.list;

      if (presenceSet[guid] !== true) {
        presenceSet[guid] = true;
        this.size = list.push(obj);
      }

      return this;
    },

    /**
      @since 1.8.0
      @method delete
      @param obj
      @param _guid (optional and for internal use only)
      @return {Boolean}
      @private
    */
    delete: function (obj, _guid) {
      var guid = _guid || emberUtils.guidFor(obj);
      var presenceSet = this.presenceSet;
      var list = this.list;

      if (presenceSet[guid] === true) {
        delete presenceSet[guid];
        var index = list.indexOf(obj);
        if (index > -1) {
          list.splice(index, 1);
        }
        this.size = list.length;
        return true;
      } else {
        return false;
      }
    },

    /**
      @method isEmpty
      @return {Boolean}
      @private
    */
    isEmpty: function () {
      return this.size === 0;
    },

    /**
      @method has
      @param obj
      @return {Boolean}
      @private
    */
    has: function (obj) {
      if (this.size === 0) {
        return false;
      }

      var guid = emberUtils.guidFor(obj);
      var presenceSet = this.presenceSet;

      return presenceSet[guid] === true;
    },

    /**
      @method forEach
      @param {Function} fn
      @param self
      @private
    */
    forEach: function (fn /*, ...thisArg*/) {
      if (typeof fn !== 'function') {
        missingFunction(fn);
      }

      if (this.size === 0) {
        return;
      }

      var list = this.list;

      if (arguments.length === 2) {
        for (var i = 0; i < list.length; i++) {
          fn.call(arguments[1], list[i]);
        }
      } else {
        for (var _i = 0; _i < list.length; _i++) {
          fn(list[_i]);
        }
      }
    },

    /**
      @method toArray
      @return {Array}
      @private
    */
    toArray: function () {
      return this.list.slice();
    },

    /**
      @method copy
      @return {Ember.OrderedSet}
      @private
    */
    copy: function () {
      var Constructor = this.constructor;
      var set = new Constructor();

      set.presenceSet = copyNull(this.presenceSet);
      set.list = this.toArray();
      set.size = this.size;

      return set;
    }
  };

  /**
    A Map stores values indexed by keys. Unlike JavaScript's
    default Objects, the keys of a Map can be any JavaScript
    object.
  
    Internally, a Map has two data structures:
  
    1. `keys`: an OrderedSet of all of the existing keys
    2. `values`: a JavaScript Object indexed by the `guidFor(key)`
  
    When a key/value pair is added for the first time, we
    add the key to the `keys` OrderedSet, and create or
    replace an entry in `values`. When an entry is deleted,
    we delete its entry in `keys` and `values`.
  
    @class Map
    @namespace Ember
    @private
    @constructor
  */
  function Map() {
    if (this instanceof Map) {
      this._keys = OrderedSet.create();
      this._values = Object.create(null);
      this.size = 0;
    } else {
      missingNew('Map');
    }
  }

  /**
    @method create
    @static
    @private
  */
  Map.create = function () {
    var Constructor = this;
    return new Constructor();
  };

  Map.prototype = {
    constructor: Map,

    /**
      This property will change as the number of objects in the map changes.
       @since 1.8.0
      @property size
      @type number
      @default 0
      @private
    */
    size: 0,

    /**
      Retrieve the value associated with a given key.
       @method get
      @param {*} key
      @return {*} the value associated with the key, or `undefined`
      @private
    */
    get: function (key) {
      if (this.size === 0) {
        return;
      }

      var values = this._values;
      var guid = emberUtils.guidFor(key);

      return values[guid];
    },

    /**
      Adds a value to the map. If a value for the given key has already been
      provided, the new value will replace the old value.
       @method set
      @param {*} key
      @param {*} value
      @return {Ember.Map}
      @private
    */
    set: function (key, value) {
      var keys = this._keys;
      var values = this._values;
      var guid = emberUtils.guidFor(key);

      // ensure we don't store -0
      var k = key === -0 ? 0 : key;

      keys.add(k, guid);

      values[guid] = value;

      this.size = keys.size;

      return this;
    },

    /**
      Removes a value from the map for an associated key.
       @since 1.8.0
      @method delete
      @param {*} key
      @return {Boolean} true if an item was removed, false otherwise
      @private
    */
    delete: function (key) {
      if (this.size === 0) {
        return false;
      }
      // don't use ES6 "delete" because it will be annoying
      // to use in browsers that are not ES6 friendly;
      var keys = this._keys;
      var values = this._values;
      var guid = emberUtils.guidFor(key);

      if (keys.delete(key, guid)) {
        delete values[guid];
        this.size = keys.size;
        return true;
      } else {
        return false;
      }
    },

    /**
      Check whether a key is present.
       @method has
      @param {*} key
      @return {Boolean} true if the item was present, false otherwise
      @private
    */
    has: function (key) {
      return this._keys.has(key);
    },

    /**
      Iterate over all the keys and values. Calls the function once
      for each key, passing in value, key, and the map being iterated over,
      in that order.
       The keys are guaranteed to be iterated over in insertion order.
       @method forEach
      @param {Function} callback
      @param {*} self if passed, the `this` value inside the
        callback. By default, `this` is the map.
      @private
    */
    forEach: function (callback /*, ...thisArg*/) {
      if (typeof callback !== 'function') {
        missingFunction(callback);
      }

      if (this.size === 0) {
        return;
      }

      var map = this;
      var cb = void 0,
          thisArg = void 0;

      if (arguments.length === 2) {
        thisArg = arguments[1];
        cb = function (key) {
          return callback.call(thisArg, map.get(key), key, map);
        };
      } else {
        cb = function (key) {
          return callback(map.get(key), key, map);
        };
      }

      this._keys.forEach(cb);
    },

    /**
      @method clear
      @private
    */
    clear: function () {
      this._keys.clear();
      this._values = Object.create(null);
      this.size = 0;
    },

    /**
      @method copy
      @return {Ember.Map}
      @private
    */
    copy: function () {
      return copyMap(this, new Map());
    }
  };

  /**
    @class MapWithDefault
    @namespace Ember
    @extends Ember.Map
    @private
    @constructor
    @param [options]
      @param {*} [options.defaultValue]
  */
  function MapWithDefault(options) {
    this._super$constructor();
    this.defaultValue = options.defaultValue;
  }

  /**
    @method create
    @static
    @param [options]
      @param {*} [options.defaultValue]
    @return {Ember.MapWithDefault|Ember.Map} If options are passed, returns
      `MapWithDefault` otherwise returns `EmberMap`
    @private
  */
  MapWithDefault.create = function (options) {
    if (options) {
      return new MapWithDefault(options);
    } else {
      return new Map();
    }
  };

  MapWithDefault.prototype = Object.create(Map.prototype);
  MapWithDefault.prototype.constructor = MapWithDefault;
  MapWithDefault.prototype._super$constructor = Map;
  MapWithDefault.prototype._super$get = Map.prototype.get;

  /**
    Retrieve the value associated with a given key.
  
    @method get
    @param {*} key
    @return {*} the value associated with the key, or the default value
    @private
  */
  MapWithDefault.prototype.get = function (key) {
    var hasValue = this.has(key);

    if (hasValue) {
      return this._super$get(key);
    } else {
      var defaultValue = this.defaultValue(key);
      this.set(key, defaultValue);
      return defaultValue;
    }
  };

  /**
    @method copy
    @return {Ember.MapWithDefault}
    @private
  */
  MapWithDefault.prototype.copy = function () {
    var Constructor = this.constructor;
    return copyMap(this, new Constructor({
      defaultValue: this.defaultValue
    }));
  };

  /**
   @module @ember/object
  */

  /**
    To get multiple properties at once, call `getProperties`
    with an object followed by a list of strings or an array:
  
    ```javascript
    import { getProperties } from '@ember/object';
  
    getProperties(record, 'firstName', 'lastName', 'zipCode');
    // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }
    ```
  
    is equivalent to:
  
    ```javascript
    import { getProperties } from '@ember/object';
  
    getProperties(record, ['firstName', 'lastName', 'zipCode']);
    // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }
    ```
  
    @method getProperties
    @static
    @for @ember/object
    @param {Object} obj
    @param {String...|Array} list of keys to get
    @return {Object}
    @public
  */
  function getProperties(obj) {
    var ret = {};
    var propertyNames = arguments;
    var i = 1;

    if (arguments.length === 2 && Array.isArray(arguments[1])) {
      i = 0;
      propertyNames = arguments[1];
    }
    for (; i < propertyNames.length; i++) {
      ret[propertyNames[i]] = get(obj, propertyNames[i]);
    }
    return ret;
  }

  /**
   @module @ember/object
  */
  /**
    Set a list of properties on an object. These properties are set inside
    a single `beginPropertyChanges` and `endPropertyChanges` batch, so
    observers will be buffered.
  
    ```javascript
    let anObject = Ember.Object.create();
  
    anObject.setProperties({
      firstName: 'Stanley',
      lastName: 'Stuart',
      age: 21
    });
    ```
  
    @method setProperties
    @static
    @for @ember/object
    @param obj
    @param {Object} properties
    @return properties
    @public
  */
  function setProperties(obj, properties) {
    if (!properties || typeof properties !== 'object') {
      return properties;
    }
    changeProperties(function () {
      var props = Object.keys(properties);
      var propertyName = void 0;

      for (var i = 0; i < props.length; i++) {
        propertyName = props[i];

        set(obj, propertyName, properties[propertyName]);
      }
    });
    return properties;
  }

  /**
  @module @ember/object
  */

  var AFTER_OBSERVERS = ':change';
  var BEFORE_OBSERVERS = ':before';

  function changeEvent(keyName) {
    return keyName + AFTER_OBSERVERS;
  }

  function beforeEvent(keyName) {
    return keyName + BEFORE_OBSERVERS;
  }

  /**
    @method addObserver
    @static
    @for @ember/object/observers
    @param obj
    @param {String} _path
    @param {Object|Function} target
    @param {Function|String} [method]
    @public
  */
  function addObserver(obj, _path, target, method) {
    addListener(obj, changeEvent(_path), target, method);
    watch(obj, _path);

    return this;
  }

  function observersFor(obj, path) {
    return listenersFor(obj, changeEvent(path));
  }

  /**
    @method removeObserver
    @static
    @for @ember/object/observers
    @param obj
    @param {String} path
    @param {Object|Function} target
    @param {Function|String} [method]
    @public
  */
  function removeObserver(obj, path, target, method) {
    unwatch(obj, path);
    removeListener(obj, changeEvent(path), target, method);

    return this;
  }

  /**
    @method _addBeforeObserver
    @static
    @for @ember/object/observers
    @param obj
    @param {String} path
    @param {Object|Function} target
    @param {Function|String} [method]
    @deprecated
    @private
  */
  function _addBeforeObserver(obj, path, target, method) {
    addListener(obj, beforeEvent(path), target, method);
    watch(obj, path);

    return this;
  }

  // Suspend observer during callback.
  //
  // This should only be used by the target of the observer
  // while it is setting the observed path.
  function _suspendObserver(obj, path, target, method, callback) {
    return suspendListener(obj, changeEvent(path), target, method, callback);
  }

  function _suspendObservers(obj, paths, target, method, callback) {
    var events = paths.map(changeEvent);
    return suspendListeners(obj, events, target, method, callback);
  }

  /**
    @method removeBeforeObserver
    @static
    @for @ember/object/observers
    @param obj
    @param {String} path
    @param {Object|Function} target
    @param {Function|String} [method]
    @deprecated
    @private
  */
  function _removeBeforeObserver(obj, path, target, method) {
    unwatch(obj, path);
    removeListener(obj, beforeEvent(path), target, method);

    return this;
  }

  /**
  @module ember
  */

  // ..........................................................
  // BINDING
  //

  var Binding = function () {
    function Binding(toPath, fromPath) {
      emberBabel.classCallCheck(this, Binding);

      // Configuration
      this._from = fromPath;
      this._to = toPath;
      this._oneWay = undefined;

      // State
      this._direction = undefined;
      this._readyToSync = undefined;
      this._fromObj = undefined;
      this._fromPath = undefined;
      this._toObj = undefined;
    }

    /**
      @class Binding
      @namespace Ember
      @deprecated See https://emberjs.com/deprecations/v2.x#toc_ember-binding
      @public
    */

    /**
      This copies the Binding so it can be connected to another object.
       @method copy
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.copy = function copy() {
      var copy = new Binding(this._to, this._from);
      if (this._oneWay) {
        copy._oneWay = true;
      }
      return copy;
    };

    // ..........................................................
    // CONFIG
    //

    /**
      This will set `from` property path to the specified value. It will not
      attempt to resolve this property path to an actual object until you
      connect the binding.
       The binding will search for the property path starting at the root object
      you pass when you `connect()` the binding. It follows the same rules as
      `get()` - see that method for more information.
       @method from
      @param {String} path The property path to connect to.
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.from = function from(path) {
      this._from = path;
      return this;
    };

    /**
      This will set the `to` property path to the specified value. It will not
      attempt to resolve this property path to an actual object until you
      connect the binding.
       The binding will search for the property path starting at the root object
      you pass when you `connect()` the binding. It follows the same rules as
      `get()` - see that method for more information.
       @method to
      @param {String|Tuple} path A property path or tuple.
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.to = function to(path) {
      this._to = path;
      return this;
    };

    /**
      Configures the binding as one way. A one-way binding will relay changes
      on the `from` side to the `to` side, but not the other way around. This
      means that if you change the `to` side directly, the `from` side may have
      a different value.
       @method oneWay
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.oneWay = function oneWay() {
      this._oneWay = true;
      return this;
    };

    /**
      @method toString
      @return {String} string representation of binding
      @public
    */

    Binding.prototype.toString = function toString$$1() {
      var oneWay = this._oneWay ? '[oneWay]' : '';
      return 'Ember.Binding<' + emberUtils.guidFor(this) + '>(' + this._from + ' -> ' + this._to + ')' + oneWay;
    };

    // ..........................................................
    // CONNECT AND SYNC
    //

    /**
      Attempts to connect this binding instance so that it can receive and relay
      changes. This method will raise an exception if you have not set the
      from/to properties yet.
       @method connect
      @param {Object} obj The root object for this binding.
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.connect = function connect(obj) {
      true && !!!obj && emberDebug.assert('Must pass a valid object to Ember.Binding.connect()', !!obj);

      var fromObj = void 0,
          fromPath = void 0,
          possibleGlobal = void 0;

      // If the binding's "from" path could be interpreted as a global, verify
      // whether the path refers to a global or not by consulting `Ember.lookup`.
      if (isGlobalPath(this._from)) {
        var name = getFirstKey(this._from);
        possibleGlobal = emberEnvironment.context.lookup[name];

        if (possibleGlobal) {
          fromObj = possibleGlobal;
          fromPath = getTailPath(this._from);
        }
      }

      if (fromObj === undefined) {
        fromObj = obj;
        fromPath = this._from;
      }

      trySet(obj, this._to, get(fromObj, fromPath));

      // Add an observer on the object to be notified when the binding should be updated.
      addObserver(fromObj, fromPath, this, 'fromDidChange');

      // If the binding is a two-way binding, also set up an observer on the target.
      if (!this._oneWay) {
        addObserver(obj, this._to, this, 'toDidChange');
      }

      addListener(obj, 'willDestroy', this, 'disconnect');

      fireDeprecations(obj, this._to, this._from, possibleGlobal, this._oneWay, !possibleGlobal && !this._oneWay);

      this._readyToSync = true;
      this._fromObj = fromObj;
      this._fromPath = fromPath;
      this._toObj = obj;

      return this;
    };

    /**
      Disconnects the binding instance. Changes will no longer be relayed. You
      will not usually need to call this method.
       @method disconnect
      @return {Ember.Binding} `this`
      @public
    */

    Binding.prototype.disconnect = function disconnect() {
      true && !!!this._toObj && emberDebug.assert('Must pass a valid object to Ember.Binding.disconnect()', !!this._toObj);

      // Remove an observer on the object so we're no longer notified of
      // changes that should update bindings.

      removeObserver(this._fromObj, this._fromPath, this, 'fromDidChange');

      // If the binding is two-way, remove the observer from the target as well.
      if (!this._oneWay) {
        removeObserver(this._toObj, this._to, this, 'toDidChange');
      }

      this._readyToSync = false; // Disable scheduled syncs...
      return this;
    };

    // ..........................................................
    // PRIVATE
    //

    /* Called when the from side changes. */

    Binding.prototype.fromDidChange = function fromDidChange(target) {
      this._scheduleSync('fwd');
    };

    /* Called when the to side changes. */

    Binding.prototype.toDidChange = function toDidChange(target) {
      this._scheduleSync('back');
    };

    Binding.prototype._scheduleSync = function _scheduleSync(dir) {
      var existingDir = this._direction;

      // If we haven't scheduled the binding yet, schedule it.
      if (existingDir === undefined) {
        run.schedule('sync', this, '_sync');
        this._direction = dir;
      }

      // If both a 'back' and 'fwd' sync have been scheduled on the same object,
      // default to a 'fwd' sync so that it remains deterministic.
      if (existingDir === 'back' && dir === 'fwd') {
        this._direction = 'fwd';
      }
    };

    Binding.prototype._sync = function _sync() {
      var log = emberEnvironment.ENV.LOG_BINDINGS;

      var toObj = this._toObj;

      // Don't synchronize destroyed objects or disconnected bindings.
      if (toObj.isDestroyed || !this._readyToSync) {
        return;
      }

      // Get the direction of the binding for the object we are
      // synchronizing from.
      var direction = this._direction;

      var fromObj = this._fromObj;
      var fromPath = this._fromPath;

      this._direction = undefined;

      // If we're synchronizing from the remote object...
      if (direction === 'fwd') {
        var fromValue = get(fromObj, fromPath);
        if (log) {
          Logger.log(' ', this.toString(), '->', fromValue, fromObj);
        }
        if (this._oneWay) {
          trySet(toObj, this._to, fromValue);
        } else {
          _suspendObserver(toObj, this._to, this, 'toDidChange', function () {
            trySet(toObj, this._to, fromValue);
          });
        }
        // If we're synchronizing *to* the remote object.
      } else if (direction === 'back') {
        var toValue = get(toObj, this._to);
        if (log) {
          Logger.log(' ', this.toString(), '<-', toValue, toObj);
        }
        _suspendObserver(fromObj, fromPath, this, 'fromDidChange', function () {
          trySet(fromObj, fromPath, toValue);
        });
      }
    };

    return Binding;
  }();

  function fireDeprecations(obj, toPath, fromPath, deprecateGlobal, deprecateOneWay, deprecateAlias) {
    var deprecateGlobalMessage = '`Ember.Binding` is deprecated. Since you' + ' are binding to a global consider using a service instead.';
    var deprecateOneWayMessage = '`Ember.Binding` is deprecated. Since you' + ' are using a `oneWay` binding consider using a `readOnly` computed' + ' property instead.';
    var deprecateAliasMessage = '`Ember.Binding` is deprecated. Consider' + ' using an `alias` computed property instead.';

    var objectInfo = 'The `' + toPath + '` property of `' + obj + '` is an `Ember.Binding` connected to `' + fromPath + '`, but ';
    true && !!deprecateGlobal && emberDebug.deprecate(objectInfo + deprecateGlobalMessage, !deprecateGlobal, {
      id: 'ember-metal.binding',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_ember-binding'
    });
    true && !!deprecateOneWay && emberDebug.deprecate(objectInfo + deprecateOneWayMessage, !deprecateOneWay, {
      id: 'ember-metal.binding',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_ember-binding'
    });
    true && !!deprecateAlias && emberDebug.deprecate(objectInfo + deprecateAliasMessage, !deprecateAlias, {
      id: 'ember-metal.binding',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_ember-binding'
    });
  }

  function mixinProperties$1(to, from) {
    for (var key in from) {
      if (from.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }

  mixinProperties$1(Binding, {

    /*
      See `Ember.Binding.from`.
       @method from
      @static
    */
    from: function (from) {
      var C = this;
      return new C(undefined, from);
    },

    /*
      See `Ember.Binding.to`.
       @method to
      @static
    */
    to: function (to) {
      var C = this;
      return new C(to, undefined);
    }
  });
  /**
    An `Ember.Binding` connects the properties of two objects so that whenever
    the value of one property changes, the other property will be changed also.
  
    ## Automatic Creation of Bindings with `/^*Binding/`-named Properties.
  
    You do not usually create Binding objects directly but instead describe
    bindings in your class or object definition using automatic binding
    detection.
  
    Properties ending in a `Binding` suffix will be converted to `Ember.Binding`
    instances. The value of this property should be a string representing a path
    to another object or a custom binding instance created using Binding helpers
    (see "One Way Bindings"):
  
    ```
    valueBinding: "MyApp.someController.title"
    ```
  
    This will create a binding from `MyApp.someController.title` to the `value`
    property of your object instance automatically. Now the two values will be
    kept in sync.
  
    ## One Way Bindings
  
    One especially useful binding customization you can use is the `oneWay()`
    helper. This helper tells Ember that you are only interested in
    receiving changes on the object you are binding from. For example, if you
    are binding to a preference and you want to be notified if the preference
    has changed, but your object will not be changing the preference itself, you
    could do:
  
    ```
    bigTitlesBinding: Ember.Binding.oneWay("MyApp.preferencesController.bigTitles")
    ```
  
    This way if the value of `MyApp.preferencesController.bigTitles` changes the
    `bigTitles` property of your object will change also. However, if you
    change the value of your `bigTitles` property, it will not update the
    `preferencesController`.
  
    One way bindings are almost twice as fast to setup and twice as fast to
    execute because the binding only has to worry about changes to one side.
  
    You should consider using one way bindings anytime you have an object that
    may be created frequently and you do not intend to change a property; only
    to monitor it for changes (such as in the example above).
  
    ## Adding Bindings Manually
  
    All of the examples above show you how to configure a custom binding, but the
    result of these customizations will be a binding template, not a fully active
    Binding instance. The binding will actually become active only when you
    instantiate the object the binding belongs to. It is useful, however, to
    understand what actually happens when the binding is activated.
  
    For a binding to function it must have at least a `from` property and a `to`
    property. The `from` property path points to the object/key that you want to
    bind from while the `to` path points to the object/key you want to bind to.
  
    When you define a custom binding, you are usually describing the property
    you want to bind from (such as `MyApp.someController.value` in the examples
    above). When your object is created, it will automatically assign the value
    you want to bind `to` based on the name of your binding key. In the
    examples above, during init, Ember objects will effectively call
    something like this on your binding:
  
    ```javascript
    binding = Ember.Binding.from("valueBinding").to("value");
    ```
  
    This creates a new binding instance based on the template you provide, and
    sets the to path to the `value` property of the new object. Now that the
    binding is fully configured with a `from` and a `to`, it simply needs to be
    connected to become active. This is done through the `connect()` method:
  
    ```javascript
    binding.connect(this);
    ```
  
    Note that when you connect a binding you pass the object you want it to be
    connected to. This object will be used as the root for both the from and
    to side of the binding when inspecting relative paths. This allows the
    binding to be automatically inherited by subclassed objects as well.
  
    This also allows you to bind between objects using the paths you declare in
    `from` and `to`:
  
    ```javascript
    // Example 1
    binding = Ember.Binding.from("App.someObject.value").to("value");
    binding.connect(this);
  
    // Example 2
    binding = Ember.Binding.from("parentView.value").to("App.someObject.value");
    binding.connect(this);
    ```
  
    Now that the binding is connected, it will observe both the from and to side
    and relay changes.
  
    If you ever needed to do so (you almost never will, but it is useful to
    understand this anyway), you could manually create an active binding by
    using the `Ember.bind()` helper method. (This is the same method used by
    to setup your bindings on objects):
  
    ```javascript
    Ember.bind(MyApp.anotherObject, "value", "MyApp.someController.value");
    ```
  
    Both of these code fragments have the same effect as doing the most friendly
    form of binding creation like so:
  
    ```javascript
    MyApp.anotherObject = Ember.Object.create({
      valueBinding: "MyApp.someController.value",
  
      // OTHER CODE FOR THIS OBJECT...
    });
    ```
  
    Ember's built in binding creation method makes it easy to automatically
    create bindings for you. You should always use the highest-level APIs
    available, even if you understand how it works underneath.
  
    @class Binding
    @namespace Ember
    @since Ember 0.9
    @public
  */
  // Ember.Binding = Binding; ES6TODO: where to put this?


  /**
    Global helper method to create a new binding. Just pass the root object
    along with a `to` and `from` path to create and connect the binding.
  
    @method bind
    @for Ember
    @param {Object} obj The root object of the transform.
    @param {String} to The path to the 'to' side of the binding.
      Must be relative to obj.
    @param {String} from The path to the 'from' side of the binding.
      Must be relative to obj or a global path.
    @return {Ember.Binding} binding instance
    @public
  */
  function bind(obj, to, from) {
    return new Binding(to, from).connect(obj);
  }

  /**
  @module @ember/object
  */
  var a_concat = Array.prototype.concat;
  var isArray = Array.isArray;

  function isMethod(obj) {
    return 'function' === typeof obj && obj.isMethod !== false && obj !== Boolean && obj !== Object && obj !== Number && obj !== Array && obj !== Date && obj !== String;
  }

  var CONTINUE = {};

  function mixinProperties(mixinsMeta, mixin) {
    var guid = void 0;

    if (mixin instanceof Mixin) {
      guid = emberUtils.guidFor(mixin);
      if (mixinsMeta.peekMixins(guid)) {
        return CONTINUE;
      }
      mixinsMeta.writeMixins(guid, mixin);
      return mixin.properties;
    } else {
      return mixin; // apply anonymous mixin properties
    }
  }

  function concatenatedMixinProperties(concatProp, props, values, base) {
    // reset before adding each new mixin to pickup concats from previous
    var concats = values[concatProp] || base[concatProp];
    if (props[concatProp]) {
      concats = concats ? a_concat.call(concats, props[concatProp]) : props[concatProp];
    }
    return concats;
  }

  function giveDescriptorSuper(meta$$1, key, property, values, descs, base) {
    var superProperty = void 0;

    // Computed properties override methods, and do not call super to them
    if (values[key] === undefined) {
      // Find the original descriptor in a parent mixin
      superProperty = descs[key];
    }

    // If we didn't find the original descriptor in a parent mixin, find
    // it on the original object.
    if (!superProperty) {
      var possibleDesc = base[key];
      var superDesc = possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor ? possibleDesc : undefined;

      superProperty = superDesc;
    }

    if (superProperty === undefined || !(superProperty instanceof ComputedProperty)) {
      return property;
    }

    // Since multiple mixins may inherit from the same parent, we need
    // to clone the computed property so that other mixins do not receive
    // the wrapped version.
    property = Object.create(property);
    property._getter = emberUtils.wrap(property._getter, superProperty._getter);
    if (superProperty._setter) {
      if (property._setter) {
        property._setter = emberUtils.wrap(property._setter, superProperty._setter);
      } else {
        property._setter = superProperty._setter;
      }
    }

    return property;
  }

  function giveMethodSuper(obj, key, method, values, descs) {
    var superMethod = void 0;

    // Methods overwrite computed properties, and do not call super to them.
    if (descs[key] === undefined) {
      // Find the original method in a parent mixin
      superMethod = values[key];
    }

    // If we didn't find the original value in a parent mixin, find it in
    // the original object
    superMethod = superMethod || obj[key];

    // Only wrap the new method if the original method was a function
    if (superMethod === undefined || 'function' !== typeof superMethod) {
      return method;
    }

    return emberUtils.wrap(method, superMethod);
  }

  function applyConcatenatedProperties(obj, key, value, values) {
    var baseValue = values[key] || obj[key];
    var ret = void 0;

    if (baseValue === null || baseValue === undefined) {
      ret = emberUtils.makeArray(value);
    } else if (isArray(baseValue)) {
      if (value === null || value === undefined) {
        ret = baseValue;
      } else {
        ret = a_concat.call(baseValue, value);
      }
    } else {
      ret = a_concat.call(emberUtils.makeArray(baseValue), value);
    }

    {
      // it is possible to use concatenatedProperties with strings (which cannot be frozen)
      // only freeze objects...
      if (typeof ret === 'object' && ret !== null) {
        // prevent mutating `concatenatedProperties` array after it is applied
        Object.freeze(ret);
      }
    }

    return ret;
  }

  function applyMergedProperties(obj, key, value, values) {
    var baseValue = values[key] || obj[key];

    {
      if (isArray(value)) {
        // use conditional to avoid stringifying every time
        true && !false && emberDebug.assert('You passed in `' + JSON.stringify(value) + '` as the value for `' + key + '` but `' + key + '` cannot be an Array', false);
      }
    }

    if (!baseValue) {
      return value;
    }

    var newBase = emberUtils.assign({}, baseValue);
    var hasFunction = false;

    for (var prop in value) {
      if (!value.hasOwnProperty(prop)) {
        continue;
      }

      var propValue = value[prop];
      if (isMethod(propValue)) {
        // TODO: support for Computed Properties, etc?
        hasFunction = true;
        newBase[prop] = giveMethodSuper(obj, prop, propValue, baseValue, {});
      } else {
        newBase[prop] = propValue;
      }
    }

    if (hasFunction) {
      newBase._super = emberUtils.ROOT;
    }

    return newBase;
  }

  function addNormalizedProperty(base, key, value, meta$$1, descs, values, concats, mergings) {
    if (value instanceof Descriptor) {
      if (value === REQUIRED && descs[key]) {
        return CONTINUE;
      }

      // Wrap descriptor function to implement
      // _super() if needed
      if (value._getter) {
        value = giveDescriptorSuper(meta$$1, key, value, values, descs, base);
      }

      descs[key] = value;
      values[key] = undefined;
    } else {
      if (concats && concats.indexOf(key) >= 0 || key === 'concatenatedProperties' || key === 'mergedProperties') {
        value = applyConcatenatedProperties(base, key, value, values);
      } else if (mergings && mergings.indexOf(key) > -1) {
        value = applyMergedProperties(base, key, value, values);
      } else if (isMethod(value)) {
        value = giveMethodSuper(base, key, value, values, descs);
      }

      descs[key] = undefined;
      values[key] = value;
    }
  }

  function mergeMixins(mixins, meta$$1, descs, values, base, keys) {
    var currentMixin = void 0,
        props = void 0,
        key = void 0,
        concats = void 0,
        mergings = void 0;

    function removeKeys(keyName) {
      delete descs[keyName];
      delete values[keyName];
    }

    for (var i = 0; i < mixins.length; i++) {
      currentMixin = mixins[i];
      true && !(typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]') && emberDebug.assert('Expected hash or Mixin instance, got ' + Object.prototype.toString.call(currentMixin), typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]');

      props = mixinProperties(meta$$1, currentMixin);
      if (props === CONTINUE) {
        continue;
      }

      if (props) {
        if (base.willMergeMixin) {
          base.willMergeMixin(props);
        }
        concats = concatenatedMixinProperties('concatenatedProperties', props, values, base);
        mergings = concatenatedMixinProperties('mergedProperties', props, values, base);

        for (key in props) {
          if (!props.hasOwnProperty(key)) {
            continue;
          }
          keys.push(key);
          addNormalizedProperty(base, key, props[key], meta$$1, descs, values, concats, mergings);
        }

        // manually copy toString() because some JS engines do not enumerate it
        if (props.hasOwnProperty('toString')) {
          base.toString = props.toString;
        }
      } else if (currentMixin.mixins) {
        mergeMixins(currentMixin.mixins, meta$$1, descs, values, base, keys);
        if (currentMixin._without) {
          currentMixin._without.forEach(removeKeys);
        }
      }
    }
  }

  function detectBinding(key) {
    var length = key.length;

    return length > 7 && key.charCodeAt(length - 7) === 66 && key.indexOf('inding', length - 6) !== -1;
  }
  // warm both paths of above function
  detectBinding('notbound');
  detectBinding('fooBinding');

  function connectBindings(obj, meta$$1) {
    // TODO Mixin.apply(instance) should disconnect binding if exists
    meta$$1.forEachBindings(function (key, binding) {
      if (binding) {
        var to = key.slice(0, -7); // strip Binding off end
        if (binding instanceof Binding) {
          binding = binding.copy(); // copy prototypes' instance
          binding.to(to);
        } else {
          // binding is string path
          binding = new Binding(to, binding);
        }
        binding.connect(obj);
        obj[key] = binding;
      }
    });
    // mark as applied
    meta$$1.clearBindings();
  }

  function finishPartial(obj, meta$$1) {
    connectBindings(obj, meta$$1 || meta(obj));
    return obj;
  }

  function followAlias(obj, desc, descs, values) {
    var altKey = desc.methodName;
    var value = void 0;
    var possibleDesc = void 0;
    if (descs[altKey] || values[altKey]) {
      value = values[altKey];
      desc = descs[altKey];
    } else if ((possibleDesc = obj[altKey]) && possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor) {
      desc = possibleDesc;
      value = undefined;
    } else {
      desc = undefined;
      value = obj[altKey];
    }

    return { desc: desc, value: value };
  }

  function updateObserversAndListeners(obj, key, paths, updateMethod) {
    if (paths) {
      for (var i = 0; i < paths.length; i++) {
        updateMethod(obj, paths[i], null, key);
      }
    }
  }

  function replaceObserversAndListeners(obj, key, observerOrListener) {
    var prev = obj[key];

    if (typeof prev === 'function') {
      updateObserversAndListeners(obj, key, prev.__ember_observesBefore__, _removeBeforeObserver);
      updateObserversAndListeners(obj, key, prev.__ember_observes__, removeObserver);
      updateObserversAndListeners(obj, key, prev.__ember_listens__, removeListener);
    }

    if (typeof observerOrListener === 'function') {
      updateObserversAndListeners(obj, key, observerOrListener.__ember_observesBefore__, _addBeforeObserver);
      updateObserversAndListeners(obj, key, observerOrListener.__ember_observes__, addObserver);
      updateObserversAndListeners(obj, key, observerOrListener.__ember_listens__, addListener);
    }
  }

  function applyMixin(obj, mixins, partial) {
    var descs = {};
    var values = {};
    var meta$$1 = meta(obj);
    var keys = [];
    var key = void 0,
        value = void 0,
        desc = void 0;

    obj._super = emberUtils.ROOT;

    // Go through all mixins and hashes passed in, and:
    //
    // * Handle concatenated properties
    // * Handle merged properties
    // * Set up _super wrapping if necessary
    // * Set up computed property descriptors
    // * Copying `toString` in broken browsers
    mergeMixins(mixins, meta$$1, descs, values, obj, keys);

    for (var i = 0; i < keys.length; i++) {
      key = keys[i];
      if (key === 'constructor' || !values.hasOwnProperty(key)) {
        continue;
      }

      desc = descs[key];
      value = values[key];

      if (desc === REQUIRED) {
        continue;
      }

      while (desc && desc instanceof Alias) {
        var followed = followAlias(obj, desc, descs, values);
        desc = followed.desc;
        value = followed.value;
      }

      if (desc === undefined && value === undefined) {
        continue;
      }

      replaceObserversAndListeners(obj, key, value);

      if (detectBinding(key)) {
        meta$$1.writeBindings(key, value);
      }

      defineProperty(obj, key, desc, value, meta$$1);
    }

    if (!partial) {
      // don't apply to prototype
      finishPartial(obj, meta$$1);
    }

    return obj;
  }

  /**
    @method mixin
    @param obj
    @param mixins*
    @return obj
    @private
  */
  function mixin(obj) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    applyMixin(obj, args, false);
    return obj;
  }

  /**
    The `Mixin` class allows you to create mixins, whose properties can be
    added to other classes. For instance,
  
    ```javascript
    import Mixin from '@ember/object/mixin';
  
    const EditableMixin = Mixin.create({
      edit() {
        console.log('starting to edit');
        this.set('isEditing', true);
      },
      isEditing: false
    });
    ```
  
    ```javascript
    import EmberObject from '@ember/object';
    import EditableMixin from '../mixins/editable';
  
    // Mix mixins into classes by passing them as the first arguments to
    // `.extend.`
    const Comment = EmberObject.extend(EditableMixin, {
      post: null
    });
  
    let comment = Comment.create({
      post: somePost
    });
  
    comment.edit(); // outputs 'starting to edit'
    ```
  
    Note that Mixins are created with `Mixin.create`, not
    `Mixin.extend`.
  
    Note that mixins extend a constructor's prototype so arrays and object literals
    defined as properties will be shared amongst objects that implement the mixin.
    If you want to define a property in a mixin that is not shared, you can define
    it either as a computed property or have it be created on initialization of the object.
  
    ```javascript
    // filters array will be shared amongst any object implementing mixin
    import Mixin from '@ember/object/mixin';
    import { A } from '@ember/array';
  
    const FilterableMixin = Mixin.create({
      filters: A()
    });
    ```
  
    ```javascript
    import Mixin from '@ember/object/mixin';
    import { A } from '@ember/array';
    import { computed } from '@ember/object';
  
    // filters will be a separate array for every object implementing the mixin
    const FilterableMixin = Mixin.create({
      filters: computed(function() {
        return A();
      })
    });
    ```
  
    ```javascript
    import Mixin from '@ember/object/mixin';
    import { A } from '@ember/array';
  
    // filters will be created as a separate array during the object's initialization
    const Filterable = Mixin.create({
      filters: null,
  
      init() {
        this._super(...arguments);
        this.set("filters", A());
      }
    });
    ```
  
    @class Mixin
    @public
  */

  var Mixin = function () {
    function Mixin(mixins, properties) {
      emberBabel.classCallCheck(this, Mixin);

      this.properties = properties;

      var length = mixins && mixins.length;

      if (length > 0) {
        var m = new Array(length);

        for (var i = 0; i < length; i++) {
          var x = mixins[i];
          if (x instanceof Mixin) {
            m[i] = x;
          } else {
            m[i] = new Mixin(undefined, x);
          }
        }

        this.mixins = m;
      } else {
        this.mixins = undefined;
      }
      this.ownerConstructor = undefined;
      this._without = undefined;
      this[emberUtils.GUID_KEY] = null;
      this[emberUtils.NAME_KEY] = null;
      emberDebug.debugSeal(this);
    }

    Mixin.applyPartial = function applyPartial(obj) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      return applyMixin(obj, args, true);
    };

    /**
      @method create
      @for @ember/object/mixin
      @static
      @param arguments*
      @public
    */

    Mixin.create = function create() {
      // ES6TODO: this relies on a global state?
      unprocessedFlag = true;
      var M = this;

      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return new M(args, undefined);
    };

    // returns the mixins currently applied to the specified object
    // TODO: Make `mixin`


    Mixin.mixins = function mixins(obj) {
      var meta$$1 = exports.peekMeta(obj);
      var ret = [];
      if (meta$$1 === undefined) {
        return ret;
      }

      meta$$1.forEachMixins(function (key, currentMixin) {
        // skip primitive mixins since these are always anonymous
        if (!currentMixin.properties) {
          ret.push(currentMixin);
        }
      });

      return ret;
    };

    return Mixin;
  }();

  Mixin._apply = applyMixin;

  Mixin.finishPartial = finishPartial;

  var unprocessedFlag = false;

  function hasUnprocessedMixins() {
    return unprocessedFlag;
  }

  function clearUnprocessedMixins() {
    unprocessedFlag = false;
  }

  var MixinPrototype = Mixin.prototype;

  /**
    @method reopen
    @param arguments*
    @private
  */
  MixinPrototype.reopen = function () {
    var currentMixin = void 0;

    if (this.properties) {
      currentMixin = new Mixin(undefined, this.properties);
      this.properties = undefined;
      this.mixins = [currentMixin];
    } else if (!this.mixins) {
      this.mixins = [];
    }

    var mixins = this.mixins;
    var idx = void 0;

    for (idx = 0; idx < arguments.length; idx++) {
      currentMixin = arguments[idx];
      true && !(typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]') && emberDebug.assert('Expected hash or Mixin instance, got ' + Object.prototype.toString.call(currentMixin), typeof currentMixin === 'object' && currentMixin !== null && Object.prototype.toString.call(currentMixin) !== '[object Array]');

      if (currentMixin instanceof Mixin) {
        mixins.push(currentMixin);
      } else {
        mixins.push(new Mixin(undefined, currentMixin));
      }
    }

    return this;
  };

  /**
    @method apply
    @param obj
    @return applied object
    @private
  */
  MixinPrototype.apply = function (obj) {
    return applyMixin(obj, [this], false);
  };

  MixinPrototype.applyPartial = function (obj) {
    return applyMixin(obj, [this], true);
  };

  MixinPrototype.toString = Object.toString;

  function _detect(curMixin, targetMixin, seen) {
    var guid = emberUtils.guidFor(curMixin);

    if (seen[guid]) {
      return false;
    }
    seen[guid] = true;

    if (curMixin === targetMixin) {
      return true;
    }
    var mixins = curMixin.mixins;
    var loc = mixins ? mixins.length : 0;
    while (--loc >= 0) {
      if (_detect(mixins[loc], targetMixin, seen)) {
        return true;
      }
    }
    return false;
  }

  /**
    @method detect
    @param obj
    @return {Boolean}
    @private
  */
  MixinPrototype.detect = function (obj) {
    if (typeof obj !== 'object' || obj === null) {
      return false;
    }
    if (obj instanceof Mixin) {
      return _detect(obj, this, {});
    }
    var meta$$1 = exports.peekMeta(obj);
    if (meta$$1 === undefined) {
      return false;
    }
    return !!meta$$1.peekMixins(emberUtils.guidFor(this));
  };

  MixinPrototype.without = function () {
    var ret = new Mixin([this]);

    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    ret._without = args;
    return ret;
  };

  function _keys(ret, mixin, seen) {
    if (seen[emberUtils.guidFor(mixin)]) {
      return;
    }
    seen[emberUtils.guidFor(mixin)] = true;

    if (mixin.properties) {
      var props = Object.keys(mixin.properties);
      for (var i = 0; i < props.length; i++) {
        var key = props[i];
        ret[key] = true;
      }
    } else if (mixin.mixins) {
      mixin.mixins.forEach(function (x) {
        return _keys(ret, x, seen);
      });
    }
  }

  MixinPrototype.keys = function () {
    var keys = {};
    var seen = {};

    _keys(keys, this, seen);
    var ret = Object.keys(keys);
    return ret;
  };

  emberDebug.debugSeal(MixinPrototype);

  var REQUIRED = new Descriptor();
  REQUIRED.toString = function () {
    return '(Required Property)';
  };

  /**
    Denotes a required property for a mixin
  
    @method required
    @for Ember
    @private
  */
  function required() {
    true && !false && emberDebug.deprecate('Ember.required is deprecated as its behavior is inconsistent and unreliable.', false, { id: 'ember-metal.required', until: '3.0.0' });

    return REQUIRED;
  }

  function Alias(methodName) {
    this.isDescriptor = true;
    this.methodName = methodName;
  }

  Alias.prototype = new Descriptor();

  /**
    Makes a method available via an additional name.
  
    ```app/utils/person.js
    import EmberObject, {
      aliasMethod
    } from '@ember/object';
  
    export default EmberObject.extend({
      name() {
        return 'Tomhuda Katzdale';
      },
      moniker: aliasMethod('name')
    });
    ```
  
    ```javascript
    let goodGuy = Person.create();
  
    goodGuy.name();    // 'Tomhuda Katzdale'
    goodGuy.moniker(); // 'Tomhuda Katzdale'
    ```
  
    @method aliasMethod
    @static
    @for @ember/object
    @param {String} methodName name of the method to alias
    @public
  */
  function aliasMethod(methodName) {
    return new Alias(methodName);
  }

  // ..........................................................
  // OBSERVER HELPER
  //

  /**
    Specify a method that observes property changes.
  
    ```javascript
    import EmberObject from '@ember/object';
    import { observer } from '@ember/object';
  
    export default EmberObject.extend({
      valueObserver: observer('value', function() {
        // Executes whenever the "value" property changes
      })
    });
    ```
  
    Also available as `Function.prototype.observes` if prototype extensions are
    enabled.
  
    @method observer
    @for @ember/object
    @param {String} propertyNames*
    @param {Function} func
    @return func
    @public
    @static
  */
  function observer() {
    var _paths = void 0,
        func = void 0;

    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    if (typeof args[args.length - 1] !== 'function') {
      // revert to old, soft-deprecated argument ordering
      true && !false && emberDebug.deprecate('Passing the dependentKeys after the callback function in observer is deprecated. Ensure the callback function is the last argument.', false, { id: 'ember-metal.observer-argument-order', until: '3.0.0' });

      func = args.shift();
      _paths = args;
    } else {
      func = args.pop();
      _paths = args;
    }

    true && !(typeof func === 'function') && emberDebug.assert('observer called without a function', typeof func === 'function');
    true && !(_paths.length > 0 && _paths.every(function (p) {
      return typeof p === 'string' && p.length;
    })) && emberDebug.assert('observer called without valid path', _paths.length > 0 && _paths.every(function (p) {
      return typeof p === 'string' && p.length;
    }));

    var paths = [];
    var addWatchedProperty = function (path) {
      return paths.push(path);
    };

    for (var i = 0; i < _paths.length; ++i) {
      expandProperties(_paths[i], addWatchedProperty);
    }

    func.__ember_observes__ = paths;
    return func;
  }

  /**
    Specify a method that observes property changes.
  
    ```javascript
    import EmberObject from '@ember/object';
  
    EmberObject.extend({
      valueObserver: Ember.immediateObserver('value', function() {
        // Executes whenever the "value" property changes
      })
    });
    ```
  
    In the future, `observer` may become asynchronous. In this event,
    `immediateObserver` will maintain the synchronous behavior.
  
    Also available as `Function.prototype.observesImmediately` if prototype extensions are
    enabled.
  
    @method _immediateObserver
    @for Ember
    @param {String} propertyNames*
    @param {Function} func
    @deprecated Use `observer` instead.
    @return func
    @private
  */
  function _immediateObserver() {
    true && !false && emberDebug.deprecate('Usage of `Ember.immediateObserver` is deprecated, use `observer` instead.', false, { id: 'ember-metal.immediate-observer', until: '3.0.0' });

    for (var i = 0; i < arguments.length; i++) {
      var arg = arguments[i];
      true && !(typeof arg !== 'string' || arg.indexOf('.') === -1) && emberDebug.assert('Immediate observers must observe internal properties only, not properties on other objects.', typeof arg !== 'string' || arg.indexOf('.') === -1);
    }

    return observer.apply(this, arguments);
  }

  /**
    When observers fire, they are called with the arguments `obj`, `keyName`.
  
    Note, `@each.property` observer is called per each add or replace of an element
    and it's not called with a specific enumeration item.
  
    A `_beforeObserver` fires before a property changes.
  
    @method beforeObserver
    @for Ember
    @param {String} propertyNames*
    @param {Function} func
    @return func
    @deprecated
    @private
  */
  function _beforeObserver() {
    for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }

    var func = args[args.length - 1];
    var paths = void 0;

    var addWatchedProperty = function (path) {
      paths.push(path);
    };

    var _paths = args.slice(0, -1);

    if (typeof func !== 'function') {
      // revert to old, soft-deprecated argument ordering

      func = args[0];
      _paths = args.slice(1);
    }

    paths = [];

    for (var i = 0; i < _paths.length; ++i) {
      expandProperties(_paths[i], addWatchedProperty);
    }

    if (typeof func !== 'function') {
      throw new emberDebug.EmberError('_beforeObserver called without a function');
    }

    func.__ember_observesBefore__ = paths;
    return func;
  }

  /**
   @module ember
   @private
   */

  /**
    Read-only property that returns the result of a container lookup.
  
    @class InjectedProperty
    @namespace Ember
    @constructor
    @param {String} type The container type the property will lookup
    @param {String} name (optional) The name the property will lookup, defaults
           to the property's name
    @private
  */
  function InjectedProperty(type, name) {
    this.type = type;
    this.name = name;

    this._super$Constructor(injectedPropertyGet);
    AliasedPropertyPrototype.oneWay.call(this);
  }

  function injectedPropertyGet(keyName) {
    var desc = this[keyName];
    var owner = emberUtils.getOwner(this) || this.container; // fallback to `container` for backwards compat

    true && !(desc && desc.isDescriptor && desc.type) && emberDebug.assert('InjectedProperties should be defined with the inject computed property macros.', desc && desc.isDescriptor && desc.type);
    true && !owner && emberDebug.assert('Attempting to lookup an injected property on an object without a container, ensure that the object was instantiated via a container.', owner);

    return owner.lookup(desc.type + ':' + (desc.name || keyName));
  }

  InjectedProperty.prototype = Object.create(Descriptor.prototype);

  var InjectedPropertyPrototype = InjectedProperty.prototype;
  var ComputedPropertyPrototype$1 = ComputedProperty.prototype;
  var AliasedPropertyPrototype = AliasedProperty.prototype;

  InjectedPropertyPrototype._super$Constructor = ComputedProperty;

  InjectedPropertyPrototype.get = ComputedPropertyPrototype$1.get;
  InjectedPropertyPrototype.readOnly = ComputedPropertyPrototype$1.readOnly;
  InjectedPropertyPrototype.teardown = ComputedPropertyPrototype$1.teardown;

  var splice = Array.prototype.splice;

  function replace(array, idx, amt, objects) {
    var args = [].concat(objects);
    var ret = [];
    // https://code.google.com/p/chromium/issues/detail?id=56588
    var size = 60000;
    var start = idx;
    var ends = amt;
    var count = void 0,
        chunk = void 0;

    while (args.length) {
      count = ends > size ? size : ends;
      if (count <= 0) {
        count = 0;
      }

      chunk = args.splice(0, size);
      chunk = [start, count].concat(chunk);

      start += size;
      ends -= count;

      ret = ret.concat(splice.apply(array, chunk));
    }
    return ret;
  }

  function isProxy(value) {
    if (typeof value === 'object' && value !== null) {
      var meta$$1 = exports.peekMeta(value);
      return meta$$1 === undefined ? false : meta$$1.isProxy();
    }

    return false;
  }

  function descriptor(desc) {
    return new Descriptor$1(desc);
  }

  /**
    A wrapper for a native ES5 descriptor. In an ideal world, we wouldn't need
    this at all, however, the way we currently flatten/merge our mixins require
    a special value to denote a descriptor.
  
    @class Descriptor
    @private
  */

  var Descriptor$1 = function (_EmberDescriptor) {
    emberBabel.inherits(Descriptor$$1, _EmberDescriptor);

    function Descriptor$$1(desc) {
      emberBabel.classCallCheck(this, Descriptor$$1);

      var _this = emberBabel.possibleConstructorReturn(this, _EmberDescriptor.call(this));

      _this.desc = desc;
      return _this;
    }

    Descriptor$$1.prototype.setup = function setup(obj, key) {
      Object.defineProperty(obj, key, this.desc);
    };

    Descriptor$$1.prototype.teardown = function teardown(obj, key) {};

    return Descriptor$$1;
  }(Descriptor);

  exports['default'] = Ember;
  exports.computed = computed;
  exports.cacheFor = cacheFor;
  exports.ComputedProperty = ComputedProperty;
  exports.alias = alias;
  exports.merge = merge;
  exports.deprecateProperty = deprecateProperty;
  exports.instrument = instrument;
  exports._instrumentStart = _instrumentStart;
  exports.instrumentationReset = reset;
  exports.instrumentationSubscribe = subscribe;
  exports.instrumentationUnsubscribe = unsubscribe;
  exports.getOnerror = getOnerror;
  exports.setOnerror = setOnerror;
  exports.dispatchError = dispatchError;
  exports.setDispatchOverride = setDispatchOverride;
  exports.getDispatchOverride = getDispatchOverride;
  exports.META_DESC = META_DESC;
  exports.meta = meta;
  exports.Cache = Cache;
  exports._getPath = _getPath;
  exports.get = get;
  exports.getWithDefault = getWithDefault;
  exports.set = set;
  exports.trySet = trySet;
  exports.WeakMap = weak_map;
  exports.WeakMapPolyfill = WeakMapPolyfill;
  exports.addListener = addListener;
  exports.hasListeners = hasListeners;
  exports.listenersFor = listenersFor;
  exports.on = on;
  exports.removeListener = removeListener;
  exports.sendEvent = sendEvent;
  exports.suspendListener = suspendListener;
  exports.suspendListeners = suspendListeners;
  exports.watchedEvents = watchedEvents;
  exports.isNone = isNone;
  exports.isEmpty = isEmpty;
  exports.isBlank = isBlank;
  exports.isPresent = isPresent;
  exports.run = run;
  exports.ObserverSet = ObserverSet;
  exports.beginPropertyChanges = beginPropertyChanges;
  exports.changeProperties = changeProperties;
  exports.endPropertyChanges = endPropertyChanges;
  exports.overrideChains = overrideChains;
  exports.propertyDidChange = propertyDidChange;
  exports.propertyWillChange = propertyWillChange;
  exports.PROPERTY_DID_CHANGE = PROPERTY_DID_CHANGE;
  exports.defineProperty = defineProperty;
  exports.Descriptor = Descriptor;
  exports._hasCachedComputedProperties = _hasCachedComputedProperties;
  exports.watchKey = watchKey;
  exports.unwatchKey = unwatchKey;
  exports.ChainNode = ChainNode;
  exports.finishChains = finishChains;
  exports.removeChainWatcher = removeChainWatcher;
  exports.watchPath = watchPath;
  exports.unwatchPath = unwatchPath;
  exports.destroy = deleteMeta;
  exports.isWatching = isWatching;
  exports.unwatch = unwatch;
  exports.watch = watch;
  exports.watcherCount = watcherCount;
  exports.libraries = libraries;
  exports.Libraries = Libraries;
  exports.Map = Map;
  exports.MapWithDefault = MapWithDefault;
  exports.OrderedSet = OrderedSet;
  exports.getProperties = getProperties;
  exports.setProperties = setProperties;
  exports.expandProperties = expandProperties;
  exports._suspendObserver = _suspendObserver;
  exports._suspendObservers = _suspendObservers;
  exports.addObserver = addObserver;
  exports.observersFor = observersFor;
  exports.removeObserver = removeObserver;
  exports._addBeforeObserver = _addBeforeObserver;
  exports._removeBeforeObserver = _removeBeforeObserver;
  exports.Mixin = Mixin;
  exports.aliasMethod = aliasMethod;
  exports._immediateObserver = _immediateObserver;
  exports._beforeObserver = _beforeObserver;
  exports.mixin = mixin;
  exports.observer = observer;
  exports.required = required;
  exports.REQUIRED = REQUIRED;
  exports.hasUnprocessedMixins = hasUnprocessedMixins;
  exports.clearUnprocessedMixins = clearUnprocessedMixins;
  exports.detectBinding = detectBinding;
  exports.Binding = Binding;
  exports.bind = bind;
  exports.isGlobalPath = isGlobalPath;
  exports.InjectedProperty = InjectedProperty;
  exports.setHasViews = setHasViews;
  exports.tagForProperty = tagForProperty;
  exports.tagFor = tagFor;
  exports.markObjectAsDirty = markObjectAsDirty;
  exports.replace = replace;
  exports.isProxy = isProxy;
  exports.descriptor = descriptor;

  Object.defineProperty(exports, '__esModule', { value: true });
});
enifed('ember-routing/ext/controller', ['exports', 'ember-metal', 'ember-runtime', 'ember-routing/utils'], function (exports, _emberMetal, _emberRuntime, _utils) {
  'use strict';

  /**
  @module ember
  */

  _emberRuntime.ControllerMixin.reopen({
    concatenatedProperties: ['queryParams'],

    /**
      Defines which query parameters the controller accepts.
      If you give the names `['category','page']` it will bind
      the values of these query parameters to the variables
      `this.category` and `this.page`.
      By default, Ember coerces query parameter values using `toggleProperty`.
      This behavior may lead to unexpected results.
      To explicitly configure a query parameter property so it coerces as expected, you must define a type property:
      ```javascript
        queryParams: [{
          category: {
            type: 'boolean'
          }
        }]
      ```
      @property queryParams
      @public
    */
    queryParams: null,

    /**
     This property is updated to various different callback functions depending on
     the current "state" of the backing route. It is used by
     `Ember.Controller.prototype._qpChanged`.
      The methods backing each state can be found in the `Ember.Route.prototype._qp` computed
     property return value (the `.states` property). The current values are listed here for
     the sanity of future travelers:
      * `inactive` - This state is used when this controller instance is not part of the active
       route hierarchy. Set in `Ember.Route.prototype._reset` (a `router.js` microlib hook) and
       `Ember.Route.prototype.actions.finalizeQueryParamChange`.
     * `active` - This state is used when this controller instance is part of the active
       route hierarchy. Set in `Ember.Route.prototype.actions.finalizeQueryParamChange`.
     * `allowOverrides` - This state is used in `Ember.Route.prototype.setup` (`route.js` microlib hook).
       @method _qpDelegate
      @private
    */
    _qpDelegate: null, _qpChanged: function (controller, _prop) {
      var prop = _prop.substr(0, _prop.length - 3);

      var delegate = controller._qpDelegate;
      var value = (0, _emberMetal.get)(controller, prop);
      delegate(prop, value);
    },
    transitionToRoute: function () {
      // target may be either another controller or a router
      var target = (0, _emberMetal.get)(this, 'target');
      var method = target.transitionToRoute || target.transitionTo;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return method.apply(target, (0, _utils.prefixRouteNameArg)(this, args));
    },
    replaceRoute: function () {
      // target may be either another controller or a router
      var target = (0, _emberMetal.get)(this, 'target');
      var method = target.replaceRoute || target.replaceWith;

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return method.apply(target, (0, _utils.prefixRouteNameArg)(this, args));
    }
  });

  exports.default = _emberRuntime.ControllerMixin;
});
enifed('ember-routing/ext/run_loop', ['ember-metal'], function (_emberMetal) {
  'use strict';

  // Add a new named queue after the 'actions' queue (where RSVP promises
  // resolve), which is used in router transitions to prevent unnecessary
  // loading state entry if all context promises resolve on the
  // 'actions' queue first.
  _emberMetal.run._addQueue('routerTransitions', 'actions');
});
enifed('ember-routing/index', ['exports', 'ember-routing/location/api', 'ember-routing/location/none_location', 'ember-routing/location/hash_location', 'ember-routing/location/history_location', 'ember-routing/location/auto_location', 'ember-routing/system/generate_controller', 'ember-routing/system/controller_for', 'ember-routing/system/dsl', 'ember-routing/system/router', 'ember-routing/system/route', 'ember-routing/system/query_params', 'ember-routing/services/routing', 'ember-routing/services/router', 'ember-routing/system/cache', 'ember-routing/ext/run_loop', 'ember-routing/ext/controller'], function (exports, _api, _none_location, _hash_location, _history_location, _auto_location, _generate_controller, _controller_for, _dsl, _router, _route, _query_params, _routing, _router2, _cache) {
  'use strict';

  exports.BucketCache = exports.RouterService = exports.RoutingService = exports.QueryParams = exports.Route = exports.Router = exports.RouterDSL = exports.controllerFor = exports.generateControllerFactory = exports.generateController = exports.AutoLocation = exports.HistoryLocation = exports.HashLocation = exports.NoneLocation = exports.Location = undefined;
  Object.defineProperty(exports, 'Location', {
    enumerable: true,
    get: function () {
      return _api.default;
    }
  });
  Object.defineProperty(exports, 'NoneLocation', {
    enumerable: true,
    get: function () {
      return _none_location.default;
    }
  });
  Object.defineProperty(exports, 'HashLocation', {
    enumerable: true,
    get: function () {
      return _hash_location.default;
    }
  });
  Object.defineProperty(exports, 'HistoryLocation', {
    enumerable: true,
    get: function () {
      return _history_location.default;
    }
  });
  Object.defineProperty(exports, 'AutoLocation', {
    enumerable: true,
    get: function () {
      return _auto_location.default;
    }
  });
  Object.defineProperty(exports, 'generateController', {
    enumerable: true,
    get: function () {
      return _generate_controller.default;
    }
  });
  Object.defineProperty(exports, 'generateControllerFactory', {
    enumerable: true,
    get: function () {
      return _generate_controller.generateControllerFactory;
    }
  });
  Object.defineProperty(exports, 'controllerFor', {
    enumerable: true,
    get: function () {
      return _controller_for.default;
    }
  });
  Object.defineProperty(exports, 'RouterDSL', {
    enumerable: true,
    get: function () {
      return _dsl.default;
    }
  });
  Object.defineProperty(exports, 'Router', {
    enumerable: true,
    get: function () {
      return _router.default;
    }
  });
  Object.defineProperty(exports, 'Route', {
    enumerable: true,
    get: function () {
      return _route.default;
    }
  });
  Object.defineProperty(exports, 'QueryParams', {
    enumerable: true,
    get: function () {
      return _query_params.default;
    }
  });
  Object.defineProperty(exports, 'RoutingService', {
    enumerable: true,
    get: function () {
      return _routing.default;
    }
  });
  Object.defineProperty(exports, 'RouterService', {
    enumerable: true,
    get: function () {
      return _router2.default;
    }
  });
  Object.defineProperty(exports, 'BucketCache', {
    enumerable: true,
    get: function () {
      return _cache.default;
    }
  });
});
enifed('ember-routing/location/api', ['exports', 'ember-debug', 'ember-environment', 'ember-routing/location/util'], function (exports, _emberDebug, _emberEnvironment, _util) {
  'use strict';

  exports.default = {
    /**
     This is deprecated in favor of using the container to lookup the location
     implementation as desired.
      For example:
      ```javascript
     // Given a location registered as follows:
     container.register('location:history-test', HistoryTestLocation);
      // You could create a new instance via:
     container.lookup('location:history-test');
     ```
       @method create
      @param {Object} options
      @return {Object} an instance of an implementation of the `location` API
      @deprecated Use the container to lookup the location implementation that you
      need.
      @private
    */
    create: function (options) {
      var implementation = options && options.implementation;
      (true && !(!!implementation) && (0, _emberDebug.assert)('Ember.Location.create: you must specify a \'implementation\' option', !!implementation));


      var implementationClass = this.implementations[implementation];
      (true && !(!!implementationClass) && (0, _emberDebug.assert)('Ember.Location.create: ' + implementation + ' is not a valid implementation', !!implementationClass));


      return implementationClass.create.apply(implementationClass, arguments);
    },


    implementations: {},
    _location: _emberEnvironment.environment.location,

    /**
      Returns the current `location.hash` by parsing location.href since browsers
      inconsistently URL-decode `location.hash`.
       https://bugzilla.mozilla.org/show_bug.cgi?id=483304
       @private
      @method getHash
      @since 1.4.0
    */
    _getHash: function () {
      return (0, _util.getHash)(this.location);
    }
  };
});
enifed('ember-routing/location/auto_location', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-runtime', 'ember-environment', 'ember-routing/location/util'], function (exports, _emberUtils, _emberMetal, _emberDebug, _emberRuntime, _emberEnvironment, _util) {
  'use strict';

  exports.getHistoryPath = getHistoryPath;
  exports.getHashPath = getHashPath;
  exports.default = _emberRuntime.Object.extend({
    /**
      @private
       The browser's `location` object. This is typically equivalent to
      `window.location`, but may be overridden for testing.
       @property location
      @default environment.location
    */
    location: _emberEnvironment.environment.location,

    /**
      @private
       The browser's `history` object. This is typically equivalent to
      `window.history`, but may be overridden for testing.
       @since 1.5.1
      @property history
      @default environment.history
    */
    history: _emberEnvironment.environment.history,

    /**
     @private
      The user agent's global variable. In browsers, this will be `window`.
      @since 1.11
     @property global
     @default window
    */
    global: _emberEnvironment.environment.window,

    /**
      @private
       The browser's `userAgent`. This is typically equivalent to
      `navigator.userAgent`, but may be overridden for testing.
       @since 1.5.1
      @property userAgent
      @default environment.history
    */
    userAgent: _emberEnvironment.environment.userAgent,

    /**
      @private
       This property is used by the router to know whether to cancel the routing
      setup process, which is needed while we redirect the browser.
       @since 1.5.1
      @property cancelRouterSetup
      @default false
    */
    cancelRouterSetup: false,

    /**
      @private
       Will be pre-pended to path upon state change.
       @since 1.5.1
      @property rootURL
      @default '/'
    */
    rootURL: '/',

    /**
     Called by the router to instruct the location to do any feature detection
     necessary. In the case of AutoLocation, we detect whether to use history
     or hash concrete implementations.
      @private
    */
    detect: function () {
      var rootURL = this.rootURL;

      (true && !(rootURL.charAt(rootURL.length - 1) === '/') && (0, _emberDebug.assert)('rootURL must end with a trailing forward slash e.g. "/app/"', rootURL.charAt(rootURL.length - 1) === '/'));


      var implementation = detectImplementation({
        location: this.location,
        history: this.history,
        userAgent: this.userAgent,
        rootURL: rootURL,
        documentMode: this.documentMode,
        global: this.global
      });

      if (implementation === false) {
        (0, _emberMetal.set)(this, 'cancelRouterSetup', true);
        implementation = 'none';
      }

      var concrete = (0, _emberUtils.getOwner)(this).lookup('location:' + implementation);
      (0, _emberMetal.set)(concrete, 'rootURL', rootURL);

      (true && !(!!concrete) && (0, _emberDebug.assert)('Could not find location \'' + implementation + '\'.', !!concrete));


      (0, _emberMetal.set)(this, 'concreteImplementation', concrete);
    },


    initState: delegateToConcreteImplementation('initState'),
    getURL: delegateToConcreteImplementation('getURL'),
    setURL: delegateToConcreteImplementation('setURL'),
    replaceURL: delegateToConcreteImplementation('replaceURL'),
    onUpdateURL: delegateToConcreteImplementation('onUpdateURL'),
    formatURL: delegateToConcreteImplementation('formatURL'),

    willDestroy: function () {
      var concreteImplementation = (0, _emberMetal.get)(this, 'concreteImplementation');

      if (concreteImplementation) {
        concreteImplementation.destroy();
      }
    }
  });


  function delegateToConcreteImplementation(methodName) {
    return function () {
      var concreteImplementation = (0, _emberMetal.get)(this, 'concreteImplementation');
      (true && !(!!concreteImplementation) && (0, _emberDebug.assert)('AutoLocation\'s detect() method should be called before calling any other hooks.', !!concreteImplementation));

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (0, _emberUtils.tryInvoke)(concreteImplementation, methodName, args);
    };
  }

  /*
    Given the browser's `location`, `history` and `userAgent`, and a configured
    root URL, this function detects whether the browser supports the [History
    API](https://developer.mozilla.org/en-US/docs/Web/API/History) and returns a
    string representing the Location object to use based on its determination.
  
    For example, if the page loads in an evergreen browser, this function would
    return the string "history", meaning the history API and thus HistoryLocation
    should be used. If the page is loaded in IE8, it will return the string
    "hash," indicating that the History API should be simulated by manipulating the
    hash portion of the location.
  
  */

  function detectImplementation(options) {
    var location = options.location;
    var userAgent = options.userAgent;
    var history = options.history;
    var documentMode = options.documentMode;
    var global = options.global;
    var rootURL = options.rootURL;

    var implementation = 'none';
    var cancelRouterSetup = false;
    var currentPath = (0, _util.getFullPath)(location);

    if ((0, _util.supportsHistory)(userAgent, history)) {
      var historyPath = getHistoryPath(rootURL, location);

      // If the browser supports history and we have a history path, we can use
      // the history location with no redirects.
      if (currentPath === historyPath) {
        return 'history';
      } else {
        if (currentPath.substr(0, 2) === '/#') {
          history.replaceState({ path: historyPath }, null, historyPath);
          implementation = 'history';
        } else {
          cancelRouterSetup = true;
          (0, _util.replacePath)(location, historyPath);
        }
      }
    } else if ((0, _util.supportsHashChange)(documentMode, global)) {
      var hashPath = getHashPath(rootURL, location);

      // Be sure we're using a hashed path, otherwise let's switch over it to so
      // we start off clean and consistent. We'll count an index path with no
      // hash as "good enough" as well.
      if (currentPath === hashPath || currentPath === '/' && hashPath === '/#/') {
        implementation = 'hash';
      } else {
        // Our URL isn't in the expected hash-supported format, so we want to
        // cancel the router setup and replace the URL to start off clean
        cancelRouterSetup = true;
        (0, _util.replacePath)(location, hashPath);
      }
    }

    if (cancelRouterSetup) {
      return false;
    }

    return implementation;
  }

  /**
    @private
  
    Returns the current path as it should appear for HistoryLocation supported
    browsers. This may very well differ from the real current path (e.g. if it
    starts off as a hashed URL)
  */
  function getHistoryPath(rootURL, location) {
    var path = (0, _util.getPath)(location);
    var hash = (0, _util.getHash)(location);
    var query = (0, _util.getQuery)(location);
    var rootURLIndex = path.indexOf(rootURL);
    var routeHash = void 0,
        hashParts = void 0;

    (true && !(rootURLIndex === 0) && (0, _emberDebug.assert)('Path ' + path + ' does not start with the provided rootURL ' + rootURL, rootURLIndex === 0));


    // By convention, Ember.js routes using HashLocation are required to start
    // with `#/`. Anything else should NOT be considered a route and should
    // be passed straight through, without transformation.
    if (hash.substr(0, 2) === '#/') {
      // There could be extra hash segments after the route
      hashParts = hash.substr(1).split('#');
      // The first one is always the route url
      routeHash = hashParts.shift();

      // If the path already has a trailing slash, remove the one
      // from the hashed route so we don't double up.
      if (path.charAt(path.length - 1) === '/') {
        routeHash = routeHash.substr(1);
      }

      // This is the "expected" final order
      path += routeHash + query;

      if (hashParts.length) {
        path += '#' + hashParts.join('#');
      }
    } else {
      path += query + hash;
    }

    return path;
  }

  /**
    @private
  
    Returns the current path as it should appear for HashLocation supported
    browsers. This may very well differ from the real current path.
  
    @method _getHashPath
  */
  function getHashPath(rootURL, location) {
    var path = rootURL;
    var historyPath = getHistoryPath(rootURL, location);
    var routePath = historyPath.substr(rootURL.length);

    if (routePath !== '') {
      if (routePath[0] !== '/') {
        routePath = '/' + routePath;
      }

      path += '#' + routePath;
    }

    return path;
  }
});
enifed('ember-routing/location/hash_location', ['exports', 'ember-metal', 'ember-runtime', 'ember-routing/location/api'], function (exports, _emberMetal, _emberRuntime, _api) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    implementation: 'hash',

    init: function () {
      (0, _emberMetal.set)(this, 'location', (0, _emberMetal.get)(this, '_location') || window.location);

      this._hashchangeHandler = undefined;
    },


    /**
      @private
       Returns normalized location.hash
       @since 1.5.1
      @method getHash
    */
    getHash: _api.default._getHash,

    /**
      Returns the normalized URL, constructed from `location.hash`.
       e.g. `#/foo` => `/foo` as well as `#/foo#bar` => `/foo#bar`.
       By convention, hashed paths must begin with a forward slash, otherwise they
      are not treated as a path so we can distinguish intent.
       @private
      @method getURL
    */
    getURL: function () {
      var originalPath = this.getHash().substr(1);
      var outPath = originalPath;

      if (outPath[0] !== '/') {
        outPath = '/';

        // Only add the # if the path isn't empty.
        // We do NOT want `/#` since the ampersand
        // is only included (conventionally) when
        // the location.hash has a value
        if (originalPath) {
          outPath += '#' + originalPath;
        }
      }

      return outPath;
    },


    /**
      Set the `location.hash` and remembers what was set. This prevents
      `onUpdateURL` callbacks from triggering when the hash was set by
      `HashLocation`.
       @private
      @method setURL
      @param path {String}
    */
    setURL: function (path) {
      (0, _emberMetal.get)(this, 'location').hash = path;
      (0, _emberMetal.set)(this, 'lastSetURL', path);
    },


    /**
      Uses location.replace to update the url without a page reload
      or history modification.
       @private
      @method replaceURL
      @param path {String}
    */
    replaceURL: function (path) {
      (0, _emberMetal.get)(this, 'location').replace('#' + path);
      (0, _emberMetal.set)(this, 'lastSetURL', path);
    },


    /**
      Register a callback to be invoked when the hash changes. These
      callbacks will execute when the user presses the back or forward
      button, but not after `setURL` is invoked.
       @private
      @method onUpdateURL
      @param callback {Function}
    */
    onUpdateURL: function (callback) {
      this._removeEventListener();

      this._hashchangeHandler = _emberMetal.run.bind(this, function () {
        var path = this.getURL();
        if ((0, _emberMetal.get)(this, 'lastSetURL') === path) {
          return;
        }

        (0, _emberMetal.set)(this, 'lastSetURL', null);

        callback(path);
      });

      window.addEventListener('hashchange', this._hashchangeHandler);
    },


    /**
      Given a URL, formats it to be placed into the page as part
      of an element's `href` attribute.
       This is used, for example, when using the {{action}} helper
      to generate a URL based on an event.
       @private
      @method formatURL
      @param url {String}
    */
    formatURL: function (url) {
      return '#' + url;
    },


    /**
      Cleans up the HashLocation event listener.
       @private
      @method willDestroy
    */
    willDestroy: function () {
      this._removeEventListener();
    },
    _removeEventListener: function () {
      if (this._hashchangeHandler) {
        window.removeEventListener('hashchange', this._hashchangeHandler);
      }
    }
  });
});
enifed('ember-routing/location/history_location', ['exports', 'ember-metal', 'ember-runtime', 'ember-routing/location/api'], function (exports, _emberMetal, _emberRuntime, _api) {
  'use strict';

  /**
  @module @ember/routing
  */

  var popstateFired = false;

  function _uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      var r, v;
      r = Math.random() * 16 | 0;
      v = c === 'x' ? r : r & 3 | 8;
      return v.toString(16);
    });
  }

  /**
    Ember.HistoryLocation implements the location API using the browser's
    history.pushState API.
  
    Using `HistoryLocation` results in URLs that are indistinguishable from a
    standard URL. This relies upon the browser's `history` API.
  
    Example:
  
    ```app/router.js
    Router.map(function() {
      this.route('posts', function() {
        this.route('new');
      });
    });
  
    Router.reopen({
      location: 'history'
    });
    ```
  
    This will result in a posts.new url of `/posts/new`.
  
    Keep in mind that your server must serve the Ember app at all the routes you
    define.
  
    @class HistoryLocation
    @extends EmberObject
    @protected
  */
  exports.default = _emberRuntime.Object.extend({
    implementation: 'history',

    init: function () {
      this._super.apply(this, arguments);

      var base = document.querySelector('base');
      var baseURL = '';
      if (base) {
        baseURL = base.getAttribute('href');
      }

      (0, _emberMetal.set)(this, 'baseURL', baseURL);
      (0, _emberMetal.set)(this, 'location', (0, _emberMetal.get)(this, 'location') || window.location);

      this._popstateHandler = undefined;
    },


    /**
      Used to set state on first call to setURL
       @private
      @method initState
    */
    initState: function () {
      var history = (0, _emberMetal.get)(this, 'history') || window.history;
      (0, _emberMetal.set)(this, 'history', history);

      if (history && 'state' in history) {
        this.supportsHistory = true;
      }

      this.replaceState(this.formatURL(this.getURL()));
    },


    /**
      Will be pre-pended to path upon state change
       @property rootURL
      @default '/'
      @private
    */
    rootURL: '/',

    /**
      Returns the current `location.pathname` without `rootURL` or `baseURL`
       @private
      @method getURL
      @return url {String}
    */
    getURL: function () {
      var location = (0, _emberMetal.get)(this, 'location');
      var path = location.pathname;

      var rootURL = (0, _emberMetal.get)(this, 'rootURL');
      var baseURL = (0, _emberMetal.get)(this, 'baseURL');

      // remove trailing slashes if they exists
      rootURL = rootURL.replace(/\/$/, '');
      baseURL = baseURL.replace(/\/$/, '');

      // remove baseURL and rootURL from start of path
      var url = path.replace(new RegExp('^' + baseURL + '(?=/|$)'), '').replace(new RegExp('^' + rootURL + '(?=/|$)'), '').replace(/\/\/$/g, '/'); // remove extra slashes

      var search = location.search || '';
      url += search + this.getHash();

      return url;
    },


    /**
      Uses `history.pushState` to update the url without a page reload.
       @private
      @method setURL
      @param path {String}
    */
    setURL: function (path) {
      var state = this.getState();
      path = this.formatURL(path);

      if (!state || state.path !== path) {
        this.pushState(path);
      }
    },


    /**
      Uses `history.replaceState` to update the url without a page reload
      or history modification.
       @private
      @method replaceURL
      @param path {String}
    */
    replaceURL: function (path) {
      var state = this.getState();
      path = this.formatURL(path);

      if (!state || state.path !== path) {
        this.replaceState(path);
      }
    },


    /**
      Get the current `history.state`. Checks for if a polyfill is
      required and if so fetches this._historyState. The state returned
      from getState may be null if an iframe has changed a window's
      history.
       The object returned will contain a `path` for the given state as well
      as a unique state `id`. The state index will allow the app to distinguish
      between two states with similar paths but should be unique from one another.
       @private
      @method getState
      @return state {Object}
    */
    getState: function () {
      if (this.supportsHistory) {
        return (0, _emberMetal.get)(this, 'history').state;
      }

      return this._historyState;
    },


    /**
     Pushes a new state.
      @private
     @method pushState
     @param path {String}
    */
    pushState: function (path) {
      var state = { path: path, uuid: _uuid() };

      (0, _emberMetal.get)(this, 'history').pushState(state, null, path);

      this._historyState = state;

      // used for webkit workaround
      this._previousURL = this.getURL();
    },


    /**
     Replaces the current state.
      @private
     @method replaceState
     @param path {String}
    */
    replaceState: function (path) {
      var state = { path: path, uuid: _uuid() };

      (0, _emberMetal.get)(this, 'history').replaceState(state, null, path);

      this._historyState = state;

      // used for webkit workaround
      this._previousURL = this.getURL();
    },


    /**
      Register a callback to be invoked whenever the browser
      history changes, including using forward and back buttons.
       @private
      @method onUpdateURL
      @param callback {Function}
    */
    onUpdateURL: function (callback) {
      var _this = this;

      this._removeEventListener();

      this._popstateHandler = function () {
        // Ignore initial page load popstate event in Chrome
        if (!popstateFired) {
          popstateFired = true;
          if (_this.getURL() === _this._previousURL) {
            return;
          }
        }
        callback(_this.getURL());
      };

      window.addEventListener('popstate', this._popstateHandler);
    },


    /**
      Used when using `{{action}}` helper.  The url is always appended to the rootURL.
       @private
      @method formatURL
      @param url {String}
      @return formatted url {String}
    */
    formatURL: function (url) {
      var rootURL = (0, _emberMetal.get)(this, 'rootURL');
      var baseURL = (0, _emberMetal.get)(this, 'baseURL');

      if (url !== '') {
        // remove trailing slashes if they exists
        rootURL = rootURL.replace(/\/$/, '');
        baseURL = baseURL.replace(/\/$/, '');
      } else if (baseURL[0] === '/' && rootURL[0] === '/') {
        // if baseURL and rootURL both start with a slash
        // ... remove trailing slash from baseURL if it exists
        baseURL = baseURL.replace(/\/$/, '');
      }

      return baseURL + rootURL + url;
    },


    /**
      Cleans up the HistoryLocation event listener.
       @private
      @method willDestroy
    */
    willDestroy: function () {
      this._removeEventListener();
    },


    /**
      @private
       Returns normalized location.hash
       @method getHash
    */
    getHash: _api.default._getHash,

    _removeEventListener: function () {
      if (this._popstateHandler) {
        window.removeEventListener('popstate', this._popstateHandler);
      }
    }
  });
});
enifed('ember-routing/location/none_location', ['exports', 'ember-metal', 'ember-debug', 'ember-runtime'], function (exports, _emberMetal, _emberDebug, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    implementation: 'none',
    path: '',

    detect: function () {
      var rootURL = this.rootURL;

      (true && !(rootURL.charAt(rootURL.length - 1) === '/') && (0, _emberDebug.assert)('rootURL must end with a trailing forward slash e.g. "/app/"', rootURL.charAt(rootURL.length - 1) === '/'));
    },


    /**
      Will be pre-pended to path.
       @private
      @property rootURL
      @default '/'
    */
    rootURL: '/',

    /**
      Returns the current path without `rootURL`.
       @private
      @method getURL
      @return {String} path
    */
    getURL: function () {
      var path = (0, _emberMetal.get)(this, 'path');
      var rootURL = (0, _emberMetal.get)(this, 'rootURL');

      // remove trailing slashes if they exists
      rootURL = rootURL.replace(/\/$/, '');

      // remove rootURL from url
      return path.replace(new RegExp('^' + rootURL + '(?=/|$)'), '');
    },


    /**
      Set the path and remembers what was set. Using this method
      to change the path will not invoke the `updateURL` callback.
       @private
      @method setURL
      @param path {String}
    */
    setURL: function (path) {
      (0, _emberMetal.set)(this, 'path', path);
    },


    /**
      Register a callback to be invoked when the path changes. These
      callbacks will execute when the user presses the back or forward
      button, but not after `setURL` is invoked.
       @private
      @method onUpdateURL
      @param callback {Function}
    */
    onUpdateURL: function (callback) {
      this.updateCallback = callback;
    },


    /**
      Sets the path and calls the `updateURL` callback.
       @private
      @method handleURL
      @param callback {Function}
    */
    handleURL: function (url) {
      (0, _emberMetal.set)(this, 'path', url);
      this.updateCallback(url);
    },


    /**
      Given a URL, formats it to be placed into the page as part
      of an element's `href` attribute.
       This is used, for example, when using the {{action}} helper
      to generate a URL based on an event.
       @private
      @method formatURL
      @param url {String}
      @return {String} url
    */
    formatURL: function (url) {
      var rootURL = (0, _emberMetal.get)(this, 'rootURL');

      if (url !== '') {
        // remove trailing slashes if they exists
        rootURL = rootURL.replace(/\/$/, '');
      }

      return rootURL + url;
    }
  });
});
enifed('ember-routing/location/util', ['exports'], function (exports) {
  'use strict';

  exports.getPath = getPath;
  exports.getQuery = getQuery;
  exports.getHash = getHash;
  exports.getFullPath = getFullPath;
  exports.getOrigin = getOrigin;
  exports.supportsHashChange = supportsHashChange;
  exports.supportsHistory = supportsHistory;
  exports.replacePath = replacePath;
  /**
    @private
  
    Returns the current `location.pathname`, normalized for IE inconsistencies.
  */
  function getPath(location) {
    var pathname = location.pathname;
    // Various versions of IE/Opera don't always return a leading slash
    if (pathname[0] !== '/') {
      pathname = '/' + pathname;
    }

    return pathname;
  }

  /**
    @private
  
    Returns the current `location.search`.
  */
  function getQuery(location) {
    return location.search;
  }

  /**
    @private
  
    Returns the current `location.hash` by parsing location.href since browsers
    inconsistently URL-decode `location.hash`.
  
    Should be passed the browser's `location` object as the first argument.
  
    https://bugzilla.mozilla.org/show_bug.cgi?id=483304
  */
  function getHash(location) {
    var href = location.href;
    var hashIndex = href.indexOf('#');

    if (hashIndex === -1) {
      return '';
    } else {
      return href.substr(hashIndex);
    }
  }

  function getFullPath(location) {
    return getPath(location) + getQuery(location) + getHash(location);
  }

  function getOrigin(location) {
    var origin = location.origin;

    // Older browsers, especially IE, don't have origin
    if (!origin) {
      origin = location.protocol + '//' + location.hostname;

      if (location.port) {
        origin += ':' + location.port;
      }
    }

    return origin;
  }

  /*
    `documentMode` only exist in Internet Explorer, and it's tested because IE8 running in
    IE7 compatibility mode claims to support `onhashchange` but actually does not.
  
    `global` is an object that may have an `onhashchange` property.
  
    @private
    @function supportsHashChange
  */
  function supportsHashChange(documentMode, global) {
    return 'onhashchange' in global && (documentMode === undefined || documentMode > 7);
  }

  /*
    `userAgent` is a user agent string. We use user agent testing here, because
    the stock Android browser is known to have buggy versions of the History API,
    in some Android versions.
  
    @private
    @function supportsHistory
  */
  function supportsHistory(userAgent, history) {
    // Boosted from Modernizr: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
    // The stock browser on Android 2.2 & 2.3, and 4.0.x returns positive on history support
    // Unfortunately support is really buggy and there is no clean way to detect
    // these bugs, so we fall back to a user agent sniff :(

    // We only want Android 2 and 4.0, stock browser, and not Chrome which identifies
    // itself as 'Mobile Safari' as well, nor Windows Phone.
    if ((userAgent.indexOf('Android 2.') !== -1 || userAgent.indexOf('Android 4.0') !== -1) && userAgent.indexOf('Mobile Safari') !== -1 && userAgent.indexOf('Chrome') === -1 && userAgent.indexOf('Windows Phone') === -1) {
      return false;
    }

    return !!(history && 'pushState' in history);
  }

  /**
    Replaces the current location, making sure we explicitly include the origin
    to prevent redirecting to a different origin.
  
    @private
  */
  function replacePath(location, path) {
    location.replace(getOrigin(location) + path);
  }
});
enifed('ember-routing/services/router', ['exports', 'ember-runtime', 'ember-routing/utils'], function (exports, _emberRuntime, _utils) {
  'use strict';

  /**
     The Router service is the public API that provides component/view layer
     access to the router.
  
     @public
     @class RouterService
     @category ember-routing-router-service
   */
  /**
  @module ember
  */

  var RouterService = _emberRuntime.Service.extend({

    /**
       Name of the current route.
        This property represent the logical name of the route,
       which is comma separated.
       For the following router:
        ```app/router.js
       Router.map(function() {
         this.route('about);
         this.route('blog', function () {
           this.route('post', { path: ':post_id' });
         });
       });
       ```
        It will return:
        * `index` when you visit `/`
       * `about` when you visit `/about`
       * `blog.index` when you visit `/blog`
       * `blog.post` when you visit `/blog/some-post-id`
        @property currentRouteName
       @type String
       @public
     */
    currentRouteName: (0, _emberRuntime.readOnly)('_router.currentRouteName'),

    /**
       Current URL for the application.
       This property represent the URL path for this route.
      For the following router:
        ```app/router.js
       Router.map(function() {
         this.route('about);
         this.route('blog', function () {
           this.route('post', { path: ':post_id' });
         });
       });
       ```
        It will return:
        * `/` when you visit `/`
       * `/about` when you visit `/about`
       * `/blog/index` when you visit `/blog`
       * `/blog/post` when you visit `/blog/some-post-id`
        @property currentURL
       @type String
       @public
     */
    currentURL: (0, _emberRuntime.readOnly)('_router.currentURL'),

    /**
      The `location` property determines the type of URL's that your
      application will use.
      The following location types are currently available:
      * `auto`
      * `hash`
      * `history`
      * `none`
       @property location
      @default 'hash'
      @see {Ember.Location}
      @public
    */
    location: (0, _emberRuntime.readOnly)('_router.location'),

    /**
      The `rootURL` property represents the URL of the root of
      the application, '/' by default.
      This prefix is assumed on all routes defined on this app.
       IF you change the `rootURL` in your environment configuration
      like so:
       ```config/environment.js
      'use strict';
       module.exports = function(environment) {
        let ENV = {
          modulePrefix: 'router-service',
          environment,
          rootURL: '/my-root',
        …
        }
      ]
      ```
       This property will return `/my-root`.
       @property rootURL
      @default '/'
      @public
    */
    rootURL: (0, _emberRuntime.readOnly)('_router.rootURL'),
    _router: null,

    transitionTo: function () {
      var queryParams = void 0;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var arg = args[0];
      if (resemblesURL(arg)) {
        return this._router._doURLTransition('transitionTo', arg);
      }

      var possibleQueryParams = args[args.length - 1];
      if (possibleQueryParams && possibleQueryParams.hasOwnProperty('queryParams')) {
        queryParams = args.pop().queryParams;
      } else {
        queryParams = {};
      }

      var targetRouteName = args.shift();
      var transition = this._router._doTransition(targetRouteName, args, queryParams, true);
      transition._keepDefaultQueryParamValues = true;

      return transition;
    },
    replaceWith: function () /* routeNameOrUrl, ...models, options */{
      return this.transitionTo.apply(this, arguments).method('replace');
    },
    urlFor: function () /* routeName, ...models, options */{
      var _router;

      return (_router = this._router).generate.apply(_router, arguments);
    },
    isActive: function () /* routeName, ...models, options */{
      var _extractArguments = this._extractArguments.apply(this, arguments),
          routeName = _extractArguments.routeName,
          models = _extractArguments.models,
          queryParams = _extractArguments.queryParams;

      var routerMicrolib = this._router._routerMicrolib;
      var state = routerMicrolib.state;

      if (!routerMicrolib.isActiveIntent(routeName, models, null)) {
        return false;
      }
      var hasQueryParams = Object.keys(queryParams).length > 0;

      if (hasQueryParams) {
        this._router._prepareQueryParams(routeName, models, queryParams, true /* fromRouterService */);
        return (0, _utils.shallowEqual)(queryParams, state.queryParams);
      }

      return true;
    },
    _extractArguments: function (routeName) {
      for (var _len2 = arguments.length, models = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        models[_key2 - 1] = arguments[_key2];
      }

      var possibleQueryParams = models[models.length - 1];
      var queryParams = {};

      if (possibleQueryParams && possibleQueryParams.hasOwnProperty('queryParams')) {
        var options = models.pop();
        queryParams = options.queryParams;
      }

      return { routeName: routeName, models: models, queryParams: queryParams };
    }
  });

  function resemblesURL(str) {
    return typeof str === 'string' && (str === '' || str[0] === '/');
  }

  exports.default = RouterService;
});
enifed('ember-routing/services/routing', ['exports', 'ember-utils', 'ember-runtime', 'ember-metal', 'ember-routing/utils'], function (exports, _emberUtils, _emberRuntime, _emberMetal, _utils) {
  'use strict';

  exports.default = _emberRuntime.Service.extend({
    router: null,

    targetState: (0, _emberRuntime.readOnly)('router.targetState'),
    currentState: (0, _emberRuntime.readOnly)('router.currentState'),
    currentRouteName: (0, _emberRuntime.readOnly)('router.currentRouteName'),
    currentPath: (0, _emberRuntime.readOnly)('router.currentPath'),

    hasRoute: function (routeName) {
      return (0, _emberMetal.get)(this, 'router').hasRoute(routeName);
    },
    transitionTo: function (routeName, models, queryParams, shouldReplace) {
      var router = (0, _emberMetal.get)(this, 'router');

      var transition = router._doTransition(routeName, models, queryParams);

      if (shouldReplace) {
        transition.method('replace');
      }

      return transition;
    },
    normalizeQueryParams: function (routeName, models, queryParams) {
      var router = (0, _emberMetal.get)(this, 'router');
      router._prepareQueryParams(routeName, models, queryParams);
    },
    generateURL: function (routeName, models, queryParams) {
      var router = (0, _emberMetal.get)(this, 'router');
      if (!router._routerMicrolib) {
        return;
      }

      var visibleQueryParams = {};
      (0, _emberUtils.assign)(visibleQueryParams, queryParams);

      this.normalizeQueryParams(routeName, models, visibleQueryParams);

      var args = (0, _utils.routeArgs)(routeName, models, visibleQueryParams);
      return router.generate.apply(router, args);
    },
    isActiveForRoute: function (contexts, queryParams, routeName, routerState, isCurrentWhenSpecified) {
      var router = (0, _emberMetal.get)(this, 'router');

      var handlers = router._routerMicrolib.recognizer.handlersFor(routeName);
      var leafName = handlers[handlers.length - 1].handler;
      var maximumContexts = numberOfContextsAcceptedByHandler(routeName, handlers);

      // NOTE: any ugliness in the calculation of activeness is largely
      // due to the fact that we support automatic normalizing of
      // `resource` -> `resource.index`, even though there might be
      // dynamic segments / query params defined on `resource.index`
      // which complicates (and makes somewhat ambiguous) the calculation
      // of activeness for links that link to `resource` instead of
      // directly to `resource.index`.

      // if we don't have enough contexts revert back to full route name
      // this is because the leaf route will use one of the contexts
      if (contexts.length > maximumContexts) {
        routeName = leafName;
      }

      return routerState.isActiveIntent(routeName, contexts, queryParams, !isCurrentWhenSpecified);
    }
  });


  function numberOfContextsAcceptedByHandler(handler, handlerInfos) {
    var req = 0;
    for (var i = 0; i < handlerInfos.length; i++) {
      req += handlerInfos[i].names.length;
      if (handlerInfos[i].handler === handler) {
        break;
      }
    }

    return req;
  }
});
enifed('ember-routing/system/cache', ['exports', 'ember-runtime'], function (exports, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    init: function () {
      this.cache = Object.create(null);
    },
    has: function (bucketKey) {
      return !!this.cache[bucketKey];
    },
    stash: function (bucketKey, key, value) {
      var bucket = this.cache[bucketKey];

      if (!bucket) {
        bucket = this.cache[bucketKey] = Object.create(null);
      }

      bucket[key] = value;
    },
    lookup: function (bucketKey, prop, defaultValue) {
      var cache = this.cache;
      if (!this.has(bucketKey)) {
        return defaultValue;
      }

      var bucket = cache[bucketKey];
      if (prop in bucket && bucket[prop] !== undefined) {
        return bucket[prop];
      } else {
        return defaultValue;
      }
    }
  });
});
enifed("ember-routing/system/controller_for", ["exports"], function (exports) {
  "use strict";

  exports.default = controllerFor;
  /**
  @module ember
  */

  /**
    Finds a controller instance.
  
    @for Ember
    @method controllerFor
    @private
  */
  function controllerFor(container, controllerName, lookupOptions) {
    return container.lookup("controller:" + controllerName, lookupOptions);
  }
});
enifed('ember-routing/system/dsl', ['exports', 'ember-babel', 'ember-utils', 'ember-debug'], function (exports, _emberBabel, _emberUtils, _emberDebug) {
  'use strict';

  var uuid = 0;

  var DSL = function () {
    function DSL(name, options) {
      (0, _emberBabel.classCallCheck)(this, DSL);

      this.parent = name;
      this.enableLoadingSubstates = options && options.enableLoadingSubstates;
      this.matches = [];
      this.explicitIndex = undefined;
      this.options = options;
    }

    DSL.prototype.route = function route(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var callback = arguments[2];

      var dummyErrorRoute = '/_unused_dummy_error_path_route_' + name + '/:error';
      if (arguments.length === 2 && typeof options === 'function') {
        callback = options;
        options = {};
      }

      (true && !(function () {
        if (options.overrideNameAssertion === true) {
          return true;
        }

        return ['array', 'basic', 'object', 'application'].indexOf(name) === -1;
      }()) && (0, _emberDebug.assert)('\'' + name + '\' cannot be used as a route name.', function () {
        if (options.overrideNameAssertion === true) {
          return true;
        }return ['array', 'basic', 'object', 'application'].indexOf(name) === -1;
      }()));


      if (this.enableLoadingSubstates) {
        createRoute(this, name + '_loading', { resetNamespace: options.resetNamespace });
        createRoute(this, name + '_error', { resetNamespace: options.resetNamespace, path: dummyErrorRoute });
      }

      if (callback) {
        var fullName = getFullName(this, name, options.resetNamespace);
        var dsl = new DSL(fullName, this.options);

        createRoute(dsl, 'loading');
        createRoute(dsl, 'error', { path: dummyErrorRoute });

        callback.call(dsl);

        createRoute(this, name, options, dsl.generate());
      } else {
        createRoute(this, name, options);
      }
    };

    DSL.prototype.push = function push(url, name, callback, serialize) {
      var parts = name.split('.');

      if (this.options.engineInfo) {
        var localFullName = name.slice(this.options.engineInfo.fullName.length + 1);
        var routeInfo = (0, _emberUtils.assign)({ localFullName: localFullName }, this.options.engineInfo);

        if (serialize) {
          routeInfo.serializeMethod = serialize;
        }

        this.options.addRouteForEngine(name, routeInfo);
      } else if (serialize) {
        throw new Error('Defining a route serializer on route \'' + name + '\' outside an Engine is not allowed.');
      }

      if (url === '' || url === '/' || parts[parts.length - 1] === 'index') {
        this.explicitIndex = true;
      }

      this.matches.push(url, name, callback);
    };

    DSL.prototype.resource = function resource(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var callback = arguments[2];

      if (arguments.length === 2 && typeof options === 'function') {
        callback = options;
        options = {};
      }

      options.resetNamespace = true;
      (true && !(false) && (0, _emberDebug.deprecate)('this.resource() is deprecated. Use this.route(\'name\', { resetNamespace: true }, function () {}) instead.', false, { id: 'ember-routing.router-resource', until: '3.0.0' }));

      this.route(name, options, callback);
    };

    DSL.prototype.generate = function generate() {
      var dslMatches = this.matches;

      if (!this.explicitIndex) {
        this.route('index', { path: '/' });
      }

      return function (match) {
        for (var i = 0; i < dslMatches.length; i += 3) {
          match(dslMatches[i]).to(dslMatches[i + 1], dslMatches[i + 2]);
        }
      };
    };

    DSL.prototype.mount = function mount(_name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var engineRouteMap = this.options.resolveRouteMap(_name);
      var name = _name;

      if (options.as) {
        name = options.as;
      }

      var fullName = getFullName(this, name, options.resetNamespace);

      var engineInfo = {
        name: _name,
        instanceId: uuid++,
        mountPoint: fullName,
        fullName: fullName
      };

      var path = options.path;

      if (typeof path !== 'string') {
        path = '/' + name;
      }

      var callback = void 0;
      var dummyErrorRoute = '/_unused_dummy_error_path_route_' + name + '/:error';
      if (engineRouteMap) {
        var shouldResetEngineInfo = false;
        var oldEngineInfo = this.options.engineInfo;
        if (oldEngineInfo) {
          shouldResetEngineInfo = true;
          this.options.engineInfo = engineInfo;
        }

        var optionsForChild = (0, _emberUtils.assign)({ engineInfo: engineInfo }, this.options);
        var childDSL = new DSL(fullName, optionsForChild);

        createRoute(childDSL, 'loading');
        createRoute(childDSL, 'error', { path: dummyErrorRoute });

        engineRouteMap.class.call(childDSL);

        callback = childDSL.generate();

        if (shouldResetEngineInfo) {
          this.options.engineInfo = oldEngineInfo;
        }
      }

      var localFullName = 'application';
      var routeInfo = (0, _emberUtils.assign)({ localFullName: localFullName }, engineInfo);

      if (this.enableLoadingSubstates) {
        // These values are important to register the loading routes under their
        // proper names for the Router and within the Engine's registry.
        var substateName = name + '_loading';
        var _localFullName = 'application_loading';
        var _routeInfo = (0, _emberUtils.assign)({ localFullName: _localFullName }, engineInfo);
        createRoute(this, substateName, { resetNamespace: options.resetNamespace });
        this.options.addRouteForEngine(substateName, _routeInfo);

        substateName = name + '_error';
        _localFullName = 'application_error';
        _routeInfo = (0, _emberUtils.assign)({ localFullName: _localFullName }, engineInfo);
        createRoute(this, substateName, { resetNamespace: options.resetNamespace, path: dummyErrorRoute });
        this.options.addRouteForEngine(substateName, _routeInfo);
      }

      this.options.addRouteForEngine(fullName, routeInfo);

      this.push(path, fullName, callback);
    };

    return DSL;
  }();

  exports.default = DSL;


  function canNest(dsl) {
    return dsl.parent !== 'application';
  }

  function getFullName(dsl, name, resetNamespace) {
    if (canNest(dsl) && resetNamespace !== true) {
      return dsl.parent + '.' + name;
    } else {
      return name;
    }
  }

  function createRoute(dsl, name) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var callback = arguments[3];

    var fullName = getFullName(dsl, name, options.resetNamespace);

    if (typeof options.path !== 'string') {
      options.path = '/' + name;
    }

    dsl.push(options.path, fullName, callback, options.serialize);
  }

  DSL.map = function (callback) {
    var dsl = new DSL();
    callback.call(dsl);
    return dsl;
  };
});
enifed('ember-routing/system/generate_controller', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.generateControllerFactory = generateControllerFactory;
  exports.default = generateController;

  /**
  @module ember
  */

  /**
    Generates a controller factory
  
    @for Ember
    @method generateControllerFactory
    @private
  */

  function generateControllerFactory(owner, controllerName, context) {
    var Factory = owner.factoryFor('controller:basic').class;

    Factory = Factory.extend({
      toString: function () {
        return '(generated ' + controllerName + ' controller)';
      }
    });

    var fullName = 'controller:' + controllerName;

    owner.register(fullName, Factory);

    return Factory;
  }

  /**
    Generates and instantiates a controller extending from `controller:basic`
    if present, or `Ember.Controller` if not.
  
    @for Ember
    @method generateController
    @private
    @since 1.3.0
  */
  function generateController(owner, controllerName) {
    generateControllerFactory(owner, controllerName);

    var fullName = 'controller:' + controllerName;
    var instance = owner.lookup(fullName);

    if (true) {
      if ((0, _emberMetal.get)(instance, 'namespace.LOG_ACTIVE_GENERATION')) {
        (0, _emberDebug.info)('generated -> ' + fullName, { fullName: fullName });
      }
    }

    return instance;
  }
});
enifed('ember-routing/system/query_params', ['exports', 'ember-runtime'], function (exports, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    isQueryParams: true,
    values: null
  });
});
enifed('ember-routing/system/route', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-runtime', 'ember-routing/system/generate_controller', 'ember-routing/utils'], function (exports, _emberUtils, _emberMetal, _emberDebug, _emberRuntime, _generate_controller, _utils) {
  'use strict';

  exports.defaultSerialize = defaultSerialize;
  exports.hasDefaultSerialize = hasDefaultSerialize;


  function K() {
    return this;
  }

  function defaultSerialize(model, params) {
    if (params.length < 1 || !model) {
      return;
    }

    var name = params[0];
    var object = {};

    if (params.length === 1) {
      if (name in model) {
        object[name] = (0, _emberMetal.get)(model, name);
      } else if (/_id$/.test(name)) {
        object[name] = (0, _emberMetal.get)(model, 'id');
      }
    } else {
      object = (0, _emberMetal.getProperties)(model, params);
    }

    return object;
  }

  var DEFAULT_SERIALIZE = (0, _emberUtils.symbol)('DEFAULT_SERIALIZE');

  defaultSerialize[DEFAULT_SERIALIZE] = true;

  function hasDefaultSerialize(route) {
    return !!route.serialize[DEFAULT_SERIALIZE];
  }

  /**
  @module @ember/routing
  */

  /**
    The `Ember.Route` class is used to define individual routes. Refer to
    the [routing guide](https://emberjs.com/guides/routing/) for documentation.
  
    @class Route
    @extends EmberObject
    @uses Ember.ActionHandler
    @uses Evented
    @since 1.0.0
    @public
  */
  var Route = _emberRuntime.Object.extend(_emberRuntime.ActionHandler, _emberRuntime.Evented, {
    /**
      Configuration hash for this route's queryParams. The possible
      configuration options and their defaults are as follows
      (assuming a query param whose controller property is `page`):
       ```javascript
      queryParams: {
        page: {
          // By default, controller query param properties don't
          // cause a full transition when they are changed, but
          // rather only cause the URL to update. Setting
          // `refreshModel` to true will cause an "in-place"
          // transition to occur, whereby the model hooks for
          // this route (and any child routes) will re-fire, allowing
          // you to reload models (e.g., from the server) using the
          // updated query param values.
          refreshModel: false,
           // By default, changes to controller query param properties
          // cause the URL to update via `pushState`, which means an
          // item will be added to the browser's history, allowing
          // you to use the back button to restore the app to the
          // previous state before the query param property was changed.
          // Setting `replace` to true will use `replaceState` (or its
          // hash location equivalent), which causes no browser history
          // item to be added. This options name and default value are
          // the same as the `link-to` helper's `replace` option.
          replace: false,
           // By default, the query param URL key is the same name as
          // the controller property name. Use `as` to specify a
          // different URL key.
          as: 'page'
        }
      }
      ```
       @property queryParams
      @for Route
      @type Object
      @since 1.6.0
      @public
    */
    queryParams: {},

    _setRouteName: function (name) {
      this.routeName = name;
      this.fullRouteName = getEngineRouteName((0, _emberUtils.getOwner)(this), name);
    },


    /**
      @private
       @property _qp
    */
    _qp: (0, _emberMetal.computed)(function () {
      var _this = this;

      var combinedQueryParameterConfiguration = void 0;

      var controllerName = this.controllerName || this.routeName;
      var owner = (0, _emberUtils.getOwner)(this);
      var controller = owner.lookup('controller:' + controllerName);
      var queryParameterConfiguraton = (0, _emberMetal.get)(this, 'queryParams');
      var hasRouterDefinedQueryParams = Object.keys(queryParameterConfiguraton).length > 0;

      if (controller) {
        // the developer has authored a controller class in their application for
        // this route find its query params and normalize their object shape them
        // merge in the query params for the route. As a mergedProperty,
        // Route#queryParams is always at least `{}`

        var controllerDefinedQueryParameterConfiguration = (0, _emberMetal.get)(controller, 'queryParams') || {};
        var normalizedControllerQueryParameterConfiguration = (0, _utils.normalizeControllerQueryParams)(controllerDefinedQueryParameterConfiguration);
        combinedQueryParameterConfiguration = mergeEachQueryParams(normalizedControllerQueryParameterConfiguration, queryParameterConfiguraton);
      } else if (hasRouterDefinedQueryParams) {
        // the developer has not defined a controller but *has* supplied route query params.
        // Generate a class for them so we can later insert default values
        controller = (0, _generate_controller.default)(owner, controllerName);
        combinedQueryParameterConfiguration = queryParameterConfiguraton;
      }

      var qps = [];
      var map = {};
      var propertyNames = [];

      for (var propName in combinedQueryParameterConfiguration) {
        if (!combinedQueryParameterConfiguration.hasOwnProperty(propName)) {
          continue;
        }

        // to support the dubious feature of using unknownProperty
        // on queryParams configuration
        if (propName === 'unknownProperty' || propName === '_super') {
          // possible todo: issue deprecation warning?
          continue;
        }

        var desc = combinedQueryParameterConfiguration[propName];
        var scope = desc.scope || 'model';
        var parts = void 0;

        if (scope === 'controller') {
          parts = [];
        }

        var urlKey = desc.as || this.serializeQueryParamKey(propName);
        var defaultValue = (0, _emberMetal.get)(controller, propName);

        if (Array.isArray(defaultValue)) {
          defaultValue = (0, _emberRuntime.A)(defaultValue.slice());
        }

        var type = desc.type || (0, _emberRuntime.typeOf)(defaultValue);

        var defaultValueSerialized = this.serializeQueryParam(defaultValue, urlKey, type);
        var scopedPropertyName = controllerName + ':' + propName;
        var qp = {
          undecoratedDefaultValue: (0, _emberMetal.get)(controller, propName),
          defaultValue: defaultValue,
          serializedDefaultValue: defaultValueSerialized,
          serializedValue: defaultValueSerialized,

          type: type,
          urlKey: urlKey,
          prop: propName,
          scopedPropertyName: scopedPropertyName,
          controllerName: controllerName,
          route: this,
          parts: parts, // provided later when stashNames is called if 'model' scope
          values: null, // provided later when setup is called. no idea why.
          scope: scope
        };

        map[propName] = map[urlKey] = map[scopedPropertyName] = qp;
        qps.push(qp);
        propertyNames.push(propName);
      }

      return {
        qps: qps,
        map: map,
        propertyNames: propertyNames,
        states: {
          /*
            Called when a query parameter changes in the URL, this route cares
            about that query parameter, but the route is not currently
            in the active route hierarchy.
          */
          inactive: function (prop, value) {
            var qp = map[prop];
            _this._qpChanged(prop, value, qp);
          },
          /*
            Called when a query parameter changes in the URL, this route cares
            about that query parameter, and the route is currently
            in the active route hierarchy.
          */
          active: function (prop, value) {
            var qp = map[prop];
            _this._qpChanged(prop, value, qp);
            return _this._activeQPChanged(qp, value);
          },
          /*
            Called when a value of a query parameter this route handles changes in a controller
            and the route is currently in the active route hierarchy.
          */
          allowOverrides: function (prop, value) {
            var qp = map[prop];
            _this._qpChanged(prop, value, qp);
            return _this._updatingQPChanged(qp);
          }
        }
      };
    }),

    /**
      @private
       @property _names
    */
    _names: null,

    _stashNames: function (handlerInfo, dynamicParent) {
      if (this._names) {
        return;
      }
      var names = this._names = handlerInfo._names;

      if (!names.length) {
        handlerInfo = dynamicParent;
        names = handlerInfo && handlerInfo._names || [];
      }

      var qps = (0, _emberMetal.get)(this, '_qp.qps');

      var namePaths = new Array(names.length);
      for (var a = 0; a < names.length; ++a) {
        namePaths[a] = handlerInfo.name + '.' + names[a];
      }

      for (var i = 0; i < qps.length; ++i) {
        var qp = qps[i];
        if (qp.scope === 'model') {
          qp.parts = namePaths;
        }
      }
    },
    _activeQPChanged: function (qp, value) {
      this.router._activeQPChanged(qp.scopedPropertyName, value);
    },
    _updatingQPChanged: function (qp) {
      this.router._updatingQPChanged(qp.urlKey);
    },


    mergedProperties: ['queryParams'],

    paramsFor: function (name) {
      var _this2 = this;

      var route = (0, _emberUtils.getOwner)(this).lookup('route:' + name);

      if (!route) {
        return {};
      }

      var transition = this.router._routerMicrolib.activeTransition;
      var state = transition ? transition.state : this.router._routerMicrolib.state;

      var fullName = route.fullRouteName;
      var params = (0, _emberUtils.assign)({}, state.params[fullName]);
      var queryParams = getQueryParamsFor(route, state);

      return Object.keys(queryParams).reduce(function (params, key) {
        (true && !(!params[key]) && (0, _emberDebug.assert)('The route \'' + _this2.routeName + '\' has both a dynamic segment and query param with name \'' + key + '\'. Please rename one to avoid collisions.', !params[key]));

        params[key] = queryParams[key];
        return params;
      }, params);
    },
    serializeQueryParamKey: function (controllerPropertyName) {
      return controllerPropertyName;
    },
    serializeQueryParam: function (value, urlKey, defaultValueType) {
      // urlKey isn't used here, but anyone overriding
      // can use it to provide serialization specific
      // to a certain query param.
      return this.router._serializeQueryParam(value, defaultValueType);
    },
    deserializeQueryParam: function (value, urlKey, defaultValueType) {
      // urlKey isn't used here, but anyone overriding
      // can use it to provide deserialization specific
      // to a certain query param.
      return this.router._deserializeQueryParam(value, defaultValueType);
    },
    _optionsForQueryParam: function (qp) {
      return (0, _emberMetal.get)(this, 'queryParams.' + qp.urlKey) || (0, _emberMetal.get)(this, 'queryParams.' + qp.prop) || {};
    },


    /**
      A hook you can use to reset controller values either when the model
      changes or the route is exiting.
       ```app/routes/articles.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        resetController(controller, isExiting, transition) {
          if (isExiting && transition.targetName !== 'error') {
            controller.set('page', 1);
          }
        }
      });
      ```
       @method resetController
      @param {Controller} controller instance
      @param {Boolean} isExiting
      @param {Object} transition
      @since 1.7.0
      @public
    */
    resetController: K,

    exit: function () {
      this.deactivate();
      this.trigger('deactivate');
      this.teardownViews();
    },
    _reset: function (isExiting, transition) {
      var controller = this.controller;
      controller._qpDelegate = (0, _emberMetal.get)(this, '_qp.states.inactive');

      this.resetController(controller, isExiting, transition);
    },
    enter: function () {
      this.connections = [];
      this.activate();
      this.trigger('activate');
    },


    /**
      The name of the template to use by default when rendering this routes
      template.
       ```app/routes/posts/list.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        templateName: 'posts/list'
      });
      ```
       ```app/routes/posts/index.js
      import PostsList from '../posts/list';
       export default PostsList.extend();
      ```
       ```app/routes/posts/archived.js
      import PostsList from '../posts/list';
       export default PostsList.extend();
      ```
       @property templateName
      @type String
      @default null
      @since 1.4.0
      @public
    */
    templateName: null,

    /**
      The name of the controller to associate with this route.
       By default, Ember will lookup a route's controller that matches the name
      of the route (i.e. `App.PostController` for `App.PostRoute`). However,
      if you would like to define a specific controller to use, you can do so
      using this property.
       This is useful in many ways, as the controller specified will be:
       * passed to the `setupController` method.
      * used as the controller for the template being rendered by the route.
      * returned from a call to `controllerFor` for the route.
       @property controllerName
      @type String
      @default null
      @since 1.4.0
      @public
    */
    controllerName: null,

    /**
      The `willTransition` action is fired at the beginning of any
      attempted transition with a `Transition` object as the sole
      argument. This action can be used for aborting, redirecting,
      or decorating the transition from the currently active routes.
       A good example is preventing navigation when a form is
      half-filled out:
       ```app/routes/contact-form.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        actions: {
          willTransition(transition) {
            if (this.controller.get('userHasEnteredData')) {
              this.controller.displayNavigationConfirm();
              transition.abort();
            }
          }
        }
      });
      ```
       You can also redirect elsewhere by calling
      `this.transitionTo('elsewhere')` from within `willTransition`.
      Note that `willTransition` will not be fired for the
      redirecting `transitionTo`, since `willTransition` doesn't
      fire when there is already a transition underway. If you want
      subsequent `willTransition` actions to fire for the redirecting
      transition, you must first explicitly call
      `transition.abort()`.
       To allow the `willTransition` event to continue bubbling to the parent
      route, use `return true;`. When the `willTransition` method has a
      return value of `true` then the parent route's `willTransition` method
      will be fired, enabling "bubbling" behavior for the event.
       @event willTransition
      @param {Transition} transition
      @since 1.0.0
      @public
    */

    /**
      The `didTransition` action is fired after a transition has
      successfully been completed. This occurs after the normal model
      hooks (`beforeModel`, `model`, `afterModel`, `setupController`)
      have resolved. The `didTransition` action has no arguments,
      however, it can be useful for tracking page views or resetting
      state on the controller.
       ```app/routes/login.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        actions: {
          didTransition() {
            this.controller.get('errors.base').clear();
            return true; // Bubble the didTransition event
          }
        }
      });
      ```
       @event didTransition
      @since 1.2.0
      @public
    */

    /**
      The `loading` action is fired on the route when a route's `model`
      hook returns a promise that is not already resolved. The current
      `Transition` object is the first parameter and the route that
      triggered the loading event is the second parameter.
       ```app/routes/application.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        actions: {
          loading(transition, route) {
            let controller = this.controllerFor('foo');
            controller.set('currentlyLoading', true);
             transition.finally(function() {
              controller.set('currentlyLoading', false);
            });
          }
        }
      });
      ```
       @event loading
      @param {Transition} transition
      @param {Route} route The route that triggered the loading event
      @since 1.2.0
      @public
    */

    /**
      When attempting to transition into a route, any of the hooks
      may return a promise that rejects, at which point an `error`
      action will be fired on the partially-entered routes, allowing
      for per-route error handling logic, or shared error handling
      logic defined on a parent route.
       Here is an example of an error handler that will be invoked
      for rejected promises from the various hooks on the route,
      as well as any unhandled errors from child routes:
       ```app/routes/admin.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        beforeModel() {
          return Ember.RSVP.reject('bad things!');
        },
         actions: {
          error(error, transition) {
            // Assuming we got here due to the error in `beforeModel`,
            // we can expect that error === "bad things!",
            // but a promise model rejecting would also
            // call this hook, as would any errors encountered
            // in `afterModel`.
             // The `error` hook is also provided the failed
            // `transition`, which can be stored and later
            // `.retry()`d if desired.
             this.transitionTo('login');
          }
        }
      });
      ```
       `error` actions that bubble up all the way to `ApplicationRoute`
      will fire a default error handler that logs the error. You can
      specify your own global default error handler by overriding the
      `error` handler on `ApplicationRoute`:
       ```app/routes/application.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        actions: {
          error(error, transition) {
            this.controllerFor('banner').displayError(error.message);
          }
        }
      });
      ```
      @event error
      @param {Error} error
      @param {Transition} transition
      @since 1.0.0
      @public
    */

    /**
      This event is triggered when the router enters the route. It is
      not executed when the model for the route changes.
       ```app/routes/application.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        collectAnalytics: Ember.on('activate', function(){
          collectAnalytics();
        })
      });
      ```
       @event activate
      @since 1.9.0
      @public
    */

    /**
      This event is triggered when the router completely exits this
      route. It is not executed when the model for the route changes.
       ```app/routes/index.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        trackPageLeaveAnalytics: Ember.on('deactivate', function(){
          trackPageLeaveAnalytics();
        })
      });
      ```
       @event deactivate
      @since 1.9.0
      @public
    */

    /**
      The controller associated with this route.
       Example
       ```app/routes/form.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        actions: {
          willTransition(transition) {
            if (this.controller.get('userHasEnteredData') &&
                !confirm('Are you sure you want to abandon progress?')) {
              transition.abort();
            } else {
              // Bubble the `willTransition` action so that
              // parent routes can decide whether or not to abort.
              return true;
            }
          }
        }
      });
      ```
       @property controller
      @type Controller
      @since 1.6.0
      @public
    */

    actions: {
      queryParamsDidChange: function (changed, totalPresent, removed) {
        var qpMap = (0, _emberMetal.get)(this, '_qp').map;

        var totalChanged = Object.keys(changed).concat(Object.keys(removed));
        for (var i = 0; i < totalChanged.length; ++i) {
          var qp = qpMap[totalChanged[i]];
          if (qp && (0, _emberMetal.get)(this._optionsForQueryParam(qp), 'refreshModel') && this.router.currentState) {
            this.refresh();
            break;
          }
        }

        return true;
      },
      finalizeQueryParamChange: function (params, finalParams, transition) {
        if (this.fullRouteName !== 'application') {
          return true;
        }

        // Transition object is absent for intermediate transitions.
        if (!transition) {
          return;
        }

        var handlerInfos = transition.state.handlerInfos;
        var router = this.router;
        var qpMeta = router._queryParamsFor(handlerInfos);
        var changes = router._qpUpdates;
        var replaceUrl = void 0;

        (0, _utils.stashParamNames)(router, handlerInfos);

        for (var i = 0; i < qpMeta.qps.length; ++i) {
          var qp = qpMeta.qps[i];
          var route = qp.route;
          var controller = route.controller;
          var presentKey = qp.urlKey in params && qp.urlKey;

          // Do a reverse lookup to see if the changed query
          // param URL key corresponds to a QP property on
          // this controller.
          var value = void 0,
              svalue = void 0;
          if (changes && qp.urlKey in changes) {
            // Value updated in/before setupController
            value = (0, _emberMetal.get)(controller, qp.prop);
            svalue = route.serializeQueryParam(value, qp.urlKey, qp.type);
          } else {
            if (presentKey) {
              svalue = params[presentKey];

              if (svalue !== undefined) {
                value = route.deserializeQueryParam(svalue, qp.urlKey, qp.type);
              }
            } else {
              // No QP provided; use default value.
              svalue = qp.serializedDefaultValue;
              value = copyDefaultValue(qp.defaultValue);
            }
          }

          controller._qpDelegate = (0, _emberMetal.get)(route, '_qp.states.inactive');

          var thisQueryParamChanged = svalue !== qp.serializedValue;
          if (thisQueryParamChanged) {
            if (transition.queryParamsOnly && replaceUrl !== false) {
              var options = route._optionsForQueryParam(qp);
              var replaceConfigValue = (0, _emberMetal.get)(options, 'replace');
              if (replaceConfigValue) {
                replaceUrl = true;
              } else if (replaceConfigValue === false) {
                // Explicit pushState wins over any other replaceStates.
                replaceUrl = false;
              }
            }

            (0, _emberMetal.set)(controller, qp.prop, value);
          }

          // Stash current serialized value of controller.
          qp.serializedValue = svalue;

          var thisQueryParamHasDefaultValue = qp.serializedDefaultValue === svalue;
          if (!thisQueryParamHasDefaultValue || transition._keepDefaultQueryParamValues) {
            finalParams.push({
              value: svalue,
              visible: true,
              key: presentKey || qp.urlKey
            });
          }
        }

        if (replaceUrl) {
          transition.method('replace');
        }

        qpMeta.qps.forEach(function (qp) {
          var routeQpMeta = (0, _emberMetal.get)(qp.route, '_qp');
          var finalizedController = qp.route.controller;
          finalizedController._qpDelegate = (0, _emberMetal.get)(routeQpMeta, 'states.active');
        });

        router._qpUpdates = null;
      }
    },

    /**
      This hook is executed when the router completely exits this route. It is
      not executed when the model for the route changes.
       @method deactivate
      @since 1.0.0
      @public
    */
    deactivate: K,

    /**
      This hook is executed when the router enters the route. It is not executed
      when the model for the route changes.
       @method activate
      @since 1.0.0
      @public
    */
    activate: K,

    transitionTo: function (name, context) {
      var _router;

      return (_router = this.router).transitionTo.apply(_router, (0, _utils.prefixRouteNameArg)(this, arguments));
    },
    intermediateTransitionTo: function () {
      var _router2;

      (_router2 = this.router).intermediateTransitionTo.apply(_router2, (0, _utils.prefixRouteNameArg)(this, arguments));
    },
    refresh: function () {
      return this.router._routerMicrolib.refresh(this);
    },
    replaceWith: function () {
      var _router3;

      return (_router3 = this.router).replaceWith.apply(_router3, (0, _utils.prefixRouteNameArg)(this, arguments));
    },
    send: function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (this.router && this.router._routerMicrolib || !(0, _emberDebug.isTesting)()) {
        var _router4;

        (_router4 = this.router).send.apply(_router4, args);
      } else {
        var name = args.shift();
        var action = this.actions[name];
        if (action) {
          return action.apply(this, args);
        }
      }
    },
    setup: function (context, transition) {
      var controller = void 0;

      var controllerName = this.controllerName || this.routeName;
      var definedController = this.controllerFor(controllerName, true);

      if (definedController) {
        controller = definedController;
      } else {
        controller = this.generateController(controllerName);
      }

      // Assign the route's controller so that it can more easily be
      // referenced in action handlers. Side effects. Side effects everywhere.
      if (!this.controller) {
        var propNames = (0, _emberMetal.get)(this, '_qp.propertyNames');
        addQueryParamsObservers(controller, propNames);
        this.controller = controller;
      }

      var queryParams = (0, _emberMetal.get)(this, '_qp');

      var states = queryParams.states;

      controller._qpDelegate = states.allowOverrides;

      if (transition) {
        // Update the model dep values used to calculate cache keys.
        (0, _utils.stashParamNames)(this.router, transition.state.handlerInfos);

        var params = transition.params;
        var allParams = queryParams.propertyNames;
        var cache = this._bucketCache;

        allParams.forEach(function (prop) {
          var aQp = queryParams.map[prop];

          aQp.values = params;
          var cacheKey = (0, _utils.calculateCacheKey)(aQp.route.fullRouteName, aQp.parts, aQp.values);

          if (cache) {
            var value = cache.lookup(cacheKey, prop, aQp.undecoratedDefaultValue);
            (0, _emberMetal.set)(controller, prop, value);
          }
        });

        var qpValues = getQueryParamsFor(this, transition.state);
        (0, _emberMetal.setProperties)(controller, qpValues);
      }

      this.setupController(controller, context, transition);

      if (this._environment.options.shouldRender) {
        this.renderTemplate(controller, context);
      }
    },
    _qpChanged: function (prop, value, qp) {
      if (!qp) {
        return;
      }

      var cacheKey = (0, _utils.calculateCacheKey)(qp.route.fullRouteName, qp.parts, qp.values);

      // Update model-dep cache
      var cache = this._bucketCache;
      if (cache) {
        cache.stash(cacheKey, prop, value);
      }
    },


    /**
      This hook is the first of the route entry validation hooks
      called when an attempt is made to transition into a route
      or one of its children. It is called before `model` and
      `afterModel`, and is appropriate for cases when:
       1) A decision can be made to redirect elsewhere without
         needing to resolve the model first.
      2) Any async operations need to occur first before the
         model is attempted to be resolved.
       This hook is provided the current `transition` attempt
      as a parameter, which can be used to `.abort()` the transition,
      save it for a later `.retry()`, or retrieve values set
      on it from a previous hook. You can also just call
      `this.transitionTo` to another route to implicitly
      abort the `transition`.
       You can return a promise from this hook to pause the
      transition until the promise resolves (or rejects). This could
      be useful, for instance, for retrieving async code from
      the server that is required to enter a route.
       @method beforeModel
      @param {Transition} transition
      @return {any | Promise<any>} if the value returned from this hook is
        a promise, the transition will pause until the transition
        resolves. Otherwise, non-promise return values are not
        utilized in any way.
      @since 1.0.0
      @public
    */
    beforeModel: K,

    /**
      This hook is called after this route's model has resolved.
      It follows identical async/promise semantics to `beforeModel`
      but is provided the route's resolved model in addition to
      the `transition`, and is therefore suited to performing
      logic that can only take place after the model has already
      resolved.
       ```app/routes/posts.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        afterModel(posts, transition) {
          if (posts.get('length') === 1) {
            this.transitionTo('post.show', posts.get('firstObject'));
          }
        }
      });
      ```
       Refer to documentation for `beforeModel` for a description
      of transition-pausing semantics when a promise is returned
      from this hook.
       @method afterModel
      @param {Object} resolvedModel the value returned from `model`,
        or its resolved value if it was a promise
      @param {Transition} transition
      @return {any | Promise<any>} if the value returned from this hook is
        a promise, the transition will pause until the transition
        resolves. Otherwise, non-promise return values are not
        utilized in any way.
      @since 1.0.0
      @public
     */
    afterModel: K,

    /**
      A hook you can implement to optionally redirect to another route.
       If you call `this.transitionTo` from inside of this hook, this route
      will not be entered in favor of the other hook.
       `redirect` and `afterModel` behave very similarly and are
      called almost at the same time, but they have an important
      distinction in the case that, from one of these hooks, a
      redirect into a child route of this route occurs: redirects
      from `afterModel` essentially invalidate the current attempt
      to enter this route, and will result in this route's `beforeModel`,
      `model`, and `afterModel` hooks being fired again within
      the new, redirecting transition. Redirects that occur within
      the `redirect` hook, on the other hand, will _not_ cause
      these hooks to be fired again the second time around; in
      other words, by the time the `redirect` hook has been called,
      both the resolved model and attempted entry into this route
      are considered to be fully validated.
       @method redirect
      @param {Object} model the model for this route
      @param {Transition} transition the transition object associated with the current transition
      @since 1.0.0
      @public
    */
    redirect: K,

    contextDidChange: function () {
      this.currentModel = this.context;
    },
    model: function (params, transition) {
      var name = void 0,
          sawParams = void 0,
          value = void 0;
      var queryParams = (0, _emberMetal.get)(this, '_qp.map');

      for (var prop in params) {
        if (prop === 'queryParams' || queryParams && prop in queryParams) {
          continue;
        }

        var match = prop.match(/^(.*)_id$/);
        if (match !== null) {
          name = match[1];
          value = params[prop];
        }
        sawParams = true;
      }

      if (!name) {
        if (sawParams) {
          return (0, _emberRuntime.copy)(params);
        } else {
          if (transition.resolveIndex < 1) {
            return;
          }
          return transition.state.handlerInfos[transition.resolveIndex - 1].context;
        }
      }

      return this.findModel(name, value);
    },
    deserialize: function (params, transition) {
      return this.model(this.paramsFor(this.routeName), transition);
    },
    findModel: function () {
      var _get;

      return (_get = (0, _emberMetal.get)(this, 'store')).find.apply(_get, arguments);
    },


    /**
      Store property provides a hook for data persistence libraries to inject themselves.
       By default, this store property provides the exact same functionality previously
      in the model hook.
       Currently, the required interface is:
       `store.find(modelName, findArguments)`
       @method store
      @param {Object} store
      @private
    */
    store: (0, _emberMetal.computed)(function () {
      var owner = (0, _emberUtils.getOwner)(this);
      var routeName = this.routeName;
      var namespace = (0, _emberMetal.get)(this, 'router.namespace');

      return {
        find: function (name, value) {
          var modelClass = owner.factoryFor('model:' + name);

          (true && !(!!modelClass) && (0, _emberDebug.assert)('You used the dynamic segment ' + name + '_id in your route ' + routeName + ', but ' + namespace + '.' + _emberRuntime.String.classify(name) + ' did not exist and you did not override your route\'s `model` hook.', !!modelClass));


          if (!modelClass) {
            return;
          }

          modelClass = modelClass.class;

          (true && !(typeof modelClass.find === 'function') && (0, _emberDebug.assert)(_emberRuntime.String.classify(name) + ' has no method `find`.', typeof modelClass.find === 'function'));


          return modelClass.find(value);
        }
      };
    }),

    /**
      A hook you can implement to convert the route's model into parameters
      for the URL.
       ```app/router.js
      // ...
       Router.map(function() {
        this.route('post', { path: '/posts/:post_id' });
      });
       ```
       ```app/routes/post.js
      import Route from '@ember/routing/route';
       export default Route.extend({
        model(params) {
          // the server returns `{ id: 12 }`
          return Ember.$.getJSON('/posts/' + params.post_id);
        },
         serialize(model) {
          // this will make the URL `/posts/12`
          return { post_id: model.id };
        }
      });
      ```
       The default `serialize` method will insert the model's `id` into the
      route's dynamic segment (in this case, `:post_id`) if the segment contains '_id'.
      If the route has multiple dynamic segments or does not contain '_id', `serialize`
      will return `Ember.getProperties(model, params)`
       This method is called when `transitionTo` is called with a context
      in order to populate the URL.
       @method serialize
      @param {Object} model the routes model
      @param {Array} params an Array of parameter names for the current
        route (in the example, `['post_id']`.
      @return {Object} the serialized parameters
      @since 1.0.0
      @public
    */
    serialize: defaultSerialize,

    setupController: function (controller, context, transition) {
      if (controller && context !== undefined) {
        (0, _emberMetal.set)(controller, 'model', context);
      }
    },
    controllerFor: function (name, _skipAssert) {
      var owner = (0, _emberUtils.getOwner)(this);
      var route = owner.lookup('route:' + name);
      var controller = void 0;

      if (route && route.controllerName) {
        name = route.controllerName;
      }

      controller = owner.lookup('controller:' + name);

      // NOTE: We're specifically checking that skipAssert is true, because according
      //   to the old API the second parameter was model. We do not want people who
      //   passed a model to skip the assertion.
      (true && !(controller || _skipAssert === true) && (0, _emberDebug.assert)('The controller named \'' + name + '\' could not be found. Make sure that this route exists and has already been entered at least once. If you are accessing a controller not associated with a route, make sure the controller class is explicitly defined.', controller || _skipAssert === true));


      return controller;
    },
    generateController: function (name) {
      var owner = (0, _emberUtils.getOwner)(this);

      return (0, _generate_controller.default)(owner, name);
    },
    modelFor: function (_name) {
      var name = void 0;
      var owner = (0, _emberUtils.getOwner)(this);
      var transition = this.router ? this.router._routerMicrolib.activeTransition : null;

      // Only change the route name when there is an active transition.
      // Otherwise, use the passed in route name.
      if (owner.routable && transition !== null) {
        name = getEngineRouteName(owner, _name);
      } else {
        name = _name;
      }

      var route = owner.lookup('route:' + name);
      // If we are mid-transition, we want to try and look up
      // resolved parent contexts on the current transitionEvent.
      if (transition !== null) {
        var modelLookupName = route && route.routeName || name;
        if (transition.resolvedModels.hasOwnProperty(modelLookupName)) {
          return transition.resolvedModels[modelLookupName];
        }
      }

      return route && route.currentModel;
    },
    renderTemplate: function (controller, model) {
      this.render();
    },
    render: function (_name, options) {
      var name = void 0;
      var isDefaultRender = true;
      if (arguments.length > 0) {
        (true && !(!(0, _emberMetal.isNone)(_name)) && (0, _emberDebug.assert)('The name in the given arguments is undefined', !(0, _emberMetal.isNone)(_name)));

        isDefaultRender = (0, _emberMetal.isEmpty)(_name);
        if (typeof _name === 'object' && !options) {
          name = this.templateName || this.routeName;
          options = _name;
        } else {
          name = _name;
        }
      }

      var renderOptions = buildRenderOptions(this, isDefaultRender, name, options);
      this.connections.push(renderOptions);
      _emberMetal.run.once(this.router, '_setOutlets');
    },
    disconnectOutlet: function (options) {
      var outletName = void 0;
      var parentView = void 0;
      if (options) {
        if (typeof options === 'string') {
          outletName = options;
        } else {
          outletName = options.outlet;
          parentView = options.parentView ? options.parentView.replace(/\//g, '.') : undefined;

          (true && !(!('outlet' in options && options.outlet === undefined)) && (0, _emberDebug.assert)('You passed undefined as the outlet name.', !('outlet' in options && options.outlet === undefined)));
        }
      }

      outletName = outletName || 'main';
      this._disconnectOutlet(outletName, parentView);
      var handlerInfos = this.router._routerMicrolib.currentHandlerInfos;
      for (var i = 0; i < handlerInfos.length; i++) {
        // This non-local state munging is sadly necessary to maintain
        // backward compatibility with our existing semantics, which allow
        // any route to disconnectOutlet things originally rendered by any
        // other route. This should all get cut in 2.0.
        handlerInfos[i].handler._disconnectOutlet(outletName, parentView);
      }
    },
    _disconnectOutlet: function (outletName, parentView) {
      var parent = parentRoute(this);
      if (parent && parentView === parent.routeName) {
        parentView = undefined;
      }
      for (var i = 0; i < this.connections.length; i++) {
        var connection = this.connections[i];
        if (connection.outlet === outletName && connection.into === parentView) {
          // This neuters the disconnected outlet such that it doesn't
          // render anything, but it leaves an entry in the outlet
          // hierarchy so that any existing other renders that target it
          // don't suddenly blow up. They will still stick themselves
          // into its outlets, which won't render anywhere. All of this
          // statefulness should get the machete in 2.0.
          this.connections[i] = {
            owner: connection.owner,
            into: connection.into,
            outlet: connection.outlet,
            name: connection.name,
            controller: undefined,
            template: undefined,
            ViewClass: undefined
          };
          _emberMetal.run.once(this.router, '_setOutlets');
        }
      }
    },
    willDestroy: function () {
      this.teardownViews();
    },
    teardownViews: function () {
      if (this.connections && this.connections.length > 0) {
        this.connections = [];
        _emberMetal.run.once(this.router, '_setOutlets');
      }
    }
  });

  (0, _emberRuntime.deprecateUnderscoreActions)(Route);

  Route.reopenClass({
    isRouteFactory: true
  });

  function parentRoute(route) {
    var handlerInfo = handlerInfoFor(route, route.router._routerMicrolib.state.handlerInfos, -1);
    return handlerInfo && handlerInfo.handler;
  }

  function handlerInfoFor(route, handlerInfos) {
    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    if (!handlerInfos) {
      return;
    }

    var current = void 0;
    for (var i = 0; i < handlerInfos.length; i++) {
      current = handlerInfos[i].handler;
      if (current === route) {
        return handlerInfos[i + offset];
      }
    }
  }

  function buildRenderOptions(route, isDefaultRender, _name, options) {
    (true && !(isDefaultRender || !(options && 'outlet' in options && options.outlet === undefined)) && (0, _emberDebug.assert)('You passed undefined as the outlet name.', isDefaultRender || !(options && 'outlet' in options && options.outlet === undefined)));


    var owner = (0, _emberUtils.getOwner)(route);
    var name = void 0,
        templateName = void 0,
        into = void 0,
        outlet = void 0,
        controller = void 0,
        model = void 0;
    if (options) {
      into = options.into && options.into.replace(/\//g, '.');
      outlet = options.outlet;
      controller = options.controller;
      model = options.model;
    }
    outlet = outlet || 'main';

    if (isDefaultRender) {
      name = route.routeName;
      templateName = route.templateName || name;
    } else {
      name = _name.replace(/\//g, '.');
      templateName = name;
    }

    if (!controller) {
      if (isDefaultRender) {
        controller = route.controllerName || owner.lookup('controller:' + name);
      } else {
        controller = owner.lookup('controller:' + name) || route.controllerName || route.routeName;
      }
    }

    if (typeof controller === 'string') {
      var controllerName = controller;
      controller = owner.lookup('controller:' + controllerName);
      (true && !(isDefaultRender || controller) && (0, _emberDebug.assert)('You passed `controller: \'' + controllerName + '\'` into the `render` method, but no such controller could be found.', isDefaultRender || controller));
    }

    if (model) {
      controller.set('model', model);
    }

    var template = owner.lookup('template:' + templateName);
    (true && !(isDefaultRender || template) && (0, _emberDebug.assert)('Could not find "' + templateName + '" template, view, or component.', isDefaultRender || template));


    var parent = void 0;
    if (into && (parent = parentRoute(route)) && into === parent.routeName) {
      into = undefined;
    }

    var renderOptions = {
      owner: owner,
      into: into,
      outlet: outlet,
      name: name,
      controller: controller,
      template: template || route._topLevelViewTemplate,
      ViewClass: undefined
    };

    if (true) {
      var LOG_VIEW_LOOKUPS = (0, _emberMetal.get)(route.router, 'namespace.LOG_VIEW_LOOKUPS');
      if (LOG_VIEW_LOOKUPS && !template) {
        (0, _emberDebug.info)('Could not find "' + name + '" template. Nothing will be rendered', { fullName: 'template:' + name });
      }
    }

    return renderOptions;
  }

  function getFullQueryParams(router, state) {
    if (state.fullQueryParams) {
      return state.fullQueryParams;
    }

    state.fullQueryParams = {};
    (0, _emberUtils.assign)(state.fullQueryParams, state.queryParams);

    router._deserializeQueryParams(state.handlerInfos, state.fullQueryParams);
    return state.fullQueryParams;
  }

  function getQueryParamsFor(route, state) {
    state.queryParamsFor = state.queryParamsFor || {};
    var name = route.fullRouteName;

    if (state.queryParamsFor[name]) {
      return state.queryParamsFor[name];
    }

    var fullQueryParams = getFullQueryParams(route.router, state);

    var params = state.queryParamsFor[name] = {};

    // Copy over all the query params for this route/controller into params hash.
    var qpMeta = (0, _emberMetal.get)(route, '_qp');
    var qps = qpMeta.qps;
    for (var i = 0; i < qps.length; ++i) {
      // Put deserialized qp on params hash.
      var qp = qps[i];

      var qpValueWasPassedIn = qp.prop in fullQueryParams;
      params[qp.prop] = qpValueWasPassedIn ? fullQueryParams[qp.prop] : copyDefaultValue(qp.defaultValue);
    }

    return params;
  }

  function copyDefaultValue(value) {
    if (Array.isArray(value)) {
      return (0, _emberRuntime.A)(value.slice());
    }
    return value;
  }

  /*
    Merges all query parameters from a controller with those from
    a route, returning a new object and avoiding any mutations to
    the existing objects.
  */
  function mergeEachQueryParams(controllerQP, routeQP) {
    var qps = {};
    var keysAlreadyMergedOrSkippable = {
      defaultValue: true,
      type: true,
      scope: true,
      as: true
    };

    // first loop over all controller qps, merging them with any matching route qps
    // into a new empty object to avoid mutating.
    for (var cqpName in controllerQP) {
      if (!controllerQP.hasOwnProperty(cqpName)) {
        continue;
      }

      var newControllerParameterConfiguration = {};
      (0, _emberUtils.assign)(newControllerParameterConfiguration, controllerQP[cqpName], routeQP[cqpName]);

      qps[cqpName] = newControllerParameterConfiguration;

      // allows us to skip this QP when we check route QPs.
      keysAlreadyMergedOrSkippable[cqpName] = true;
    }

    // loop over all route qps, skipping those that were merged in the first pass
    // because they also appear in controller qps
    for (var rqpName in routeQP) {
      if (!routeQP.hasOwnProperty(rqpName) || keysAlreadyMergedOrSkippable[rqpName]) {
        continue;
      }

      var newRouteParameterConfiguration = {};
      (0, _emberUtils.assign)(newRouteParameterConfiguration, routeQP[rqpName], controllerQP[rqpName]);
      qps[rqpName] = newRouteParameterConfiguration;
    }

    return qps;
  }

  function addQueryParamsObservers(controller, propNames) {
    propNames.forEach(function (prop) {
      controller.addObserver(prop + '.[]', controller, controller._qpChanged);
    });
  }

  function getEngineRouteName(engine, routeName) {
    if (engine.routable) {
      var prefix = engine.mountPoint;

      if (routeName === 'application') {
        return prefix;
      } else {
        return prefix + '.' + routeName;
      }
    }

    return routeName;
  }

  exports.default = Route;
});
enifed('ember-routing/system/router', ['exports', 'ember-utils', 'ember-console', 'ember-metal', 'ember-debug', 'ember-runtime', 'ember-routing/system/route', 'ember-routing/system/dsl', 'ember-routing/location/api', 'ember-routing/utils', 'ember-routing/system/router_state', 'router'], function (exports, _emberUtils, _emberConsole, _emberMetal, _emberDebug, _emberRuntime, _route, _dsl, _api, _utils, _router_state, _router) {
  'use strict';

  exports.triggerEvent = triggerEvent;


  function K() {
    return this;
  }

  /**
  @module @ember/routing
  */

  var slice = Array.prototype.slice;


  /**
    The `Ember.Router` class manages the application state and URLs. Refer to
    the [routing guide](https://emberjs.com/guides/routing/) for documentation.
  
    @class Router
    @extends EmberObject
    @uses Evented
    @public
  */
  var EmberRouter = _emberRuntime.Object.extend(_emberRuntime.Evented, {
    /**
      The `location` property determines the type of URL's that your
      application will use.
       The following location types are currently available:
       * `history` - use the browser's history API to make the URLs look just like any standard URL
      * `hash` - use `#` to separate the server part of the URL from the Ember part: `/blog/#/posts/new`
      * `none` - do not store the Ember URL in the actual browser URL (mainly used for testing)
      * `auto` - use the best option based on browser capabilities: `history` if possible, then `hash` if possible, otherwise `none`
       This value is defaulted to `auto` by the `locationType` setting of `/config/environment.js`
       @property location
      @default 'hash'
      @see {Location}
      @public
    */
    location: 'hash',

    /**
     Represents the URL of the root of the application, often '/'. This prefix is
     assumed on all routes defined on this router.
      @property rootURL
     @default '/'
     @public
    */
    rootURL: '/',

    _initRouterJs: function () {
      var routerMicrolib = this._routerMicrolib = new _router.default();
      routerMicrolib.triggerEvent = triggerEvent;

      routerMicrolib._triggerWillChangeContext = K;
      routerMicrolib._triggerWillLeave = K;

      var dslCallbacks = this.constructor.dslCallbacks || [K];
      var dsl = this._buildDSL();

      dsl.route('application', { path: '/', resetNamespace: true, overrideNameAssertion: true }, function () {
        for (var i = 0; i < dslCallbacks.length; i++) {
          dslCallbacks[i].call(this);
        }
      });

      if (true) {
        if ((0, _emberMetal.get)(this, 'namespace.LOG_TRANSITIONS_INTERNAL')) {
          routerMicrolib.log = _emberConsole.default.debug;
        }
      }

      routerMicrolib.map(dsl.generate());
    },
    _buildDSL: function () {
      var moduleBasedResolver = this._hasModuleBasedResolver();
      var options = {
        enableLoadingSubstates: !!moduleBasedResolver
      };

      var owner = (0, _emberUtils.getOwner)(this);
      var router = this;

      options.resolveRouteMap = function (name) {
        return owner.factoryFor('route-map:' + name);
      };

      options.addRouteForEngine = function (name, engineInfo) {
        if (!router._engineInfoByRoute[name]) {
          router._engineInfoByRoute[name] = engineInfo;
        }
      };

      return new _dsl.default(null, options);
    },
    init: function () {
      this._super.apply(this, arguments);

      this.currentURL = null;
      this.currentRouteName = null;
      this.currentPath = null;

      this._qpCache = Object.create(null);
      this._resetQueuedQueryParameterChanges();
      this._handledErrors = (0, _emberUtils.dictionary)(null);
      this._engineInstances = Object.create(null);
      this._engineInfoByRoute = Object.create(null);
    },
    _resetQueuedQueryParameterChanges: function () {
      this._queuedQPChanges = {};
    },


    /**
      Represents the current URL.
       @method url
      @return {String} The current URL.
      @private
    */
    url: (0, _emberMetal.computed)(function () {
      return (0, _emberMetal.get)(this, 'location').getURL();
    }),

    _hasModuleBasedResolver: function () {
      var owner = (0, _emberUtils.getOwner)(this);

      if (!owner) {
        return false;
      }

      var resolver = owner.application && owner.application.__registry__ && owner.application.__registry__.resolver;

      if (!resolver) {
        return false;
      }

      return !!resolver.moduleBasedResolver;
    },
    startRouting: function () {
      var initialURL = (0, _emberMetal.get)(this, 'initialURL');

      if (this.setupRouter()) {
        if (initialURL === undefined) {
          initialURL = (0, _emberMetal.get)(this, 'location').getURL();
        }
        var initialTransition = this.handleURL(initialURL);
        if (initialTransition && initialTransition.error) {
          throw initialTransition.error;
        }
      }
    },
    setupRouter: function () {
      var _this = this;

      this._initRouterJs();
      this._setupLocation();

      var location = (0, _emberMetal.get)(this, 'location');

      // Allow the Location class to cancel the router setup while it refreshes
      // the page
      if ((0, _emberMetal.get)(location, 'cancelRouterSetup')) {
        return false;
      }

      this._setupRouter(location);

      location.onUpdateURL(function (url) {
        _this.handleURL(url);
      });

      return true;
    },
    didTransition: function (infos) {
      updatePaths(this);

      this._cancelSlowTransitionTimer();

      this.notifyPropertyChange('url');
      this.set('currentState', this.targetState);

      // Put this in the runloop so url will be accurate. Seems
      // less surprising than didTransition being out of sync.
      _emberMetal.run.once(this, this.trigger, 'didTransition');

      if (true) {
        if ((0, _emberMetal.get)(this, 'namespace').LOG_TRANSITIONS) {
          _emberConsole.default.log('Transitioned into \'' + EmberRouter._routePath(infos) + '\'');
        }
      }
    },
    _setOutlets: function () {
      // This is triggered async during Ember.Route#willDestroy.
      // If the router is also being destroyed we do not want to
      // to create another this._toplevelView (and leak the renderer)
      if (this.isDestroying || this.isDestroyed) {
        return;
      }

      var handlerInfos = this._routerMicrolib.currentHandlerInfos;
      var route = void 0;
      var defaultParentState = void 0;
      var liveRoutes = null;

      if (!handlerInfos) {
        return;
      }

      for (var i = 0; i < handlerInfos.length; i++) {
        route = handlerInfos[i].handler;
        var connections = route.connections;
        var ownState = void 0;
        for (var j = 0; j < connections.length; j++) {
          var appended = appendLiveRoute(liveRoutes, defaultParentState, connections[j]);
          liveRoutes = appended.liveRoutes;
          if (appended.ownState.render.name === route.routeName || appended.ownState.render.outlet === 'main') {
            ownState = appended.ownState;
          }
        }
        if (connections.length === 0) {
          ownState = representEmptyRoute(liveRoutes, defaultParentState, route);
        }
        defaultParentState = ownState;
      }

      // when a transitionTo happens after the validation phase
      // during the initial transition _setOutlets is called
      // when no routes are active. However, it will get called
      // again with the correct values during the next turn of
      // the runloop
      if (!liveRoutes) {
        return;
      }

      if (!this._toplevelView) {
        var owner = (0, _emberUtils.getOwner)(this);
        var OutletView = owner.factoryFor('view:-outlet');
        this._toplevelView = OutletView.create();
        this._toplevelView.setOutletState(liveRoutes);
        var instance = owner.lookup('-application-instance:main');
        instance.didCreateRootView(this._toplevelView);
      } else {
        this._toplevelView.setOutletState(liveRoutes);
      }
    },
    willTransition: function (oldInfos, newInfos, transition) {
      _emberMetal.run.once(this, this.trigger, 'willTransition', transition);

      if (true) {
        if ((0, _emberMetal.get)(this, 'namespace').LOG_TRANSITIONS) {
          _emberConsole.default.log('Preparing to transition from \'' + EmberRouter._routePath(oldInfos) + '\' to \'' + EmberRouter._routePath(newInfos) + '\'');
        }
      }
    },
    handleURL: function (url) {
      // Until we have an ember-idiomatic way of accessing #hashes, we need to
      // remove it because router.js doesn't know how to handle it.
      var _url = url.split(/#(.+)?/)[0];
      return this._doURLTransition('handleURL', _url);
    },
    _doURLTransition: function (routerJsMethod, url) {
      var transition = this._routerMicrolib[routerJsMethod](url || '/');
      didBeginTransition(transition, this);
      return transition;
    },
    transitionTo: function () {
      var queryParams = void 0;

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var arg = args[0];
      if (resemblesURL(arg)) {
        return this._doURLTransition('transitionTo', arg);
      }

      var possibleQueryParams = args[args.length - 1];
      if (possibleQueryParams && possibleQueryParams.hasOwnProperty('queryParams')) {
        queryParams = args.pop().queryParams;
      } else {
        queryParams = {};
      }

      var targetRouteName = args.shift();
      return this._doTransition(targetRouteName, args, queryParams);
    },
    intermediateTransitionTo: function () {
      var _routerMicrolib;

      (_routerMicrolib = this._routerMicrolib).intermediateTransitionTo.apply(_routerMicrolib, arguments);

      updatePaths(this);

      if (true) {
        var infos = this._routerMicrolib.currentHandlerInfos;
        if ((0, _emberMetal.get)(this, 'namespace').LOG_TRANSITIONS) {
          _emberConsole.default.log('Intermediate-transitioned into \'' + EmberRouter._routePath(infos) + '\'');
        }
      }
    },
    replaceWith: function () {
      return this.transitionTo.apply(this, arguments).method('replace');
    },
    generate: function () {
      var _routerMicrolib2;

      var url = (_routerMicrolib2 = this._routerMicrolib).generate.apply(_routerMicrolib2, arguments);
      return this.location.formatURL(url);
    },
    isActive: function () {
      var _routerMicrolib3;

      return (_routerMicrolib3 = this._routerMicrolib).isActive.apply(_routerMicrolib3, arguments);
    },
    isActiveIntent: function (routeName, models, queryParams) {
      return this.currentState.isActiveIntent(routeName, models, queryParams);
    },
    send: function () {
      var _routerMicrolib4;

      /*name, context*/
      (_routerMicrolib4 = this._routerMicrolib).trigger.apply(_routerMicrolib4, arguments);
    },
    hasRoute: function (route) {
      return this._routerMicrolib.hasRoute(route);
    },
    reset: function () {
      if (this._routerMicrolib) {
        this._routerMicrolib.reset();
      }
    },
    willDestroy: function () {
      if (this._toplevelView) {
        this._toplevelView.destroy();
        this._toplevelView = null;
      }

      this._super.apply(this, arguments);

      this.reset();

      var instances = this._engineInstances;
      for (var name in instances) {
        for (var id in instances[name]) {
          (0, _emberMetal.run)(instances[name][id], 'destroy');
        }
      }
    },
    _activeQPChanged: function (queryParameterName, newValue) {
      this._queuedQPChanges[queryParameterName] = newValue;
      _emberMetal.run.once(this, this._fireQueryParamTransition);
    },
    _updatingQPChanged: function (queryParameterName) {
      if (!this._qpUpdates) {
        this._qpUpdates = {};
      }
      this._qpUpdates[queryParameterName] = true;
    },
    _fireQueryParamTransition: function () {
      this.transitionTo({ queryParams: this._queuedQPChanges });
      this._resetQueuedQueryParameterChanges();
    },
    _setupLocation: function () {
      var location = (0, _emberMetal.get)(this, 'location');
      var rootURL = (0, _emberMetal.get)(this, 'rootURL');
      var owner = (0, _emberUtils.getOwner)(this);

      if ('string' === typeof location && owner) {
        var resolvedLocation = owner.lookup('location:' + location);

        if (resolvedLocation !== undefined) {
          location = (0, _emberMetal.set)(this, 'location', resolvedLocation);
        } else {
          // Allow for deprecated registration of custom location API's
          var options = {
            implementation: location
          };

          location = (0, _emberMetal.set)(this, 'location', _api.default.create(options));
        }
      }

      if (location !== null && typeof location === 'object') {
        if (rootURL) {
          (0, _emberMetal.set)(location, 'rootURL', rootURL);
        }

        // Allow the location to do any feature detection, such as AutoLocation
        // detecting history support. This gives it a chance to set its
        // `cancelRouterSetup` property which aborts routing.
        if (typeof location.detect === 'function') {
          location.detect();
        }

        // ensure that initState is called AFTER the rootURL is set on
        // the location instance
        if (typeof location.initState === 'function') {
          location.initState();
        }
      }
    },
    _getHandlerFunction: function () {
      var _this2 = this;

      var seen = Object.create(null);
      var owner = (0, _emberUtils.getOwner)(this);

      return function (name) {
        var routeName = name;
        var routeOwner = owner;
        var engineInfo = _this2._engineInfoByRoute[routeName];

        if (engineInfo) {
          var engineInstance = _this2._getEngineInstance(engineInfo);

          routeOwner = engineInstance;
          routeName = engineInfo.localFullName;
        }

        var fullRouteName = 'route:' + routeName;

        var handler = routeOwner.lookup(fullRouteName);

        if (seen[name]) {
          return handler;
        }

        seen[name] = true;

        if (!handler) {
          var DefaultRoute = routeOwner.factoryFor('route:basic').class;
          routeOwner.register(fullRouteName, DefaultRoute.extend());
          handler = routeOwner.lookup(fullRouteName);

          if (true) {
            if ((0, _emberMetal.get)(_this2, 'namespace.LOG_ACTIVE_GENERATION')) {
              (0, _emberDebug.info)('generated -> ' + fullRouteName, { fullName: fullRouteName });
            }
          }
        }

        handler._setRouteName(routeName);

        if (engineInfo && !(0, _route.hasDefaultSerialize)(handler)) {
          throw new Error('Defining a custom serialize method on an Engine route is not supported.');
        }

        return handler;
      };
    },
    _getSerializerFunction: function () {
      var _this3 = this;

      return function (name) {
        var engineInfo = _this3._engineInfoByRoute[name];

        // If this is not an Engine route, we fall back to the handler for serialization
        if (!engineInfo) {
          return;
        }

        return engineInfo.serializeMethod || _route.defaultSerialize;
      };
    },
    _setupRouter: function (location) {
      var _this4 = this;

      var lastURL = void 0;
      var routerMicrolib = this._routerMicrolib;

      routerMicrolib.getHandler = this._getHandlerFunction();
      routerMicrolib.getSerializer = this._getSerializerFunction();

      var doUpdateURL = function () {
        location.setURL(lastURL);
        (0, _emberMetal.set)(_this4, 'currentURL', lastURL);
      };

      routerMicrolib.updateURL = function (path) {
        lastURL = path;
        _emberMetal.run.once(doUpdateURL);
      };

      if (location.replaceURL) {
        var doReplaceURL = function () {
          location.replaceURL(lastURL);
          (0, _emberMetal.set)(_this4, 'currentURL', lastURL);
        };

        routerMicrolib.replaceURL = function (path) {
          lastURL = path;
          _emberMetal.run.once(doReplaceURL);
        };
      }

      routerMicrolib.didTransition = function (infos) {
        _this4.didTransition(infos);
      };

      routerMicrolib.willTransition = function (oldInfos, newInfos, transition) {
        _this4.willTransition(oldInfos, newInfos, transition);
      };
    },
    _serializeQueryParams: function (handlerInfos, queryParams) {
      var _this5 = this;

      forEachQueryParam(this, handlerInfos, queryParams, function (key, value, qp) {
        if (qp) {
          delete queryParams[key];
          queryParams[qp.urlKey] = qp.route.serializeQueryParam(value, qp.urlKey, qp.type);
        } else if (value === undefined) {
          return; // We don't serialize undefined values
        } else {
          queryParams[key] = _this5._serializeQueryParam(value, (0, _emberRuntime.typeOf)(value));
        }
      });
    },
    _serializeQueryParam: function (value, type) {
      if (value === null || value === undefined) {
        return value;
      } else if (type === 'array') {
        return JSON.stringify(value);
      }

      return '' + value;
    },
    _deserializeQueryParams: function (handlerInfos, queryParams) {
      forEachQueryParam(this, handlerInfos, queryParams, function (key, value, qp) {
        // If we don't have QP meta info for a given key, then we do nothing
        // because all values will be treated as strings
        if (qp) {
          delete queryParams[key];
          queryParams[qp.prop] = qp.route.deserializeQueryParam(value, qp.urlKey, qp.type);
        }
      });
    },
    _deserializeQueryParam: function (value, defaultType) {
      if (value === null || value === undefined) {
        return value;
      } else if (defaultType === 'boolean') {
        return value === 'true';
      } else if (defaultType === 'number') {
        return Number(value).valueOf();
      } else if (defaultType === 'array') {
        return (0, _emberRuntime.A)(JSON.parse(value));
      }
      return value;
    },
    _pruneDefaultQueryParamValues: function (handlerInfos, queryParams) {
      var qps = this._queryParamsFor(handlerInfos);
      for (var key in queryParams) {
        var qp = qps.map[key];
        if (qp && qp.serializedDefaultValue === queryParams[key]) {
          delete queryParams[key];
        }
      }
    },
    _doTransition: function (_targetRouteName, models, _queryParams, _keepDefaultQueryParamValues) {
      var _routerMicrolib5;

      var targetRouteName = _targetRouteName || (0, _utils.getActiveTargetName)(this._routerMicrolib);
      (true && !(targetRouteName && this._routerMicrolib.hasRoute(targetRouteName)) && (0, _emberDebug.assert)('The route ' + targetRouteName + ' was not found', targetRouteName && this._routerMicrolib.hasRoute(targetRouteName)));


      var queryParams = {};

      this._processActiveTransitionQueryParams(targetRouteName, models, queryParams, _queryParams);

      (0, _emberUtils.assign)(queryParams, _queryParams);
      this._prepareQueryParams(targetRouteName, models, queryParams, _keepDefaultQueryParamValues);

      var transitionArgs = (0, _utils.routeArgs)(targetRouteName, models, queryParams);
      var transition = (_routerMicrolib5 = this._routerMicrolib).transitionTo.apply(_routerMicrolib5, transitionArgs);

      didBeginTransition(transition, this);

      return transition;
    },
    _processActiveTransitionQueryParams: function (targetRouteName, models, queryParams, _queryParams) {
      // merge in any queryParams from the active transition which could include
      // queryParams from the url on initial load.
      if (!this._routerMicrolib.activeTransition) {
        return;
      }

      var unchangedQPs = {};
      var qpUpdates = this._qpUpdates || {};
      var params = this._routerMicrolib.activeTransition.queryParams;
      for (var key in params) {
        if (!qpUpdates[key]) {
          unchangedQPs[key] = params[key];
        }
      }

      // We need to fully scope queryParams so that we can create one object
      // that represents both passed-in queryParams and ones that aren't changed
      // from the active transition.
      this._fullyScopeQueryParams(targetRouteName, models, _queryParams);
      this._fullyScopeQueryParams(targetRouteName, models, unchangedQPs);
      (0, _emberUtils.assign)(queryParams, unchangedQPs);
    },
    _prepareQueryParams: function (targetRouteName, models, queryParams, _fromRouterService) {
      var state = calculatePostTransitionState(this, targetRouteName, models);
      this._hydrateUnsuppliedQueryParams(state, queryParams, _fromRouterService);
      this._serializeQueryParams(state.handlerInfos, queryParams);

      if (!_fromRouterService) {
        this._pruneDefaultQueryParamValues(state.handlerInfos, queryParams);
      }
    },
    _getQPMeta: function (handlerInfo) {
      var route = handlerInfo.handler;
      return route && (0, _emberMetal.get)(route, '_qp');
    },
    _queryParamsFor: function (handlerInfos) {
      var handlerInfoLength = handlerInfos.length;
      var leafRouteName = handlerInfos[handlerInfoLength - 1].name;
      var cached = this._qpCache[leafRouteName];
      if (cached) {
        return cached;
      }

      var shouldCache = true;
      var qpsByUrlKey = {};
      var map = {};
      var qps = [];

      for (var i = 0; i < handlerInfoLength; ++i) {
        var qpMeta = this._getQPMeta(handlerInfos[i]);

        if (!qpMeta) {
          shouldCache = false;
          continue;
        }

        // Loop over each QP to make sure we don't have any collisions by urlKey
        for (var _i = 0; _i < qpMeta.qps.length; _i++) {
          var qp = qpMeta.qps[_i];
          var urlKey = qp.urlKey;
          var qpOther = qpsByUrlKey[urlKey];

          if (qpOther && qpOther.controllerName !== qp.controllerName) {
            var otherQP = qpsByUrlKey[urlKey];
            (true && !(false) && (0, _emberDebug.assert)('You\'re not allowed to have more than one controller property map to the same query param key, but both `' + otherQP.scopedPropertyName + '` and `' + qp.scopedPropertyName + '` map to `' + urlKey + '`. You can fix this by mapping one of the controller properties to a different query param key via the `as` config option, e.g. `' + otherQP.prop + ': { as: \'other-' + otherQP.prop + '\' }`', false));
          }

          qpsByUrlKey[urlKey] = qp;
          qps.push(qp);
        }

        (0, _emberUtils.assign)(map, qpMeta.map);
      }

      var finalQPMeta = { qps: qps, map: map };

      if (shouldCache) {
        this._qpCache[leafRouteName] = finalQPMeta;
      }

      return finalQPMeta;
    },
    _fullyScopeQueryParams: function (leafRouteName, contexts, queryParams) {
      var state = calculatePostTransitionState(this, leafRouteName, contexts);
      var handlerInfos = state.handlerInfos;

      for (var i = 0, len = handlerInfos.length; i < len; ++i) {
        var qpMeta = this._getQPMeta(handlerInfos[i]);

        if (!qpMeta) {
          continue;
        }

        for (var j = 0, qpLen = qpMeta.qps.length; j < qpLen; ++j) {
          var qp = qpMeta.qps[j];

          var presentProp = qp.prop in queryParams && qp.prop || qp.scopedPropertyName in queryParams && qp.scopedPropertyName || qp.urlKey in queryParams && qp.urlKey;

          if (presentProp) {
            if (presentProp !== qp.scopedPropertyName) {
              queryParams[qp.scopedPropertyName] = queryParams[presentProp];
              delete queryParams[presentProp];
            }
          }
        }
      }
    },
    _hydrateUnsuppliedQueryParams: function (state, queryParams, _fromRouterService) {
      var handlerInfos = state.handlerInfos;
      var appCache = this._bucketCache;

      for (var i = 0; i < handlerInfos.length; ++i) {
        var qpMeta = this._getQPMeta(handlerInfos[i]);

        if (!qpMeta) {
          continue;
        }

        for (var j = 0, qpLen = qpMeta.qps.length; j < qpLen; ++j) {
          var qp = qpMeta.qps[j];

          var presentProp = qp.prop in queryParams && qp.prop || qp.scopedPropertyName in queryParams && qp.scopedPropertyName || qp.urlKey in queryParams && qp.urlKey;

          (true && !(function () {
            if (qp.urlKey === presentProp) {
              return true;
            }

            if (_fromRouterService && presentProp !== false) {
              return false;
            }

            return true;
          }()) && (0, _emberDebug.assert)('You passed the `' + presentProp + '` query parameter during a transition into ' + qp.route.routeName + ', please update to ' + qp.urlKey, function () {
            if (qp.urlKey === presentProp) {
              return true;
            }if (_fromRouterService && presentProp !== false) {
              return false;
            }return true;
          }()));


          if (presentProp) {
            if (presentProp !== qp.scopedPropertyName) {
              queryParams[qp.scopedPropertyName] = queryParams[presentProp];
              delete queryParams[presentProp];
            }
          } else {
            var cacheKey = (0, _utils.calculateCacheKey)(qp.route.fullRouteName, qp.parts, state.params);
            queryParams[qp.scopedPropertyName] = appCache.lookup(cacheKey, qp.prop, qp.defaultValue);
          }
        }
      }
    },
    _scheduleLoadingEvent: function (transition, originRoute) {
      this._cancelSlowTransitionTimer();
      this._slowTransitionTimer = _emberMetal.run.scheduleOnce('routerTransitions', this, '_handleSlowTransition', transition, originRoute);
    },


    currentState: null,
    targetState: null,

    _handleSlowTransition: function (transition, originRoute) {
      if (!this._routerMicrolib.activeTransition) {
        // Don't fire an event if we've since moved on from
        // the transition that put us in a loading state.
        return;
      }

      this.set('targetState', _router_state.default.create({
        emberRouter: this,
        routerJs: this._routerMicrolib,
        routerJsState: this._routerMicrolib.activeTransition.state
      }));

      transition.trigger(true, 'loading', transition, originRoute);
    },
    _cancelSlowTransitionTimer: function () {
      if (this._slowTransitionTimer) {
        _emberMetal.run.cancel(this._slowTransitionTimer);
      }
      this._slowTransitionTimer = null;
    },
    _markErrorAsHandled: function (errorGuid) {
      this._handledErrors[errorGuid] = true;
    },
    _isErrorHandled: function (errorGuid) {
      return this._handledErrors[errorGuid];
    },
    _clearHandledError: function (errorGuid) {
      delete this._handledErrors[errorGuid];
    },
    _getEngineInstance: function (_ref) {
      var name = _ref.name,
          instanceId = _ref.instanceId,
          mountPoint = _ref.mountPoint;

      var engineInstances = this._engineInstances;

      if (!engineInstances[name]) {
        engineInstances[name] = Object.create(null);
      }

      var engineInstance = engineInstances[name][instanceId];

      if (!engineInstance) {
        var owner = (0, _emberUtils.getOwner)(this);

        (true && !(owner.hasRegistration('engine:' + name)) && (0, _emberDebug.assert)('You attempted to mount the engine \'' + name + '\' in your router map, but the engine can not be found.', owner.hasRegistration('engine:' + name)));


        engineInstance = owner.buildChildEngineInstance(name, {
          routable: true,
          mountPoint: mountPoint
        });

        engineInstance.boot();

        engineInstances[name][instanceId] = engineInstance;
      }

      return engineInstance;
    }
  });

  /*
    Helper function for iterating over routes in a set of handlerInfos that are
    at or above the given origin route. Example: if `originRoute` === 'foo.bar'
    and the handlerInfos given were for 'foo.bar.baz', then the given callback
    will be invoked with the routes for 'foo.bar', 'foo', and 'application'
    individually.
  
    If the callback returns anything other than `true`, then iteration will stop.
  
    @private
    @param {Route} originRoute
    @param {Array<HandlerInfo>} handlerInfos
    @param {Function} callback
    @return {Void}
   */
  function forEachRouteAbove(originRoute, handlerInfos, callback) {
    var originRouteFound = false;

    for (var i = handlerInfos.length - 1; i >= 0; --i) {
      var handlerInfo = handlerInfos[i];
      var route = handlerInfo.handler;

      if (originRoute === route) {
        originRouteFound = true;
      }

      if (!originRouteFound) {
        continue;
      }

      if (callback(route) !== true) {
        return;
      }
    }
  }

  // These get invoked when an action bubbles above ApplicationRoute
  // and are not meant to be overridable.
  var defaultActionHandlers = {
    willResolveModel: function (transition, originRoute) {
      originRoute.router._scheduleLoadingEvent(transition, originRoute);
    },
    error: function (error, transition, originRoute) {
      var handlerInfos = transition.state.handlerInfos;
      var router = originRoute.router;

      forEachRouteAbove(originRoute, handlerInfos, function (route) {
        // Check for the existence of an 'error' route.
        // We don't check for an 'error' route on the originRoute, since that would
        // technically be below where we're at in the route hierarchy.
        if (originRoute !== route) {
          var errorRouteName = findRouteStateName(route, 'error');
          if (errorRouteName) {
            var _errorId = (0, _emberUtils.guidFor)(error);
            router._markErrorAsHandled(_errorId);
            router.intermediateTransitionTo(errorRouteName, error);
            return false;
          }
        }

        // Check for an 'error' substate route
        var errorSubstateName = findRouteSubstateName(route, 'error');
        if (errorSubstateName) {
          var errorId = (0, _emberUtils.guidFor)(error);
          router._markErrorAsHandled(errorId);
          router.intermediateTransitionTo(errorSubstateName, error);
          return false;
        }

        return true;
      });

      logError(error, 'Error while processing route: ' + transition.targetName);
    },
    loading: function (transition, originRoute) {
      var handlerInfos = transition.state.handlerInfos;
      var router = originRoute.router;

      forEachRouteAbove(originRoute, handlerInfos, function (route) {
        // Check for the existence of a 'loading' route.
        // We don't check for a 'loading' route on the originRoute, since that would
        // technically be below where we're at in the route hierarchy.
        if (originRoute !== route) {
          var loadingRouteName = findRouteStateName(route, 'loading');
          if (loadingRouteName) {
            router.intermediateTransitionTo(loadingRouteName);
            return false;
          }
        }

        // Check for loading substate
        var loadingSubstateName = findRouteSubstateName(route, 'loading');
        if (loadingSubstateName) {
          router.intermediateTransitionTo(loadingSubstateName);
          return false;
        }

        // Don't bubble above pivot route.
        return transition.pivotHandler !== route;
      });
    }
  };

  function logError(_error, initialMessage) {
    var errorArgs = [];
    var error = void 0;
    if (_error && typeof _error === 'object' && typeof _error.errorThrown === 'object') {
      error = _error.errorThrown;
    } else {
      error = _error;
    }

    if (initialMessage) {
      errorArgs.push(initialMessage);
    }

    if (error) {
      if (error.message) {
        errorArgs.push(error.message);
      }
      if (error.stack) {
        errorArgs.push(error.stack);
      }

      if (typeof error === 'string') {
        errorArgs.push(error);
      }
    }

    _emberConsole.default.error.apply(this, errorArgs);
  }

  /**
    Finds the name of the substate route if it exists for the given route. A
    substate route is of the form `route_state`, such as `foo_loading`.
  
    @private
    @param {Route} route
    @param {String} state
    @return {String}
  */
  function findRouteSubstateName(route, state) {
    var owner = (0, _emberUtils.getOwner)(route);
    var routeName = route.routeName,
        fullRouteName = route.fullRouteName,
        router = route.router;


    var substateName = routeName + '_' + state;
    var substateNameFull = fullRouteName + '_' + state;

    return routeHasBeenDefined(owner, router, substateName, substateNameFull) ? substateNameFull : '';
  }

  /**
    Finds the name of the state route if it exists for the given route. A state
    route is of the form `route.state`, such as `foo.loading`. Properly Handles
    `application` named routes.
  
    @private
    @param {Route} route
    @param {String} state
    @return {String}
  */
  function findRouteStateName(route, state) {
    var owner = (0, _emberUtils.getOwner)(route);
    var routeName = route.routeName,
        fullRouteName = route.fullRouteName,
        router = route.router;


    var stateName = routeName === 'application' ? state : routeName + '.' + state;
    var stateNameFull = fullRouteName === 'application' ? state : fullRouteName + '.' + state;

    return routeHasBeenDefined(owner, router, stateName, stateNameFull) ? stateNameFull : '';
  }

  /**
    Determines whether or not a route has been defined by checking that the route
    is in the Router's map and the owner has a registration for that route.
  
    @private
    @param {Owner} owner
    @param {Router} router
    @param {String} localName
    @param {String} fullName
    @return {Boolean}
  */
  function routeHasBeenDefined(owner, router, localName, fullName) {
    var routerHasRoute = router.hasRoute(fullName);
    var ownerHasRoute = owner.hasRegistration('template:' + localName) || owner.hasRegistration('route:' + localName);
    return routerHasRoute && ownerHasRoute;
  }

  function triggerEvent(handlerInfos, ignoreFailure, args) {
    var name = args.shift();

    if (!handlerInfos) {
      if (ignoreFailure) {
        return;
      }
      throw new _emberDebug.Error('Can\'t trigger action \'' + name + '\' because your app hasn\'t finished transitioning into its first route. To trigger an action on destination routes during a transition, you can call `.send()` on the `Transition` object passed to the `model/beforeModel/afterModel` hooks.');
    }

    var eventWasHandled = false;
    var handlerInfo = void 0,
        handler = void 0,
        actionHandler = void 0;

    for (var i = handlerInfos.length - 1; i >= 0; i--) {
      handlerInfo = handlerInfos[i];
      handler = handlerInfo.handler;
      actionHandler = handler && handler.actions && handler.actions[name];
      if (actionHandler) {
        if (actionHandler.apply(handler, args) === true) {
          eventWasHandled = true;
        } else {
          // Should only hit here if a non-bubbling error action is triggered on a route.
          if (name === 'error') {
            var errorId = (0, _emberUtils.guidFor)(args[0]);
            handler.router._markErrorAsHandled(errorId);
          }
          return;
        }
      }
    }

    var defaultHandler = defaultActionHandlers[name];
    if (defaultHandler) {
      defaultHandler.apply(null, args);
      return;
    }

    if (!eventWasHandled && !ignoreFailure) {
      throw new _emberDebug.Error('Nothing handled the action \'' + name + '\'. If you did handle the action, this error can be caused by returning true from an action handler in a controller, causing the action to bubble.');
    }
  }

  function calculatePostTransitionState(emberRouter, leafRouteName, contexts) {
    var state = emberRouter._routerMicrolib.applyIntent(leafRouteName, contexts);
    var handlerInfos = state.handlerInfos,
        params = state.params;


    for (var i = 0; i < handlerInfos.length; ++i) {
      var handlerInfo = handlerInfos[i];

      // If the handlerInfo is not resolved, we serialize the context into params
      if (!handlerInfo.isResolved) {
        params[handlerInfo.name] = handlerInfo.serialize(handlerInfo.context);
      } else {
        params[handlerInfo.name] = handlerInfo.params;
      }
    }
    return state;
  }

  function updatePaths(router) {
    var infos = router._routerMicrolib.currentHandlerInfos;
    if (infos.length === 0) {
      return;
    }

    var path = EmberRouter._routePath(infos);
    var currentRouteName = infos[infos.length - 1].name;
    var currentURL = router.get('location').getURL();

    (0, _emberMetal.set)(router, 'currentPath', path);
    (0, _emberMetal.set)(router, 'currentRouteName', currentRouteName);
    (0, _emberMetal.set)(router, 'currentURL', currentURL);

    var appController = (0, _emberUtils.getOwner)(router).lookup('controller:application');

    if (!appController) {
      // appController might not exist when top-level loading/error
      // substates have been entered since ApplicationRoute hasn't
      // actually been entered at that point.
      return;
    }

    if (!('currentPath' in appController)) {
      (0, _emberMetal.defineProperty)(appController, 'currentPath');
    }

    (0, _emberMetal.set)(appController, 'currentPath', path);

    if (!('currentRouteName' in appController)) {
      (0, _emberMetal.defineProperty)(appController, 'currentRouteName');
    }

    (0, _emberMetal.set)(appController, 'currentRouteName', currentRouteName);
  }

  EmberRouter.reopenClass({
    router: null,

    map: function (callback) {
      if (!this.dslCallbacks) {
        this.dslCallbacks = [];
        this.reopenClass({ dslCallbacks: this.dslCallbacks });
      }

      this.dslCallbacks.push(callback);

      return this;
    },
    _routePath: function (handlerInfos) {
      var path = [];

      // We have to handle coalescing resource names that
      // are prefixed with their parent's names, e.g.
      // ['foo', 'foo.bar.baz'] => 'foo.bar.baz', not 'foo.foo.bar.baz'

      function intersectionMatches(a1, a2) {
        for (var i = 0; i < a1.length; ++i) {
          if (a1[i] !== a2[i]) {
            return false;
          }
        }
        return true;
      }

      var name = void 0,
          nameParts = void 0,
          oldNameParts = void 0;
      for (var i = 1; i < handlerInfos.length; i++) {
        name = handlerInfos[i].name;
        nameParts = name.split('.');
        oldNameParts = slice.call(path);

        while (oldNameParts.length) {
          if (intersectionMatches(oldNameParts, nameParts)) {
            break;
          }
          oldNameParts.shift();
        }

        path.push.apply(path, nameParts.slice(oldNameParts.length));
      }

      return path.join('.');
    }
  });

  function didBeginTransition(transition, router) {
    var routerState = _router_state.default.create({
      emberRouter: router,
      routerJs: router._routerMicrolib,
      routerJsState: transition.state
    });

    if (!router.currentState) {
      router.set('currentState', routerState);
    }
    router.set('targetState', routerState);

    transition.promise = transition.catch(function (error) {
      var errorId = (0, _emberUtils.guidFor)(error);

      if (router._isErrorHandled(errorId)) {
        router._clearHandledError(errorId);
      } else {
        throw error;
      }
    });
  }

  function resemblesURL(str) {
    return typeof str === 'string' && (str === '' || str[0] === '/');
  }

  function forEachQueryParam(router, handlerInfos, queryParams, callback) {
    var qpCache = router._queryParamsFor(handlerInfos);

    for (var key in queryParams) {
      if (!queryParams.hasOwnProperty(key)) {
        continue;
      }
      var value = queryParams[key];
      var qp = qpCache.map[key];

      callback(key, value, qp);
    }
  }

  function findLiveRoute(liveRoutes, name) {
    if (!liveRoutes) {
      return;
    }
    var stack = [liveRoutes];
    while (stack.length > 0) {
      var test = stack.shift();
      if (test.render.name === name) {
        return test;
      }
      var outlets = test.outlets;
      for (var outletName in outlets) {
        stack.push(outlets[outletName]);
      }
    }
  }

  function appendLiveRoute(liveRoutes, defaultParentState, renderOptions) {
    var target = void 0;
    var myState = {
      render: renderOptions,
      outlets: Object.create(null),
      wasUsed: false
    };
    if (renderOptions.into) {
      target = findLiveRoute(liveRoutes, renderOptions.into);
    } else {
      target = defaultParentState;
    }
    if (target) {
      (0, _emberMetal.set)(target.outlets, renderOptions.outlet, myState);
    } else {
      if (renderOptions.into) {
        (true && !(false) && (0, _emberDebug.deprecate)('Rendering into a {{render}} helper that resolves to an {{outlet}} is deprecated.', false, {
          id: 'ember-routing.top-level-render-helper',
          until: '3.0.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_rendering-into-a-render-helper-that-resolves-to-an-outlet'
        }));


        // Megahax time. Post-3.0-breaking-changes, we will just assert
        // right here that the user tried to target a nonexistent
        // thing. But for now we still need to support the `render`
        // helper, and people are allowed to target templates rendered
        // by the render helper. So instead we defer doing anyting with
        // these orphan renders until afterRender.
        appendOrphan(liveRoutes, renderOptions.into, myState);
      } else {
        liveRoutes = myState;
      }
    }
    return {
      liveRoutes: liveRoutes,
      ownState: myState
    };
  }

  function appendOrphan(liveRoutes, into, myState) {
    if (!liveRoutes.outlets.__ember_orphans__) {
      liveRoutes.outlets.__ember_orphans__ = {
        render: {
          name: '__ember_orphans__'
        },
        outlets: Object.create(null)
      };
    }
    liveRoutes.outlets.__ember_orphans__.outlets[into] = myState;
    _emberMetal.run.schedule('afterRender', function () {
      (true && !(liveRoutes.outlets.__ember_orphans__.outlets[into].wasUsed) && (0, _emberDebug.assert)('You attempted to render into \'' + into + '\' but it was not found', liveRoutes.outlets.__ember_orphans__.outlets[into].wasUsed));
    });
  }

  function representEmptyRoute(liveRoutes, defaultParentState, route) {
    // the route didn't render anything
    var alreadyAppended = findLiveRoute(liveRoutes, route.routeName);
    if (alreadyAppended) {
      // But some other route has already rendered our default
      // template, so that becomes the default target for any
      // children we may have.
      return alreadyAppended;
    } else {
      // Create an entry to represent our default template name,
      // just so other routes can target it and inherit its place
      // in the outlet hierarchy.
      defaultParentState.outlets.main = {
        render: {
          name: route.routeName,
          outlet: 'main'
        },
        outlets: {}
      };
      return defaultParentState;
    }
  }

  (0, _emberMetal.deprecateProperty)(EmberRouter.prototype, 'router', '_routerMicrolib', {
    id: 'ember-router.router',
    until: '2.16',
    url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-router-router-renamed-to-ember-router-_routermicrolib'
  });

  exports.default = EmberRouter;
});
enifed('ember-routing/system/router_state', ['exports', 'ember-utils', 'ember-routing/utils', 'ember-runtime'], function (exports, _emberUtils, _utils, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    emberRouter: null,
    routerJs: null,
    routerJsState: null,

    isActiveIntent: function (routeName, models, queryParams, queryParamsMustMatch) {
      var state = this.routerJsState;
      if (!this.routerJs.isActiveIntent(routeName, models, null, state)) {
        return false;
      }

      if (queryParamsMustMatch && Object.keys(queryParams).length > 0) {
        var visibleQueryParams = (0, _emberUtils.assign)({}, queryParams);

        this.emberRouter._prepareQueryParams(routeName, models, visibleQueryParams);
        return (0, _utils.shallowEqual)(visibleQueryParams, state.queryParams);
      }

      return true;
    }
  });
});
enifed('ember-routing/utils', ['exports', 'ember-utils', 'ember-metal', 'ember-debug'], function (exports, _emberUtils, _emberMetal, _emberDebug) {
  'use strict';

  exports.routeArgs = routeArgs;
  exports.getActiveTargetName = getActiveTargetName;
  exports.stashParamNames = stashParamNames;
  exports.calculateCacheKey = calculateCacheKey;
  exports.normalizeControllerQueryParams = normalizeControllerQueryParams;
  exports.prefixRouteNameArg = prefixRouteNameArg;
  exports.shallowEqual = shallowEqual;


  var ALL_PERIODS_REGEX = /\./g;

  function routeArgs(targetRouteName, models, queryParams) {
    var args = [];
    if (typeof targetRouteName === 'string') {
      args.push('' + targetRouteName);
    }
    args.push.apply(args, models);
    args.push({ queryParams: queryParams });
    return args;
  }

  function getActiveTargetName(router) {
    var handlerInfos = router.activeTransition ? router.activeTransition.state.handlerInfos : router.state.handlerInfos;
    return handlerInfos[handlerInfos.length - 1].name;
  }

  function stashParamNames(router, handlerInfos) {
    if (handlerInfos._namesStashed) {
      return;
    }

    // This helper exists because router.js/route-recognizer.js awkwardly
    // keeps separate a handlerInfo's list of parameter names depending
    // on whether a URL transition or named transition is happening.
    // Hopefully we can remove this in the future.
    var targetRouteName = handlerInfos[handlerInfos.length - 1].name;
    var recogHandlers = router._routerMicrolib.recognizer.handlersFor(targetRouteName);
    var dynamicParent = null;

    for (var i = 0; i < handlerInfos.length; ++i) {
      var handlerInfo = handlerInfos[i];
      var names = recogHandlers[i].names;

      if (names.length) {
        dynamicParent = handlerInfo;
      }

      handlerInfo._names = names;

      var route = handlerInfo.handler;
      route._stashNames(handlerInfo, dynamicParent);
    }

    handlerInfos._namesStashed = true;
  }

  function _calculateCacheValuePrefix(prefix, part) {
    // calculates the dot separated sections from prefix that are also
    // at the start of part - which gives us the route name

    // given : prefix = site.article.comments, part = site.article.id
    //      - returns: site.article (use get(values[site.article], 'id') to get the dynamic part - used below)

    // given : prefix = site.article, part = site.article.id
    //      - returns: site.article. (use get(values[site.article], 'id') to get the dynamic part - used below)

    var prefixParts = prefix.split('.');
    var currPrefix = '';

    for (var i = 0; i < prefixParts.length; i++) {
      var currPart = prefixParts.slice(0, i + 1).join('.');
      if (part.indexOf(currPart) !== 0) {
        break;
      }
      currPrefix = currPart;
    }

    return currPrefix;
  }

  /*
    Stolen from Controller
  */
  function calculateCacheKey(prefix) {
    var parts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var values = arguments[2];

    var suffixes = '';
    for (var i = 0; i < parts.length; ++i) {
      var part = parts[i];
      var cacheValuePrefix = _calculateCacheValuePrefix(prefix, part);
      var value = void 0;
      if (values) {
        if (cacheValuePrefix && cacheValuePrefix in values) {
          var partRemovedPrefix = part.indexOf(cacheValuePrefix) === 0 ? part.substr(cacheValuePrefix.length + 1) : part;
          value = (0, _emberMetal.get)(values[cacheValuePrefix], partRemovedPrefix);
        } else {
          value = (0, _emberMetal.get)(values, part);
        }
      }
      suffixes += '::' + part + ':' + value;
    }
    return prefix + suffixes.replace(ALL_PERIODS_REGEX, '-');
  }

  /*
    Controller-defined query parameters can come in three shapes:
  
    Array
      queryParams: ['foo', 'bar']
    Array of simple objects where value is an alias
      queryParams: [
        {
          'foo': 'rename_foo_to_this'
        },
        {
          'bar': 'call_bar_this_instead'
        }
      ]
    Array of fully defined objects
      queryParams: [
        {
          'foo': {
            as: 'rename_foo_to_this'
          },
        }
        {
          'bar': {
            as: 'call_bar_this_instead',
            scope: 'controller'
          }
        }
      ]
  
    This helper normalizes all three possible styles into the
    'Array of fully defined objects' style.
  */
  function normalizeControllerQueryParams(queryParams) {
    var qpMap = {};

    for (var i = 0; i < queryParams.length; ++i) {
      accumulateQueryParamDescriptors(queryParams[i], qpMap);
    }

    return qpMap;
  }

  function accumulateQueryParamDescriptors(_desc, accum) {
    var desc = _desc;
    var tmp = void 0;
    if (typeof desc === 'string') {
      tmp = {};
      tmp[desc] = { as: null };
      desc = tmp;
    }

    for (var key in desc) {
      if (!desc.hasOwnProperty(key)) {
        return;
      }

      var singleDesc = desc[key];
      if (typeof singleDesc === 'string') {
        singleDesc = { as: singleDesc };
      }

      tmp = accum[key] || { as: null, scope: 'model' };
      (0, _emberUtils.assign)(tmp, singleDesc);

      accum[key] = tmp;
    }
  }

  /*
    Check if a routeName resembles a url instead
  
    @private
  */
  function resemblesURL(str) {
    return typeof str === 'string' && (str === '' || str.charAt(0) === '/');
  }

  /*
    Returns an arguments array where the route name arg is prefixed based on the mount point
  
    @private
  */
  function prefixRouteNameArg(route, args) {
    var routeName = args[0];
    var owner = (0, _emberUtils.getOwner)(route);
    var prefix = owner.mountPoint;

    // only alter the routeName if it's actually referencing a route.
    if (owner.routable && typeof routeName === 'string') {
      if (resemblesURL(routeName)) {
        throw new _emberDebug.Error('Programmatic transitions by URL cannot be used within an Engine. Please use the route name instead.');
      } else {
        routeName = prefix + '.' + routeName;
        args[0] = routeName;
      }
    }

    return args;
  }

  function shallowEqual(a, b) {
    var k = void 0;
    var aCount = 0;
    var bCount = 0;
    for (k in a) {
      if (a.hasOwnProperty(k)) {
        if (a[k] !== b[k]) {
          return false;
        }
        aCount++;
      }
    }

    for (k in b) {
      if (b.hasOwnProperty(k)) {
        bCount++;
      }
    }

    return aCount === bCount;
  }
});
enifed('ember-runtime/compare', ['exports', 'ember-runtime/utils', 'ember-runtime/mixins/comparable'], function (exports, _utils, _comparable) {
  'use strict';

  exports.default = compare;


  var TYPE_ORDER = {
    'undefined': 0,
    'null': 1,
    'boolean': 2,
    'number': 3,
    'string': 4,
    'array': 5,
    'object': 6,
    'instance': 7,
    'function': 8,
    'class': 9,
    'date': 10
  };

  //
  // the spaceship operator
  //
  //                      `. ___
  //                     __,' __`.                _..----....____
  //         __...--.'``;.   ,.   ;``--..__     .'    ,-._    _.-'
  //   _..-''-------'   `'   `'   `'     O ``-''._   (,;') _,'
  // ,'________________                          \`-._`-','
  //  `._              ```````````------...___   '-.._'-:
  //     ```--.._      ,.                     ````--...__\-.
  //             `.--. `-` "INFINITY IS LESS     ____    |  |`
  //               `. `.   THAN BEYOND"        ,'`````.  ;  ;`
  //                 `._`.        __________   `.      \'__/`
  //                    `-:._____/______/___/____`.     \  `
  //                                |       `._    `.    \
  //                                `._________`-.   `.   `.___
  //                                              SSt  `------'`
  function spaceship(a, b) {
    var diff = a - b;
    return (diff > 0) - (diff < 0);
  }

  /**
   Compares two javascript values and returns:
  
    - -1 if the first is smaller than the second,
    - 0 if both are equal,
    - 1 if the first is greater than the second.
  
    ```javascript
    Ember.compare('hello', 'hello');  // 0
    Ember.compare('abc', 'dfg');      // -1
    Ember.compare(2, 1);              // 1
    ```
  
   If the types of the two objects are different precedence occurs in the
   following order, with types earlier in the list considered `<` types
   later in the list:
  
    - undefined
    - null
    - boolean
    - number
    - string
    - array
    - object
    - instance
    - function
    - class
    - date
  
    ```javascript
    Ember.compare('hello', 50);       // 1
    Ember.compare(50, 'hello');       // -1
    ```
  
   @method compare
   @for Ember
   @param {Object} v First value to compare
   @param {Object} w Second value to compare
   @return {Number} -1 if v < w, 0 if v = w and 1 if v > w.
   @public
  */
  function compare(v, w) {
    if (v === w) {
      return 0;
    }

    var type1 = (0, _utils.typeOf)(v);
    var type2 = (0, _utils.typeOf)(w);

    if (_comparable.default) {
      if (type1 === 'instance' && _comparable.default.detect(v) && v.constructor.compare) {
        return v.constructor.compare(v, w);
      }

      if (type2 === 'instance' && _comparable.default.detect(w) && w.constructor.compare) {
        return w.constructor.compare(w, v) * -1;
      }
    }

    var res = spaceship(TYPE_ORDER[type1], TYPE_ORDER[type2]);

    if (res !== 0) {
      return res;
    }

    // types are equal - so we have to check values now
    switch (type1) {
      case 'boolean':
      case 'number':
        return spaceship(v, w);

      case 'string':
        return spaceship(v.localeCompare(w), 0);

      case 'array':
        {
          var vLen = v.length;
          var wLen = w.length;
          var len = Math.min(vLen, wLen);

          for (var i = 0; i < len; i++) {
            var r = compare(v[i], w[i]);
            if (r !== 0) {
              return r;
            }
          }

          // all elements are equal now
          // shorter array should be ordered first
          return spaceship(vLen, wLen);
        }
      case 'instance':
        if (_comparable.default && _comparable.default.detect(v)) {
          return v.compare(v, w);
        }
        return 0;

      case 'date':
        return spaceship(v.getTime(), w.getTime());

      default:
        return 0;
    }
  }
});
enifed('ember-runtime/computed/computed_macros', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.or = exports.and = undefined;
  exports.empty = empty;
  exports.notEmpty = notEmpty;
  exports.none = none;
  exports.not = not;
  exports.bool = bool;
  exports.match = match;
  exports.equal = equal;
  exports.gt = gt;
  exports.gte = gte;
  exports.lt = lt;
  exports.lte = lte;
  exports.oneWay = oneWay;
  exports.readOnly = readOnly;
  exports.deprecatingAlias = deprecatingAlias;


  /**
  @module @ember/object
  */

  function expandPropertiesToArray(predicateName, properties) {
    var expandedProperties = [];

    function extractProperty(entry) {
      expandedProperties.push(entry);
    }

    for (var i = 0; i < properties.length; i++) {
      var property = properties[i];
      (true && !(property.indexOf(' ') < 0) && (0, _emberDebug.assert)('Dependent keys passed to Ember.computed.' + predicateName + '() can\'t have spaces.', property.indexOf(' ') < 0));


      (0, _emberMetal.expandProperties)(property, extractProperty);
    }

    return expandedProperties;
  }

  function generateComputedWithPredicate(name, predicate) {
    return function () {
      for (var _len = arguments.length, properties = Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }

      var dependentKeys = expandPropertiesToArray(name, properties);

      var computedFunc = new _emberMetal.ComputedProperty(function () {
        var lastIdx = dependentKeys.length - 1;

        for (var i = 0; i < lastIdx; i++) {
          var value = (0, _emberMetal.get)(this, dependentKeys[i]);
          if (!predicate(value)) {
            return value;
          }
        }

        return (0, _emberMetal.get)(this, dependentKeys[lastIdx]);
      }, { dependentKeys: dependentKeys });

      return computedFunc;
    };
  }

  /**
    A computed property that returns true if the value of the dependent
    property is null, an empty string, empty array, or empty function.
  
    Example
  
    ```javascript
    let ToDoList = Ember.Object.extend({
      isDone: Ember.computed.empty('todos')
    });
  
    let todoList = ToDoList.create({
      todos: ['Unit Test', 'Documentation', 'Release']
    });
  
    todoList.get('isDone'); // false
    todoList.get('todos').clear();
    todoList.get('isDone'); // true
    ```
  
    @since 1.6.0
    @method empty
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which negate
    the original value for property
    @public
  */
  function empty(dependentKey) {
    return (0, _emberMetal.computed)(dependentKey + '.length', function () {
      return (0, _emberMetal.isEmpty)((0, _emberMetal.get)(this, dependentKey));
    });
  }

  /**
    A computed property that returns true if the value of the dependent
    property is NOT null, an empty string, empty array, or empty function.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      hasStuff: Ember.computed.notEmpty('backpack')
    });
  
    let hamster = Hamster.create({ backpack: ['Food', 'Sleeping Bag', 'Tent'] });
  
    hamster.get('hasStuff');         // true
    hamster.get('backpack').clear(); // []
    hamster.get('hasStuff');         // false
    ```
  
    @method notEmpty
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which returns true if
    original value for property is not empty.
    @public
  */
  function notEmpty(dependentKey) {
    return (0, _emberMetal.computed)(dependentKey + '.length', function () {
      return !(0, _emberMetal.isEmpty)((0, _emberMetal.get)(this, dependentKey));
    });
  }

  /**
    A computed property that returns true if the value of the dependent
    property is null or undefined. This avoids errors from JSLint complaining
    about use of ==, which can be technically confusing.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      isHungry: Ember.computed.none('food')
    });
  
    let hamster = Hamster.create();
  
    hamster.get('isHungry'); // true
    hamster.set('food', 'Banana');
    hamster.get('isHungry'); // false
    hamster.set('food', null);
    hamster.get('isHungry'); // true
    ```
  
    @method none
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which
    returns true if original value for property is null or undefined.
    @public
  */
  function none(dependentKey) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.isNone)((0, _emberMetal.get)(this, dependentKey));
    });
  }

  /**
    A computed property that returns the inverse boolean value
    of the original value for the dependent property.
  
    Example
  
    ```javascript
    let User = Ember.Object.extend({
      isAnonymous: Ember.computed.not('loggedIn')
    });
  
    let user = User.create({loggedIn: false});
  
    user.get('isAnonymous'); // true
    user.set('loggedIn', true);
    user.get('isAnonymous'); // false
    ```
  
    @method not
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which returns
    inverse of the original value for property
    @public
  */
  function not(dependentKey) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return !(0, _emberMetal.get)(this, dependentKey);
    });
  }

  /**
    A computed property that converts the provided dependent property
    into a boolean value.
  
    ```javascript
    let Hamster = Ember.Object.extend({
      hasBananas: Ember.computed.bool('numBananas')
    });
  
    let hamster = Hamster.create();
  
    hamster.get('hasBananas'); // false
    hamster.set('numBananas', 0);
    hamster.get('hasBananas'); // false
    hamster.set('numBananas', 1);
    hamster.get('hasBananas'); // true
    hamster.set('numBananas', null);
    hamster.get('hasBananas'); // false
    ```
  
    @method bool
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which converts
    to boolean the original value for property
    @public
  */
  function bool(dependentKey) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return !!(0, _emberMetal.get)(this, dependentKey);
    });
  }

  /**
    A computed property which matches the original value for the
    dependent property against a given RegExp, returning `true`
    if the value matches the RegExp and `false` if it does not.
  
    Example
  
    ```javascript
    let User = Ember.Object.extend({
      hasValidEmail: Ember.computed.match('email', /^.+@.+\..+$/)
    });
  
    let user = User.create({loggedIn: false});
  
    user.get('hasValidEmail'); // false
    user.set('email', '');
    user.get('hasValidEmail'); // false
    user.set('email', 'ember_hamster@example.com');
    user.get('hasValidEmail'); // true
    ```
  
    @method match
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {RegExp} regexp
    @return {ComputedProperty} computed property which match
    the original value for property against a given RegExp
    @public
  */
  function match(dependentKey, regexp) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      var value = (0, _emberMetal.get)(this, dependentKey);
      return regexp.test(value);
    });
  }

  /**
    A computed property that returns true if the provided dependent property
    is equal to the given value.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      satisfied: Ember.computed.equal('percentCarrotsEaten', 100)
    });
  
    let hamster = Hamster.create();
  
    hamster.get('satisfied'); // false
    hamster.set('percentCarrotsEaten', 100);
    hamster.get('satisfied'); // true
    hamster.set('percentCarrotsEaten', 50);
    hamster.get('satisfied'); // false
    ```
  
    @method equal
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {String|Number|Object} value
    @return {ComputedProperty} computed property which returns true if
    the original value for property is equal to the given value.
    @public
  */
  function equal(dependentKey, value) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.get)(this, dependentKey) === value;
    });
  }

  /**
    A computed property that returns true if the provided dependent property
    is greater than the provided value.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      hasTooManyBananas: Ember.computed.gt('numBananas', 10)
    });
  
    let hamster = Hamster.create();
  
    hamster.get('hasTooManyBananas'); // false
    hamster.set('numBananas', 3);
    hamster.get('hasTooManyBananas'); // false
    hamster.set('numBananas', 11);
    hamster.get('hasTooManyBananas'); // true
    ```
  
    @method gt
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {Number} value
    @return {ComputedProperty} computed property which returns true if
    the original value for property is greater than given value.
    @public
  */
  function gt(dependentKey, value) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.get)(this, dependentKey) > value;
    });
  }

  /**
    A computed property that returns true if the provided dependent property
    is greater than or equal to the provided value.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      hasTooManyBananas: Ember.computed.gte('numBananas', 10)
    });
  
    let hamster = Hamster.create();
  
    hamster.get('hasTooManyBananas'); // false
    hamster.set('numBananas', 3);
    hamster.get('hasTooManyBananas'); // false
    hamster.set('numBananas', 10);
    hamster.get('hasTooManyBananas'); // true
    ```
  
    @method gte
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {Number} value
    @return {ComputedProperty} computed property which returns true if
    the original value for property is greater or equal then given value.
    @public
  */
  function gte(dependentKey, value) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.get)(this, dependentKey) >= value;
    });
  }

  /**
    A computed property that returns true if the provided dependent property
    is less than the provided value.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      needsMoreBananas: Ember.computed.lt('numBananas', 3)
    });
  
    let hamster = Hamster.create();
  
    hamster.get('needsMoreBananas'); // true
    hamster.set('numBananas', 3);
    hamster.get('needsMoreBananas'); // false
    hamster.set('numBananas', 2);
    hamster.get('needsMoreBananas'); // true
    ```
  
    @method lt
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {Number} value
    @return {ComputedProperty} computed property which returns true if
    the original value for property is less then given value.
    @public
  */
  function lt(dependentKey, value) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.get)(this, dependentKey) < value;
    });
  }

  /**
    A computed property that returns true if the provided dependent property
    is less than or equal to the provided value.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      needsMoreBananas: Ember.computed.lte('numBananas', 3)
    });
  
    let hamster = Hamster.create();
  
    hamster.get('needsMoreBananas'); // true
    hamster.set('numBananas', 5);
    hamster.get('needsMoreBananas'); // false
    hamster.set('numBananas', 3);
    hamster.get('needsMoreBananas'); // true
    ```
  
    @method lte
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {Number} value
    @return {ComputedProperty} computed property which returns true if
    the original value for property is less or equal than given value.
    @public
  */
  function lte(dependentKey, value) {
    return (0, _emberMetal.computed)(dependentKey, function () {
      return (0, _emberMetal.get)(this, dependentKey) <= value;
    });
  }

  /**
    A computed property that performs a logical `and` on the
    original values for the provided dependent properties.
  
    You may pass in more than two properties and even use
    property brace expansion.  The computed property will
    return the first falsy value or last truthy value
    just like JavaScript's `&&` operator.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      readyForCamp: Ember.computed.and('hasTent', 'hasBackpack'),
      readyForHike: Ember.computed.and('hasWalkingStick', 'hasBackpack')
    });
  
    let tomster = Hamster.create();
  
    tomster.get('readyForCamp'); // false
    tomster.set('hasTent', true);
    tomster.get('readyForCamp'); // false
    tomster.set('hasBackpack', true);
    tomster.get('readyForCamp'); // true
    tomster.set('hasBackpack', 'Yes');
    tomster.get('readyForCamp'); // 'Yes'
    tomster.set('hasWalkingStick', null);
    tomster.get('readyForHike'); // null
    ```
  
    @method and
    @static
    @for @ember/object/computed
    @param {String} dependentKey*
    @return {ComputedProperty} computed property which performs
    a logical `and` on the values of all the original values for properties.
    @public
  */
  var and = exports.and = generateComputedWithPredicate('and', function (value) {
    return value;
  });

  /**
    A computed property which performs a logical `or` on the
    original values for the provided dependent properties.
  
    You may pass in more than two properties and even use
    property brace expansion.  The computed property will
    return the first truthy value or last falsy value just
    like JavaScript's `||` operator.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      readyForRain: Ember.computed.or('hasJacket', 'hasUmbrella'),
      readyForBeach: Ember.computed.or('{hasSunscreen,hasUmbrella}')
    });
  
    let tomster = Hamster.create();
  
    tomster.get('readyForRain'); // undefined
    tomster.set('hasUmbrella', true);
    tomster.get('readyForRain'); // true
    tomster.set('hasJacket', 'Yes');
    tomster.get('readyForRain'); // 'Yes'
    tomster.set('hasSunscreen', 'Check');
    tomster.get('readyForBeach'); // 'Check'
    ```
  
    @method or
    @static
    @for @ember/object/computed
    @param {String} dependentKey*
    @return {ComputedProperty} computed property which performs
    a logical `or` on the values of all the original values for properties.
    @public
  */
  var or = exports.or = generateComputedWithPredicate('or', function (value) {
    return !value;
  });

  /**
    Creates a new property that is an alias for another property
    on an object. Calls to `get` or `set` this property behave as
    though they were called on the original property.
  
    ```javascript
    let Person = Ember.Object.extend({
      name: 'Alex Matchneer',
      nomen: Ember.computed.alias('name')
    });
  
    let alex = Person.create();
  
    alex.get('nomen'); // 'Alex Matchneer'
    alex.get('name');  // 'Alex Matchneer'
  
    alex.set('nomen', '@machty');
    alex.get('name');  // '@machty'
    ```
  
    @method alias
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which creates an
    alias to the original value for property.
    @public
  */

  /**
    Where `computed.alias` aliases `get` and `set`, and allows for bidirectional
    data flow, `computed.oneWay` only provides an aliased `get`. The `set` will
    not mutate the upstream property, rather causes the current property to
    become the value set. This causes the downstream property to permanently
    diverge from the upstream property.
  
    Example
  
    ```javascript
    let User = Ember.Object.extend({
      firstName: null,
      lastName: null,
      nickName: Ember.computed.oneWay('firstName')
    });
  
    let teddy = User.create({
      firstName: 'Teddy',
      lastName:  'Zeenny'
    });
  
    teddy.get('nickName');              // 'Teddy'
    teddy.set('nickName', 'TeddyBear'); // 'TeddyBear'
    teddy.get('firstName');             // 'Teddy'
    ```
  
    @method oneWay
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which creates a
    one way computed property to the original value for property.
    @public
  */
  function oneWay(dependentKey) {
    return (0, _emberMetal.alias)(dependentKey).oneWay();
  }

  /**
    This is a more semantically meaningful alias of `computed.oneWay`,
    whose name is somewhat ambiguous as to which direction the data flows.
  
    @method reads
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which creates a
      one way computed property to the original value for property.
    @public
   */

  /**
    Where `computed.oneWay` provides oneWay bindings, `computed.readOnly` provides
    a readOnly one way binding. Very often when using `computed.oneWay` one does
    not also want changes to propagate back up, as they will replace the value.
  
    This prevents the reverse flow, and also throws an exception when it occurs.
  
    Example
  
    ```javascript
    let User = Ember.Object.extend({
      firstName: null,
      lastName: null,
      nickName: Ember.computed.readOnly('firstName')
    });
  
    let teddy = User.create({
      firstName: 'Teddy',
      lastName:  'Zeenny'
    });
  
    teddy.get('nickName');              // 'Teddy'
    teddy.set('nickName', 'TeddyBear'); // throws Exception
    // throw new Ember.Error('Cannot Set: nickName on: <User:ember27288>' );`
    teddy.get('firstName');             // 'Teddy'
    ```
  
    @method readOnly
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @return {ComputedProperty} computed property which creates a
    one way computed property to the original value for property.
    @since 1.5.0
    @public
  */
  function readOnly(dependentKey) {
    return (0, _emberMetal.alias)(dependentKey).readOnly();
  }

  /**
    Creates a new property that is an alias for another property
    on an object. Calls to `get` or `set` this property behave as
    though they were called on the original property, but also
    print a deprecation warning.
  
    ```javascript
    let Hamster = Ember.Object.extend({
      bananaCount: Ember.computed.deprecatingAlias('cavendishCount', {
        id: 'hamster.deprecate-banana',
        until: '3.0.0'
      })
    });
  
    let hamster = Hamster.create();
  
    hamster.set('bananaCount', 5); // Prints a deprecation warning.
    hamster.get('cavendishCount'); // 5
    ```
  
    @method deprecatingAlias
    @static
    @for @ember/object/computed
    @param {String} dependentKey
    @param {Object} options Options for `Ember.deprecate`.
    @return {ComputedProperty} computed property which creates an
    alias with a deprecation to the original value for property.
    @since 1.7.0
    @public
  */
  function deprecatingAlias(dependentKey, options) {
    return (0, _emberMetal.computed)(dependentKey, {
      get: function (key) {
        (true && !(false) && (0, _emberDebug.deprecate)('Usage of `' + key + '` is deprecated, use `' + dependentKey + '` instead.', false, options));

        return (0, _emberMetal.get)(this, dependentKey);
      },
      set: function (key, value) {
        (true && !(false) && (0, _emberDebug.deprecate)('Usage of `' + key + '` is deprecated, use `' + dependentKey + '` instead.', false, options));

        (0, _emberMetal.set)(this, dependentKey, value);
        return value;
      }
    });
  }
});
enifed('ember-runtime/computed/reduce_computed_macros', ['exports', 'ember-utils', 'ember-debug', 'ember-metal', 'ember-runtime/compare', 'ember-runtime/utils', 'ember-runtime/system/native_array'], function (exports, _emberUtils, _emberDebug, _emberMetal, _compare, _utils, _native_array) {
  'use strict';

  exports.union = undefined;
  exports.sum = sum;
  exports.max = max;
  exports.min = min;
  exports.map = map;
  exports.mapBy = mapBy;
  exports.filter = filter;
  exports.filterBy = filterBy;
  exports.uniq = uniq;
  exports.uniqBy = uniqBy;
  exports.intersect = intersect;
  exports.setDiff = setDiff;
  exports.collect = collect;
  exports.sort = sort;
  /**
  @module @ember/object
  */

  function reduceMacro(dependentKey, callback, initialValue) {
    var cp = new _emberMetal.ComputedProperty(function () {
      var arr = (0, _emberMetal.get)(this, dependentKey);
      if (arr === null || typeof arr !== 'object') {
        return initialValue;
      }
      return arr.reduce(callback, initialValue, this);
    }, { dependentKeys: [dependentKey + '.[]'], readOnly: true });

    return cp;
  }

  function arrayMacro(dependentKey, callback) {
    // This is a bit ugly
    var propertyName = void 0;
    if (/@each/.test(dependentKey)) {
      propertyName = dependentKey.replace(/\.@each.*$/, '');
    } else {
      propertyName = dependentKey;
      dependentKey += '.[]';
    }

    var cp = new _emberMetal.ComputedProperty(function () {
      var value = (0, _emberMetal.get)(this, propertyName);
      if ((0, _utils.isArray)(value)) {
        return (0, _native_array.A)(callback.call(this, value));
      } else {
        return (0, _native_array.A)();
      }
    }, { dependentKeys: [dependentKey], readOnly: true });

    return cp;
  }

  function multiArrayMacro(_dependentKeys, callback) {
    var dependentKeys = _dependentKeys.map(function (key) {
      return key + '.[]';
    });

    var cp = new _emberMetal.ComputedProperty(function () {
      return (0, _native_array.A)(callback.call(this, _dependentKeys));
    }, { dependentKeys: dependentKeys, readOnly: true });

    return cp;
  }

  /**
    A computed property that returns the sum of the values
    in the dependent array.
  
    @method sum
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @return {Ember.ComputedProperty} computes the sum of all values in the dependentKey's array
    @since 1.4.0
    @public
  */
  function sum(dependentKey) {
    return reduceMacro(dependentKey, function (sum, item) {
      return sum + item;
    }, 0);
  }

  /**
    A computed property that calculates the maximum value in the
    dependent array. This will return `-Infinity` when the dependent
    array is empty.
  
    ```javascript
    let Person = Ember.Object.extend({
      childAges: Ember.computed.mapBy('children', 'age'),
      maxChildAge: Ember.computed.max('childAges')
    });
  
    let lordByron = Person.create({ children: [] });
  
    lordByron.get('maxChildAge'); // -Infinity
    lordByron.get('children').pushObject({
      name: 'Augusta Ada Byron', age: 7
    });
    lordByron.get('maxChildAge'); // 7
    lordByron.get('children').pushObjects([{
      name: 'Allegra Byron',
      age: 5
    }, {
      name: 'Elizabeth Medora Leigh',
      age: 8
    }]);
    lordByron.get('maxChildAge'); // 8
    ```
  
    If the types of the arguments are not numbers,
    they will be converted to numbers and the type
    of the return value will always be `Number`.
    For example, the max of a list of Date objects will be
    the highest timestamp as a `Number`.
    This behavior is consistent with `Math.max`.
  
    @method max
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @return {Ember.ComputedProperty} computes the largest value in the dependentKey's array
    @public
  */
  function max(dependentKey) {
    return reduceMacro(dependentKey, function (max, item) {
      return Math.max(max, item);
    }, -Infinity);
  }

  /**
    A computed property that calculates the minimum value in the
    dependent array. This will return `Infinity` when the dependent
    array is empty.
  
    ```javascript
    let Person = Ember.Object.extend({
      childAges: Ember.computed.mapBy('children', 'age'),
      minChildAge: Ember.computed.min('childAges')
    });
  
    let lordByron = Person.create({ children: [] });
  
    lordByron.get('minChildAge'); // Infinity
    lordByron.get('children').pushObject({
      name: 'Augusta Ada Byron', age: 7
    });
    lordByron.get('minChildAge'); // 7
    lordByron.get('children').pushObjects([{
      name: 'Allegra Byron',
      age: 5
    }, {
      name: 'Elizabeth Medora Leigh',
      age: 8
    }]);
    lordByron.get('minChildAge'); // 5
    ```
  
    If the types of the arguments are not numbers,
    they will be converted to numbers and the type
    of the return value will always be `Number`.
    For example, the min of a list of Date objects will be
    the lowest timestamp as a `Number`.
    This behavior is consistent with `Math.min`.
  
    @method min
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @return {Ember.ComputedProperty} computes the smallest value in the dependentKey's array
    @public
  */
  function min(dependentKey) {
    return reduceMacro(dependentKey, function (min, item) {
      return Math.min(min, item);
    }, Infinity);
  }

  /**
    Returns an array mapped via the callback
  
    The callback method you provide should have the following signature.
    `item` is the current item in the iteration.
    `index` is the integer index of the current item in the iteration.
  
    ```javascript
    function(item, index);
    ```
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      excitingChores: Ember.computed.map('chores', function(chore, index) {
        return chore.toUpperCase() + '!';
      })
    });
  
    let hamster = Hamster.create({
      chores: ['clean', 'write more unit tests']
    });
  
    hamster.get('excitingChores'); // ['CLEAN!', 'WRITE MORE UNIT TESTS!']
    ```
  
    @method map
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @param {Function} callback
    @return {Ember.ComputedProperty} an array mapped via the callback
    @public
  */
  function map(dependentKey, callback) {
    return arrayMacro(dependentKey, function (value) {
      return value.map(callback, this);
    });
  }

  /**
    Returns an array mapped to the specified key.
  
    ```javascript
    let Person = Ember.Object.extend({
      childAges: Ember.computed.mapBy('children', 'age')
    });
  
    let lordByron = Person.create({ children: [] });
  
    lordByron.get('childAges'); // []
    lordByron.get('children').pushObject({ name: 'Augusta Ada Byron', age: 7 });
    lordByron.get('childAges'); // [7]
    lordByron.get('children').pushObjects([{
      name: 'Allegra Byron',
      age: 5
    }, {
      name: 'Elizabeth Medora Leigh',
      age: 8
    }]);
    lordByron.get('childAges'); // [7, 5, 8]
    ```
  
    @method mapBy
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @param {String} propertyKey
    @return {Ember.ComputedProperty} an array mapped to the specified key
    @public
  */
  function mapBy(dependentKey, propertyKey) {
    (true && !(typeof propertyKey === 'string') && (0, _emberDebug.assert)('Ember.computed.mapBy expects a property string for its second argument, ' + 'perhaps you meant to use "map"', typeof propertyKey === 'string'));


    return map(dependentKey + '.@each.' + propertyKey, function (item) {
      return (0, _emberMetal.get)(item, propertyKey);
    });
  }

  /**
    Filters the array by the callback.
  
    The callback method you provide should have the following signature.
    `item` is the current item in the iteration.
    `index` is the integer index of the current item in the iteration.
    `array` is the dependant array itself.
  
    ```javascript
    function(item, index, array);
    ```
  
    ```javascript
    let Hamster = Ember.Object.extend({
      remainingChores: Ember.computed.filter('chores', function(chore, index, array) {
        return !chore.done;
      })
    });
  
    let hamster = Hamster.create({
      chores: [
        { name: 'cook', done: true },
        { name: 'clean', done: true },
        { name: 'write more unit tests', done: false }
      ]
    });
  
    hamster.get('remainingChores'); // [{name: 'write more unit tests', done: false}]
    ```
  
    You can also use `@each.property` in your dependent key, the callback will still use the underlying array:
  
    ```javascript
    let Hamster = Ember.Object.extend({
      remainingChores: Ember.computed.filter('chores.@each.done', function(chore, index, array) {
        return !chore.get('done');
      })
    });
  
    let hamster = Hamster.create({
      chores: Ember.A([
        Ember.Object.create({ name: 'cook', done: true }),
        Ember.Object.create({ name: 'clean', done: true }),
        Ember.Object.create({ name: 'write more unit tests', done: false })
      ])
    });
    hamster.get('remainingChores'); // [{name: 'write more unit tests', done: false}]
    hamster.get('chores').objectAt(2).set('done', true);
    hamster.get('remainingChores'); // []
    ```
  
  
    @method filter
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @param {Function} callback
    @return {Ember.ComputedProperty} the filtered array
    @public
  */
  function filter(dependentKey, callback) {
    return arrayMacro(dependentKey, function (value) {
      return value.filter(callback, this);
    });
  }

  /**
    Filters the array by the property and value
  
    ```javascript
    let Hamster = Ember.Object.extend({
      remainingChores: Ember.computed.filterBy('chores', 'done', false)
    });
  
    let hamster = Hamster.create({
      chores: [
        { name: 'cook', done: true },
        { name: 'clean', done: true },
        { name: 'write more unit tests', done: false }
      ]
    });
  
    hamster.get('remainingChores'); // [{ name: 'write more unit tests', done: false }]
    ```
  
    @method filterBy
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @param {String} propertyKey
    @param {*} value
    @return {Ember.ComputedProperty} the filtered array
    @public
  */
  function filterBy(dependentKey, propertyKey, value) {
    var callback = void 0;

    if (arguments.length === 2) {
      callback = function (item) {
        return (0, _emberMetal.get)(item, propertyKey);
      };
    } else {
      callback = function (item) {
        return (0, _emberMetal.get)(item, propertyKey) === value;
      };
    }

    return filter(dependentKey + '.@each.' + propertyKey, callback);
  }

  /**
    A computed property which returns a new array with all the unique
    elements from one or more dependent arrays.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      uniqueFruits: Ember.computed.uniq('fruits')
    });
  
    let hamster = Hamster.create({
      fruits: [
        'banana',
        'grape',
        'kale',
        'banana'
      ]
    });
  
    hamster.get('uniqueFruits'); // ['banana', 'grape', 'kale']
    ```
  
    @method uniq
    @for @ember/object/computed
    @static
    @param {String} propertyKey*
    @return {Ember.ComputedProperty} computes a new array with all the
    unique elements from the dependent array
    @public
  */
  function uniq() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return multiArrayMacro(args, function (dependentKeys) {
      var _this = this;

      var uniq = (0, _native_array.A)();

      dependentKeys.forEach(function (dependentKey) {
        var value = (0, _emberMetal.get)(_this, dependentKey);
        if ((0, _utils.isArray)(value)) {
          value.forEach(function (item) {
            if (uniq.indexOf(item) === -1) {
              uniq.push(item);
            }
          });
        }
      });

      return uniq;
    });
  }

  /**
    A computed property which returns a new array with all the unique
    elements from an array, with uniqueness determined by specific key.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      uniqueFruits: Ember.computed.uniqBy('fruits', 'id')
    });
    let hamster = Hamster.create({
      fruits: [
        { id: 1, 'banana' },
        { id: 2, 'grape' },
        { id: 3, 'peach' },
        { id: 1, 'banana' }
      ]
    });
    hamster.get('uniqueFruits'); // [ { id: 1, 'banana' }, { id: 2, 'grape' }, { id: 3, 'peach' }]
    ```
  
    @method uniqBy
    @for @ember/object/computed
    @static
    @param {String} dependentKey
    @param {String} propertyKey
    @return {Ember.ComputedProperty} computes a new array with all the
    unique elements from the dependent array
    @public
  */
  function uniqBy(dependentKey, propertyKey) {
    var cp = new _emberMetal.ComputedProperty(function () {
      var uniq = (0, _native_array.A)();
      var seen = Object.create(null);
      var list = (0, _emberMetal.get)(this, dependentKey);
      if ((0, _utils.isArray)(list)) {
        list.forEach(function (item) {
          var guid = (0, _emberUtils.guidFor)((0, _emberMetal.get)(item, propertyKey));
          if (!(guid in seen)) {
            seen[guid] = true;
            uniq.push(item);
          }
        });
      }
      return uniq;
    }, { dependentKeys: [dependentKey + '.[]'], readOnly: true });

    return cp;
  }

  /**
    A computed property which returns a new array with all the unique
    elements from one or more dependent arrays.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      uniqueFruits: Ember.computed.union('fruits', 'vegetables')
    });
  
    let hamster = Hamster.create({
      fruits: [
        'banana',
        'grape',
        'kale',
        'banana',
        'tomato'
      ],
      vegetables: [
        'tomato',
        'carrot',
        'lettuce'
      ]
    });
  
    hamster.get('uniqueFruits'); // ['banana', 'grape', 'kale', 'tomato', 'carrot', 'lettuce']
    ```
  
    @method union
    @for @ember/object/computed
    @static
    @param {String} propertyKey*
    @return {Ember.ComputedProperty} computes a new array with all the
    unique elements from the dependent array
    @public
  */
  var union = exports.union = uniq;

  /**
    A computed property which returns a new array with all the elements
    two or more dependent arrays have in common.
  
    Example
  
    ```javascript
    let obj = Ember.Object.extend({
      friendsInCommon: Ember.computed.intersect('adaFriends', 'charlesFriends')
    }).create({
      adaFriends: ['Charles Babbage', 'John Hobhouse', 'William King', 'Mary Somerville'],
      charlesFriends: ['William King', 'Mary Somerville', 'Ada Lovelace', 'George Peacock']
    });
  
    obj.get('friendsInCommon'); // ['William King', 'Mary Somerville']
    ```
  
    @method intersect
    @for @ember/object/computed
    @static
    @param {String} propertyKey*
    @return {Ember.ComputedProperty} computes a new array with all the
    duplicated elements from the dependent arrays
    @public
  */
  function intersect() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return multiArrayMacro(args, function (dependentKeys) {
      var _this2 = this;

      var arrays = dependentKeys.map(function (dependentKey) {
        var array = (0, _emberMetal.get)(_this2, dependentKey);
        return (0, _utils.isArray)(array) ? array : [];
      });

      var results = arrays.pop().filter(function (candidate) {
        for (var i = 0; i < arrays.length; i++) {
          var found = false;
          var array = arrays[i];
          for (var j = 0; j < array.length; j++) {
            if (array[j] === candidate) {
              found = true;
              break;
            }
          }

          if (found === false) {
            return false;
          }
        }

        return true;
      });

      return (0, _native_array.A)(results);
    });
  }

  /**
    A computed property which returns a new array with all the
    properties from the first dependent array that are not in the second
    dependent array.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      likes: ['banana', 'grape', 'kale'],
      wants: Ember.computed.setDiff('likes', 'fruits')
    });
  
    let hamster = Hamster.create({
      fruits: [
        'grape',
        'kale',
      ]
    });
  
    hamster.get('wants'); // ['banana']
    ```
  
    @method setDiff
    @for @ember/object/computed
    @static
    @param {String} setAProperty
    @param {String} setBProperty
    @return {Ember.ComputedProperty} computes a new array with all the
    items from the first dependent array that are not in the second
    dependent array
    @public
  */
  function setDiff(setAProperty, setBProperty) {
    (true && !(arguments.length === 2) && (0, _emberDebug.assert)('Ember.computed.setDiff requires exactly two dependent arrays.', arguments.length === 2));


    var cp = new _emberMetal.ComputedProperty(function () {
      var setA = this.get(setAProperty);
      var setB = this.get(setBProperty);

      if (!(0, _utils.isArray)(setA)) {
        return (0, _native_array.A)();
      }
      if (!(0, _utils.isArray)(setB)) {
        return (0, _native_array.A)(setA);
      }

      return setA.filter(function (x) {
        return setB.indexOf(x) === -1;
      });
    }, {
      dependentKeys: [setAProperty + '.[]', setBProperty + '.[]'],
      readOnly: true
    });

    return cp;
  }

  /**
    A computed property that returns the array of values
    for the provided dependent properties.
  
    Example
  
    ```javascript
    let Hamster = Ember.Object.extend({
      clothes: Ember.computed.collect('hat', 'shirt')
    });
  
    let hamster = Hamster.create();
  
    hamster.get('clothes'); // [null, null]
    hamster.set('hat', 'Camp Hat');
    hamster.set('shirt', 'Camp Shirt');
    hamster.get('clothes'); // ['Camp Hat', 'Camp Shirt']
    ```
  
    @method collect
    @for @ember/object/computed
    @static
    @param {String} dependentKey*
    @return {Ember.ComputedProperty} computed property which maps
    values of all passed in properties to an array.
    @public
  */
  function collect() {
    for (var _len3 = arguments.length, dependentKeys = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      dependentKeys[_key3] = arguments[_key3];
    }

    return multiArrayMacro(dependentKeys, function () {
      var properties = (0, _emberMetal.getProperties)(this, dependentKeys);
      var res = (0, _native_array.A)();
      for (var key in properties) {
        if (properties.hasOwnProperty(key)) {
          if (properties[key] === undefined) {
            res.push(null);
          } else {
            res.push(properties[key]);
          }
        }
      }
      return res;
    });
  }

  /**
    A computed property which returns a new array with all the
    properties from the first dependent array sorted based on a property
    or sort function.
  
    The callback method you provide should have the following signature:
  
    ```javascript
    function(itemA, itemB);
    ```
  
    - `itemA` the first item to compare.
    - `itemB` the second item to compare.
  
    This function should return negative number (e.g. `-1`) when `itemA` should come before
    `itemB`. It should return positive number (e.g. `1`) when `itemA` should come after
    `itemB`. If the `itemA` and `itemB` are equal this function should return `0`.
  
    Therefore, if this function is comparing some numeric values, simple `itemA - itemB` or
    `itemA.get( 'foo' ) - itemB.get( 'foo' )` can be used instead of series of `if`.
  
    Example
  
    ```javascript
    let ToDoList = Ember.Object.extend({
      // using standard ascending sort
      todosSorting: ['name'],
      sortedTodos: Ember.computed.sort('todos', 'todosSorting'),
  
      // using descending sort
      todosSortingDesc: ['name:desc'],
      sortedTodosDesc: Ember.computed.sort('todos', 'todosSortingDesc'),
  
      // using a custom sort function
      priorityTodos: Ember.computed.sort('todos', function(a, b){
        if (a.priority > b.priority) {
          return 1;
        } else if (a.priority < b.priority) {
          return -1;
        }
  
        return 0;
      })
    });
  
    let todoList = ToDoList.create({todos: [
      { name: 'Unit Test', priority: 2 },
      { name: 'Documentation', priority: 3 },
      { name: 'Release', priority: 1 }
    ]});
  
    todoList.get('sortedTodos');      // [{ name:'Documentation', priority:3 }, { name:'Release', priority:1 }, { name:'Unit Test', priority:2 }]
    todoList.get('sortedTodosDesc');  // [{ name:'Unit Test', priority:2 }, { name:'Release', priority:1 }, { name:'Documentation', priority:3 }]
    todoList.get('priorityTodos');    // [{ name:'Release', priority:1 }, { name:'Unit Test', priority:2 }, { name:'Documentation', priority:3 }]
    ```
  
    @method sort
    @for @ember/object/computed
    @static
    @param {String} itemsKey
    @param {String or Function} sortDefinition a dependent key to an
    array of sort properties (add `:desc` to the arrays sort properties to sort descending) or a function to use when sorting
    @return {Ember.ComputedProperty} computes a new sorted array based
    on the sort property array or callback function
    @public
  */
  function sort(itemsKey, sortDefinition) {
    (true && !(arguments.length === 2) && (0, _emberDebug.assert)('Ember.computed.sort requires two arguments: an array key to sort and ' + 'either a sort properties key or sort function', arguments.length === 2));


    if (typeof sortDefinition === 'function') {
      return customSort(itemsKey, sortDefinition);
    } else {
      return propertySort(itemsKey, sortDefinition);
    }
  }

  function customSort(itemsKey, comparator) {
    return arrayMacro(itemsKey, function (value) {
      var _this3 = this;

      return value.slice().sort(function (x, y) {
        return comparator.call(_this3, x, y);
      });
    });
  }

  // This one needs to dynamically set up and tear down observers on the itemsKey
  // depending on the sortProperties
  function propertySort(itemsKey, sortPropertiesKey) {
    var cp = new _emberMetal.ComputedProperty(function (key) {
      var _this4 = this;

      var sortProperties = (0, _emberMetal.get)(this, sortPropertiesKey);

      (true && !((0, _utils.isArray)(sortProperties) && sortProperties.every(function (s) {
        return typeof s === 'string';
      })) && (0, _emberDebug.assert)('The sort definition for \'' + key + '\' on ' + this + ' must be a function or an array of strings', (0, _utils.isArray)(sortProperties) && sortProperties.every(function (s) {
        return typeof s === 'string';
      })));


      // Add/remove property observers as required.
      var activeObserversMap = cp._activeObserverMap || (cp._activeObserverMap = new _emberMetal.WeakMap());
      var activeObservers = activeObserversMap.get(this);

      if (activeObservers !== undefined) {
        activeObservers.forEach(function (args) {
          return _emberMetal.removeObserver.apply(undefined, args);
        });
      }

      function sortPropertyDidChange() {
        this.notifyPropertyChange(key);
      }

      var normalizedSortProperties = normalizeSortProperties(sortProperties);
      activeObservers = normalizedSortProperties.map(function (_ref) {
        var prop = _ref[0];

        var path = itemsKeyIsAtThis ? '@each.' + prop : itemsKey + '.@each.' + prop;
        (0, _emberMetal.addObserver)(_this4, path, sortPropertyDidChange);
        return [_this4, path, sortPropertyDidChange];
      });

      activeObserversMap.set(this, activeObservers);

      var itemsKeyIsAtThis = itemsKey === '@this';
      var items = itemsKeyIsAtThis ? this : (0, _emberMetal.get)(this, itemsKey);
      if (!(0, _utils.isArray)(items)) {
        return (0, _native_array.A)();
      }

      return sortByNormalizedSortProperties(items, normalizedSortProperties);
    }, { dependentKeys: [sortPropertiesKey + '.[]'], readOnly: true });

    cp._activeObserverMap = undefined;

    return cp;
  }

  function normalizeSortProperties(sortProperties) {
    return sortProperties.map(function (p) {
      var _p$split = p.split(':'),
          prop = _p$split[0],
          direction = _p$split[1];

      direction = direction || 'asc';

      return [prop, direction];
    });
  }

  function sortByNormalizedSortProperties(items, normalizedSortProperties) {
    return (0, _native_array.A)(items.slice().sort(function (itemA, itemB) {
      for (var i = 0; i < normalizedSortProperties.length; i++) {
        var _normalizedSortProper = normalizedSortProperties[i],
            prop = _normalizedSortProper[0],
            direction = _normalizedSortProper[1];

        var result = (0, _compare.default)((0, _emberMetal.get)(itemA, prop), (0, _emberMetal.get)(itemB, prop));
        if (result !== 0) {
          return direction === 'desc' ? -1 * result : result;
        }
      }
      return 0;
    }));
  }
});
enifed('ember-runtime/controllers/controller', ['exports', 'ember-debug', 'ember-runtime/system/object', 'ember-runtime/mixins/controller', 'ember-runtime/inject', 'ember-runtime/mixins/action_handler'], function (exports, _emberDebug, _object, _controller, _inject, _action_handler) {
  'use strict';

  /**
  @module @ember/controller
  */

  /**
    @class Controller
    @extends EmberObject
    @uses Ember.ControllerMixin
    @public
  */
  var Controller = _object.default.extend(_controller.default);

  (0, _action_handler.deprecateUnderscoreActions)(Controller);

  function controllerInjectionHelper(factory) {
    (true && !(_controller.default.detect(factory.PrototypeMixin)) && (0, _emberDebug.assert)('Defining an injected controller property on a ' + 'non-controller is not allowed.', _controller.default.detect(factory.PrototypeMixin)));
  }

  /**
    Creates a property that lazily looks up another controller in the container.
    Can only be used when defining another controller.
  
    Example:
  
    ```app/controllers/post.js
    import Controller, {
      inject as controller
    } from '@ember/controller';
  
    export default Controller.extend({
      posts: controller()
    });
    ```
  
    This example will create a `posts` property on the `post` controller that
    looks up the `posts` controller in the container, making it easy to
    reference other controllers.
  
    @method inject
    @static
    @for @ember/controller
    @since 1.10.0
    @param {String} name (optional) name of the controller to inject, defaults
           to the property's name
    @return {Ember.InjectedProperty} injection descriptor instance
    @public
  */
  (0, _inject.createInjectionHelper)('controller', controllerInjectionHelper);

  exports.default = Controller;
});
enifed('ember-runtime/copy', ['exports', 'ember-debug', 'ember-runtime/system/object', 'ember-runtime/mixins/copyable'], function (exports, _emberDebug, _object, _copyable) {
  'use strict';

  exports.default = copy;

  /**
   @module @ember/object
  */
  function _copy(obj, deep, seen, copies) {
    var ret = void 0,
        loc = void 0,
        key = void 0;

    // primitive data types are immutable, just return them.
    if (typeof obj !== 'object' || obj === null) {
      return obj;
    }

    // avoid cyclical loops
    if (deep && (loc = seen.indexOf(obj)) >= 0) {
      return copies[loc];
    }

    (true && !(!(obj instanceof _object.default) || _copyable.default && _copyable.default.detect(obj)) && (0, _emberDebug.assert)('Cannot clone an Ember.Object that does not implement Ember.Copyable', !(obj instanceof _object.default) || _copyable.default && _copyable.default.detect(obj)));


    // IMPORTANT: this specific test will detect a native array only. Any other
    // object will need to implement Copyable.
    if (Array.isArray(obj)) {
      ret = obj.slice();

      if (deep) {
        loc = ret.length;

        while (--loc >= 0) {
          ret[loc] = _copy(ret[loc], deep, seen, copies);
        }
      }
    } else if (_copyable.default && _copyable.default.detect(obj)) {
      ret = obj.copy(deep, seen, copies);
    } else if (obj instanceof Date) {
      ret = new Date(obj.getTime());
    } else {
      ret = {};

      for (key in obj) {
        // support Null prototype
        if (!Object.prototype.hasOwnProperty.call(obj, key)) {
          continue;
        }

        // Prevents browsers that don't respect non-enumerability from
        // copying internal Ember properties
        if (key.substring(0, 2) === '__') {
          continue;
        }

        ret[key] = deep ? _copy(obj[key], deep, seen, copies) : obj[key];
      }
    }

    if (deep) {
      seen.push(obj);
      copies.push(ret);
    }

    return ret;
  }

  /**
    Creates a shallow copy of the passed object. A deep copy of the object is
    returned if the optional `deep` argument is `true`.
  
    If the passed object implements the `Ember.Copyable` interface, then this
    function will delegate to the object's `copy()` method and return the
    result. See `Ember.Copyable` for further details.
  
    For primitive values (which are immutable in JavaScript), the passed object
    is simply returned.
  
    @method copy
    @static
    @for @ember/object/internals
    @param {Object} obj The object to clone
    @param {Boolean} [deep=false] If true, a deep copy of the object is made.
    @return {Object} The copied object
    @public
  */
  function copy(obj, deep) {
    // fast paths
    if ('object' !== typeof obj || obj === null) {
      return obj; // can't copy primitives
    }

    if (_copyable.default && _copyable.default.detect(obj)) {
      return obj.copy(deep);
    }

    return _copy(obj, deep, deep ? [] : null, deep ? [] : null);
  }
});
enifed('ember-runtime/ext/function', ['ember-environment', 'ember-metal', 'ember-debug'], function (_emberEnvironment, _emberMetal, _emberDebug) {
  'use strict';

  var FunctionPrototype = Function.prototype; /**
                                              @module ember
                                              */

  if (_emberEnvironment.ENV.EXTEND_PROTOTYPES.Function) {
    /**
      The `property` extension of Javascript's Function prototype is available
      when `EmberENV.EXTEND_PROTOTYPES` or `EmberENV.EXTEND_PROTOTYPES.Function` is
      `true`, which is the default.
       Computed properties allow you to treat a function like a property:
       ```app/utils/president.js
      import EmberObject from '@ember/object';
       export default EmberObject.extend({
        firstName: '',
        lastName:  '',
         fullName: function() {
          return this.get('firstName') + ' ' + this.get('lastName');
        }.property() // Call this flag to mark the function as a property
      });
      ```
       ```javascript
      let president = President.create({
        firstName: 'Barack',
        lastName: 'Obama'
      });
       president.get('fullName'); // 'Barack Obama'
      ```
       Treating a function like a property is useful because they can work with
      bindings, just like any other property.
       Many computed properties have dependencies on other properties. For
      example, in the above example, the `fullName` property depends on
      `firstName` and `lastName` to determine its value. You can tell Ember
      about these dependencies like this:
       ```app/utils/president.js
      import EmberObject from '@ember/object';
       export default EmberObject.extend({
        firstName: '',
        lastName:  '',
         fullName: function() {
          return this.get('firstName') + ' ' + this.get('lastName');
           // Tell Ember.js that this computed property depends on firstName
          // and lastName
        }.property('firstName', 'lastName')
      });
      ```
       Make sure you list these dependencies so Ember knows when to update
      bindings that connect to a computed property. Changing a dependency
      will not immediately trigger an update of the computed property, but
      will instead clear the cache so that it is updated when the next `get`
      is called on the property.
       See [Ember.ComputedProperty](/api/classes/Ember.ComputedProperty.html), [Ember.computed](/api/classes/Ember.computed.html).
       @method property
      @for Function
      @public
    */
    FunctionPrototype.property = function () {
      return _emberMetal.computed.apply(undefined, Array.prototype.slice.call(arguments).concat([this]));
    };

    /**
      The `observes` extension of Javascript's Function prototype is available
      when `EmberENV.EXTEND_PROTOTYPES` or `EmberENV.EXTEND_PROTOTYPES.Function` is
      true, which is the default.
       You can observe property changes simply by adding the `observes`
      call to the end of your method declarations in classes that you write.
      For example:
       ```javascript
      import EmberObject from '@ember/object';
       EmberObject.extend({
        valueObserver: function() {
          // Executes whenever the "value" property changes
        }.observes('value')
      });
      ```
       In the future this method may become asynchronous.
       See `observer`.
       @method observes
      @for Function
      @public
    */
    FunctionPrototype.observes = function () {
      return _emberMetal.observer.apply(undefined, Array.prototype.slice.call(arguments).concat([this]));
    };

    FunctionPrototype._observesImmediately = function () {
      (true && !(function checkIsInternalProperty() {
        for (var i = 0; i < arguments.length; i++) {
          if (arguments[i].indexOf('.') !== -1) {
            return false;
          }
        }
        return true;
      }) && (0, _emberDebug.assert)('Immediate observers must observe internal properties only, ' + 'not properties on other objects.', function checkIsInternalProperty() {
        for (var i = 0; i < arguments.length; i++) {
          if (arguments[i].indexOf('.') !== -1) {
            return false;
          }
        }return true;
      }));


      // observes handles property expansion
      return this.observes.apply(this, arguments);
    };
    /**
      The `observesImmediately` extension of Javascript's Function prototype is
      available when `EmberENV.EXTEND_PROTOTYPES` or
      `EmberENV.EXTEND_PROTOTYPES.Function` is true, which is the default.
       You can observe property changes simply by adding the `observesImmediately`
      call to the end of your method declarations in classes that you write.
      For example:
       ```javascript
      import EmberObject from '@ember/object';
       EmberObject.extend({
        valueObserver: function() {
          // Executes immediately after the "value" property changes
        }.observesImmediately('value')
      });
      ```
       In the future, `observes` may become asynchronous. In this event,
      `observesImmediately` will maintain the synchronous behavior.
       See `Ember.immediateObserver`.
       @method observesImmediately
      @for Function
      @deprecated
      @private
    */
    FunctionPrototype.observesImmediately = (0, _emberDebug.deprecateFunc)('Function#observesImmediately is deprecated. Use Function#observes instead', { id: 'ember-runtime.ext-function', until: '3.0.0' }, FunctionPrototype._observesImmediately);

    /**
      The `on` extension of Javascript's Function prototype is available
      when `EmberENV.EXTEND_PROTOTYPES` or `EmberENV.EXTEND_PROTOTYPES.Function` is
      true, which is the default.
       You can listen for events simply by adding the `on` call to the end of
      your method declarations in classes or mixins that you write. For example:
       ```javascript
      import Mixin from '@ember/mixin';
       Mixin.create({
        doSomethingWithElement: function() {
          // Executes whenever the "didInsertElement" event fires
        }.on('didInsertElement')
      });
      ```
       See `Ember.on`.
       @method on
      @for Function
      @public
    */
    FunctionPrototype.on = function () {
      return _emberMetal.on.apply(undefined, Array.prototype.slice.call(arguments).concat([this]));
    };
  }
});
enifed('ember-runtime/ext/rsvp', ['exports', 'rsvp', 'ember-metal', 'ember-debug'], function (exports, _rsvp, _emberMetal, _emberDebug) {
  'use strict';

  exports.onerrorDefault = onerrorDefault;


  var backburner = _emberMetal.run.backburner;
  _emberMetal.run._addQueue('rsvpAfter', 'destroy');

  _rsvp.configure('async', function (callback, promise) {
    backburner.schedule('actions', null, callback, promise);
  });

  _rsvp.configure('after', function (cb) {
    backburner.schedule('rsvpAfter', null, cb);
  });

  _rsvp.on('error', onerrorDefault);

  function onerrorDefault(reason) {
    var error = errorFor(reason);
    if (error) {
      (0, _emberMetal.dispatchError)(error);
    }
  }

  function errorFor(reason) {
    if (!reason) return;

    if (reason.errorThrown) {
      return unwrapErrorThrown(reason);
    }

    if (reason.name === 'UnrecognizedURLError') {
      (true && !(false) && (0, _emberDebug.assert)('The URL \'' + reason.message + '\' did not match any routes in your application', false));

      return;
    }

    if (reason.name === 'TransitionAborted') {
      return;
    }

    return reason;
  }

  function unwrapErrorThrown(reason) {
    var error = reason.errorThrown;
    if (typeof error === 'string') {
      error = new Error(error);
    }
    Object.defineProperty(error, '__reason_with_error_thrown__', {
      value: reason,
      enumerable: false
    });
    return error;
  }

  exports.default = _rsvp;
});
enifed('ember-runtime/ext/string', ['ember-environment', 'ember-runtime/system/string'], function (_emberEnvironment, _string) {
  'use strict';

  /**
  @module @ember/string
  */

  var StringPrototype = String.prototype;

  if (_emberEnvironment.ENV.EXTEND_PROTOTYPES.String) {
    /**
      See [Ember.String.fmt](/api/classes/Ember.String.html#method_fmt).
       @method fmt
      @for @ember/string
      @static
      @private
      @deprecated
    */
    StringPrototype.fmt = function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (0, _string.fmt)(this, args);
    };

    /**
      See [Ember.String.w](/api/classes/Ember.String.html#method_w).
       @method w
      @for @ember/string
      @static
      @private
    */
    StringPrototype.w = function () {
      return (0, _string.w)(this);
    };

    /**
      See [Ember.String.loc](/api/classes/Ember.String.html#method_loc).
       @method loc
      @for @ember/string
      @static
      @private
    */
    StringPrototype.loc = function () {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return (0, _string.loc)(this, args);
    };

    /**
      See [Ember.String.camelize](/api/classes/Ember.String.html#method_camelize).
       @method camelize
      @for @ember/string
      @static
      @private
    */
    StringPrototype.camelize = function () {
      return (0, _string.camelize)(this);
    };

    /**
      See [Ember.String.decamelize](/api/classes/Ember.String.html#method_decamelize).
       @method decamelize
      @for @ember/string
      @static
      @private
    */
    StringPrototype.decamelize = function () {
      return (0, _string.decamelize)(this);
    };

    /**
      See [Ember.String.dasherize](/api/classes/Ember.String.html#method_dasherize).
       @method dasherize
      @for @ember/string
      @static
      @private
    */
    StringPrototype.dasherize = function () {
      return (0, _string.dasherize)(this);
    };

    /**
      See [Ember.String.underscore](/api/classes/Ember.String.html#method_underscore).
       @method underscore
      @for @ember/string
      @static
      @private
    */
    StringPrototype.underscore = function () {
      return (0, _string.underscore)(this);
    };

    /**
      See [Ember.String.classify](/api/classes/Ember.String.html#method_classify).
       @method classify
      @for @ember/string
      @static
      @private
    */
    StringPrototype.classify = function () {
      return (0, _string.classify)(this);
    };

    /**
      See [Ember.String.capitalize](/api/classes/Ember.String.html#method_capitalize).
       @method capitalize
      @for @ember/string
      @static
      @private
    */
    StringPrototype.capitalize = function () {
      return (0, _string.capitalize)(this);
    };
  }
});
enifed('ember-runtime/index', ['exports', 'ember-runtime/system/object', 'ember-runtime/system/string', 'ember-runtime/mixins/registry_proxy', 'ember-runtime/mixins/container_proxy', 'ember-runtime/copy', 'ember-runtime/inject', 'ember-runtime/compare', 'ember-runtime/is-equal', 'ember-runtime/mixins/array', 'ember-runtime/mixins/comparable', 'ember-runtime/system/namespace', 'ember-runtime/system/array_proxy', 'ember-runtime/system/object_proxy', 'ember-runtime/system/core_object', 'ember-runtime/system/native_array', 'ember-runtime/mixins/action_handler', 'ember-runtime/mixins/copyable', 'ember-runtime/mixins/enumerable', 'ember-runtime/mixins/freezable', 'ember-runtime/mixins/-proxy', 'ember-runtime/system/lazy_load', 'ember-runtime/mixins/observable', 'ember-runtime/mixins/mutable_enumerable', 'ember-runtime/mixins/mutable_array', 'ember-runtime/mixins/target_action_support', 'ember-runtime/mixins/evented', 'ember-runtime/mixins/promise_proxy', 'ember-runtime/computed/computed_macros', 'ember-runtime/computed/reduce_computed_macros', 'ember-runtime/controllers/controller', 'ember-runtime/mixins/controller', 'ember-runtime/system/service', 'ember-runtime/ext/rsvp', 'ember-runtime/utils', 'ember-runtime/string_registry', 'ember-runtime/ext/string', 'ember-runtime/ext/function'], function (exports, _object, _string, _registry_proxy, _container_proxy, _copy, _inject, _compare, _isEqual, _array, _comparable, _namespace, _array_proxy, _object_proxy, _core_object, _native_array, _action_handler, _copyable, _enumerable, _freezable, _proxy, _lazy_load, _observable, _mutable_enumerable, _mutable_array, _target_action_support, _evented, _promise_proxy, _computed_macros, _reduce_computed_macros, _controller, _controller2, _service, _rsvp, _utils, _string_registry) {
  'use strict';

  exports.setStrings = exports.getStrings = exports.typeOf = exports.isArray = exports.onerrorDefault = exports.RSVP = exports.Service = exports.ControllerMixin = exports.Controller = exports.collect = exports.intersect = exports.union = exports.uniqBy = exports.uniq = exports.filterBy = exports.filter = exports.mapBy = exports.setDiff = exports.sort = exports.map = exports.max = exports.min = exports.sum = exports.or = exports.and = exports.deprecatingAlias = exports.readOnly = exports.oneWay = exports.lte = exports.lt = exports.gte = exports.gt = exports.equal = exports.match = exports.bool = exports.not = exports.none = exports.notEmpty = exports.empty = exports.PromiseProxyMixin = exports.Evented = exports.TargetActionSupport = exports.removeAt = exports.MutableArray = exports.MutableEnumerable = exports.Observable = exports._loaded = exports.runLoadHooks = exports.onLoad = exports._ProxyMixin = exports.FROZEN_ERROR = exports.Freezable = exports.Enumerable = exports.Copyable = exports.deprecateUnderscoreActions = exports.ActionHandler = exports.A = exports.NativeArray = exports.CoreObject = exports.ObjectProxy = exports.ArrayProxy = exports.setNamespaceSearchDisabled = exports.isNamespaceSearchDisabled = exports.Namespace = exports.Comparable = exports.removeArrayObserver = exports.addArrayObserver = exports.isEmberArray = exports.objectAt = exports.Array = exports.isEqual = exports.compare = exports.inject = exports.copy = exports.ContainerProxyMixin = exports.buildFakeRegistryWithDeprecations = exports.RegistryProxyMixin = exports.String = exports.FrameworkObject = exports.Object = undefined;
  Object.defineProperty(exports, 'Object', {
    enumerable: true,
    get: function () {
      return _object.default;
    }
  });
  Object.defineProperty(exports, 'FrameworkObject', {
    enumerable: true,
    get: function () {
      return _object.FrameworkObject;
    }
  });
  Object.defineProperty(exports, 'String', {
    enumerable: true,
    get: function () {
      return _string.default;
    }
  });
  Object.defineProperty(exports, 'RegistryProxyMixin', {
    enumerable: true,
    get: function () {
      return _registry_proxy.default;
    }
  });
  Object.defineProperty(exports, 'buildFakeRegistryWithDeprecations', {
    enumerable: true,
    get: function () {
      return _registry_proxy.buildFakeRegistryWithDeprecations;
    }
  });
  Object.defineProperty(exports, 'ContainerProxyMixin', {
    enumerable: true,
    get: function () {
      return _container_proxy.default;
    }
  });
  Object.defineProperty(exports, 'copy', {
    enumerable: true,
    get: function () {
      return _copy.default;
    }
  });
  Object.defineProperty(exports, 'inject', {
    enumerable: true,
    get: function () {
      return _inject.default;
    }
  });
  Object.defineProperty(exports, 'compare', {
    enumerable: true,
    get: function () {
      return _compare.default;
    }
  });
  Object.defineProperty(exports, 'isEqual', {
    enumerable: true,
    get: function () {
      return _isEqual.default;
    }
  });
  Object.defineProperty(exports, 'Array', {
    enumerable: true,
    get: function () {
      return _array.default;
    }
  });
  Object.defineProperty(exports, 'objectAt', {
    enumerable: true,
    get: function () {
      return _array.objectAt;
    }
  });
  Object.defineProperty(exports, 'isEmberArray', {
    enumerable: true,
    get: function () {
      return _array.isEmberArray;
    }
  });
  Object.defineProperty(exports, 'addArrayObserver', {
    enumerable: true,
    get: function () {
      return _array.addArrayObserver;
    }
  });
  Object.defineProperty(exports, 'removeArrayObserver', {
    enumerable: true,
    get: function () {
      return _array.removeArrayObserver;
    }
  });
  Object.defineProperty(exports, 'Comparable', {
    enumerable: true,
    get: function () {
      return _comparable.default;
    }
  });
  Object.defineProperty(exports, 'Namespace', {
    enumerable: true,
    get: function () {
      return _namespace.default;
    }
  });
  Object.defineProperty(exports, 'isNamespaceSearchDisabled', {
    enumerable: true,
    get: function () {
      return _namespace.isSearchDisabled;
    }
  });
  Object.defineProperty(exports, 'setNamespaceSearchDisabled', {
    enumerable: true,
    get: function () {
      return _namespace.setSearchDisabled;
    }
  });
  Object.defineProperty(exports, 'ArrayProxy', {
    enumerable: true,
    get: function () {
      return _array_proxy.default;
    }
  });
  Object.defineProperty(exports, 'ObjectProxy', {
    enumerable: true,
    get: function () {
      return _object_proxy.default;
    }
  });
  Object.defineProperty(exports, 'CoreObject', {
    enumerable: true,
    get: function () {
      return _core_object.default;
    }
  });
  Object.defineProperty(exports, 'NativeArray', {
    enumerable: true,
    get: function () {
      return _native_array.default;
    }
  });
  Object.defineProperty(exports, 'A', {
    enumerable: true,
    get: function () {
      return _native_array.A;
    }
  });
  Object.defineProperty(exports, 'ActionHandler', {
    enumerable: true,
    get: function () {
      return _action_handler.default;
    }
  });
  Object.defineProperty(exports, 'deprecateUnderscoreActions', {
    enumerable: true,
    get: function () {
      return _action_handler.deprecateUnderscoreActions;
    }
  });
  Object.defineProperty(exports, 'Copyable', {
    enumerable: true,
    get: function () {
      return _copyable.default;
    }
  });
  Object.defineProperty(exports, 'Enumerable', {
    enumerable: true,
    get: function () {
      return _enumerable.default;
    }
  });
  Object.defineProperty(exports, 'Freezable', {
    enumerable: true,
    get: function () {
      return _freezable.Freezable;
    }
  });
  Object.defineProperty(exports, 'FROZEN_ERROR', {
    enumerable: true,
    get: function () {
      return _freezable.FROZEN_ERROR;
    }
  });
  Object.defineProperty(exports, '_ProxyMixin', {
    enumerable: true,
    get: function () {
      return _proxy.default;
    }
  });
  Object.defineProperty(exports, 'onLoad', {
    enumerable: true,
    get: function () {
      return _lazy_load.onLoad;
    }
  });
  Object.defineProperty(exports, 'runLoadHooks', {
    enumerable: true,
    get: function () {
      return _lazy_load.runLoadHooks;
    }
  });
  Object.defineProperty(exports, '_loaded', {
    enumerable: true,
    get: function () {
      return _lazy_load._loaded;
    }
  });
  Object.defineProperty(exports, 'Observable', {
    enumerable: true,
    get: function () {
      return _observable.default;
    }
  });
  Object.defineProperty(exports, 'MutableEnumerable', {
    enumerable: true,
    get: function () {
      return _mutable_enumerable.default;
    }
  });
  Object.defineProperty(exports, 'MutableArray', {
    enumerable: true,
    get: function () {
      return _mutable_array.default;
    }
  });
  Object.defineProperty(exports, 'removeAt', {
    enumerable: true,
    get: function () {
      return _mutable_array.removeAt;
    }
  });
  Object.defineProperty(exports, 'TargetActionSupport', {
    enumerable: true,
    get: function () {
      return _target_action_support.default;
    }
  });
  Object.defineProperty(exports, 'Evented', {
    enumerable: true,
    get: function () {
      return _evented.default;
    }
  });
  Object.defineProperty(exports, 'PromiseProxyMixin', {
    enumerable: true,
    get: function () {
      return _promise_proxy.default;
    }
  });
  Object.defineProperty(exports, 'empty', {
    enumerable: true,
    get: function () {
      return _computed_macros.empty;
    }
  });
  Object.defineProperty(exports, 'notEmpty', {
    enumerable: true,
    get: function () {
      return _computed_macros.notEmpty;
    }
  });
  Object.defineProperty(exports, 'none', {
    enumerable: true,
    get: function () {
      return _computed_macros.none;
    }
  });
  Object.defineProperty(exports, 'not', {
    enumerable: true,
    get: function () {
      return _computed_macros.not;
    }
  });
  Object.defineProperty(exports, 'bool', {
    enumerable: true,
    get: function () {
      return _computed_macros.bool;
    }
  });
  Object.defineProperty(exports, 'match', {
    enumerable: true,
    get: function () {
      return _computed_macros.match;
    }
  });
  Object.defineProperty(exports, 'equal', {
    enumerable: true,
    get: function () {
      return _computed_macros.equal;
    }
  });
  Object.defineProperty(exports, 'gt', {
    enumerable: true,
    get: function () {
      return _computed_macros.gt;
    }
  });
  Object.defineProperty(exports, 'gte', {
    enumerable: true,
    get: function () {
      return _computed_macros.gte;
    }
  });
  Object.defineProperty(exports, 'lt', {
    enumerable: true,
    get: function () {
      return _computed_macros.lt;
    }
  });
  Object.defineProperty(exports, 'lte', {
    enumerable: true,
    get: function () {
      return _computed_macros.lte;
    }
  });
  Object.defineProperty(exports, 'oneWay', {
    enumerable: true,
    get: function () {
      return _computed_macros.oneWay;
    }
  });
  Object.defineProperty(exports, 'readOnly', {
    enumerable: true,
    get: function () {
      return _computed_macros.readOnly;
    }
  });
  Object.defineProperty(exports, 'deprecatingAlias', {
    enumerable: true,
    get: function () {
      return _computed_macros.deprecatingAlias;
    }
  });
  Object.defineProperty(exports, 'and', {
    enumerable: true,
    get: function () {
      return _computed_macros.and;
    }
  });
  Object.defineProperty(exports, 'or', {
    enumerable: true,
    get: function () {
      return _computed_macros.or;
    }
  });
  Object.defineProperty(exports, 'sum', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.sum;
    }
  });
  Object.defineProperty(exports, 'min', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.min;
    }
  });
  Object.defineProperty(exports, 'max', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.max;
    }
  });
  Object.defineProperty(exports, 'map', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.map;
    }
  });
  Object.defineProperty(exports, 'sort', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.sort;
    }
  });
  Object.defineProperty(exports, 'setDiff', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.setDiff;
    }
  });
  Object.defineProperty(exports, 'mapBy', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.mapBy;
    }
  });
  Object.defineProperty(exports, 'filter', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.filter;
    }
  });
  Object.defineProperty(exports, 'filterBy', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.filterBy;
    }
  });
  Object.defineProperty(exports, 'uniq', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.uniq;
    }
  });
  Object.defineProperty(exports, 'uniqBy', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.uniqBy;
    }
  });
  Object.defineProperty(exports, 'union', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.union;
    }
  });
  Object.defineProperty(exports, 'intersect', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.intersect;
    }
  });
  Object.defineProperty(exports, 'collect', {
    enumerable: true,
    get: function () {
      return _reduce_computed_macros.collect;
    }
  });
  Object.defineProperty(exports, 'Controller', {
    enumerable: true,
    get: function () {
      return _controller.default;
    }
  });
  Object.defineProperty(exports, 'ControllerMixin', {
    enumerable: true,
    get: function () {
      return _controller2.default;
    }
  });
  Object.defineProperty(exports, 'Service', {
    enumerable: true,
    get: function () {
      return _service.default;
    }
  });
  Object.defineProperty(exports, 'RSVP', {
    enumerable: true,
    get: function () {
      return _rsvp.default;
    }
  });
  Object.defineProperty(exports, 'onerrorDefault', {
    enumerable: true,
    get: function () {
      return _rsvp.onerrorDefault;
    }
  });
  Object.defineProperty(exports, 'isArray', {
    enumerable: true,
    get: function () {
      return _utils.isArray;
    }
  });
  Object.defineProperty(exports, 'typeOf', {
    enumerable: true,
    get: function () {
      return _utils.typeOf;
    }
  });
  Object.defineProperty(exports, 'getStrings', {
    enumerable: true,
    get: function () {
      return _string_registry.getStrings;
    }
  });
  Object.defineProperty(exports, 'setStrings', {
    enumerable: true,
    get: function () {
      return _string_registry.setStrings;
    }
  });
});
enifed('ember-runtime/inject', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.default = inject;
  exports.createInjectionHelper = createInjectionHelper;
  exports.validatePropertyInjections = validatePropertyInjections;


  /**
    Namespace for injection helper methods.
  
    @class inject
    @namespace Ember
    @static
    @public
  */
  function inject() {
    (true && !(false) && (0, _emberDebug.assert)('Injected properties must be created through helpers, see \'' + Object.keys(inject).join('"', '"') + '\''));
  }

  // Dictionary of injection validations by type, added to by `createInjectionHelper`
  var typeValidators = {};

  /**
    This method allows other Ember modules to register injection helpers for a
    given container type. Helpers are exported to the `inject` namespace as the
    container type itself.
  
    @private
    @method createInjectionHelper
    @since 1.10.0
    @for Ember
    @param {String} type The container type the helper will inject
    @param {Function} validator A validation callback that is executed at mixin-time
  */
  function createInjectionHelper(type, validator) {
    typeValidators[type] = validator;

    inject[type] = function (name) {
      return new _emberMetal.InjectedProperty(type, name);
    };
  }

  /**
    Validation function that runs per-type validation functions once for each
    injected type encountered.
  
    @private
    @method validatePropertyInjections
    @since 1.10.0
    @for Ember
    @param {Object} factory The factory object
  */
  function validatePropertyInjections(factory) {
    var proto = factory.proto();
    var types = [];

    for (var key in proto) {
      var desc = proto[key];
      if (desc instanceof _emberMetal.InjectedProperty && types.indexOf(desc.type) === -1) {
        types.push(desc.type);
      }
    }

    if (types.length) {
      for (var i = 0; i < types.length; i++) {
        var validator = typeValidators[types[i]];

        if (typeof validator === 'function') {
          validator(factory);
        }
      }
    }

    return true;
  }
});
enifed('ember-runtime/is-equal', ['exports'], function (exports) {
  'use strict';

  exports.default = isEqual;
  /**
    Compares two objects, returning true if they are equal.
  
    ```javascript
    Ember.isEqual('hello', 'hello');                   // true
    Ember.isEqual(1, 2);                               // false
    ```
  
    `isEqual` is a more specific comparison than a triple equal comparison.
    It will call the `isEqual` instance method on the objects being
    compared, allowing finer control over when objects should be considered
    equal to each other.
  
    ```javascript
    let Person = Ember.Object.extend({
      isEqual(other) { return this.ssn == other.ssn; }
    });
  
    let personA = Person.create({name: 'Muhammad Ali', ssn: '123-45-6789'});
    let personB = Person.create({name: 'Cassius Clay', ssn: '123-45-6789'});
  
    Ember.isEqual(personA, personB); // true
    ```
  
    Due to the expense of array comparisons, collections will never be equal to
    each other even if each of their items are equal to each other.
  
    ```javascript
    Ember.isEqual([4, 2], [4, 2]);                     // false
    ```
  
    @method isEqual
    @for Ember
    @param {Object} a first object to compare
    @param {Object} b second object to compare
    @return {Boolean}
    @public
  */
  function isEqual(a, b) {
    if (a && typeof a.isEqual === 'function') {
      return a.isEqual(b);
    }

    if (a instanceof Date && b instanceof Date) {
      return a.getTime() === b.getTime();
    }

    return a === b;
  }
});
enifed('ember-runtime/mixins/-proxy', ['exports', 'ember-babel', '@glimmer/reference', 'ember-metal', 'ember-debug', 'ember-runtime/computed/computed_macros'], function (exports, _emberBabel, _reference, _emberMetal, _emberDebug, _computed_macros) {
  'use strict';

  /**
  @module ember
  */

  function contentPropertyWillChange(content, contentKey) {
    var key = contentKey.slice(8); // remove "content."
    if (key in this) {
      return;
    } // if shadowed in proxy
    (0, _emberMetal.propertyWillChange)(this, key);
  }

  function contentPropertyDidChange(content, contentKey) {
    var key = contentKey.slice(8); // remove "content."
    if (key in this) {
      return;
    } // if shadowed in proxy
    (0, _emberMetal.propertyDidChange)(this, key);
  }

  var ProxyTag = function (_CachedTag) {
    (0, _emberBabel.inherits)(ProxyTag, _CachedTag);

    function ProxyTag(proxy) {
      (0, _emberBabel.classCallCheck)(this, ProxyTag);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _CachedTag.call(this));

      var content = (0, _emberMetal.get)(proxy, 'content');

      _this.proxy = proxy;
      _this.proxyWrapperTag = new _reference.DirtyableTag();
      _this.proxyContentTag = new _reference.UpdatableTag((0, _emberMetal.tagFor)(content));
      return _this;
    }

    ProxyTag.prototype.compute = function compute() {
      return Math.max(this.proxyWrapperTag.value(), this.proxyContentTag.value());
    };

    ProxyTag.prototype.dirty = function dirty() {
      this.proxyWrapperTag.dirty();
    };

    ProxyTag.prototype.contentDidChange = function contentDidChange() {
      var content = (0, _emberMetal.get)(this.proxy, 'content');
      this.proxyContentTag.update((0, _emberMetal.tagFor)(content));
    };

    return ProxyTag;
  }(_reference.CachedTag);

  exports.default = _emberMetal.Mixin.create({
    /**
      The object whose properties will be forwarded.
       @property content
      @type Ember.Object
      @default null
      @private
    */
    content: null,

    init: function () {
      this._super.apply(this, arguments);
      var m = (0, _emberMetal.meta)(this);
      m.setProxy();
      m.writableTag(function (source) {
        return new ProxyTag(source);
      });
    },


    isTruthy: (0, _computed_macros.bool)('content'),

    willWatchProperty: function (key) {
      var contentKey = 'content.' + key;
      (0, _emberMetal._addBeforeObserver)(this, contentKey, null, contentPropertyWillChange);
      (0, _emberMetal.addObserver)(this, contentKey, null, contentPropertyDidChange);
    },
    didUnwatchProperty: function (key) {
      var contentKey = 'content.' + key;
      (0, _emberMetal._removeBeforeObserver)(this, contentKey, null, contentPropertyWillChange);
      (0, _emberMetal.removeObserver)(this, contentKey, null, contentPropertyDidChange);
    },
    unknownProperty: function (key) {
      var content = (0, _emberMetal.get)(this, 'content');
      if (content) {
        (true && !(!this.isController) && (0, _emberDebug.deprecate)('You attempted to access `' + key + '` from `' + this + '`, but object proxying is deprecated. Please use `model.' + key + '` instead.', !this.isController, { id: 'ember-runtime.controller-proxy', until: '3.0.0' }));

        return (0, _emberMetal.get)(content, key);
      }
    },
    setUnknownProperty: function (key, value) {
      var m = (0, _emberMetal.meta)(this);

      if (m.proto === this) {
        // if marked as prototype then just defineProperty
        // rather than delegate
        (0, _emberMetal.defineProperty)(this, key, null, value);
        return value;
      }

      var content = (0, _emberMetal.get)(this, 'content');
      (true && !(content) && (0, _emberDebug.assert)('Cannot delegate set(\'' + key + '\', ' + value + ') to the \'content\' property of object proxy ' + this + ': its \'content\' is undefined.', content));
      (true && !(!this.isController) && (0, _emberDebug.deprecate)('You attempted to set `' + key + '` from `' + this + '`, but object proxying is deprecated. Please use `model.' + key + '` instead.', !this.isController, { id: 'ember-runtime.controller-proxy', until: '3.0.0' }));


      return (0, _emberMetal.set)(content, key, value);
    }
  });
});
enifed('ember-runtime/mixins/action_handler', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.deprecateUnderscoreActions = deprecateUnderscoreActions;


  /**
    `Ember.ActionHandler` is available on some familiar classes including
    `Ember.Route`, `Ember.Component`, and `Ember.Controller`.
    (Internally the mixin is used by `Ember.CoreView`, `Ember.ControllerMixin`,
    and `Ember.Route` and available to the above classes through
    inheritance.)
  
    @class ActionHandler
    @namespace Ember
    @private
  */
  /**
  @module ember
  */

  var ActionHandler = _emberMetal.Mixin.create({
    mergedProperties: ['actions'],

    send: function (actionName) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (this.actions && this.actions[actionName]) {
        var shouldBubble = this.actions[actionName].apply(this, args) === true;
        if (!shouldBubble) {
          return;
        }
      }

      var target = (0, _emberMetal.get)(this, 'target');
      if (target) {
        (true && !(typeof target.send === 'function') && (0, _emberDebug.assert)('The `target` for ' + this + ' (' + target + ') does not have a `send` method', typeof target.send === 'function'));

        target.send.apply(target, arguments);
      }
    },
    willMergeMixin: function (props) {
      (true && !(!props.actions || !props._actions) && (0, _emberDebug.assert)('Specifying `_actions` and `actions` in the same mixin is not supported.', !props.actions || !props._actions));


      if (props._actions) {
        (true && !(false) && (0, _emberDebug.deprecate)('Specifying actions in `_actions` is deprecated, please use `actions` instead.', false, { id: 'ember-runtime.action-handler-_actions', until: '3.0.0' }));


        props.actions = props._actions;
        delete props._actions;
      }
    }
  });

  exports.default = ActionHandler;
  function deprecateUnderscoreActions(factory) {
    Object.defineProperty(factory.prototype, '_actions', {
      configurable: true,
      enumerable: false,
      set: function (value) {
        (true && !(false) && (0, _emberDebug.assert)('You cannot set `_actions` on ' + this + ', please use `actions` instead.'));
      },
      get: function () {
        (true && !(false) && (0, _emberDebug.deprecate)('Usage of `_actions` is deprecated, use `actions` instead.', false, { id: 'ember-runtime.action-handler-_actions', until: '3.0.0' }));

        return (0, _emberMetal.get)(this, 'actions');
      }
    });
  }
});
enifed('ember-runtime/mixins/array', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-runtime/mixins/enumerable'], function (exports, _emberUtils, _emberMetal, _emberDebug, _enumerable) {
  'use strict';

  exports.addArrayObserver = addArrayObserver;
  exports.removeArrayObserver = removeArrayObserver;
  exports.objectAt = objectAt;
  exports.arrayContentWillChange = arrayContentWillChange;
  exports.arrayContentDidChange = arrayContentDidChange;
  exports.isEmberArray = isEmberArray;

  var _Mixin$create;

  function arrayObserversHelper(obj, target, opts, operation, notify) {
    var willChange = opts && opts.willChange || 'arrayWillChange';
    var didChange = opts && opts.didChange || 'arrayDidChange';
    var hasObservers = (0, _emberMetal.get)(obj, 'hasArrayObservers');

    if (hasObservers === notify) {
      (0, _emberMetal.propertyWillChange)(obj, 'hasArrayObservers');
    }

    operation(obj, '@array:before', target, willChange);
    operation(obj, '@array:change', target, didChange);

    if (hasObservers === notify) {
      (0, _emberMetal.propertyDidChange)(obj, 'hasArrayObservers');
    }

    return obj;
  }

  function addArrayObserver(array, target, opts) {
    return arrayObserversHelper(array, target, opts, _emberMetal.addListener, false);
  }

  function removeArrayObserver(array, target, opts) {
    return arrayObserversHelper(array, target, opts, _emberMetal.removeListener, true);
  }

  function objectAt(content, idx) {
    return typeof content.objectAt === 'function' ? content.objectAt(idx) : content[idx];
  }

  function arrayContentWillChange(array, startIdx, removeAmt, addAmt) {
    var removing = void 0,
        lim = void 0;

    // if no args are passed assume everything changes
    if (startIdx === undefined) {
      startIdx = 0;
      removeAmt = addAmt = -1;
    } else {
      if (removeAmt === undefined) {
        removeAmt = -1;
      }

      if (addAmt === undefined) {
        addAmt = -1;
      }
    }

    if (array.__each) {
      array.__each.arrayWillChange(array, startIdx, removeAmt, addAmt);
    }

    (0, _emberMetal.sendEvent)(array, '@array:before', [array, startIdx, removeAmt, addAmt]);

    if (startIdx >= 0 && removeAmt >= 0 && (0, _emberMetal.get)(array, 'hasEnumerableObservers')) {
      removing = [];
      lim = startIdx + removeAmt;

      for (var idx = startIdx; idx < lim; idx++) {
        removing.push(objectAt(array, idx));
      }
    } else {
      removing = removeAmt;
    }

    array.enumerableContentWillChange(removing, addAmt);

    return array;
  }

  function arrayContentDidChange(array, startIdx, removeAmt, addAmt) {
    // if no args are passed assume everything changes
    if (startIdx === undefined) {
      startIdx = 0;
      removeAmt = addAmt = -1;
    } else {
      if (removeAmt === undefined) {
        removeAmt = -1;
      }

      if (addAmt === undefined) {
        addAmt = -1;
      }
    }

    var adding = void 0;
    if (startIdx >= 0 && addAmt >= 0 && (0, _emberMetal.get)(array, 'hasEnumerableObservers')) {
      adding = [];
      var lim = startIdx + addAmt;

      for (var idx = startIdx; idx < lim; idx++) {
        adding.push(objectAt(array, idx));
      }
    } else {
      adding = addAmt;
    }

    array.enumerableContentDidChange(removeAmt, adding);

    if (array.__each) {
      array.__each.arrayDidChange(array, startIdx, removeAmt, addAmt);
    }

    (0, _emberMetal.sendEvent)(array, '@array:change', [array, startIdx, removeAmt, addAmt]);

    var meta = (0, _emberMetal.peekMeta)(array);
    var cache = meta !== undefined ? meta.readableCache() : undefined;
    if (cache !== undefined) {
      var length = (0, _emberMetal.get)(array, 'length');
      var addedAmount = addAmt === -1 ? 0 : addAmt;
      var removedAmount = removeAmt === -1 ? 0 : removeAmt;
      var delta = addedAmount - removedAmount;
      var previousLength = length - delta;

      var normalStartIdx = startIdx < 0 ? previousLength + startIdx : startIdx;
      if (cache.firstObject !== undefined && normalStartIdx === 0) {
        (0, _emberMetal.propertyWillChange)(array, 'firstObject', meta);
        (0, _emberMetal.propertyDidChange)(array, 'firstObject', meta);
      }

      if (cache.lastObject !== undefined) {
        var previousLastIndex = previousLength - 1;
        var lastAffectedIndex = normalStartIdx + removedAmount;
        if (previousLastIndex < lastAffectedIndex) {
          (0, _emberMetal.propertyWillChange)(array, 'lastObject', meta);
          (0, _emberMetal.propertyDidChange)(array, 'lastObject', meta);
        }
      }
    }

    return array;
  }

  var EMBER_ARRAY = (0, _emberUtils.symbol)('EMBER_ARRAY');

  function isEmberArray(obj) {
    return obj && obj[EMBER_ARRAY];
  }

  // ..........................................................
  // ARRAY
  //
  /**
    This mixin implements Observer-friendly Array-like behavior. It is not a
    concrete implementation, but it can be used up by other classes that want
    to appear like arrays.
  
    For example, ArrayProxy is a concrete classes that can
    be instantiated to implement array-like behavior. Both of these classes use
    the Array Mixin by way of the MutableArray mixin, which allows observable
    changes to be made to the underlying array.
  
    Unlike `Ember.Enumerable,` this mixin defines methods specifically for
    collections that provide index-ordered access to their contents. When you
    are designing code that needs to accept any kind of Array-like object, you
    should use these methods instead of Array primitives because these will
    properly notify observers of changes to the array.
  
    Although these methods are efficient, they do add a layer of indirection to
    your application so it is a good idea to use them only when you need the
    flexibility of using both true JavaScript arrays and "virtual" arrays such
    as controllers and collections.
  
    You can use the methods defined in this module to access and modify array
    contents in a KVO-friendly way. You can also be notified whenever the
    membership of an array changes by using `.observes('myArray.[]')`.
  
    To support `EmberArray` in your own class, you must override two
    primitives to use it: `length()` and `objectAt()`.
  
    Note that the EmberArray mixin also incorporates the `Ember.Enumerable`
    mixin. All `EmberArray`-like objects are also enumerable.
  
    @class EmberArray
    @uses Enumerable
    @since Ember 0.9.0
    @public
  */
  var ArrayMixin = _emberMetal.Mixin.create(_enumerable.default, (_Mixin$create = {}, _Mixin$create[EMBER_ARRAY] = true, _Mixin$create.length = null, _Mixin$create.objectAt = function (idx) {
    if (idx < 0 || idx >= (0, _emberMetal.get)(this, 'length')) {
      return undefined;
    }

    return (0, _emberMetal.get)(this, idx);
  }, _Mixin$create.objectsAt = function (indexes) {
    var _this = this;

    return indexes.map(function (idx) {
      return objectAt(_this, idx);
    });
  }, _Mixin$create.nextObject = function (idx) {
    return objectAt(this, idx);
  }, _Mixin$create['[]'] = (0, _emberMetal.computed)({
    get: function (key) {
      return this;
    },
    set: function (key, value) {
      this.replace(0, (0, _emberMetal.get)(this, 'length'), value);
      return this;
    }
  }), _Mixin$create.firstObject = (0, _emberMetal.computed)(function () {
    return objectAt(this, 0);
  }).readOnly(), _Mixin$create.lastObject = (0, _emberMetal.computed)(function () {
    return objectAt(this, (0, _emberMetal.get)(this, 'length') - 1);
  }).readOnly(), _Mixin$create.contains = function (obj) {
    (true && !(false) && (0, _emberDebug.deprecate)('`Enumerable#contains` is deprecated, use `Enumerable#includes` instead.', false, { id: 'ember-runtime.enumerable-contains', until: '3.0.0', url: 'https://emberjs.com/deprecations/v2.x#toc_enumerable-contains' }));


    return this.indexOf(obj) >= 0;
  }, _Mixin$create.slice = function (beginIndex, endIndex) {
    var ret = _emberMetal.default.A();
    var length = (0, _emberMetal.get)(this, 'length');

    if ((0, _emberMetal.isNone)(beginIndex)) {
      beginIndex = 0;
    } else if (beginIndex < 0) {
      beginIndex = length + beginIndex;
    }

    if ((0, _emberMetal.isNone)(endIndex) || endIndex > length) {
      endIndex = length;
    } else if (endIndex < 0) {
      endIndex = length + endIndex;
    }

    while (beginIndex < endIndex) {
      ret[ret.length] = objectAt(this, beginIndex++);
    }

    return ret;
  }, _Mixin$create.indexOf = function (object, startAt) {
    var len = (0, _emberMetal.get)(this, 'length');

    if (startAt === undefined) {
      startAt = 0;
    }

    if (startAt < 0) {
      startAt += len;
    }

    for (var idx = startAt; idx < len; idx++) {
      if (objectAt(this, idx) === object) {
        return idx;
      }
    }

    return -1;
  }, _Mixin$create.lastIndexOf = function (object, startAt) {
    var len = (0, _emberMetal.get)(this, 'length');

    if (startAt === undefined || startAt >= len) {
      startAt = len - 1;
    }

    if (startAt < 0) {
      startAt += len;
    }

    for (var idx = startAt; idx >= 0; idx--) {
      if (objectAt(this, idx) === object) {
        return idx;
      }
    }

    return -1;
  }, _Mixin$create.addArrayObserver = function (target, opts) {
    return addArrayObserver(this, target, opts);
  }, _Mixin$create.removeArrayObserver = function (target, opts) {
    return removeArrayObserver(this, target, opts);
  }, _Mixin$create.hasArrayObservers = (0, _emberMetal.computed)(function () {
    return (0, _emberMetal.hasListeners)(this, '@array:change') || (0, _emberMetal.hasListeners)(this, '@array:before');
  }), _Mixin$create.arrayContentWillChange = function (startIdx, removeAmt, addAmt) {
    return arrayContentWillChange(this, startIdx, removeAmt, addAmt);
  }, _Mixin$create.arrayContentDidChange = function (startIdx, removeAmt, addAmt) {
    return arrayContentDidChange(this, startIdx, removeAmt, addAmt);
  }, _Mixin$create.includes = function (obj, startAt) {
    var len = (0, _emberMetal.get)(this, 'length');

    if (startAt === undefined) {
      startAt = 0;
    }

    if (startAt < 0) {
      startAt += len;
    }

    for (var idx = startAt; idx < len; idx++) {
      var currentObj = objectAt(this, idx);

      // SameValueZero comparison (NaN !== NaN)
      if (obj === currentObj || obj !== obj && currentObj !== currentObj) {
        return true;
      }
    }

    return false;
  }, _Mixin$create['@each'] = (0, _emberMetal.computed)(function () {
    // TODO use Symbol or add to meta
    if (!this.__each) {
      this.__each = new EachProxy(this);
    }

    return this.__each;
  }).volatile().readOnly(), _Mixin$create));

  /**
    This is the object instance returned when you get the `@each` property on an
    array. It uses the unknownProperty handler to automatically create
    EachArray instances for property names.
    @class EachProxy
    @private
  */
  function EachProxy(content) {
    this._content = content;
    this._keys = undefined;
    (0, _emberMetal.meta)(this);
  }

  EachProxy.prototype = {
    __defineNonEnumerable: function (property) {
      this[property.name] = property.descriptor.value;
    },
    arrayWillChange: function (content, idx, removedCnt, addedCnt) {
      var keys = this._keys;
      var lim = removedCnt > 0 ? idx + removedCnt : -1;
      var meta = void 0;
      for (var key in keys) {
        meta = meta || (0, _emberMetal.peekMeta)(this);
        if (lim > 0) {
          removeObserverForContentKey(content, key, this, idx, lim);
        }
        (0, _emberMetal.propertyWillChange)(this, key, meta);
      }
    },
    arrayDidChange: function (content, idx, removedCnt, addedCnt) {
      var keys = this._keys;
      var lim = addedCnt > 0 ? idx + addedCnt : -1;
      var meta = void 0;
      for (var key in keys) {
        meta = meta || (0, _emberMetal.peekMeta)(this);
        if (lim > 0) {
          addObserverForContentKey(content, key, this, idx, lim);
        }
        (0, _emberMetal.propertyDidChange)(this, key, meta);
      }
    },
    willWatchProperty: function (property) {
      this.beginObservingContentKey(property);
    },
    didUnwatchProperty: function (property) {
      this.stopObservingContentKey(property);
    },
    beginObservingContentKey: function (keyName) {
      var keys = this._keys;
      if (!keys) {
        keys = this._keys = Object.create(null);
      }

      if (!keys[keyName]) {
        keys[keyName] = 1;
        var content = this._content;
        var len = (0, _emberMetal.get)(content, 'length');

        addObserverForContentKey(content, keyName, this, 0, len);
      } else {
        keys[keyName]++;
      }
    },
    stopObservingContentKey: function (keyName) {
      var keys = this._keys;
      if (keys && keys[keyName] > 0 && --keys[keyName] <= 0) {
        var content = this._content;
        var len = (0, _emberMetal.get)(content, 'length');

        removeObserverForContentKey(content, keyName, this, 0, len);
      }
    },
    contentKeyWillChange: function (obj, keyName) {
      (0, _emberMetal.propertyWillChange)(this, keyName);
    },
    contentKeyDidChange: function (obj, keyName) {
      (0, _emberMetal.propertyDidChange)(this, keyName);
    }
  };

  function addObserverForContentKey(content, keyName, proxy, idx, loc) {
    while (--loc >= idx) {
      var item = objectAt(content, loc);
      if (item) {
        (true && !(typeof item === 'object') && (0, _emberDebug.assert)('When using @each to observe the array `' + (0, _emberUtils.toString)(content) + '`, the array must return an object', typeof item === 'object'));

        (0, _emberMetal._addBeforeObserver)(item, keyName, proxy, 'contentKeyWillChange');
        (0, _emberMetal.addObserver)(item, keyName, proxy, 'contentKeyDidChange');
      }
    }
  }

  function removeObserverForContentKey(content, keyName, proxy, idx, loc) {
    while (--loc >= idx) {
      var item = objectAt(content, loc);
      if (item) {
        (0, _emberMetal._removeBeforeObserver)(item, keyName, proxy, 'contentKeyWillChange');
        (0, _emberMetal.removeObserver)(item, keyName, proxy, 'contentKeyDidChange');
      }
    }
  }

  exports.default = ArrayMixin;
});
enifed('ember-runtime/mixins/comparable', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({

    /**
      __Required.__ You must implement this method to apply this mixin.
       Override to return the result of the comparison of the two parameters. The
      compare method should return:
       - `-1` if `a < b`
      - `0` if `a == b`
      - `1` if `a > b`
       Default implementation raises an exception.
       @method compare
      @param a {Object} the first object to compare
      @param b {Object} the second object to compare
      @return {Number} the result of the comparison
      @private
    */
    compare: null
  });
});
enifed('ember-runtime/mixins/container_proxy', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  /**
    ContainerProxyMixin is used to provide public access to specific
    container functionality.
  
    @class ContainerProxyMixin
    @private
  */
  var containerProxyMixin = {
    /**
     The container stores state.
      @private
     @property {Ember.Container} __container__
     */
    __container__: null,

    ownerInjection: function () {
      return this.__container__.ownerInjection();
    },
    lookup: function (fullName, options) {
      return this.__container__.lookup(fullName, options);
    },
    _resolveLocalLookupName: function (name, source) {
      return this.__container__.registry.expandLocalLookup('component:' + name, {
        source: source
      });
    },
    willDestroy: function () {
      this._super.apply(this, arguments);

      if (this.__container__) {
        (0, _emberMetal.run)(this.__container__, 'destroy');
      }
    },
    factoryFor: function (fullName) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this.__container__.factoryFor(fullName, options);
    }
  }; /**
     @module ember
     */
  exports.default = _emberMetal.Mixin.create(containerProxyMixin);
});
enifed('ember-runtime/mixins/controller', ['exports', 'ember-metal', 'ember-runtime/computed/computed_macros', 'ember-runtime/mixins/action_handler'], function (exports, _emberMetal, _computed_macros, _action_handler) {
  'use strict';

  exports.default = _emberMetal.Mixin.create(_action_handler.default, {
    /* ducktype as a controller */
    isController: true,

    /**
      The object to which actions from the view should be sent.
       For example, when a Handlebars template uses the `{{action}}` helper,
      it will attempt to send the action to the view's controller's `target`.
       By default, the value of the target property is set to the router, and
      is injected when a controller is instantiated. This injection is applied
      as part of the application's initialization process. In most cases the
      `target` property will automatically be set to the logical consumer of
      actions for the controller.
       @property target
      @default null
      @public
    */
    target: null,

    store: null,

    /**
      The controller's current model. When retrieving or modifying a controller's
      model, this property should be used instead of the `content` property.
       @property model
      @public
    */
    model: null,

    /**
      @private
    */
    content: (0, _computed_macros.deprecatingAlias)('model', {
      id: 'ember-runtime.controller.content-alias',
      until: '2.17.0',
      url: 'https://emberjs.com/deprecations/v2.x/#toc_controller-content-alias'
    })
  });
});
enifed('ember-runtime/mixins/copyable', ['exports', 'ember-metal', 'ember-debug', 'ember-runtime/mixins/freezable'], function (exports, _emberMetal, _emberDebug, _freezable) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({
    /**
      __Required.__ You must implement this method to apply this mixin.
       Override to return a copy of the receiver. Default implementation raises
      an exception.
       @method copy
      @param {Boolean} deep if `true`, a deep copy of the object should be made
      @return {Object} copy of receiver
      @private
    */
    copy: null,

    /**
      If the object implements `Ember.Freezable`, then this will return a new
      copy if the object is not frozen and the receiver if the object is frozen.
       Raises an exception if you try to call this method on a object that does
      not support freezing.
       You should use this method whenever you want a copy of a freezable object
      since a freezable object can simply return itself without actually
      consuming more memory.
       @method frozenCopy
      @return {Object} copy of receiver or receiver
      @deprecated Use `Object.freeze` instead.
      @private
    */
    frozenCopy: function () {
      (true && !(false) && (0, _emberDebug.deprecate)('`frozenCopy` is deprecated, use `Object.freeze` instead.', false, { id: 'ember-runtime.frozen-copy', until: '3.0.0' }));

      if (_freezable.Freezable && _freezable.Freezable.detect(this)) {
        return (0, _emberMetal.get)(this, 'isFrozen') ? this : this.copy().freeze();
      } else {
        throw new _emberDebug.Error(this + ' does not support freezing');
      }
    }
  });
});
enifed('ember-runtime/mixins/enumerable', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-runtime/compare', 'require'], function (exports, _emberUtils, _emberMetal, _emberDebug, _compare, _require2) {
  'use strict';

  var _emberA = void 0; /**
                        @module @ember/enumerable
                        @private
                        */

  // ..........................................................
  // HELPERS
  //

  function emberA() {
    if (_emberA === undefined) {
      _emberA = (0, _require2.default)('ember-runtime/system/native_array').A;
    }
    return _emberA();
  }

  var contexts = [];

  function popCtx() {
    return contexts.length === 0 ? {} : contexts.pop();
  }

  function pushCtx(ctx) {
    contexts.push(ctx);
    return null;
  }

  function iter(key, value) {
    var valueProvided = arguments.length === 2;

    return valueProvided ? function (item) {
      return value === (0, _emberMetal.get)(item, key);
    } : function (item) {
      return !!(0, _emberMetal.get)(item, key);
    };
  }

  /**
    This mixin defines the common interface implemented by enumerable objects
    in Ember. Most of these methods follow the standard Array iteration
    API defined up to JavaScript 1.8 (excluding language-specific features that
    cannot be emulated in older versions of JavaScript).
  
    This mixin is applied automatically to the Array class on page load, so you
    can use any of these methods on simple arrays. If Array already implements
    one of these methods, the mixin will not override them.
  
    ## Writing Your Own Enumerable
  
    To make your own custom class enumerable, you need two items:
  
    1. You must have a length property. This property should change whenever
       the number of items in your enumerable object changes. If you use this
       with an `Ember.Object` subclass, you should be sure to change the length
       property using `set().`
  
    2. You must implement `nextObject().` See documentation.
  
    Once you have these two methods implemented, apply the `Ember.Enumerable` mixin
    to your class and you will be able to enumerate the contents of your object
    like any other collection.
  
    ## Using Ember Enumeration with Other Libraries
  
    Many other libraries provide some kind of iterator or enumeration like
    facility. This is often where the most common API conflicts occur.
    Ember's API is designed to be as friendly as possible with other
    libraries by implementing only methods that mostly correspond to the
    JavaScript 1.8 API.
  
    @class Enumerable
    @since Ember 0.9
    @private
  */
  var Enumerable = _emberMetal.Mixin.create({

    /**
      __Required.__ You must implement this method to apply this mixin.
       Implement this method to make your class enumerable.
       This method will be called repeatedly during enumeration. The index value
      will always begin with 0 and increment monotonically. You don't have to
      rely on the index value to determine what object to return, but you should
      always check the value and start from the beginning when you see the
      requested index is 0.
       The `previousObject` is the object that was returned from the last call
      to `nextObject` for the current iteration. This is a useful way to
      manage iteration if you are tracing a linked list, for example.
       Finally the context parameter will always contain a hash you can use as
      a "scratchpad" to maintain any other state you need in order to iterate
      properly. The context object is reused and is not reset between
      iterations so make sure you setup the context with a fresh state whenever
      the index parameter is 0.
       Generally iterators will continue to call `nextObject` until the index
      reaches the current length-1. If you run out of data before this
      time for some reason, you should simply return undefined.
       The default implementation of this method simply looks up the index.
      This works great on any Array-like objects.
       @method nextObject
      @param {Number} index the current index of the iteration
      @param {Object} previousObject the value returned by the last call to
        `nextObject`.
      @param {Object} context a context object you can use to maintain state.
      @return {Object} the next object in the iteration or undefined
      @private
    */
    nextObject: null,

    /**
      Helper method returns the first object from a collection. This is usually
      used by bindings and other parts of the framework to extract a single
      object if the enumerable contains only one item.
       If you override this method, you should implement it so that it will
      always return the same value each time it is called. If your enumerable
      contains only one object, this method should always return that object.
      If your enumerable is empty, this method should return `undefined`.
       ```javascript
      let arr = ['a', 'b', 'c'];
      arr.get('firstObject');  // 'a'
       let arr = [];
      arr.get('firstObject');  // undefined
      ```
       @property firstObject
      @return {Object} the object or undefined
      @readOnly
      @public
    */
    firstObject: (0, _emberMetal.computed)('[]', function () {
      if ((0, _emberMetal.get)(this, 'length') === 0) {
        return undefined;
      }

      // handle generic enumerables
      var context = popCtx();
      var ret = this.nextObject(0, null, context);

      pushCtx(context);

      return ret;
    }).readOnly(),

    /**
      Helper method returns the last object from a collection. If your enumerable
      contains only one object, this method should always return that object.
      If your enumerable is empty, this method should return `undefined`.
       ```javascript
      let arr = ['a', 'b', 'c'];
      arr.get('lastObject');  // 'c'
       let arr = [];
      arr.get('lastObject');  // undefined
      ```
       @property lastObject
      @return {Object} the last object or undefined
      @readOnly
      @public
    */
    lastObject: (0, _emberMetal.computed)('[]', function () {
      var len = (0, _emberMetal.get)(this, 'length');

      if (len === 0) {
        return undefined;
      }

      var context = popCtx();
      var idx = 0;
      var last = null;
      var cur = void 0;

      do {
        last = cur;
        cur = this.nextObject(idx++, last, context);
      } while (cur !== undefined);

      pushCtx(context);

      return last;
    }).readOnly(),

    contains: function (obj) {
      (true && !(false) && (0, _emberDebug.deprecate)('`Enumerable#contains` is deprecated, use `Enumerable#includes` instead.', false, { id: 'ember-runtime.enumerable-contains', until: '3.0.0', url: 'https://emberjs.com/deprecations/v2.x#toc_enumerable-contains' }));


      var found = this.find(function (item) {
        return item === obj;
      });

      return found !== undefined;
    },
    forEach: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#forEach expects a function as first argument.', typeof callback === 'function'));


      var context = popCtx();
      var len = (0, _emberMetal.get)(this, 'length');
      var last = null;

      if (target === undefined) {
        target = null;
      }

      for (var idx = 0; idx < len; idx++) {
        var next = this.nextObject(idx, last, context);
        callback.call(target, next, idx, this);
        last = next;
      }

      last = null;
      context = pushCtx(context);

      return this;
    },


    /**
      Alias for `mapBy`
       @method getEach
      @param {String} key name of the property
      @return {Array} The mapped array.
      @public
    */
    getEach: (0, _emberMetal.aliasMethod)('mapBy'),

    setEach: function (key, value) {
      return this.forEach(function (item) {
        return (0, _emberMetal.set)(item, key, value);
      });
    },
    map: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#map expects a function as first argument.', typeof callback === 'function'));


      var ret = emberA();

      this.forEach(function (x, idx, i) {
        return ret[idx] = callback.call(target, x, idx, i);
      });

      return ret;
    },
    mapBy: function (key) {
      return this.map(function (next) {
        return (0, _emberMetal.get)(next, key);
      });
    },
    filter: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#filter expects a function as first argument.', typeof callback === 'function'));


      var ret = emberA();

      this.forEach(function (x, idx, i) {
        if (callback.call(target, x, idx, i)) {
          ret.push(x);
        }
      });

      return ret;
    },
    reject: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#reject expects a function as first argument.', typeof callback === 'function'));


      return this.filter(function () {
        return !callback.apply(target, arguments);
      });
    },
    filterBy: function (key, value) {
      return this.filter(iter.apply(this, arguments));
    },
    rejectBy: function (key, value) {
      var exactValue = function (item) {
        return (0, _emberMetal.get)(item, key) === value;
      };
      var hasValue = function (item) {
        return !!(0, _emberMetal.get)(item, key);
      };
      var use = arguments.length === 2 ? exactValue : hasValue;

      return this.reject(use);
    },
    find: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#find expects a function as first argument.', typeof callback === 'function'));


      var len = (0, _emberMetal.get)(this, 'length');

      if (target === undefined) {
        target = null;
      }

      var context = popCtx();
      var found = false;
      var last = null;
      var next = void 0,
          ret = void 0;

      for (var idx = 0; idx < len && !found; idx++) {
        next = this.nextObject(idx, last, context);

        found = callback.call(target, next, idx, this);
        if (found) {
          ret = next;
        }

        last = next;
      }

      next = last = null;
      context = pushCtx(context);

      return ret;
    },
    findBy: function (key, value) {
      return this.find(iter.apply(this, arguments));
    },
    every: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#every expects a function as first argument.', typeof callback === 'function'));


      return !this.find(function (x, idx, i) {
        return !callback.call(target, x, idx, i);
      });
    },
    isEvery: function (key, value) {
      return this.every(iter.apply(this, arguments));
    },
    any: function (callback, target) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#any expects a function as first argument.', typeof callback === 'function'));


      var len = (0, _emberMetal.get)(this, 'length');
      var context = popCtx();
      var found = false;
      var last = null;
      var next = void 0;

      if (target === undefined) {
        target = null;
      }

      for (var idx = 0; idx < len && !found; idx++) {
        next = this.nextObject(idx, last, context);
        found = callback.call(target, next, idx, this);
        last = next;
      }

      next = last = null;
      context = pushCtx(context);
      return found;
    },
    isAny: function (key, value) {
      return this.any(iter.apply(this, arguments));
    },
    reduce: function (callback, initialValue, reducerProperty) {
      (true && !(typeof callback === 'function') && (0, _emberDebug.assert)('Enumerable#reduce expects a function as first argument.', typeof callback === 'function'));


      var ret = initialValue;

      this.forEach(function (item, i) {
        ret = callback(ret, item, i, this, reducerProperty);
      }, this);

      return ret;
    },
    invoke: function (methodName) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var ret = emberA();

      this.forEach(function (x, idx) {
        var method = x && x[methodName];

        if ('function' === typeof method) {
          ret[idx] = args.length ? method.apply(x, args) : x[methodName]();
        }
      }, this);

      return ret;
    },
    toArray: function () {
      var ret = emberA();

      this.forEach(function (o, idx) {
        return ret[idx] = o;
      });

      return ret;
    },
    compact: function () {
      return this.filter(function (value) {
        return value != null;
      });
    },
    without: function (value) {
      if (!this.includes(value)) {
        return this; // nothing to do
      }

      var ret = emberA();

      this.forEach(function (k) {
        // SameValueZero comparison (NaN !== NaN)
        if (!(k === value || k !== k && value !== value)) {
          ret[ret.length] = k;
        }
      });

      return ret;
    },
    uniq: function () {
      var ret = emberA();

      this.forEach(function (k) {
        if (ret.indexOf(k) < 0) {
          ret.push(k);
        }
      });

      return ret;
    },


    /**
      This property will trigger anytime the enumerable's content changes.
      You can observe this property to be notified of changes to the enumerable's
      content.
       For plain enumerables, this property is read only. `Array` overrides
      this method.
       @property []
      @type Array
      @return this
      @private
    */
    '[]': (0, _emberMetal.computed)({
      get: function (key) {
        return this;
      }
    }),

    addEnumerableObserver: function (target, opts) {
      var willChange = opts && opts.willChange || 'enumerableWillChange';
      var didChange = opts && opts.didChange || 'enumerableDidChange';
      var hasObservers = (0, _emberMetal.get)(this, 'hasEnumerableObservers');

      if (!hasObservers) {
        (0, _emberMetal.propertyWillChange)(this, 'hasEnumerableObservers');
      }

      (0, _emberMetal.addListener)(this, '@enumerable:before', target, willChange);
      (0, _emberMetal.addListener)(this, '@enumerable:change', target, didChange);

      if (!hasObservers) {
        (0, _emberMetal.propertyDidChange)(this, 'hasEnumerableObservers');
      }

      return this;
    },
    removeEnumerableObserver: function (target, opts) {
      var willChange = opts && opts.willChange || 'enumerableWillChange';
      var didChange = opts && opts.didChange || 'enumerableDidChange';
      var hasObservers = (0, _emberMetal.get)(this, 'hasEnumerableObservers');

      if (hasObservers) {
        (0, _emberMetal.propertyWillChange)(this, 'hasEnumerableObservers');
      }

      (0, _emberMetal.removeListener)(this, '@enumerable:before', target, willChange);
      (0, _emberMetal.removeListener)(this, '@enumerable:change', target, didChange);

      if (hasObservers) {
        (0, _emberMetal.propertyDidChange)(this, 'hasEnumerableObservers');
      }

      return this;
    },


    /**
      Becomes true whenever the array currently has observers watching changes
      on the array.
       @property hasEnumerableObservers
      @type Boolean
      @private
    */
    hasEnumerableObservers: (0, _emberMetal.computed)(function () {
      return (0, _emberMetal.hasListeners)(this, '@enumerable:change') || (0, _emberMetal.hasListeners)(this, '@enumerable:before');
    }),

    enumerableContentWillChange: function (removing, adding) {
      var removeCnt = void 0,
          addCnt = void 0,
          hasDelta = void 0;

      if ('number' === typeof removing) {
        removeCnt = removing;
      } else if (removing) {
        removeCnt = (0, _emberMetal.get)(removing, 'length');
      } else {
        removeCnt = removing = -1;
      }

      if ('number' === typeof adding) {
        addCnt = adding;
      } else if (adding) {
        addCnt = (0, _emberMetal.get)(adding, 'length');
      } else {
        addCnt = adding = -1;
      }

      hasDelta = addCnt < 0 || removeCnt < 0 || addCnt - removeCnt !== 0;

      if (removing === -1) {
        removing = null;
      }

      if (adding === -1) {
        adding = null;
      }

      (0, _emberMetal.propertyWillChange)(this, '[]');

      if (hasDelta) {
        (0, _emberMetal.propertyWillChange)(this, 'length');
      }

      (0, _emberMetal.sendEvent)(this, '@enumerable:before', [this, removing, adding]);

      return this;
    },
    enumerableContentDidChange: function (removing, adding) {
      var removeCnt = void 0,
          addCnt = void 0,
          hasDelta = void 0;

      if ('number' === typeof removing) {
        removeCnt = removing;
      } else if (removing) {
        removeCnt = (0, _emberMetal.get)(removing, 'length');
      } else {
        removeCnt = removing = -1;
      }

      if ('number' === typeof adding) {
        addCnt = adding;
      } else if (adding) {
        addCnt = (0, _emberMetal.get)(adding, 'length');
      } else {
        addCnt = adding = -1;
      }

      hasDelta = addCnt < 0 || removeCnt < 0 || addCnt - removeCnt !== 0;

      if (removing === -1) {
        removing = null;
      }

      if (adding === -1) {
        adding = null;
      }

      (0, _emberMetal.sendEvent)(this, '@enumerable:change', [this, removing, adding]);

      if (hasDelta) {
        (0, _emberMetal.propertyDidChange)(this, 'length');
      }

      (0, _emberMetal.propertyDidChange)(this, '[]');

      return this;
    },
    sortBy: function () {
      var sortKeys = arguments;

      return this.toArray().sort(function (a, b) {
        for (var i = 0; i < sortKeys.length; i++) {
          var key = sortKeys[i];
          var propA = (0, _emberMetal.get)(a, key);
          var propB = (0, _emberMetal.get)(b, key);
          // return 1 or -1 else continue to the next sortKey
          var compareValue = (0, _compare.default)(propA, propB);

          if (compareValue) {
            return compareValue;
          }
        }
        return 0;
      });
    },
    uniqBy: function (key) {
      var ret = emberA();
      var seen = Object.create(null);

      this.forEach(function (item) {
        var guid = (0, _emberUtils.guidFor)((0, _emberMetal.get)(item, key));
        if (!(guid in seen)) {
          seen[guid] = true;
          ret.push(item);
        }
      });

      return ret;
    },
    includes: function (obj) {
      (true && !(arguments.length === 1) && (0, _emberDebug.assert)('Enumerable#includes cannot accept a second argument "startAt" as enumerable items are unordered.', arguments.length === 1));


      var len = (0, _emberMetal.get)(this, 'length');
      var idx = void 0,
          next = void 0;
      var last = null;
      var found = false;

      var context = popCtx();

      for (idx = 0; idx < len && !found; idx++) {
        next = this.nextObject(idx, last, context);

        found = obj === next || obj !== obj && next !== next;

        last = next;
      }

      next = last = null;
      context = pushCtx(context);

      return found;
    }
  });

  exports.default = Enumerable;
});
enifed('ember-runtime/mixins/evented', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({

    /**
      Subscribes to a named event with given function.
       ```javascript
      person.on('didLoad', function() {
        // fired once the person has loaded
      });
      ```
       An optional target can be passed in as the 2nd argument that will
      be set as the "this" for the callback. This is a good way to give your
      function access to the object triggering the event. When the target
      parameter is used the callback becomes the third argument.
       @method on
      @param {String} name The name of the event
      @param {Object} [target] The "this" binding for the callback
      @param {Function} method The callback to execute
      @return this
      @public
    */
    on: function (name, target, method) {
      (0, _emberMetal.addListener)(this, name, target, method);
      return this;
    },


    /**
      Subscribes a function to a named event and then cancels the subscription
      after the first time the event is triggered. It is good to use ``one`` when
      you only care about the first time an event has taken place.
       This function takes an optional 2nd argument that will become the "this"
      value for the callback. If this argument is passed then the 3rd argument
      becomes the function.
       @method one
      @param {String} name The name of the event
      @param {Object} [target] The "this" binding for the callback
      @param {Function} method The callback to execute
      @return this
      @public
    */
    one: function (name, target, method) {
      if (!method) {
        method = target;
        target = null;
      }

      (0, _emberMetal.addListener)(this, name, target, method, true);
      return this;
    },


    /**
      Triggers a named event for the object. Any additional arguments
      will be passed as parameters to the functions that are subscribed to the
      event.
       ```javascript
      person.on('didEat', function(food) {
        console.log('person ate some ' + food);
      });
       person.trigger('didEat', 'broccoli');
       // outputs: person ate some broccoli
      ```
      @method trigger
      @param {String} name The name of the event
      @param {Object...} args Optional arguments to pass on
      @public
    */
    trigger: function (name) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (0, _emberMetal.sendEvent)(this, name, args);
    },


    /**
      Cancels subscription for given name, target, and method.
       @method off
      @param {String} name The name of the event
      @param {Object} target The target of the subscription
      @param {Function} method The function of the subscription
      @return this
      @public
    */
    off: function (name, target, method) {
      (0, _emberMetal.removeListener)(this, name, target, method);
      return this;
    },


    /**
      Checks to see if object has any subscriptions for named event.
       @method has
      @param {String} name The name of the event
      @return {Boolean} does the object have a subscription for event
      @public
     */
    has: function (name) {
      return (0, _emberMetal.hasListeners)(this, name);
    }
  });
});
enifed('ember-runtime/mixins/freezable', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.FROZEN_ERROR = exports.Freezable = undefined;


  /**
    The `Ember.Freezable` mixin implements some basic methods for marking an
    object as frozen. Once an object is frozen it should be read only. No changes
    may be made the internal state of the object.
  
    ## Enforcement
  
    To fully support freezing in your subclass, you must include this mixin and
    override any method that might alter any property on the object to instead
    raise an exception. You can check the state of an object by checking the
    `isFrozen` property.
  
    Although future versions of JavaScript may support language-level freezing
    object objects, that is not the case today. Even if an object is freezable,
    it is still technically possible to modify the object, even though it could
    break other parts of your application that do not expect a frozen object to
    change. It is, therefore, very important that you always respect the
    `isFrozen` property on all freezable objects.
  
    ## Example Usage
  
    The example below shows a simple object that implement the `Ember.Freezable`
    protocol.
  
    ```javascript
    Contact = Ember.Object.extend(Ember.Freezable, {
      firstName: null,
      lastName: null,
  
      // swaps the names
      swapNames: function() {
        if (this.get('isFrozen')) throw Ember.FROZEN_ERROR;
        var tmp = this.get('firstName');
        this.set('firstName', this.get('lastName'));
        this.set('lastName', tmp);
        return this;
      }
  
    });
  
    c = Contact.create({ firstName: "John", lastName: "Doe" });
    c.swapNames();  // returns c
    c.freeze();
    c.swapNames();  // EXCEPTION
    ```
  
    ## Copying
  
    Usually the `Ember.Freezable` protocol is implemented in cooperation with the
    `Ember.Copyable` protocol, which defines a `frozenCopy()` method that will
    return a frozen object, if the object implements this method as well.
  
    @class Freezable
    @namespace Ember
    @since Ember 0.9
    @deprecated Use `Object.freeze` instead.
    @private
  */
  /**
  @module ember
  */

  var Freezable = exports.Freezable = _emberMetal.Mixin.create({
    init: function () {
      (true && !(false) && (0, _emberDebug.deprecate)('`Ember.Freezable` is deprecated, use `Object.freeze` instead.', false, { id: 'ember-runtime.freezable-init', until: '3.0.0' }));

      this._super.apply(this, arguments);
    },


    /**
      Set to `true` when the object is frozen. Use this property to detect
      whether your object is frozen or not.
       @property isFrozen
      @type Boolean
      @private
    */
    isFrozen: false,

    /**
      Freezes the object. Once this method has been called the object should
      no longer allow any properties to be edited.
       @method freeze
      @return {Object} receiver
      @private
    */
    freeze: function () {
      if ((0, _emberMetal.get)(this, 'isFrozen')) {
        return this;
      }

      (0, _emberMetal.set)(this, 'isFrozen', true);
      return this;
    }
  });

  var FROZEN_ERROR = exports.FROZEN_ERROR = 'Frozen object cannot be modified.';
});
enifed('ember-runtime/mixins/mutable_array', ['exports', 'ember-metal', 'ember-runtime/mixins/array', 'ember-runtime/mixins/mutable_enumerable', 'ember-runtime/mixins/enumerable', 'ember-debug'], function (exports, _emberMetal, _array, _mutable_enumerable, _enumerable, _emberDebug) {
  'use strict';

  exports.removeAt = removeAt;
  /**
  @module @ember/array
  */

  var OUT_OF_RANGE_EXCEPTION = 'Index out of range';
  var EMPTY = [];

  // ..........................................................
  // HELPERS
  //

  function removeAt(array, start, len) {
    if ('number' === typeof start) {
      if (start < 0 || start >= (0, _emberMetal.get)(array, 'length')) {
        throw new _emberDebug.Error(OUT_OF_RANGE_EXCEPTION);
      }

      // fast case
      if (len === undefined) {
        len = 1;
      }

      array.replace(start, len, EMPTY);
    }

    return array;
  }

  /**
    This mixin defines the API for modifying array-like objects. These methods
    can be applied only to a collection that keeps its items in an ordered set.
    It builds upon the Array mixin and adds methods to modify the array.
    One concrete implementations of this class include ArrayProxy.
  
    It is important to use the methods in this class to modify arrays so that
    changes are observable. This allows the binding system in Ember to function
    correctly.
  
  
    Note that an Array can change even if it does not implement this mixin.
    For example, one might implement a SparseArray that cannot be directly
    modified, but if its underlying enumerable changes, it will change also.
  
    @class MutableArray
    @uses EmberArray
    @uses Ember.MutableEnumerable
    @public
  */
  exports.default = _emberMetal.Mixin.create(_array.default, _mutable_enumerable.default, {

    /**
      __Required.__ You must implement this method to apply this mixin.
       This is one of the primitives you must implement to support `Ember.Array`.
      You should replace amt objects started at idx with the objects in the
      passed array. You should also call `this.enumerableContentDidChange()`
       @method replace
      @param {Number} idx Starting index in the array to replace. If
        idx >= length, then append to the end of the array.
      @param {Number} amt Number of elements that should be removed from
        the array, starting at *idx*.
      @param {EmberArray} objects An array of zero or more objects that should be
        inserted into the array at *idx*
      @public
    */
    replace: null,

    /**
      Remove all elements from the array. This is useful if you
      want to reuse an existing array without having to recreate it.
       ```javascript
      let colors = ['red', 'green', 'blue'];
       colors.length;  // 3
      colors.clear(); // []
      colors.length;  // 0
      ```
       @method clear
      @return {Ember.Array} An empty Array.
      @public
    */
    clear: function () {
      var len = (0, _emberMetal.get)(this, 'length');
      if (len === 0) {
        return this;
      }

      this.replace(0, len, EMPTY);
      return this;
    },


    /**
      This will use the primitive `replace()` method to insert an object at the
      specified index.
       ```javascript
      let colors = ['red', 'green', 'blue'];
       colors.insertAt(2, 'yellow');  // ['red', 'green', 'yellow', 'blue']
      colors.insertAt(5, 'orange');  // Error: Index out of range
      ```
       @method insertAt
      @param {Number} idx index of insert the object at.
      @param {Object} object object to insert
      @return {EmberArray} receiver
      @public
    */
    insertAt: function (idx, object) {
      if (idx > (0, _emberMetal.get)(this, 'length')) {
        throw new _emberDebug.Error(OUT_OF_RANGE_EXCEPTION);
      }

      this.replace(idx, 0, [object]);
      return this;
    },


    /**
      Remove an object at the specified index using the `replace()` primitive
      method. You can pass either a single index, or a start and a length.
       If you pass a start and length that is beyond the
      length this method will throw an `OUT_OF_RANGE_EXCEPTION`.
       ```javascript
      let colors = ['red', 'green', 'blue', 'yellow', 'orange'];
       colors.removeAt(0);     // ['green', 'blue', 'yellow', 'orange']
      colors.removeAt(2, 2);  // ['green', 'blue']
      colors.removeAt(4, 2);  // Error: Index out of range
      ```
       @method removeAt
      @param {Number} start index, start of range
      @param {Number} len length of passing range
      @return {EmberArray} receiver
      @public
    */
    removeAt: function (start, len) {
      return removeAt(this, start, len);
    },


    /**
      Push the object onto the end of the array. Works just like `push()` but it
      is KVO-compliant.
       ```javascript
      let colors = ['red', 'green'];
       colors.pushObject('black');     // ['red', 'green', 'black']
      colors.pushObject(['yellow']);  // ['red', 'green', ['yellow']]
      ```
       @method pushObject
      @param {*} obj object to push
      @return object same object passed as a param
      @public
    */
    pushObject: function (obj) {
      this.insertAt((0, _emberMetal.get)(this, 'length'), obj);
      return obj;
    },


    /**
      Add the objects in the passed numerable to the end of the array. Defers
      notifying observers of the change until all objects are added.
       ```javascript
      let colors = ['red'];
       colors.pushObjects(['yellow', 'orange']);  // ['red', 'yellow', 'orange']
      ```
       @method pushObjects
      @param {Enumerable} objects the objects to add
      @return {EmberArray} receiver
      @public
    */
    pushObjects: function (objects) {
      if (!(_enumerable.default.detect(objects) || Array.isArray(objects))) {
        throw new TypeError('Must pass Ember.Enumerable to Ember.MutableArray#pushObjects');
      }
      this.replace((0, _emberMetal.get)(this, 'length'), 0, objects);
      return this;
    },


    /**
      Pop object from array or nil if none are left. Works just like `pop()` but
      it is KVO-compliant.
       ```javascript
      let colors = ['red', 'green', 'blue'];
       colors.popObject();   // 'blue'
      console.log(colors);  // ['red', 'green']
      ```
       @method popObject
      @return object
      @public
    */
    popObject: function () {
      var len = (0, _emberMetal.get)(this, 'length');
      if (len === 0) {
        return null;
      }

      var ret = (0, _array.objectAt)(this, len - 1);
      this.removeAt(len - 1, 1);
      return ret;
    },


    /**
      Shift an object from start of array or nil if none are left. Works just
      like `shift()` but it is KVO-compliant.
       ```javascript
      let colors = ['red', 'green', 'blue'];
       colors.shiftObject();  // 'red'
      console.log(colors);   // ['green', 'blue']
      ```
       @method shiftObject
      @return object
      @public
    */
    shiftObject: function () {
      if ((0, _emberMetal.get)(this, 'length') === 0) {
        return null;
      }

      var ret = (0, _array.objectAt)(this, 0);
      this.removeAt(0);
      return ret;
    },


    /**
      Unshift an object to start of array. Works just like `unshift()` but it is
      KVO-compliant.
       ```javascript
      let colors = ['red'];
       colors.unshiftObject('yellow');    // ['yellow', 'red']
      colors.unshiftObject(['black']);   // [['black'], 'yellow', 'red']
      ```
       @method unshiftObject
      @param {*} obj object to unshift
      @return object same object passed as a param
      @public
    */
    unshiftObject: function (obj) {
      this.insertAt(0, obj);
      return obj;
    },


    /**
      Adds the named objects to the beginning of the array. Defers notifying
      observers until all objects have been added.
       ```javascript
      let colors = ['red'];
       colors.unshiftObjects(['black', 'white']);   // ['black', 'white', 'red']
      colors.unshiftObjects('yellow'); // Type Error: 'undefined' is not a function
      ```
       @method unshiftObjects
      @param {Enumberable} objects the objects to add
      @return {EmberArray} receiver
      @public
    */
    unshiftObjects: function (objects) {
      this.replace(0, 0, objects);
      return this;
    },


    /**
      Reverse objects in the array. Works just like `reverse()` but it is
      KVO-compliant.
       @method reverseObjects
      @return {EmberArray} receiver
       @public
    */
    reverseObjects: function () {
      var len = (0, _emberMetal.get)(this, 'length');
      if (len === 0) {
        return this;
      }

      var objects = this.toArray().reverse();
      this.replace(0, len, objects);
      return this;
    },


    /**
      Replace all the receiver's content with content of the argument.
      If argument is an empty array receiver will be cleared.
       ```javascript
      let colors = ['red', 'green', 'blue'];
       colors.setObjects(['black', 'white']);  // ['black', 'white']
      colors.setObjects([]);                  // []
      ```
       @method setObjects
      @param {EmberArray} objects array whose content will be used for replacing
          the content of the receiver
      @return {EmberArray} receiver with the new content
      @public
    */
    setObjects: function (objects) {
      if (objects.length === 0) {
        return this.clear();
      }

      var len = (0, _emberMetal.get)(this, 'length');
      this.replace(0, len, objects);
      return this;
    },


    // ..........................................................
    // IMPLEMENT Ember.MutableEnumerable
    //

    /**
      Remove all occurrences of an object in the array.
       ```javascript
      let cities = ['Chicago', 'Berlin', 'Lima', 'Chicago'];
       cities.removeObject('Chicago');  // ['Berlin', 'Lima']
      cities.removeObject('Lima');     // ['Berlin']
      cities.removeObject('Tokyo')     // ['Berlin']
      ```
       @method removeObject
      @param {*} obj object to remove
      @return {EmberArray} receiver
      @public
    */
    removeObject: function (obj) {
      var loc = (0, _emberMetal.get)(this, 'length') || 0;
      while (--loc >= 0) {
        var curObject = (0, _array.objectAt)(this, loc);

        if (curObject === obj) {
          this.removeAt(loc);
        }
      }
      return this;
    },


    /**
      Push the object onto the end of the array if it is not already
      present in the array.
       ```javascript
      let cities = ['Chicago', 'Berlin'];
       cities.addObject('Lima');    // ['Chicago', 'Berlin', 'Lima']
      cities.addObject('Berlin');  // ['Chicago', 'Berlin', 'Lima']
      ```
       @method addObject
      @param {*} obj object to add, if not already present
      @return {EmberArray} receiver
      @public
    */
    addObject: function (obj) {
      var included = this.includes(obj);

      if (!included) {
        this.pushObject(obj);
      }

      return this;
    }
  });
});
enifed('ember-runtime/mixins/mutable_enumerable', ['exports', 'ember-runtime/mixins/enumerable', 'ember-metal'], function (exports, _enumerable, _emberMetal) {
  'use strict';

  exports.default = _emberMetal.Mixin.create(_enumerable.default, {

    /**
      __Required.__ You must implement this method to apply this mixin.
       Attempts to add the passed object to the receiver if the object is not
      already present in the collection. If the object is present, this method
      has no effect.
       If the passed object is of a type not supported by the receiver,
      then this method should raise an exception.
       @method addObject
      @param {Object} object The object to add to the enumerable.
      @return {Object} the passed object
      @public
    */
    addObject: null,

    /**
      Adds each object in the passed enumerable to the receiver.
       @method addObjects
      @param {Ember.Enumerable} objects the objects to add.
      @return {Object} receiver
      @public
    */
    addObjects: function (objects) {
      var _this = this;

      (0, _emberMetal.beginPropertyChanges)(this);
      objects.forEach(function (obj) {
        return _this.addObject(obj);
      });
      (0, _emberMetal.endPropertyChanges)(this);
      return this;
    },


    /**
      __Required.__ You must implement this method to apply this mixin.
       Attempts to remove the passed object from the receiver collection if the
      object is present in the collection. If the object is not present,
      this method has no effect.
       If the passed object is of a type not supported by the receiver,
      then this method should raise an exception.
       @method removeObject
      @param {Object} object The object to remove from the enumerable.
      @return {Object} the passed object
      @public
    */
    removeObject: null,

    /**
      Removes each object in the passed enumerable from the receiver.
       @method removeObjects
      @param {Ember.Enumerable} objects the objects to remove
      @return {Object} receiver
      @public
    */
    removeObjects: function (objects) {
      (0, _emberMetal.beginPropertyChanges)(this);
      for (var i = objects.length - 1; i >= 0; i--) {
        this.removeObject(objects[i]);
      }
      (0, _emberMetal.endPropertyChanges)(this);
      return this;
    }
  });
});
enifed('ember-runtime/mixins/observable', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({

    /**
      Retrieves the value of a property from the object.
       This method is usually similar to using `object[keyName]` or `object.keyName`,
      however it supports both computed properties and the unknownProperty
      handler.
       Because `get` unifies the syntax for accessing all these kinds
      of properties, it can make many refactorings easier, such as replacing a
      simple property with a computed property, or vice versa.
       ### Computed Properties
       Computed properties are methods defined with the `property` modifier
      declared at the end, such as:
       ```javascript
      fullName: Ember.computed('firstName', 'lastName', function() {
        return this.get('firstName') + ' ' + this.get('lastName');
      })
      ```
       When you call `get` on a computed property, the function will be
      called and the return value will be returned instead of the function
      itself.
       ### Unknown Properties
       Likewise, if you try to call `get` on a property whose value is
      `undefined`, the `unknownProperty()` method will be called on the object.
      If this method returns any value other than `undefined`, it will be returned
      instead. This allows you to implement "virtual" properties that are
      not defined upfront.
       @method get
      @param {String} keyName The property to retrieve
      @return {Object} The property value or undefined.
      @public
    */
    get: function (keyName) {
      return (0, _emberMetal.get)(this, keyName);
    },


    /**
      To get the values of multiple properties at once, call `getProperties`
      with a list of strings or an array:
       ```javascript
      record.getProperties('firstName', 'lastName', 'zipCode');
      // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }
      ```
       is equivalent to:
       ```javascript
      record.getProperties(['firstName', 'lastName', 'zipCode']);
      // { firstName: 'John', lastName: 'Doe', zipCode: '10011' }
      ```
       @method getProperties
      @param {String...|Array} list of keys to get
      @return {Object}
      @public
    */
    getProperties: function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _emberMetal.getProperties.apply(undefined, [this].concat(args));
    },


    /**
      Sets the provided key or path to the value.
       ```javascript
      record.set("key", value);
      ```
       This method is generally very similar to calling `object["key"] = value` or
      `object.key = value`, except that it provides support for computed
      properties, the `setUnknownProperty()` method and property observers.
       ### Computed Properties
       If you try to set a value on a key that has a computed property handler
      defined (see the `get()` method for an example), then `set()` will call
      that method, passing both the value and key instead of simply changing
      the value itself. This is useful for those times when you need to
      implement a property that is composed of one or more member
      properties.
       ### Unknown Properties
       If you try to set a value on a key that is undefined in the target
      object, then the `setUnknownProperty()` handler will be called instead. This
      gives you an opportunity to implement complex "virtual" properties that
      are not predefined on the object. If `setUnknownProperty()` returns
      undefined, then `set()` will simply set the value on the object.
       ### Property Observers
       In addition to changing the property, `set()` will also register a property
      change with the object. Unless you have placed this call inside of a
      `beginPropertyChanges()` and `endPropertyChanges(),` any "local" observers
      (i.e. observer methods declared on the same object), will be called
      immediately. Any "remote" observers (i.e. observer methods declared on
      another object) will be placed in a queue and called at a later time in a
      coalesced manner.
       @method set
      @param {String} keyName The property to set
      @param {Object} value The value to set or `null`.
      @return {Object} The passed value
      @public
    */
    set: function (keyName, value) {
      return (0, _emberMetal.set)(this, keyName, value);
    },


    /**
      Sets a list of properties at once. These properties are set inside
      a single `beginPropertyChanges` and `endPropertyChanges` batch, so
      observers will be buffered.
       ```javascript
      record.setProperties({ firstName: 'Charles', lastName: 'Jolley' });
      ```
       @method setProperties
      @param {Object} hash the hash of keys and values to set
      @return {Object} The passed in hash
      @public
    */
    setProperties: function (hash) {
      return (0, _emberMetal.setProperties)(this, hash);
    },


    /**
      Begins a grouping of property changes.
       You can use this method to group property changes so that notifications
      will not be sent until the changes are finished. If you plan to make a
      large number of changes to an object at one time, you should call this
      method at the beginning of the changes to begin deferring change
      notifications. When you are done making changes, call
      `endPropertyChanges()` to deliver the deferred change notifications and end
      deferring.
       @method beginPropertyChanges
      @return {Observable}
      @private
    */
    beginPropertyChanges: function () {
      (0, _emberMetal.beginPropertyChanges)();
      return this;
    },


    /**
      Ends a grouping of property changes.
       You can use this method to group property changes so that notifications
      will not be sent until the changes are finished. If you plan to make a
      large number of changes to an object at one time, you should call
      `beginPropertyChanges()` at the beginning of the changes to defer change
      notifications. When you are done making changes, call this method to
      deliver the deferred change notifications and end deferring.
       @method endPropertyChanges
      @return {Observable}
      @private
    */
    endPropertyChanges: function () {
      (0, _emberMetal.endPropertyChanges)();
      return this;
    },


    /**
      Notify the observer system that a property is about to change.
       Sometimes you need to change a value directly or indirectly without
      actually calling `get()` or `set()` on it. In this case, you can use this
      method and `propertyDidChange()` instead. Calling these two methods
      together will notify all observers that the property has potentially
      changed value.
       Note that you must always call `propertyWillChange` and `propertyDidChange`
      as a pair. If you do not, it may get the property change groups out of
      order and cause notifications to be delivered more often than you would
      like.
       @method propertyWillChange
      @param {String} keyName The property key that is about to change.
      @return {Observable}
      @private
    */
    propertyWillChange: function (keyName) {
      (0, _emberMetal.propertyWillChange)(this, keyName);
      return this;
    },


    /**
      Notify the observer system that a property has just changed.
       Sometimes you need to change a value directly or indirectly without
      actually calling `get()` or `set()` on it. In this case, you can use this
      method and `propertyWillChange()` instead. Calling these two methods
      together will notify all observers that the property has potentially
      changed value.
       Note that you must always call `propertyWillChange` and `propertyDidChange`
      as a pair. If you do not, it may get the property change groups out of
      order and cause notifications to be delivered more often than you would
      like.
       @method propertyDidChange
      @param {String} keyName The property key that has just changed.
      @return {Observable}
      @private
    */
    propertyDidChange: function (keyName) {
      (0, _emberMetal.propertyDidChange)(this, keyName);
      return this;
    },


    /**
      Convenience method to call `propertyWillChange` and `propertyDidChange` in
      succession.
       @method notifyPropertyChange
      @param {String} keyName The property key to be notified about.
      @return {Observable}
      @public
    */
    notifyPropertyChange: function (keyName) {
      this.propertyWillChange(keyName);
      this.propertyDidChange(keyName);
      return this;
    },


    /**
      Adds an observer on a property.
       This is the core method used to register an observer for a property.
       Once you call this method, any time the key's value is set, your observer
      will be notified. Note that the observers are triggered any time the
      value is set, regardless of whether it has actually changed. Your
      observer should be prepared to handle that.
       ### Observer Methods
       Observer methods have the following signature:
       ```app/components/my-component.js
      import Component from '@ember/component';
       export default Component.extend({
        init() {
          this._super(...arguments);
          this.addObserver('foo', this, 'fooDidChange');
        },
         fooDidChange(sender, key, value, rev) {
          // your code
        }
      });
      ```
       The `sender` is the object that changed. The `key` is the property that
      changes. The `value` property is currently reserved and unused. The `rev`
      is the last property revision of the object when it changed, which you can
      use to detect if the key value has really changed or not.
       Usually you will not need the value or revision parameters at
      the end. In this case, it is common to write observer methods that take
      only a sender and key value as parameters or, if you aren't interested in
      any of these values, to write an observer that has no parameters at all.
       @method addObserver
      @param {String} key The key to observe
      @param {Object} target The target object to invoke
      @param {String|Function} method The method to invoke
      @public
    */
    addObserver: function (key, target, method) {
      (0, _emberMetal.addObserver)(this, key, target, method);
    },


    /**
      Remove an observer you have previously registered on this object. Pass
      the same key, target, and method you passed to `addObserver()` and your
      target will no longer receive notifications.
       @method removeObserver
      @param {String} key The key to observe
      @param {Object} target The target object to invoke
      @param {String|Function} method The method to invoke
      @public
    */
    removeObserver: function (key, target, method) {
      (0, _emberMetal.removeObserver)(this, key, target, method);
    },


    /**
      Returns `true` if the object currently has observers registered for a
      particular key. You can use this method to potentially defer performing
      an expensive action until someone begins observing a particular property
      on the object.
       @method hasObserverFor
      @param {String} key Key to check
      @return {Boolean}
      @private
    */
    hasObserverFor: function (key) {
      return (0, _emberMetal.hasListeners)(this, key + ':change');
    },


    /**
      Retrieves the value of a property, or a default value in the case that the
      property returns `undefined`.
       ```javascript
      person.getWithDefault('lastName', 'Doe');
      ```
       @method getWithDefault
      @param {String} keyName The name of the property to retrieve
      @param {Object} defaultValue The value to return if the property value is undefined
      @return {Object} The property value or the defaultValue.
      @public
    */
    getWithDefault: function (keyName, defaultValue) {
      return (0, _emberMetal.getWithDefault)(this, keyName, defaultValue);
    },


    /**
      Set the value of a property to the current value plus some amount.
       ```javascript
      person.incrementProperty('age');
      team.incrementProperty('score', 2);
      ```
       @method incrementProperty
      @param {String} keyName The name of the property to increment
      @param {Number} increment The amount to increment by. Defaults to 1
      @return {Number} The new property value
      @public
    */
    incrementProperty: function (keyName, increment) {
      if ((0, _emberMetal.isNone)(increment)) {
        increment = 1;
      }
      (true && !(!isNaN(parseFloat(increment)) && isFinite(increment)) && (0, _emberDebug.assert)('Must pass a numeric value to incrementProperty', !isNaN(parseFloat(increment)) && isFinite(increment)));

      return (0, _emberMetal.set)(this, keyName, (parseFloat((0, _emberMetal.get)(this, keyName)) || 0) + increment);
    },


    /**
      Set the value of a property to the current value minus some amount.
       ```javascript
      player.decrementProperty('lives');
      orc.decrementProperty('health', 5);
      ```
       @method decrementProperty
      @param {String} keyName The name of the property to decrement
      @param {Number} decrement The amount to decrement by. Defaults to 1
      @return {Number} The new property value
      @public
    */
    decrementProperty: function (keyName, decrement) {
      if ((0, _emberMetal.isNone)(decrement)) {
        decrement = 1;
      }
      (true && !(!isNaN(parseFloat(decrement)) && isFinite(decrement)) && (0, _emberDebug.assert)('Must pass a numeric value to decrementProperty', !isNaN(parseFloat(decrement)) && isFinite(decrement)));

      return (0, _emberMetal.set)(this, keyName, ((0, _emberMetal.get)(this, keyName) || 0) - decrement);
    },


    /**
      Set the value of a boolean property to the opposite of its
      current value.
       ```javascript
      starship.toggleProperty('warpDriveEngaged');
      ```
       @method toggleProperty
      @param {String} keyName The name of the property to toggle
      @return {Boolean} The new property value
      @public
    */
    toggleProperty: function (keyName) {
      return (0, _emberMetal.set)(this, keyName, !(0, _emberMetal.get)(this, keyName));
    },


    /**
      Returns the cached value of a computed property, if it exists.
      This allows you to inspect the value of a computed property
      without accidentally invoking it if it is intended to be
      generated lazily.
       @method cacheFor
      @param {String} keyName
      @return {Object} The cached value of the computed property, if any
      @public
    */
    cacheFor: function (keyName) {
      return (0, _emberMetal.cacheFor)(this, keyName);
    },


    // intended for debugging purposes
    observersForKey: function (keyName) {
      return (0, _emberMetal.observersFor)(this, keyName);
    }
  });
});
enifed('ember-runtime/mixins/promise_proxy', ['exports', 'ember-metal', 'ember-debug', 'ember-runtime/computed/computed_macros'], function (exports, _emberMetal, _emberDebug, _computed_macros) {
  'use strict';

  /**
    @module @ember/object
  */

  function tap(proxy, promise) {
    (0, _emberMetal.setProperties)(proxy, {
      isFulfilled: false,
      isRejected: false
    });

    return promise.then(function (value) {
      if (!proxy.isDestroyed && !proxy.isDestroying) {
        (0, _emberMetal.setProperties)(proxy, {
          content: value,
          isFulfilled: true
        });
      }
      return value;
    }, function (reason) {
      if (!proxy.isDestroyed && !proxy.isDestroying) {
        (0, _emberMetal.setProperties)(proxy, {
          reason: reason,
          isRejected: true
        });
      }
      throw reason;
    }, 'Ember: PromiseProxy');
  }

  /**
    A low level mixin making ObjectProxy promise-aware.
  
    ```javascript
    let ObjectPromiseProxy = Ember.ObjectProxy.extend(Ember.PromiseProxyMixin);
  
    let proxy = ObjectPromiseProxy.create({
      promise: Ember.RSVP.resolve($.getJSON('/some/remote/data.json'))
    });
  
    proxy.then(function(json){
       // the json
    }, function(reason) {
       // the reason why you have no json
    });
    ```
  
    the proxy has bindable attributes which
    track the promises life cycle
  
    ```javascript
    proxy.get('isPending')   //=> true
    proxy.get('isSettled')  //=> false
    proxy.get('isRejected')  //=> false
    proxy.get('isFulfilled') //=> false
    ```
  
    When the $.getJSON completes, and the promise is fulfilled
    with json, the life cycle attributes will update accordingly.
    Note that $.getJSON doesn't return an ECMA specified promise,
    it is useful to wrap this with an `RSVP.resolve` so that it behaves
    as a spec compliant promise.
  
    ```javascript
    proxy.get('isPending')   //=> false
    proxy.get('isSettled')   //=> true
    proxy.get('isRejected')  //=> false
    proxy.get('isFulfilled') //=> true
    ```
  
    As the proxy is an ObjectProxy, and the json now its content,
    all the json properties will be available directly from the proxy.
  
    ```javascript
    // Assuming the following json:
    {
      firstName: 'Stefan',
      lastName: 'Penner'
    }
  
    // both properties will accessible on the proxy
    proxy.get('firstName') //=> 'Stefan'
    proxy.get('lastName')  //=> 'Penner'
    ```
  
    @class PromiseProxyMixin
    @public
  */
  exports.default = _emberMetal.Mixin.create({
    /**
      If the proxied promise is rejected this will contain the reason
      provided.
       @property reason
      @default null
      @public
    */
    reason: null,

    /**
      Once the proxied promise has settled this will become `false`.
       @property isPending
      @default true
      @public
    */
    isPending: (0, _computed_macros.not)('isSettled').readOnly(),

    /**
      Once the proxied promise has settled this will become `true`.
       @property isSettled
      @default false
      @public
    */
    isSettled: (0, _computed_macros.or)('isRejected', 'isFulfilled').readOnly(),

    /**
      Will become `true` if the proxied promise is rejected.
       @property isRejected
      @default false
      @public
    */
    isRejected: false,

    /**
      Will become `true` if the proxied promise is fulfilled.
       @property isFulfilled
      @default false
      @public
    */
    isFulfilled: false,

    /**
      The promise whose fulfillment value is being proxied by this object.
       This property must be specified upon creation, and should not be
      changed once created.
       Example:
       ```javascript
      Ember.ObjectProxy.extend(Ember.PromiseProxyMixin).create({
        promise: <thenable>
      });
      ```
       @property promise
      @public
    */
    promise: (0, _emberMetal.computed)({
      get: function () {
        throw new _emberDebug.Error('PromiseProxy\'s promise must be set');
      },
      set: function (key, promise) {
        return tap(this, promise);
      }
    }),

    /**
      An alias to the proxied promise's `then`.
       See RSVP.Promise.then.
       @method then
      @param {Function} callback
      @return {RSVP.Promise}
      @public
    */
    then: promiseAlias('then'),

    /**
      An alias to the proxied promise's `catch`.
       See RSVP.Promise.catch.
       @method catch
      @param {Function} callback
      @return {RSVP.Promise}
      @since 1.3.0
      @public
    */
    'catch': promiseAlias('catch'),

    /**
      An alias to the proxied promise's `finally`.
       See RSVP.Promise.finally.
       @method finally
      @param {Function} callback
      @return {RSVP.Promise}
      @since 1.3.0
      @public
    */
    'finally': promiseAlias('finally')

  });


  function promiseAlias(name) {
    return function () {
      var promise = (0, _emberMetal.get)(this, 'promise');
      return promise[name].apply(promise, arguments);
    };
  }
});
enifed('ember-runtime/mixins/registry_proxy', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  exports.buildFakeRegistryWithDeprecations = buildFakeRegistryWithDeprecations;
  exports.default = _emberMetal.Mixin.create({
    __registry__: null,

    /**
     Given a fullName return the corresponding factory.
      @public
     @method resolveRegistration
     @param {String} fullName
     @return {Function} fullName's factory
     */
    resolveRegistration: registryAlias('resolve'),

    /**
      Registers a factory that can be used for dependency injection (with
      `inject`) or for service lookup. Each factory is registered with
      a full name including two parts: `type:name`.
       A simple example:
       ```javascript
      let App = Ember.Application.create();
       App.Orange = Ember.Object.extend();
      App.register('fruit:favorite', App.Orange);
      ```
       Ember will resolve factories from the `App` namespace automatically.
      For example `App.CarsController` will be discovered and returned if
      an application requests `controller:cars`.
       An example of registering a controller with a non-standard name:
       ```javascript
      let App = Ember.Application.create();
      let Session = Ember.Controller.extend();
       App.register('controller:session', Session);
       // The Session controller can now be treated like a normal controller,
      // despite its non-standard name.
      App.ApplicationController = Ember.Controller.extend({
        needs: ['session']
      });
      ```
       Registered factories are **instantiated** by having `create`
      called on them. Additionally they are **singletons**, each time
      they are looked up they return the same instance.
       Some examples modifying that default behavior:
       ```javascript
      let App = Ember.Application.create();
       App.Person = Ember.Object.extend();
      App.Orange = Ember.Object.extend();
      App.Email = Ember.Object.extend();
      App.session = Ember.Object.create();
       App.register('model:user', App.Person, { singleton: false });
      App.register('fruit:favorite', App.Orange);
      App.register('communication:main', App.Email, { singleton: false });
      App.register('session', App.session, { instantiate: false });
      ```
       @method register
      @param  fullName {String} type:name (e.g., 'model:user')
      @param  factory {Function} (e.g., App.Person)
      @param  options {Object} (optional) disable instantiation or singleton usage
      @public
     */
    register: registryAlias('register'),

    /**
     Unregister a factory.
      ```javascript
     let App = Ember.Application.create();
     let User = Ember.Object.extend();
     App.register('model:user', User);
      App.resolveRegistration('model:user').create() instanceof User //=> true
      App.unregister('model:user')
     App.resolveRegistration('model:user') === undefined //=> true
     ```
      @public
     @method unregister
     @param {String} fullName
     */
    unregister: registryAlias('unregister'),

    /**
     Check if a factory is registered.
      @public
     @method hasRegistration
     @param {String} fullName
     @return {Boolean}
     */
    hasRegistration: registryAlias('has'),

    /**
     Return a specific registered option for a particular factory.
      @public
     @method registeredOption
     @param  {String} fullName
     @param  {String} optionName
     @return {Object} options
     */
    registeredOption: registryAlias('getOption'),

    /**
     Register options for a particular factory.
      @public
     @method registerOptions
     @param {String} fullName
     @param {Object} options
     */
    registerOptions: registryAlias('options'),

    /**
     Return registered options for a particular factory.
      @public
     @method registeredOptions
     @param  {String} fullName
     @return {Object} options
     */
    registeredOptions: registryAlias('getOptions'),

    /**
     Allow registering options for all factories of a type.
      ```javascript
     let App = Ember.Application.create();
     let appInstance = App.buildInstance();
      // if all of type `connection` must not be singletons
     appInstance.registerOptionsForType('connection', { singleton: false });
      appInstance.register('connection:twitter', TwitterConnection);
     appInstance.register('connection:facebook', FacebookConnection);
      let twitter = appInstance.lookup('connection:twitter');
     let twitter2 = appInstance.lookup('connection:twitter');
      twitter === twitter2; // => false
      let facebook = appInstance.lookup('connection:facebook');
     let facebook2 = appInstance.lookup('connection:facebook');
      facebook === facebook2; // => false
     ```
      @public
     @method registerOptionsForType
     @param {String} type
     @param {Object} options
     */
    registerOptionsForType: registryAlias('optionsForType'),

    /**
     Return the registered options for all factories of a type.
      @public
     @method registeredOptionsForType
     @param {String} type
     @return {Object} options
     */
    registeredOptionsForType: registryAlias('getOptionsForType'),

    /**
      Define a dependency injection onto a specific factory or all factories
      of a type.
       When Ember instantiates a controller, view, or other framework component
      it can attach a dependency to that component. This is often used to
      provide services to a set of framework components.
       An example of providing a session object to all controllers:
       ```javascript
      let App = Ember.Application.create();
      let Session = Ember.Object.extend({ isAuthenticated: false });
       // A factory must be registered before it can be injected
      App.register('session:main', Session);
       // Inject 'session:main' onto all factories of the type 'controller'
      // with the name 'session'
      App.inject('controller', 'session', 'session:main');
       App.IndexController = Ember.Controller.extend({
        isLoggedIn: Ember.computed.alias('session.isAuthenticated')
      });
      ```
       Injections can also be performed on specific factories.
       ```javascript
      App.inject(<full_name or type>, <property name>, <full_name>)
      App.inject('route', 'source', 'source:main')
      App.inject('route:application', 'email', 'model:email')
      ```
       It is important to note that injections can only be performed on
      classes that are instantiated by Ember itself. Instantiating a class
      directly (via `create` or `new`) bypasses the dependency injection
      system.
       @public
      @method inject
      @param  factoryNameOrType {String}
      @param  property {String}
      @param  injectionName {String}
    **/
    inject: registryAlias('injection')
  });


  function registryAlias(name) {
    return function () {
      var _registry__;

      return (_registry__ = this.__registry__)[name].apply(_registry__, arguments);
    };
  }

  function buildFakeRegistryWithDeprecations(instance, typeForMessage) {
    var fakeRegistry = {};
    var registryProps = {
      resolve: 'resolveRegistration',
      register: 'register',
      unregister: 'unregister',
      has: 'hasRegistration',
      option: 'registerOption',
      options: 'registerOptions',
      getOptions: 'registeredOptions',
      optionsForType: 'registerOptionsForType',
      getOptionsForType: 'registeredOptionsForType',
      injection: 'inject'
    };

    for (var deprecatedProperty in registryProps) {
      fakeRegistry[deprecatedProperty] = buildFakeRegistryFunction(instance, typeForMessage, deprecatedProperty, registryProps[deprecatedProperty]);
    }

    return fakeRegistry;
  }

  function buildFakeRegistryFunction(instance, typeForMessage, deprecatedProperty, nonDeprecatedProperty) {
    return function () {
      (true && !(false) && (0, _emberDebug.deprecate)('Using `' + typeForMessage + '.registry.' + deprecatedProperty + '` is deprecated. Please use `' + typeForMessage + '.' + nonDeprecatedProperty + '` instead.', false, {
        id: 'ember-application.app-instance-registry',
        until: '3.0.0',
        url: 'https://emberjs.com/deprecations/v2.x/#toc_ember-application-registry-ember-applicationinstance-registry'
      }));

      return instance[nonDeprecatedProperty].apply(instance, arguments);
    };
  }
});
enifed('ember-runtime/mixins/target_action_support', ['exports', 'ember-environment', 'ember-metal', 'ember-debug'], function (exports, _emberEnvironment, _emberMetal, _emberDebug) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({
    target: null,
    action: null,
    actionContext: null,

    actionContextObject: (0, _emberMetal.computed)('actionContext', function () {
      var actionContext = (0, _emberMetal.get)(this, 'actionContext');

      if (typeof actionContext === 'string') {
        var value = (0, _emberMetal.get)(this, actionContext);
        if (value === undefined) {
          value = (0, _emberMetal.get)(_emberEnvironment.context.lookup, actionContext);
        }
        return value;
      } else {
        return actionContext;
      }
    }),

    /**
    Send an `action` with an `actionContext` to a `target`. The action, actionContext
    and target will be retrieved from properties of the object. For example:
     ```javascript
    App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {
      target: Ember.computed.alias('controller'),
      action: 'save',
      actionContext: Ember.computed.alias('context'),
      click() {
        this.triggerAction(); // Sends the `save` action, along with the current context
                              // to the current controller
      }
    });
    ```
     The `target`, `action`, and `actionContext` can be provided as properties of
    an optional object argument to `triggerAction` as well.
     ```javascript
    App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {
      click() {
        this.triggerAction({
          action: 'save',
          target: this.get('controller'),
          actionContext: this.get('context')
        }); // Sends the `save` action, along with the current context
            // to the current controller
      }
    });
    ```
     The `actionContext` defaults to the object you are mixing `TargetActionSupport` into.
    But `target` and `action` must be specified either as properties or with the argument
    to `triggerAction`, or a combination:
     ```javascript
    App.SaveButtonView = Ember.View.extend(Ember.TargetActionSupport, {
      target: Ember.computed.alias('controller'),
      click() {
        this.triggerAction({
          action: 'save'
        }); // Sends the `save` action, along with a reference to `this`,
            // to the current controller
      }
    });
    ```
     @method triggerAction
    @param opts {Object} (optional, with the optional keys action, target and/or actionContext)
    @return {Boolean} true if the action was sent successfully and did not return false
    @private
    */
    triggerAction: function () {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var action = opts.action,
          target = opts.target,
          actionContext = opts.actionContext;

      action = action || (0, _emberMetal.get)(this, 'action');
      target = target || getTarget(this);

      if (actionContext === undefined) {
        actionContext = (0, _emberMetal.get)(this, 'actionContextObject') || this;
      }

      if (target && action) {
        var ret = void 0;

        if (target.send) {
          var _target;

          ret = (_target = target).send.apply(_target, [action].concat(actionContext));
        } else {
          var _target2;

          (true && !(typeof target[action] === 'function') && (0, _emberDebug.assert)('The action \'' + action + '\' did not exist on ' + target, typeof target[action] === 'function'));

          ret = (_target2 = target)[action].apply(_target2, [].concat(actionContext));
        }

        if (ret !== false) {
          return true;
        }
      }

      return false;
    }
  });


  function getTarget(instance) {
    // TODO: Deprecate specifying `targetObject`
    var target = (0, _emberMetal.get)(instance, 'targetObject');

    // if a `targetObject` CP was provided, use it
    if (target) {
      return target;
    }

    // if _targetObject use it
    if (instance._targetObject) {
      return instance._targetObject;
    }

    target = (0, _emberMetal.get)(instance, 'target');
    if (target) {
      if (typeof target === 'string') {
        var value = (0, _emberMetal.get)(instance, target);
        if (value === undefined) {
          value = (0, _emberMetal.get)(_emberEnvironment.context.lookup, target);
        }

        return value;
      } else {
        return target;
      }
    }

    return null;
  }
});
enifed("ember-runtime/string_registry", ["exports"], function (exports) {
  "use strict";

  exports.setStrings = setStrings;
  exports.getStrings = getStrings;
  exports.get = get;
  // STATE within a module is frowned upon, this exists
  // to support Ember.STRINGS but shield ember internals from this legacy global
  // API.
  var STRINGS = {};

  function setStrings(strings) {
    STRINGS = strings;
  }

  function getStrings() {
    return STRINGS;
  }

  function get(name) {
    return STRINGS[name];
  }
});
enifed('ember-runtime/system/application', ['exports', 'ember-runtime/system/namespace'], function (exports, _namespace) {
  'use strict';

  exports.default = _namespace.default.extend();
});
enifed('ember-runtime/system/array_proxy', ['exports', 'ember-metal', 'ember-runtime/utils', 'ember-runtime/system/object', 'ember-runtime/mixins/mutable_array', 'ember-runtime/mixins/enumerable', 'ember-runtime/mixins/array', 'ember-debug'], function (exports, _emberMetal, _utils, _object, _mutable_array, _enumerable, _array, _emberDebug) {
  'use strict';

  /**
  @module @ember/array
  */

  var OUT_OF_RANGE_EXCEPTION = 'Index out of range';
  var EMPTY = [];

  function K() {
    return this;
  }

  /**
    An ArrayProxy wraps any other object that implements `Ember.Array` and/or
    `Ember.MutableArray,` forwarding all requests. This makes it very useful for
    a number of binding use cases or other cases where being able to swap
    out the underlying array is useful.
  
    A simple example of usage:
  
    ```javascript
    let pets = ['dog', 'cat', 'fish'];
    let ap = Ember.ArrayProxy.create({ content: Ember.A(pets) });
  
    ap.get('firstObject');                        // 'dog'
    ap.set('content', ['amoeba', 'paramecium']);
    ap.get('firstObject');                        // 'amoeba'
    ```
  
    This class can also be useful as a layer to transform the contents of
    an array, as they are accessed. This can be done by overriding
    `objectAtContent`:
  
    ```javascript
    let pets = ['dog', 'cat', 'fish'];
    let ap = Ember.ArrayProxy.create({
        content: Ember.A(pets),
        objectAtContent: function(idx) {
            return this.get('content').objectAt(idx).toUpperCase();
        }
    });
  
    ap.get('firstObject'); // . 'DOG'
    ```
  
    @class ArrayProxy
    @extends EmberObject
    @uses MutableArray
    @public
  */
  exports.default = _object.default.extend(_mutable_array.default, {

    /**
      The content array. Must be an object that implements `Ember.Array` and/or
      `Ember.MutableArray.`
       @property content
      @type EmberArray
      @private
    */
    content: null,

    /**
     The array that the proxy pretends to be. In the default `ArrayProxy`
     implementation, this and `content` are the same. Subclasses of `ArrayProxy`
     can override this property to provide things like sorting and filtering.
      @property arrangedContent
     @private
    */
    arrangedContent: (0, _emberMetal.alias)('content'),

    /**
      Should actually retrieve the object at the specified index from the
      content. You can override this method in subclasses to transform the
      content item to something new.
       This method will only be called if content is non-`null`.
       @method objectAtContent
      @param {Number} idx The index to retrieve.
      @return {Object} the value or undefined if none found
      @public
    */
    objectAtContent: function (idx) {
      return (0, _array.objectAt)((0, _emberMetal.get)(this, 'arrangedContent'), idx);
    },


    /**
      Should actually replace the specified objects on the content array.
      You can override this method in subclasses to transform the content item
      into something new.
       This method will only be called if content is non-`null`.
       @method replaceContent
      @param {Number} idx The starting index
      @param {Number} amt The number of items to remove from the content.
      @param {EmberArray} objects Optional array of objects to insert or null if no
        objects.
      @return {void}
      @private
    */
    replaceContent: function (idx, amt, objects) {
      (0, _emberMetal.get)(this, 'content').replace(idx, amt, objects);
    },


    /**
      Invoked when the content property is about to change. Notifies observers that the
      entire array content will change.
       @private
      @method _contentWillChange
    */
    _contentWillChange: (0, _emberMetal._beforeObserver)('content', function () {
      this._teardownContent();
    }),

    _teardownContent: function () {
      var content = (0, _emberMetal.get)(this, 'content');

      if (content) {
        (0, _array.removeArrayObserver)(content, this, {
          willChange: 'contentArrayWillChange',
          didChange: 'contentArrayDidChange'
        });
      }
    },


    /**
      Override to implement content array `willChange` observer.
       @method contentArrayWillChange
       @param {EmberArray} contentArray the content array
      @param {Number} start starting index of the change
      @param {Number} removeCount count of items removed
      @param {Number} addCount count of items added
      @private
    */
    contentArrayWillChange: K,
    /**
      Override to implement content array `didChange` observer.
       @method contentArrayDidChange
       @param {EmberArray} contentArray the content array
      @param {Number} start starting index of the change
      @param {Number} removeCount count of items removed
      @param {Number} addCount count of items added
      @private
    */
    contentArrayDidChange: K,

    /**
      Invoked when the content property changes. Notifies observers that the
      entire array content has changed.
       @private
      @method _contentDidChange
    */
    _contentDidChange: (0, _emberMetal.observer)('content', function () {
      var content = (0, _emberMetal.get)(this, 'content');

      (true && !(content !== this) && (0, _emberDebug.assert)('Can\'t set ArrayProxy\'s content to itself', content !== this));


      this._setupContent();
    }),

    _setupContent: function () {
      var content = (0, _emberMetal.get)(this, 'content');

      if (content) {
        (true && !((0, _utils.isArray)(content) || content.isDestroyed) && (0, _emberDebug.assert)('ArrayProxy expects an Array or Ember.ArrayProxy, but you passed ' + typeof content, (0, _utils.isArray)(content) || content.isDestroyed));


        (0, _array.addArrayObserver)(content, this, {
          willChange: 'contentArrayWillChange',
          didChange: 'contentArrayDidChange'
        });
      }
    },


    _arrangedContentWillChange: (0, _emberMetal._beforeObserver)('arrangedContent', function () {
      var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');
      var len = arrangedContent ? (0, _emberMetal.get)(arrangedContent, 'length') : 0;

      this.arrangedContentArrayWillChange(this, 0, len, undefined);
      this.arrangedContentWillChange(this);

      this._teardownArrangedContent(arrangedContent);
    }),

    _arrangedContentDidChange: (0, _emberMetal.observer)('arrangedContent', function () {
      var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');
      var len = arrangedContent ? (0, _emberMetal.get)(arrangedContent, 'length') : 0;

      (true && !(arrangedContent !== this) && (0, _emberDebug.assert)('Can\'t set ArrayProxy\'s content to itself', arrangedContent !== this));


      this._setupArrangedContent();

      this.arrangedContentDidChange(this);
      this.arrangedContentArrayDidChange(this, 0, undefined, len);
    }),

    _setupArrangedContent: function () {
      var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');

      if (arrangedContent) {
        (true && !((0, _utils.isArray)(arrangedContent) || arrangedContent.isDestroyed) && (0, _emberDebug.assert)('ArrayProxy expects an Array or Ember.ArrayProxy, but you passed ' + typeof arrangedContent, (0, _utils.isArray)(arrangedContent) || arrangedContent.isDestroyed));


        (0, _array.addArrayObserver)(arrangedContent, this, {
          willChange: 'arrangedContentArrayWillChange',
          didChange: 'arrangedContentArrayDidChange'
        });
      }
    },
    _teardownArrangedContent: function () {
      var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');

      if (arrangedContent) {
        (0, _array.removeArrayObserver)(arrangedContent, this, {
          willChange: 'arrangedContentArrayWillChange',
          didChange: 'arrangedContentArrayDidChange'
        });
      }
    },


    arrangedContentWillChange: K,
    arrangedContentDidChange: K,

    objectAt: function (idx) {
      return (0, _emberMetal.get)(this, 'content') && this.objectAtContent(idx);
    },


    length: (0, _emberMetal.computed)(function () {
      var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');
      return arrangedContent ? (0, _emberMetal.get)(arrangedContent, 'length') : 0;
      // No dependencies since Enumerable notifies length of change
    }),

    _replace: function (idx, amt, objects) {
      var content = (0, _emberMetal.get)(this, 'content');
      (true && !(content) && (0, _emberDebug.assert)('The content property of ' + this.constructor + ' should be set before modifying it', content));

      if (content) {
        this.replaceContent(idx, amt, objects);
      }

      return this;
    },
    replace: function () {
      if ((0, _emberMetal.get)(this, 'arrangedContent') === (0, _emberMetal.get)(this, 'content')) {
        this._replace.apply(this, arguments);
      } else {
        throw new _emberDebug.Error('Using replace on an arranged ArrayProxy is not allowed.');
      }
    },
    _insertAt: function (idx, object) {
      if (idx > (0, _emberMetal.get)(this, 'content.length')) {
        throw new _emberDebug.Error(OUT_OF_RANGE_EXCEPTION);
      }

      this._replace(idx, 0, [object]);
      return this;
    },
    insertAt: function (idx, object) {
      if ((0, _emberMetal.get)(this, 'arrangedContent') === (0, _emberMetal.get)(this, 'content')) {
        return this._insertAt(idx, object);
      } else {
        throw new _emberDebug.Error('Using insertAt on an arranged ArrayProxy is not allowed.');
      }
    },
    removeAt: function (start, len) {
      if ('number' === typeof start) {
        var content = (0, _emberMetal.get)(this, 'content');
        var arrangedContent = (0, _emberMetal.get)(this, 'arrangedContent');
        var indices = [];

        if (start < 0 || start >= (0, _emberMetal.get)(this, 'length')) {
          throw new _emberDebug.Error(OUT_OF_RANGE_EXCEPTION);
        }

        if (len === undefined) {
          len = 1;
        }

        // Get a list of indices in original content to remove
        for (var i = start; i < start + len; i++) {
          // Use arrangedContent here so we avoid confusion with objects transformed by objectAtContent
          indices.push(content.indexOf((0, _array.objectAt)(arrangedContent, i)));
        }

        // Replace in reverse order since indices will change
        indices.sort(function (a, b) {
          return b - a;
        });

        (0, _emberMetal.beginPropertyChanges)();
        for (var _i = 0; _i < indices.length; _i++) {
          this._replace(indices[_i], 1, EMPTY);
        }
        (0, _emberMetal.endPropertyChanges)();
      }

      return this;
    },
    pushObject: function (obj) {
      this._insertAt((0, _emberMetal.get)(this, 'content.length'), obj);
      return obj;
    },
    pushObjects: function (objects) {
      if (!(_enumerable.default.detect(objects) || (0, _utils.isArray)(objects))) {
        throw new TypeError('Must pass Ember.Enumerable to Ember.MutableArray#pushObjects');
      }
      this._replace((0, _emberMetal.get)(this, 'length'), 0, objects);
      return this;
    },
    setObjects: function (objects) {
      if (objects.length === 0) {
        return this.clear();
      }

      var len = (0, _emberMetal.get)(this, 'length');
      this._replace(0, len, objects);
      return this;
    },
    unshiftObject: function (obj) {
      this._insertAt(0, obj);
      return obj;
    },
    unshiftObjects: function (objects) {
      this._replace(0, 0, objects);
      return this;
    },
    slice: function () {
      var arr = this.toArray();
      return arr.slice.apply(arr, arguments);
    },
    arrangedContentArrayWillChange: function (item, idx, removedCnt, addedCnt) {
      this.arrayContentWillChange(idx, removedCnt, addedCnt);
    },
    arrangedContentArrayDidChange: function (item, idx, removedCnt, addedCnt) {
      this.arrayContentDidChange(idx, removedCnt, addedCnt);
    },
    init: function () {
      this._super.apply(this, arguments);
      this._setupContent();
      this._setupArrangedContent();
    },
    willDestroy: function () {
      this._teardownArrangedContent();
      this._teardownContent();
    }
  });
});
enifed('ember-runtime/system/core_object', ['exports', 'ember-babel', 'ember-utils', 'ember-metal', 'ember-runtime/mixins/action_handler', 'ember-runtime/inject', 'ember-debug', 'ember/features'], function (exports, _emberBabel, _emberUtils, _emberMetal, _action_handler, _inject, _emberDebug, _features) {
  'use strict';

  exports.POST_INIT = undefined;

  var _Mixin$create, _ClassMixinProps;

  var schedule = _emberMetal.run.schedule;
  var applyMixin = _emberMetal.Mixin._apply;
  var finishPartial = _emberMetal.Mixin.finishPartial;
  var reopen = _emberMetal.Mixin.prototype.reopen;

  var POST_INIT = exports.POST_INIT = (0, _emberUtils.symbol)('POST_INIT');

  function makeCtor() {
    // Note: avoid accessing any properties on the object since it makes the
    // method a lot faster. This is glue code so we want it to be as fast as
    // possible.

    var wasApplied = false;
    var initProperties = void 0,
        initFactory = void 0;

    var Class = function () {
      function Class() {
        (0, _emberBabel.classCallCheck)(this, Class);

        if (!wasApplied) {
          Class.proto(); // prepare prototype...
        }

        if (arguments.length > 0) {
          initProperties = [arguments[0]];
        }

        this.__defineNonEnumerable(_emberUtils.GUID_KEY_PROPERTY);
        var m = (0, _emberMetal.meta)(this);
        var proto = m.proto;
        m.proto = this;

        if (initFactory) {
          m.factory = initFactory;
          initFactory = null;
        }
        if (initProperties) {
          // capture locally so we can clear the closed over variable
          var props = initProperties;
          initProperties = null;

          var concatenatedProperties = this.concatenatedProperties;
          var mergedProperties = this.mergedProperties;
          var hasConcatenatedProps = concatenatedProperties && concatenatedProperties.length > 0;
          var hasMergedProps = mergedProperties && mergedProperties.length > 0;

          for (var i = 0; i < props.length; i++) {
            var properties = props[i];

            (true && !(typeof properties === 'object' || properties === undefined) && (0, _emberDebug.assert)('Ember.Object.create only accepts objects.', typeof properties === 'object' || properties === undefined));
            (true && !(!(properties instanceof _emberMetal.Mixin)) && (0, _emberDebug.assert)('Ember.Object.create no longer supports mixing in other ' + 'definitions, use .extend & .create separately instead.', !(properties instanceof _emberMetal.Mixin)));


            if (!properties) {
              continue;
            }

            var keyNames = Object.keys(properties);

            for (var j = 0; j < keyNames.length; j++) {
              var keyName = keyNames[j];
              var value = properties[keyName];

              if ((0, _emberMetal.detectBinding)(keyName)) {
                m.writeBindings(keyName, value);
              }

              (true && !(!(value instanceof _emberMetal.ComputedProperty)) && (0, _emberDebug.assert)('Ember.Object.create no longer supports defining computed ' + 'properties. Define computed properties using extend() or reopen() ' + 'before calling create().', !(value instanceof _emberMetal.ComputedProperty)));
              (true && !(!(typeof value === 'function' && value.toString().indexOf('._super') !== -1)) && (0, _emberDebug.assert)('Ember.Object.create no longer supports defining methods that call _super.', !(typeof value === 'function' && value.toString().indexOf('._super') !== -1)));
              (true && !(!(keyName === 'actions' && _action_handler.default.detect(this))) && (0, _emberDebug.assert)('`actions` must be provided at extend time, not at create time, ' + 'when Ember.ActionHandler is used (i.e. views, controllers & routes).', !(keyName === 'actions' && _action_handler.default.detect(this))));


              var baseValue = this[keyName];
              var isDescriptor = baseValue !== null && typeof baseValue === 'object' && baseValue.isDescriptor;

              if (hasConcatenatedProps && concatenatedProperties.indexOf(keyName) > -1) {
                if (baseValue) {
                  value = (0, _emberUtils.makeArray)(baseValue).concat(value);
                } else {
                  value = (0, _emberUtils.makeArray)(value);
                }
              }

              if (hasMergedProps && mergedProperties.indexOf(keyName) > -1) {
                value = (0, _emberUtils.assign)({}, baseValue, value);
              }

              if (isDescriptor) {
                baseValue.set(this, keyName, value);
              } else if (typeof this.setUnknownProperty === 'function' && !(keyName in this)) {
                this.setUnknownProperty(keyName, value);
              } else {
                if (_features.MANDATORY_SETTER) {
                  (0, _emberMetal.defineProperty)(this, keyName, null, value); // setup mandatory setter
                } else {
                  this[keyName] = value;
                }
              }
            }
          }
        }

        finishPartial(this, m);

        this.init.apply(this, arguments);

        this[POST_INIT]();

        m.proto = proto;
        (0, _emberMetal.finishChains)(m);
        (0, _emberMetal.sendEvent)(this, 'init', undefined, undefined, undefined, m);
      }

      Class.willReopen = function willReopen() {
        if (wasApplied) {
          Class.PrototypeMixin = _emberMetal.Mixin.create(Class.PrototypeMixin);
        }

        wasApplied = false;
      };

      Class._initProperties = function _initProperties(args) {
        initProperties = args;
      };

      Class._initFactory = function _initFactory(factory) {
        initFactory = factory;
      };

      Class.proto = function proto() {
        var superclass = Class.superclass;
        if (superclass) {
          superclass.proto();
        }

        if (!wasApplied) {
          wasApplied = true;
          Class.PrototypeMixin.applyPartial(Class.prototype);
        }

        return this.prototype;
      };

      return Class;
    }();

    Class.toString = _emberMetal.Mixin.prototype.toString;

    return Class;
  }

  /**
    @class CoreObject
    @public
  */
  var CoreObject = makeCtor();
  CoreObject.toString = function () {
    return 'Ember.CoreObject';
  };
  CoreObject.PrototypeMixin = _emberMetal.Mixin.create((_Mixin$create = {
    reopen: function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      applyMixin(this, args, true);
      return this;
    },
    init: function () {}
  }, _Mixin$create[POST_INIT] = function () {}, _Mixin$create.__defineNonEnumerable = function (property) {
    Object.defineProperty(this, property.name, property.descriptor);
    //this[property.name] = property.descriptor.value;
  }, _Mixin$create.concatenatedProperties = null, _Mixin$create.mergedProperties = null, _Mixin$create.isDestroyed = (0, _emberMetal.descriptor)({
    get: function () {
      return (0, _emberMetal.meta)(this).isSourceDestroyed();
    },
    set: function (value) {
      // prevent setting while applying mixins
      if (value !== null && typeof value === 'object' && value.isDescriptor) {
        return;
      }

      (true && !(false) && (0, _emberDebug.assert)('You cannot set `' + this + '.isDestroyed` directly, please use `.destroy()`.', false));
    }
  }), _Mixin$create.isDestroying = (0, _emberMetal.descriptor)({
    get: function () {
      return (0, _emberMetal.meta)(this).isSourceDestroying();
    },
    set: function (value) {
      // prevent setting while applying mixins
      if (value !== null && typeof value === 'object' && value.isDescriptor) {
        return;
      }

      (true && !(false) && (0, _emberDebug.assert)('You cannot set `' + this + '.isDestroying` directly, please use `.destroy()`.', false));
    }
  }), _Mixin$create.destroy = function () {
    var m = (0, _emberMetal.meta)(this);
    if (m.isSourceDestroying()) {
      return;
    }

    m.setSourceDestroying();

    schedule('actions', this, this.willDestroy);
    schedule('destroy', this, this._scheduledDestroy, m);

    return this;
  }, _Mixin$create.willDestroy = function () {}, _Mixin$create._scheduledDestroy = function (m) {
    if (m.isSourceDestroyed()) {
      return;
    }
    (0, _emberMetal.destroy)(this);
    m.setSourceDestroyed();
  }, _Mixin$create.bind = function (to, from) {
    if (!(from instanceof _emberMetal.Binding)) {
      from = _emberMetal.Binding.from(from);
    }
    from.to(to).connect(this);
    return from;
  }, _Mixin$create.toString = function () {
    var hasToStringExtension = typeof this.toStringExtension === 'function';
    var extension = hasToStringExtension ? ':' + this.toStringExtension() : '';

    var ret = '<' + (this[_emberUtils.NAME_KEY] || (0, _emberMetal.meta)(this).factory || this.constructor.toString()) + ':' + (0, _emberUtils.guidFor)(this) + extension + '>';

    return ret;
  }, _Mixin$create));

  CoreObject.PrototypeMixin.ownerConstructor = CoreObject;

  CoreObject.__super__ = null;

  var ClassMixinProps = (_ClassMixinProps = {

    ClassMixin: _emberMetal.REQUIRED,

    PrototypeMixin: _emberMetal.REQUIRED,

    isClass: true,

    isMethod: false
  }, _ClassMixinProps[_emberUtils.NAME_KEY] = null, _ClassMixinProps[_emberUtils.GUID_KEY] = null, _ClassMixinProps.extend = function () {
    var Class = makeCtor();
    var proto = void 0;
    Class.ClassMixin = _emberMetal.Mixin.create(this.ClassMixin);
    Class.PrototypeMixin = _emberMetal.Mixin.create(this.PrototypeMixin);

    Class.ClassMixin.ownerConstructor = Class;
    Class.PrototypeMixin.ownerConstructor = Class;

    reopen.apply(Class.PrototypeMixin, arguments);

    Class.superclass = this;
    Class.__super__ = this.prototype;

    proto = Class.prototype = Object.create(this.prototype);
    proto.constructor = Class;
    (0, _emberUtils.generateGuid)(proto);
    (0, _emberMetal.meta)(proto).proto = proto; // this will disable observers on prototype

    Class.ClassMixin.apply(Class);
    return Class;
  }, _ClassMixinProps.create = function () {
    var C = this;

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (args.length > 0) {
      this._initProperties(args);
    }
    return new C();
  }, _ClassMixinProps.reopen = function () {
    this.willReopen();
    reopen.apply(this.PrototypeMixin, arguments);
    return this;
  }, _ClassMixinProps.reopenClass = function () {
    reopen.apply(this.ClassMixin, arguments);
    applyMixin(this, arguments, false);
    return this;
  }, _ClassMixinProps.detect = function (obj) {
    if ('function' !== typeof obj) {
      return false;
    }
    while (obj) {
      if (obj === this) {
        return true;
      }
      obj = obj.superclass;
    }
    return false;
  }, _ClassMixinProps.detectInstance = function (obj) {
    return obj instanceof this;
  }, _ClassMixinProps.metaForProperty = function (key) {
    var proto = this.proto();
    var possibleDesc = proto[key];

    (true && !(possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor) && (0, _emberDebug.assert)('metaForProperty() could not find a computed property with key \'' + key + '\'.', possibleDesc !== null && typeof possibleDesc === 'object' && possibleDesc.isDescriptor));

    return possibleDesc._meta || {};
  }, _ClassMixinProps._computedProperties = (0, _emberMetal.computed)(function () {
    (0, _emberMetal._hasCachedComputedProperties)();
    var proto = this.proto();
    var property = void 0;
    var properties = [];

    for (var name in proto) {
      property = proto[name];

      if (property !== null && typeof property === 'object' && property.isDescriptor) {
        properties.push({
          name: name,
          meta: property._meta
        });
      }
    }
    return properties;
  }).readOnly(), _ClassMixinProps.eachComputedProperty = function (callback, binding) {
    var property = void 0;
    var empty = {};

    var properties = (0, _emberMetal.get)(this, '_computedProperties');

    for (var i = 0; i < properties.length; i++) {
      property = properties[i];
      callback.call(binding || this, property.name, property.meta || empty);
    }
  }, _ClassMixinProps);

  function injectedPropertyAssertion() {
    (true && !((0, _inject.validatePropertyInjections)(this)) && (0, _emberDebug.assert)('Injected properties are invalid', (0, _inject.validatePropertyInjections)(this)));
  }

  if (true) {
    /**
      Provides lookup-time type validation for injected properties.
       @private
      @method _onLookup
    */
    ClassMixinProps._onLookup = injectedPropertyAssertion;
  }

  /**
    Returns a hash of property names and container names that injected
    properties will lookup on the container lazily.
  
    @method _lazyInjections
    @return {Object} Hash of all lazy injected property keys to container names
    @private
  */
  ClassMixinProps._lazyInjections = function () {
    var injections = {};
    var proto = this.proto();
    var key = void 0;
    var desc = void 0;

    for (key in proto) {
      desc = proto[key];
      if (desc instanceof _emberMetal.InjectedProperty) {
        injections[key] = desc.type + ':' + (desc.name || key);
      }
    }

    return injections;
  };

  var ClassMixin = _emberMetal.Mixin.create(ClassMixinProps);

  ClassMixin.ownerConstructor = CoreObject;

  CoreObject.ClassMixin = ClassMixin;

  ClassMixin.apply(CoreObject);
  exports.default = CoreObject;
});
enifed('ember-runtime/system/lazy_load', ['exports', 'ember-environment'], function (exports, _emberEnvironment) {
  'use strict';

  exports._loaded = undefined;
  exports.onLoad = onLoad;
  exports.runLoadHooks = runLoadHooks;


  /**
    @module @ember/application
  */

  var loadHooks = _emberEnvironment.ENV.EMBER_LOAD_HOOKS || {}; /*globals CustomEvent */

  var loaded = {};
  var _loaded = exports._loaded = loaded;

  /**
    Detects when a specific package of Ember (e.g. 'Ember.Application')
    has fully loaded and is available for extension.
  
    The provided `callback` will be called with the `name` passed
    resolved from a string into the object:
  
    ``` javascript
    Ember.onLoad('Ember.Application' function(hbars) {
      hbars.registerHelper(...);
    });
    ```
  
    @method onLoad
    @static
    @for @ember/application
    @param name {String} name of hook
    @param callback {Function} callback to be called
    @private
  */
  function onLoad(name, callback) {
    var object = loaded[name];

    loadHooks[name] = loadHooks[name] || [];
    loadHooks[name].push(callback);

    if (object) {
      callback(object);
    }
  }

  /**
    Called when an Ember.js package (e.g Ember.Application) has finished
    loading. Triggers any callbacks registered for this event.
  
    @method runLoadHooks
    @static
    @for @ember/application
    @param name {String} name of hook
    @param object {Object} object to pass to callbacks
    @private
  */
  function runLoadHooks(name, object) {
    loaded[name] = object;
    var window = _emberEnvironment.environment.window;

    if (window && typeof CustomEvent === 'function') {
      var event = new CustomEvent(name, { detail: object, name: name });
      window.dispatchEvent(event);
    }

    if (loadHooks[name]) {
      loadHooks[name].forEach(function (callback) {
        return callback(object);
      });
    }
  }
});
enifed('ember-runtime/system/namespace', ['exports', 'ember-utils', 'ember-metal', 'ember-environment', 'ember-runtime/system/object'], function (exports, _emberUtils, _emberMetal, _emberEnvironment, _object) {
  'use strict';

  exports.isSearchDisabled = isSearchDisabled;
  exports.setSearchDisabled = setSearchDisabled;


  var searchDisabled = false; // Preloaded into namespaces
  /**
  @module ember
  */
  function isSearchDisabled() {
    return searchDisabled;
  }

  function setSearchDisabled(flag) {
    searchDisabled = !!flag;
  }

  /**
    A Namespace is an object usually used to contain other objects or methods
    such as an application or framework. Create a namespace anytime you want
    to define one of these new containers.
  
    # Example Usage
  
    ```javascript
    MyFramework = Ember.Namespace.create({
      VERSION: '1.0.0'
    });
    ```
  
    @class Namespace
    @namespace Ember
    @extends Ember.Object
    @public
  */
  var Namespace = _object.default.extend({
    isNamespace: true,

    init: function () {
      Namespace.NAMESPACES.push(this);
      Namespace.PROCESSED = false;
    },
    toString: function () {
      var name = (0, _emberMetal.get)(this, 'name') || (0, _emberMetal.get)(this, 'modulePrefix');
      if (name) {
        return name;
      }

      findNamespaces();
      return this[_emberUtils.NAME_KEY];
    },
    nameClasses: function () {
      processNamespace([this.toString()], this, {});
    },
    destroy: function () {
      var namespaces = Namespace.NAMESPACES;
      var toString = this.toString();

      if (toString) {
        _emberEnvironment.context.lookup[toString] = undefined;
        delete Namespace.NAMESPACES_BY_ID[toString];
      }
      namespaces.splice(namespaces.indexOf(this), 1);
      this._super.apply(this, arguments);
    }
  });

  Namespace.reopenClass({
    NAMESPACES: [_emberMetal.default],
    NAMESPACES_BY_ID: {
      Ember: _emberMetal.default
    },
    PROCESSED: false,
    processAll: processAllNamespaces,
    byName: function (name) {
      if (!searchDisabled) {
        processAllNamespaces();
      }

      return NAMESPACES_BY_ID[name];
    }
  });

  var NAMESPACES_BY_ID = Namespace.NAMESPACES_BY_ID;

  var hasOwnProp = {}.hasOwnProperty;

  function processNamespace(paths, root, seen) {
    var idx = paths.length;

    NAMESPACES_BY_ID[paths.join('.')] = root;

    // Loop over all of the keys in the namespace, looking for classes
    for (var key in root) {
      if (!hasOwnProp.call(root, key)) {
        continue;
      }
      var obj = root[key];

      // If we are processing the `Ember` namespace, for example, the
      // `paths` will start with `["Ember"]`. Every iteration through
      // the loop will update the **second** element of this list with
      // the key, so processing `Ember.View` will make the Array
      // `['Ember', 'View']`.
      paths[idx] = key;

      // If we have found an unprocessed class
      if (obj && obj.toString === classToString && !obj[_emberUtils.NAME_KEY]) {
        // Replace the class' `toString` with the dot-separated path
        // and set its `NAME_KEY`
        obj[_emberUtils.NAME_KEY] = paths.join('.');

        // Support nested namespaces
      } else if (obj && obj.isNamespace) {
        // Skip aliased namespaces
        if (seen[(0, _emberUtils.guidFor)(obj)]) {
          continue;
        }
        seen[(0, _emberUtils.guidFor)(obj)] = true;

        // Process the child namespace
        processNamespace(paths, obj, seen);
      }
    }

    paths.length = idx; // cut out last item
  }

  function isUppercase(code) {
    return code >= 65 && // A
    code <= 90; // Z
  }

  function tryIsNamespace(lookup, prop) {
    try {
      var obj = lookup[prop];
      return obj && obj.isNamespace && obj;
    } catch (e) {
      // continue
    }
  }

  function findNamespaces() {
    if (Namespace.PROCESSED) {
      return;
    }
    var lookup = _emberEnvironment.context.lookup;
    var keys = Object.keys(lookup);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // Only process entities that start with uppercase A-Z
      if (!isUppercase(key.charCodeAt(0))) {
        continue;
      }
      var obj = tryIsNamespace(lookup, key);
      if (obj) {
        obj[_emberUtils.NAME_KEY] = key;
      }
    }
  }

  function superClassString(mixin) {
    var superclass = mixin.superclass;
    if (superclass) {
      if (superclass[_emberUtils.NAME_KEY]) {
        return superclass[_emberUtils.NAME_KEY];
      }
      return superClassString(superclass);
    }
  }

  function calculateToString(target) {
    var str = void 0;

    if (!searchDisabled) {
      processAllNamespaces();
      // can also be set by processAllNamespaces
      str = target[_emberUtils.NAME_KEY];
      if (str) {
        return str;
      } else {
        str = superClassString(target);
        str = str ? '(subclass of ' + str + ')' : str;
      }
    }
    if (str) {
      return str;
    } else {
      return '(unknown mixin)';
    }
  }

  function classToString() {
    var name = this[_emberUtils.NAME_KEY];
    if (name) {
      return name;
    }

    return this[_emberUtils.NAME_KEY] = calculateToString(this);
  }

  function processAllNamespaces() {
    var unprocessedNamespaces = !Namespace.PROCESSED;
    var unprocessedMixins = (0, _emberMetal.hasUnprocessedMixins)();

    if (unprocessedNamespaces) {
      findNamespaces();
      Namespace.PROCESSED = true;
    }

    if (unprocessedNamespaces || unprocessedMixins) {
      var namespaces = Namespace.NAMESPACES;
      var namespace = void 0;

      for (var i = 0; i < namespaces.length; i++) {
        namespace = namespaces[i];
        processNamespace([namespace.toString()], namespace, {});
      }

      (0, _emberMetal.clearUnprocessedMixins)();
    }
  }

  _emberMetal.Mixin.prototype.toString = classToString; // ES6TODO: altering imported objects. SBB.

  exports.default = Namespace;
});
enifed('ember-runtime/system/native_array', ['exports', 'ember-metal', 'ember-environment', 'ember-runtime/mixins/array', 'ember-runtime/mixins/mutable_array', 'ember-runtime/mixins/observable', 'ember-runtime/mixins/copyable', 'ember-runtime/mixins/freezable', 'ember-runtime/copy'], function (exports, _emberMetal, _emberEnvironment, _array, _mutable_array, _observable, _copyable, _freezable, _copy) {
  'use strict';

  exports.NativeArray = exports.A = undefined;

  var _NativeArray;

  // Add Ember.Array to Array.prototype. Remove methods with native
  // implementations and supply some more optimized versions of generic methods
  // because they are so common.

  /**
    The NativeArray mixin contains the properties needed to make the native
    Array support Ember.MutableArray and all of its dependent APIs. Unless you
    have `EmberENV.EXTEND_PROTOTYPES` or `EmberENV.EXTEND_PROTOTYPES.Array` set to
    false, this will be applied automatically. Otherwise you can apply the mixin
    at anytime by calling `Ember.NativeArray.apply(Array.prototype)`.
  
    @class Ember.NativeArray
    @uses MutableArray
    @uses Observable
    @uses Ember.Copyable
    @public
  */
  var NativeArray = _emberMetal.Mixin.create(_mutable_array.default, _observable.default, _copyable.default, {
    get: function (key) {
      if ('number' === typeof key) {
        return this[key];
      } else {
        return this._super(key);
      }
    },
    objectAt: function (idx) {
      return this[idx];
    },
    replace: function (idx, amt, objects) {
      if (this.isFrozen) {
        throw _freezable.FROZEN_ERROR;
      }

      // if we replaced exactly the same number of items, then pass only the
      // replaced range. Otherwise, pass the full remaining array length
      // since everything has shifted
      var len = objects ? (0, _emberMetal.get)(objects, 'length') : 0;
      (0, _array.arrayContentWillChange)(this, idx, amt, len);

      if (len === 0) {
        this.splice(idx, amt);
      } else {
        (0, _emberMetal.replace)(this, idx, amt, objects);
      }

      (0, _array.arrayContentDidChange)(this, idx, amt, len);
      return this;
    },
    unknownProperty: function (key, value) {
      var ret = void 0; // = this.reducedProperty(key, value);
      if (value !== undefined && ret === undefined) {
        ret = this[key] = value;
      }
      return ret;
    },


    indexOf: Array.prototype.indexOf,
    lastIndexOf: Array.prototype.lastIndexOf,

    copy: function (deep) {
      if (deep) {
        return this.map(function (item) {
          return (0, _copy.default)(item, true);
        });
      }

      return this.slice();
    }
  });

  // Remove any methods implemented natively so we don't override them
  var ignore = ['length'];
  NativeArray.keys().forEach(function (methodName) {
    if (Array.prototype[methodName]) {
      ignore.push(methodName);
    }
  });

  exports.NativeArray = NativeArray = (_NativeArray = NativeArray).without.apply(_NativeArray, ignore);

  /**
    Creates an `Ember.NativeArray` from an Array like object.
    Does not modify the original object's contents. Ember.A is not needed if
    `EmberENV.EXTEND_PROTOTYPES` is `true` (the default value). However,
    it is recommended that you use Ember.A when creating addons for
    ember or when you can not guarantee that `EmberENV.EXTEND_PROTOTYPES`
    will be `true`.
  
    Example
  
    ```app/components/my-component.js
    import Component from '@ember/component';
  
    export default Component.extend({
      tagName: 'ul',
      classNames: ['pagination'],
  
      init() {
        this._super(...arguments);
  
        if (!this.get('content')) {
          this.set('content', Ember.A());
        }
      }
    });
    ```
  
    @method A
    @static
    @for @ember/array
    @return {EmberArray}
    @public
  */
  var A = void 0;

  if (_emberEnvironment.ENV.EXTEND_PROTOTYPES.Array) {
    NativeArray.apply(Array.prototype);
    exports.A = A = function (arr) {
      return arr || [];
    };
  } else {
    exports.A = A = function (arr) {
      if (!arr) {
        arr = [];
      }
      return _array.default.detect(arr) ? arr : NativeArray.apply(arr);
    };
  }

  _emberMetal.default.A = A;
  exports.A = A;
  exports.NativeArray = NativeArray;
  exports.default = NativeArray;
});
enifed('ember-runtime/system/object', ['exports', 'ember-utils', 'ember-metal', 'ember-runtime/system/core_object', 'ember-runtime/mixins/observable', 'ember-debug'], function (exports, _emberUtils, _emberMetal, _core_object, _observable, _emberDebug) {
  'use strict';

  exports.FrameworkObject = undefined;

  var _CoreObject$extend;

  var OVERRIDE_CONTAINER_KEY = (0, _emberUtils.symbol)('OVERRIDE_CONTAINER_KEY');
  var OVERRIDE_OWNER = (0, _emberUtils.symbol)('OVERRIDE_OWNER');

  /**
    `Ember.Object` is the main base class for all Ember objects. It is a subclass
    of `Ember.CoreObject` with the `Ember.Observable` mixin applied. For details,
    see the documentation for each of these.
  
    @class EmberObject
    @extends CoreObject
    @uses Observable
    @public
  */
  var EmberObject = _core_object.default.extend(_observable.default, (_CoreObject$extend = {
    _debugContainerKey: (0, _emberMetal.descriptor)({
      enumerable: false,
      get: function () {
        if (this[OVERRIDE_CONTAINER_KEY]) {
          return this[OVERRIDE_CONTAINER_KEY];
        }

        var meta = (0, _emberMetal.meta)(this);
        var factory = meta.factory;


        return factory && factory.fullName;
      }
    })

  }, _CoreObject$extend[_emberUtils.OWNER] = (0, _emberMetal.descriptor)({
    enumerable: false,
    get: function () {
      if (this[OVERRIDE_OWNER]) {
        return this[OVERRIDE_OWNER];
      }

      var meta = (0, _emberMetal.meta)(this);
      var factory = meta.factory;


      return factory && factory.owner;
    },
    set: function (value) {
      this[OVERRIDE_OWNER] = value;
    }
  }), _CoreObject$extend));

  EmberObject.toString = function () {
    return 'Ember.Object';
  };

  var FrameworkObject = exports.FrameworkObject = EmberObject;

  if (true) {
    var _EmberObject$extend;

    var INIT_WAS_CALLED = (0, _emberUtils.symbol)('INIT_WAS_CALLED');
    var ASSERT_INIT_WAS_CALLED = (0, _emberUtils.symbol)('ASSERT_INIT_WAS_CALLED');

    exports.FrameworkObject = FrameworkObject = EmberObject.extend((_EmberObject$extend = {
      init: function () {
        this._super.apply(this, arguments);
        this[INIT_WAS_CALLED] = true;
      }
    }, _EmberObject$extend[ASSERT_INIT_WAS_CALLED] = (0, _emberMetal.on)('init', function () {
      (true && !(this[INIT_WAS_CALLED]) && (0, _emberDebug.assert)('You must call `this._super(...arguments);` when overriding `init` on a framework object. Please update ' + this + ' to call `this._super(...arguments);` from `init`.', this[INIT_WAS_CALLED]));
    }), _EmberObject$extend));
  }

  exports.default = EmberObject;
});
enifed('ember-runtime/system/object_proxy', ['exports', 'ember-runtime/system/object', 'ember-runtime/mixins/-proxy'], function (exports, _object, _proxy) {
  'use strict';

  exports.default = _object.default.extend(_proxy.default);
});
enifed('ember-runtime/system/service', ['exports', 'ember-runtime/system/object', 'ember-runtime/inject'], function (exports, _object, _inject) {
  'use strict';

  /**
   @module @ember/service
   @public
   */

  /**
    Creates a property that lazily looks up a service in the container. There
    are no restrictions as to what objects a service can be injected into.
  
    Example:
  
    ```app/routes/application.js
    import Route from '@ember/routing/route';
    import { inject as service } from '@ember/service';
  
    export default Route.extend({
      authManager: service('auth'),
  
      model() {
        return this.get('authManager').findCurrentUser();
      }
    });
    ```
  
    This example will create an `authManager` property on the application route
    that looks up the `auth` service in the container, making it easily
    accessible in the `model` hook.
  
    @method inject
    @static
    @since 1.10.0
    @for @ember/service
    @param {String} name (optional) name of the service to inject, defaults to
           the property's name
    @return {Ember.InjectedProperty} injection descriptor instance
    @public
  */
  (0, _inject.createInjectionHelper)('service');

  /**
    @class Service
  
    @since 1.10.0
    @public
  */
  var Service = _object.default.extend();

  Service.reopenClass({
    isServiceFactory: true
  });

  exports.default = Service;
});
enifed('ember-runtime/system/string', ['exports', 'ember-metal', 'ember-debug', 'ember-utils', 'ember-runtime/utils', 'ember-runtime/string_registry'], function (exports, _emberMetal, _emberDebug, _emberUtils, _utils, _string_registry) {
  'use strict';

  exports.capitalize = exports.underscore = exports.classify = exports.camelize = exports.dasherize = exports.decamelize = exports.w = exports.loc = exports.fmt = undefined;


  var STRING_DASHERIZE_REGEXP = /[ _]/g; /**
                                         @module @ember/string
                                         */


  var STRING_DASHERIZE_CACHE = new _emberMetal.Cache(1000, function (key) {
    return decamelize(key).replace(STRING_DASHERIZE_REGEXP, '-');
  });

  var STRING_CAMELIZE_REGEXP_1 = /(\-|\_|\.|\s)+(.)?/g;
  var STRING_CAMELIZE_REGEXP_2 = /(^|\/)([A-Z])/g;

  var CAMELIZE_CACHE = new _emberMetal.Cache(1000, function (key) {
    return key.replace(STRING_CAMELIZE_REGEXP_1, function (match, separator, chr) {
      return chr ? chr.toUpperCase() : '';
    }).replace(STRING_CAMELIZE_REGEXP_2, function (match, separator, chr) {
      return match.toLowerCase();
    });
  });

  var STRING_CLASSIFY_REGEXP_1 = /^(\-|_)+(.)?/;
  var STRING_CLASSIFY_REGEXP_2 = /(.)(\-|\_|\.|\s)+(.)?/g;
  var STRING_CLASSIFY_REGEXP_3 = /(^|\/|\.)([a-z])/g;

  var CLASSIFY_CACHE = new _emberMetal.Cache(1000, function (str) {
    var replace1 = function (match, separator, chr) {
      return chr ? '_' + chr.toUpperCase() : '';
    };
    var replace2 = function (match, initialChar, separator, chr) {
      return initialChar + (chr ? chr.toUpperCase() : '');
    };
    var parts = str.split('/');
    for (var i = 0; i < parts.length; i++) {
      parts[i] = parts[i].replace(STRING_CLASSIFY_REGEXP_1, replace1).replace(STRING_CLASSIFY_REGEXP_2, replace2);
    }
    return parts.join('/').replace(STRING_CLASSIFY_REGEXP_3, function (match, separator, chr) {
      return match.toUpperCase();
    });
  });

  var STRING_UNDERSCORE_REGEXP_1 = /([a-z\d])([A-Z]+)/g;
  var STRING_UNDERSCORE_REGEXP_2 = /\-|\s+/g;

  var UNDERSCORE_CACHE = new _emberMetal.Cache(1000, function (str) {
    return str.replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2').replace(STRING_UNDERSCORE_REGEXP_2, '_').toLowerCase();
  });

  var STRING_CAPITALIZE_REGEXP = /(^|\/)([a-z\u00C0-\u024F])/g;

  var CAPITALIZE_CACHE = new _emberMetal.Cache(1000, function (str) {
    return str.replace(STRING_CAPITALIZE_REGEXP, function (match, separator, chr) {
      return match.toUpperCase();
    });
  });

  var STRING_DECAMELIZE_REGEXP = /([a-z\d])([A-Z])/g;

  var DECAMELIZE_CACHE = new _emberMetal.Cache(1000, function (str) {
    return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();
  });

  function _fmt(str, formats) {
    var cachedFormats = formats;

    if (!(0, _utils.isArray)(cachedFormats) || arguments.length > 2) {
      cachedFormats = new Array(arguments.length - 1);

      for (var i = 1; i < arguments.length; i++) {
        cachedFormats[i - 1] = arguments[i];
      }
    }

    // first, replace any ORDERED replacements.
    var idx = 0; // the current index for non-numerical replacements
    return str.replace(/%@([0-9]+)?/g, function (s, argIndex) {
      argIndex = argIndex ? parseInt(argIndex, 10) - 1 : idx++;
      s = cachedFormats[argIndex];
      return s === null ? '(null)' : s === undefined ? '' : (0, _emberUtils.inspect)(s);
    });
  }

  function fmt(str, formats) {
    (true && !(false) && (0, _emberDebug.deprecate)('Ember.String.fmt is deprecated, use ES6 template strings instead.', false, { id: 'ember-string-utils.fmt', until: '3.0.0', url: 'http://babeljs.io/docs/learn-es2015/#template-strings' }));

    return _fmt.apply(undefined, arguments);
  }

  function loc(str, formats) {
    if (!(0, _utils.isArray)(formats) || arguments.length > 2) {
      formats = Array.prototype.slice.call(arguments, 1);
    }

    str = (0, _string_registry.get)(str) || str;
    return _fmt(str, formats);
  }

  function w(str) {
    return str.split(/\s+/);
  }

  function decamelize(str) {
    return DECAMELIZE_CACHE.get(str);
  }

  function dasherize(str) {
    return STRING_DASHERIZE_CACHE.get(str);
  }

  function camelize(str) {
    return CAMELIZE_CACHE.get(str);
  }

  function classify(str) {
    return CLASSIFY_CACHE.get(str);
  }

  function underscore(str) {
    return UNDERSCORE_CACHE.get(str);
  }

  function capitalize(str) {
    return CAPITALIZE_CACHE.get(str);
  }

  /**
    Defines string helper methods including string formatting and localization.
    Unless `EmberENV.EXTEND_PROTOTYPES.String` is `false` these methods will also be
    added to the `String.prototype` as well.
  
    @class String
    @public
  */
  exports.default = {
    /**
      Apply formatting options to the string. This will look for occurrences
      of "%@" in your string and substitute them with the arguments you pass into
      this method. If you want to control the specific order of replacement,
      you can add a number after the key as well to indicate which argument
      you want to insert.
       Ordered insertions are most useful when building loc strings where values
      you need to insert may appear in different orders.
       ```javascript
      "Hello %@ %@".fmt('John', 'Doe');     // "Hello John Doe"
      "Hello %@2, %@1".fmt('John', 'Doe');  // "Hello Doe, John"
      ```
       @method fmt
      @param {String} str The string to format
      @param {Array} formats An array of parameters to interpolate into string.
      @return {String} formatted string
      @public
      @deprecated Use ES6 template strings instead: http://babeljs.io/docs/learn-es2015/#template-strings
    */
    fmt: fmt,

    /**
      Formats the passed string, but first looks up the string in the localized
      strings hash. This is a convenient way to localize text. See
      `Ember.String.fmt()` for more information on formatting.
       Note that it is traditional but not required to prefix localized string
      keys with an underscore or other character so you can easily identify
      localized strings.
       ```javascript
      Ember.STRINGS = {
        '_Hello World': 'Bonjour le monde',
        '_Hello %@ %@': 'Bonjour %@ %@'
      };
       Ember.String.loc("_Hello World");  // 'Bonjour le monde';
      Ember.String.loc("_Hello %@ %@", ["John", "Smith"]);  // "Bonjour John Smith";
      ```
       @method loc
      @param {String} str The string to format
      @param {Array} formats Optional array of parameters to interpolate into string.
      @return {String} formatted string
      @public
    */
    loc: loc,

    /**
      Splits a string into separate units separated by spaces, eliminating any
      empty strings in the process. This is a convenience method for split that
      is mostly useful when applied to the `String.prototype`.
       ```javascript
      Ember.String.w("alpha beta gamma").forEach(function(key) {
        console.log(key);
      });
       // > alpha
      // > beta
      // > gamma
      ```
       @method w
      @param {String} str The string to split
      @return {Array} array containing the split strings
      @public
    */
    w: w,

    /**
      Converts a camelized string into all lower case separated by underscores.
       ```javascript
      'innerHTML'.decamelize();           // 'inner_html'
      'action_name'.decamelize();        // 'action_name'
      'css-class-name'.decamelize();     // 'css-class-name'
      'my favorite items'.decamelize();  // 'my favorite items'
      ```
       @method decamelize
      @param {String} str The string to decamelize.
      @return {String} the decamelized string.
      @public
    */
    decamelize: decamelize,

    /**
      Replaces underscores, spaces, or camelCase with dashes.
       ```javascript
      'innerHTML'.dasherize();          // 'inner-html'
      'action_name'.dasherize();        // 'action-name'
      'css-class-name'.dasherize();     // 'css-class-name'
      'my favorite items'.dasherize();  // 'my-favorite-items'
      'privateDocs/ownerInvoice'.dasherize(); // 'private-docs/owner-invoice'
      ```
       @method dasherize
      @param {String} str The string to dasherize.
      @return {String} the dasherized string.
      @public
    */
    dasherize: dasherize,

    /**
      Returns the lowerCamelCase form of a string.
       ```javascript
      'innerHTML'.camelize();          // 'innerHTML'
      'action_name'.camelize();        // 'actionName'
      'css-class-name'.camelize();     // 'cssClassName'
      'my favorite items'.camelize();  // 'myFavoriteItems'
      'My Favorite Items'.camelize();  // 'myFavoriteItems'
      'private-docs/owner-invoice'.camelize(); // 'privateDocs/ownerInvoice'
      ```
       @method camelize
      @param {String} str The string to camelize.
      @return {String} the camelized string.
      @public
    */
    camelize: camelize,

    /**
      Returns the UpperCamelCase form of a string.
       ```javascript
      'innerHTML'.classify();          // 'InnerHTML'
      'action_name'.classify();        // 'ActionName'
      'css-class-name'.classify();     // 'CssClassName'
      'my favorite items'.classify();  // 'MyFavoriteItems'
      'private-docs/owner-invoice'.classify(); // 'PrivateDocs/OwnerInvoice'
      ```
       @method classify
      @param {String} str the string to classify
      @return {String} the classified string
      @public
    */
    classify: classify,

    /**
      More general than decamelize. Returns the lower\_case\_and\_underscored
      form of a string.
       ```javascript
      'innerHTML'.underscore();          // 'inner_html'
      'action_name'.underscore();        // 'action_name'
      'css-class-name'.underscore();     // 'css_class_name'
      'my favorite items'.underscore();  // 'my_favorite_items'
      'privateDocs/ownerInvoice'.underscore(); // 'private_docs/owner_invoice'
      ```
       @method underscore
      @param {String} str The string to underscore.
      @return {String} the underscored string.
      @public
    */
    underscore: underscore,

    /**
      Returns the Capitalized form of a string
       ```javascript
      'innerHTML'.capitalize()         // 'InnerHTML'
      'action_name'.capitalize()       // 'Action_name'
      'css-class-name'.capitalize()    // 'Css-class-name'
      'my favorite items'.capitalize() // 'My favorite items'
      'privateDocs/ownerInvoice'.capitalize(); // 'PrivateDocs/ownerInvoice'
      ```
       @method capitalize
      @param {String} str The string to capitalize.
      @return {String} The capitalized string.
      @public
    */
    capitalize: capitalize
  };
  exports.fmt = fmt;
  exports.loc = loc;
  exports.w = w;
  exports.decamelize = decamelize;
  exports.dasherize = dasherize;
  exports.camelize = camelize;
  exports.classify = classify;
  exports.underscore = underscore;
  exports.capitalize = capitalize;
});
enifed('ember-runtime/utils', ['exports', 'ember-runtime/mixins/array', 'ember-runtime/system/object'], function (exports, _array, _object) {
  'use strict';

  exports.isArray = isArray;
  exports.typeOf = typeOf;


  // ........................................
  // TYPING & ARRAY MESSAGING
  //
  var TYPE_MAP = {
    '[object Boolean]': 'boolean',
    '[object Number]': 'number',
    '[object String]': 'string',
    '[object Function]': 'function',
    '[object Array]': 'array',
    '[object Date]': 'date',
    '[object RegExp]': 'regexp',
    '[object Object]': 'object',
    '[object FileList]': 'filelist'
  };

  var toString = Object.prototype.toString;

  /**
   @module @ember/array
  */
  /**
    Returns true if the passed object is an array or Array-like.
  
    Objects are considered Array-like if any of the following are true:
  
      - the object is a native Array
      - the object has an objectAt property
      - the object is an Object, and has a length property
  
    Unlike `Ember.typeOf` this method returns true even if the passed object is
    not formally an array but appears to be array-like (i.e. implements `Ember.Array`)
  
    ```javascript
    Ember.isArray();                                          // false
    Ember.isArray([]);                                        // true
    Ember.isArray(Ember.ArrayProxy.create({ content: [] }));  // true
    ```
  
    @method isArray
    @static
    @for @ember/array
    @param {Object} obj The object to test
    @return {Boolean} true if the passed object is an array or Array-like
    @public
  */
  function isArray(obj) {
    if (!obj || obj.setInterval) {
      return false;
    }
    if (Array.isArray(obj)) {
      return true;
    }
    if (_array.default.detect(obj)) {
      return true;
    }

    var type = typeOf(obj);
    if ('array' === type) {
      return true;
    }
    var length = obj.length;
    if (typeof length === 'number' && length === length && 'object' === type) {
      return true;
    }
    return false;
  }
  /**
   @module @ember/utils
  */
  /**
    Returns a consistent type for the passed object.
  
    Use this instead of the built-in `typeof` to get the type of an item.
    It will return the same result across all browsers and includes a bit
    more detail. Here is what will be returned:
  
        | Return Value  | Meaning                                              |
        |---------------|------------------------------------------------------|
        | 'string'      | String primitive or String object.                   |
        | 'number'      | Number primitive or Number object.                   |
        | 'boolean'     | Boolean primitive or Boolean object.                 |
        | 'null'        | Null value                                           |
        | 'undefined'   | Undefined value                                      |
        | 'function'    | A function                                           |
        | 'array'       | An instance of Array                                 |
        | 'regexp'      | An instance of RegExp                                |
        | 'date'        | An instance of Date                                  |
        | 'filelist'    | An instance of FileList                              |
        | 'class'       | An Ember class (created using Ember.Object.extend()) |
        | 'instance'    | An Ember object instance                             |
        | 'error'       | An instance of the Error object                      |
        | 'object'      | A JavaScript object not inheriting from Ember.Object |
  
    Examples:
  
    ```javascript
    Ember.typeOf();                       // 'undefined'
    Ember.typeOf(null);                   // 'null'
    Ember.typeOf(undefined);              // 'undefined'
    Ember.typeOf('michael');              // 'string'
    Ember.typeOf(new String('michael'));  // 'string'
    Ember.typeOf(101);                    // 'number'
    Ember.typeOf(new Number(101));        // 'number'
    Ember.typeOf(true);                   // 'boolean'
    Ember.typeOf(new Boolean(true));      // 'boolean'
    Ember.typeOf(Ember.A);                // 'function'
    Ember.typeOf([1, 2, 90]);             // 'array'
    Ember.typeOf(/abc/);                  // 'regexp'
    Ember.typeOf(new Date());             // 'date'
    Ember.typeOf(event.target.files);     // 'filelist'
    Ember.typeOf(Ember.Object.extend());  // 'class'
    Ember.typeOf(Ember.Object.create());  // 'instance'
    Ember.typeOf(new Error('teamocil'));  // 'error'
  
    // 'normal' JavaScript object
    Ember.typeOf({ a: 'b' });             // 'object'
    ```
  
    @method typeOf
    @for @ember/utils
    @param {Object} item the item to check
    @return {String} the type
    @public
    @static
  */
  function typeOf(item) {
    if (item === null) {
      return 'null';
    }
    if (item === undefined) {
      return 'undefined';
    }
    var ret = TYPE_MAP[toString.call(item)] || 'object';

    if (ret === 'function') {
      if (_object.default.detect(item)) {
        ret = 'class';
      }
    } else if (ret === 'object') {
      if (item instanceof Error) {
        ret = 'error';
      } else if (item instanceof _object.default) {
        ret = 'instance';
      } else if (item instanceof Date) {
        ret = 'date';
      }
    }

    return ret;
  }
});
enifed('ember-template-compiler/compat', ['ember-metal', 'ember-template-compiler/system/precompile', 'ember-template-compiler/system/compile', 'ember-template-compiler/system/compile-options'], function (_emberMetal, _precompile, _compile, _compileOptions) {
  'use strict';

  var EmberHandlebars = _emberMetal.default.Handlebars = _emberMetal.default.Handlebars || {}; // reexports

  var EmberHTMLBars = _emberMetal.default.HTMLBars = _emberMetal.default.HTMLBars || {};

  EmberHTMLBars.precompile = EmberHandlebars.precompile = _precompile.default;
  EmberHTMLBars.compile = EmberHandlebars.compile = _compile.default;
  EmberHTMLBars.registerPlugin = _compileOptions.registerPlugin;
});
enifed('ember-template-compiler/index', ['exports', 'ember-template-compiler/system/precompile', 'ember-template-compiler/system/compile', 'ember-template-compiler/system/compile-options', 'ember-template-compiler/plugins', 'ember-metal', 'ember/features', 'ember-environment', 'ember/version', 'ember-template-compiler/compat', 'ember-template-compiler/system/bootstrap'], function (exports, _precompile, _compile, _compileOptions, _plugins, _emberMetal, _features, _emberEnvironment, _version) {
  'use strict';

  exports.defaultPlugins = exports.registerPlugin = exports.compileOptions = exports.compile = exports.precompile = exports._Ember = undefined;
  Object.defineProperty(exports, 'precompile', {
    enumerable: true,
    get: function () {
      return _precompile.default;
    }
  });
  Object.defineProperty(exports, 'compile', {
    enumerable: true,
    get: function () {
      return _compile.default;
    }
  });
  Object.defineProperty(exports, 'compileOptions', {
    enumerable: true,
    get: function () {
      return _compileOptions.default;
    }
  });
  Object.defineProperty(exports, 'registerPlugin', {
    enumerable: true,
    get: function () {
      return _compileOptions.registerPlugin;
    }
  });
  Object.defineProperty(exports, 'defaultPlugins', {
    enumerable: true,
    get: function () {
      return _plugins.default;
    }
  });


  // private API used by ember-cli-htmlbars to setup ENV and FEATURES
  if (!_emberMetal.default.ENV) {
    _emberMetal.default.ENV = _emberEnvironment.ENV;
  }
  if (!_emberMetal.default.FEATURES) {
    _emberMetal.default.FEATURES = _features.FEATURES;
  }
  if (!_emberMetal.default.VERSION) {
    _emberMetal.default.VERSION = _version.default;
  }

  exports._Ember = _emberMetal.default;
});
enifed('ember-template-compiler/plugins/assert-input-helper-without-block', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = errorOnInputWithContent;
  function errorOnInputWithContent(env) {
    var moduleName = env.meta.moduleName;


    return {
      name: 'assert-input-helper-without-block',

      visitors: {
        BlockStatement: function (node) {
          if (node.path.original !== 'input') {
            return;
          }

          (true && !(false) && (0, _emberDebug.assert)(assertMessage(moduleName, node)));
        }
      }
    };
  }

  function assertMessage(moduleName, node) {
    var sourceInformation = (0, _calculateLocationDisplay.default)(moduleName, node.loc);

    return 'The {{input}} helper cannot be used in block form. ' + sourceInformation;
  }
});
enifed('ember-template-compiler/plugins/assert-reserved-named-arguments', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = assertReservedNamedArguments;
  function assertReservedNamedArguments(env) {
    var moduleName = env.meta.moduleName;


    return {
      name: 'assert-reserved-named-arguments',

      visitors: {
        PathExpression: function (node) {
          if (node.original[0] === '@') {
            (true && !(false) && (0, _emberDebug.assert)(assertMessage(moduleName, node)));
          }
        }
      }
    };
  }

  function assertMessage(moduleName, node) {
    var path = node.original;
    var source = (0, _calculateLocationDisplay.default)(moduleName, node.loc);

    return '\'' + path + '\' is not a valid path. ' + source;
  }
});
enifed('ember-template-compiler/plugins/deprecate-render-model', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = deprecateRenderModel;
  function deprecateRenderModel(env) {
    var moduleName = env.meta.moduleName;


    return {
      name: 'deprecate-render-model',

      visitors: {
        MustacheStatement: function (node) {
          if (node.path.original === 'render' && node.params.length > 1) {
            node.params.forEach(function (param) {
              if (param.type !== 'PathExpression') {
                return;
              }

              (true && !(false) && (0, _emberDebug.deprecate)(deprecationMessage(moduleName, node, param), false, {
                id: 'ember-template-compiler.deprecate-render-model',
                until: '3.0.0',
                url: 'https://emberjs.com/deprecations/v2.x#toc_model-param-in-code-render-code-helper'
              }));
            });
          }
        }
      }
    };
  }

  function deprecationMessage(moduleName, node, param) {
    var sourceInformation = (0, _calculateLocationDisplay.default)(moduleName, node.loc);
    var componentName = node.params[0].original;
    var modelName = param.original;
    var original = '{{render "' + componentName + '" ' + modelName + '}}';
    var preferred = '{{' + componentName + ' model=' + modelName + '}}';

    return 'Please refactor `' + original + '` to a component and invoke via' + (' `' + preferred + '`. ' + sourceInformation);
  }
});
enifed('ember-template-compiler/plugins/deprecate-render', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = deprecateRender;
  function deprecateRender(env) {
    var moduleName = env.meta.moduleName;


    return {
      name: 'deprecate-render',

      visitors: {
        MustacheStatement: function (node) {
          if (node.path.original !== 'render') {
            return;
          }
          if (node.params.length !== 1) {
            return;
          }

          each(node.params, function (param) {
            if (param.type !== 'StringLiteral') {
              return;
            }

            (true && !(false) && (0, _emberDebug.deprecate)(deprecationMessage(moduleName, node), false, {
              id: 'ember-template-compiler.deprecate-render',
              until: '3.0.0',
              url: 'https://emberjs.com/deprecations/v2.x#toc_code-render-code-helper'
            }));
          });
        }
      }
    };
  }

  function each(list, callback) {
    for (var i = 0, l = list.length; i < l; i++) {
      callback(list[i]);
    }
  }

  function deprecationMessage(moduleName, node) {
    var sourceInformation = (0, _calculateLocationDisplay.default)(moduleName, node.loc);
    var componentName = node.params[0].original;
    var original = '{{render "' + componentName + '"}}';
    var preferred = '{{' + componentName + '}}';

    return 'Please refactor `' + original + '` to a component and invoke via' + (' `' + preferred + '`. ' + sourceInformation);
  }
});
enifed('ember-template-compiler/plugins/extract-pragma-tag', ['exports'], function (exports) {
  'use strict';

  exports.default = extractPragmaTag;
  var PRAGMA_TAG = 'use-component-manager';

  function extractPragmaTag(env) {
    var meta = env.meta;


    return {
      name: 'exract-pragma-tag',

      visitors: {
        MustacheStatement: {
          enter: function (node) {
            if (node.path.type === 'PathExpression' && node.path.original === PRAGMA_TAG) {
              meta.managerId = node.params[0].value;
              return null;
            }
          }
        }
      }
    };
  }
});
enifed('ember-template-compiler/plugins/index', ['exports', 'ember-template-compiler/plugins/transform-old-binding-syntax', 'ember-template-compiler/plugins/transform-angle-bracket-components', 'ember-template-compiler/plugins/transform-input-on-to-onEvent', 'ember-template-compiler/plugins/transform-top-level-components', 'ember-template-compiler/plugins/transform-inline-link-to', 'ember-template-compiler/plugins/transform-old-class-binding-syntax', 'ember-template-compiler/plugins/transform-quoted-bindings-into-just-bindings', 'ember-template-compiler/plugins/deprecate-render-model', 'ember-template-compiler/plugins/deprecate-render', 'ember-template-compiler/plugins/assert-reserved-named-arguments', 'ember-template-compiler/plugins/transform-action-syntax', 'ember-template-compiler/plugins/transform-input-type-syntax', 'ember-template-compiler/plugins/transform-attrs-into-args', 'ember-template-compiler/plugins/transform-each-in-into-each', 'ember-template-compiler/plugins/transform-has-block-syntax', 'ember-template-compiler/plugins/transform-dot-component-invocation', 'ember-template-compiler/plugins/extract-pragma-tag', 'ember-template-compiler/plugins/assert-input-helper-without-block', 'ember/features'], function (exports, _transformOldBindingSyntax, _transformAngleBracketComponents, _transformInputOnToOnEvent, _transformTopLevelComponents, _transformInlineLinkTo, _transformOldClassBindingSyntax, _transformQuotedBindingsIntoJustBindings, _deprecateRenderModel, _deprecateRender, _assertReservedNamedArguments, _transformActionSyntax, _transformInputTypeSyntax, _transformAttrsIntoArgs, _transformEachInIntoEach, _transformHasBlockSyntax, _transformDotComponentInvocation, _extractPragmaTag, _assertInputHelperWithoutBlock, _features) {
  'use strict';

  var transforms = [_transformDotComponentInvocation.default, _transformOldBindingSyntax.default, _transformAngleBracketComponents.default, _transformInputOnToOnEvent.default, _transformTopLevelComponents.default, _transformInlineLinkTo.default, _transformOldClassBindingSyntax.default, _transformQuotedBindingsIntoJustBindings.default, _deprecateRenderModel.default, _deprecateRender.default, _assertReservedNamedArguments.default, _transformActionSyntax.default, _transformInputTypeSyntax.default, _transformAttrsIntoArgs.default, _transformEachInIntoEach.default, _transformHasBlockSyntax.default, _assertInputHelperWithoutBlock.default];

  if (_features.GLIMMER_CUSTOM_COMPONENT_MANAGER) {
    transforms.push(_extractPragmaTag.default);
  }

  exports.default = Object.freeze(transforms);
});
enifed('ember-template-compiler/plugins/transform-action-syntax', ['exports'], function (exports) {
  'use strict';

  exports.default = transformActionSyntax;
  /**
   @module ember
  */

  /**
    A Glimmer2 AST transformation that replaces all instances of
  
    ```handlebars
   <button {{action 'foo'}}>
   <button onblur={{action 'foo'}}>
   <button onblur={{action (action 'foo') 'bar'}}>
    ```
  
    with
  
    ```handlebars
   <button {{action this 'foo'}}>
   <button onblur={{action this 'foo'}}>
   <button onblur={{action this (action this 'foo') 'bar'}}>
    ```
  
    @private
    @class TransformActionSyntax
  */

  function transformActionSyntax(_ref) {
    var syntax = _ref.syntax;
    var b = syntax.builders;


    return {
      name: 'transform-action-syntax',

      visitors: {
        ElementModifierStatement: function (node) {
          if (isAction(node)) {
            insertThisAsFirstParam(node, b);
          }
        },
        MustacheStatement: function (node) {
          if (isAction(node)) {
            insertThisAsFirstParam(node, b);
          }
        },
        SubExpression: function (node) {
          if (isAction(node)) {
            insertThisAsFirstParam(node, b);
          }
        }
      }
    };
  }

  function isAction(node) {
    return node.path.original === 'action';
  }

  function insertThisAsFirstParam(node, builders) {
    node.params.unshift(builders.path('this'));
  }
});
enifed('ember-template-compiler/plugins/transform-angle-bracket-components', ['exports'], function (exports) {
  'use strict';

  exports.default = transformAngleBracketComponents;
  function transformAngleBracketComponents(env) {
    return {
      name: 'transform-angle-bracket-components',

      visitors: {
        ComponentNode: function (node) {
          node.tag = '<' + node.tag + '>';
        }
      }
    };
  }
});
enifed('ember-template-compiler/plugins/transform-attrs-into-args', ['exports'], function (exports) {
  'use strict';

  exports.default = transformAttrsIntoArgs;
  /**
   @module ember
  */

  /**
    A Glimmer2 AST transformation that replaces all instances of
  
    ```handlebars
   {{attrs.foo.bar}}
    ```
  
    to
  
    ```handlebars
   {{@foo.bar}}
    ```
  
    as well as `{{#if attrs.foo}}`, `{{deeply (nested attrs.foobar.baz)}}`,
    `{{this.attrs.foo}}` etc
  
    @private
    @class TransformAttrsToProps
  */

  function transformAttrsIntoArgs(env) {
    var b = env.syntax.builders;


    var stack = [[]];

    return {
      name: 'transform-attrs-into-args',

      visitors: {
        Program: {
          enter: function (node) {
            var parent = stack[stack.length - 1];
            stack.push(parent.concat(node.blockParams));
          },
          exit: function (node) {
            stack.pop();
          }
        },

        PathExpression: function (node) {
          if (isAttrs(node, stack[stack.length - 1])) {
            var path = b.path(node.original.substr(6));
            path.original = '@' + path.original;
            path.data = true;
            return path;
          }
        }
      }
    };
  }

  function isAttrs(node, symbols) {
    var name = node.parts[0];

    if (symbols.indexOf(name) !== -1) {
      return false;
    }

    if (name === 'attrs') {
      if (node.this === true) {
        node.parts.shift();
        node.original = node.original.slice(5);
      }

      return true;
    }

    return false;
  }
});
enifed('ember-template-compiler/plugins/transform-dot-component-invocation', ['exports'], function (exports) {
  'use strict';

  exports.default = transformDotComponentInvocation;

  /**
    Transforms dot invocation of closure components to be wrapped
    with the component helper. This allows for a more static invocation
    of the component.
  
    ```handlebars
   {{#my-component as |comps|}}
    {{comp.dropdown isOpen=false}}
   {{/my-component}}
    ```
  
    with
  
    ```handlebars
    {{#my-component as |comps|}}
      {{component comp.dropdown isOpen=false}}
    {{/my-component}}
    ```
    and
  
    ```handlebars
   {{#my-component as |comps|}}
    {{comp.dropdown isOpen}}
   {{/my-component}}
    ```
  
    with
  
    ```handlebars
    {{#my-component as |comps|}}
      {{component comp.dropdown isOpen}}
    {{/my-component}}
    ```
  
    and
  
    ```handlebars
    {{#my-component as |comps|}}
      {{#comp.dropdown}}Open{{/comp.dropdown}}
    {{/my-component}}
    ```
  
    with
  
    ```handlebars
    {{#my-component as |comps|}}
      {{#component comp.dropdown}}Open{{/component}}
    {{/my-component}}
    ```
  
    @private
    @class TransFormDotComponentInvocation
  */
  function transformDotComponentInvocation(env) {
    var b = env.syntax.builders;


    return {
      name: 'transform-dot-component-invocation',

      visitors: {
        MustacheStatement: function (node) {
          if (isInlineInvocation(node.path, node.params, node.hash)) {
            wrapInComponent(node, b);
          }
        },
        BlockStatement: function (node) {
          if (isMultipartPath(node.path)) {
            wrapInComponent(node, b);
          }
        }
      }
    };
  }

  function isMultipartPath(path) {
    return path.parts.length > 1;
  }

  function isInlineInvocation(path, params, hash) {
    if (isMultipartPath(path)) {
      if (params.length > 0 || hash.pairs.length > 0) {
        return true;
      }
    }

    return false;
  }

  function wrapInComponent(node, builder) {
    var component = node.path;
    var componentHelper = builder.path('component');
    node.path = componentHelper;
    node.params.unshift(component);
  }
});
enifed('ember-template-compiler/plugins/transform-each-in-into-each', ['exports'], function (exports) {
  'use strict';

  exports.default = transformEachInIntoEach;
  /**
   @module ember
  */

  /**
    A Glimmer2 AST transformation that replaces all instances of
  
    ```handlebars
   {{#each-in iterableThing as |key value|}}
    ```
  
    with
  
    ```handlebars
   {{#each (-each-in iterableThing) as |key value|}}
    ```
  
    @private
    @class TransformHasBlockSyntax
  */
  function transformEachInIntoEach(env) {
    var b = env.syntax.builders;


    return {
      name: 'transform-each-in-into-each',

      visitors: {
        BlockStatement: function (node) {
          if (node.path.original === 'each-in') {
            node.params[0] = b.sexpr(b.path('-each-in'), [node.params[0]]);
            return b.block(b.path('each'), node.params, node.hash, node.program, node.inverse, node.loc);
          }
        }
      }
    };
  }
});
enifed('ember-template-compiler/plugins/transform-has-block-syntax', ['exports'], function (exports) {
  'use strict';

  exports.default = transformHasBlockSyntax;
  /**
   @module ember
  */

  /**
    A Glimmer2 AST transformation that replaces all instances of
  
    ```handlebars
   {{hasBlock}}
    ```
  
    with
  
    ```handlebars
   {{has-block}}
    ```
  
    @private
    @class TransformHasBlockSyntax
  */

  var TRANSFORMATIONS = {
    hasBlock: 'has-block',
    hasBlockParams: 'has-block-params'
  };

  function transformHasBlockSyntax(env) {
    var b = env.syntax.builders;


    return {
      name: 'transform-has-block-syntax',

      visitors: {
        PathExpression: function (node) {
          if (TRANSFORMATIONS[node.original]) {
            return b.sexpr(b.path(TRANSFORMATIONS[node.original]));
          }
        },
        MustacheStatement: function (node) {
          if (TRANSFORMATIONS[node.path.original]) {
            return b.mustache(b.path(TRANSFORMATIONS[node.path.original]), node.params, node.hash, null, node.loc);
          }
        },
        SubExpression: function (node) {
          if (TRANSFORMATIONS[node.path.original]) {
            return b.sexpr(b.path(TRANSFORMATIONS[node.path.original]), node.params, node.hash);
          }
        }
      }
    };
  }
});
enifed('ember-template-compiler/plugins/transform-inline-link-to', ['exports'], function (exports) {
  'use strict';

  exports.default = transformInlineLinkTo;
  function buildProgram(b, content, loc) {
    return b.program([buildStatement(b, content, loc)], null, loc);
  }

  function buildStatement(b, content, loc) {
    switch (content.type) {
      case 'PathExpression':
        return b.mustache(content, null, null, null, loc);

      case 'SubExpression':
        return b.mustache(content.path, content.params, content.hash, null, loc);

      // The default case handles literals.
      default:
        return b.text('' + content.value, loc);
    }
  }

  function unsafeHtml(b, expr) {
    return b.sexpr('-html-safe', [expr]);
  }

  function transformInlineLinkTo(env) {
    var b = env.syntax.builders;


    return {
      name: 'transform-inline-link-to',

      visitors: {
        MustacheStatement: function (node) {
          if (node.path.original === 'link-to') {
            var content = node.escaped ? node.params[0] : unsafeHtml(b, node.params[0]);
            return b.block('link-to', node.params.slice(1), node.hash, buildProgram(b, content, node.loc), null, node.loc);
          }
        }
      }
    };
  }
});
enifed('ember-template-compiler/plugins/transform-input-on-to-onEvent', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = transformInputOnToOnEvent;


  /**
   @module ember
  */

  /**
    An HTMLBars AST transformation that replaces all instances of
  
    ```handlebars
   {{input on="enter" action="doStuff"}}
   {{input on="key-press" action="doStuff"}}
    ```
  
    with
  
    ```handlebars
   {{input enter="doStuff"}}
   {{input key-press="doStuff"}}
    ```
  
    @private
    @class TransformInputOnToOnEvent
  */
  function transformInputOnToOnEvent(env) {
    var b = env.syntax.builders;
    var moduleName = env.meta.moduleName;


    return {
      name: 'transform-input-on-to-onEvent',

      visitors: {
        MustacheStatement: function (node) {
          if (node.path.original !== 'input') {
            return;
          }

          var action = hashPairForKey(node.hash, 'action');
          var on = hashPairForKey(node.hash, 'on');
          var onEvent = hashPairForKey(node.hash, 'onEvent');

          if (!action && !on && !onEvent) {
            return;
          }

          var normalizedOn = on || onEvent;
          var moduleInfo = (0, _calculateLocationDisplay.default)(moduleName, node.loc);

          if (normalizedOn && normalizedOn.value.type !== 'StringLiteral') {
            (true && !(false) && (0, _emberDebug.deprecate)('Using a dynamic value for \'#{normalizedOn.key}=\' with the \'{{input}}\' helper ' + moduleInfo + 'is deprecated.', false, { id: 'ember-template-compiler.transform-input-on-to-onEvent.dynamic-value', until: '3.0.0' }));


            normalizedOn.key = 'onEvent';
            return; // exit early, as we cannot transform further
          }

          removeFromHash(node.hash, normalizedOn);
          removeFromHash(node.hash, action);

          if (!action) {
            (true && !(false) && (0, _emberDebug.deprecate)('Using \'{{input ' + normalizedOn.key + '="' + normalizedOn.value.value + '" ...}}\' without specifying an action ' + moduleInfo + 'will do nothing.', false, { id: 'ember-template-compiler.transform-input-on-to-onEvent.no-action', until: '3.0.0' }));


            return; // exit early, if no action was available there is nothing to do
          }

          var specifiedOn = normalizedOn ? normalizedOn.key + '="' + normalizedOn.value.value + '" ' : '';
          if (normalizedOn && normalizedOn.value.value === 'keyPress') {
            // using `keyPress` in the root of the component will
            // clobber the keyPress event handler
            normalizedOn.value.value = 'key-press';
          }

          var expected = (normalizedOn ? normalizedOn.value.value : 'enter') + '="' + action.value.original + '"';

          (true && !(false) && (0, _emberDebug.deprecate)('Using \'{{input ' + specifiedOn + 'action="' + action.value.original + '"}}\' ' + moduleInfo + 'is deprecated. Please use \'{{input ' + expected + '}}\' instead.', false, { id: 'ember-template-compiler.transform-input-on-to-onEvent.normalized-on', until: '3.0.0' }));

          if (!normalizedOn) {
            normalizedOn = b.pair('onEvent', b.string('enter'));
          }

          node.hash.pairs.push(b.pair(normalizedOn.value.value, action.value));
        }
      }
    };
  }

  function hashPairForKey(hash, key) {
    for (var i = 0; i < hash.pairs.length; i++) {
      var pair = hash.pairs[i];
      if (pair.key === key) {
        return pair;
      }
    }

    return false;
  }

  function removeFromHash(hash, pairToRemove) {
    var newPairs = [];
    for (var i = 0; i < hash.pairs.length; i++) {
      var pair = hash.pairs[i];

      if (pair !== pairToRemove) {
        newPairs.push(pair);
      }
    }

    hash.pairs = newPairs;
  }
});
enifed('ember-template-compiler/plugins/transform-input-type-syntax', ['exports'], function (exports) {
  'use strict';

  exports.default = transformInputTypeSyntax;
  /**
   @module ember
  */

  /**
    A Glimmer2 AST transformation that replaces all instances of
  
    ```handlebars
   {{input type=boundType}}
    ```
  
    with
  
    ```handlebars
   {{input (-input-type boundType) type=boundType}}
    ```
  
    Note that the type parameters is not removed as the -input-type helpers
    is only used to select the component class. The component still needs
    the type parameter to function.
  
    @private
    @class TransformInputTypeSyntax
  */

  function transformInputTypeSyntax(env) {
    var b = env.syntax.builders;

    return {
      name: 'transform-input-type-syntax',

      visitors: {
        MustacheStatement: function (node) {
          if (isInput(node)) {
            insertTypeHelperParameter(node, b);
          }
        }
      }
    };
  }

  function isInput(node) {
    return node.path.original === 'input';
  }

  function insertTypeHelperParameter(node, builders) {
    var pairs = node.hash.pairs;
    var pair = null;
    for (var i = 0; i < pairs.length; i++) {
      if (pairs[i].key === 'type') {
        pair = pairs[i];
        break;
      }
    }
    if (pair && pair.value.type !== 'StringLiteral') {
      node.params.unshift(builders.sexpr('-input-type', [pair.value], null, pair.loc));
    }
  }
});
enifed('ember-template-compiler/plugins/transform-old-binding-syntax', ['exports', 'ember-debug', 'ember-template-compiler/system/calculate-location-display'], function (exports, _emberDebug, _calculateLocationDisplay) {
  'use strict';

  exports.default = transformOldBindingSyntax;
  function transformOldBindingSyntax(env) {
    var moduleName = env.meta.moduleName;

    var b = env.syntax.builders;

    return {
      name: 'transform-old-binding-syntax',

      visitors: {
        BlockStatement: function (node) {
          processHash(b, node, moduleName);
        },
        MustacheStatement: function (node) {
          processHash(b, node, moduleName);
        }
      }
    };
  }

  function processHash(b, node, moduleName) {
    for (var i = 0; i < node.hash.pairs.length; i++) {
      var pair = node.hash.pairs[i];
      var key = pair.key,
          value = pair.value;


      var sourceInformation = (0, _calculateLocationDisplay.default)(moduleName, pair.loc);

      if (key === 'classBinding') {
        return;
      }

      (true && !(key !== 'attributeBindings') && (0, _emberDebug.assert)('Setting \'attributeBindings\' via template helpers is not allowed ' + sourceInformation, key !== 'attributeBindings'));


      if (key.substr(-7) === 'Binding') {
        var newKey = key.slice(0, -7);

        (true && !(false) && (0, _emberDebug.deprecate)('You\'re using legacy binding syntax: ' + key + '=' + exprToString(value) + ' ' + sourceInformation + '. Please replace with ' + newKey + '=' + value.original, false, { id: 'ember-template-compiler.transform-old-binding-syntax', until: '3.0.0' }));


        pair.key = newKey;
        if (value.type === 'StringLiteral') {
          pair.value = b.path(value.original);
        }
      }
    }
  }

  function exprToString(expr) {
    switch (expr.type) {
      case 'StringLiteral':
        return '"' + expr.original + '"';
      case 'PathExpression':
        return expr.original;
    }
  }
});
enifed('ember-template-compiler/plugins/transform-old-class-binding-syntax', ['exports'], function (exports) {
  'use strict';

  exports.default = transformOldClassBindingSyntax;
  function transformOldClassBindingSyntax(env) {
    var b = env.syntax.builders;

    return {
      name: 'transform-old-class-binding-syntax',

      visitors: {
        MustacheStatement: function (node) {
          process(b, node);
        },
        BlockStatement: function (node) {
          process(b, node);
        }
      }
    };
  }

  function process(b, node) {
    var allOfTheMicrosyntaxes = [];
    var allOfTheMicrosyntaxIndexes = [];
    var classPair = void 0;

    each(node.hash.pairs, function (pair, index) {
      var key = pair.key;


      if (key === 'classBinding' || key === 'classNameBindings') {
        allOfTheMicrosyntaxIndexes.push(index);
        allOfTheMicrosyntaxes.push(pair);
      } else if (key === 'class') {
        classPair = pair;
      }
    });

    if (allOfTheMicrosyntaxes.length === 0) {
      return;
    }

    var classValue = [];

    if (classPair) {
      classValue.push(classPair.value);
      classValue.push(b.string(' '));
    } else {
      classPair = b.pair('class', null);
      node.hash.pairs.push(classPair);
    }

    each(allOfTheMicrosyntaxIndexes, function (index) {
      node.hash.pairs.splice(index, 1);
    });

    each(allOfTheMicrosyntaxes, function (_ref) {
      var value = _ref.value,
          loc = _ref.loc;

      var sexprs = [];
      // TODO: add helpful deprecation when both `classNames` and `classNameBindings` can
      // be removed.

      if (value.type === 'StringLiteral') {
        var microsyntax = parseMicrosyntax(value.original);

        buildSexprs(microsyntax, sexprs, b);

        classValue.push.apply(classValue, sexprs);
      }
    });

    var hash = b.hash();
    classPair.value = b.sexpr(b.path('concat'), classValue, hash);
  }

  function buildSexprs(microsyntax, sexprs, b) {
    for (var i = 0; i < microsyntax.length; i++) {
      var _microsyntax$i = microsyntax[i],
          propName = _microsyntax$i[0],
          activeClass = _microsyntax$i[1],
          inactiveClass = _microsyntax$i[2];

      var sexpr = void 0;

      // :my-class-name microsyntax for static values
      if (propName === '') {
        sexpr = b.string(activeClass);
      } else {
        var params = [b.path(propName)];

        if (activeClass || activeClass === '') {
          params.push(b.string(activeClass));
        } else {
          var sexprParams = [b.string(propName), b.path(propName)];

          var hash = b.hash();
          if (activeClass !== undefined) {
            hash.pairs.push(b.pair('activeClass', b.string(activeClass)));
          }

          if (inactiveClass !== undefined) {
            hash.pairs.push(b.pair('inactiveClass', b.string(inactiveClass)));
          }

          params.push(b.sexpr(b.path('-normalize-class'), sexprParams, hash));
        }

        if (inactiveClass || inactiveClass === '') {
          params.push(b.string(inactiveClass));
        }

        sexpr = b.sexpr(b.path('if'), params);
      }

      sexprs.push(sexpr);
      sexprs.push(b.string(' '));
    }
  }

  function each(list, callback) {
    for (var i = 0; i < list.length; i++) {
      callback(list[i], i);
    }
  }

  function parseMicrosyntax(string) {
    var segments = string.split(' ');

    for (var i = 0; i < segments.length; i++) {
      segments[i] = segments[i].split(':');
    }

    return segments;
  }
});
enifed('ember-template-compiler/plugins/transform-quoted-bindings-into-just-bindings', ['exports'], function (exports) {
  'use strict';

  exports.default = transformQuotedBindingsIntoJustBindings;
  function transformQuotedBindingsIntoJustBindings(env) {

    return {
      name: 'transform-quoted-bindings-into-just-bindings',

      visitors: {
        ElementNode: function (node) {
          var styleAttr = getStyleAttr(node);

          if (!validStyleAttr(styleAttr)) {
            return;
          }

          styleAttr.value = styleAttr.value.parts[0];
        }
      }
    };
  }

  function validStyleAttr(attr) {
    if (!attr) {
      return false;
    }

    var value = attr.value;

    if (!value || value.type !== 'ConcatStatement' || value.parts.length !== 1) {
      return false;
    }

    var onlyPart = value.parts[0];

    return onlyPart.type === 'MustacheStatement';
  }

  function getStyleAttr(node) {
    var attributes = node.attributes;

    for (var i = 0; i < attributes.length; i++) {
      if (attributes[i].name === 'style') {
        return attributes[i];
      }
    }
  }
});
enifed('ember-template-compiler/plugins/transform-top-level-components', ['exports'], function (exports) {
  'use strict';

  exports.default = transformTopLevelComponent;
  function transformTopLevelComponent(env) {
    return {
      name: 'transform-top-level-component',

      visitors: {
        Program: function (node) {
          hasSingleComponentNode(node, function (component) {
            component.tag = '@' + component.tag;
            component.isStatic = true;
          });
        }
      }
    };
  }

  function hasSingleComponentNode(program, componentCallback) {
    var loc = program.loc,
        body = program.body;

    if (!loc || loc.start.line !== 1 || loc.start.column !== 0) {
      return;
    }

    var lastComponentNode = void 0;
    var nodeCount = 0;

    for (var i = 0; i < body.length; i++) {
      var curr = body[i];

      // text node with whitespace only
      if (curr.type === 'TextNode' && /^[\s]*$/.test(curr.chars)) {
        continue;
      }

      // has multiple root elements if we've been here before
      if (nodeCount++ > 0) {
        return false;
      }

      if (curr.type === 'ComponentNode' || curr.type === 'ElementNode') {
        lastComponentNode = curr;
      }
    }

    if (!lastComponentNode) {
      return;
    }

    if (lastComponentNode.type === 'ComponentNode') {
      componentCallback(lastComponentNode);
    }
  }
});
enifed('ember-template-compiler/system/bootstrap', ['exports', 'ember-debug', 'ember-template-compiler/system/compile'], function (exports, _emberDebug, _compile) {
  'use strict';

  /**
    Find templates stored in the head tag as script tags and make them available
    to `Ember.CoreView` in the global `Ember.TEMPLATES` object.
  
    Script tags with `text/x-handlebars` will be compiled
    with Ember's template compiler and are suitable for use as a view's template.
  
    @private
    @method bootstrap
    @for Ember.HTMLBars
    @static
    @param ctx
  */
  /**
  @module ember
  */

  function bootstrap(_ref) {
    var context = _ref.context,
        hasTemplate = _ref.hasTemplate,
        setTemplate = _ref.setTemplate;

    if (!context) {
      context = document;
    }

    var selector = 'script[type="text/x-handlebars"]';

    var elements = context.querySelectorAll(selector);

    for (var i = 0; i < elements.length; i++) {
      var script = elements[i];

      // Get the name of the script
      // First look for data-template-name attribute, then fall back to its
      // id if no name is found.
      var templateName = script.getAttribute('data-template-name') || script.getAttribute('id') || 'application';
      var template = void 0;

      template = (0, _compile.default)(script.innerHTML, {
        moduleName: templateName
      });

      // Check if template of same name already exists.
      if (hasTemplate(templateName)) {
        throw new _emberDebug.Error('Template named "' + templateName + '" already exists.');
      }

      // For templates which have a name, we save them and then remove them from the DOM.
      setTemplate(templateName, template);

      // Remove script tag from DOM.
      script.parentNode.removeChild(script);
    }
  }

  exports.default = bootstrap;
});
enifed('ember-template-compiler/system/calculate-location-display', ['exports'], function (exports) {
  'use strict';

  exports.default = calculateLocationDisplay;
  function calculateLocationDisplay(moduleName) {
    var loc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var _ref = loc.start || {},
        column = _ref.column,
        line = _ref.line;

    var moduleInfo = '';
    if (moduleName) {
      moduleInfo += '\'' + moduleName + '\' ';
    }

    if (line !== undefined && column !== undefined) {
      if (moduleName) {
        // only prepend @ if the moduleName was present
        moduleInfo += '@ ';
      }
      moduleInfo += 'L' + line + ':C' + column;
    }

    if (moduleInfo) {
      moduleInfo = '(' + moduleInfo + ') ';
    }

    return moduleInfo;
  }
});
enifed('ember-template-compiler/system/compile-options', ['exports', 'ember-utils', 'ember-template-compiler/plugins'], function (exports, _emberUtils, _plugins) {
  'use strict';

  exports.default = compileOptions;
  exports.registerPlugin = registerPlugin;
  exports.removePlugin = removePlugin;


  var USER_PLUGINS = [];

  function compileOptions(_options) {
    var options = (0, _emberUtils.assign)({ meta: {} }, _options);

    // move `moduleName` into `meta` property
    if (options.moduleName) {
      var meta = options.meta;
      meta.moduleName = options.moduleName;
    }

    if (!options.plugins) {
      options.plugins = { ast: [].concat(USER_PLUGINS, _plugins.default) };
    } else {
      var potententialPugins = [].concat(USER_PLUGINS, _plugins.default);
      var pluginsToAdd = potententialPugins.filter(function (plugin) {
        return options.plugins.ast.indexOf(plugin) === -1;
      });
      options.plugins.ast = options.plugins.ast.slice().concat(pluginsToAdd);
    }

    return options;
  }

  function registerPlugin(type, _plugin) {
    if (type !== 'ast') {
      throw new Error('Attempting to register ' + _plugin + ' as "' + type + '" which is not a valid Glimmer plugin type.');
    }

    var plugin = void 0;
    if (_plugin.prototype && _plugin.prototype.transform) {
      plugin = function (env) {
        return {
          name: _plugin.constructor && _plugin.constructor.name,

          visitors: {
            Program: function (node) {
              var plugin = new _plugin(env);

              plugin.syntax = env.syntax;

              return plugin.transform(node);
            }
          }
        };
      };
    } else {
      plugin = _plugin;
    }

    USER_PLUGINS = [plugin].concat(USER_PLUGINS);
  }

  function removePlugin(type, PluginClass) {
    if (type !== 'ast') {
      throw new Error('Attempting to unregister ' + PluginClass + ' as "' + type + '" which is not a valid Glimmer plugin type.');
    }

    USER_PLUGINS = USER_PLUGINS.filter(function (plugin) {
      return plugin !== PluginClass;
    });
  }
});
enifed('ember-template-compiler/system/compile', ['exports', 'require', 'ember-template-compiler/system/precompile'], function (exports, _require2, _precompile) {
  'use strict';

  exports.default = compile;
  /**
  @module ember
  */
  var template = void 0;

  /**
    Uses HTMLBars `compile` function to process a string into a compiled template.
  
    This is not present in production builds.
  
    @private
    @method compile
    @param {String} templateString This is the string to be compiled by HTMLBars.
    @param {Object} options This is an options hash to augment the compiler options.
  */
  function compile(templateString, options) {
    if (!template && (0, _require2.has)('ember-glimmer')) {
      template = (0, _require2.default)('ember-glimmer').template;
    }

    if (!template) {
      throw new Error('Cannot call `compile` with only the template compiler loaded. Please load `ember.debug.js` or `ember.prod.js` prior to calling `compile`.');
    }

    var precompiledTemplateString = (0, _precompile.default)(templateString, options);
    var templateJS = new Function('return ' + precompiledTemplateString)();
    return template(templateJS);
  }
});
enifed('ember-template-compiler/system/precompile', ['exports', 'ember-template-compiler/system/compile-options', 'require'], function (exports, _compileOptions, _require2) {
  'use strict';

  exports.default = precompile;
  /**
  @module ember
  */

  var glimmerPrecompile = void 0;

  /**
    Uses HTMLBars `compile` function to process a string into a compiled template string.
    The returned string must be passed through `Ember.HTMLBars.template`.
  
    This is not present in production builds.
  
    @private
    @method precompile
    @param {String} templateString This is the string to be compiled by HTMLBars.
  */
  function precompile(templateString, options) {
    if (!glimmerPrecompile && (0, _require2.has)('@glimmer/compiler')) {
      glimmerPrecompile = (0, _require2.default)('@glimmer/compiler').precompile;
    }

    if (!glimmerPrecompile) {
      throw new Error('Cannot call `compile` without the template compiler loaded. Please load `ember-template-compiler.js` prior to calling `compile`.');
    }

    return glimmerPrecompile(templateString, (0, _compileOptions.default)(options));
  }
});
enifed('ember-testing/adapters/adapter', ['exports', 'ember-runtime'], function (exports, _emberRuntime) {
  'use strict';

  function K() {
    return this;
  }

  /**
   @module @ember/test
  */

  /**
    The primary purpose of this class is to create hooks that can be implemented
    by an adapter for various test frameworks.
  
    @class Adapter
    @public
  */
  exports.default = _emberRuntime.Object.extend({
    /**
      This callback will be called whenever an async operation is about to start.
       Override this to call your framework's methods that handle async
      operations.
       @public
      @method asyncStart
    */
    asyncStart: K,

    /**
      This callback will be called whenever an async operation has completed.
       @public
      @method asyncEnd
    */
    asyncEnd: K,

    /**
      Override this method with your testing framework's false assertion.
      This function is called whenever an exception occurs causing the testing
      promise to fail.
       QUnit example:
       ```javascript
        exception: function(error) {
          ok(false, error);
        };
      ```
       @public
      @method exception
      @param {String} error The exception to be raised.
    */
    exception: function (error) {
      throw error;
    }
  });
});
enifed('ember-testing/adapters/qunit', ['exports', 'ember-utils', 'ember-testing/adapters/adapter'], function (exports, _emberUtils, _adapter) {
  'use strict';

  exports.default = _adapter.default.extend({
    asyncStart: function () {
      QUnit.stop();
    },
    asyncEnd: function () {
      QUnit.start();
    },
    exception: function (error) {
      ok(false, (0, _emberUtils.inspect)(error));
    }
  });
});
enifed('ember-testing/events', ['exports', 'ember-views', 'ember-metal'], function (exports, _emberViews, _emberMetal) {
  'use strict';

  exports.focus = focus;
  exports.fireEvent = fireEvent;


  var DEFAULT_EVENT_OPTIONS = { canBubble: true, cancelable: true };
  var KEYBOARD_EVENT_TYPES = ['keydown', 'keypress', 'keyup'];
  var MOUSE_EVENT_TYPES = ['click', 'mousedown', 'mouseup', 'dblclick', 'mouseenter', 'mouseleave', 'mousemove', 'mouseout', 'mouseover'];

  function focus(el) {
    if (!el) {
      return;
    }
    var $el = (0, _emberViews.jQuery)(el);
    if ($el.is(':input, [contenteditable=true]')) {
      var type = $el.prop('type');
      if (type !== 'checkbox' && type !== 'radio' && type !== 'hidden') {
        (0, _emberMetal.run)(null, function () {
          // Firefox does not trigger the `focusin` event if the window
          // does not have focus. If the document doesn't have focus just
          // use trigger('focusin') instead.

          if (!document.hasFocus || document.hasFocus()) {
            el.focus();
          } else {
            $el.trigger('focusin');
          }
        });
      }
    }
  }

  function fireEvent(element, type) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!element) {
      return;
    }
    var event = void 0;
    if (KEYBOARD_EVENT_TYPES.indexOf(type) > -1) {
      event = buildKeyboardEvent(type, options);
    } else if (MOUSE_EVENT_TYPES.indexOf(type) > -1) {
      var rect = element.getBoundingClientRect();
      var x = rect.left + 1;
      var y = rect.top + 1;
      var simulatedCoordinates = {
        screenX: x + 5,
        screenY: y + 95,
        clientX: x,
        clientY: y
      };
      event = buildMouseEvent(type, _emberViews.jQuery.extend(simulatedCoordinates, options));
    } else {
      event = buildBasicEvent(type, options);
    }
    element.dispatchEvent(event);
  }

  function buildBasicEvent(type) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var event = document.createEvent('Events');
    event.initEvent(type, true, true);
    _emberViews.jQuery.extend(event, options);
    return event;
  }

  function buildMouseEvent(type) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var event = void 0;
    try {
      event = document.createEvent('MouseEvents');
      var eventOpts = _emberViews.jQuery.extend({}, DEFAULT_EVENT_OPTIONS, options);
      event.initMouseEvent(type, eventOpts.canBubble, eventOpts.cancelable, window, eventOpts.detail, eventOpts.screenX, eventOpts.screenY, eventOpts.clientX, eventOpts.clientY, eventOpts.ctrlKey, eventOpts.altKey, eventOpts.shiftKey, eventOpts.metaKey, eventOpts.button, eventOpts.relatedTarget);
    } catch (e) {
      event = buildBasicEvent(type, options);
    }
    return event;
  }

  function buildKeyboardEvent(type) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var event = void 0;
    try {
      event = document.createEvent('KeyEvents');
      var eventOpts = _emberViews.jQuery.extend({}, DEFAULT_EVENT_OPTIONS, options);
      event.initKeyEvent(type, eventOpts.canBubble, eventOpts.cancelable, window, eventOpts.ctrlKey, eventOpts.altKey, eventOpts.shiftKey, eventOpts.metaKey, eventOpts.keyCode, eventOpts.charCode);
    } catch (e) {
      event = buildBasicEvent(type, options);
    }
    return event;
  }
});
enifed('ember-testing/ext/application', ['ember-application', 'ember-testing/setup_for_testing', 'ember-testing/test/helpers', 'ember-testing/test/promise', 'ember-testing/test/run', 'ember-testing/test/on_inject_helpers', 'ember-testing/test/adapter'], function (_emberApplication, _setup_for_testing, _helpers, _promise, _run, _on_inject_helpers, _adapter) {
  'use strict';

  _emberApplication.Application.reopen({
    /**
     This property contains the testing helpers for the current application. These
     are created once you call `injectTestHelpers` on your `Ember.Application`
     instance. The included helpers are also available on the `window` object by
     default, but can be used from this object on the individual application also.
       @property testHelpers
      @type {Object}
      @default {}
      @public
    */
    testHelpers: {},

    /**
     This property will contain the original methods that were registered
     on the `helperContainer` before `injectTestHelpers` is called.
      When `removeTestHelpers` is called, these methods are restored to the
     `helperContainer`.
       @property originalMethods
      @type {Object}
      @default {}
      @private
      @since 1.3.0
    */
    originalMethods: {},

    /**
    This property indicates whether or not this application is currently in
    testing mode. This is set when `setupForTesting` is called on the current
    application.
     @property testing
    @type {Boolean}
    @default false
    @since 1.3.0
    @public
    */
    testing: false,

    setupForTesting: function () {
      (0, _setup_for_testing.default)();

      this.testing = true;

      this.resolveRegistration('router:main').reopen({
        location: 'none'
      });
    },


    /**
      This will be used as the container to inject the test helpers into. By
      default the helpers are injected into `window`.
       @property helperContainer
      @type {Object} The object to be used for test helpers.
      @default window
      @since 1.2.0
      @private
    */
    helperContainer: null,

    injectTestHelpers: function (helperContainer) {
      if (helperContainer) {
        this.helperContainer = helperContainer;
      } else {
        this.helperContainer = window;
      }

      this.reopen({
        willDestroy: function () {
          this._super.apply(this, arguments);
          this.removeTestHelpers();
        }
      });

      this.testHelpers = {};
      for (var name in _helpers.helpers) {
        this.originalMethods[name] = this.helperContainer[name];
        this.testHelpers[name] = this.helperContainer[name] = helper(this, name);
        protoWrap(_promise.default.prototype, name, helper(this, name), _helpers.helpers[name].meta.wait);
      }

      (0, _on_inject_helpers.invokeInjectHelpersCallbacks)(this);
    },
    removeTestHelpers: function () {
      if (!this.helperContainer) {
        return;
      }

      for (var name in _helpers.helpers) {
        this.helperContainer[name] = this.originalMethods[name];
        delete _promise.default.prototype[name];
        delete this.testHelpers[name];
        delete this.originalMethods[name];
      }
    }
  });

  // This method is no longer needed
  // But still here for backwards compatibility
  // of helper chaining
  function protoWrap(proto, name, callback, isAsync) {
    proto[name] = function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (isAsync) {
        return callback.apply(this, args);
      } else {
        return this.then(function () {
          return callback.apply(this, args);
        });
      }
    };
  }

  function helper(app, name) {
    var fn = _helpers.helpers[name].method;
    var meta = _helpers.helpers[name].meta;
    if (!meta.wait) {
      return function () {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        return fn.apply(app, [app].concat(args));
      };
    }

    return function () {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastPromise = (0, _run.default)(function () {
        return (0, _promise.resolve)((0, _promise.getLastPromise)());
      });

      // wait for last helper's promise to resolve and then
      // execute. To be safe, we need to tell the adapter we're going
      // asynchronous here, because fn may not be invoked before we
      // return.
      (0, _adapter.asyncStart)();
      return lastPromise.then(function () {
        return fn.apply(app, [app].concat(args));
      }).finally(_adapter.asyncEnd);
    };
  }
});
enifed('ember-testing/ext/rsvp', ['exports', 'ember-runtime', 'ember-metal', 'ember-debug', 'ember-testing/test/adapter'], function (exports, _emberRuntime, _emberMetal, _emberDebug, _adapter) {
  'use strict';

  _emberRuntime.RSVP.configure('async', function (callback, promise) {
    // if schedule will cause autorun, we need to inform adapter
    if ((0, _emberDebug.isTesting)() && !_emberMetal.run.backburner.currentInstance) {
      (0, _adapter.asyncStart)();
      _emberMetal.run.backburner.schedule('actions', function () {
        (0, _adapter.asyncEnd)();
        callback(promise);
      });
    } else {
      _emberMetal.run.backburner.schedule('actions', function () {
        return callback(promise);
      });
    }
  });

  exports.default = _emberRuntime.RSVP;
});
enifed('ember-testing/helpers', ['ember-testing/test/helpers', 'ember-testing/helpers/and_then', 'ember-testing/helpers/click', 'ember-testing/helpers/current_path', 'ember-testing/helpers/current_route_name', 'ember-testing/helpers/current_url', 'ember-testing/helpers/fill_in', 'ember-testing/helpers/find', 'ember-testing/helpers/find_with_assert', 'ember-testing/helpers/key_event', 'ember-testing/helpers/pause_test', 'ember-testing/helpers/trigger_event', 'ember-testing/helpers/visit', 'ember-testing/helpers/wait'], function (_helpers, _and_then, _click, _current_path, _current_route_name, _current_url, _fill_in, _find, _find_with_assert, _key_event, _pause_test, _trigger_event, _visit, _wait) {
  'use strict';

  (0, _helpers.registerAsyncHelper)('visit', _visit.default);
  (0, _helpers.registerAsyncHelper)('click', _click.default);
  (0, _helpers.registerAsyncHelper)('keyEvent', _key_event.default);
  (0, _helpers.registerAsyncHelper)('fillIn', _fill_in.default);
  (0, _helpers.registerAsyncHelper)('wait', _wait.default);
  (0, _helpers.registerAsyncHelper)('andThen', _and_then.default);
  (0, _helpers.registerAsyncHelper)('pauseTest', _pause_test.pauseTest);
  (0, _helpers.registerAsyncHelper)('triggerEvent', _trigger_event.default);

  (0, _helpers.registerHelper)('find', _find.default);
  (0, _helpers.registerHelper)('findWithAssert', _find_with_assert.default);
  (0, _helpers.registerHelper)('currentRouteName', _current_route_name.default);
  (0, _helpers.registerHelper)('currentPath', _current_path.default);
  (0, _helpers.registerHelper)('currentURL', _current_url.default);
  (0, _helpers.registerHelper)('resumeTest', _pause_test.resumeTest);
});
enifed("ember-testing/helpers/and_then", ["exports"], function (exports) {
  "use strict";

  exports.default = andThen;
  function andThen(app, callback) {
    return app.testHelpers.wait(callback(app));
  }
});
enifed('ember-testing/helpers/click', ['exports', 'ember-testing/events'], function (exports, _events) {
  'use strict';

  exports.default = click;


  /**
    Clicks an element and triggers any actions triggered by the element's `click`
    event.
  
    Example:
  
    ```javascript
    click('.some-jQuery-selector').then(function() {
      // assert something
    });
    ```
  
    @method click
    @param {String} selector jQuery selector for finding element on the DOM
    @param {Object} context A DOM Element, Document, or jQuery to use as context
    @return {RSVP.Promise<undefined>}
    @public
  */
  function click(app, selector, context) {
    var $el = app.testHelpers.findWithAssert(selector, context);
    var el = $el[0];

    (0, _events.fireEvent)(el, 'mousedown');

    (0, _events.focus)(el);

    (0, _events.fireEvent)(el, 'mouseup');
    (0, _events.fireEvent)(el, 'click');

    return app.testHelpers.wait();
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/current_path', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = currentPath;


  /**
    Returns the current path.
  
  Example:
  
  ```javascript
  function validateURL() {
    equal(currentPath(), 'some.path.index', "correct path was transitioned into.");
  }
  
  click('#some-link-id').then(validateURL);
  ```
  
  @method currentPath
  @return {Object} The currently active path.
  @since 1.5.0
  @public
  */
  function currentPath(app) {
    var routingService = app.__container__.lookup('service:-routing');
    return (0, _emberMetal.get)(routingService, 'currentPath');
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/current_route_name', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = currentRouteName;

  /**
    Returns the currently active route name.
  
  Example:
  
  ```javascript
  function validateRouteName() {
    equal(currentRouteName(), 'some.path', "correct route was transitioned into.");
  }
  visit('/some/path').then(validateRouteName)
  ```
  
  @method currentRouteName
  @return {Object} The name of the currently active route.
  @since 1.5.0
  @public
  */
  function currentRouteName(app) {
    var routingService = app.__container__.lookup('service:-routing');
    return (0, _emberMetal.get)(routingService, 'currentRouteName');
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/current_url', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = currentURL;


  /**
    Returns the current URL.
  
  Example:
  
  ```javascript
  function validateURL() {
    equal(currentURL(), '/some/path', "correct URL was transitioned into.");
  }
  
  click('#some-link-id').then(validateURL);
  ```
  
  @method currentURL
  @return {Object} The currently active URL.
  @since 1.5.0
  @public
  */
  function currentURL(app) {
    var router = app.__container__.lookup('router:main');
    return (0, _emberMetal.get)(router, 'location').getURL();
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/fill_in', ['exports', 'ember-testing/events'], function (exports, _events) {
  'use strict';

  exports.default = fillIn;


  /**
    Fills in an input element with some text.
  
    Example:
  
    ```javascript
    fillIn('#email', 'you@example.com').then(function() {
      // assert something
    });
    ```
  
    @method fillIn
    @param {String} selector jQuery selector finding an input element on the DOM
    to fill text with
    @param {String} text text to place inside the input element
    @return {RSVP.Promise<undefined>}
    @public
  */
  function fillIn(app, selector, contextOrText, text) {
    var $el = void 0,
        el = void 0,
        context = void 0;
    if (text === undefined) {
      text = contextOrText;
    } else {
      context = contextOrText;
    }
    $el = app.testHelpers.findWithAssert(selector, context);
    el = $el[0];
    (0, _events.focus)(el);

    $el.eq(0).val(text);
    (0, _events.fireEvent)(el, 'input');
    (0, _events.fireEvent)(el, 'change');

    return app.testHelpers.wait();
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/find', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = find;


  /**
    Finds an element in the context of the app's container element. A simple alias
    for `app.$(selector)`.
  
    Example:
  
    ```javascript
    var $el = find('.my-selector');
    ```
  
    With the `context` param:
  
    ```javascript
    var $el = find('.my-selector', '.parent-element-class');
    ```
  
    @method find
    @param {String} selector jQuery string selector for element lookup
    @param {String} [context] (optional) jQuery selector that will limit the selector
                              argument to find only within the context's children
    @return {Object} jQuery object representing the results of the query
    @public
  */
  function find(app, selector, context) {
    var $el = void 0;
    context = context || (0, _emberMetal.get)(app, 'rootElement');
    $el = app.$(selector, context);
    return $el;
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/find_with_assert', ['exports'], function (exports) {
  'use strict';

  exports.default = findWithAssert;
  /**
  @module ember
  */
  /**
    Like `find`, but throws an error if the element selector returns no results.
  
    Example:
  
    ```javascript
    var $el = findWithAssert('.doesnt-exist'); // throws error
    ```
  
    With the `context` param:
  
    ```javascript
    var $el = findWithAssert('.selector-id', '.parent-element-class'); // assert will pass
    ```
  
    @method findWithAssert
    @param {String} selector jQuery selector string for finding an element within
    the DOM
    @param {String} [context] (optional) jQuery selector that will limit the
    selector argument to find only within the context's children
    @return {Object} jQuery object representing the results of the query
    @throws {Error} throws error if jQuery object returned has a length of 0
    @public
  */
  function findWithAssert(app, selector, context) {
    var $el = app.testHelpers.find(selector, context);
    if ($el.length === 0) {
      throw new Error('Element ' + selector + ' not found.');
    }
    return $el;
  }
});
enifed("ember-testing/helpers/key_event", ["exports"], function (exports) {
  "use strict";

  exports.default = keyEvent;
  /**
  @module ember
  */
  /**
    Simulates a key event, e.g. `keypress`, `keydown`, `keyup` with the desired keyCode
    Example:
    ```javascript
    keyEvent('.some-jQuery-selector', 'keypress', 13).then(function() {
     // assert something
    });
    ```
    @method keyEvent
    @param {String} selector jQuery selector for finding element on the DOM
    @param {String} type the type of key event, e.g. `keypress`, `keydown`, `keyup`
    @param {Number} keyCode the keyCode of the simulated key event
    @return {RSVP.Promise<undefined>}
    @since 1.5.0
    @public
  */
  function keyEvent(app, selector, contextOrType, typeOrKeyCode, keyCode) {
    var context = void 0,
        type = void 0;

    if (keyCode === undefined) {
      context = null;
      keyCode = typeOrKeyCode;
      type = contextOrType;
    } else {
      context = contextOrType;
      type = typeOrKeyCode;
    }

    return app.testHelpers.triggerEvent(selector, context, type, { keyCode: keyCode, which: keyCode });
  }
});
enifed('ember-testing/helpers/pause_test', ['exports', 'ember-runtime', 'ember-console', 'ember-debug'], function (exports, _emberRuntime, _emberConsole, _emberDebug) {
  'use strict';

  exports.resumeTest = resumeTest;
  exports.pauseTest = pauseTest;


  var resume = void 0;

  /**
   Resumes a test paused by `pauseTest`.
  
   @method resumeTest
   @return {void}
   @public
  */
  /**
  @module ember
  */
  function resumeTest() {
    (true && !(resume) && (0, _emberDebug.assert)('Testing has not been paused. There is nothing to resume.', resume));

    resume();
    resume = undefined;
  }

  /**
   Pauses the current test - this is useful for debugging while testing or for test-driving.
   It allows you to inspect the state of your application at any point.
   Example (The test will pause before clicking the button):
  
   ```javascript
   visit('/')
   return pauseTest();
   click('.btn');
   ```
  
   You may want to turn off the timeout before pausing.
  
   qunit (as of 2.4.0):
  
   ```
   visit('/');
   assert.timeout(0);
   return pauseTest();
   click('.btn');
   ```
  
   mocha:
  
   ```
   visit('/');
   this.timeout(0);
   return pauseTest();
   click('.btn');
   ```
  
  
   @since 1.9.0
   @method pauseTest
   @return {Object} A promise that will never resolve
   @public
  */
  function pauseTest() {
    _emberConsole.default.info('Testing paused. Use `resumeTest()` to continue.');

    return new _emberRuntime.RSVP.Promise(function (resolve) {
      resume = resolve;
    }, 'TestAdapter paused promise');
  }
});
enifed('ember-testing/helpers/trigger_event', ['exports', 'ember-testing/events'], function (exports, _events) {
  'use strict';

  exports.default = triggerEvent;

  /**
    Triggers the given DOM event on the element identified by the provided selector.
    Example:
    ```javascript
    triggerEvent('#some-elem-id', 'blur');
    ```
    This is actually used internally by the `keyEvent` helper like so:
    ```javascript
    triggerEvent('#some-elem-id', 'keypress', { keyCode: 13 });
    ```
   @method triggerEvent
   @param {String} selector jQuery selector for finding element on the DOM
   @param {String} [context] jQuery selector that will limit the selector
                             argument to find only within the context's children
   @param {String} type The event type to be triggered.
   @param {Object} [options] The options to be passed to jQuery.Event.
   @return {RSVP.Promise<undefined>}
   @since 1.5.0
   @public
  */
  function triggerEvent(app, selector, contextOrType, typeOrOptions, possibleOptions) {
    var arity = arguments.length;
    var context = void 0,
        type = void 0,
        options = void 0;

    if (arity === 3) {
      // context and options are optional, so this is
      // app, selector, type
      context = null;
      type = contextOrType;
      options = {};
    } else if (arity === 4) {
      // context and options are optional, so this is
      if (typeof typeOrOptions === 'object') {
        // either
        // app, selector, type, options
        context = null;
        type = contextOrType;
        options = typeOrOptions;
      } else {
        // or
        // app, selector, context, type
        context = contextOrType;
        type = typeOrOptions;
        options = {};
      }
    } else {
      context = contextOrType;
      type = typeOrOptions;
      options = possibleOptions;
    }

    var $el = app.testHelpers.findWithAssert(selector, context);
    var el = $el[0];

    (0, _events.fireEvent)(el, type, options);

    return app.testHelpers.wait();
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/visit', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = visit;


  /**
    Loads a route, sets up any controllers, and renders any templates associated
    with the route as though a real user had triggered the route change while
    using your app.
  
    Example:
  
    ```javascript
    visit('posts/index').then(function() {
      // assert something
    });
    ```
  
    @method visit
    @param {String} url the name of the route
    @return {RSVP.Promise<undefined>}
    @public
  */
  function visit(app, url) {
    var router = app.__container__.lookup('router:main');
    var shouldHandleURL = false;

    app.boot().then(function () {
      router.location.setURL(url);

      if (shouldHandleURL) {
        (0, _emberMetal.run)(app.__deprecatedInstance__, 'handleURL', url);
      }
    });

    if (app._readinessDeferrals > 0) {
      router['initialURL'] = url;
      (0, _emberMetal.run)(app, 'advanceReadiness');
      delete router['initialURL'];
    } else {
      shouldHandleURL = true;
    }

    return app.testHelpers.wait();
  } /**
    @module ember
    */
});
enifed('ember-testing/helpers/wait', ['exports', 'ember-testing/test/waiters', 'ember-runtime', 'ember-metal', 'ember-testing/test/pending_requests'], function (exports, _waiters, _emberRuntime, _emberMetal, _pending_requests) {
  'use strict';

  exports.default = wait;


  /**
    Causes the run loop to process any pending events. This is used to ensure that
    any async operations from other helpers (or your assertions) have been processed.
  
    This is most often used as the return value for the helper functions (see 'click',
    'fillIn','visit',etc). However, there is a method to register a test helper which
    utilizes this method without the need to actually call `wait()` in your helpers.
  
    The `wait` helper is built into `registerAsyncHelper` by default. You will not need
    to `return app.testHelpers.wait();` - the wait behavior is provided for you.
  
    Example:
  
    ```javascript
    Ember.Test.registerAsyncHelper('loginUser', function(app, username, password) {
      visit('secured/path/here')
        .fillIn('#username', username)
        .fillIn('#password', password)
        .click('.submit');
    });
    ```
  
    @method wait
    @param {Object} value The value to be returned.
    @return {RSVP.Promise<any>} Promise that resolves to the passed value.
    @public
    @since 1.0.0
  */
  /**
  @module ember
  */
  function wait(app, value) {
    return new _emberRuntime.RSVP.Promise(function (resolve) {
      var router = app.__container__.lookup('router:main');

      // Every 10ms, poll for the async thing to have finished
      var watcher = setInterval(function () {
        // 1. If the router is loading, keep polling
        var routerIsLoading = router._routerMicrolib && !!router._routerMicrolib.activeTransition;
        if (routerIsLoading) {
          return;
        }

        // 2. If there are pending Ajax requests, keep polling
        if ((0, _pending_requests.pendingRequests)()) {
          return;
        }

        // 3. If there are scheduled timers or we are inside of a run loop, keep polling
        if (_emberMetal.run.hasScheduledTimers() || _emberMetal.run.currentRunLoop) {
          return;
        }

        if ((0, _waiters.checkWaiters)()) {
          return;
        }

        // Stop polling
        clearInterval(watcher);

        // Synchronously resolve the promise
        (0, _emberMetal.run)(null, resolve, value);
      }, 10);
    });
  }
});
enifed('ember-testing/index', ['exports', 'ember-testing/test', 'ember-testing/adapters/adapter', 'ember-testing/setup_for_testing', 'ember-testing/adapters/qunit', 'ember-testing/support', 'ember-testing/ext/application', 'ember-testing/ext/rsvp', 'ember-testing/helpers', 'ember-testing/initializers'], function (exports, _test, _adapter, _setup_for_testing, _qunit) {
  'use strict';

  exports.QUnitAdapter = exports.setupForTesting = exports.Adapter = exports.Test = undefined;
  Object.defineProperty(exports, 'Test', {
    enumerable: true,
    get: function () {
      return _test.default;
    }
  });
  Object.defineProperty(exports, 'Adapter', {
    enumerable: true,
    get: function () {
      return _adapter.default;
    }
  });
  Object.defineProperty(exports, 'setupForTesting', {
    enumerable: true,
    get: function () {
      return _setup_for_testing.default;
    }
  });
  Object.defineProperty(exports, 'QUnitAdapter', {
    enumerable: true,
    get: function () {
      return _qunit.default;
    }
  });
});
enifed('ember-testing/initializers', ['ember-runtime'], function (_emberRuntime) {
  'use strict';

  var name = 'deferReadiness in `testing` mode';

  (0, _emberRuntime.onLoad)('Ember.Application', function (Application) {
    if (!Application.initializers[name]) {
      Application.initializer({
        name: name,

        initialize: function (application) {
          if (application.testing) {
            application.deferReadiness();
          }
        }
      });
    }
  });
});
enifed('ember-testing/setup_for_testing', ['exports', 'ember-debug', 'ember-views', 'ember-testing/test/adapter', 'ember-testing/test/pending_requests', 'ember-testing/adapters/adapter', 'ember-testing/adapters/qunit'], function (exports, _emberDebug, _emberViews, _adapter, _pending_requests, _adapter2, _qunit) {
  'use strict';

  exports.default = setupForTesting;


  /**
    Sets Ember up for testing. This is useful to perform
    basic setup steps in order to unit test.
  
    Use `App.setupForTesting` to perform integration tests (full
    application testing).
  
    @method setupForTesting
    @namespace Ember
    @since 1.5.0
    @private
  */
  /* global self */

  function setupForTesting() {
    (0, _emberDebug.setTesting)(true);

    var adapter = (0, _adapter.getAdapter)();
    // if adapter is not manually set default to QUnit
    if (!adapter) {
      (0, _adapter.setAdapter)(typeof self.QUnit === 'undefined' ? new _adapter2.default() : new _qunit.default());
    }

    if (_emberViews.jQuery) {
      (0, _emberViews.jQuery)(document).off('ajaxSend', _pending_requests.incrementPendingRequests);
      (0, _emberViews.jQuery)(document).off('ajaxComplete', _pending_requests.decrementPendingRequests);

      (0, _pending_requests.clearPendingRequests)();

      (0, _emberViews.jQuery)(document).on('ajaxSend', _pending_requests.incrementPendingRequests);
      (0, _emberViews.jQuery)(document).on('ajaxComplete', _pending_requests.decrementPendingRequests);
    }
  }
});
enifed('ember-testing/support', ['ember-debug', 'ember-views', 'ember-environment'], function (_emberDebug, _emberViews, _emberEnvironment) {
  'use strict';

  /**
    @module ember
  */

  var $ = _emberViews.jQuery;

  /**
    This method creates a checkbox and triggers the click event to fire the
    passed in handler. It is used to correct for a bug in older versions
    of jQuery (e.g 1.8.3).
  
    @private
    @method testCheckboxClick
  */
  function testCheckboxClick(handler) {
    var input = document.createElement('input');
    $(input).attr('type', 'checkbox').css({ position: 'absolute', left: '-1000px', top: '-1000px' }).appendTo('body').on('click', handler).trigger('click').remove();
  }

  if (_emberEnvironment.environment.hasDOM && typeof $ === 'function') {
    $(function () {
      /*
        Determine whether a checkbox checked using jQuery's "click" method will have
        the correct value for its checked property.
         If we determine that the current jQuery version exhibits this behavior,
        patch it to work correctly as in the commit for the actual fix:
        https://github.com/jquery/jquery/commit/1fb2f92.
      */
      testCheckboxClick(function () {
        if (!this.checked && !$.event.special.click) {
          $.event.special.click = {
            trigger: function () {
              if ($.nodeName(this, 'input') && this.type === 'checkbox' && this.click) {
                this.click();
                return false;
              }
            }
          };
        }
      });

      // Try again to verify that the patch took effect or blow up.
      testCheckboxClick(function () {
        (true && (0, _emberDebug.warn)('clicked checkboxes should be checked! the jQuery patch didn\'t work', this.checked, { id: 'ember-testing.test-checkbox-click' }));
      });
    });
  }
});
enifed('ember-testing/test', ['exports', 'ember-testing/test/helpers', 'ember-testing/test/on_inject_helpers', 'ember-testing/test/promise', 'ember-testing/test/waiters', 'ember-testing/test/adapter'], function (exports, _helpers, _on_inject_helpers, _promise, _waiters, _adapter) {
  'use strict';

  /**
    This is a container for an assortment of testing related functionality:
  
    * Choose your default test adapter (for your framework of choice).
    * Register/Unregister additional test helpers.
    * Setup callbacks to be fired when the test helpers are injected into
      your application.
  
    @class Test
    @namespace Ember
    @public
  */
  var Test = {
    /**
      Hash containing all known test helpers.
       @property _helpers
      @private
      @since 1.7.0
    */
    _helpers: _helpers.helpers,

    registerHelper: _helpers.registerHelper,
    registerAsyncHelper: _helpers.registerAsyncHelper,
    unregisterHelper: _helpers.unregisterHelper,
    onInjectHelpers: _on_inject_helpers.onInjectHelpers,
    Promise: _promise.default,
    promise: _promise.promise,
    resolve: _promise.resolve,
    registerWaiter: _waiters.registerWaiter,
    unregisterWaiter: _waiters.unregisterWaiter,
    checkWaiters: _waiters.checkWaiters
  };

  /**
   Used to allow ember-testing to communicate with a specific testing
   framework.
  
   You can manually set it before calling `App.setupForTesting()`.
  
   Example:
  
   ```javascript
   Ember.Test.adapter = MyCustomAdapter.create()
   ```
  
   If you do not set it, ember-testing will default to `Ember.Test.QUnitAdapter`.
  
   @public
   @for Ember.Test
   @property adapter
   @type {Class} The adapter to be used.
   @default Ember.Test.QUnitAdapter
  */
  /**
    @module ember
  */
  Object.defineProperty(Test, 'adapter', {
    get: _adapter.getAdapter,
    set: _adapter.setAdapter
  });

  exports.default = Test;
});
enifed('ember-testing/test/adapter', ['exports', 'ember-console', 'ember-metal'], function (exports, _emberConsole, _emberMetal) {
  'use strict';

  exports.getAdapter = getAdapter;
  exports.setAdapter = setAdapter;
  exports.asyncStart = asyncStart;
  exports.asyncEnd = asyncEnd;


  var adapter = void 0;
  function getAdapter() {
    return adapter;
  }

  function setAdapter(value) {
    adapter = value;
    if (value) {
      (0, _emberMetal.setDispatchOverride)(adapterDispatch);
    } else {
      (0, _emberMetal.setDispatchOverride)(null);
    }
  }

  function asyncStart() {
    if (adapter) {
      adapter.asyncStart();
    }
  }

  function asyncEnd() {
    if (adapter) {
      adapter.asyncEnd();
    }
  }

  function adapterDispatch(error) {
    adapter.exception(error);
    _emberConsole.default.error(error.stack);
  }
});
enifed('ember-testing/test/helpers', ['exports', 'ember-testing/test/promise'], function (exports, _promise) {
  'use strict';

  exports.helpers = undefined;
  exports.registerHelper = registerHelper;
  exports.registerAsyncHelper = registerAsyncHelper;
  exports.unregisterHelper = unregisterHelper;
  var helpers = exports.helpers = {};
  /**
   @module @ember/test
  */

  /**
    `registerHelper` is used to register a test helper that will be injected
    when `App.injectTestHelpers` is called.
  
    The helper method will always be called with the current Application as
    the first parameter.
  
    For example:
  
    ```javascript
    Ember.Test.registerHelper('boot', function(app) {
      Ember.run(app, app.advanceReadiness);
    });
    ```
  
    This helper can later be called without arguments because it will be
    called with `app` as the first parameter.
  
    ```javascript
    App = Ember.Application.create();
    App.injectTestHelpers();
    boot();
    ```
  
    @public
    @for @ember/test
    @static
    @method registerHelper
    @param {String} name The name of the helper method to add.
    @param {Function} helperMethod
    @param options {Object}
  */
  function registerHelper(name, helperMethod) {
    helpers[name] = {
      method: helperMethod,
      meta: { wait: false }
    };
  }

  /**
    `registerAsyncHelper` is used to register an async test helper that will be injected
    when `App.injectTestHelpers` is called.
  
    The helper method will always be called with the current Application as
    the first parameter.
  
    For example:
  
    ```javascript
    Ember.Test.registerAsyncHelper('boot', function(app) {
      Ember.run(app, app.advanceReadiness);
    });
    ```
  
    The advantage of an async helper is that it will not run
    until the last async helper has completed.  All async helpers
    after it will wait for it complete before running.
  
  
    For example:
  
    ```javascript
    Ember.Test.registerAsyncHelper('deletePost', function(app, postId) {
      click('.delete-' + postId);
    });
  
    // ... in your test
    visit('/post/2');
    deletePost(2);
    visit('/post/3');
    deletePost(3);
    ```
  
    @public
    @for @ember/test
    @method registerAsyncHelper
    @param {String} name The name of the helper method to add.
    @param {Function} helperMethod
    @since 1.2.0
  */
  function registerAsyncHelper(name, helperMethod) {
    helpers[name] = {
      method: helperMethod,
      meta: { wait: true }
    };
  }

  /**
    Remove a previously added helper method.
  
    Example:
  
    ```javascript
    Ember.Test.unregisterHelper('wait');
    ```
  
    @public
    @method unregisterHelper
    @static
    @for @ember/test
    @param {String} name The helper to remove.
  */
  function unregisterHelper(name) {
    delete helpers[name];
    delete _promise.default.prototype[name];
  }
});
enifed("ember-testing/test/on_inject_helpers", ["exports"], function (exports) {
  "use strict";

  exports.onInjectHelpers = onInjectHelpers;
  exports.invokeInjectHelpersCallbacks = invokeInjectHelpersCallbacks;
  var callbacks = exports.callbacks = [];

  /**
    Used to register callbacks to be fired whenever `App.injectTestHelpers`
    is called.
  
    The callback will receive the current application as an argument.
  
    Example:
  
    ```javascript
    Ember.Test.onInjectHelpers(function() {
      Ember.$(document).ajaxSend(function() {
        Test.pendingRequests++;
      });
  
      Ember.$(document).ajaxComplete(function() {
        Test.pendingRequests--;
      });
    });
    ```
  
    @public
    @for Ember.Test
    @method onInjectHelpers
    @param {Function} callback The function to be called.
  */
  function onInjectHelpers(callback) {
    callbacks.push(callback);
  }

  function invokeInjectHelpersCallbacks(app) {
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i](app);
    }
  }
});
enifed("ember-testing/test/pending_requests", ["exports"], function (exports) {
  "use strict";

  exports.pendingRequests = pendingRequests;
  exports.clearPendingRequests = clearPendingRequests;
  exports.incrementPendingRequests = incrementPendingRequests;
  exports.decrementPendingRequests = decrementPendingRequests;
  var requests = [];

  function pendingRequests() {
    return requests.length;
  }

  function clearPendingRequests() {
    requests.length = 0;
  }

  function incrementPendingRequests(_, xhr) {
    requests.push(xhr);
  }

  function decrementPendingRequests(_, xhr) {
    for (var i = 0; i < requests.length; i++) {
      if (xhr === requests[i]) {
        requests.splice(i, 1);
        break;
      }
    }
  }
});
enifed('ember-testing/test/promise', ['exports', 'ember-babel', 'ember-runtime', 'ember-testing/test/run'], function (exports, _emberBabel, _emberRuntime, _run) {
  'use strict';

  exports.promise = promise;
  exports.resolve = resolve;
  exports.getLastPromise = getLastPromise;


  var lastPromise = void 0;

  var TestPromise = function (_RSVP$Promise) {
    (0, _emberBabel.inherits)(TestPromise, _RSVP$Promise);

    function TestPromise() {
      (0, _emberBabel.classCallCheck)(this, TestPromise);

      var _this = (0, _emberBabel.possibleConstructorReturn)(this, _RSVP$Promise.apply(this, arguments));

      lastPromise = _this;
      return _this;
    }

    TestPromise.prototype.then = function then(_onFulfillment) {
      var _RSVP$Promise$prototy;

      var onFulfillment = typeof _onFulfillment === 'function' ? function (result) {
        return isolate(_onFulfillment, result);
      } : undefined;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return (_RSVP$Promise$prototy = _RSVP$Promise.prototype.then).call.apply(_RSVP$Promise$prototy, [this, onFulfillment].concat(args));
    };

    return TestPromise;
  }(_emberRuntime.RSVP.Promise);

  exports.default = TestPromise;


  /**
    This returns a thenable tailored for testing.  It catches failed
    `onSuccess` callbacks and invokes the `Ember.Test.adapter.exception`
    callback in the last chained then.
  
    This method should be returned by async helpers such as `wait`.
  
    @public
    @for Ember.Test
    @method promise
    @param {Function} resolver The function used to resolve the promise.
    @param {String} label An optional string for identifying the promise.
  */
  function promise(resolver, label) {
    var fullLabel = 'Ember.Test.promise: ' + (label || '<Unknown Promise>');
    return new TestPromise(resolver, fullLabel);
  }

  /**
    Replacement for `Ember.RSVP.resolve`
    The only difference is this uses
    an instance of `Ember.Test.Promise`
  
    @public
    @for Ember.Test
    @method resolve
    @param {Mixed} The value to resolve
    @since 1.2.0
  */
  function resolve(result, label) {
    return TestPromise.resolve(result, label);
  }

  function getLastPromise() {
    return lastPromise;
  }

  // This method isolates nested async methods
  // so that they don't conflict with other last promises.
  //
  // 1. Set `Ember.Test.lastPromise` to null
  // 2. Invoke method
  // 3. Return the last promise created during method
  function isolate(onFulfillment, result) {
    // Reset lastPromise for nested helpers
    lastPromise = null;

    var value = onFulfillment(result);

    var promise = lastPromise;
    lastPromise = null;

    // If the method returned a promise
    // return that promise. If not,
    // return the last async helper's promise
    if (value && value instanceof TestPromise || !promise) {
      return value;
    } else {
      return (0, _run.default)(function () {
        return resolve(promise).then(function () {
          return value;
        });
      });
    }
  }
});
enifed('ember-testing/test/run', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = run;
  function run(fn) {
    if (!_emberMetal.run.currentRunLoop) {
      return (0, _emberMetal.run)(fn);
    } else {
      return fn();
    }
  }
});
enifed('ember-testing/test/waiters', ['exports', 'ember-debug'], function (exports, _emberDebug) {
  'use strict';

  exports.registerWaiter = registerWaiter;
  exports.unregisterWaiter = unregisterWaiter;
  exports.checkWaiters = checkWaiters;


  /**
   @module @ember/test
  */
  var contexts = [];
  var callbacks = [];

  /**
     This allows ember-testing to play nicely with other asynchronous
     events, such as an application that is waiting for a CSS3
     transition or an IndexDB transaction. The waiter runs periodically
     after each async helper (i.e. `click`, `andThen`, `visit`, etc) has executed,
     until the returning result is truthy. After the waiters finish, the next async helper
     is executed and the process repeats.
  
     For example:
  
     ```javascript
     Ember.Test.registerWaiter(function() {
       return myPendingTransactions() == 0;
     });
     ```
     The `context` argument allows you to optionally specify the `this`
     with which your callback will be invoked.
  
     For example:
  
     ```javascript
     Ember.Test.registerWaiter(MyDB, MyDB.hasPendingTransactions);
     ```
  
     @public
     @for @ember/test
     @static
     @method registerWaiter
     @param {Object} context (optional)
     @param {Function} callback
     @since 1.2.0
  */
  function registerWaiter(context, callback) {
    if (arguments.length === 1) {
      callback = context;
      context = null;
    }
    if (indexOf(context, callback) > -1) {
      return;
    }
    contexts.push(context);
    callbacks.push(callback);
  }

  /**
     `unregisterWaiter` is used to unregister a callback that was
     registered with `registerWaiter`.
  
     @public
     @for @ember/test
     @static
     @method unregisterWaiter
     @param {Object} context (optional)
     @param {Function} callback
     @since 1.2.0
  */
  function unregisterWaiter(context, callback) {
    if (!callbacks.length) {
      return;
    }
    if (arguments.length === 1) {
      callback = context;
      context = null;
    }
    var i = indexOf(context, callback);
    if (i === -1) {
      return;
    }
    contexts.splice(i, 1);
    callbacks.splice(i, 1);
  }

  /**
    Iterates through each registered test waiter, and invokes
    its callback. If any waiter returns false, this method will return
    true indicating that the waiters have not settled yet.
  
    This is generally used internally from the acceptance/integration test
    infrastructure.
  
    @public
    @for @ember/test
    @static
    @method checkWaiters
  */
  function checkWaiters() {
    if (!callbacks.length) {
      return false;
    }
    for (var i = 0; i < callbacks.length; i++) {
      var context = contexts[i];
      var callback = callbacks[i];
      if (!callback.call(context)) {
        return true;
      }
    }
    return false;
  }

  function indexOf(context, callback) {
    for (var i = 0; i < callbacks.length; i++) {
      if (callbacks[i] === callback && contexts[i] === context) {
        return i;
      }
    }
    return -1;
  }
});
enifed('ember-utils', ['exports'], function (exports) {
  'use strict';

  /**
    Strongly hint runtimes to intern the provided string.
  
    When do I need to use this function?
  
    For the most part, never. Pre-mature optimization is bad, and often the
    runtime does exactly what you need it to, and more often the trade-off isn't
    worth it.
  
    Why?
  
    Runtimes store strings in at least 2 different representations:
    Ropes and Symbols (interned strings). The Rope provides a memory efficient
    data-structure for strings created from concatenation or some other string
    manipulation like splitting.
  
    Unfortunately checking equality of different ropes can be quite costly as
    runtimes must resort to clever string comparison algorithms. These
    algorithms typically cost in proportion to the length of the string.
    Luckily, this is where the Symbols (interned strings) shine. As Symbols are
    unique by their string content, equality checks can be done by pointer
    comparison.
  
    How do I know if my string is a rope or symbol?
  
    Typically (warning general sweeping statement, but truthy in runtimes at
    present) static strings created as part of the JS source are interned.
    Strings often used for comparisons can be interned at runtime if some
    criteria are met.  One of these criteria can be the size of the entire rope.
    For example, in chrome 38 a rope longer then 12 characters will not
    intern, nor will segments of that rope.
  
    Some numbers: http://jsperf.com/eval-vs-keys/8
  
    Known Trick™
  
    @private
    @return {String} interned version of the provided string
  */
  function intern(str) {
    var obj = {};
    obj[str] = 1;
    for (var key in obj) {
      if (key === str) {
        return key;
      }
    }
    return str;
  }

  /**
   @module @ember/object
  */

  /**
   Previously we used `Ember.$.uuid`, however `$.uuid` has been removed from
   jQuery master. We'll just bootstrap our own uuid now.
  
   @private
   @return {Number} the uuid
   */
  var _uuid = 0;

  /**
   Generates a universally unique identifier. This method
   is used internally by Ember for assisting with
   the generation of GUID's and other unique identifiers.
  
   @public
   @return {Number} [description]
   */
  function uuid() {
    return ++_uuid;
  }

  /**
   Prefix used for guids through out Ember.
   @private
   @property GUID_PREFIX
   @for Ember
   @type String
   @final
   */
  var GUID_PREFIX = 'ember';

  // Used for guid generation...
  var numberCache = [];
  var stringCache = {};

  /**
    A unique key used to assign guids and other private metadata to objects.
    If you inspect an object in your browser debugger you will often see these.
    They can be safely ignored.
  
    On browsers that support it, these properties are added with enumeration
    disabled so they won't show up when you iterate over your properties.
  
    @private
    @property GUID_KEY
    @for Ember
    @type String
    @final
  */
  var GUID_KEY = intern('__ember' + +new Date());

  var GUID_DESC = {
    writable: true,
    configurable: true,
    enumerable: false,
    value: null
  };

  var nullDescriptor = {
    configurable: true,
    writable: true,
    enumerable: false,
    value: null
  };

  var GUID_KEY_PROPERTY = {
    name: GUID_KEY,
    descriptor: nullDescriptor
  };

  /**
    Generates a new guid, optionally saving the guid to the object that you
    pass in. You will rarely need to use this method. Instead you should
    call `Ember.guidFor(obj)`, which return an existing guid if available.
  
    @private
    @method generateGuid
    @static
    @for @ember/object/internals
    @param {Object} [obj] Object the guid will be used for. If passed in, the guid will
      be saved on the object and reused whenever you pass the same object
      again.
  
      If no object is passed, just generate a new guid.
    @param {String} [prefix] Prefix to place in front of the guid. Useful when you want to
      separate the guid into separate namespaces.
    @return {String} the guid
  */
  function generateGuid(obj, prefix) {
    if (!prefix) {
      prefix = GUID_PREFIX;
    }

    var ret = prefix + uuid();
    if (obj) {
      if (obj[GUID_KEY] === null) {
        obj[GUID_KEY] = ret;
      } else {
        GUID_DESC.value = ret;
        if (obj.__defineNonEnumerable) {
          obj.__defineNonEnumerable(GUID_KEY_PROPERTY);
        } else {
          Object.defineProperty(obj, GUID_KEY, GUID_DESC);
        }
      }
    }
    return ret;
  }

  /**
    Returns a unique id for the object. If the object does not yet have a guid,
    one will be assigned to it. You can call this on any object,
    `Ember.Object`-based or not, but be aware that it will add a `_guid`
    property.
  
    You can also use this method on DOM Element objects.
  
    @public
    @static
    @method guidFor
    @for @ember/object/internals
    @param {Object} obj any object, string, number, Element, or primitive
    @return {String} the unique guid for this instance.
  */
  function guidFor(obj) {
    var type = typeof obj;
    var isObject = type === 'object' && obj !== null;
    var isFunction = type === 'function';

    if ((isObject || isFunction) && obj[GUID_KEY]) {
      return obj[GUID_KEY];
    }

    // special cases where we don't want to add a key to object
    if (obj === undefined) {
      return '(undefined)';
    }

    if (obj === null) {
      return '(null)';
    }

    var ret = void 0;

    // Don't allow prototype changes to String etc. to change the guidFor
    switch (type) {
      case 'number':
        ret = numberCache[obj];

        if (!ret) {
          ret = numberCache[obj] = 'nu' + obj;
        }

        return ret;

      case 'string':
        ret = stringCache[obj];

        if (!ret) {
          ret = stringCache[obj] = 'st' + uuid();
        }

        return ret;

      case 'boolean':
        return obj ? '(true)' : '(false)';

      default:
        if (obj === Object) {
          return '(Object)';
        }

        if (obj === Array) {
          return '(Array)';
        }

        ret = GUID_PREFIX + uuid();

        if (obj[GUID_KEY] === null) {
          obj[GUID_KEY] = ret;
        } else {
          GUID_DESC.value = ret;

          if (obj.__defineNonEnumerable) {
            obj.__defineNonEnumerable(GUID_KEY_PROPERTY);
          } else {
            Object.defineProperty(obj, GUID_KEY, GUID_DESC);
          }
        }
        return ret;
    }
  }

  function symbol(debugName) {
    // TODO: Investigate using platform symbols, but we do not
    // want to require non-enumerability for this API, which
    // would introduce a large cost.
    var id = GUID_KEY + Math.floor(Math.random() * new Date());
    return intern('__' + debugName + '__ [id=' + id + ']');
  }

  /**
  @module @ember/application
  */

  var OWNER = symbol('OWNER');

  /**
    Framework objects in an Ember application (components, services, routes, etc.)
    are created via a factory and dependency injection system. Each of these
    objects is the responsibility of an "owner", which handled its
    instantiation and manages its lifetime.
  
    `getOwner` fetches the owner object responsible for an instance. This can
    be used to lookup or resolve other class instances, or register new factories
    into the owner.
  
    For example, this component dynamically looks up a service based on the
    `audioType` passed as an attribute:
  
    ```app/components/play-audio.js
    import Component from '@ember/component';
    import { computed } from '@ember/object';
    import { getOwner } from '@ember/application';
  
    // Usage:
    //
    //   {{play-audio audioType=model.audioType audioFile=model.file}}
    //
    export default Component.extend({
      audioService: computed('audioType', function() {
        let owner = getOwner(this);
        return owner.lookup(`service:${this.get('audioType')}`);
      }),
  
      click() {
        let player = this.get('audioService');
        player.play(this.get('audioFile'));
      }
    });
    ```
  
    @method getOwner
    @static
    @for @ember/application
    @param {Object} object An object with an owner.
    @return {Object} An owner object.
    @since 2.3.0
    @public
  */
  function getOwner(object) {
    return object[OWNER];
  }

  /**
    `setOwner` forces a new owner on a given object instance. This is primarily
    useful in some testing cases.
  
    @method setOwner
    @static
    @for @ember/application
    @param {Object} object An object instance.
    @param {Object} object The new owner object of the object instance.
    @since 2.3.0
    @public
  */
  function setOwner(object, owner) {
    object[OWNER] = owner;
  }

  /**
   @module @ember/polyfills
  */
  /**
    Copy properties from a source object to a target object.
  
    ```javascript
    var a = { first: 'Yehuda' };
    var b = { last: 'Katz' };
    var c = { company: 'Tilde Inc.' };
    Ember.assign(a, b, c); // a === { first: 'Yehuda', last: 'Katz', company: 'Tilde Inc.' }, b === { last: 'Katz' }, c === { company: 'Tilde Inc.' }
    ```
  
    @method assign
    @for @ember/polyfills
    @param {Object} original The object to assign into
    @param {Object} ...args The objects to copy properties from
    @return {Object}
    @public
    @static
  */
  function assign(original) {
    for (var i = 1; i < arguments.length; i++) {
      var arg = arguments[i];
      if (!arg) {
        continue;
      }

      var updates = Object.keys(arg);

      for (var _i = 0; _i < updates.length; _i++) {
        var prop = updates[_i];
        original[prop] = arg[prop];
      }
    }

    return original;
  }

  var assign$1 = Object.assign || assign;

  // the delete is meant to hint at runtimes that this object should remain in
  // dictionary mode. This is clearly a runtime specific hack, but currently it
  // appears worthwhile in some usecases. Please note, these deletes do increase
  // the cost of creation dramatically over a plain Object.create. And as this
  // only makes sense for long-lived dictionaries that aren't instantiated often.
  function makeDictionary(parent) {
    var dict = Object.create(parent);
    dict['_dict'] = null;
    delete dict['_dict'];
    return dict;
  }

  var HAS_SUPER_PATTERN = /\.(_super|call\(this|apply\(this)/;
  var fnToString = Function.prototype.toString;

  var checkHasSuper = function () {
    var sourceAvailable = fnToString.call(function () {
      return this;
    }).indexOf('return this') > -1;

    if (sourceAvailable) {
      return function checkHasSuper(func) {
        return HAS_SUPER_PATTERN.test(fnToString.call(func));
      };
    }

    return function checkHasSuper() {
      return true;
    };
  }();

  function ROOT() {}
  ROOT.__hasSuper = false;

  function hasSuper(func) {
    if (func.__hasSuper === undefined) {
      func.__hasSuper = checkHasSuper(func);
    }
    return func.__hasSuper;
  }

  /**
    Wraps the passed function so that `this._super` will point to the superFunc
    when the function is invoked. This is the primitive we use to implement
    calls to super.
  
    @private
    @method wrap
    @for Ember
    @param {Function} func The function to call
    @param {Function} superFunc The super function.
    @return {Function} wrapped function.
  */
  function wrap(func, superFunc) {
    if (!hasSuper(func)) {
      return func;
    }
    // ensure an unwrapped super that calls _super is wrapped with a terminal _super
    if (!superFunc.wrappedFunction && hasSuper(superFunc)) {
      return _wrap(func, _wrap(superFunc, ROOT));
    }
    return _wrap(func, superFunc);
  }

  function _wrap(func, superFunc) {
    function superWrapper() {
      var orig = this._super;
      this._super = superFunc;
      var ret = func.apply(this, arguments);
      this._super = orig;
      return ret;
    }

    superWrapper.wrappedFunction = func;
    superWrapper.__ember_observes__ = func.__ember_observes__;
    superWrapper.__ember_observesBefore__ = func.__ember_observesBefore__;
    superWrapper.__ember_listens__ = func.__ember_listens__;

    return superWrapper;
  }

  var objectToString = Object.prototype.toString;
  /**
   @module @ember/debug
  */
  /**
    Convenience method to inspect an object. This method will attempt to
    convert the object into a useful string description.
  
    It is a pretty simple implementation. If you want something more robust,
    use something like JSDump: https://github.com/NV/jsDump
  
    @method inspect
    @static
    @param {Object} obj The object you want to inspect.
    @return {String} A description of the object
    @since 1.4.0
    @private
  */
  function inspect(obj) {
    if (obj === null) {
      return 'null';
    }
    if (obj === undefined) {
      return 'undefined';
    }
    if (Array.isArray(obj)) {
      return '[' + obj + ']';
    }
    // for non objects
    var type = typeof obj;
    if (type !== 'object' && type !== 'symbol') {
      return '' + obj;
    }
    // overridden toString
    if (typeof obj.toString === 'function' && obj.toString !== objectToString) {
      return obj.toString();
    }

    // Object.prototype.toString === {}.toString
    var v = void 0;
    var ret = [];
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        v = obj[key];
        if (v === 'toString') {
          continue;
        } // ignore useless items
        if (typeof v === 'function') {
          v = 'function() { ... }';
        }

        if (v && typeof v.toString !== 'function') {
          ret.push(key + ': ' + objectToString.call(v));
        } else {
          ret.push(key + ': ' + v);
        }
      }
    }
    return '{' + ret.join(', ') + '}';
  }

  function lookupDescriptor(obj, keyName) {
    var current = obj;
    while (current) {
      var descriptor = Object.getOwnPropertyDescriptor(current, keyName);

      if (descriptor) {
        return descriptor;
      }

      current = Object.getPrototypeOf(current);
    }

    return null;
  }

  /**
   @param {Object} t target
   @param {String} m method
   @param {Array} a args
   @private
   */
  function applyStr(t, m, a) {
    var l = a && a.length;
    if (!a || !l) {
      return t[m]();
    }
    switch (l) {
      case 1:
        return t[m](a[0]);
      case 2:
        return t[m](a[0], a[1]);
      case 3:
        return t[m](a[0], a[1], a[2]);
      case 4:
        return t[m](a[0], a[1], a[2], a[3]);
      case 5:
        return t[m](a[0], a[1], a[2], a[3], a[4]);
      default:
        return t[m].apply(t, a);
    }
  }

  /**
    Checks to see if the `methodName` exists on the `obj`.
  
    ```javascript
    let foo = { bar: function() { return 'bar'; }, baz: null };
  
    Ember.canInvoke(foo, 'bar'); // true
    Ember.canInvoke(foo, 'baz'); // false
    Ember.canInvoke(foo, 'bat'); // false
    ```
  
    @method canInvoke
    @for Ember
    @param {Object} obj The object to check for the method
    @param {String} methodName The method name to check for
    @return {Boolean}
    @private
  */
  function canInvoke(obj, methodName) {
    return !!(obj && typeof obj[methodName] === 'function');
  }

  /**
    Checks to see if the `methodName` exists on the `obj`,
    and if it does, invokes it with the arguments passed.
  
    ```javascript
    let d = new Date('03/15/2013');
  
    Ember.tryInvoke(d, 'getTime');              // 1363320000000
    Ember.tryInvoke(d, 'setFullYear', [2014]);  // 1394856000000
    Ember.tryInvoke(d, 'noSuchMethod', [2014]); // undefined
    ```
  
    @method tryInvoke
    @for Ember
    @param {Object} obj The object to check for the method
    @param {String} methodName The method name to check for
    @param {Array} [args] The arguments to pass to the method
    @return {*} the return value of the invoked method or undefined if it cannot be invoked
    @public
  */
  function tryInvoke(obj, methodName, args) {
    if (canInvoke(obj, methodName)) {
      return applyStr(obj, methodName, args);
    }
  }

  var isArray = Array.isArray;

  /**
   @module @ember/array
  */
  /**
   Forces the passed object to be part of an array. If the object is already
   an array, it will return the object. Otherwise, it will add the object to
   an array. If obj is `null` or `undefined`, it will return an empty array.
  
   ```javascript
   Ember.makeArray();            // []
   Ember.makeArray(null);        // []
   Ember.makeArray(undefined);   // []
   Ember.makeArray('lindsay');   // ['lindsay']
   Ember.makeArray([1, 2, 42]);  // [1, 2, 42]
  
   let controller = Ember.ArrayProxy.create({ content: [] });
  
   Ember.makeArray(controller) === controller;  // true
   ```
  
   @method makeArray
   @static
   @for @ember/array
   @param {Object} obj the object
   @return {Array}
   @private
   */
  function makeArray(obj) {
    if (obj === null || obj === undefined) {
      return [];
    }
    return isArray(obj) ? obj : [obj];
  }

  var name = symbol('NAME_KEY');

  var objectToString$1 = Object.prototype.toString;

  function isNone(obj) {
    return obj === null || obj === undefined;
  }

  /*
   A `toString` util function that supports objects without a `toString`
   method, e.g. an object created with `Object.create(null)`.
  */
  function toString(obj) {
    var type = typeof obj;
    if (type === "string") {
      return obj;
    }

    if (Array.isArray(obj)) {
      // Reimplement Array.prototype.join according to spec (22.1.3.13)
      // Changing ToString(element) with this safe version of ToString.
      var len = obj.length;
      var sep = ',';
      var r = '';

      for (var k = 0; k < len; k++) {
        if (k > 0) {
          r += ',';
        }

        if (!isNone(obj[k])) {
          r += toString(obj[k]);
        }
      }

      return r;
    } else if (obj != null && typeof obj.toString === 'function') {
      return obj.toString();
    } else {
      return objectToString$1.call(obj);
    }
  }

  var HAS_NATIVE_WEAKMAP = function () {
    // detect if `WeakMap` is even present
    var hasWeakMap = typeof WeakMap === 'function';
    if (!hasWeakMap) {
      return false;
    }

    var instance = new WeakMap();
    // use `Object`'s `.toString` directly to prevent us from detecting
    // polyfills as native weakmaps
    return Object.prototype.toString.call(instance) === '[object WeakMap]';
  }();

  var HAS_NATIVE_PROXY = typeof Proxy === 'function';

  /*
   This package will be eagerly parsed and should have no dependencies on external
   packages.
  
   It is intended to be used to share utility methods that will be needed
   by every Ember application (and is **not** a dumping ground of useful utilities).
  
   Utility methods that are needed in < 80% of cases should be placed
   elsewhere (so they can be lazily evaluated / parsed).
  */

  exports.symbol = symbol;
  exports.getOwner = getOwner;
  exports.setOwner = setOwner;
  exports.OWNER = OWNER;
  exports.assign = assign$1;
  exports.assignPolyfill = assign;
  exports.dictionary = makeDictionary;
  exports.uuid = uuid;
  exports.GUID_KEY = GUID_KEY;
  exports.GUID_DESC = GUID_DESC;
  exports.GUID_KEY_PROPERTY = GUID_KEY_PROPERTY;
  exports.generateGuid = generateGuid;
  exports.guidFor = guidFor;
  exports.intern = intern;
  exports.checkHasSuper = checkHasSuper;
  exports.ROOT = ROOT;
  exports.wrap = wrap;
  exports.inspect = inspect;
  exports.lookupDescriptor = lookupDescriptor;
  exports.canInvoke = canInvoke;
  exports.tryInvoke = tryInvoke;
  exports.makeArray = makeArray;
  exports.applyStr = applyStr;
  exports.NAME_KEY = name;
  exports.toString = toString;
  exports.HAS_NATIVE_WEAKMAP = HAS_NATIVE_WEAKMAP;
  exports.HAS_NATIVE_PROXY = HAS_NATIVE_PROXY;
});
enifed('ember-views/compat/attrs', ['exports', 'ember-utils'], function (exports, _emberUtils) {
  'use strict';

  exports.MUTABLE_CELL = undefined;
  var MUTABLE_CELL = exports.MUTABLE_CELL = (0, _emberUtils.symbol)('MUTABLE_CELL');
});
enifed('ember-views/compat/fallback-view-registry', ['exports', 'ember-utils'], function (exports, _emberUtils) {
  'use strict';

  exports.default = (0, _emberUtils.dictionary)(null);
});
enifed('ember-views/component_lookup', ['exports', 'ember-debug', 'ember-runtime'], function (exports, _emberDebug, _emberRuntime) {
  'use strict';

  exports.default = _emberRuntime.Object.extend({
    componentFor: function (name, owner, options) {
      (true && !(~name.indexOf('-')) && (0, _emberDebug.assert)('You cannot use \'' + name + '\' as a component name. Component names must contain a hyphen.', ~name.indexOf('-')));

      var fullName = 'component:' + name;
      return owner.factoryFor(fullName, options);
    },
    layoutFor: function (name, owner, options) {
      (true && !(~name.indexOf('-')) && (0, _emberDebug.assert)('You cannot use \'' + name + '\' as a component name. Component names must contain a hyphen.', ~name.indexOf('-')));


      var templateFullName = 'template:components/' + name;
      return owner.lookup(templateFullName, options);
    }
  });
});
enifed('ember-views/index', ['exports', 'ember-views/system/jquery', 'ember-views/system/utils', 'ember-views/system/event_dispatcher', 'ember-views/component_lookup', 'ember-views/mixins/text_support', 'ember-views/views/core_view', 'ember-views/mixins/class_names_support', 'ember-views/mixins/child_views_support', 'ember-views/mixins/view_state_support', 'ember-views/mixins/view_support', 'ember-views/mixins/action_support', 'ember-views/compat/attrs', 'ember-views/system/lookup_partial', 'ember-views/utils/lookup-component', 'ember-views/system/action_manager', 'ember-views/compat/fallback-view-registry', 'ember-views/system/ext'], function (exports, _jquery, _utils, _event_dispatcher, _component_lookup, _text_support, _core_view, _class_names_support, _child_views_support, _view_state_support, _view_support, _action_support, _attrs, _lookup_partial, _lookupComponent, _action_manager, _fallbackViewRegistry) {
  'use strict';

  exports.fallbackViewRegistry = exports.ActionManager = exports.lookupComponent = exports.hasPartial = exports.lookupPartial = exports.MUTABLE_CELL = exports.ActionSupport = exports.ViewMixin = exports.ViewStateSupport = exports.ChildViewsSupport = exports.ClassNamesSupport = exports.CoreView = exports.TextSupport = exports.ComponentLookup = exports.EventDispatcher = exports.constructStyleDeprecationMessage = exports.setViewElement = exports.getViewElement = exports.getViewId = exports.getChildViews = exports.getRootViews = exports.getViewBoundingClientRect = exports.getViewClientRects = exports.getViewBounds = exports.isSimpleClick = exports.jQuery = undefined;
  Object.defineProperty(exports, 'jQuery', {
    enumerable: true,
    get: function () {
      return _jquery.default;
    }
  });
  Object.defineProperty(exports, 'isSimpleClick', {
    enumerable: true,
    get: function () {
      return _utils.isSimpleClick;
    }
  });
  Object.defineProperty(exports, 'getViewBounds', {
    enumerable: true,
    get: function () {
      return _utils.getViewBounds;
    }
  });
  Object.defineProperty(exports, 'getViewClientRects', {
    enumerable: true,
    get: function () {
      return _utils.getViewClientRects;
    }
  });
  Object.defineProperty(exports, 'getViewBoundingClientRect', {
    enumerable: true,
    get: function () {
      return _utils.getViewBoundingClientRect;
    }
  });
  Object.defineProperty(exports, 'getRootViews', {
    enumerable: true,
    get: function () {
      return _utils.getRootViews;
    }
  });
  Object.defineProperty(exports, 'getChildViews', {
    enumerable: true,
    get: function () {
      return _utils.getChildViews;
    }
  });
  Object.defineProperty(exports, 'getViewId', {
    enumerable: true,
    get: function () {
      return _utils.getViewId;
    }
  });
  Object.defineProperty(exports, 'getViewElement', {
    enumerable: true,
    get: function () {
      return _utils.getViewElement;
    }
  });
  Object.defineProperty(exports, 'setViewElement', {
    enumerable: true,
    get: function () {
      return _utils.setViewElement;
    }
  });
  Object.defineProperty(exports, 'constructStyleDeprecationMessage', {
    enumerable: true,
    get: function () {
      return _utils.constructStyleDeprecationMessage;
    }
  });
  Object.defineProperty(exports, 'EventDispatcher', {
    enumerable: true,
    get: function () {
      return _event_dispatcher.default;
    }
  });
  Object.defineProperty(exports, 'ComponentLookup', {
    enumerable: true,
    get: function () {
      return _component_lookup.default;
    }
  });
  Object.defineProperty(exports, 'TextSupport', {
    enumerable: true,
    get: function () {
      return _text_support.default;
    }
  });
  Object.defineProperty(exports, 'CoreView', {
    enumerable: true,
    get: function () {
      return _core_view.default;
    }
  });
  Object.defineProperty(exports, 'ClassNamesSupport', {
    enumerable: true,
    get: function () {
      return _class_names_support.default;
    }
  });
  Object.defineProperty(exports, 'ChildViewsSupport', {
    enumerable: true,
    get: function () {
      return _child_views_support.default;
    }
  });
  Object.defineProperty(exports, 'ViewStateSupport', {
    enumerable: true,
    get: function () {
      return _view_state_support.default;
    }
  });
  Object.defineProperty(exports, 'ViewMixin', {
    enumerable: true,
    get: function () {
      return _view_support.default;
    }
  });
  Object.defineProperty(exports, 'ActionSupport', {
    enumerable: true,
    get: function () {
      return _action_support.default;
    }
  });
  Object.defineProperty(exports, 'MUTABLE_CELL', {
    enumerable: true,
    get: function () {
      return _attrs.MUTABLE_CELL;
    }
  });
  Object.defineProperty(exports, 'lookupPartial', {
    enumerable: true,
    get: function () {
      return _lookup_partial.default;
    }
  });
  Object.defineProperty(exports, 'hasPartial', {
    enumerable: true,
    get: function () {
      return _lookup_partial.hasPartial;
    }
  });
  Object.defineProperty(exports, 'lookupComponent', {
    enumerable: true,
    get: function () {
      return _lookupComponent.default;
    }
  });
  Object.defineProperty(exports, 'ActionManager', {
    enumerable: true,
    get: function () {
      return _action_manager.default;
    }
  });
  Object.defineProperty(exports, 'fallbackViewRegistry', {
    enumerable: true,
    get: function () {
      return _fallbackViewRegistry.default;
    }
  });
});
enifed('ember-views/mixins/action_support', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-views/compat/attrs'], function (exports, _emberUtils, _emberMetal, _emberDebug, _attrs) {
  'use strict';

  /**
   @module ember
  */
  function validateAction(component, actionName) {
    if (actionName && actionName[_attrs.MUTABLE_CELL]) {
      actionName = actionName.value;
    }

    (true && !((0, _emberMetal.isNone)(actionName) || typeof actionName === 'string' || typeof actionName === 'function') && (0, _emberDebug.assert)('The default action was triggered on the component ' + component.toString() + ', but the action name (' + actionName + ') was not a string.', (0, _emberMetal.isNone)(actionName) || typeof actionName === 'string' || typeof actionName === 'function'));

    return actionName;
  }

  /**
   @class ActionSupport
   @namespace Ember
   @private
  */
  exports.default = _emberMetal.Mixin.create({
    /**
      Calls an action passed to a component.
       For example a component for playing or pausing music may translate click events
      into action notifications of "play" or "stop" depending on some internal state
      of the component:
       ```app/components/play-button.js
      import Component from '@ember/component';
       export default Component.extend({
        click() {
          if (this.get('isPlaying')) {
            this.sendAction('play');
          } else {
            this.sendAction('stop');
          }
        }
      });
      ```
       The actions "play" and "stop" must be passed to this `play-button` component:
       ```handlebars
      {{! app/templates/application.hbs }}
      {{play-button play=(action "musicStarted") stop=(action "musicStopped")}}
      ```
       When the component receives a browser `click` event it translate this
      interaction into application-specific semantics ("play" or "stop") and
      calls the specified action.
       ```app/controller/application.js
      import Controller from '@ember/controller';
       export default Controller.extend({
        actions: {
          musicStarted() {
            // called when the play button is clicked
            // and the music started playing
          },
          musicStopped() {
            // called when the play button is clicked
            // and the music stopped playing
          }
        }
      });
      ```
       If no action is passed to `sendAction` a default name of "action"
      is assumed.
       ```app/components/next-button.js
      import Component from '@ember/component';
       export default Component.extend({
        click() {
          this.sendAction();
        }
      });
      ```
       ```handlebars
      {{! app/templates/application.hbs }}
      {{next-button action=(action "playNextSongInAlbum")}}
      ```
       ```app/controllers/application.js
      import Controller from '@ember/controller';
       export default Controller.extend({
        actions: {
          playNextSongInAlbum() {
            ...
          }
        }
      });
      ```
       @method sendAction
      @param [action] {String} the action to call
      @param [params] {*} arguments for the action
      @public
    */
    sendAction: function (action) {
      for (var _len = arguments.length, contexts = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        contexts[_key - 1] = arguments[_key];
      }

      var actionName = void 0;

      // Send the default action
      if (action === undefined) {
        action = 'action';
      }
      actionName = (0, _emberMetal.get)(this, 'attrs.' + action) || (0, _emberMetal.get)(this, action);
      actionName = validateAction(this, actionName);

      // If no action name for that action could be found, just abort.
      if (actionName === undefined) {
        return;
      }

      if (typeof actionName === 'function') {
        actionName.apply(undefined, contexts);
      } else {
        this.triggerAction({
          action: actionName,
          actionContext: contexts
        });
      }
    },
    send: function (actionName) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      var action = this.actions && this.actions[actionName];

      if (action) {
        var shouldBubble = action.apply(this, args) === true;
        if (!shouldBubble) {
          return;
        }
      }

      var target = (0, _emberMetal.get)(this, 'target');
      if (target) {
        (true && !(typeof target.send === 'function') && (0, _emberDebug.assert)('The `target` for ' + this + ' (' + target + ') does not have a `send` method', typeof target.send === 'function'));

        target.send.apply(target, arguments);
      } else {
        (true && !(action) && (0, _emberDebug.assert)((0, _emberUtils.inspect)(this) + ' had no action handler for: ' + actionName, action));
      }
    }
  });
});
enifed('ember-views/mixins/child_views_support', ['exports', 'ember-utils', 'ember-metal', 'ember-views/system/utils'], function (exports, _emberUtils, _emberMetal, _utils) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({
    init: function () {
      this._super.apply(this, arguments);
      (0, _utils.initChildViews)(this);
    },


    /**
      Array of child views. You should never edit this array directly.
       @property childViews
      @type Array
      @default []
      @private
    */
    childViews: (0, _emberMetal.descriptor)({
      configurable: false,
      enumerable: false,
      get: function () {
        return (0, _utils.getChildViews)(this);
      }
    }),

    appendChild: function (view) {
      this.linkChild(view);
      (0, _utils.addChildView)(this, view);
    },
    linkChild: function (instance) {
      if (!(0, _emberUtils.getOwner)(instance)) {
        (0, _emberUtils.setOwner)(instance, (0, _emberUtils.getOwner)(this));
      }
    }
  });
});
enifed('ember-views/mixins/class_names_support', ['exports', 'ember-metal', 'ember-debug'], function (exports, _emberMetal, _emberDebug) {
  'use strict';

  /**
  @module ember
  */

  var EMPTY_ARRAY = Object.freeze([]);

  /**
    @class ClassNamesSupport
    @namespace Ember
    @private
  */
  exports.default = _emberMetal.Mixin.create({
    concatenatedProperties: ['classNames', 'classNameBindings'],

    init: function () {
      this._super.apply(this, arguments);

      (true && !(Array.isArray(this.classNameBindings)) && (0, _emberDebug.assert)('Only arrays are allowed for \'classNameBindings\'', Array.isArray(this.classNameBindings)));
      (true && !(Array.isArray(this.classNames)) && (0, _emberDebug.assert)('Only arrays of static class strings are allowed for \'classNames\'. For dynamic classes, use \'classNameBindings\'.', Array.isArray(this.classNames)));
    },


    /**
      Standard CSS class names to apply to the view's outer element. This
      property automatically inherits any class names defined by the view's
      superclasses as well.
       @property classNames
      @type Array
      @default ['ember-view']
      @public
    */
    classNames: EMPTY_ARRAY,

    /**
      A list of properties of the view to apply as class names. If the property
      is a string value, the value of that string will be applied as a class
      name.
       ```javascript
      // Applies the 'high' class to the view element
      Ember.Component.extend({
        classNameBindings: ['priority'],
        priority: 'high'
      });
      ```
       If the value of the property is a Boolean, the name of that property is
      added as a dasherized class name.
       ```javascript
      // Applies the 'is-urgent' class to the view element
      Ember.Component.extend({
        classNameBindings: ['isUrgent'],
        isUrgent: true
      });
      ```
       If you would prefer to use a custom value instead of the dasherized
      property name, you can pass a binding like this:
       ```javascript
      // Applies the 'urgent' class to the view element
      Ember.Component.extend({
        classNameBindings: ['isUrgent:urgent'],
        isUrgent: true
      });
      ```
       This list of properties is inherited from the component's superclasses as well.
       @property classNameBindings
      @type Array
      @default []
      @public
    */
    classNameBindings: EMPTY_ARRAY
  });
});
enifed('ember-views/mixins/text_support', ['exports', 'ember-metal', 'ember-runtime'], function (exports, _emberMetal, _emberRuntime) {
  'use strict';

  /**
  @module ember
  */

  var KEY_EVENTS = {
    13: 'insertNewline',
    27: 'cancel'
  };

  /**
    `TextSupport` is a shared mixin used by both `Ember.TextField` and
    `Ember.TextArea`. `TextSupport` adds a number of methods that allow you to
    specify a controller action to invoke when a certain event is fired on your
    text field or textarea. The specified controller action would get the current
    value of the field passed in as the only argument unless the value of
    the field is empty. In that case, the instance of the field itself is passed
    in as the only argument.
  
    Let's use the pressing of the escape key as an example. If you wanted to
    invoke a controller action when a user presses the escape key while on your
    field, you would use the `escape-press` attribute on your field like so:
  
    ```handlebars
      {{! application.hbs}}
  
      {{input escape-press='alertUser'}}
    ```
  
    ```javascript
        App = Ember.Application.create();
  
        App.ApplicationController = Ember.Controller.extend({
          actions: {
            alertUser: function ( currentValue ) {
              alert( 'escape pressed, current value: ' + currentValue );
            }
          }
        });
    ```
  
    The following chart is a visual representation of what takes place when the
    escape key is pressed in this scenario:
  
    ```
    The Template
    +---------------------------+
    |                           |
    | escape-press='alertUser'  |
    |                           |          TextSupport Mixin
    +----+----------------------+          +-------------------------------+
         |                                 | cancel method                 |
         |      escape button pressed      |                               |
         +-------------------------------> | checks for the `escape-press` |
                                           | attribute and pulls out the   |
         +-------------------------------+ | `alertUser` value             |
         |     action name 'alertUser'     +-------------------------------+
         |     sent to controller
         v
    Controller
    +------------------------------------------ +
    |                                           |
    |  actions: {                               |
    |     alertUser: function( currentValue ){  |
    |       alert( 'the esc key was pressed!' ) |
    |     }                                     |
    |  }                                        |
    |                                           |
    +-------------------------------------------+
    ```
  
    Here are the events that we currently support along with the name of the
    attribute you would need to use on your field. To reiterate, you would use the
    attribute name like so:
  
    ```handlebars
      {{input attribute-name='controllerAction'}}
    ```
  
    ```
    +--------------------+----------------+
    |                    |                |
    | event              | attribute name |
    +--------------------+----------------+
    | new line inserted  | insert-newline |
    |                    |                |
    | enter key pressed  | insert-newline |
    |                    |                |
    | cancel key pressed | escape-press   |
    |                    |                |
    | focusin            | focus-in       |
    |                    |                |
    | focusout           | focus-out      |
    |                    |                |
    | keypress           | key-press      |
    |                    |                |
    | keyup              | key-up         |
    |                    |                |
    | keydown            | key-down       |
    +--------------------+----------------+
    ```
  
    @class TextSupport
    @namespace Ember
    @uses Ember.TargetActionSupport
    @extends Mixin
    @private
  */
  exports.default = _emberMetal.Mixin.create(_emberRuntime.TargetActionSupport, {
    value: '',

    attributeBindings: ['autocapitalize', 'autocorrect', 'autofocus', 'disabled', 'form', 'maxlength', 'minlength', 'placeholder', 'readonly', 'required', 'selectionDirection', 'spellcheck', 'tabindex', 'title'],
    placeholder: null,
    disabled: false,
    maxlength: null,

    init: function () {
      this._super.apply(this, arguments);
      this.on('paste', this, this._elementValueDidChange);
      this.on('cut', this, this._elementValueDidChange);
      this.on('input', this, this._elementValueDidChange);
    },


    /**
      The action to be sent when the user presses the return key.
       This is similar to the `{{action}}` helper, but is fired when
      the user presses the return key when editing a text field, and sends
      the value of the field as the context.
       @property action
      @type String
      @default null
      @private
    */
    action: null,

    /**
      The event that should send the action.
       Options are:
       * `enter`: the user pressed enter
      * `keyPress`: the user pressed a key
       @property onEvent
      @type String
      @default enter
      @private
    */
    onEvent: 'enter',

    /**
      Whether the `keyUp` event that triggers an `action` to be sent continues
      propagating to other views.
       By default, when the user presses the return key on their keyboard and
      the text field has an `action` set, the action will be sent to the view's
      controller and the key event will stop propagating.
       If you would like parent views to receive the `keyUp` event even after an
      action has been dispatched, set `bubbles` to true.
       @property bubbles
      @type Boolean
      @default false
      @private
    */
    bubbles: false,

    interpretKeyEvents: function (event) {
      var map = KEY_EVENTS;
      var method = map[event.keyCode];

      this._elementValueDidChange();
      if (method) {
        return this[method](event);
      }
    },
    _elementValueDidChange: function () {
      (0, _emberMetal.set)(this, 'value', this.element.value);
    },
    change: function (event) {
      this._elementValueDidChange(event);
    },


    /**
      Allows you to specify a controller action to invoke when either the `enter`
      key is pressed or, in the case of the field being a textarea, when a newline
      is inserted. To use this method, give your field an `insert-newline`
      attribute. The value of that attribute should be the name of the action
      in your controller that you wish to invoke.
       For an example on how to use the `insert-newline` attribute, please
      reference the example near the top of this file.
       @method insertNewline
      @param {Event} event
      @private
    */
    insertNewline: function (event) {
      sendAction('enter', this, event);
      sendAction('insert-newline', this, event);
    },


    /**
      Allows you to specify a controller action to invoke when the escape button
      is pressed. To use this method, give your field an `escape-press`
      attribute. The value of that attribute should be the name of the action
      in your controller that you wish to invoke.
       For an example on how to use the `escape-press` attribute, please reference
      the example near the top of this file.
       @method cancel
      @param {Event} event
      @private
    */
    cancel: function (event) {
      sendAction('escape-press', this, event);
    },


    /**
      Allows you to specify a controller action to invoke when a field receives
      focus. To use this method, give your field a `focus-in` attribute. The value
      of that attribute should be the name of the action in your controller
      that you wish to invoke.
       For an example on how to use the `focus-in` attribute, please reference the
      example near the top of this file.
       @method focusIn
      @param {Event} event
      @private
    */
    focusIn: function (event) {
      sendAction('focus-in', this, event);
    },


    /**
      Allows you to specify a controller action to invoke when a field loses
      focus. To use this method, give your field a `focus-out` attribute. The value
      of that attribute should be the name of the action in your controller
      that you wish to invoke.
       For an example on how to use the `focus-out` attribute, please reference the
      example near the top of this file.
       @method focusOut
      @param {Event} event
      @private
    */
    focusOut: function (event) {
      this._elementValueDidChange(event);
      sendAction('focus-out', this, event);
    },


    /**
      Allows you to specify a controller action to invoke when a key is pressed.
      To use this method, give your field a `key-press` attribute. The value of
      that attribute should be the name of the action in your controller you
      that wish to invoke.
       For an example on how to use the `key-press` attribute, please reference the
      example near the top of this file.
       @method keyPress
      @param {Event} event
      @private
    */
    keyPress: function (event) {
      sendAction('key-press', this, event);
    },


    /**
      Allows you to specify a controller action to invoke when a key-up event is
      fired. To use this method, give your field a `key-up` attribute. The value
      of that attribute should be the name of the action in your controller
      that you wish to invoke.
       For an example on how to use the `key-up` attribute, please reference the
      example near the top of this file.
       @method keyUp
      @param {Event} event
      @private
    */
    keyUp: function (event) {
      this.interpretKeyEvents(event);

      this.sendAction('key-up', (0, _emberMetal.get)(this, 'value'), event);
    },


    /**
      Allows you to specify a controller action to invoke when a key-down event is
      fired. To use this method, give your field a `key-down` attribute. The value
      of that attribute should be the name of the action in your controller that
      you wish to invoke.
       For an example on how to use the `key-down` attribute, please reference the
      example near the top of this file.
       @method keyDown
      @param {Event} event
      @private
    */
    keyDown: function (event) {
      this.sendAction('key-down', (0, _emberMetal.get)(this, 'value'), event);
    }
  });


  // In principle, this shouldn't be necessary, but the legacy
  // sendAction semantics for TextField are different from
  // the component semantics so this method normalizes them.
  function sendAction(eventName, view, event) {
    var action = (0, _emberMetal.get)(view, 'attrs.' + eventName) || (0, _emberMetal.get)(view, eventName);
    var on = (0, _emberMetal.get)(view, 'onEvent');
    var value = (0, _emberMetal.get)(view, 'value');

    // back-compat support for keyPress as an event name even though
    // it's also a method name that consumes the event (and therefore
    // incompatible with sendAction semantics).
    if (on === eventName || on === 'keyPress' && eventName === 'key-press') {
      view.sendAction('action', value);
    }

    view.sendAction(eventName, value);

    if (action || on === eventName) {
      if (!(0, _emberMetal.get)(view, 'bubbles')) {
        event.stopPropagation();
      }
    }
  }
});
enifed('ember-views/mixins/view_state_support', ['exports', 'ember-metal'], function (exports, _emberMetal) {
  'use strict';

  exports.default = _emberMetal.Mixin.create({
    _transitionTo: function (state) {
      var priorState = this._currentState;
      var currentState = this._currentState = this._states[state];
      this._state = state;

      if (priorState && priorState.exit) {
        priorState.exit(this);
      }
      if (currentState.enter) {
        currentState.enter(this);
      }
    }
  });
});
enifed('ember-views/mixins/view_support', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-environment', 'ember-views/system/utils', 'ember-runtime/system/core_object', 'ember-views/system/jquery'], function (exports, _emberUtils, _emberMetal, _emberDebug, _emberEnvironment, _utils, _core_object, _jquery) {
  'use strict';

  var _Mixin$create;

  function K() {
    return this;
  }

  /**
   @class ViewMixin
   @namespace Ember
   @private
  */
  exports.default = _emberMetal.Mixin.create((_Mixin$create = {
    /**
      A list of properties of the view to apply as attributes. If the property
      is a string value, the value of that string will be applied as the value
      for an attribute of the property's name.
       The following example creates a tag like `<div priority="high" />`.
       ```app/components/my-component.js
      import Component from '@ember/component';
       export default Component.extend({
        attributeBindings: ['priority'],
        priority: 'high'
      });
      ```
       If the value of the property is a Boolean, the attribute is treated as
      an HTML Boolean attribute. It will be present if the property is `true`
      and omitted if the property is `false`.
       The following example creates markup like `<div visible />`.
       ```app/components/my-component.js
      import Component from '@ember/component';
       export default Component.extend({
        attributeBindings: ['visible'],
        visible: true
      });
      ```
       If you would prefer to use a custom value instead of the property name,
      you can create the same markup as the last example with a binding like
      this:
       ```app/components/my-component.js
      import Component from '@ember/component';
       export default Component.extend({
        attributeBindings: ['isVisible:visible'],
        isVisible: true
      });
      ```
       This list of attributes is inherited from the component's superclasses,
      as well.
       @property attributeBindings
      @type Array
      @default []
      @public
     */
    concatenatedProperties: ['attributeBindings']

  }, _Mixin$create[_core_object.POST_INIT] = function () {
    this.trigger('didInitAttrs');
    this.trigger('didReceiveAttrs');
  }, _Mixin$create.nearestOfType = function (klass) {
    var view = this.parentView;
    var isOfType = klass instanceof _emberMetal.Mixin ? function (view) {
      return klass.detect(view);
    } : function (view) {
      return klass.detect(view.constructor);
    };

    while (view) {
      if (isOfType(view)) {
        return view;
      }
      view = view.parentView;
    }
  }, _Mixin$create.nearestWithProperty = function (property) {
    var view = this.parentView;

    while (view) {
      if (property in view) {
        return view;
      }
      view = view.parentView;
    }
  }, _Mixin$create.rerender = function () {
    return this._currentState.rerender(this);
  }, _Mixin$create.element = (0, _emberMetal.descriptor)({
    configurable: false,
    enumerable: false,
    get: function () {
      return this.renderer.getElement(this);
    }
  }), _Mixin$create.$ = function (sel) {
    (true && !(this.tagName !== '') && (0, _emberDebug.assert)('You cannot access this.$() on a component with `tagName: \'\'` specified.', this.tagName !== ''));

    if (this.element) {
      return sel ? (0, _jquery.default)(sel, this.element) : (0, _jquery.default)(this.element);
    }
  }, _Mixin$create.appendTo = function (selector) {
    var env = this._environment || _emberEnvironment.environment;
    var target = void 0;

    if (env.hasDOM) {
      target = typeof selector === 'string' ? document.querySelector(selector) : selector;

      (true && !(target) && (0, _emberDebug.assert)('You tried to append to (' + selector + ') but that isn\'t in the DOM', target));
      (true && !(!(0, _utils.matches)(target, '.ember-view')) && (0, _emberDebug.assert)('You cannot append to an existing Ember.View.', !(0, _utils.matches)(target, '.ember-view')));
      (true && !(function () {
        var node = target.parentNode;
        while (node) {
          if (node.nodeType !== 9 && (0, _utils.matches)(node, '.ember-view')) {
            return false;
          }

          node = node.parentNode;
        }

        return true;
      }()) && (0, _emberDebug.assert)('You cannot append to an existing Ember.View.', function () {
        var node = target.parentNode;while (node) {
          if (node.nodeType !== 9 && (0, _utils.matches)(node, '.ember-view')) {
            return false;
          }node = node.parentNode;
        }return true;
      }()));
    } else {
      target = selector;

      (true && !(typeof target !== 'string') && (0, _emberDebug.assert)('You tried to append to a selector string (' + selector + ') in an environment without jQuery', typeof target !== 'string'));
      (true && !(typeof selector.appendChild === 'function') && (0, _emberDebug.assert)('You tried to append to a non-Element (' + selector + ') in an environment without jQuery', typeof selector.appendChild === 'function'));
    }

    this.renderer.appendTo(this, target);

    return this;
  }, _Mixin$create.append = function () {
    return this.appendTo(document.body);
  }, _Mixin$create.elementId = null, _Mixin$create.findElementInParentElement = function (parentElem) {
    var id = '#' + this.elementId;
    return (0, _jquery.default)(id)[0] || (0, _jquery.default)(id, parentElem)[0];
  }, _Mixin$create.willInsertElement = K, _Mixin$create.didInsertElement = K, _Mixin$create.willClearRender = K, _Mixin$create.destroy = function () {
    this._super.apply(this, arguments);
    this._currentState.destroy(this);
  }, _Mixin$create.willDestroyElement = K, _Mixin$create.parentViewDidChange = K, _Mixin$create.tagName = null, _Mixin$create.init = function () {
    this._super.apply(this, arguments);

    if (!this.elementId && this.tagName !== '') {
      this.elementId = (0, _emberUtils.guidFor)(this);
    }

    // if we find an `eventManager` property, deopt the
    // `EventDispatcher`'s `canDispatchToEventManager` property
    // if `null`
    if (this.eventManager) {
      var owner = (0, _emberUtils.getOwner)(this);
      var dispatcher = owner && owner.lookup('event_dispatcher:main');

      (true && !(false) && (0, _emberDebug.deprecate)('`eventManager` has been deprecated in ' + this + '.', false, {
        id: 'ember-views.event-dispatcher.canDispatchToEventManager',
        until: '2.17.0'
      }));


      if (dispatcher && !('canDispatchToEventManager' in dispatcher)) {
        dispatcher.canDispatchToEventManager = true;
      }
    }

    (true && !(typeof this.didInitAttrs !== 'function') && (0, _emberDebug.deprecate)('[DEPRECATED] didInitAttrs called in ' + this.toString() + '.', typeof this.didInitAttrs !== 'function', {
      id: 'ember-views.did-init-attrs',
      until: '3.0.0',
      url: 'https://emberjs.com/deprecations/v2.x#toc_ember-component-didinitattrs'
    }));
    (true && !(!this.render) && (0, _emberDebug.assert)('Using a custom `.render` function is no longer supported.', !this.render));
  }, _Mixin$create.__defineNonEnumerable = function (property) {
    this[property.name] = property.descriptor.value;
  }, _Mixin$create.handleEvent = function (eventName, evt) {
    return this._currentState.handleEvent(this, eventName, evt);
  }, _Mixin$create));
});
enifed("ember-views/system/action_manager", ["exports"], function (exports) {
  "use strict";

  exports.default = ActionManager;
  /**
  @module ember
  */

  function ActionManager() {}

  /**
    Global action id hash.
  
    @private
    @property registeredActions
    @type Object
  */
  ActionManager.registeredActions = {};
});
enifed('ember-views/system/event_dispatcher', ['exports', 'ember-utils', 'ember-debug', 'ember-metal', 'ember-runtime', 'ember-views/system/jquery', 'ember-views/system/action_manager', 'ember-views/compat/fallback-view-registry'], function (exports, _emberUtils, _emberDebug, _emberMetal, _emberRuntime, _jquery, _action_manager, _fallbackViewRegistry) {
  'use strict';

  /**
  @module ember
  */

  var ROOT_ELEMENT_CLASS = 'ember-application';
  var ROOT_ELEMENT_SELECTOR = '.' + ROOT_ELEMENT_CLASS;

  /**
    `Ember.EventDispatcher` handles delegating browser events to their
    corresponding `Ember.Views.` For example, when you click on a view,
    `Ember.EventDispatcher` ensures that that view's `mouseDown` method gets
    called.
  
    @class EventDispatcher
    @namespace Ember
    @private
    @extends Ember.Object
  */
  exports.default = _emberRuntime.Object.extend({

    /**
      The set of events names (and associated handler function names) to be setup
      and dispatched by the `EventDispatcher`. Modifications to this list can be done
      at setup time, generally via the `Ember.Application.customEvents` hash.
       To add new events to be listened to:
       ```javascript
      let App = Ember.Application.create({
        customEvents: {
          paste: 'paste'
        }
      });
      ```
       To prevent default events from being listened to:
       ```javascript
      let App = Ember.Application.create({
        customEvents: {
          mouseenter: null,
          mouseleave: null
        }
      });
      ```
      @property events
      @type Object
      @private
    */
    events: {
      touchstart: 'touchStart',
      touchmove: 'touchMove',
      touchend: 'touchEnd',
      touchcancel: 'touchCancel',
      keydown: 'keyDown',
      keyup: 'keyUp',
      keypress: 'keyPress',
      mousedown: 'mouseDown',
      mouseup: 'mouseUp',
      contextmenu: 'contextMenu',
      click: 'click',
      dblclick: 'doubleClick',
      mousemove: 'mouseMove',
      focusin: 'focusIn',
      focusout: 'focusOut',
      mouseenter: 'mouseEnter',
      mouseleave: 'mouseLeave',
      submit: 'submit',
      input: 'input',
      change: 'change',
      dragstart: 'dragStart',
      drag: 'drag',
      dragenter: 'dragEnter',
      dragleave: 'dragLeave',
      dragover: 'dragOver',
      drop: 'drop',
      dragend: 'dragEnd'
    },

    /**
      The root DOM element to which event listeners should be attached. Event
      listeners will be attached to the document unless this is overridden.
       Can be specified as a DOMElement or a selector string.
       The default body is a string since this may be evaluated before document.body
      exists in the DOM.
       @private
      @property rootElement
      @type DOMElement
      @default 'body'
    */
    rootElement: 'body',

    /**
      It enables events to be dispatched to the view's `eventManager.` When present,
      this object takes precedence over handling of events on the view itself.
       Note that most Ember applications do not use this feature. If your app also
      does not use it, consider setting this property to false to gain some performance
      improvement by allowing the EventDispatcher to skip the search for the
      `eventManager` on the view tree.
       ```javascript
      let EventDispatcher = Em.EventDispatcher.extend({
        events: {
            click       : 'click',
            focusin     : 'focusIn',
            focusout    : 'focusOut',
            change      : 'change'
        },
        canDispatchToEventManager: false
      });
      container.register('event_dispatcher:main', EventDispatcher);
      ```
       @property canDispatchToEventManager
      @type boolean
      @default false
      @since 1.7.0
      @deprecated
      @private
    */

    init: function () {
      var _this = this;

      this._super();

      (true && !(function () {
        var owner = (0, _emberUtils.getOwner)(_this);
        var environment = owner.lookup('-environment:main');

        return environment.isInteractive;
      }()) && (0, _emberDebug.assert)('EventDispatcher should never be instantiated in fastboot mode. Please report this as an Ember bug.', function () {
        var owner = (0, _emberUtils.getOwner)(_this);var environment = owner.lookup('-environment:main');return environment.isInteractive;
      }()));
      (true && !(!('canDispatchToEventManager' in this)) && (0, _emberDebug.deprecate)('`canDispatchToEventManager` has been deprecated in ' + this + '.', !('canDispatchToEventManager' in this), {
        id: 'ember-views.event-dispatcher.canDispatchToEventManager',
        until: '2.17.0'
      }));
    },


    /**
      Sets up event listeners for standard browser events.
       This will be called after the browser sends a `DOMContentReady` event. By
      default, it will set up all of the listeners on the document body. If you
      would like to register the listeners on a different element, set the event
      dispatcher's `root` property.
       @private
      @method setup
      @param addedEvents {Object}
    */
    setup: function (addedEvents, rootElement) {
      var event = void 0;
      var events = this._finalEvents = (0, _emberUtils.assign)({}, (0, _emberMetal.get)(this, 'events'), addedEvents);

      if ((0, _emberMetal.isNone)(rootElement)) {
        rootElement = (0, _emberMetal.get)(this, 'rootElement');
      } else {
        (0, _emberMetal.set)(this, 'rootElement', rootElement);
      }

      rootElement = (0, _jquery.default)(rootElement);

      (true && !(!rootElement.is(ROOT_ELEMENT_SELECTOR)) && (0, _emberDebug.assert)('You cannot use the same root element (' + (rootElement.selector || rootElement[0].tagName) + ') multiple times in an Ember.Application', !rootElement.is(ROOT_ELEMENT_SELECTOR)));
      (true && !(!rootElement.closest(ROOT_ELEMENT_SELECTOR).length) && (0, _emberDebug.assert)('You cannot make a new Ember.Application using a root element that is a descendent of an existing Ember.Application', !rootElement.closest(ROOT_ELEMENT_SELECTOR).length));
      (true && !(!rootElement.find(ROOT_ELEMENT_SELECTOR).length) && (0, _emberDebug.assert)('You cannot make a new Ember.Application using a root element that is an ancestor of an existing Ember.Application', !rootElement.find(ROOT_ELEMENT_SELECTOR).length));


      rootElement.addClass(ROOT_ELEMENT_CLASS);

      if (!rootElement.is(ROOT_ELEMENT_SELECTOR)) {
        throw new TypeError('Unable to add \'' + ROOT_ELEMENT_CLASS + '\' class to root element (' + (rootElement.selector || rootElement[0].tagName) + '). Make sure you set rootElement to the body or an element in the body.');
      }

      var viewRegistry = this._getViewRegistry();

      for (event in events) {
        if (events.hasOwnProperty(event)) {
          this.setupHandler(rootElement, event, events[event], viewRegistry);
        }
      }
    },


    /**
      Registers an event listener on the rootElement. If the given event is
      triggered, the provided event handler will be triggered on the target view.
       If the target view does not implement the event handler, or if the handler
      returns `false`, the parent view will be called. The event will continue to
      bubble to each successive parent view until it reaches the top.
       @private
      @method setupHandler
      @param {Element} rootElement
      @param {String} event the browser-originated event to listen to
      @param {String} eventName the name of the method to call on the view
      @param {Object} viewRegistry
    */
    setupHandler: function (rootElement, event, eventName, viewRegistry) {
      var self = this;

      if (eventName === null) {
        return;
      }

      rootElement.on(event + '.ember', '.ember-view', function (evt, triggeringManager) {
        var view = viewRegistry[this.id];
        var result = true;

        var manager = self.canDispatchToEventManager ? self._findNearestEventManager(view, eventName) : null;

        if (manager && manager !== triggeringManager) {
          result = self._dispatchEvent(manager, evt, eventName, view);
        } else if (view) {
          result = self._bubbleEvent(view, evt, eventName);
        }

        return result;
      });

      rootElement.on(event + '.ember', '[data-ember-action]', function (evt) {
        var attributes = evt.currentTarget.attributes;
        var handledActions = [];

        for (var i = 0; i < attributes.length; i++) {
          var attr = attributes.item(i);
          var attrName = attr.name;

          if (attrName.lastIndexOf('data-ember-action-', 0) !== -1) {
            var action = _action_manager.default.registeredActions[attr.value];

            // We have to check for action here since in some cases, jQuery will trigger
            // an event on `removeChild` (i.e. focusout) after we've already torn down the
            // action handlers for the view.
            if (action && action.eventName === eventName && handledActions.indexOf(action) === -1) {
              action.handler(evt);
              // Action handlers can mutate state which in turn creates new attributes on the element.
              // This effect could cause the `data-ember-action` attribute to shift down and be invoked twice.
              // To avoid this, we keep track of which actions have been handled.
              handledActions.push(action);
            }
          }
        }
      });
    },
    _getViewRegistry: function () {
      var owner = (0, _emberUtils.getOwner)(this);
      var viewRegistry = owner && owner.lookup('-view-registry:main') || _fallbackViewRegistry.default;

      return viewRegistry;
    },
    _findNearestEventManager: function (view, eventName) {
      var manager = null;

      while (view) {
        manager = (0, _emberMetal.get)(view, 'eventManager');
        if (manager && manager[eventName]) {
          break;
        }

        view = (0, _emberMetal.get)(view, 'parentView');
      }

      return manager;
    },
    _dispatchEvent: function (object, evt, eventName, view) {
      var result = true;

      var handler = object[eventName];
      if (typeof handler === 'function') {
        result = (0, _emberMetal.run)(object, handler, evt, view);
        // Do not preventDefault in eventManagers.
        evt.stopPropagation();
      } else {
        result = this._bubbleEvent(view, evt, eventName);
      }

      return result;
    },
    _bubbleEvent: function (view, evt, eventName) {
      return view.handleEvent(eventName, evt);
    },
    destroy: function () {
      var rootElement = (0, _emberMetal.get)(this, 'rootElement');
      (0, _jquery.default)(rootElement).off('.ember', '**').removeClass(ROOT_ELEMENT_CLASS);
      return this._super.apply(this, arguments);
    },
    toString: function () {
      return '(EventDispatcher)';
    }
  });
});
enifed('ember-views/system/ext', ['ember-metal'], function (_emberMetal) {
  'use strict';

  // Add a new named queue for rendering views that happens
  // after bindings have synced, and a queue for scheduling actions
  // that should occur after view rendering.
  _emberMetal.run._addQueue('render', 'actions');
  _emberMetal.run._addQueue('afterRender', 'render');
});
enifed('ember-views/system/jquery', ['exports', 'ember-environment'], function (exports, _emberEnvironment) {
  'use strict';

  var jQuery = void 0;

  if (_emberEnvironment.environment.hasDOM) {
    jQuery = _emberEnvironment.context.imports.jQuery;

    if (jQuery) {
      if (jQuery.event.addProp) {
        jQuery.event.addProp('dataTransfer');
      } else {
        // http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dndevents
        ['dragstart', 'drag', 'dragenter', 'dragleave', 'dragover', 'drop', 'dragend'].forEach(function (eventName) {
          jQuery.event.fixHooks[eventName] = {
            props: ['dataTransfer']
          };
        });
      }
    }
  }

  exports.default = jQuery;
});
enifed('ember-views/system/lookup_partial', ['exports', 'ember-debug'], function (exports, _emberDebug) {
  'use strict';

  exports.default = lookupPartial;
  exports.hasPartial = hasPartial;


  function parseUnderscoredName(templateName) {
    var nameParts = templateName.split('/');
    var lastPart = nameParts[nameParts.length - 1];

    nameParts[nameParts.length - 1] = '_' + lastPart;

    return nameParts.join('/');
  }

  function lookupPartial(templateName, owner) {
    if (templateName == null) {
      return;
    }

    var template = templateFor(owner, parseUnderscoredName(templateName), templateName);

    (true && !(!!template) && (0, _emberDebug.assert)('Unable to find partial with name "' + templateName + '"', !!template));


    return template;
  }

  function hasPartial(name, owner) {
    if (!owner) {
      throw new _emberDebug.Error('Container was not found when looking up a views template. ' + 'This is most likely due to manually instantiating an Ember.View. ' + 'See: http://git.io/EKPpnA');
    }

    return owner.hasRegistration('template:' + parseUnderscoredName(name)) || owner.hasRegistration('template:' + name);
  }

  function templateFor(owner, underscored, name) {
    if (!name) {
      return;
    }
    (true && !(name.indexOf('.') === -1) && (0, _emberDebug.assert)('templateNames are not allowed to contain periods: ' + name, name.indexOf('.') === -1));


    if (!owner) {
      throw new _emberDebug.Error('Container was not found when looking up a views template. ' + 'This is most likely due to manually instantiating an Ember.View. ' + 'See: http://git.io/EKPpnA');
    }

    return owner.lookup('template:' + underscored) || owner.lookup('template:' + name);
  }
});
enifed('ember-views/system/utils', ['exports', 'ember-utils'], function (exports, _emberUtils) {
  'use strict';

  exports.elMatches = undefined;
  exports.isSimpleClick = isSimpleClick;
  exports.constructStyleDeprecationMessage = constructStyleDeprecationMessage;
  exports.getRootViews = getRootViews;
  exports.getViewId = getViewId;
  exports.getViewElement = getViewElement;
  exports.initViewElement = initViewElement;
  exports.setViewElement = setViewElement;
  exports.getChildViews = getChildViews;
  exports.initChildViews = initChildViews;
  exports.addChildView = addChildView;
  exports.collectChildViews = collectChildViews;
  exports.getViewBounds = getViewBounds;
  exports.getViewRange = getViewRange;
  exports.getViewClientRects = getViewClientRects;
  exports.getViewBoundingClientRect = getViewBoundingClientRect;
  exports.matches = matches;


  /**
  @module ember
  */

  function isSimpleClick(event) {
    var modifier = event.shiftKey || event.metaKey || event.altKey || event.ctrlKey;
    var secondaryClick = event.which > 1; // IE9 may return undefined

    return !modifier && !secondaryClick;
  } /* globals Element */
  function constructStyleDeprecationMessage(affectedStyle) {
    return '' + 'Binding style attributes may introduce cross-site scripting vulnerabilities; ' + 'please ensure that values being bound are properly escaped. For more information, ' + 'including how to disable this warning, see ' + 'https://emberjs.com/deprecations/v1.x/#toc_binding-style-attributes. ' + 'Style affected: "' + affectedStyle + '"';
  }

  /**
    @private
    @method getRootViews
    @param {Object} owner
  */
  function getRootViews(owner) {
    var registry = owner.lookup('-view-registry:main');

    var rootViews = [];

    Object.keys(registry).forEach(function (id) {
      var view = registry[id];

      if (view.parentView === null) {
        rootViews.push(view);
      }
    });

    return rootViews;
  }

  /**
    @private
    @method getViewId
    @param {Ember.View} view
   */
  function getViewId(view) {
    if (view.tagName === '') {
      return (0, _emberUtils.guidFor)(view);
    } else {
      return view.elementId || (0, _emberUtils.guidFor)(view);
    }
  }

  var VIEW_ELEMENT = (0, _emberUtils.symbol)('VIEW_ELEMENT');

  /**
    @private
    @method getViewElement
    @param {Ember.View} view
   */
  function getViewElement(view) {
    return view[VIEW_ELEMENT];
  }

  function initViewElement(view) {
    view[VIEW_ELEMENT] = null;
  }

  function setViewElement(view, element) {
    return view[VIEW_ELEMENT] = element;
  }

  var CHILD_VIEW_IDS = (0, _emberUtils.symbol)('CHILD_VIEW_IDS');

  /**
    @private
    @method getChildViews
    @param {Ember.View} view
  */
  function getChildViews(view) {
    var owner = (0, _emberUtils.getOwner)(view);
    var registry = owner.lookup('-view-registry:main');
    return collectChildViews(view, registry);
  }

  function initChildViews(view) {
    view[CHILD_VIEW_IDS] = [];
  }

  function addChildView(parent, child) {
    parent[CHILD_VIEW_IDS].push(getViewId(child));
  }

  function collectChildViews(view, registry) {
    var ids = [];
    var views = [];

    view[CHILD_VIEW_IDS].forEach(function (id) {
      var view = registry[id];

      if (view && !view.isDestroying && !view.isDestroyed && ids.indexOf(id) === -1) {
        ids.push(id);
        views.push(view);
      }
    });

    view[CHILD_VIEW_IDS] = ids;

    return views;
  }

  /**
    @private
    @method getViewBounds
    @param {Ember.View} view
  */
  function getViewBounds(view) {
    return view.renderer.getBounds(view);
  }

  /**
    @private
    @method getViewRange
    @param {Ember.View} view
  */
  function getViewRange(view) {
    var bounds = getViewBounds(view);

    var range = document.createRange();
    range.setStartBefore(bounds.firstNode);
    range.setEndAfter(bounds.lastNode);

    return range;
  }

  /**
    `getViewClientRects` provides information about the position of the border
    box edges of a view relative to the viewport.
  
    It is only intended to be used by development tools like the Ember Inspector
    and may not work on older browsers.
  
    @private
    @method getViewClientRects
    @param {Ember.View} view
  */
  function getViewClientRects(view) {
    var range = getViewRange(view);
    return range.getClientRects();
  }

  /**
    `getViewBoundingClientRect` provides information about the position of the
    bounding border box edges of a view relative to the viewport.
  
    It is only intended to be used by development tools like the Ember Inspector
    and may not work on older browsers.
  
    @private
    @method getViewBoundingClientRect
    @param {Ember.View} view
  */
  function getViewBoundingClientRect(view) {
    var range = getViewRange(view);
    return range.getBoundingClientRect();
  }

  /**
    Determines if the element matches the specified selector.
  
    @private
    @method matches
    @param {DOMElement} el
    @param {String} selector
  */
  var elMatches = exports.elMatches = typeof Element !== 'undefined' && (Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector);

  function matches(el, selector) {
    return elMatches.call(el, selector);
  }
});
enifed('ember-views/utils/lookup-component', ['exports', 'ember-babel', 'container', 'ember/features'], function (exports, _emberBabel, _container, _features) {
  'use strict';

  exports.default = lookupComponent;

  var _templateObject = (0, _emberBabel.taggedTemplateLiteralLoose)(['component:-default'], ['component:-default']);

  function lookupModuleUnificationComponentPair(componentLookup, owner, name, options) {
    var localComponent = componentLookup.componentFor(name, owner, options);
    var localLayout = componentLookup.layoutFor(name, owner, options);

    var globalComponent = componentLookup.componentFor(name, owner);
    var globalLayout = componentLookup.layoutFor(name, owner);

    var localAndUniqueComponent = !!localComponent && (!globalComponent || localComponent.class !== globalComponent.class);
    var localAndUniqueLayout = !!localLayout && (!globalLayout || localLayout.meta.moduleName !== globalLayout.meta.moduleName);

    if (localAndUniqueComponent && localAndUniqueLayout) {
      return { layout: localLayout, component: localComponent };
    }

    if (localAndUniqueComponent && !localAndUniqueLayout) {
      return { layout: null, component: localComponent };
    }

    var defaultComponentFactory = owner.factoryFor((0, _container.privatize)(_templateObject));

    if (!localAndUniqueComponent && localAndUniqueLayout) {
      return { layout: localLayout, component: defaultComponentFactory };
    }

    var component = globalComponent || globalLayout && defaultComponentFactory;
    return { layout: globalLayout, component: component };
  }

  function lookupComponentPair(componentLookup, owner, name, options) {
    if (_features.EMBER_MODULE_UNIFICATION) {
      return lookupModuleUnificationComponentPair(componentLookup, owner, name, options);
    }

    var component = componentLookup.componentFor(name, owner, options);
    var layout = componentLookup.layoutFor(name, owner, options);

    var result = { layout: layout, component: component };

    if (layout && !component) {
      result.component = owner.factoryFor((0, _container.privatize)(_templateObject));
    }

    return result;
  }

  function lookupComponent(owner, name, options) {
    var componentLookup = owner.lookup('component-lookup:main');

    var source = options && options.source;

    if (source) {
      var localResult = lookupComponentPair(componentLookup, owner, name, options);

      if (localResult.component || localResult.layout) {
        return localResult;
      }
    }

    return lookupComponentPair(componentLookup, owner, name);
  }
});
enifed('ember-views/views/core_view', ['exports', 'ember-runtime', 'ember-views/system/utils', 'ember-views/views/states'], function (exports, _emberRuntime, _utils, _states) {
  'use strict';

  /**
    `Ember.CoreView` is an abstract class that exists to give view-like behavior
    to both Ember's main view class `Ember.Component` and other classes that don't need
    the full functionality of `Ember.Component`.
  
    Unless you have specific needs for `CoreView`, you will use `Ember.Component`
    in your applications.
  
    @class CoreView
    @namespace Ember
    @extends Ember.Object
    @deprecated Use `Ember.Component` instead.
    @uses Ember.Evented
    @uses Ember.ActionHandler
    @private
  */
  var CoreView = _emberRuntime.FrameworkObject.extend(_emberRuntime.Evented, _emberRuntime.ActionHandler, {
    isView: true,

    _states: (0, _states.cloneStates)(_states.states),

    init: function () {
      this._super.apply(this, arguments);
      this._state = 'preRender';
      this._currentState = this._states.preRender;

      (0, _utils.initViewElement)(this);

      if (!this.renderer) {
        throw new Error('Cannot instantiate a component without a renderer. Please ensure that you are creating ' + this + ' with a proper container/registry.');
      }
    },


    /**
      If the view is currently inserted into the DOM of a parent view, this
      property will point to the parent of the view.
       @property parentView
      @type Ember.View
      @default null
      @private
    */
    parentView: null,

    instrumentDetails: function (hash) {
      hash.object = this.toString();
      hash.containerKey = this._debugContainerKey;
      hash.view = this;
      return hash;
    },
    trigger: function (name) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      this._super.apply(this, arguments);
      var method = this[name];
      if (typeof method === 'function') {
        return method.apply(this, args);
      }
    },
    has: function (name) {
      return typeof this[name] === 'function' || this._super(name);
    }
  });

  (0, _emberRuntime.deprecateUnderscoreActions)(CoreView);

  CoreView.reopenClass({
    isViewFactory: true
  });

  exports.default = CoreView;
});
enifed('ember-views/views/states', ['exports', 'ember-utils', 'ember-views/views/states/default', 'ember-views/views/states/pre_render', 'ember-views/views/states/has_element', 'ember-views/views/states/in_dom', 'ember-views/views/states/destroying'], function (exports, _emberUtils, _default2, _pre_render, _has_element, _in_dom, _destroying) {
  'use strict';

  exports.states = undefined;
  exports.cloneStates = cloneStates;
  function cloneStates(from) {
    var into = {};

    into._default = {};
    into.preRender = Object.create(into._default);
    into.destroying = Object.create(into._default);
    into.hasElement = Object.create(into._default);
    into.inDOM = Object.create(into.hasElement);

    for (var stateName in from) {
      if (!from.hasOwnProperty(stateName)) {
        continue;
      }
      (0, _emberUtils.assign)(into[stateName], from[stateName]);
    }

    return into;
  }

  /*
    Describe how the specified actions should behave in the various
    states that a view can exist in. Possible states:
  
    * preRender: when a view is first instantiated, and after its
      element was destroyed, it is in the preRender state
    * hasElement: the DOM representation of the view is created,
      and is ready to be inserted
    * inDOM: once a view has been inserted into the DOM it is in
      the inDOM state. A view spends the vast majority of its
      existence in this state.
    * destroyed: once a view has been destroyed (using the destroy
      method), it is in this state. No further actions can be invoked
      on a destroyed view.
  */
  var states = exports.states = {
    _default: _default2.default,
    preRender: _pre_render.default,
    inDOM: _in_dom.default,
    hasElement: _has_element.default,
    destroying: _destroying.default
  };
});
enifed('ember-views/views/states/default', ['exports', 'ember-debug'], function (exports, _emberDebug) {
  'use strict';

  exports.default = {
    // appendChild is only legal while rendering the buffer.
    appendChild: function () {
      throw new _emberDebug.EmberError('You can\'t use appendChild outside of the rendering process');
    },


    // Handle events from `Ember.EventDispatcher`
    handleEvent: function () {
      return true; // continue event propagation
    },
    rerender: function () {},
    destroy: function () {}
  };
});
enifed('ember-views/views/states/destroying', ['exports', 'ember-utils', 'ember-debug', 'ember-views/views/states/default'], function (exports, _emberUtils, _emberDebug, _default2) {
  'use strict';

  var destroying = Object.create(_default2.default);

  (0, _emberUtils.assign)(destroying, {
    appendChild: function () {
      throw new _emberDebug.Error('You can\'t call appendChild on a view being destroyed');
    },
    rerender: function () {
      throw new _emberDebug.Error('You can\'t call rerender on a view being destroyed');
    }
  });

  exports.default = destroying;
});
enifed('ember-views/views/states/has_element', ['exports', 'ember-utils', 'ember-views/views/states/default', 'ember-metal'], function (exports, _emberUtils, _default2, _emberMetal) {
  'use strict';

  var hasElement = Object.create(_default2.default);

  (0, _emberUtils.assign)(hasElement, {
    rerender: function (view) {
      view.renderer.rerender(view);
    },
    destroy: function (view) {
      view.renderer.remove(view);
    },
    handleEvent: function (view, eventName, event) {
      if (view.has(eventName)) {
        // Handler should be able to re-dispatch events, so we don't
        // preventDefault or stopPropagation.
        return (0, _emberMetal.flaggedInstrument)('interaction.' + eventName, { event: event, view: view }, function () {
          return _emberMetal.run.join(view, view.trigger, eventName, event);
        });
      } else {
        return true; // continue event propagation
      }
    }
  });

  exports.default = hasElement;
});
enifed('ember-views/views/states/in_dom', ['exports', 'ember-utils', 'ember-metal', 'ember-debug', 'ember-views/views/states/has_element'], function (exports, _emberUtils, _emberMetal, _emberDebug, _has_element) {
  'use strict';

  var inDOM = Object.create(_has_element.default);

  (0, _emberUtils.assign)(inDOM, {
    enter: function (view) {
      // Register the view for event handling. This hash is used by
      // Ember.EventDispatcher to dispatch incoming events.
      view.renderer.register(view);

      if (true) {
        (0, _emberMetal._addBeforeObserver)(view, 'elementId', function () {
          throw new _emberDebug.Error('Changing a view\'s elementId after creation is not allowed');
        });
      }
    },
    exit: function (view) {
      view.renderer.unregister(view);
    }
  });

  exports.default = inDOM;
});
enifed('ember-views/views/states/pre_render', ['exports', 'ember-views/views/states/default'], function (exports, _default2) {
  'use strict';

  exports.default = Object.create(_default2.default);
});
enifed('ember/features', ['exports', 'ember-environment', 'ember-utils'], function (exports, _emberEnvironment, _emberUtils) {
    'use strict';

    exports.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER = exports.MANDATORY_SETTER = exports.GLIMMER_CUSTOM_COMPONENT_MANAGER = exports.EMBER_MODULE_UNIFICATION = exports.EMBER_ENGINES_MOUNT_PARAMS = exports.EMBER_ROUTING_ROUTER_SERVICE = exports.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER = exports.EMBER_METAL_WEAKMAP = exports.EMBER_IMPROVED_INSTRUMENTATION = exports.EMBER_LIBRARIES_ISREGISTERED = exports.FEATURES_STRIPPED_TEST = exports.FEATURES = exports.DEFAULT_FEATURES = undefined;
    var DEFAULT_FEATURES = exports.DEFAULT_FEATURES = { "features-stripped-test": false, "ember-libraries-isregistered": false, "ember-improved-instrumentation": false, "ember-metal-weakmap": false, "ember-glimmer-allow-backtracking-rerender": false, "ember-routing-router-service": true, "ember-engines-mount-params": true, "ember-module-unification": false, "glimmer-custom-component-manager": false, "mandatory-setter": true, "ember-glimmer-detect-backtracking-rerender": true };
    var FEATURES = exports.FEATURES = (0, _emberUtils.assign)(DEFAULT_FEATURES, _emberEnvironment.ENV.FEATURES);

    var FEATURES_STRIPPED_TEST = exports.FEATURES_STRIPPED_TEST = FEATURES["features-stripped-test"];
    var EMBER_LIBRARIES_ISREGISTERED = exports.EMBER_LIBRARIES_ISREGISTERED = FEATURES["ember-libraries-isregistered"];
    var EMBER_IMPROVED_INSTRUMENTATION = exports.EMBER_IMPROVED_INSTRUMENTATION = FEATURES["ember-improved-instrumentation"];
    var EMBER_METAL_WEAKMAP = exports.EMBER_METAL_WEAKMAP = FEATURES["ember-metal-weakmap"];
    var EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER = exports.EMBER_GLIMMER_ALLOW_BACKTRACKING_RERENDER = FEATURES["ember-glimmer-allow-backtracking-rerender"];
    var EMBER_ROUTING_ROUTER_SERVICE = exports.EMBER_ROUTING_ROUTER_SERVICE = FEATURES["ember-routing-router-service"];
    var EMBER_ENGINES_MOUNT_PARAMS = exports.EMBER_ENGINES_MOUNT_PARAMS = FEATURES["ember-engines-mount-params"];
    var EMBER_MODULE_UNIFICATION = exports.EMBER_MODULE_UNIFICATION = FEATURES["ember-module-unification"];
    var GLIMMER_CUSTOM_COMPONENT_MANAGER = exports.GLIMMER_CUSTOM_COMPONENT_MANAGER = FEATURES["glimmer-custom-component-manager"];
    var MANDATORY_SETTER = exports.MANDATORY_SETTER = FEATURES["mandatory-setter"];
    var EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER = exports.EMBER_GLIMMER_DETECT_BACKTRACKING_RERENDER = FEATURES["ember-glimmer-detect-backtracking-rerender"];
});
enifed('ember/index', ['exports', 'require', 'ember-environment', 'node-module', 'ember-utils', 'container', 'ember-metal', 'ember/features', 'ember-debug', 'backburner', 'ember-console', 'ember-runtime', 'ember-glimmer', 'ember/version', 'ember-views', 'ember-routing', 'ember-application', 'ember-extension-support'], function (exports, _require2, _emberEnvironment, _nodeModule, _emberUtils, _container, _emberMetal, _features, _emberDebug, _backburner, _emberConsole, _emberRuntime, _emberGlimmer, _version, _emberViews, _emberRouting, _emberApplication, _emberExtensionSupport) {
  'use strict';

  exports.VERSION = undefined;


  // ember-utils exports
  _emberMetal.default.getOwner = _emberUtils.getOwner;

  // ****ember-metal****


  // ****ember-environment****

  _emberMetal.default.setOwner = _emberUtils.setOwner;
  _emberMetal.default.generateGuid = _emberUtils.generateGuid;
  _emberMetal.default.GUID_KEY = _emberUtils.GUID_KEY;
  _emberMetal.default.guidFor = _emberUtils.guidFor;
  _emberMetal.default.inspect = _emberUtils.inspect;
  _emberMetal.default.makeArray = _emberUtils.makeArray;
  _emberMetal.default.canInvoke = _emberUtils.canInvoke;
  _emberMetal.default.tryInvoke = _emberUtils.tryInvoke;
  _emberMetal.default.wrap = _emberUtils.wrap;
  _emberMetal.default.applyStr = _emberUtils.applyStr;
  _emberMetal.default.uuid = _emberUtils.uuid;
  _emberMetal.default.assign = _emberUtils.assign;

  // container exports
  _emberMetal.default.Container = _container.Container;
  _emberMetal.default.Registry = _container.Registry;

  // need to import this directly, to ensure the babel feature
  // flag plugin works properly


  var computed = _emberMetal.computed;
  computed.alias = _emberMetal.alias;
  _emberMetal.default.computed = computed;
  _emberMetal.default.ComputedProperty = _emberMetal.ComputedProperty;
  _emberMetal.default.cacheFor = _emberMetal.cacheFor;

  _emberMetal.default.assert = _emberDebug.assert;
  _emberMetal.default.warn = _emberDebug.warn;
  _emberMetal.default.debug = _emberDebug.debug;
  _emberMetal.default.deprecate = _emberDebug.deprecate;
  _emberMetal.default.deprecateFunc = _emberDebug.deprecateFunc;
  _emberMetal.default.runInDebug = _emberDebug.runInDebug;
  /**
    @public
    @class Ember.Debug
  */
  _emberMetal.default.Debug = {
    registerDeprecationHandler: _emberDebug.registerDeprecationHandler,
    registerWarnHandler: _emberDebug.registerWarnHandler
  };
  _emberMetal.default.merge = _emberMetal.merge;

  _emberMetal.default.instrument = _emberMetal.instrument;
  _emberMetal.default.subscribe = _emberMetal.instrumentationSubscribe;
  _emberMetal.default.Instrumentation = {
    instrument: _emberMetal.instrument,
    subscribe: _emberMetal.instrumentationSubscribe,
    unsubscribe: _emberMetal.instrumentationUnsubscribe,
    reset: _emberMetal.instrumentationReset
  };

  _emberMetal.default.Error = _emberDebug.Error;
  _emberMetal.default.META_DESC = _emberMetal.META_DESC;
  _emberMetal.default.meta = _emberMetal.meta;
  _emberMetal.default.get = _emberMetal.get;
  _emberMetal.default.getWithDefault = _emberMetal.getWithDefault;
  _emberMetal.default._getPath = _emberMetal._getPath;
  _emberMetal.default.set = _emberMetal.set;
  _emberMetal.default.trySet = _emberMetal.trySet;
  _emberMetal.default.FEATURES = _features.FEATURES;
  _emberMetal.default.FEATURES.isEnabled = _emberDebug.isFeatureEnabled;
  _emberMetal.default._Cache = _emberMetal.Cache;
  _emberMetal.default.on = _emberMetal.on;
  _emberMetal.default.addListener = _emberMetal.addListener;
  _emberMetal.default.removeListener = _emberMetal.removeListener;
  _emberMetal.default._suspendListener = _emberMetal.suspendListener;
  _emberMetal.default._suspendListeners = _emberMetal.suspendListeners;
  _emberMetal.default.sendEvent = _emberMetal.sendEvent;
  _emberMetal.default.hasListeners = _emberMetal.hasListeners;
  _emberMetal.default.watchedEvents = _emberMetal.watchedEvents;
  _emberMetal.default.listenersFor = _emberMetal.listenersFor;
  _emberMetal.default.isNone = _emberMetal.isNone;
  _emberMetal.default.isEmpty = _emberMetal.isEmpty;
  _emberMetal.default.isBlank = _emberMetal.isBlank;
  _emberMetal.default.isPresent = _emberMetal.isPresent;
  _emberMetal.default.run = _emberMetal.run;
  _emberMetal.default._ObserverSet = _emberMetal.ObserverSet;
  _emberMetal.default.propertyWillChange = _emberMetal.propertyWillChange;
  _emberMetal.default.propertyDidChange = _emberMetal.propertyDidChange;
  _emberMetal.default.overrideChains = _emberMetal.overrideChains;
  _emberMetal.default.beginPropertyChanges = _emberMetal.beginPropertyChanges;
  _emberMetal.default.endPropertyChanges = _emberMetal.endPropertyChanges;
  _emberMetal.default.changeProperties = _emberMetal.changeProperties;
  _emberMetal.default.platform = {
    defineProperty: true,
    hasPropertyAccessors: true
  };
  _emberMetal.default.defineProperty = _emberMetal.defineProperty;
  _emberMetal.default.watchKey = _emberMetal.watchKey;
  _emberMetal.default.unwatchKey = _emberMetal.unwatchKey;
  _emberMetal.default.removeChainWatcher = _emberMetal.removeChainWatcher;
  _emberMetal.default._ChainNode = _emberMetal.ChainNode;
  _emberMetal.default.finishChains = _emberMetal.finishChains;
  _emberMetal.default.watchPath = _emberMetal.watchPath;
  _emberMetal.default.unwatchPath = _emberMetal.unwatchPath;
  _emberMetal.default.watch = _emberMetal.watch;
  _emberMetal.default.isWatching = _emberMetal.isWatching;
  _emberMetal.default.unwatch = _emberMetal.unwatch;
  _emberMetal.default.destroy = _emberMetal.destroy;
  _emberMetal.default.libraries = _emberMetal.libraries;
  _emberMetal.default.OrderedSet = _emberMetal.OrderedSet;
  _emberMetal.default.Map = _emberMetal.Map;
  _emberMetal.default.MapWithDefault = _emberMetal.MapWithDefault;
  _emberMetal.default.getProperties = _emberMetal.getProperties;
  _emberMetal.default.setProperties = _emberMetal.setProperties;
  _emberMetal.default.expandProperties = _emberMetal.expandProperties;
  _emberMetal.default.NAME_KEY = _emberUtils.NAME_KEY;
  _emberMetal.default.addObserver = _emberMetal.addObserver;
  _emberMetal.default.observersFor = _emberMetal.observersFor;
  _emberMetal.default.removeObserver = _emberMetal.removeObserver;
  _emberMetal.default._suspendObserver = _emberMetal._suspendObserver;
  _emberMetal.default._suspendObservers = _emberMetal._suspendObservers;
  _emberMetal.default.required = _emberMetal.required;
  _emberMetal.default.aliasMethod = _emberMetal.aliasMethod;
  _emberMetal.default.observer = _emberMetal.observer;
  _emberMetal.default.immediateObserver = _emberMetal._immediateObserver;
  _emberMetal.default.mixin = _emberMetal.mixin;
  _emberMetal.default.Mixin = _emberMetal.Mixin;
  _emberMetal.default.bind = _emberMetal.bind;
  _emberMetal.default.Binding = _emberMetal.Binding;
  _emberMetal.default.isGlobalPath = _emberMetal.isGlobalPath;

  if (_features.EMBER_METAL_WEAKMAP) {
    _emberMetal.default.WeakMap = _emberMetal.WeakMap;
  }

  Object.defineProperty(_emberMetal.default, 'ENV', {
    get: function () {
      return _emberEnvironment.ENV;
    },

    enumerable: false
  });

  /**
   The context that Ember searches for namespace instances on.
  
   @private
   */
  Object.defineProperty(_emberMetal.default, 'lookup', {
    get: function () {
      return _emberEnvironment.context.lookup;
    },
    set: function (value) {
      _emberEnvironment.context.lookup = value;
    },

    enumerable: false
  });

  _emberMetal.default.EXTEND_PROTOTYPES = _emberEnvironment.ENV.EXTEND_PROTOTYPES;

  // BACKWARDS COMPAT ACCESSORS FOR ENV FLAGS
  Object.defineProperty(_emberMetal.default, 'LOG_STACKTRACE_ON_DEPRECATION', {
    get: function () {
      return _emberEnvironment.ENV.LOG_STACKTRACE_ON_DEPRECATION;
    },
    set: function (value) {
      _emberEnvironment.ENV.LOG_STACKTRACE_ON_DEPRECATION = !!value;
    },

    enumerable: false
  });

  Object.defineProperty(_emberMetal.default, 'LOG_VERSION', {
    get: function () {
      return _emberEnvironment.ENV.LOG_VERSION;
    },
    set: function (value) {
      _emberEnvironment.ENV.LOG_VERSION = !!value;
    },

    enumerable: false
  });

  if (true) {
    Object.defineProperty(_emberMetal.default, 'MODEL_FACTORY_INJECTIONS', {
      get: function () {
        return false;
      },
      set: function (value) {
        (true && !(false) && (0, _emberDebug.deprecate)('Ember.MODEL_FACTORY_INJECTIONS is no longer required', false, {
          id: 'ember-metal.model_factory_injections',
          until: '2.17.0',
          url: 'https://emberjs.com/deprecations/v2.x/#toc_id-ember-metal-model_factory_injections'
        }));
      },

      enumerable: false
    });
  }

  Object.defineProperty(_emberMetal.default, 'LOG_BINDINGS', {
    get: function () {
      return _emberEnvironment.ENV.LOG_BINDINGS;
    },
    set: function (value) {
      _emberEnvironment.ENV.LOG_BINDINGS = !!value;
    },

    enumerable: false
  });

  /**
    A function may be assigned to `Ember.onerror` to be called when Ember
    internals encounter an error. This is useful for specialized error handling
    and reporting code.
  
    ```javascript
    Ember.onerror = function(error) {
      Em.$.ajax('/report-error', 'POST', {
        stack: error.stack,
        otherInformation: 'whatever app state you want to provide'
      });
    };
    ```
  
    Internally, `Ember.onerror` is used as Backburner's error handler.
  
    @event onerror
    @for Ember
    @param {Exception} error the error object
    @public
  */
  Object.defineProperty(_emberMetal.default, 'onerror', {
    get: _emberMetal.getOnerror,
    set: _emberMetal.setOnerror,
    enumerable: false
  });

  /**
    An empty function useful for some operations. Always returns `this`.
  
    @method K
    @return {Object}
    @public
    @deprecated
  */
  function deprecatedEmberK() {
    return this;
  }

  Object.defineProperty(_emberMetal.default, 'K', {
    get: function () {
      (true && !(false) && (0, _emberDebug.deprecate)('Ember.K is deprecated in favor of defining a function inline.', false, {
        id: 'ember-metal.ember-k',
        until: '3.0.0',
        url: 'https://emberjs.com/deprecations/v2.x#toc_code-ember-k-code'
      }));


      return deprecatedEmberK;
    }
  });

  Object.defineProperty(_emberMetal.default, 'testing', {
    get: _emberDebug.isTesting,
    set: _emberDebug.setTesting,
    enumerable: false
  });

  _emberMetal.default._Backburner = _backburner.default;

  _emberMetal.default.Logger = _emberConsole.default;

  // ****ember-runtime****

  _emberMetal.default.String = _emberRuntime.String;
  _emberMetal.default.Object = _emberRuntime.Object;
  _emberMetal.default._RegistryProxyMixin = _emberRuntime.RegistryProxyMixin;
  _emberMetal.default._ContainerProxyMixin = _emberRuntime.ContainerProxyMixin;
  _emberMetal.default.compare = _emberRuntime.compare;
  _emberMetal.default.copy = _emberRuntime.copy;
  _emberMetal.default.isEqual = _emberRuntime.isEqual;
  _emberMetal.default.inject = _emberRuntime.inject;
  _emberMetal.default.Array = _emberRuntime.Array;
  _emberMetal.default.Comparable = _emberRuntime.Comparable;
  _emberMetal.default.Enumerable = _emberRuntime.Enumerable;
  _emberMetal.default.ArrayProxy = _emberRuntime.ArrayProxy;
  _emberMetal.default.ObjectProxy = _emberRuntime.ObjectProxy;
  _emberMetal.default.ActionHandler = _emberRuntime.ActionHandler;
  _emberMetal.default.CoreObject = _emberRuntime.CoreObject;
  _emberMetal.default.NativeArray = _emberRuntime.NativeArray;
  _emberMetal.default.Copyable = _emberRuntime.Copyable;
  _emberMetal.default.Freezable = _emberRuntime.Freezable;
  _emberMetal.default.FROZEN_ERROR = _emberRuntime.FROZEN_ERROR;
  _emberMetal.default.MutableEnumerable = _emberRuntime.MutableEnumerable;
  _emberMetal.default.MutableArray = _emberRuntime.MutableArray;
  _emberMetal.default.TargetActionSupport = _emberRuntime.TargetActionSupport;
  _emberMetal.default.Evented = _emberRuntime.Evented;
  _emberMetal.default.PromiseProxyMixin = _emberRuntime.PromiseProxyMixin;
  _emberMetal.default.Observable = _emberRuntime.Observable;
  _emberMetal.default.typeOf = _emberRuntime.typeOf;
  _emberMetal.default.isArray = _emberRuntime.isArray;
  _emberMetal.default.Object = _emberRuntime.Object;
  _emberMetal.default.onLoad = _emberRuntime.onLoad;
  _emberMetal.default.runLoadHooks = _emberRuntime.runLoadHooks;
  _emberMetal.default.Controller = _emberRuntime.Controller;
  _emberMetal.default.ControllerMixin = _emberRuntime.ControllerMixin;
  _emberMetal.default.Service = _emberRuntime.Service;
  _emberMetal.default._ProxyMixin = _emberRuntime._ProxyMixin;
  _emberMetal.default.RSVP = _emberRuntime.RSVP;
  _emberMetal.default.Namespace = _emberRuntime.Namespace;

  // ES6TODO: this seems a less than ideal way/place to add properties to Ember.computed
  computed.empty = _emberRuntime.empty;
  computed.notEmpty = _emberRuntime.notEmpty;
  computed.none = _emberRuntime.none;
  computed.not = _emberRuntime.not;
  computed.bool = _emberRuntime.bool;
  computed.match = _emberRuntime.match;
  computed.equal = _emberRuntime.equal;
  computed.gt = _emberRuntime.gt;
  computed.gte = _emberRuntime.gte;
  computed.lt = _emberRuntime.lt;
  computed.lte = _emberRuntime.lte;
  computed.oneWay = _emberRuntime.oneWay;
  computed.reads = _emberRuntime.oneWay;
  computed.readOnly = _emberRuntime.readOnly;
  computed.deprecatingAlias = _emberRuntime.deprecatingAlias;
  computed.and = _emberRuntime.and;
  computed.or = _emberRuntime.or;
  computed.any = _emberRuntime.any;

  computed.sum = _emberRuntime.sum;
  computed.min = _emberRuntime.min;
  computed.max = _emberRuntime.max;
  computed.map = _emberRuntime.map;
  computed.sort = _emberRuntime.sort;
  computed.setDiff = _emberRuntime.setDiff;
  computed.mapBy = _emberRuntime.mapBy;
  computed.filter = _emberRuntime.filter;
  computed.filterBy = _emberRuntime.filterBy;
  computed.uniq = _emberRuntime.uniq;

  computed.uniqBy = _emberRuntime.uniqBy;
  computed.union = _emberRuntime.union;
  computed.intersect = _emberRuntime.intersect;
  computed.collect = _emberRuntime.collect;

  /**
    Defines the hash of localized strings for the current language. Used by
    the `Ember.String.loc()` helper. To localize, add string values to this
    hash.
  
    @property STRINGS
    @for Ember
    @type Object
    @private
  */
  Object.defineProperty(_emberMetal.default, 'STRINGS', {
    configurable: false,
    get: _emberRuntime.getStrings,
    set: _emberRuntime.setStrings
  });

  /**
    Whether searching on the global for new Namespace instances is enabled.
  
    This is only exported here as to not break any addons.  Given the new
    visit API, you will have issues if you treat this as a indicator of
    booted.
  
    Internally this is only exposing a flag in Namespace.
  
    @property BOOTED
    @for Ember
    @type Boolean
    @private
  */
  Object.defineProperty(_emberMetal.default, 'BOOTED', {
    configurable: false,
    enumerable: false,
    get: _emberRuntime.isNamespaceSearchDisabled,
    set: _emberRuntime.setNamespaceSearchDisabled
  });

  _emberMetal.default.Component = _emberGlimmer.Component;
  _emberGlimmer.Helper.helper = _emberGlimmer.helper;
  _emberMetal.default.Helper = _emberGlimmer.Helper;
  _emberMetal.default.Checkbox = _emberGlimmer.Checkbox;
  _emberMetal.default.TextField = _emberGlimmer.TextField;
  _emberMetal.default.TextArea = _emberGlimmer.TextArea;
  _emberMetal.default.LinkComponent = _emberGlimmer.LinkComponent;

  if (_emberEnvironment.ENV.EXTEND_PROTOTYPES.String) {
    String.prototype.htmlSafe = function () {
      return (0, _emberGlimmer.htmlSafe)(this);
    };
  }

  var EmberHandlebars = _emberMetal.default.Handlebars = _emberMetal.default.Handlebars || {};
  var EmberHTMLBars = _emberMetal.default.HTMLBars = _emberMetal.default.HTMLBars || {};
  var EmberHandleBarsUtils = EmberHandlebars.Utils = EmberHandlebars.Utils || {};

  Object.defineProperty(EmberHandlebars, 'SafeString', {
    get: _emberGlimmer._getSafeString
  });

  EmberHTMLBars.template = EmberHandlebars.template = _emberGlimmer.template;
  EmberHandleBarsUtils.escapeExpression = _emberGlimmer.escapeExpression;
  _emberRuntime.String.htmlSafe = _emberGlimmer.htmlSafe;

  _emberRuntime.String.isHTMLSafe = _emberGlimmer.isHTMLSafe;

  /**
    Global hash of shared templates. This will automatically be populated
    by the build tools so that you can store your Handlebars templates in
    separate files that get loaded into JavaScript at buildtime.
  
    @property TEMPLATES
    @for Ember
    @type Object
    @private
  */
  Object.defineProperty(_emberMetal.default, 'TEMPLATES', {
    get: _emberGlimmer.getTemplates,
    set: _emberGlimmer.setTemplates,
    configurable: false,
    enumerable: false
  });

  exports.VERSION = _version.default;


  /**
    The semantic version
  
    @property VERSION
    @type String
    @public
  */
  _emberMetal.default.VERSION = _version.default;

  _emberMetal.libraries.registerCoreLibrary('Ember', _version.default);

  // require the main entry points for each of these packages
  // this is so that the global exports occur properly


  _emberMetal.default.$ = _emberViews.jQuery;

  _emberMetal.default.ViewTargetActionSupport = _emberViews.ViewTargetActionSupport;

  _emberMetal.default.ViewUtils = {
    isSimpleClick: _emberViews.isSimpleClick,
    getViewElement: _emberViews.getViewElement,
    getViewBounds: _emberViews.getViewBounds,
    getViewClientRects: _emberViews.getViewClientRects,
    getViewBoundingClientRect: _emberViews.getViewBoundingClientRect,
    getRootViews: _emberViews.getRootViews,
    getChildViews: _emberViews.getChildViews
  };

  _emberMetal.default.TextSupport = _emberViews.TextSupport;
  _emberMetal.default.ComponentLookup = _emberViews.ComponentLookup;
  _emberMetal.default.EventDispatcher = _emberViews.EventDispatcher;

  _emberMetal.default.Location = _emberRouting.Location;
  _emberMetal.default.AutoLocation = _emberRouting.AutoLocation;
  _emberMetal.default.HashLocation = _emberRouting.HashLocation;
  _emberMetal.default.HistoryLocation = _emberRouting.HistoryLocation;
  _emberMetal.default.NoneLocation = _emberRouting.NoneLocation;
  _emberMetal.default.controllerFor = _emberRouting.controllerFor;
  _emberMetal.default.generateControllerFactory = _emberRouting.generateControllerFactory;
  _emberMetal.default.generateController = _emberRouting.generateController;
  _emberMetal.default.RouterDSL = _emberRouting.RouterDSL;
  _emberMetal.default.Router = _emberRouting.Router;
  _emberMetal.default.Route = _emberRouting.Route;

  _emberMetal.default.Application = _emberApplication.Application;
  _emberMetal.default.ApplicationInstance = _emberApplication.ApplicationInstance;
  _emberMetal.default.Engine = _emberApplication.Engine;
  _emberMetal.default.EngineInstance = _emberApplication.EngineInstance;
  _emberMetal.default.DefaultResolver = _emberMetal.default.Resolver = _emberApplication.Resolver;

  (0, _emberRuntime.runLoadHooks)('Ember.Application', _emberApplication.Application);

  _emberMetal.default.DataAdapter = _emberExtensionSupport.DataAdapter;
  _emberMetal.default.ContainerDebugAdapter = _emberExtensionSupport.ContainerDebugAdapter;

  if ((0, _require2.has)('ember-template-compiler')) {
    (0, _require2.default)('ember-template-compiler');
  }

  // do this to ensure that Ember.Test is defined properly on the global
  // if it is present.
  if ((0, _require2.has)('ember-testing')) {
    var testing = (0, _require2.default)('ember-testing');

    _emberMetal.default.Test = testing.Test;
    _emberMetal.default.Test.Adapter = testing.Adapter;
    _emberMetal.default.Test.QUnitAdapter = testing.QUnitAdapter;
    _emberMetal.default.setupForTesting = testing.setupForTesting;
  }

  (0, _emberRuntime.runLoadHooks)('Ember');

  /**
    @module ember
    @private
  */
  exports.default = _emberMetal.default;


  /* globals module */
  if (_nodeModule.IS_NODE) {
    _nodeModule.module.exports = _emberMetal.default;
  } else {
    _emberEnvironment.context.exports.Ember = _emberEnvironment.context.exports.Em = _emberMetal.default;
  }

  /**
   @module jquery
   @public
   */

  /**
   @class jquery
   @public
   @static
   */

  /**
    Alias for jQuery
  
    @for jquery
    @method $
    @static
    @public
  */
});
enifed("ember/version", ["exports"], function (exports) {
  "use strict";

  exports.default = "2.16.1";
});
enifed("handlebars", ["exports"], function (exports) {
  "use strict";

  // File ignored in coverage tests via setting in .istanbul.yml
  /* Jison generated parser */
  var handlebars = function () {
    var parser = { trace: function trace() {},
      yy: {},
      symbols_: { "error": 2, "root": 3, "program": 4, "EOF": 5, "program_repetition0": 6, "statement": 7, "mustache": 8, "block": 9, "rawBlock": 10, "partial": 11, "partialBlock": 12, "content": 13, "COMMENT": 14, "CONTENT": 15, "openRawBlock": 16, "rawBlock_repetition_plus0": 17, "END_RAW_BLOCK": 18, "OPEN_RAW_BLOCK": 19, "helperName": 20, "openRawBlock_repetition0": 21, "openRawBlock_option0": 22, "CLOSE_RAW_BLOCK": 23, "openBlock": 24, "block_option0": 25, "closeBlock": 26, "openInverse": 27, "block_option1": 28, "OPEN_BLOCK": 29, "openBlock_repetition0": 30, "openBlock_option0": 31, "openBlock_option1": 32, "CLOSE": 33, "OPEN_INVERSE": 34, "openInverse_repetition0": 35, "openInverse_option0": 36, "openInverse_option1": 37, "openInverseChain": 38, "OPEN_INVERSE_CHAIN": 39, "openInverseChain_repetition0": 40, "openInverseChain_option0": 41, "openInverseChain_option1": 42, "inverseAndProgram": 43, "INVERSE": 44, "inverseChain": 45, "inverseChain_option0": 46, "OPEN_ENDBLOCK": 47, "OPEN": 48, "mustache_repetition0": 49, "mustache_option0": 50, "OPEN_UNESCAPED": 51, "mustache_repetition1": 52, "mustache_option1": 53, "CLOSE_UNESCAPED": 54, "OPEN_PARTIAL": 55, "partialName": 56, "partial_repetition0": 57, "partial_option0": 58, "openPartialBlock": 59, "OPEN_PARTIAL_BLOCK": 60, "openPartialBlock_repetition0": 61, "openPartialBlock_option0": 62, "param": 63, "sexpr": 64, "OPEN_SEXPR": 65, "sexpr_repetition0": 66, "sexpr_option0": 67, "CLOSE_SEXPR": 68, "hash": 69, "hash_repetition_plus0": 70, "hashSegment": 71, "ID": 72, "EQUALS": 73, "blockParams": 74, "OPEN_BLOCK_PARAMS": 75, "blockParams_repetition_plus0": 76, "CLOSE_BLOCK_PARAMS": 77, "path": 78, "dataName": 79, "STRING": 80, "NUMBER": 81, "BOOLEAN": 82, "UNDEFINED": 83, "NULL": 84, "DATA": 85, "pathSegments": 86, "SEP": 87, "$accept": 0, "$end": 1 },
      terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" },
      productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
      performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$
      /**/) {

        var $0 = $$.length - 1;
        switch (yystate) {
          case 1:
            return $$[$0 - 1];
            break;
          case 2:
            this.$ = yy.prepareProgram($$[$0]);
            break;
          case 3:
            this.$ = $$[$0];
            break;
          case 4:
            this.$ = $$[$0];
            break;
          case 5:
            this.$ = $$[$0];
            break;
          case 6:
            this.$ = $$[$0];
            break;
          case 7:
            this.$ = $$[$0];
            break;
          case 8:
            this.$ = $$[$0];
            break;
          case 9:
            this.$ = {
              type: 'CommentStatement',
              value: yy.stripComment($$[$0]),
              strip: yy.stripFlags($$[$0], $$[$0]),
              loc: yy.locInfo(this._$)
            };

            break;
          case 10:
            this.$ = {
              type: 'ContentStatement',
              original: $$[$0],
              value: $$[$0],
              loc: yy.locInfo(this._$)
            };

            break;
          case 11:
            this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
            break;
          case 12:
            this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
            break;
          case 13:
            this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);
            break;
          case 14:
            this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);
            break;
          case 15:
            this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
            break;
          case 16:
            this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
            break;
          case 17:
            this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
            break;
          case 18:
            this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
            break;
          case 19:
            var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),
                program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
            program.chained = true;

            this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };

            break;
          case 20:
            this.$ = $$[$0];
            break;
          case 21:
            this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
            break;
          case 22:
            this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
            break;
          case 23:
            this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
            break;
          case 24:
            this.$ = {
              type: 'PartialStatement',
              name: $$[$0 - 3],
              params: $$[$0 - 2],
              hash: $$[$0 - 1],
              indent: '',
              strip: yy.stripFlags($$[$0 - 4], $$[$0]),
              loc: yy.locInfo(this._$)
            };

            break;
          case 25:
            this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
            break;
          case 26:
            this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
            break;
          case 27:
            this.$ = $$[$0];
            break;
          case 28:
            this.$ = $$[$0];
            break;
          case 29:
            this.$ = {
              type: 'SubExpression',
              path: $$[$0 - 3],
              params: $$[$0 - 2],
              hash: $$[$0 - 1],
              loc: yy.locInfo(this._$)
            };

            break;
          case 30:
            this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };
            break;
          case 31:
            this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
            break;
          case 32:
            this.$ = yy.id($$[$0 - 1]);
            break;
          case 33:
            this.$ = $$[$0];
            break;
          case 34:
            this.$ = $$[$0];
            break;
          case 35:
            this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
            break;
          case 36:
            this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
            break;
          case 37:
            this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };
            break;
          case 38:
            this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };
            break;
          case 39:
            this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };
            break;
          case 40:
            this.$ = $$[$0];
            break;
          case 41:
            this.$ = $$[$0];
            break;
          case 42:
            this.$ = yy.preparePath(true, $$[$0], this._$);
            break;
          case 43:
            this.$ = yy.preparePath(false, $$[$0], this._$);
            break;
          case 44:
            $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];
            break;
          case 45:
            this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
            break;
          case 46:
            this.$ = [];
            break;
          case 47:
            $$[$0 - 1].push($$[$0]);
            break;
          case 48:
            this.$ = [$$[$0]];
            break;
          case 49:
            $$[$0 - 1].push($$[$0]);
            break;
          case 50:
            this.$ = [];
            break;
          case 51:
            $$[$0 - 1].push($$[$0]);
            break;
          case 58:
            this.$ = [];
            break;
          case 59:
            $$[$0 - 1].push($$[$0]);
            break;
          case 64:
            this.$ = [];
            break;
          case 65:
            $$[$0 - 1].push($$[$0]);
            break;
          case 70:
            this.$ = [];
            break;
          case 71:
            $$[$0 - 1].push($$[$0]);
            break;
          case 78:
            this.$ = [];
            break;
          case 79:
            $$[$0 - 1].push($$[$0]);
            break;
          case 82:
            this.$ = [];
            break;
          case 83:
            $$[$0 - 1].push($$[$0]);
            break;
          case 86:
            this.$ = [];
            break;
          case 87:
            $$[$0 - 1].push($$[$0]);
            break;
          case 90:
            this.$ = [];
            break;
          case 91:
            $$[$0 - 1].push($$[$0]);
            break;
          case 94:
            this.$ = [];
            break;
          case 95:
            $$[$0 - 1].push($$[$0]);
            break;
          case 98:
            this.$ = [$$[$0]];
            break;
          case 99:
            $$[$0 - 1].push($$[$0]);
            break;
          case 100:
            this.$ = [$$[$0]];
            break;
          case 101:
            $$[$0 - 1].push($$[$0]);
            break;
        }
      },
      table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 13: 40, 15: [1, 20], 17: 39 }, { 20: 42, 56: 41, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 45, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 48, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 42, 56: 49, 64: 43, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 50, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 51] }, { 72: [1, 35], 86: 52 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 53, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 54, 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 55, 47: [2, 54] }, { 28: 60, 43: 61, 44: [1, 59], 47: [2, 56] }, { 13: 63, 15: [1, 20], 18: [1, 62] }, { 15: [2, 48], 18: [2, 48] }, { 33: [2, 86], 57: 64, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 65, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 66, 47: [1, 67] }, { 30: 68, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 69, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 70, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 71, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 75, 33: [2, 80], 50: 72, 63: 73, 64: 76, 65: [1, 44], 69: 74, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 80] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 51] }, { 20: 75, 53: 81, 54: [2, 84], 63: 82, 64: 76, 65: [1, 44], 69: 83, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 84, 47: [1, 67] }, { 47: [2, 55] }, { 4: 85, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 86, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 87, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 88, 47: [1, 67] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 75, 33: [2, 88], 58: 89, 63: 90, 64: 76, 65: [1, 44], 69: 91, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 92, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 93, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 31: 94, 33: [2, 60], 63: 95, 64: 76, 65: [1, 44], 69: 96, 70: 77, 71: 78, 72: [1, 79], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 66], 36: 97, 63: 98, 64: 76, 65: [1, 44], 69: 99, 70: 77, 71: 78, 72: [1, 79], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 22: 100, 23: [2, 52], 63: 101, 64: 76, 65: [1, 44], 69: 102, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 75, 33: [2, 92], 62: 103, 63: 104, 64: 76, 65: [1, 44], 69: 105, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 106] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 107, 72: [1, 108], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 109], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 110] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 56, 39: [1, 58], 43: 57, 44: [1, 59], 45: 112, 46: 111, 47: [2, 76] }, { 33: [2, 70], 40: 113, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 114] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 75, 63: 116, 64: 76, 65: [1, 44], 67: 115, 68: [2, 96], 69: 117, 70: 77, 71: 78, 72: [1, 79], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 118] }, { 32: 119, 33: [2, 62], 74: 120, 75: [1, 121] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 122, 74: 123, 75: [1, 121] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 124] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 125] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 109] }, { 20: 75, 63: 126, 64: 76, 65: [1, 44], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 75, 33: [2, 72], 41: 127, 63: 128, 64: 76, 65: [1, 44], 69: 129, 70: 77, 71: 78, 72: [1, 79], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 130] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 131] }, { 33: [2, 63] }, { 72: [1, 133], 76: 132 }, { 33: [1, 134] }, { 33: [2, 69] }, { 15: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 135, 74: 136, 75: [1, 121] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 138], 77: [1, 137] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 139] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],
      defaultActions: { 4: [2, 1], 55: [2, 55], 57: [2, 20], 61: [2, 57], 74: [2, 81], 83: [2, 85], 87: [2, 18], 91: [2, 89], 102: [2, 53], 105: [2, 93], 111: [2, 19], 112: [2, 77], 117: [2, 97], 120: [2, 63], 123: [2, 69], 124: [2, 12], 136: [2, 75], 137: [2, 32] },
      parseError: function parseError(str, hash) {
        throw new Error(str);
      },
      parse: function parse(input) {
        var self = this,
            stack = [0],
            vstack = [null],
            lstack = [],
            table = this.table,
            yytext = "",
            yylineno = 0,
            yyleng = 0,
            recovering = 0,
            TERROR = 2,
            EOF = 1;
        this.lexer.setInput(input);
        this.lexer.yy = this.yy;
        this.yy.lexer = this.lexer;
        this.yy.parser = this;
        if (typeof this.lexer.yylloc == "undefined") this.lexer.yylloc = {};
        var yyloc = this.lexer.yylloc;
        lstack.push(yyloc);
        var ranges = this.lexer.options && this.lexer.options.ranges;
        if (typeof this.yy.parseError === "function") this.parseError = this.yy.parseError;
        function lex() {
          var token;
          token = self.lexer.lex() || 1;
          if (typeof token !== "number") {
            token = self.symbols_[token] || token;
          }
          return token;
        }
        var symbol,
            preErrorSymbol,
            state,
            action,
            a,
            r,
            yyval = {},
            p,
            len,
            newState,
            expected;
        while (true) {
          state = stack[stack.length - 1];
          if (this.defaultActions[state]) {
            action = this.defaultActions[state];
          } else {
            if (symbol === null || typeof symbol == "undefined") {
              symbol = lex();
            }
            action = table[state] && table[state][symbol];
          }
          if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
              expected = [];
              for (p in table[state]) {
                if (this.terminals_[p] && p > 2) {
                  expected.push("'" + this.terminals_[p] + "'");
                }
              }if (this.lexer.showPosition) {
                errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
              } else {
                errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1 ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'");
              }
              this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
            }
          }
          if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
          }
          switch (action[0]) {
            case 1:
              stack.push(symbol);
              vstack.push(this.lexer.yytext);
              lstack.push(this.lexer.yylloc);
              stack.push(action[1]);
              symbol = null;
              if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) recovering--;
              } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
              }
              break;
            case 2:
              len = this.productions_[action[1]][1];
              yyval.$ = vstack[vstack.length - len];
              yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };
              if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
              }
              r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
              if (typeof r !== "undefined") {
                return r;
              }
              if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
              }
              stack.push(this.productions_[action[1]][0]);
              vstack.push(yyval.$);
              lstack.push(yyval._$);
              newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
              stack.push(newState);
              break;
            case 3:
              return true;
          }
        }
        return true;
      }
    };
    /* Jison generated lexer */
    var lexer = function () {
      var lexer = { EOF: 1,
        parseError: function parseError(str, hash) {
          if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
          } else {
            throw new Error(str);
          }
        },
        setInput: function (input) {
          this._input = input;
          this._more = this._less = this.done = false;
          this.yylineno = this.yyleng = 0;
          this.yytext = this.matched = this.match = '';
          this.conditionStack = ['INITIAL'];
          this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };
          if (this.options.ranges) this.yylloc.range = [0, 0];
          this.offset = 0;
          return this;
        },
        input: function () {
          var ch = this._input[0];
          this.yytext += ch;
          this.yyleng++;
          this.offset++;
          this.match += ch;
          this.matched += ch;
          var lines = ch.match(/(?:\r\n?|\n).*/g);
          if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
          } else {
            this.yylloc.last_column++;
          }
          if (this.options.ranges) this.yylloc.range[1]++;

          this._input = this._input.slice(1);
          return ch;
        },
        unput: function (ch) {
          var len = ch.length;
          var lines = ch.split(/(?:\r\n?|\n)/g);

          this._input = ch + this._input;
          this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
          //this.yyleng -= len;
          this.offset -= len;
          var oldLines = this.match.split(/(?:\r\n?|\n)/g);
          this.match = this.match.substr(0, this.match.length - 1);
          this.matched = this.matched.substr(0, this.matched.length - 1);

          if (lines.length - 1) this.yylineno -= lines.length - 1;
          var r = this.yylloc.range;

          this.yylloc = { first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len
          };

          if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
          }
          return this;
        },
        more: function () {
          this._more = true;
          return this;
        },
        less: function (n) {
          this.unput(this.match.slice(n));
        },
        pastInput: function () {
          var past = this.matched.substr(0, this.matched.length - this.match.length);
          return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\n/g, "");
        },
        upcomingInput: function () {
          var next = this.match;
          if (next.length < 20) {
            next += this._input.substr(0, 20 - next.length);
          }
          return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
        },
        showPosition: function () {
          var pre = this.pastInput();
          var c = new Array(pre.length + 1).join("-");
          return pre + this.upcomingInput() + "\n" + c + "^";
        },
        next: function () {
          if (this.done) {
            return this.EOF;
          }
          if (!this._input) this.done = true;

          var token, match, tempMatch, index, col, lines;
          if (!this._more) {
            this.yytext = '';
            this.match = '';
          }
          var rules = this._currentRules();
          for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
              match = tempMatch;
              index = i;
              if (!this.options.flex) break;
            }
          }
          if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = { first_line: this.yylloc.last_line,
              last_line: this.yylineno + 1,
              first_column: this.yylloc.last_column,
              last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length };
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
              this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;else return;
          }
          if (this._input === "") {
            return this.EOF;
          } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), { text: "", token: null, line: this.yylineno });
          }
        },
        lex: function lex() {
          var r = this.next();
          if (typeof r !== 'undefined') {
            return r;
          } else {
            return this.lex();
          }
        },
        begin: function begin(condition) {
          this.conditionStack.push(condition);
        },
        popState: function popState() {
          return this.conditionStack.pop();
        },
        _currentRules: function _currentRules() {
          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        },
        topState: function () {
          return this.conditionStack[this.conditionStack.length - 2];
        },
        pushState: function begin(condition) {
          this.begin(condition);
        } };
      lexer.options = {};
      lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START
      /**/) {

        function strip(start, end) {
          return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng - end);
        }

        var YYSTATE = YY_START;
        switch ($avoiding_name_collisions) {
          case 0:
            if (yy_.yytext.slice(-2) === "\\\\") {
              strip(0, 1);
              this.begin("mu");
            } else if (yy_.yytext.slice(-1) === "\\") {
              strip(0, 1);
              this.begin("emu");
            } else {
              this.begin("mu");
            }
            if (yy_.yytext) return 15;

            break;
          case 1:
            return 15;
            break;
          case 2:
            this.popState();
            return 15;

            break;
          case 3:
            this.begin('raw');return 15;
            break;
          case 4:
            this.popState();
            // Should be using `this.topState()` below, but it currently
            // returns the second top instead of the first top. Opened an
            // issue about it at https://github.com/zaach/jison/issues/291
            if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {
              return 15;
            } else {
              yy_.yytext = yy_.yytext.substr(5, yy_.yyleng - 9);
              return 'END_RAW_BLOCK';
            }

            break;
          case 5:
            return 15;
            break;
          case 6:
            this.popState();
            return 14;

            break;
          case 7:
            return 65;
            break;
          case 8:
            return 68;
            break;
          case 9:
            return 19;
            break;
          case 10:
            this.popState();
            this.begin('raw');
            return 23;

            break;
          case 11:
            return 55;
            break;
          case 12:
            return 60;
            break;
          case 13:
            return 29;
            break;
          case 14:
            return 47;
            break;
          case 15:
            this.popState();return 44;
            break;
          case 16:
            this.popState();return 44;
            break;
          case 17:
            return 34;
            break;
          case 18:
            return 39;
            break;
          case 19:
            return 51;
            break;
          case 20:
            return 48;
            break;
          case 21:
            this.unput(yy_.yytext);
            this.popState();
            this.begin('com');

            break;
          case 22:
            this.popState();
            return 14;

            break;
          case 23:
            return 48;
            break;
          case 24:
            return 73;
            break;
          case 25:
            return 72;
            break;
          case 26:
            return 72;
            break;
          case 27:
            return 87;
            break;
          case 28:
            // ignore whitespace
            break;
          case 29:
            this.popState();return 54;
            break;
          case 30:
            this.popState();return 33;
            break;
          case 31:
            yy_.yytext = strip(1, 2).replace(/\\"/g, '"');return 80;
            break;
          case 32:
            yy_.yytext = strip(1, 2).replace(/\\'/g, "'");return 80;
            break;
          case 33:
            return 85;
            break;
          case 34:
            return 82;
            break;
          case 35:
            return 82;
            break;
          case 36:
            return 83;
            break;
          case 37:
            return 84;
            break;
          case 38:
            return 81;
            break;
          case 39:
            return 75;
            break;
          case 40:
            return 77;
            break;
          case 41:
            return 72;
            break;
          case 42:
            yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');return 72;
            break;
          case 43:
            return 'INVALID';
            break;
          case 44:
            return 5;
            break;
        }
      };
      lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/];
      lexer.conditions = { "mu": { "rules": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inclusive": false }, "emu": { "rules": [2], "inclusive": false }, "com": { "rules": [6], "inclusive": false }, "raw": { "rules": [3, 4, 5], "inclusive": false }, "INITIAL": { "rules": [0, 1, 44], "inclusive": true } };
      return lexer;
    }();
    parser.lexer = lexer;
    function Parser() {
      this.yy = {};
    }Parser.prototype = parser;parser.Parser = Parser;
    return new Parser();
  }();

  var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

  function Exception(message, node) {
    var loc = node && node.loc,
        line = void 0,
        column = void 0;
    if (loc) {
      line = loc.start.line;
      column = loc.start.column;

      message += ' - ' + line + ':' + column;
    }

    var tmp = Error.prototype.constructor.call(this, message);

    // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
    for (var idx = 0; idx < errorProps.length; idx++) {
      this[errorProps[idx]] = tmp[errorProps[idx]];
    }

    /* istanbul ignore else */
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, Exception);
    }

    try {
      if (loc) {
        this.lineNumber = line;

        // Work around issue under safari where we can't directly set the column value
        /* istanbul ignore next */
        if (Object.defineProperty) {
          Object.defineProperty(this, 'column', {
            value: column,
            enumerable: true
          });
        } else {
          this.column = column;
        }
      }
    } catch (nop) {
      /* Ignore if the browser is very particular */
    }
  }

  Exception.prototype = new Error();

  function Visitor() {
    this.parents = [];
  }

  Visitor.prototype = {
    constructor: Visitor,
    mutating: false,

    // Visits a given value. If mutating, will replace the value if necessary.
    acceptKey: function (node, name) {
      var value = this.accept(node[name]);
      if (this.mutating) {
        // Hacky sanity check: This may have a few false positives for type for the helper
        // methods but will generally do the right thing without a lot of overhead.
        if (value && !Visitor.prototype[value.type]) {
          throw new Exception('Unexpected node type "' + value.type + '" found when accepting ' + name + ' on ' + node.type);
        }
        node[name] = value;
      }
    },

    // Performs an accept operation with added sanity check to ensure
    // required keys are not removed.
    acceptRequired: function (node, name) {
      this.acceptKey(node, name);

      if (!node[name]) {
        throw new Exception(node.type + ' requires ' + name);
      }
    },

    // Traverses a given array. If mutating, empty respnses will be removed
    // for child elements.
    acceptArray: function (array) {
      for (var i = 0, l = array.length; i < l; i++) {
        this.acceptKey(array, i);

        if (!array[i]) {
          array.splice(i, 1);
          i--;
          l--;
        }
      }
    },

    accept: function (object) {
      if (!object) {
        return;
      }

      /* istanbul ignore next: Sanity code */
      if (!this[object.type]) {
        throw new Exception('Unknown type: ' + object.type, object);
      }

      if (this.current) {
        this.parents.unshift(this.current);
      }
      this.current = object;

      var ret = this[object.type](object);

      this.current = this.parents.shift();

      if (!this.mutating || ret) {
        return ret;
      } else if (ret !== false) {
        return object;
      }
    },

    Program: function (program) {
      this.acceptArray(program.body);
    },

    MustacheStatement: visitSubExpression,
    Decorator: visitSubExpression,

    BlockStatement: visitBlock,
    DecoratorBlock: visitBlock,

    PartialStatement: visitPartial,
    PartialBlockStatement: function (partial) {
      visitPartial.call(this, partial);

      this.acceptKey(partial, 'program');
    },

    ContentStatement: function () /* content */{},
    CommentStatement: function () /* comment */{},

    SubExpression: visitSubExpression,

    PathExpression: function () /* path */{},

    StringLiteral: function () /* string */{},
    NumberLiteral: function () /* number */{},
    BooleanLiteral: function () /* bool */{},
    UndefinedLiteral: function () /* literal */{},
    NullLiteral: function () /* literal */{},

    Hash: function (hash) {
      this.acceptArray(hash.pairs);
    },
    HashPair: function (pair) {
      this.acceptRequired(pair, 'value');
    }
  };

  function visitSubExpression(mustache) {
    this.acceptRequired(mustache, 'path');
    this.acceptArray(mustache.params);
    this.acceptKey(mustache, 'hash');
  }
  function visitBlock(block) {
    visitSubExpression.call(this, block);

    this.acceptKey(block, 'program');
    this.acceptKey(block, 'inverse');
  }
  function visitPartial(partial) {
    this.acceptRequired(partial, 'name');
    this.acceptArray(partial.params);
    this.acceptKey(partial, 'hash');
  }

  function WhitespaceControl() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    this.options = options;
  }
  WhitespaceControl.prototype = new Visitor();

  WhitespaceControl.prototype.Program = function (program) {
    var doStandalone = !this.options.ignoreStandalone;

    var isRoot = !this.isRootSeen;
    this.isRootSeen = true;

    var body = program.body;
    for (var i = 0, l = body.length; i < l; i++) {
      var current = body[i],
          strip = this.accept(current);

      if (!strip) {
        continue;
      }

      var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
          _isNextWhitespace = isNextWhitespace(body, i, isRoot),
          openStandalone = strip.openStandalone && _isPrevWhitespace,
          closeStandalone = strip.closeStandalone && _isNextWhitespace,
          inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;

      if (strip.close) {
        omitRight(body, i, true);
      }
      if (strip.open) {
        omitLeft(body, i, true);
      }

      if (doStandalone && inlineStandalone) {
        omitRight(body, i);

        if (omitLeft(body, i)) {
          // If we are on a standalone node, save the indent info for partials
          if (current.type === 'PartialStatement') {
            // Pull out the whitespace from the final line
            current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
          }
        }
      }
      if (doStandalone && openStandalone) {
        omitRight((current.program || current.inverse).body);

        // Strip out the previous content node if it's whitespace only
        omitLeft(body, i);
      }
      if (doStandalone && closeStandalone) {
        // Always strip the next node
        omitRight(body, i);

        omitLeft((current.inverse || current.program).body);
      }
    }

    return program;
  };

  WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {
    this.accept(block.program);
    this.accept(block.inverse);

    // Find the inverse program that is involed with whitespace stripping.
    var program = block.program || block.inverse,
        inverse = block.program && block.inverse,
        firstInverse = inverse,
        lastInverse = inverse;

    if (inverse && inverse.chained) {
      firstInverse = inverse.body[0].program;

      // Walk the inverse chain to find the last inverse that is actually in the chain.
      while (lastInverse.chained) {
        lastInverse = lastInverse.body[lastInverse.body.length - 1].program;
      }
    }

    var strip = {
      open: block.openStrip.open,
      close: block.closeStrip.close,

      // Determine the standalone candiacy. Basically flag our content as being possibly standalone
      // so our parent can determine if we actually are standalone
      openStandalone: isNextWhitespace(program.body),
      closeStandalone: isPrevWhitespace((firstInverse || program).body)
    };

    if (block.openStrip.close) {
      omitRight(program.body, null, true);
    }

    if (inverse) {
      var inverseStrip = block.inverseStrip;

      if (inverseStrip.open) {
        omitLeft(program.body, null, true);
      }

      if (inverseStrip.close) {
        omitRight(firstInverse.body, null, true);
      }
      if (block.closeStrip.open) {
        omitLeft(lastInverse.body, null, true);
      }

      // Find standalone else statments
      if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {
        omitLeft(program.body);
        omitRight(firstInverse.body);
      }
    } else if (block.closeStrip.open) {
      omitLeft(program.body, null, true);
    }

    return strip;
  };

  WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {
    return mustache.strip;
  };

  WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {
    /* istanbul ignore next */
    var strip = node.strip || {};
    return {
      inlineStandalone: true,
      open: strip.open,
      close: strip.close
    };
  };

  function isPrevWhitespace(body, i, isRoot) {
    if (i === undefined) {
      i = body.length;
    }

    // Nodes that end with newlines are considered whitespace (but are special
    // cased for strip operations)
    var prev = body[i - 1],
        sibling = body[i - 2];
    if (!prev) {
      return isRoot;
    }

    if (prev.type === 'ContentStatement') {
      return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original);
    }
  }
  function isNextWhitespace(body, i, isRoot) {
    if (i === undefined) {
      i = -1;
    }

    var next = body[i + 1],
        sibling = body[i + 2];
    if (!next) {
      return isRoot;
    }

    if (next.type === 'ContentStatement') {
      return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original);
    }
  }

  // Marks the node to the right of the position as omitted.
  // I.e. {{foo}}' ' will mark the ' ' node as omitted.
  //
  // If i is undefined, then the first child will be marked as such.
  //
  // If mulitple is truthy then all whitespace will be stripped out until non-whitespace
  // content is met.
  function omitRight(body, i, multiple) {
    var current = body[i == null ? 0 : i + 1];
    if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {
      return;
    }

    var original = current.value;
    current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, '');
    current.rightStripped = current.value !== original;
  }

  // Marks the node to the left of the position as omitted.
  // I.e. ' '{{foo}} will mark the ' ' node as omitted.
  //
  // If i is undefined then the last child will be marked as such.
  //
  // If mulitple is truthy then all whitespace will be stripped out until non-whitespace
  // content is met.
  function omitLeft(body, i, multiple) {
    var current = body[i == null ? body.length - 1 : i - 1];
    if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {
      return;
    }

    // We omit the last node if it's whitespace only and not preceeded by a non-content node.
    var original = current.value;
    current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, '');
    current.leftStripped = current.value !== original;
    return current.leftStripped;
  }

  function validateClose(open, close) {
    close = close.path ? close.path.original : close;

    if (open.path.original !== close) {
      var errorNode = { loc: open.path.loc };

      throw new Exception(open.path.original + " doesn't match " + close, errorNode);
    }
  }

  function SourceLocation(source, locInfo) {
    this.source = source;
    this.start = {
      line: locInfo.first_line,
      column: locInfo.first_column
    };
    this.end = {
      line: locInfo.last_line,
      column: locInfo.last_column
    };
  }

  function id(token) {
    if (/^\[.*\]$/.test(token)) {
      return token.substr(1, token.length - 2);
    } else {
      return token;
    }
  }

  function stripFlags(open, close) {
    return {
      open: open.charAt(2) === '~',
      close: close.charAt(close.length - 3) === '~'
    };
  }

  function stripComment(comment) {
    return comment.replace(/^\{\{~?\!-?-?/, '').replace(/-?-?~?\}\}$/, '');
  }

  function preparePath(data, parts, loc) {
    loc = this.locInfo(loc);

    var original = data ? '@' : '',
        dig = [],
        depth = 0,
        depthString = '';

    for (var i = 0, l = parts.length; i < l; i++) {
      var part = parts[i].part,

      // If we have [] syntax then we do not treat path references as operators,
      // i.e. foo.[this] resolves to approximately context.foo['this']
      isLiteral = parts[i].original !== part;
      original += (parts[i].separator || '') + part;

      if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {
        if (dig.length > 0) {
          throw new Exception('Invalid path: ' + original, { loc: loc });
        } else if (part === '..') {
          depth++;
          depthString += '../';
        }
      } else {
        dig.push(part);
      }
    }

    return {
      type: 'PathExpression',
      data: data,
      depth: depth,
      parts: dig,
      original: original,
      loc: loc
    };
  }

  function prepareMustache(path, params, hash, open, strip, locInfo) {
    // Must use charAt to support IE pre-10
    var escapeFlag = open.charAt(3) || open.charAt(2),
        escaped = escapeFlag !== '{' && escapeFlag !== '&';

    var decorator = /\*/.test(open);
    return {
      type: decorator ? 'Decorator' : 'MustacheStatement',
      path: path,
      params: params,
      hash: hash,
      escaped: escaped,
      strip: strip,
      loc: this.locInfo(locInfo)
    };
  }

  function prepareRawBlock(openRawBlock, contents, close, locInfo) {
    validateClose(openRawBlock, close);

    locInfo = this.locInfo(locInfo);
    var program = {
      type: 'Program',
      body: contents,
      strip: {},
      loc: locInfo
    };

    return {
      type: 'BlockStatement',
      path: openRawBlock.path,
      params: openRawBlock.params,
      hash: openRawBlock.hash,
      program: program,
      openStrip: {},
      inverseStrip: {},
      closeStrip: {},
      loc: locInfo
    };
  }

  function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {
    if (close && close.path) {
      validateClose(openBlock, close);
    }

    var decorator = /\*/.test(openBlock.open);

    program.blockParams = openBlock.blockParams;

    var inverse = void 0,
        inverseStrip = void 0;

    if (inverseAndProgram) {
      if (decorator) {
        throw new Exception('Unexpected inverse block on decorator', inverseAndProgram);
      }

      if (inverseAndProgram.chain) {
        inverseAndProgram.program.body[0].closeStrip = close.strip;
      }

      inverseStrip = inverseAndProgram.strip;
      inverse = inverseAndProgram.program;
    }

    if (inverted) {
      inverted = inverse;
      inverse = program;
      program = inverted;
    }

    return {
      type: decorator ? 'DecoratorBlock' : 'BlockStatement',
      path: openBlock.path,
      params: openBlock.params,
      hash: openBlock.hash,
      program: program,
      inverse: inverse,
      openStrip: openBlock.strip,
      inverseStrip: inverseStrip,
      closeStrip: close && close.strip,
      loc: this.locInfo(locInfo)
    };
  }

  function prepareProgram(statements, loc) {
    if (!loc && statements.length) {
      var firstLoc = statements[0].loc,
          lastLoc = statements[statements.length - 1].loc;

      /* istanbul ignore else */
      if (firstLoc && lastLoc) {
        loc = {
          source: firstLoc.source,
          start: {
            line: firstLoc.start.line,
            column: firstLoc.start.column
          },
          end: {
            line: lastLoc.end.line,
            column: lastLoc.end.column
          }
        };
      }
    }

    return {
      type: 'Program',
      body: statements,
      strip: {},
      loc: loc
    };
  }

  function preparePartialBlock(open, program, close, locInfo) {
    validateClose(open, close);

    return {
      type: 'PartialBlockStatement',
      name: open.path,
      params: open.params,
      hash: open.hash,
      program: program,
      openStrip: open.strip,
      closeStrip: close && close.strip,
      loc: this.locInfo(locInfo)
    };
  }

  var Helpers = Object.freeze({
    SourceLocation: SourceLocation,
    id: id,
    stripFlags: stripFlags,
    stripComment: stripComment,
    preparePath: preparePath,
    prepareMustache: prepareMustache,
    prepareRawBlock: prepareRawBlock,
    prepareBlock: prepareBlock,
    prepareProgram: prepareProgram,
    preparePartialBlock: preparePartialBlock
  });

  function extend(obj /* , ...source */) {
    for (var i = 1; i < arguments.length; i++) {
      for (var key in arguments[i]) {
        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
          obj[key] = arguments[i][key];
        }
      }
    }

    return obj;
  }

  var toString = Object.prototype.toString;

  // Sourced from lodash
  // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
  /* eslint-disable func-style */
  var isFunction = function (value) {
    return typeof value === 'function';
  };
  // fallback for older versions of Chrome and Safari
  /* istanbul ignore next */
  if (isFunction(/x/)) {
    isFunction = function (value) {
      return typeof value === 'function' && toString.call(value) === '[object Function]';
    };
  }
  /* eslint-enable func-style */

  /* istanbul ignore next */

  // Older IE versions do not directly support indexOf so we must implement our own, sadly.

  var yy = {};
  extend(yy, Helpers);

  function parse(input, options) {
    // Just return if an already-compiled AST was passed in.
    if (input.type === 'Program') {
      return input;
    }

    handlebars.yy = yy;

    // Altering the shared object here, but this is ok as parser is a sync operation
    yy.locInfo = function (locInfo) {
      return new yy.SourceLocation(options && options.srcName, locInfo);
    };

    var strip = new WhitespaceControl(options);
    return strip.accept(handlebars.parse(input));
  }

  exports.parser = handlebars;
  exports.parse = parse;
});
enifed('node-module', ['exports'], function(_exports) {
  var IS_NODE = typeof module === 'object' && typeof module.require === 'function';
  if (IS_NODE) {
    _exports.require = module.require;
    _exports.module = module;
    _exports.IS_NODE = IS_NODE
  } else {
    _exports.require = null;
    _exports.module = null;
    _exports.IS_NODE = IS_NODE
  }
});
enifed("route-recognizer", ["exports"], function (exports) {
    "use strict";

    var createObject = Object.create;
    function createMap() {
        var map = createObject(null);
        map["__"] = undefined;
        delete map["__"];
        return map;
    }

    var Target = function Target(path, matcher, delegate) {
        this.path = path;
        this.matcher = matcher;
        this.delegate = delegate;
    };
    Target.prototype.to = function to(target, callback) {
        var delegate = this.delegate;
        if (delegate && delegate.willAddRoute) {
            target = delegate.willAddRoute(this.matcher.target, target);
        }
        this.matcher.add(this.path, target);
        if (callback) {
            if (callback.length === 0) {
                throw new Error("You must have an argument in the function passed to `to`");
            }
            this.matcher.addChild(this.path, target, callback, this.delegate);
        }
    };
    var Matcher = function Matcher(target) {
        this.routes = createMap();
        this.children = createMap();
        this.target = target;
    };
    Matcher.prototype.add = function add(path, target) {
        this.routes[path] = target;
    };
    Matcher.prototype.addChild = function addChild(path, target, callback, delegate) {
        var matcher = new Matcher(target);
        this.children[path] = matcher;
        var match = generateMatch(path, matcher, delegate);
        if (delegate && delegate.contextEntered) {
            delegate.contextEntered(target, match);
        }
        callback(match);
    };
    function generateMatch(startingPath, matcher, delegate) {
        function match(path, callback) {
            var fullPath = startingPath + path;
            if (callback) {
                callback(generateMatch(fullPath, matcher, delegate));
            } else {
                return new Target(fullPath, matcher, delegate);
            }
        }

        return match;
    }
    function addRoute(routeArray, path, handler) {
        var len = 0;
        for (var i = 0; i < routeArray.length; i++) {
            len += routeArray[i].path.length;
        }
        path = path.substr(len);
        var route = { path: path, handler: handler };
        routeArray.push(route);
    }
    function eachRoute(baseRoute, matcher, callback, binding) {
        var routes = matcher.routes;
        var paths = Object.keys(routes);
        for (var i = 0; i < paths.length; i++) {
            var path = paths[i];
            var routeArray = baseRoute.slice();
            addRoute(routeArray, path, routes[path]);
            var nested = matcher.children[path];
            if (nested) {
                eachRoute(routeArray, nested, callback, binding);
            } else {
                callback.call(binding, routeArray);
            }
        }
    }
    var map = function (callback, addRouteCallback) {
        var matcher = new Matcher();
        callback(generateMatch("", matcher, this.delegate));
        eachRoute([], matcher, function (routes) {
            if (addRouteCallback) {
                addRouteCallback(this, routes);
            } else {
                this.add(routes);
            }
        }, this);
    };

    // Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded
    // values that are not reserved (i.e., unicode characters, emoji, etc). The reserved
    // chars are "/" and "%".
    // Safe to call multiple times on the same path.
    // Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded
    function normalizePath(path) {
        return path.split("/").map(normalizeSegment).join("/");
    }
    // We want to ensure the characters "%" and "/" remain in percent-encoded
    // form when normalizing paths, so replace them with their encoded form after
    // decoding the rest of the path
    var SEGMENT_RESERVED_CHARS = /%|\//g;
    function normalizeSegment(segment) {
        if (segment.length < 3 || segment.indexOf("%") === -1) {
            return segment;
        }
        return decodeURIComponent(segment).replace(SEGMENT_RESERVED_CHARS, encodeURIComponent);
    }
    // We do not want to encode these characters when generating dynamic path segments
    // See https://tools.ietf.org/html/rfc3986#section-3.3
    // sub-delims: "!", "$", "&", "'", "(", ")", "*", "+", ",", ";", "="
    // others allowed by RFC 3986: ":", "@"
    //
    // First encode the entire path segment, then decode any of the encoded special chars.
    //
    // The chars "!", "'", "(", ")", "*" do not get changed by `encodeURIComponent`,
    // so the possible encoded chars are:
    // ['%24', '%26', '%2B', '%2C', '%3B', '%3D', '%3A', '%40'].
    var PATH_SEGMENT_ENCODINGS = /%(?:2(?:4|6|B|C)|3(?:B|D|A)|40)/g;
    function encodePathSegment(str) {
        return encodeURIComponent(str).replace(PATH_SEGMENT_ENCODINGS, decodeURIComponent);
    }

    var escapeRegex = /(\/|\.|\*|\+|\?|\||\(|\)|\[|\]|\{|\}|\\)/g;
    var isArray = Array.isArray;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function getParam(params, key) {
        if (typeof params !== "object" || params === null) {
            throw new Error("You must pass an object as the second argument to `generate`.");
        }
        if (!hasOwnProperty.call(params, key)) {
            throw new Error("You must provide param `" + key + "` to `generate`.");
        }
        var value = params[key];
        var str = typeof value === "string" ? value : "" + value;
        if (str.length === 0) {
            throw new Error("You must provide a param `" + key + "`.");
        }
        return str;
    }
    var eachChar = [];
    eachChar[0 /* Static */] = function (segment, currentState) {
        var state = currentState;
        var value = segment.value;
        for (var i = 0; i < value.length; i++) {
            var ch = value.charCodeAt(i);
            state = state.put(ch, false, false);
        }
        return state;
    };
    eachChar[1 /* Dynamic */] = function (_, currentState) {
        return currentState.put(47 /* SLASH */, true, true);
    };
    eachChar[2 /* Star */] = function (_, currentState) {
        return currentState.put(-1 /* ANY */, false, true);
    };
    eachChar[4 /* Epsilon */] = function (_, currentState) {
        return currentState;
    };
    var regex = [];
    regex[0 /* Static */] = function (segment) {
        return segment.value.replace(escapeRegex, "\\$1");
    };
    regex[1 /* Dynamic */] = function () {
        return "([^/]+)";
    };
    regex[2 /* Star */] = function () {
        return "(.+)";
    };
    regex[4 /* Epsilon */] = function () {
        return "";
    };
    var generate = [];
    generate[0 /* Static */] = function (segment) {
        return segment.value;
    };
    generate[1 /* Dynamic */] = function (segment, params) {
        var value = getParam(params, segment.value);
        if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {
            return encodePathSegment(value);
        } else {
            return value;
        }
    };
    generate[2 /* Star */] = function (segment, params) {
        return getParam(params, segment.value);
    };
    generate[4 /* Epsilon */] = function () {
        return "";
    };
    var EmptyObject = Object.freeze({});
    var EmptyArray = Object.freeze([]);
    // The `names` will be populated with the paramter name for each dynamic/star
    // segment. `shouldDecodes` will be populated with a boolean for each dyanamic/star
    // segment, indicating whether it should be decoded during recognition.
    function parse(segments, route, types) {
        // normalize route as not starting with a "/". Recognition will
        // also normalize.
        if (route.length > 0 && route.charCodeAt(0) === 47 /* SLASH */) {
                route = route.substr(1);
            }
        var parts = route.split("/");
        var names = undefined;
        var shouldDecodes = undefined;
        for (var i = 0; i < parts.length; i++) {
            var part = parts[i];
            var flags = 0;
            var type = 0;
            if (part === "") {
                type = 4 /* Epsilon */;
            } else if (part.charCodeAt(0) === 58 /* COLON */) {
                    type = 1 /* Dynamic */;
                } else if (part.charCodeAt(0) === 42 /* STAR */) {
                    type = 2 /* Star */;
                } else {
                type = 0 /* Static */;
            }
            flags = 2 << type;
            if (flags & 12 /* Named */) {
                    part = part.slice(1);
                    names = names || [];
                    names.push(part);
                    shouldDecodes = shouldDecodes || [];
                    shouldDecodes.push((flags & 4 /* Decoded */) !== 0);
                }
            if (flags & 14 /* Counted */) {
                    types[type]++;
                }
            segments.push({
                type: type,
                value: normalizeSegment(part)
            });
        }
        return {
            names: names || EmptyArray,
            shouldDecodes: shouldDecodes || EmptyArray
        };
    }
    function isEqualCharSpec(spec, char, negate) {
        return spec.char === char && spec.negate === negate;
    }
    // A State has a character specification and (`charSpec`) and a list of possible
    // subsequent states (`nextStates`).
    //
    // If a State is an accepting state, it will also have several additional
    // properties:
    //
    // * `regex`: A regular expression that is used to extract parameters from paths
    //   that reached this accepting state.
    // * `handlers`: Information on how to convert the list of captures into calls
    //   to registered handlers with the specified parameters
    // * `types`: How many static, dynamic or star segments in this route. Used to
    //   decide which route to use if multiple registered routes match a path.
    //
    // Currently, State is implemented naively by looping over `nextStates` and
    // comparing a character specification against a character. A more efficient
    // implementation would use a hash of keys pointing at one or more next states.
    var State = function State(states, id, char, negate, repeat) {
        this.states = states;
        this.id = id;
        this.char = char;
        this.negate = negate;
        this.nextStates = repeat ? id : null;
        this.pattern = "";
        this._regex = undefined;
        this.handlers = undefined;
        this.types = undefined;
    };
    State.prototype.regex = function regex$1() {
        if (!this._regex) {
            this._regex = new RegExp(this.pattern);
        }
        return this._regex;
    };
    State.prototype.get = function get(char, negate) {
        var this$1 = this;

        var nextStates = this.nextStates;
        if (nextStates === null) {
            return;
        }
        if (isArray(nextStates)) {
            for (var i = 0; i < nextStates.length; i++) {
                var child = this$1.states[nextStates[i]];
                if (isEqualCharSpec(child, char, negate)) {
                    return child;
                }
            }
        } else {
            var child$1 = this.states[nextStates];
            if (isEqualCharSpec(child$1, char, negate)) {
                return child$1;
            }
        }
    };
    State.prototype.put = function put(char, negate, repeat) {
        var state;
        // If the character specification already exists in a child of the current
        // state, just return that state.
        if (state = this.get(char, negate)) {
            return state;
        }
        // Make a new state for the character spec
        var states = this.states;
        state = new State(states, states.length, char, negate, repeat);
        states[states.length] = state;
        // Insert the new state as a child of the current state
        if (this.nextStates == null) {
            this.nextStates = state.id;
        } else if (isArray(this.nextStates)) {
            this.nextStates.push(state.id);
        } else {
            this.nextStates = [this.nextStates, state.id];
        }
        // Return the new state
        return state;
    };
    // Find a list of child states matching the next character
    State.prototype.match = function match(ch) {
        var this$1 = this;

        var nextStates = this.nextStates;
        if (!nextStates) {
            return [];
        }
        var returned = [];
        if (isArray(nextStates)) {
            for (var i = 0; i < nextStates.length; i++) {
                var child = this$1.states[nextStates[i]];
                if (isMatch(child, ch)) {
                    returned.push(child);
                }
            }
        } else {
            var child$1 = this.states[nextStates];
            if (isMatch(child$1, ch)) {
                returned.push(child$1);
            }
        }
        return returned;
    };
    function isMatch(spec, char) {
        return spec.negate ? spec.char !== char && spec.char !== -1 /* ANY */ : spec.char === char || spec.char === -1 /* ANY */;
    }
    // This is a somewhat naive strategy, but should work in a lot of cases
    // A better strategy would properly resolve /posts/:id/new and /posts/edit/:id.
    //
    // This strategy generally prefers more static and less dynamic matching.
    // Specifically, it
    //
    //  * prefers fewer stars to more, then
    //  * prefers using stars for less of the match to more, then
    //  * prefers fewer dynamic segments to more, then
    //  * prefers more static segments to more
    function sortSolutions(states) {
        return states.sort(function (a, b) {
            var ref = a.types || [0, 0, 0];
            var astatics = ref[0];
            var adynamics = ref[1];
            var astars = ref[2];
            var ref$1 = b.types || [0, 0, 0];
            var bstatics = ref$1[0];
            var bdynamics = ref$1[1];
            var bstars = ref$1[2];
            if (astars !== bstars) {
                return astars - bstars;
            }
            if (astars) {
                if (astatics !== bstatics) {
                    return bstatics - astatics;
                }
                if (adynamics !== bdynamics) {
                    return bdynamics - adynamics;
                }
            }
            if (adynamics !== bdynamics) {
                return adynamics - bdynamics;
            }
            if (astatics !== bstatics) {
                return bstatics - astatics;
            }
            return 0;
        });
    }
    function recognizeChar(states, ch) {
        var nextStates = [];
        for (var i = 0, l = states.length; i < l; i++) {
            var state = states[i];
            nextStates = nextStates.concat(state.match(ch));
        }
        return nextStates;
    }
    var RecognizeResults = function RecognizeResults(queryParams) {
        this.length = 0;
        this.queryParams = queryParams || {};
    };

    RecognizeResults.prototype.splice = Array.prototype.splice;
    RecognizeResults.prototype.slice = Array.prototype.slice;
    RecognizeResults.prototype.push = Array.prototype.push;
    function findHandler(state, originalPath, queryParams) {
        var handlers = state.handlers;
        var regex = state.regex();
        if (!regex || !handlers) {
            throw new Error("state not initialized");
        }
        var captures = originalPath.match(regex);
        var currentCapture = 1;
        var result = new RecognizeResults(queryParams);
        result.length = handlers.length;
        for (var i = 0; i < handlers.length; i++) {
            var handler = handlers[i];
            var names = handler.names;
            var shouldDecodes = handler.shouldDecodes;
            var params = EmptyObject;
            var isDynamic = false;
            if (names !== EmptyArray && shouldDecodes !== EmptyArray) {
                for (var j = 0; j < names.length; j++) {
                    isDynamic = true;
                    var name = names[j];
                    var capture = captures && captures[currentCapture++];
                    if (params === EmptyObject) {
                        params = {};
                    }
                    if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS && shouldDecodes[j]) {
                        params[name] = capture && decodeURIComponent(capture);
                    } else {
                        params[name] = capture;
                    }
                }
            }
            result[i] = {
                handler: handler.handler,
                params: params,
                isDynamic: isDynamic
            };
        }
        return result;
    }
    function decodeQueryParamPart(part) {
        // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1
        part = part.replace(/\+/gm, "%20");
        var result;
        try {
            result = decodeURIComponent(part);
        } catch (error) {
            result = "";
        }
        return result;
    }
    var RouteRecognizer = function RouteRecognizer() {
        this.names = createMap();
        var states = [];
        var state = new State(states, 0, -1 /* ANY */, true, false);
        states[0] = state;
        this.states = states;
        this.rootState = state;
    };
    RouteRecognizer.prototype.add = function add(routes, options) {
        var currentState = this.rootState;
        var pattern = "^";
        var types = [0, 0, 0];
        var handlers = new Array(routes.length);
        var allSegments = [];
        var isEmpty = true;
        var j = 0;
        for (var i = 0; i < routes.length; i++) {
            var route = routes[i];
            var ref = parse(allSegments, route.path, types);
            var names = ref.names;
            var shouldDecodes = ref.shouldDecodes;
            // preserve j so it points to the start of newly added segments
            for (; j < allSegments.length; j++) {
                var segment = allSegments[j];
                if (segment.type === 4 /* Epsilon */) {
                        continue;
                    }
                isEmpty = false;
                // Add a "/" for the new segment
                currentState = currentState.put(47 /* SLASH */, false, false);
                pattern += "/";
                // Add a representation of the segment to the NFA and regex
                currentState = eachChar[segment.type](segment, currentState);
                pattern += regex[segment.type](segment);
            }
            handlers[i] = {
                handler: route.handler,
                names: names,
                shouldDecodes: shouldDecodes
            };
        }
        if (isEmpty) {
            currentState = currentState.put(47 /* SLASH */, false, false);
            pattern += "/";
        }
        currentState.handlers = handlers;
        currentState.pattern = pattern + "$";
        currentState.types = types;
        var name;
        if (typeof options === "object" && options !== null && options.as) {
            name = options.as;
        }
        if (name) {
            // if (this.names[name]) {
            //   throw new Error("You may not add a duplicate route named `" + name + "`.");
            // }
            this.names[name] = {
                segments: allSegments,
                handlers: handlers
            };
        }
    };
    RouteRecognizer.prototype.handlersFor = function handlersFor(name) {
        var route = this.names[name];
        if (!route) {
            throw new Error("There is no route named " + name);
        }
        var result = new Array(route.handlers.length);
        for (var i = 0; i < route.handlers.length; i++) {
            var handler = route.handlers[i];
            result[i] = handler;
        }
        return result;
    };
    RouteRecognizer.prototype.hasRoute = function hasRoute(name) {
        return !!this.names[name];
    };
    RouteRecognizer.prototype.generate = function generate$1(name, params) {
        var route = this.names[name];
        var output = "";
        if (!route) {
            throw new Error("There is no route named " + name);
        }
        var segments = route.segments;
        for (var i = 0; i < segments.length; i++) {
            var segment = segments[i];
            if (segment.type === 4 /* Epsilon */) {
                    continue;
                }
            output += "/";
            output += generate[segment.type](segment, params);
        }
        if (output.charAt(0) !== "/") {
            output = "/" + output;
        }
        if (params && params.queryParams) {
            output += this.generateQueryString(params.queryParams);
        }
        return output;
    };
    RouteRecognizer.prototype.generateQueryString = function generateQueryString(params) {
        var pairs = [];
        var keys = Object.keys(params);
        keys.sort();
        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            var value = params[key];
            if (value == null) {
                continue;
            }
            var pair = encodeURIComponent(key);
            if (isArray(value)) {
                for (var j = 0; j < value.length; j++) {
                    var arrayPair = key + "[]" + "=" + encodeURIComponent(value[j]);
                    pairs.push(arrayPair);
                }
            } else {
                pair += "=" + encodeURIComponent(value);
                pairs.push(pair);
            }
        }
        if (pairs.length === 0) {
            return "";
        }
        return "?" + pairs.join("&");
    };
    RouteRecognizer.prototype.parseQueryString = function parseQueryString(queryString) {
        var pairs = queryString.split("&");
        var queryParams = {};
        for (var i = 0; i < pairs.length; i++) {
            var pair = pairs[i].split("="),
                key = decodeQueryParamPart(pair[0]),
                keyLength = key.length,
                isArray = false,
                value = void 0;
            if (pair.length === 1) {
                value = "true";
            } else {
                // Handle arrays
                if (keyLength > 2 && key.slice(keyLength - 2) === "[]") {
                    isArray = true;
                    key = key.slice(0, keyLength - 2);
                    if (!queryParams[key]) {
                        queryParams[key] = [];
                    }
                }
                value = pair[1] ? decodeQueryParamPart(pair[1]) : "";
            }
            if (isArray) {
                queryParams[key].push(value);
            } else {
                queryParams[key] = value;
            }
        }
        return queryParams;
    };
    RouteRecognizer.prototype.recognize = function recognize(path) {
        var results;
        var states = [this.rootState];
        var queryParams = {};
        var isSlashDropped = false;
        var hashStart = path.indexOf("#");
        if (hashStart !== -1) {
            path = path.substr(0, hashStart);
        }
        var queryStart = path.indexOf("?");
        if (queryStart !== -1) {
            var queryString = path.substr(queryStart + 1, path.length);
            path = path.substr(0, queryStart);
            queryParams = this.parseQueryString(queryString);
        }
        if (path.charAt(0) !== "/") {
            path = "/" + path;
        }
        var originalPath = path;
        if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {
            path = normalizePath(path);
        } else {
            path = decodeURI(path);
            originalPath = decodeURI(originalPath);
        }
        var pathLen = path.length;
        if (pathLen > 1 && path.charAt(pathLen - 1) === "/") {
            path = path.substr(0, pathLen - 1);
            originalPath = originalPath.substr(0, originalPath.length - 1);
            isSlashDropped = true;
        }
        for (var i = 0; i < path.length; i++) {
            states = recognizeChar(states, path.charCodeAt(i));
            if (!states.length) {
                break;
            }
        }
        var solutions = [];
        for (var i$1 = 0; i$1 < states.length; i$1++) {
            if (states[i$1].handlers) {
                solutions.push(states[i$1]);
            }
        }
        states = sortSolutions(solutions);
        var state = solutions[0];
        if (state && state.handlers) {
            // if a trailing slash was dropped and a star segment is the last segment
            // specified, put the trailing slash back
            if (isSlashDropped && state.pattern && state.pattern.slice(-5) === "(.+)$") {
                originalPath = originalPath + "/";
            }
            results = findHandler(state, originalPath, queryParams);
        }
        return results;
    };
    RouteRecognizer.VERSION = "0.3.3";
    // Set to false to opt-out of encoding and decoding path segments.
    // See https://github.com/tildeio/route-recognizer/pull/55
    RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS = true;
    RouteRecognizer.Normalizer = {
        normalizeSegment: normalizeSegment, normalizePath: normalizePath, encodePathSegment: encodePathSegment
    };
    RouteRecognizer.prototype.map = map;

    exports.default = RouteRecognizer;
});
enifed('router', ['exports', 'route-recognizer', 'rsvp'], function (exports, _routeRecognizer, _rsvp) {
  'use strict';

  exports.Transition = undefined;


  var slice = Array.prototype.slice;

  var _isArray;
  if (!Array.isArray) {
    _isArray = function (x) {
      return Object.prototype.toString.call(x) === "[object Array]";
    };
  } else {
    _isArray = Array.isArray;
  }

  var isArray = _isArray;

  /**
    Determines if an object is Promise by checking if it is "thenable".
  **/
  function isPromise(obj) {
    return (typeof obj === 'object' && obj !== null || typeof obj === 'function') && typeof obj.then === 'function';
  }

  function merge(hash, other) {
    for (var prop in other) {
      if (other.hasOwnProperty(prop)) {
        hash[prop] = other[prop];
      }
    }
  }

  var oCreate = Object.create || function (proto) {
    function F() {}
    F.prototype = proto;
    return new F();
  };

  /**
    @private
  
    Extracts query params from the end of an array
  **/
  function extractQueryParams(array) {
    var len = array && array.length,
        head,
        queryParams;

    if (len && len > 0 && array[len - 1] && array[len - 1].hasOwnProperty('queryParams')) {
      queryParams = array[len - 1].queryParams;
      head = slice.call(array, 0, len - 1);
      return [head, queryParams];
    } else {
      return [array, null];
    }
  }

  /**
    @private
  
    Coerces query param properties and array elements into strings.
  **/
  function coerceQueryParamsToString(queryParams) {
    for (var key in queryParams) {
      if (typeof queryParams[key] === 'number') {
        queryParams[key] = '' + queryParams[key];
      } else if (isArray(queryParams[key])) {
        for (var i = 0, l = queryParams[key].length; i < l; i++) {
          queryParams[key][i] = '' + queryParams[key][i];
        }
      }
    }
  }
  /**
    @private
   */
  function log(router, sequence, msg) {
    if (!router.log) {
      return;
    }

    if (arguments.length === 3) {
      router.log("Transition #" + sequence + ": " + msg);
    } else {
      msg = sequence;
      router.log(msg);
    }
  }

  function bind(context, fn) {
    var boundArgs = arguments;
    return function (value) {
      var args = slice.call(boundArgs, 2);
      args.push(value);
      return fn.apply(context, args);
    };
  }

  function isParam(object) {
    return typeof object === "string" || object instanceof String || typeof object === "number" || object instanceof Number;
  }

  function forEach(array, callback) {
    for (var i = 0, l = array.length; i < l && false !== callback(array[i]); i++) {}
  }

  function trigger(router, handlerInfos, ignoreFailure, args) {
    if (router.triggerEvent) {
      router.triggerEvent(handlerInfos, ignoreFailure, args);
      return;
    }

    var name = args.shift();

    if (!handlerInfos) {
      if (ignoreFailure) {
        return;
      }
      throw new Error("Could not trigger event '" + name + "'. There are no active handlers");
    }

    var eventWasHandled = false;

    function delayedEvent(name, args, handler) {
      handler.events[name].apply(handler, args);
    }

    for (var i = handlerInfos.length - 1; i >= 0; i--) {
      var handlerInfo = handlerInfos[i],
          handler = handlerInfo.handler;

      // If there is no handler, it means the handler hasn't resolved yet which
      // means that we should trigger the event later when the handler is available
      if (!handler) {
        handlerInfo.handlerPromise.then(bind(null, delayedEvent, name, args));
        continue;
      }

      if (handler.events && handler.events[name]) {
        if (handler.events[name].apply(handler, args) === true) {
          eventWasHandled = true;
        } else {
          return;
        }
      }
    }

    // In the case that we got an UnrecognizedURLError as an event with no handler,
    // let it bubble up
    if (name === 'error' && args[0].name === 'UnrecognizedURLError') {
      throw args[0];
    } else if (!eventWasHandled && !ignoreFailure) {
      throw new Error("Nothing handled the event '" + name + "'.");
    }
  }

  function getChangelist(oldObject, newObject) {
    var key;
    var results = {
      all: {},
      changed: {},
      removed: {}
    };

    merge(results.all, newObject);

    var didChange = false;
    coerceQueryParamsToString(oldObject);
    coerceQueryParamsToString(newObject);

    // Calculate removals
    for (key in oldObject) {
      if (oldObject.hasOwnProperty(key)) {
        if (!newObject.hasOwnProperty(key)) {
          didChange = true;
          results.removed[key] = oldObject[key];
        }
      }
    }

    // Calculate changes
    for (key in newObject) {
      if (newObject.hasOwnProperty(key)) {
        if (isArray(oldObject[key]) && isArray(newObject[key])) {
          if (oldObject[key].length !== newObject[key].length) {
            results.changed[key] = newObject[key];
            didChange = true;
          } else {
            for (var i = 0, l = oldObject[key].length; i < l; i++) {
              if (oldObject[key][i] !== newObject[key][i]) {
                results.changed[key] = newObject[key];
                didChange = true;
              }
            }
          }
        } else {
          if (oldObject[key] !== newObject[key]) {
            results.changed[key] = newObject[key];
            didChange = true;
          }
        }
      }
    }

    return didChange && results;
  }

  function promiseLabel(label) {
    return 'Router: ' + label;
  }

  function subclass(parentConstructor, proto) {
    function C(props) {
      parentConstructor.call(this, props || {});
    }
    C.prototype = oCreate(parentConstructor.prototype);
    merge(C.prototype, proto);
    return C;
  }

  function resolveHook(obj, hookName) {
    if (!obj) {
      return;
    }
    var underscored = "_" + hookName;
    return obj[underscored] && underscored || obj[hookName] && hookName;
  }

  function callHook(obj, _hookName, arg1, arg2) {
    var hookName = resolveHook(obj, _hookName);
    return hookName && obj[hookName].call(obj, arg1, arg2);
  }

  function applyHook(obj, _hookName, args) {
    var hookName = resolveHook(obj, _hookName);
    if (hookName) {
      if (args.length === 0) {
        return obj[hookName].call(obj);
      } else if (args.length === 1) {
        return obj[hookName].call(obj, args[0]);
      } else if (args.length === 2) {
        return obj[hookName].call(obj, args[0], args[1]);
      } else {
        return obj[hookName].apply(obj, args);
      }
    }
  }

  function TransitionState() {
    this.handlerInfos = [];
    this.queryParams = {};
    this.params = {};
  }

  TransitionState.prototype = {
    promiseLabel: function (label) {
      var targetName = '';
      forEach(this.handlerInfos, function (handlerInfo) {
        if (targetName !== '') {
          targetName += '.';
        }
        targetName += handlerInfo.name;
      });
      return promiseLabel("'" + targetName + "': " + label);
    },

    resolve: function (shouldContinue, payload) {
      // First, calculate params for this state. This is useful
      // information to provide to the various route hooks.
      var params = this.params;
      forEach(this.handlerInfos, function (handlerInfo) {
        params[handlerInfo.name] = handlerInfo.params || {};
      });

      payload = payload || {};
      payload.resolveIndex = 0;

      var currentState = this;
      var wasAborted = false;

      // The prelude RSVP.resolve() asyncs us into the promise land.
      return _rsvp.Promise.resolve(null, this.promiseLabel("Start transition")).then(resolveOneHandlerInfo, null, this.promiseLabel('Resolve handler'))['catch'](handleError, this.promiseLabel('Handle error'));

      function innerShouldContinue() {
        return _rsvp.Promise.resolve(shouldContinue(), currentState.promiseLabel("Check if should continue"))['catch'](function (reason) {
          // We distinguish between errors that occurred
          // during resolution (e.g. beforeModel/model/afterModel),
          // and aborts due to a rejecting promise from shouldContinue().
          wasAborted = true;
          return _rsvp.Promise.reject(reason);
        }, currentState.promiseLabel("Handle abort"));
      }

      function handleError(error) {
        // This is the only possible
        // reject value of TransitionState#resolve
        var handlerInfos = currentState.handlerInfos;
        var errorHandlerIndex = payload.resolveIndex >= handlerInfos.length ? handlerInfos.length - 1 : payload.resolveIndex;
        return _rsvp.Promise.reject({
          error: error,
          handlerWithError: currentState.handlerInfos[errorHandlerIndex].handler,
          wasAborted: wasAborted,
          state: currentState
        });
      }

      function proceed(resolvedHandlerInfo) {
        var wasAlreadyResolved = currentState.handlerInfos[payload.resolveIndex].isResolved;

        // Swap the previously unresolved handlerInfo with
        // the resolved handlerInfo
        currentState.handlerInfos[payload.resolveIndex++] = resolvedHandlerInfo;

        if (!wasAlreadyResolved) {
          // Call the redirect hook. The reason we call it here
          // vs. afterModel is so that redirects into child
          // routes don't re-run the model hooks for this
          // already-resolved route.
          var handler = resolvedHandlerInfo.handler;
          callHook(handler, 'redirect', resolvedHandlerInfo.context, payload);
        }

        // Proceed after ensuring that the redirect hook
        // didn't abort this transition by transitioning elsewhere.
        return innerShouldContinue().then(resolveOneHandlerInfo, null, currentState.promiseLabel('Resolve handler'));
      }

      function resolveOneHandlerInfo() {
        if (payload.resolveIndex === currentState.handlerInfos.length) {
          // This is is the only possible
          // fulfill value of TransitionState#resolve
          return {
            error: null,
            state: currentState
          };
        }

        var handlerInfo = currentState.handlerInfos[payload.resolveIndex];

        return handlerInfo.resolve(innerShouldContinue, payload).then(proceed, null, currentState.promiseLabel('Proceed'));
      }
    }
  };

  function TransitionAbortedError(message) {
    if (!(this instanceof TransitionAbortedError)) {
      return new TransitionAbortedError(message);
    }

    var error = Error.call(this, message);

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, TransitionAbortedError);
    } else {
      this.stack = error.stack;
    }

    this.description = error.description;
    this.fileName = error.fileName;
    this.lineNumber = error.lineNumber;
    this.message = error.message || 'TransitionAborted';
    this.name = 'TransitionAborted';
    this.number = error.number;
    this.code = error.code;
  }

  TransitionAbortedError.prototype = oCreate(Error.prototype);

  /**
    A Transition is a thennable (a promise-like object) that represents
    an attempt to transition to another route. It can be aborted, either
    explicitly via `abort` or by attempting another transition while a
    previous one is still underway. An aborted transition can also
    be `retry()`d later.
  
    @class Transition
    @constructor
    @param {Object} router
    @param {Object} intent
    @param {Object} state
    @param {Object} error
    @private
   */
  function Transition(router, intent, state, error, previousTransition) {
    var transition = this;
    this.state = state || router.state;
    this.intent = intent;
    this.router = router;
    this.data = this.intent && this.intent.data || {};
    this.resolvedModels = {};
    this.queryParams = {};
    this.promise = undefined;
    this.error = undefined;
    this.params = undefined;
    this.handlerInfos = undefined;
    this.targetName = undefined;
    this.pivotHandler = undefined;
    this.sequence = undefined;
    this.isAborted = false;
    this.isActive = true;

    if (error) {
      this.promise = _rsvp.Promise.reject(error);
      this.error = error;
      return;
    }

    // if you're doing multiple redirects, need the new transition to know if it
    // is actually part of the first transition or not. Any further redirects
    // in the initial transition also need to know if they are part of the
    // initial transition
    this.isCausedByAbortingTransition = !!previousTransition;
    this.isCausedByInitialTransition = previousTransition && (previousTransition.isCausedByInitialTransition || previousTransition.sequence === 0);

    if (state) {
      this.params = state.params;
      this.queryParams = state.queryParams;
      this.handlerInfos = state.handlerInfos;

      var len = state.handlerInfos.length;
      if (len) {
        this.targetName = state.handlerInfos[len - 1].name;
      }

      for (var i = 0; i < len; ++i) {
        var handlerInfo = state.handlerInfos[i];

        // TODO: this all seems hacky
        if (!handlerInfo.isResolved) {
          break;
        }
        this.pivotHandler = handlerInfo.handler;
      }

      this.sequence = router.currentSequence++;
      this.promise = state.resolve(checkForAbort, this)['catch'](catchHandlerForTransition(transition), promiseLabel('Handle Abort'));
    } else {
      this.promise = _rsvp.Promise.resolve(this.state);
      this.params = {};
    }

    function checkForAbort() {
      if (transition.isAborted) {
        return _rsvp.Promise.reject(undefined, promiseLabel("Transition aborted - reject"));
      }
    }
  }

  function catchHandlerForTransition(transition) {
    return function (result) {
      if (result.wasAborted || transition.isAborted) {
        return _rsvp.Promise.reject(logAbort(transition));
      } else {
        transition.trigger('error', result.error, transition, result.handlerWithError);
        transition.abort();
        return _rsvp.Promise.reject(result.error);
      }
    };
  }

  Transition.prototype = {
    targetName: null,
    urlMethod: 'update',
    intent: null,
    pivotHandler: null,
    resolveIndex: 0,
    resolvedModels: null,
    state: null,
    queryParamsOnly: false,

    isTransition: true,

    isExiting: function (handler) {
      var handlerInfos = this.handlerInfos;
      for (var i = 0, len = handlerInfos.length; i < len; ++i) {
        var handlerInfo = handlerInfos[i];
        if (handlerInfo.name === handler || handlerInfo.handler === handler) {
          return false;
        }
      }
      return true;
    },

    /**
      The Transition's internal promise. Calling `.then` on this property
      is that same as calling `.then` on the Transition object itself, but
      this property is exposed for when you want to pass around a
      Transition's promise, but not the Transition object itself, since
      Transition object can be externally `abort`ed, while the promise
      cannot.
       @property promise
      @type {Object}
      @public
     */
    promise: null,

    /**
      Custom state can be stored on a Transition's `data` object.
      This can be useful for decorating a Transition within an earlier
      hook and shared with a later hook. Properties set on `data` will
      be copied to new transitions generated by calling `retry` on this
      transition.
       @property data
      @type {Object}
      @public
     */
    data: null,

    /**
      A standard promise hook that resolves if the transition
      succeeds and rejects if it fails/redirects/aborts.
       Forwards to the internal `promise` property which you can
      use in situations where you want to pass around a thennable,
      but not the Transition itself.
       @method then
      @param {Function} onFulfilled
      @param {Function} onRejected
      @param {String} label optional string for labeling the promise.
      Useful for tooling.
      @return {Promise}
      @public
     */
    then: function (onFulfilled, onRejected, label) {
      return this.promise.then(onFulfilled, onRejected, label);
    },

    /**
       Forwards to the internal `promise` property which you can
      use in situations where you want to pass around a thennable,
      but not the Transition itself.
       @method catch
      @param {Function} onRejection
      @param {String} label optional string for labeling the promise.
      Useful for tooling.
      @return {Promise}
      @public
     */
    catch: function (onRejection, label) {
      return this.promise.catch(onRejection, label);
    },

    /**
       Forwards to the internal `promise` property which you can
      use in situations where you want to pass around a thennable,
      but not the Transition itself.
       @method finally
      @param {Function} callback
      @param {String} label optional string for labeling the promise.
      Useful for tooling.
      @return {Promise}
      @public
     */
    finally: function (callback, label) {
      return this.promise.finally(callback, label);
    },

    /**
      Aborts the Transition. Note you can also implicitly abort a transition
      by initiating another transition while a previous one is underway.
       @method abort
      @return {Transition} this transition
      @public
     */
    abort: function () {
      if (this.isAborted) {
        return this;
      }
      log(this.router, this.sequence, this.targetName + ": transition was aborted");
      this.intent.preTransitionState = this.router.state;
      this.isAborted = true;
      this.isActive = false;
      this.router.activeTransition = null;
      return this;
    },

    /**
       Retries a previously-aborted transition (making sure to abort the
      transition if it's still active). Returns a new transition that
      represents the new attempt to transition.
       @method retry
      @return {Transition} new transition
      @public
     */
    retry: function () {
      // TODO: add tests for merged state retry()s
      this.abort();
      var newTransition = this.router.transitionByIntent(this.intent, false);

      // inheriting a `null` urlMethod is not valid
      // the urlMethod is only set to `null` when
      // the transition is initiated *after* the url
      // has been updated (i.e. `router.handleURL`)
      //
      // in that scenario, the url method cannot be
      // inherited for a new transition because then
      // the url would not update even though it should
      if (this.urlMethod !== null) {
        newTransition.method(this.urlMethod);
      }
      return newTransition;
    },

    /**
       Sets the URL-changing method to be employed at the end of a
      successful transition. By default, a new Transition will just
      use `updateURL`, but passing 'replace' to this method will
      cause the URL to update using 'replaceWith' instead. Omitting
      a parameter will disable the URL change, allowing for transitions
      that don't update the URL at completion (this is also used for
      handleURL, since the URL has already changed before the
      transition took place).
       @method method
      @param {String} method the type of URL-changing method to use
        at the end of a transition. Accepted values are 'replace',
        falsy values, or any other non-falsy value (which is
        interpreted as an updateURL transition).
       @return {Transition} this transition
      @public
     */
    method: function (method) {
      this.urlMethod = method;
      return this;
    },

    /**
       Fires an event on the current list of resolved/resolving
      handlers within this transition. Useful for firing events
      on route hierarchies that haven't fully been entered yet.
       Note: This method is also aliased as `send`
       @method trigger
      @param {Boolean} [ignoreFailure=false] a boolean specifying whether unhandled events throw an error
      @param {String} name the name of the event to fire
      @public
     */
    trigger: function (ignoreFailure) {
      var args = slice.call(arguments);
      if (typeof ignoreFailure === 'boolean') {
        args.shift();
      } else {
        // Throw errors on unhandled trigger events by default
        ignoreFailure = false;
      }
      trigger(this.router, this.state.handlerInfos.slice(0, this.resolveIndex + 1), ignoreFailure, args);
    },

    /**
      Transitions are aborted and their promises rejected
      when redirects occur; this method returns a promise
      that will follow any redirects that occur and fulfill
      with the value fulfilled by any redirecting transitions
      that occur.
       @method followRedirects
      @return {Promise} a promise that fulfills with the same
        value that the final redirecting transition fulfills with
      @public
     */
    followRedirects: function () {
      var router = this.router;
      return this.promise['catch'](function (reason) {
        if (router.activeTransition) {
          return router.activeTransition.followRedirects();
        }
        return _rsvp.Promise.reject(reason);
      });
    },

    toString: function () {
      return "Transition (sequence " + this.sequence + ")";
    },

    /**
      @private
     */
    log: function (message) {
      log(this.router, this.sequence, message);
    }
  };

  // Alias 'trigger' as 'send'
  Transition.prototype.send = Transition.prototype.trigger;

  /**
    @private
  
    Logs and returns an instance of TransitionAbortedError.
   */
  function logAbort(transition) {
    log(transition.router, transition.sequence, "detected abort.");
    return new TransitionAbortedError();
  }

  function TransitionIntent(props) {
    this.initialize(props);

    // TODO: wat
    this.data = this.data || {};
  }

  TransitionIntent.prototype = {
    initialize: null,
    applyToState: null
  };

  var DEFAULT_HANDLER = Object.freeze({});

  function HandlerInfo(_props) {
    var props = _props || {};

    // Set a default handler to ensure consistent object shape
    this._handler = DEFAULT_HANDLER;

    if (props.handler) {
      var name = props.name;

      // Setup a handlerPromise so that we can wait for asynchronously loaded handlers
      this.handlerPromise = _rsvp.Promise.resolve(props.handler);

      // Wait until the 'handler' property has been updated when chaining to a handler
      // that is a promise
      if (isPromise(props.handler)) {
        this.handlerPromise = this.handlerPromise.then(bind(this, this.updateHandler));
        props.handler = undefined;
      } else if (props.handler) {
        // Store the name of the handler on the handler for easy checks later
        props.handler._handlerName = name;
      }
    }

    merge(this, props);
    this.initialize(props);
  }

  HandlerInfo.prototype = {
    name: null,

    getHandler: function () {},

    fetchHandler: function () {
      var handler = this.getHandler(this.name);

      // Setup a handlerPromise so that we can wait for asynchronously loaded handlers
      this.handlerPromise = _rsvp.Promise.resolve(handler);

      // Wait until the 'handler' property has been updated when chaining to a handler
      // that is a promise
      if (isPromise(handler)) {
        this.handlerPromise = this.handlerPromise.then(bind(this, this.updateHandler));
      } else if (handler) {
        // Store the name of the handler on the handler for easy checks later
        handler._handlerName = this.name;
        return this.handler = handler;
      }

      return this.handler = undefined;
    },

    _handlerPromise: undefined,

    params: null,
    context: null,

    // Injected by the handler info factory.
    factory: null,

    initialize: function () {},

    log: function (payload, message) {
      if (payload.log) {
        payload.log(this.name + ': ' + message);
      }
    },

    promiseLabel: function (label) {
      return promiseLabel("'" + this.name + "' " + label);
    },

    getUnresolved: function () {
      return this;
    },

    serialize: function () {
      return this.params || {};
    },

    updateHandler: function (handler) {
      // Store the name of the handler on the handler for easy checks later
      handler._handlerName = this.name;
      return this.handler = handler;
    },

    resolve: function (shouldContinue, payload) {
      var checkForAbort = bind(this, this.checkForAbort, shouldContinue),
          beforeModel = bind(this, this.runBeforeModelHook, payload),
          model = bind(this, this.getModel, payload),
          afterModel = bind(this, this.runAfterModelHook, payload),
          becomeResolved = bind(this, this.becomeResolved, payload),
          self = this;

      return _rsvp.Promise.resolve(this.handlerPromise, this.promiseLabel("Start handler")).then(function (handler) {
        // We nest this chain in case the handlerPromise has an error so that
        // we don't have to bubble it through every step
        return _rsvp.Promise.resolve(handler).then(checkForAbort, null, self.promiseLabel("Check for abort")).then(beforeModel, null, self.promiseLabel("Before model")).then(checkForAbort, null, self.promiseLabel("Check if aborted during 'beforeModel' hook")).then(model, null, self.promiseLabel("Model")).then(checkForAbort, null, self.promiseLabel("Check if aborted in 'model' hook")).then(afterModel, null, self.promiseLabel("After model")).then(checkForAbort, null, self.promiseLabel("Check if aborted in 'afterModel' hook")).then(becomeResolved, null, self.promiseLabel("Become resolved"));
      }, function (error) {
        throw error;
      });
    },

    runBeforeModelHook: function (payload) {
      if (payload.trigger) {
        payload.trigger(true, 'willResolveModel', payload, this.handler);
      }
      return this.runSharedModelHook(payload, 'beforeModel', []);
    },

    runAfterModelHook: function (payload, resolvedModel) {
      // Stash the resolved model on the payload.
      // This makes it possible for users to swap out
      // the resolved model in afterModel.
      var name = this.name;
      this.stashResolvedModel(payload, resolvedModel);

      return this.runSharedModelHook(payload, 'afterModel', [resolvedModel]).then(function () {
        // Ignore the fulfilled value returned from afterModel.
        // Return the value stashed in resolvedModels, which
        // might have been swapped out in afterModel.
        return payload.resolvedModels[name];
      }, null, this.promiseLabel("Ignore fulfillment value and return model value"));
    },

    runSharedModelHook: function (payload, hookName, args) {
      this.log(payload, "calling " + hookName + " hook");

      if (this.queryParams) {
        args.push(this.queryParams);
      }
      args.push(payload);

      var result = applyHook(this.handler, hookName, args);

      if (result && result.isTransition) {
        result = null;
      }

      return _rsvp.Promise.resolve(result, this.promiseLabel("Resolve value returned from one of the model hooks"));
    },

    // overridden by subclasses
    getModel: null,

    checkForAbort: function (shouldContinue, promiseValue) {
      return _rsvp.Promise.resolve(shouldContinue(), this.promiseLabel("Check for abort")).then(function () {
        // We don't care about shouldContinue's resolve value;
        // pass along the original value passed to this fn.
        return promiseValue;
      }, null, this.promiseLabel("Ignore fulfillment value and continue"));
    },

    stashResolvedModel: function (payload, resolvedModel) {
      payload.resolvedModels = payload.resolvedModels || {};
      payload.resolvedModels[this.name] = resolvedModel;
    },

    becomeResolved: function (payload, resolvedContext) {
      var params = this.serialize(resolvedContext);

      if (payload) {
        this.stashResolvedModel(payload, resolvedContext);
        payload.params = payload.params || {};
        payload.params[this.name] = params;
      }

      return this.factory('resolved', {
        context: resolvedContext,
        name: this.name,
        handler: this.handler,
        params: params
      });
    },

    shouldSupercede: function (other) {
      // Prefer this newer handlerInfo over `other` if:
      // 1) The other one doesn't exist
      // 2) The names don't match
      // 3) This handler has a context that doesn't match
      //    the other one (or the other one doesn't have one).
      // 4) This handler has parameters that don't match the other.
      if (!other) {
        return true;
      }

      var contextsMatch = other.context === this.context;
      return other.name !== this.name || this.hasOwnProperty('context') && !contextsMatch || this.hasOwnProperty('params') && !paramsMatch(this.params, other.params);
    }
  };

  Object.defineProperty(HandlerInfo.prototype, 'handler', {
    get: function () {
      // _handler could be set to either a handler object or undefined, so we
      // compare against a default reference to know when it's been set
      if (this._handler !== DEFAULT_HANDLER) {
        return this._handler;
      }

      return this.fetchHandler();
    },

    set: function (handler) {
      return this._handler = handler;
    }
  });

  Object.defineProperty(HandlerInfo.prototype, 'handlerPromise', {
    get: function () {
      if (this._handlerPromise) {
        return this._handlerPromise;
      }

      this.fetchHandler();

      return this._handlerPromise;
    },

    set: function (handlerPromise) {
      return this._handlerPromise = handlerPromise;
    }
  });

  function paramsMatch(a, b) {
    if (!a ^ !b) {
      // Only one is null.
      return false;
    }

    if (!a) {
      // Both must be null.
      return true;
    }

    // Note: this assumes that both params have the same
    // number of keys, but since we're comparing the
    // same handlers, they should.
    for (var k in a) {
      if (a.hasOwnProperty(k) && a[k] !== b[k]) {
        return false;
      }
    }
    return true;
  }

  var ResolvedHandlerInfo = subclass(HandlerInfo, {
    resolve: function (shouldContinue, payload) {
      // A ResolvedHandlerInfo just resolved with itself.
      if (payload && payload.resolvedModels) {
        payload.resolvedModels[this.name] = this.context;
      }
      return _rsvp.Promise.resolve(this, this.promiseLabel("Resolve"));
    },

    getUnresolved: function () {
      return this.factory('param', {
        name: this.name,
        handler: this.handler,
        params: this.params
      });
    },

    isResolved: true
  });

  var UnresolvedHandlerInfoByObject = subclass(HandlerInfo, {
    getModel: function (payload) {
      this.log(payload, this.name + ": resolving provided model");
      return _rsvp.Promise.resolve(this.context);
    },

    initialize: function (props) {
      this.names = props.names || [];
      this.context = props.context;
    },

    /**
      @private
       Serializes a handler using its custom `serialize` method or
      by a default that looks up the expected property name from
      the dynamic segment.
       @param {Object} model the model to be serialized for this handler
    */
    serialize: function (_model) {
      var model = _model || this.context,
          names = this.names,
          serializer = this.serializer || this.handler && this.handler.serialize;

      var object = {};
      if (isParam(model)) {
        object[names[0]] = model;
        return object;
      }

      // Use custom serialize if it exists.
      if (serializer) {
        return serializer(model, names);
      }

      if (names.length !== 1) {
        return;
      }

      var name = names[0];

      if (/_id$/.test(name)) {
        object[name] = model.id;
      } else {
        object[name] = model;
      }
      return object;
    }
  });

  // Generated by URL transitions and non-dynamic route segments in named Transitions.
  var UnresolvedHandlerInfoByParam = subclass(HandlerInfo, {
    initialize: function (props) {
      this.params = props.params || {};
    },

    getModel: function (payload) {
      var fullParams = this.params;
      if (payload && payload.queryParams) {
        fullParams = {};
        merge(fullParams, this.params);
        fullParams.queryParams = payload.queryParams;
      }

      var handler = this.handler;
      var hookName = resolveHook(handler, 'deserialize') || resolveHook(handler, 'model');

      return this.runSharedModelHook(payload, hookName, [fullParams]);
    }
  });

  handlerInfoFactory.klasses = {
    resolved: ResolvedHandlerInfo,
    param: UnresolvedHandlerInfoByParam,
    object: UnresolvedHandlerInfoByObject
  };

  function handlerInfoFactory(name, props) {
    var Ctor = handlerInfoFactory.klasses[name],
        handlerInfo = new Ctor(props || {});
    handlerInfo.factory = handlerInfoFactory;
    return handlerInfo;
  }

  var NamedTransitionIntent = subclass(TransitionIntent, {
    name: null,
    pivotHandler: null,
    contexts: null,
    queryParams: null,

    initialize: function (props) {
      this.name = props.name;
      this.pivotHandler = props.pivotHandler;
      this.contexts = props.contexts || [];
      this.queryParams = props.queryParams;
    },

    applyToState: function (oldState, recognizer, getHandler, isIntermediate, getSerializer) {

      var partitionedArgs = extractQueryParams([this.name].concat(this.contexts)),
          pureArgs = partitionedArgs[0],
          handlers = recognizer.handlersFor(pureArgs[0]);

      var targetRouteName = handlers[handlers.length - 1].handler;

      return this.applyToHandlers(oldState, handlers, getHandler, targetRouteName, isIntermediate, null, getSerializer);
    },

    applyToHandlers: function (oldState, handlers, getHandler, targetRouteName, isIntermediate, checkingIfActive, getSerializer) {

      var i, len;
      var newState = new TransitionState();
      var objects = this.contexts.slice(0);

      var invalidateIndex = handlers.length;

      // Pivot handlers are provided for refresh transitions
      if (this.pivotHandler) {
        for (i = 0, len = handlers.length; i < len; ++i) {
          if (handlers[i].handler === this.pivotHandler._handlerName) {
            invalidateIndex = i;
            break;
          }
        }
      }

      for (i = handlers.length - 1; i >= 0; --i) {
        var result = handlers[i];
        var name = result.handler;

        var oldHandlerInfo = oldState.handlerInfos[i];
        var newHandlerInfo = null;

        if (result.names.length > 0) {
          if (i >= invalidateIndex) {
            newHandlerInfo = this.createParamHandlerInfo(name, getHandler, result.names, objects, oldHandlerInfo);
          } else {
            var serializer = getSerializer(name);
            newHandlerInfo = this.getHandlerInfoForDynamicSegment(name, getHandler, result.names, objects, oldHandlerInfo, targetRouteName, i, serializer);
          }
        } else {
          // This route has no dynamic segment.
          // Therefore treat as a param-based handlerInfo
          // with empty params. This will cause the `model`
          // hook to be called with empty params, which is desirable.
          newHandlerInfo = this.createParamHandlerInfo(name, getHandler, result.names, objects, oldHandlerInfo);
        }

        if (checkingIfActive) {
          // If we're performing an isActive check, we want to
          // serialize URL params with the provided context, but
          // ignore mismatches between old and new context.
          newHandlerInfo = newHandlerInfo.becomeResolved(null, newHandlerInfo.context);
          var oldContext = oldHandlerInfo && oldHandlerInfo.context;
          if (result.names.length > 0 && newHandlerInfo.context === oldContext) {
            // If contexts match in isActive test, assume params also match.
            // This allows for flexibility in not requiring that every last
            // handler provide a `serialize` method
            newHandlerInfo.params = oldHandlerInfo && oldHandlerInfo.params;
          }
          newHandlerInfo.context = oldContext;
        }

        var handlerToUse = oldHandlerInfo;
        if (i >= invalidateIndex || newHandlerInfo.shouldSupercede(oldHandlerInfo)) {
          invalidateIndex = Math.min(i, invalidateIndex);
          handlerToUse = newHandlerInfo;
        }

        if (isIntermediate && !checkingIfActive) {
          handlerToUse = handlerToUse.becomeResolved(null, handlerToUse.context);
        }

        newState.handlerInfos.unshift(handlerToUse);
      }

      if (objects.length > 0) {
        throw new Error("More context objects were passed than there are dynamic segments for the route: " + targetRouteName);
      }

      if (!isIntermediate) {
        this.invalidateChildren(newState.handlerInfos, invalidateIndex);
      }

      merge(newState.queryParams, this.queryParams || {});

      return newState;
    },

    invalidateChildren: function (handlerInfos, invalidateIndex) {
      for (var i = invalidateIndex, l = handlerInfos.length; i < l; ++i) {
        var handlerInfo = handlerInfos[i];
        handlerInfos[i] = handlerInfo.getUnresolved();
      }
    },

    getHandlerInfoForDynamicSegment: function (name, getHandler, names, objects, oldHandlerInfo, targetRouteName, i, serializer) {
      var objectToUse;
      if (objects.length > 0) {

        // Use the objects provided for this transition.
        objectToUse = objects[objects.length - 1];
        if (isParam(objectToUse)) {
          return this.createParamHandlerInfo(name, getHandler, names, objects, oldHandlerInfo);
        } else {
          objects.pop();
        }
      } else if (oldHandlerInfo && oldHandlerInfo.name === name) {
        // Reuse the matching oldHandlerInfo
        return oldHandlerInfo;
      } else {
        if (this.preTransitionState) {
          var preTransitionHandlerInfo = this.preTransitionState.handlerInfos[i];
          objectToUse = preTransitionHandlerInfo && preTransitionHandlerInfo.context;
        } else {
          // Ideally we should throw this error to provide maximal
          // information to the user that not enough context objects
          // were provided, but this proves too cumbersome in Ember
          // in cases where inner template helpers are evaluated
          // before parent helpers un-render, in which cases this
          // error somewhat prematurely fires.
          //throw new Error("Not enough context objects were provided to complete a transition to " + targetRouteName + ". Specifically, the " + name + " route needs an object that can be serialized into its dynamic URL segments [" + names.join(', ') + "]");
          return oldHandlerInfo;
        }
      }

      return handlerInfoFactory('object', {
        name: name,
        getHandler: getHandler,
        serializer: serializer,
        context: objectToUse,
        names: names
      });
    },

    createParamHandlerInfo: function (name, getHandler, names, objects, oldHandlerInfo) {
      var params = {};

      // Soak up all the provided string/numbers
      var numNames = names.length;
      while (numNames--) {

        // Only use old params if the names match with the new handler
        var oldParams = oldHandlerInfo && name === oldHandlerInfo.name && oldHandlerInfo.params || {};

        var peek = objects[objects.length - 1];
        var paramName = names[numNames];
        if (isParam(peek)) {
          params[paramName] = "" + objects.pop();
        } else {
          // If we're here, this means only some of the params
          // were string/number params, so try and use a param
          // value from a previous handler.
          if (oldParams.hasOwnProperty(paramName)) {
            params[paramName] = oldParams[paramName];
          } else {
            throw new Error("You didn't provide enough string/numeric parameters to satisfy all of the dynamic segments for route " + name);
          }
        }
      }

      return handlerInfoFactory('param', {
        name: name,
        getHandler: getHandler,
        params: params
      });
    }
  });

  function UnrecognizedURLError(message) {
    if (!(this instanceof UnrecognizedURLError)) {
      return new UnrecognizedURLError(message);
    }

    var error = Error.call(this, message);

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, UnrecognizedURLError);
    } else {
      this.stack = error.stack;
    }

    this.description = error.description;
    this.fileName = error.fileName;
    this.lineNumber = error.lineNumber;
    this.message = error.message || 'UnrecognizedURL';
    this.name = 'UnrecognizedURLError';
    this.number = error.number;
    this.code = error.code;
  }

  UnrecognizedURLError.prototype = oCreate(Error.prototype);

  var URLTransitionIntent = subclass(TransitionIntent, {
    url: null,

    initialize: function (props) {
      this.url = props.url;
    },

    applyToState: function (oldState, recognizer, getHandler) {
      var newState = new TransitionState();

      var results = recognizer.recognize(this.url),
          i,
          len;

      if (!results) {
        throw new UnrecognizedURLError(this.url);
      }

      var statesDiffer = false;
      var url = this.url;

      // Checks if a handler is accessible by URL. If it is not, an error is thrown.
      // For the case where the handler is loaded asynchronously, the error will be
      // thrown once it is loaded.
      function checkHandlerAccessibility(handler) {
        if (handler && handler.inaccessibleByURL) {
          throw new UnrecognizedURLError(url);
        }

        return handler;
      }

      for (i = 0, len = results.length; i < len; ++i) {
        var result = results[i];
        var name = result.handler;
        var newHandlerInfo = handlerInfoFactory('param', {
          name: name,
          getHandler: getHandler,
          params: result.params
        });
        var handler = newHandlerInfo.handler;

        if (handler) {
          checkHandlerAccessibility(handler);
        } else {
          // If the hanlder is being loaded asynchronously, check if we can
          // access it after it has resolved
          newHandlerInfo.handlerPromise = newHandlerInfo.handlerPromise.then(checkHandlerAccessibility);
        }

        var oldHandlerInfo = oldState.handlerInfos[i];
        if (statesDiffer || newHandlerInfo.shouldSupercede(oldHandlerInfo)) {
          statesDiffer = true;
          newState.handlerInfos[i] = newHandlerInfo;
        } else {
          newState.handlerInfos[i] = oldHandlerInfo;
        }
      }

      merge(newState.queryParams, results.queryParams);

      return newState;
    }
  });

  var pop = Array.prototype.pop;

  function Router$1(_options) {
    var options = _options || {};
    this.getHandler = options.getHandler || this.getHandler;
    this.getSerializer = options.getSerializer || this.getSerializer;
    this.updateURL = options.updateURL || this.updateURL;
    this.replaceURL = options.replaceURL || this.replaceURL;
    this.didTransition = options.didTransition || this.didTransition;
    this.willTransition = options.willTransition || this.willTransition;
    this.delegate = options.delegate || this.delegate;
    this.triggerEvent = options.triggerEvent || this.triggerEvent;
    this.log = options.log || this.log;
    this.dslCallBacks = []; // NOTE: set by Ember
    this.state = undefined;
    this.activeTransition = undefined;
    this._changedQueryParams = undefined;
    this.oldState = undefined;
    this.currentHandlerInfos = undefined;
    this.state = undefined;
    this.currentSequence = 0;

    this.recognizer = new _routeRecognizer.default();
    this.reset();
  }

  function getTransitionByIntent(intent, isIntermediate) {
    var wasTransitioning = !!this.activeTransition;
    var oldState = wasTransitioning ? this.activeTransition.state : this.state;
    var newTransition;

    var newState = intent.applyToState(oldState, this.recognizer, this.getHandler, isIntermediate, this.getSerializer);
    var queryParamChangelist = getChangelist(oldState.queryParams, newState.queryParams);

    if (handlerInfosEqual(newState.handlerInfos, oldState.handlerInfos)) {

      // This is a no-op transition. See if query params changed.
      if (queryParamChangelist) {
        newTransition = this.queryParamsTransition(queryParamChangelist, wasTransitioning, oldState, newState);
        if (newTransition) {
          newTransition.queryParamsOnly = true;
          return newTransition;
        }
      }

      // No-op. No need to create a new transition.
      return this.activeTransition || new Transition(this);
    }

    if (isIntermediate) {
      setupContexts(this, newState);
      return;
    }

    // Create a new transition to the destination route.
    newTransition = new Transition(this, intent, newState, undefined, this.activeTransition);

    // transition is to same route with same params, only query params differ.
    // not caught above probably because refresh() has been used
    if (handlerInfosSameExceptQueryParams(newState.handlerInfos, oldState.handlerInfos)) {
      newTransition.queryParamsOnly = true;
    }

    // Abort and usurp any previously active transition.
    if (this.activeTransition) {
      this.activeTransition.abort();
    }
    this.activeTransition = newTransition;

    // Transition promises by default resolve with resolved state.
    // For our purposes, swap out the promise to resolve
    // after the transition has been finalized.
    newTransition.promise = newTransition.promise.then(function (result) {
      return finalizeTransition(newTransition, result.state);
    }, null, promiseLabel("Settle transition promise when transition is finalized"));

    if (!wasTransitioning) {
      notifyExistingHandlers(this, newState, newTransition);
    }

    fireQueryParamDidChange(this, newState, queryParamChangelist);

    return newTransition;
  }

  Router$1.prototype = {

    /**
      The main entry point into the router. The API is essentially
      the same as the `map` method in `route-recognizer`.
       This method extracts the String handler at the last `.to()`
      call and uses it as the name of the whole route.
       @param {Function} callback
    */
    map: function (callback) {
      this.recognizer.delegate = this.delegate;

      this.recognizer.map(callback, function (recognizer, routes) {
        for (var i = routes.length - 1, proceed = true; i >= 0 && proceed; --i) {
          var route = routes[i];
          recognizer.add(routes, { as: route.handler });
          proceed = route.path === '/' || route.path === '' || route.handler.slice(-6) === '.index';
        }
      });
    },

    hasRoute: function (route) {
      return this.recognizer.hasRoute(route);
    },

    getHandler: function () {},

    getSerializer: function () {},

    queryParamsTransition: function (changelist, wasTransitioning, oldState, newState) {
      var router = this;

      fireQueryParamDidChange(this, newState, changelist);

      if (!wasTransitioning && this.activeTransition) {
        // One of the handlers in queryParamsDidChange
        // caused a transition. Just return that transition.
        return this.activeTransition;
      } else {
        // Running queryParamsDidChange didn't change anything.
        // Just update query params and be on our way.

        // We have to return a noop transition that will
        // perform a URL update at the end. This gives
        // the user the ability to set the url update
        // method (default is replaceState).
        var newTransition = new Transition(this);
        newTransition.queryParamsOnly = true;

        oldState.queryParams = finalizeQueryParamChange(this, newState.handlerInfos, newState.queryParams, newTransition);

        newTransition.promise = newTransition.promise.then(function (result) {
          updateURL(newTransition, oldState, true);
          if (router.didTransition) {
            router.didTransition(router.currentHandlerInfos);
          }
          return result;
        }, null, promiseLabel("Transition complete"));
        return newTransition;
      }
    },

    // NOTE: this doesn't really belong here, but here
    // it shall remain until our ES6 transpiler can
    // handle cyclical deps.
    transitionByIntent: function (intent /*, isIntermediate*/) {
      try {
        return getTransitionByIntent.apply(this, arguments);
      } catch (e) {
        return new Transition(this, intent, null, e);
      }
    },

    /**
      Clears the current and target route handlers and triggers exit
      on each of them starting at the leaf and traversing up through
      its ancestors.
    */
    reset: function () {
      if (this.state) {
        forEach(this.state.handlerInfos.slice().reverse(), function (handlerInfo) {
          var handler = handlerInfo.handler;
          callHook(handler, 'exit');
        });
      }

      this.oldState = undefined;
      this.state = new TransitionState();
      this.currentHandlerInfos = null;
    },

    activeTransition: null,

    /**
      var handler = handlerInfo.handler;
      The entry point for handling a change to the URL (usually
      via the back and forward button).
       Returns an Array of handlers and the parameters associated
      with those parameters.
       @param {String} url a URL to process
       @return {Array} an Array of `[handler, parameter]` tuples
    */
    handleURL: function (url) {
      // Perform a URL-based transition, but don't change
      // the URL afterward, since it already happened.
      var args = slice.call(arguments);
      if (url.charAt(0) !== '/') {
        args[0] = '/' + url;
      }

      return doTransition(this, args).method(null);
    },

    /**
      Hook point for updating the URL.
       @param {String} url a URL to update to
    */
    updateURL: function () {
      throw new Error("updateURL is not implemented");
    },

    /**
      Hook point for replacing the current URL, i.e. with replaceState
       By default this behaves the same as `updateURL`
       @param {String} url a URL to update to
    */
    replaceURL: function (url) {
      this.updateURL(url);
    },

    /**
      Transition into the specified named route.
       If necessary, trigger the exit callback on any handlers
      that are no longer represented by the target route.
       @param {String} name the name of the route
    */
    transitionTo: function () /*name*/{
      return doTransition(this, arguments);
    },

    intermediateTransitionTo: function () /*name*/{
      return doTransition(this, arguments, true);
    },

    refresh: function (pivotHandler) {
      var previousTransition = this.activeTransition;
      var state = previousTransition ? previousTransition.state : this.state;
      var handlerInfos = state.handlerInfos;
      var params = {};
      for (var i = 0, len = handlerInfos.length; i < len; ++i) {
        var handlerInfo = handlerInfos[i];
        params[handlerInfo.name] = handlerInfo.params || {};
      }

      log(this, "Starting a refresh transition");
      var intent = new NamedTransitionIntent({
        name: handlerInfos[handlerInfos.length - 1].name,
        pivotHandler: pivotHandler || handlerInfos[0].handler,
        contexts: [], // TODO collect contexts...?
        queryParams: this._changedQueryParams || state.queryParams || {}
      });

      var newTransition = this.transitionByIntent(intent, false);

      // if the previous transition is a replace transition, that needs to be preserved
      if (previousTransition && previousTransition.urlMethod === 'replace') {
        newTransition.method(previousTransition.urlMethod);
      }

      return newTransition;
    },

    /**
      Identical to `transitionTo` except that the current URL will be replaced
      if possible.
       This method is intended primarily for use with `replaceState`.
       @param {String} name the name of the route
    */
    replaceWith: function () /*name*/{
      return doTransition(this, arguments).method('replace');
    },

    /**
      Take a named route and context objects and generate a
      URL.
       @param {String} name the name of the route to generate
        a URL for
      @param {...Object} objects a list of objects to serialize
       @return {String} a URL
    */
    generate: function (handlerName) {

      var partitionedArgs = extractQueryParams(slice.call(arguments, 1)),
          suppliedParams = partitionedArgs[0],
          queryParams = partitionedArgs[1];

      // Construct a TransitionIntent with the provided params
      // and apply it to the present state of the router.
      var intent = new NamedTransitionIntent({ name: handlerName, contexts: suppliedParams });
      var state = intent.applyToState(this.state, this.recognizer, this.getHandler, null, this.getSerializer);
      var params = {};

      for (var i = 0, len = state.handlerInfos.length; i < len; ++i) {
        var handlerInfo = state.handlerInfos[i];
        var handlerParams = handlerInfo.serialize();
        merge(params, handlerParams);
      }
      params.queryParams = queryParams;

      return this.recognizer.generate(handlerName, params);
    },

    applyIntent: function (handlerName, contexts) {
      var intent = new NamedTransitionIntent({
        name: handlerName,
        contexts: contexts
      });

      var state = this.activeTransition && this.activeTransition.state || this.state;
      return intent.applyToState(state, this.recognizer, this.getHandler, null, this.getSerializer);
    },

    isActiveIntent: function (handlerName, contexts, queryParams, _state) {
      var state = _state || this.state,
          targetHandlerInfos = state.handlerInfos,
          handlerInfo,
          len;

      if (!targetHandlerInfos.length) {
        return false;
      }

      var targetHandler = targetHandlerInfos[targetHandlerInfos.length - 1].name;
      var recogHandlers = this.recognizer.handlersFor(targetHandler);

      var index = 0;
      for (len = recogHandlers.length; index < len; ++index) {
        handlerInfo = targetHandlerInfos[index];
        if (handlerInfo.name === handlerName) {
          break;
        }
      }

      if (index === recogHandlers.length) {
        // The provided route name isn't even in the route hierarchy.
        return false;
      }

      var testState = new TransitionState();
      testState.handlerInfos = targetHandlerInfos.slice(0, index + 1);
      recogHandlers = recogHandlers.slice(0, index + 1);

      var intent = new NamedTransitionIntent({
        name: targetHandler,
        contexts: contexts
      });

      var newState = intent.applyToHandlers(testState, recogHandlers, this.getHandler, targetHandler, true, true, this.getSerializer);

      var handlersEqual = handlerInfosEqual(newState.handlerInfos, testState.handlerInfos);
      if (!queryParams || !handlersEqual) {
        return handlersEqual;
      }

      // Get a hash of QPs that will still be active on new route
      var activeQPsOnNewHandler = {};
      merge(activeQPsOnNewHandler, queryParams);

      var activeQueryParams = state.queryParams;
      for (var key in activeQueryParams) {
        if (activeQueryParams.hasOwnProperty(key) && activeQPsOnNewHandler.hasOwnProperty(key)) {
          activeQPsOnNewHandler[key] = activeQueryParams[key];
        }
      }

      return handlersEqual && !getChangelist(activeQPsOnNewHandler, queryParams);
    },

    isActive: function (handlerName) {
      var partitionedArgs = extractQueryParams(slice.call(arguments, 1));
      return this.isActiveIntent(handlerName, partitionedArgs[0], partitionedArgs[1]);
    },

    trigger: function () /*name*/{
      var args = slice.call(arguments);
      trigger(this, this.currentHandlerInfos, false, args);
    },

    /**
      Hook point for logging transition status updates.
       @param {String} message The message to log.
    */
    log: null
  };

  /**
    @private
  
    Fires queryParamsDidChange event
  */
  function fireQueryParamDidChange(router, newState, queryParamChangelist) {
    // If queryParams changed trigger event
    if (queryParamChangelist) {

      // This is a little hacky but we need some way of storing
      // changed query params given that no activeTransition
      // is guaranteed to have occurred.
      router._changedQueryParams = queryParamChangelist.all;
      trigger(router, newState.handlerInfos, true, ['queryParamsDidChange', queryParamChangelist.changed, queryParamChangelist.all, queryParamChangelist.removed]);
      router._changedQueryParams = null;
    }
  }

  /**
    @private
  
    Takes an Array of `HandlerInfo`s, figures out which ones are
    exiting, entering, or changing contexts, and calls the
    proper handler hooks.
  
    For example, consider the following tree of handlers. Each handler is
    followed by the URL segment it handles.
  
    ```
    |~index ("/")
    | |~posts ("/posts")
    | | |-showPost ("/:id")
    | | |-newPost ("/new")
    | | |-editPost ("/edit")
    | |~about ("/about/:id")
    ```
  
    Consider the following transitions:
  
    1. A URL transition to `/posts/1`.
       1. Triggers the `*model` callbacks on the
          `index`, `posts`, and `showPost` handlers
       2. Triggers the `enter` callback on the same
       3. Triggers the `setup` callback on the same
    2. A direct transition to `newPost`
       1. Triggers the `exit` callback on `showPost`
       2. Triggers the `enter` callback on `newPost`
       3. Triggers the `setup` callback on `newPost`
    3. A direct transition to `about` with a specified
       context object
       1. Triggers the `exit` callback on `newPost`
          and `posts`
       2. Triggers the `serialize` callback on `about`
       3. Triggers the `enter` callback on `about`
       4. Triggers the `setup` callback on `about`
  
    @param {Router} transition
    @param {TransitionState} newState
  */
  function setupContexts(router, newState, transition) {
    var partition = partitionHandlers(router.state, newState);
    var i, l, handler;

    for (i = 0, l = partition.exited.length; i < l; i++) {
      handler = partition.exited[i].handler;
      delete handler.context;

      callHook(handler, 'reset', true, transition);
      callHook(handler, 'exit', transition);
    }

    var oldState = router.oldState = router.state;
    router.state = newState;
    var currentHandlerInfos = router.currentHandlerInfos = partition.unchanged.slice();

    try {
      for (i = 0, l = partition.reset.length; i < l; i++) {
        handler = partition.reset[i].handler;
        callHook(handler, 'reset', false, transition);
      }

      for (i = 0, l = partition.updatedContext.length; i < l; i++) {
        handlerEnteredOrUpdated(currentHandlerInfos, partition.updatedContext[i], false, transition);
      }

      for (i = 0, l = partition.entered.length; i < l; i++) {
        handlerEnteredOrUpdated(currentHandlerInfos, partition.entered[i], true, transition);
      }
    } catch (e) {
      router.state = oldState;
      router.currentHandlerInfos = oldState.handlerInfos;
      throw e;
    }

    router.state.queryParams = finalizeQueryParamChange(router, currentHandlerInfos, newState.queryParams, transition);
  }

  /**
    @private
  
    Helper method used by setupContexts. Handles errors or redirects
    that may happen in enter/setup.
  */
  function handlerEnteredOrUpdated(currentHandlerInfos, handlerInfo, enter, transition) {
    var handler = handlerInfo.handler,
        context = handlerInfo.context;

    function _handlerEnteredOrUpdated(handler) {
      if (enter) {
        callHook(handler, 'enter', transition);
      }

      if (transition && transition.isAborted) {
        throw new TransitionAbortedError();
      }

      handler.context = context;
      callHook(handler, 'contextDidChange');

      callHook(handler, 'setup', context, transition);
      if (transition && transition.isAborted) {
        throw new TransitionAbortedError();
      }

      currentHandlerInfos.push(handlerInfo);
    }

    // If the handler doesn't exist, it means we haven't resolved the handler promise yet
    if (!handler) {
      handlerInfo.handlerPromise = handlerInfo.handlerPromise.then(_handlerEnteredOrUpdated);
    } else {
      _handlerEnteredOrUpdated(handler);
    }

    return true;
  }

  /**
    @private
  
    This function is called when transitioning from one URL to
    another to determine which handlers are no longer active,
    which handlers are newly active, and which handlers remain
    active but have their context changed.
  
    Take a list of old handlers and new handlers and partition
    them into four buckets:
  
    * unchanged: the handler was active in both the old and
      new URL, and its context remains the same
    * updated context: the handler was active in both the
      old and new URL, but its context changed. The handler's
      `setup` method, if any, will be called with the new
      context.
    * exited: the handler was active in the old URL, but is
      no longer active.
    * entered: the handler was not active in the old URL, but
      is now active.
  
    The PartitionedHandlers structure has four fields:
  
    * `updatedContext`: a list of `HandlerInfo` objects that
      represent handlers that remain active but have a changed
      context
    * `entered`: a list of `HandlerInfo` objects that represent
      handlers that are newly active
    * `exited`: a list of `HandlerInfo` objects that are no
      longer active.
    * `unchanged`: a list of `HanderInfo` objects that remain active.
  
    @param {Array[HandlerInfo]} oldHandlers a list of the handler
      information for the previous URL (or `[]` if this is the
      first handled transition)
    @param {Array[HandlerInfo]} newHandlers a list of the handler
      information for the new URL
  
    @return {Partition}
  */
  function partitionHandlers(oldState, newState) {
    var oldHandlers = oldState.handlerInfos;
    var newHandlers = newState.handlerInfos;

    var handlers = {
      updatedContext: [],
      exited: [],
      entered: [],
      unchanged: [],
      reset: undefined
    };

    var handlerChanged,
        contextChanged = false,
        i,
        l;

    for (i = 0, l = newHandlers.length; i < l; i++) {
      var oldHandler = oldHandlers[i],
          newHandler = newHandlers[i];

      if (!oldHandler || oldHandler.handler !== newHandler.handler) {
        handlerChanged = true;
      }

      if (handlerChanged) {
        handlers.entered.push(newHandler);
        if (oldHandler) {
          handlers.exited.unshift(oldHandler);
        }
      } else if (contextChanged || oldHandler.context !== newHandler.context) {
        contextChanged = true;
        handlers.updatedContext.push(newHandler);
      } else {
        handlers.unchanged.push(oldHandler);
      }
    }

    for (i = newHandlers.length, l = oldHandlers.length; i < l; i++) {
      handlers.exited.unshift(oldHandlers[i]);
    }

    handlers.reset = handlers.updatedContext.slice();
    handlers.reset.reverse();

    return handlers;
  }

  function updateURL(transition, state /*, inputUrl*/) {
    var urlMethod = transition.urlMethod;

    if (!urlMethod) {
      return;
    }

    var router = transition.router,
        handlerInfos = state.handlerInfos,
        handlerName = handlerInfos[handlerInfos.length - 1].name,
        params = {};

    for (var i = handlerInfos.length - 1; i >= 0; --i) {
      var handlerInfo = handlerInfos[i];
      merge(params, handlerInfo.params);
      if (handlerInfo.handler.inaccessibleByURL) {
        urlMethod = null;
      }
    }

    if (urlMethod) {
      params.queryParams = transition._visibleQueryParams || state.queryParams;
      var url = router.recognizer.generate(handlerName, params);

      // transitions during the initial transition must always use replaceURL.
      // When the app boots, you are at a url, e.g. /foo. If some handler
      // redirects to bar as part of the initial transition, you don't want to
      // add a history entry for /foo. If you do, pressing back will immediately
      // hit the redirect again and take you back to /bar, thus killing the back
      // button
      var initial = transition.isCausedByInitialTransition;

      // say you are at / and you click a link to route /foo. In /foo's
      // handler, the transition is aborted using replacewith('/bar').
      // Because the current url is still /, the history entry for / is
      // removed from the history. Clicking back will take you to the page
      // you were on before /, which is often not even the app, thus killing
      // the back button. That's why updateURL is always correct for an
      // aborting transition that's not the initial transition
      var replaceAndNotAborting = urlMethod === 'replace' && !transition.isCausedByAbortingTransition;

      // because calling refresh causes an aborted transition, this needs to be
      // special cased - if the initial transition is a replace transition, the
      // urlMethod should be honored here.
      var isQueryParamsRefreshTransition = transition.queryParamsOnly && urlMethod === 'replace';

      if (initial || replaceAndNotAborting || isQueryParamsRefreshTransition) {
        router.replaceURL(url);
      } else {
        router.updateURL(url);
      }
    }
  }

  /**
    @private
  
    Updates the URL (if necessary) and calls `setupContexts`
    to update the router's array of `currentHandlerInfos`.
   */
  function finalizeTransition(transition, newState) {

    try {
      log(transition.router, transition.sequence, "Resolved all models on destination route; finalizing transition.");

      var router = transition.router,
          handlerInfos = newState.handlerInfos;

      // Run all the necessary enter/setup/exit hooks
      setupContexts(router, newState, transition);

      // Check if a redirect occurred in enter/setup
      if (transition.isAborted) {
        // TODO: cleaner way? distinguish b/w targetHandlerInfos?
        router.state.handlerInfos = router.currentHandlerInfos;
        return _rsvp.Promise.reject(logAbort(transition));
      }

      updateURL(transition, newState, transition.intent.url);

      transition.isActive = false;
      router.activeTransition = null;

      trigger(router, router.currentHandlerInfos, true, ['didTransition']);

      if (router.didTransition) {
        router.didTransition(router.currentHandlerInfos);
      }

      log(router, transition.sequence, "TRANSITION COMPLETE.");

      // Resolve with the final handler.
      return handlerInfos[handlerInfos.length - 1].handler;
    } catch (e) {
      if (!(e instanceof TransitionAbortedError)) {
        //var erroneousHandler = handlerInfos.pop();
        var infos = transition.state.handlerInfos;
        transition.trigger(true, 'error', e, transition, infos[infos.length - 1].handler);
        transition.abort();
      }

      throw e;
    }
  }

  /**
    @private
  
    Begins and returns a Transition based on the provided
    arguments. Accepts arguments in the form of both URL
    transitions and named transitions.
  
    @param {Router} router
    @param {Array[Object]} args arguments passed to transitionTo,
      replaceWith, or handleURL
  */
  function doTransition(router, args, isIntermediate) {
    // Normalize blank transitions to root URL transitions.
    var name = args[0] || '/';

    var lastArg = args[args.length - 1];
    var queryParams = {};
    if (lastArg && lastArg.hasOwnProperty('queryParams')) {
      queryParams = pop.call(args).queryParams;
    }

    var intent;
    if (args.length === 0) {

      log(router, "Updating query params");

      // A query param update is really just a transition
      // into the route you're already on.
      var handlerInfos = router.state.handlerInfos;
      intent = new NamedTransitionIntent({
        name: handlerInfos[handlerInfos.length - 1].name,
        contexts: [],
        queryParams: queryParams
      });
    } else if (name.charAt(0) === '/') {

      log(router, "Attempting URL transition to " + name);
      intent = new URLTransitionIntent({ url: name });
    } else {

      log(router, "Attempting transition to " + name);
      intent = new NamedTransitionIntent({
        name: args[0],
        contexts: slice.call(args, 1),
        queryParams: queryParams
      });
    }

    return router.transitionByIntent(intent, isIntermediate);
  }

  function handlerInfosEqual(handlerInfos, otherHandlerInfos) {
    if (handlerInfos.length !== otherHandlerInfos.length) {
      return false;
    }

    for (var i = 0, len = handlerInfos.length; i < len; ++i) {
      if (handlerInfos[i] !== otherHandlerInfos[i]) {
        return false;
      }
    }
    return true;
  }

  function handlerInfosSameExceptQueryParams(handlerInfos, otherHandlerInfos) {
    if (handlerInfos.length !== otherHandlerInfos.length) {
      return false;
    }

    for (var i = 0, len = handlerInfos.length; i < len; ++i) {
      if (handlerInfos[i].name !== otherHandlerInfos[i].name) {
        return false;
      }

      if (!paramsEqual(handlerInfos[i].params, otherHandlerInfos[i].params)) {
        return false;
      }
    }
    return true;
  }

  function paramsEqual(params, otherParams) {
    if (!params && !otherParams) {
      return true;
    } else if (!params && !!otherParams || !!params && !otherParams) {
      // one is falsy but other is not;
      return false;
    }
    var keys = Object.keys(params);
    var otherKeys = Object.keys(otherParams);

    if (keys.length !== otherKeys.length) {
      return false;
    }

    for (var i = 0, len = keys.length; i < len; ++i) {
      var key = keys[i];

      if (params[key] !== otherParams[key]) {
        return false;
      }
    }

    return true;
  }

  function finalizeQueryParamChange(router, resolvedHandlers, newQueryParams, transition) {
    // We fire a finalizeQueryParamChange event which
    // gives the new route hierarchy a chance to tell
    // us which query params it's consuming and what
    // their final values are. If a query param is
    // no longer consumed in the final route hierarchy,
    // its serialized segment will be removed
    // from the URL.

    for (var k in newQueryParams) {
      if (newQueryParams.hasOwnProperty(k) && newQueryParams[k] === null) {
        delete newQueryParams[k];
      }
    }

    var finalQueryParamsArray = [];
    trigger(router, resolvedHandlers, true, ['finalizeQueryParamChange', newQueryParams, finalQueryParamsArray, transition]);

    if (transition) {
      transition._visibleQueryParams = {};
    }

    var finalQueryParams = {};
    for (var i = 0, len = finalQueryParamsArray.length; i < len; ++i) {
      var qp = finalQueryParamsArray[i];
      finalQueryParams[qp.key] = qp.value;
      if (transition && qp.visible !== false) {
        transition._visibleQueryParams[qp.key] = qp.value;
      }
    }
    return finalQueryParams;
  }

  function notifyExistingHandlers(router, newState, newTransition) {
    var oldHandlers = router.state.handlerInfos,
        changing = [],
        leavingIndex = null,
        leaving,
        leavingChecker,
        i,
        oldHandlerLen,
        oldHandler,
        newHandler;

    oldHandlerLen = oldHandlers.length;
    for (i = 0; i < oldHandlerLen; i++) {
      oldHandler = oldHandlers[i];
      newHandler = newState.handlerInfos[i];

      if (!newHandler || oldHandler.name !== newHandler.name) {
        leavingIndex = i;
        break;
      }

      if (!newHandler.isResolved) {
        changing.push(oldHandler);
      }
    }

    if (leavingIndex !== null) {
      leaving = oldHandlers.slice(leavingIndex, oldHandlerLen);
      leavingChecker = function (name) {
        for (var h = 0, len = leaving.length; h < len; h++) {
          if (leaving[h].name === name) {
            return true;
          }
        }
        return false;
      };
    }

    trigger(router, oldHandlers, true, ['willTransition', newTransition]);

    if (router.willTransition) {
      router.willTransition(oldHandlers, newState.handlerInfos, newTransition);
    }
  }

  exports.Transition = Transition;
  exports.default = Router$1;
});
enifed('rsvp', ['exports', 'ember-babel', 'node-module'], function (exports, _emberBabel, _nodeModule) {
  'use strict';

  exports.filter = exports.async = exports.map = exports.reject = exports.resolve = exports.off = exports.on = exports.configure = exports.denodeify = exports.defer = exports.rethrow = exports.hashSettled = exports.hash = exports.race = exports.allSettled = exports.all = exports.EventTarget = exports.Promise = exports.cast = exports.asap = undefined;

  var _rsvp;

  function indexOf(callbacks, callback) {
    for (var i = 0, l = callbacks.length; i < l; i++) {
      if (callbacks[i] === callback) {
        return i;
      }
    }

    return -1;
  }

  function callbacksFor(object) {
    var callbacks = object._promiseCallbacks;

    if (!callbacks) {
      callbacks = object._promiseCallbacks = {};
    }

    return callbacks;
  }

  /**
    @class RSVP.EventTarget
  */
  var EventTarget = {
    mixin: function (object) {
      object['on'] = this['on'];
      object['off'] = this['off'];
      object['trigger'] = this['trigger'];
      object._promiseCallbacks = undefined;
      return object;
    },
    on: function (eventName, callback) {
      if (typeof callback !== 'function') {
        throw new TypeError('Callback must be a function');
      }

      var allCallbacks = callbacksFor(this),
          callbacks = void 0;

      callbacks = allCallbacks[eventName];

      if (!callbacks) {
        callbacks = allCallbacks[eventName] = [];
      }

      if (indexOf(callbacks, callback) === -1) {
        callbacks.push(callback);
      }
    },
    off: function (eventName, callback) {
      var allCallbacks = callbacksFor(this),
          callbacks = void 0,
          index = void 0;

      if (!callback) {
        allCallbacks[eventName] = [];
        return;
      }

      callbacks = allCallbacks[eventName];

      index = indexOf(callbacks, callback);

      if (index !== -1) {
        callbacks.splice(index, 1);
      }
    },
    trigger: function (eventName, options, label) {
      var allCallbacks = callbacksFor(this),
          callbacks = void 0,
          callback = void 0;

      if (callbacks = allCallbacks[eventName]) {
        // Don't cache the callbacks.length since it may grow
        for (var i = 0; i < callbacks.length; i++) {
          callback = callbacks[i];

          callback(options, label);
        }
      }
    }
  };

  var config = {
    instrument: false
  };

  EventTarget['mixin'](config);

  function configure(name, value) {
    if (arguments.length === 2) {
      config[name] = value;
    } else {
      return config[name];
    }
  }

  function objectOrFunction(x) {
    var type = typeof x;
    return x !== null && (type === 'object' || type === 'function');
  }

  function isFunction(x) {
    return typeof x === 'function';
  }

  function isObject(x) {
    return x !== null && typeof x === 'object';
  }

  function isMaybeThenable(x) {
    return x !== null && typeof x === 'object';
  }

  var _isArray = void 0;
  if (Array.isArray) {
    _isArray = Array.isArray;
  } else {
    _isArray = function (x) {
      return Object.prototype.toString.call(x) === '[object Array]';
    };
  }

  var isArray = _isArray;

  // Date.now is not available in browsers < IE9
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility
  var now = Date.now || function () {
    return new Date().getTime();
  };

  var queue = [];

  function scheduleFlush() {
    setTimeout(function () {
      for (var i = 0; i < queue.length; i++) {
        var entry = queue[i];

        var payload = entry.payload;

        payload.guid = payload.key + payload.id;
        payload.childGuid = payload.key + payload.childId;
        if (payload.error) {
          payload.stack = payload.error.stack;
        }

        config['trigger'](entry.name, entry.payload);
      }
      queue.length = 0;
    }, 50);
  }

  function instrument(eventName, promise, child) {
    if (1 === queue.push({
      name: eventName,
      payload: {
        key: promise._guidKey,
        id: promise._id,
        eventName: eventName,
        detail: promise._result,
        childId: child && child._id,
        label: promise._label,
        timeStamp: now(),
        error: config["instrument-with-stack"] ? new Error(promise._label) : null
      } })) {
      scheduleFlush();
    }
  }

  /**
    `RSVP.Promise.resolve` returns a promise that will become resolved with the
    passed `value`. It is shorthand for the following:
  
    ```javascript
    let promise = new RSVP.Promise(function(resolve, reject){
      resolve(1);
    });
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = RSVP.Promise.resolve(1);
  
    promise.then(function(value){
      // value === 1
    });
    ```
  
    @method resolve
    @static
    @param {*} object value that the returned promise will be resolved with
    @param {String} label optional string for identifying the returned promise.
    Useful for tooling.
    @return {Promise} a promise that will become fulfilled with the given
    `value`
  */
  function resolve$1(object, label) {
    /*jshint validthis:true */
    var Constructor = this;

    if (object && typeof object === 'object' && object.constructor === Constructor) {
      return object;
    }

    var promise = new Constructor(noop, label);
    resolve(promise, object);
    return promise;
  }

  function withOwnPromise() {
    return new TypeError('A promises callback cannot return that same promise.');
  }

  function noop() {}

  var PENDING = void 0;
  var FULFILLED = 1;
  var REJECTED = 2;

  var GET_THEN_ERROR = new ErrorObject();

  function getThen(promise) {
    try {
      return promise.then;
    } catch (error) {
      GET_THEN_ERROR.error = error;
      return GET_THEN_ERROR;
    }
  }

  function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
    try {
      then$$1.call(value, fulfillmentHandler, rejectionHandler);
    } catch (e) {
      return e;
    }
  }

  function handleForeignThenable(promise, thenable, then$$1) {
    config.async(function (promise) {
      var sealed = false;
      var error = tryThen(then$$1, thenable, function (value) {
        if (sealed) {
          return;
        }
        sealed = true;
        if (thenable !== value) {
          resolve(promise, value, undefined);
        } else {
          fulfill(promise, value);
        }
      }, function (reason) {
        if (sealed) {
          return;
        }
        sealed = true;

        reject(promise, reason);
      }, 'Settle: ' + (promise._label || ' unknown promise'));

      if (!sealed && error) {
        sealed = true;
        reject(promise, error);
      }
    }, promise);
  }

  function handleOwnThenable(promise, thenable) {
    if (thenable._state === FULFILLED) {
      fulfill(promise, thenable._result);
    } else if (thenable._state === REJECTED) {
      thenable._onError = null;
      reject(promise, thenable._result);
    } else {
      subscribe(thenable, undefined, function (value) {
        if (thenable !== value) {
          resolve(promise, value, undefined);
        } else {
          fulfill(promise, value);
        }
      }, function (reason) {
        return reject(promise, reason);
      });
    }
  }

  function handleMaybeThenable(promise, maybeThenable, then$$1) {
    var isOwnThenable = maybeThenable.constructor === promise.constructor && then$$1 === then && promise.constructor.resolve === resolve$1;

    if (isOwnThenable) {
      handleOwnThenable(promise, maybeThenable);
    } else if (then$$1 === GET_THEN_ERROR) {
      reject(promise, GET_THEN_ERROR.error);
      GET_THEN_ERROR.error = null;
    } else if (isFunction(then$$1)) {
      handleForeignThenable(promise, maybeThenable, then$$1);
    } else {
      fulfill(promise, maybeThenable);
    }
  }

  function resolve(promise, value) {
    if (promise === value) {
      fulfill(promise, value);
    } else if (objectOrFunction(value)) {
      handleMaybeThenable(promise, value, getThen(value));
    } else {
      fulfill(promise, value);
    }
  }

  function publishRejection(promise) {
    if (promise._onError) {
      promise._onError(promise._result);
    }

    publish(promise);
  }

  function fulfill(promise, value) {
    if (promise._state !== PENDING) {
      return;
    }

    promise._result = value;
    promise._state = FULFILLED;

    if (promise._subscribers.length === 0) {
      if (config.instrument) {
        instrument('fulfilled', promise);
      }
    } else {
      config.async(publish, promise);
    }
  }

  function reject(promise, reason) {
    if (promise._state !== PENDING) {
      return;
    }
    promise._state = REJECTED;
    promise._result = reason;
    config.async(publishRejection, promise);
  }

  function subscribe(parent, child, onFulfillment, onRejection) {
    var subscribers = parent._subscribers;
    var length = subscribers.length;

    parent._onError = null;

    subscribers[length] = child;
    subscribers[length + FULFILLED] = onFulfillment;
    subscribers[length + REJECTED] = onRejection;

    if (length === 0 && parent._state) {
      config.async(publish, parent);
    }
  }

  function publish(promise) {
    var subscribers = promise._subscribers;
    var settled = promise._state;

    if (config.instrument) {
      instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);
    }

    if (subscribers.length === 0) {
      return;
    }

    var child = void 0,
        callback = void 0,
        result = promise._result;

    for (var i = 0; i < subscribers.length; i += 3) {
      child = subscribers[i];
      callback = subscribers[i + settled];

      if (child) {
        invokeCallback(settled, child, callback, result);
      } else {
        callback(result);
      }
    }

    promise._subscribers.length = 0;
  }

  function ErrorObject() {
    this.error = null;
  }

  var TRY_CATCH_ERROR = new ErrorObject();

  function tryCatch(callback, result) {
    try {
      return callback(result);
    } catch (e) {
      TRY_CATCH_ERROR.error = e;
      return TRY_CATCH_ERROR;
    }
  }

  function invokeCallback(state, promise, callback, result) {
    var hasCallback = isFunction(callback);
    var value = void 0,
        error = void 0;

    if (hasCallback) {
      value = tryCatch(callback, result);

      if (value === TRY_CATCH_ERROR) {
        error = value.error;
        value.error = null; // release
      } else if (value === promise) {
        reject(promise, withOwnPromise());
        return;
      }
    } else {
      value = result;
    }

    if (promise._state !== PENDING) {
      // noop
    } else if (hasCallback && error === undefined) {
      resolve(promise, value);
    } else if (error !== undefined) {
      reject(promise, error);
    } else if (state === FULFILLED) {
      fulfill(promise, value);
    } else if (state === REJECTED) {
      reject(promise, value);
    }
  }

  function initializePromise(promise, resolver) {
    var resolved = false;
    try {
      resolver(function (value) {
        if (resolved) {
          return;
        }
        resolved = true;
        resolve(promise, value);
      }, function (reason) {
        if (resolved) {
          return;
        }
        resolved = true;
        reject(promise, reason);
      });
    } catch (e) {
      reject(promise, e);
    }
  }

  function then(onFulfillment, onRejection, label) {
    var parent = this;
    var state = parent._state;

    if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {
      config.instrument && instrument('chained', parent, parent);
      return parent;
    }

    parent._onError = null;

    var child = new parent.constructor(noop, label);
    var result = parent._result;

    config.instrument && instrument('chained', parent, child);

    if (state === PENDING) {
      subscribe(parent, child, onFulfillment, onRejection);
    } else {
      var callback = state === FULFILLED ? onFulfillment : onRejection;
      config.async(function () {
        return invokeCallback(state, child, callback, result);
      });
    }

    return child;
  }

  function Enumerator(Constructor, input, abortOnReject, label) {
    this._instanceConstructor = Constructor;
    this.promise = new Constructor(noop, label);
    this._abortOnReject = abortOnReject;

    this._init.apply(this, arguments);
  }

  Enumerator.prototype._init = function (Constructor, input) {
    var len = input.length || 0;
    this.length = len;
    this._remaining = len;
    this._result = new Array(len);

    this._enumerate(input);
    if (this._remaining === 0) {
      fulfill(this.promise, this._result);
    }
  };

  Enumerator.prototype._enumerate = function (input) {
    var length = this.length;
    var promise = this.promise;

    for (var i = 0; promise._state === PENDING && i < length; i++) {
      this._eachEntry(input[i], i);
    }
  };

  Enumerator.prototype._settleMaybeThenable = function (entry, i) {
    var c = this._instanceConstructor;
    var resolve$$1 = c.resolve;

    if (resolve$$1 === resolve$1) {
      var then$$1 = getThen(entry);

      if (then$$1 === then && entry._state !== PENDING) {
        entry._onError = null;
        this._settledAt(entry._state, i, entry._result);
      } else if (typeof then$$1 !== 'function') {
        this._remaining--;
        this._result[i] = this._makeResult(FULFILLED, i, entry);
      } else if (c === Promise) {
        var promise = new c(noop);
        handleMaybeThenable(promise, entry, then$$1);
        this._willSettleAt(promise, i);
      } else {
        this._willSettleAt(new c(function (resolve$$1) {
          return resolve$$1(entry);
        }), i);
      }
    } else {
      this._willSettleAt(resolve$$1(entry), i);
    }
  };

  Enumerator.prototype._eachEntry = function (entry, i) {
    if (isMaybeThenable(entry)) {
      this._settleMaybeThenable(entry, i);
    } else {
      this._remaining--;
      this._result[i] = this._makeResult(FULFILLED, i, entry);
    }
  };

  Enumerator.prototype._settledAt = function (state, i, value) {
    var promise = this.promise;

    if (promise._state === PENDING) {
      if (this._abortOnReject && state === REJECTED) {
        reject(promise, value);
      } else {
        this._remaining--;
        this._result[i] = this._makeResult(state, i, value);
        if (this._remaining === 0) {
          fulfill(promise, this._result);
        }
      }
    }
  };

  Enumerator.prototype._makeResult = function (state, i, value) {
    return value;
  };

  Enumerator.prototype._willSettleAt = function (promise, i) {
    var enumerator = this;

    subscribe(promise, undefined, function (value) {
      return enumerator._settledAt(FULFILLED, i, value);
    }, function (reason) {
      return enumerator._settledAt(REJECTED, i, reason);
    });
  };

  function makeSettledResult(state, position, value) {
    if (state === FULFILLED) {
      return {
        state: 'fulfilled',
        value: value
      };
    } else {
      return {
        state: 'rejected',
        reason: value
      };
    }
  }

  /**
    `RSVP.Promise.all` accepts an array of promises, and returns a new promise which
    is fulfilled with an array of fulfillment values for the passed promises, or
    rejected with the reason of the first passed promise to be rejected. It casts all
    elements of the passed iterable to promises as it runs this algorithm.
  
    Example:
  
    ```javascript
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.resolve(2);
    let promise3 = RSVP.resolve(3);
    let promises = [ promise1, promise2, promise3 ];
  
    RSVP.Promise.all(promises).then(function(array){
      // The array here would be [ 1, 2, 3 ];
    });
    ```
  
    If any of the `promises` given to `RSVP.all` are rejected, the first promise
    that is rejected will be given as an argument to the returned promises's
    rejection handler. For example:
  
    Example:
  
    ```javascript
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.reject(new Error("2"));
    let promise3 = RSVP.reject(new Error("3"));
    let promises = [ promise1, promise2, promise3 ];
  
    RSVP.Promise.all(promises).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(error) {
      // error.message === "2"
    });
    ```
  
    @method all
    @static
    @param {Array} entries array of promises
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when all `promises` have been
    fulfilled, or rejected if any of them become rejected.
    @static
  */
  function all(entries, label) {
    if (!isArray(entries)) {
      return this.reject(new TypeError("Promise.all must be called with an array"), label);
    }
    return new Enumerator(this, entries, true /* abort on reject */, label).promise;
  }

  /**
    `RSVP.Promise.race` returns a new promise which is settled in the same way as the
    first passed promise to settle.
  
    Example:
  
    ```javascript
    let promise1 = new RSVP.Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new RSVP.Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 2');
      }, 100);
    });
  
    RSVP.Promise.race([promise1, promise2]).then(function(result){
      // result === 'promise 2' because it was resolved before promise1
      // was resolved.
    });
    ```
  
    `RSVP.Promise.race` is deterministic in that only the state of the first
    settled promise matters. For example, even if other promises given to the
    `promises` array argument are resolved, but the first settled promise has
    become rejected before the other promises became fulfilled, the returned
    promise will become rejected:
  
    ```javascript
    let promise1 = new RSVP.Promise(function(resolve, reject){
      setTimeout(function(){
        resolve('promise 1');
      }, 200);
    });
  
    let promise2 = new RSVP.Promise(function(resolve, reject){
      setTimeout(function(){
        reject(new Error('promise 2'));
      }, 100);
    });
  
    RSVP.Promise.race([promise1, promise2]).then(function(result){
      // Code here never runs
    }, function(reason){
      // reason.message === 'promise 2' because promise 2 became rejected before
      // promise 1 became fulfilled
    });
    ```
  
    An example real-world use case is implementing timeouts:
  
    ```javascript
    RSVP.Promise.race([ajax('foo.json'), timeout(5000)])
    ```
  
    @method race
    @static
    @param {Array} entries array of promises to observe
    @param {String} label optional string for describing the promise returned.
    Useful for tooling.
    @return {Promise} a promise which settles in the same way as the first passed
    promise to settle.
  */
  function race(entries, label) {
    /*jshint validthis:true */
    var Constructor = this;

    var promise = new Constructor(noop, label);

    if (!isArray(entries)) {
      reject(promise, new TypeError('Promise.race must be called with an array'));
      return promise;
    }

    for (var i = 0; promise._state === PENDING && i < entries.length; i++) {
      subscribe(Constructor.resolve(entries[i]), undefined, function (value) {
        return resolve(promise, value);
      }, function (reason) {
        return reject(promise, reason);
      });
    }

    return promise;
  }

  /**
    `RSVP.Promise.reject` returns a promise rejected with the passed `reason`.
    It is shorthand for the following:
  
    ```javascript
    let promise = new RSVP.Promise(function(resolve, reject){
      reject(new Error('WHOOPS'));
    });
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    Instead of writing the above, your code now simply becomes the following:
  
    ```javascript
    let promise = RSVP.Promise.reject(new Error('WHOOPS'));
  
    promise.then(function(value){
      // Code here doesn't run because the promise is rejected!
    }, function(reason){
      // reason.message === 'WHOOPS'
    });
    ```
  
    @method reject
    @static
    @param {*} reason value that the returned promise will be rejected with.
    @param {String} label optional string for identifying the returned promise.
    Useful for tooling.
    @return {Promise} a promise rejected with the given `reason`.
  */
  function reject$1(reason, label) {
    /*jshint validthis:true */
    var Constructor = this;
    var promise = new Constructor(noop, label);
    reject(promise, reason);
    return promise;
  }

  var guidKey = 'rsvp_' + now() + '-';
  var counter = 0;

  function needsResolver() {
    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
  }

  function needsNew() {
    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
  }

  /**
    Promise objects represent the eventual result of an asynchronous operation. The
    primary way of interacting with a promise is through its `then` method, which
    registers callbacks to receive either a promise’s eventual value or the reason
    why the promise cannot be fulfilled.
  
    Terminology
    -----------
  
    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
    - `thenable` is an object or function that defines a `then` method.
    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
    - `exception` is a value that is thrown using the throw statement.
    - `reason` is a value that indicates why a promise was rejected.
    - `settled` the final resting state of a promise, fulfilled or rejected.
  
    A promise can be in one of three states: pending, fulfilled, or rejected.
  
    Promises that are fulfilled have a fulfillment value and are in the fulfilled
    state.  Promises that are rejected have a rejection reason and are in the
    rejected state.  A fulfillment value is never a thenable.
  
    Promises can also be said to *resolve* a value.  If this value is also a
    promise, then the original promise's settled state will match the value's
    settled state.  So a promise that *resolves* a promise that rejects will
    itself reject, and a promise that *resolves* a promise that fulfills will
    itself fulfill.
  
  
    Basic Usage:
    ------------
  
    ```js
    let promise = new Promise(function(resolve, reject) {
      // on success
      resolve(value);
  
      // on failure
      reject(reason);
    });
  
    promise.then(function(value) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Advanced Usage:
    ---------------
  
    Promises shine when abstracting away asynchronous interactions such as
    `XMLHttpRequest`s.
  
    ```js
    function getJSON(url) {
      return new Promise(function(resolve, reject){
        let xhr = new XMLHttpRequest();
  
        xhr.open('GET', url);
        xhr.onreadystatechange = handler;
        xhr.responseType = 'json';
        xhr.setRequestHeader('Accept', 'application/json');
        xhr.send();
  
        function handler() {
          if (this.readyState === this.DONE) {
            if (this.status === 200) {
              resolve(this.response);
            } else {
              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
            }
          }
        };
      });
    }
  
    getJSON('/posts.json').then(function(json) {
      // on fulfillment
    }, function(reason) {
      // on rejection
    });
    ```
  
    Unlike callbacks, promises are great composable primitives.
  
    ```js
    Promise.all([
      getJSON('/posts'),
      getJSON('/comments')
    ]).then(function(values){
      values[0] // => postsJSON
      values[1] // => commentsJSON
  
      return values;
    });
    ```
  
    @class RSVP.Promise
    @param {function} resolver
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @constructor
  */
  function Promise(resolver, label) {
    this._id = counter++;
    this._label = label;
    this._state = undefined;
    this._result = undefined;
    this._subscribers = [];

    config.instrument && instrument('created', this);

    if (noop !== resolver) {
      typeof resolver !== 'function' && needsResolver();
      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
    }
  }

  Promise.prototype._onError = function (reason) {
    var _this = this;

    config.after(function () {
      if (_this._onError) {
        config.trigger('error', reason, _this._label);
      }
    });
  };

  /**
    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
    as the catch block of a try/catch statement.
  
    ```js
    function findAuthor(){
      throw new Error('couldn\'t find that author');
    }
  
    // synchronous
    try {
      findAuthor();
    } catch(reason) {
      // something went wrong
    }
  
    // async with promises
    findAuthor().catch(function(reason){
      // something went wrong
    });
    ```
  
    @method catch
    @param {Function} onRejection
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise}
  */
  Promise.prototype.catch = function (onRejection, label) {
    return this.then(undefined, onRejection, label);
  };

  /**
    `finally` will be invoked regardless of the promise's fate just as native
    try/catch/finally behaves
  
    Synchronous example:
  
    ```js
    findAuthor() {
      if (Math.random() > 0.5) {
        throw new Error();
      }
      return new Author();
    }
  
    try {
      return findAuthor(); // succeed or fail
    } catch(error) {
      return findOtherAuthor();
    } finally {
      // always runs
      // doesn't affect the return value
    }
    ```
  
    Asynchronous example:
  
    ```js
    findAuthor().catch(function(reason){
      return findOtherAuthor();
    }).finally(function(){
      // author was either found, or not
    });
    ```
  
    @method finally
    @param {Function} callback
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise}
  */
  Promise.prototype.finally = function (callback, label) {
    var promise = this;
    var constructor = promise.constructor;

    return promise.then(function (value) {
      return constructor.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return constructor.resolve(callback()).then(function () {
        throw reason;
      });
    }, label);
  };

  Promise.cast = resolve$1; // deprecated
  Promise.all = all;
  Promise.race = race;
  Promise.resolve = resolve$1;
  Promise.reject = reject$1;

  Promise.prototype._guidKey = guidKey;

  /**
    The primary way of interacting with a promise is through its `then` method,
    which registers callbacks to receive either a promise's eventual value or the
    reason why the promise cannot be fulfilled.
  
    ```js
    findUser().then(function(user){
      // user is available
    }, function(reason){
      // user is unavailable, and you are given the reason why
    });
    ```
  
    Chaining
    --------
  
    The return value of `then` is itself a promise.  This second, 'downstream'
    promise is resolved with the return value of the first promise's fulfillment
    or rejection handler, or rejected if the handler throws an exception.
  
    ```js
    findUser().then(function (user) {
      return user.name;
    }, function (reason) {
      return 'default name';
    }).then(function (userName) {
      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
      // will be `'default name'`
    });
  
    findUser().then(function (user) {
      throw new Error('Found user, but still unhappy');
    }, function (reason) {
      throw new Error('`findUser` rejected and we\'re unhappy');
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
      // If `findUser` rejected, `reason` will be '`findUser` rejected and we\'re unhappy'.
    });
    ```
    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
  
    ```js
    findUser().then(function (user) {
      throw new PedagogicalException('Upstream error');
    }).then(function (value) {
      // never reached
    }).then(function (value) {
      // never reached
    }, function (reason) {
      // The `PedgagocialException` is propagated all the way down to here
    });
    ```
  
    Assimilation
    ------------
  
    Sometimes the value you want to propagate to a downstream promise can only be
    retrieved asynchronously. This can be achieved by returning a promise in the
    fulfillment or rejection handler. The downstream promise will then be pending
    until the returned promise is settled. This is called *assimilation*.
  
    ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // The user's comments are now available
    });
    ```
  
    If the assimliated promise rejects, then the downstream promise will also reject.
  
    ```js
    findUser().then(function (user) {
      return findCommentsByAuthor(user);
    }).then(function (comments) {
      // If `findCommentsByAuthor` fulfills, we'll have the value here
    }, function (reason) {
      // If `findCommentsByAuthor` rejects, we'll have the reason here
    });
    ```
  
    Simple Example
    --------------
  
    Synchronous Example
  
    ```javascript
    let result;
  
    try {
      result = findResult();
      // success
    } catch(reason) {
      // failure
    }
    ```
  
    Errback Example
  
    ```js
    findResult(function(result, err){
      if (err) {
        // failure
      } else {
        // success
      }
    });
    ```
  
    Promise Example;
  
    ```javascript
    findResult().then(function(result){
      // success
    }, function(reason){
      // failure
    });
    ```
  
    Advanced Example
    --------------
  
    Synchronous Example
  
    ```javascript
    let author, books;
  
    try {
      author = findAuthor();
      books  = findBooksByAuthor(author);
      // success
    } catch(reason) {
      // failure
    }
    ```
  
    Errback Example
  
    ```js
  
    function foundBooks(books) {
  
    }
  
    function failure(reason) {
  
    }
  
    findAuthor(function(author, err){
      if (err) {
        failure(err);
        // failure
      } else {
        try {
          findBoooksByAuthor(author, function(books, err) {
            if (err) {
              failure(err);
            } else {
              try {
                foundBooks(books);
              } catch(reason) {
                failure(reason);
              }
            }
          });
        } catch(error) {
          failure(err);
        }
        // success
      }
    });
    ```
  
    Promise Example;
  
    ```javascript
    findAuthor().
      then(findBooksByAuthor).
      then(function(books){
        // found books
    }).catch(function(reason){
      // something went wrong
    });
    ```
  
    @method then
    @param {Function} onFulfillment
    @param {Function} onRejection
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise}
  */
  Promise.prototype.then = then;

  function Result() {
    this.value = undefined;
  }

  var ERROR = new Result();
  var GET_THEN_ERROR$1 = new Result();

  function getThen$1(obj) {
    try {
      return obj.then;
    } catch (error) {
      ERROR.value = error;
      return ERROR;
    }
  }

  function tryApply(f, s, a) {
    try {
      f.apply(s, a);
    } catch (error) {
      ERROR.value = error;
      return ERROR;
    }
  }

  function makeObject(_, argumentNames) {
    var obj = {};
    var length = _.length;
    var args = new Array(length);

    for (var x = 0; x < length; x++) {
      args[x] = _[x];
    }

    for (var i = 0; i < argumentNames.length; i++) {
      var name = argumentNames[i];
      obj[name] = args[i + 1];
    }

    return obj;
  }

  function arrayResult(_) {
    var length = _.length;
    var args = new Array(length - 1);

    for (var i = 1; i < length; i++) {
      args[i - 1] = _[i];
    }

    return args;
  }

  function wrapThenable(then, promise) {
    return {
      then: function (onFulFillment, onRejection) {
        return then.call(promise, onFulFillment, onRejection);
      }
    };
  }

  /**
    `RSVP.denodeify` takes a 'node-style' function and returns a function that
    will return an `RSVP.Promise`. You can use `denodeify` in Node.js or the
    browser when you'd prefer to use promises over using callbacks. For example,
    `denodeify` transforms the following:
  
    ```javascript
    let fs = require('fs');
  
    fs.readFile('myfile.txt', function(err, data){
      if (err) return handleError(err);
      handleData(data);
    });
    ```
  
    into:
  
    ```javascript
    let fs = require('fs');
    let readFile = RSVP.denodeify(fs.readFile);
  
    readFile('myfile.txt').then(handleData, handleError);
    ```
  
    If the node function has multiple success parameters, then `denodeify`
    just returns the first one:
  
    ```javascript
    let request = RSVP.denodeify(require('request'));
  
    request('http://example.com').then(function(res) {
      // ...
    });
    ```
  
    However, if you need all success parameters, setting `denodeify`'s
    second parameter to `true` causes it to return all success parameters
    as an array:
  
    ```javascript
    let request = RSVP.denodeify(require('request'), true);
  
    request('http://example.com').then(function(result) {
      // result[0] -> res
      // result[1] -> body
    });
    ```
  
    Or if you pass it an array with names it returns the parameters as a hash:
  
    ```javascript
    let request = RSVP.denodeify(require('request'), ['res', 'body']);
  
    request('http://example.com').then(function(result) {
      // result.res
      // result.body
    });
    ```
  
    Sometimes you need to retain the `this`:
  
    ```javascript
    let app = require('express')();
    let render = RSVP.denodeify(app.render.bind(app));
    ```
  
    The denodified function inherits from the original function. It works in all
    environments, except IE 10 and below. Consequently all properties of the original
    function are available to you. However, any properties you change on the
    denodeified function won't be changed on the original function. Example:
  
    ```javascript
    let request = RSVP.denodeify(require('request')),
        cookieJar = request.jar(); // <- Inheritance is used here
  
    request('http://example.com', {jar: cookieJar}).then(function(res) {
      // cookieJar.cookies holds now the cookies returned by example.com
    });
    ```
  
    Using `denodeify` makes it easier to compose asynchronous operations instead
    of using callbacks. For example, instead of:
  
    ```javascript
    let fs = require('fs');
  
    fs.readFile('myfile.txt', function(err, data){
      if (err) { ... } // Handle error
      fs.writeFile('myfile2.txt', data, function(err){
        if (err) { ... } // Handle error
        console.log('done')
      });
    });
    ```
  
    you can chain the operations together using `then` from the returned promise:
  
    ```javascript
    let fs = require('fs');
    let readFile = RSVP.denodeify(fs.readFile);
    let writeFile = RSVP.denodeify(fs.writeFile);
  
    readFile('myfile.txt').then(function(data){
      return writeFile('myfile2.txt', data);
    }).then(function(){
      console.log('done')
    }).catch(function(error){
      // Handle error
    });
    ```
  
    @method denodeify
    @static
    @for RSVP
    @param {Function} nodeFunc a 'node-style' function that takes a callback as
    its last argument. The callback expects an error to be passed as its first
    argument (if an error occurred, otherwise null), and the value from the
    operation as its second argument ('function(err, value){ }').
    @param {Boolean|Array} [options] An optional paramter that if set
    to `true` causes the promise to fulfill with the callback's success arguments
    as an array. This is useful if the node function has multiple success
    paramters. If you set this paramter to an array with names, the promise will
    fulfill with a hash with these names as keys and the success parameters as
    values.
    @return {Function} a function that wraps `nodeFunc` to return an
    `RSVP.Promise`
    @static
  */
  function denodeify(nodeFunc, options) {
    var fn = function () {
      var self = this;
      var l = arguments.length;
      var args = new Array(l + 1);
      var promiseInput = false;

      for (var i = 0; i < l; ++i) {
        var arg = arguments[i];

        if (!promiseInput) {
          // TODO: clean this up
          promiseInput = needsPromiseInput(arg);
          if (promiseInput === GET_THEN_ERROR$1) {
            var p = new Promise(noop);
            reject(p, GET_THEN_ERROR$1.value);
            return p;
          } else if (promiseInput && promiseInput !== true) {
            arg = wrapThenable(promiseInput, arg);
          }
        }
        args[i] = arg;
      }

      var promise = new Promise(noop);

      args[l] = function (err, val) {
        if (err) reject(promise, err);else if (options === undefined) resolve(promise, val);else if (options === true) resolve(promise, arrayResult(arguments));else if (isArray(options)) resolve(promise, makeObject(arguments, options));else resolve(promise, val);
      };

      if (promiseInput) {
        return handlePromiseInput(promise, args, nodeFunc, self);
      } else {
        return handleValueInput(promise, args, nodeFunc, self);
      }
    };

    (0, _emberBabel.defaults)(fn, nodeFunc);


    return fn;
  }

  function handleValueInput(promise, args, nodeFunc, self) {
    var result = tryApply(nodeFunc, self, args);
    if (result === ERROR) {
      reject(promise, result.value);
    }
    return promise;
  }

  function handlePromiseInput(promise, args, nodeFunc, self) {
    return Promise.all(args).then(function (args) {
      var result = tryApply(nodeFunc, self, args);
      if (result === ERROR) {
        reject(promise, result.value);
      }
      return promise;
    });
  }

  function needsPromiseInput(arg) {
    if (arg && typeof arg === 'object') {
      if (arg.constructor === Promise) {
        return true;
      } else {
        return getThen$1(arg);
      }
    } else {
      return false;
    }
  }

  /**
    This is a convenient alias for `RSVP.Promise.all`.
  
    @method all
    @static
    @for RSVP
    @param {Array} array Array of promises.
    @param {String} label An optional label. This is useful
    for tooling.
  */
  function all$1(array, label) {
    return Promise.all(array, label);
  }

  var AllSettled = function (_Enumerator) {
    (0, _emberBabel.inherits)(AllSettled, _Enumerator);

    function AllSettled(Constructor, entries, label) {
      (0, _emberBabel.classCallCheck)(this, AllSettled);
      return (0, _emberBabel.possibleConstructorReturn)(this, _Enumerator.call(this, Constructor, entries, false /* don't abort on reject */, label));
    }

    return AllSettled;
  }(Enumerator);

  AllSettled.prototype._makeResult = makeSettledResult;

  /**
  `RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing
  a fail-fast method, it waits until all the promises have returned and
  shows you all the results. This is useful if you want to handle multiple
  promises' failure states together as a set.
   Returns a promise that is fulfilled when all the given promises have been
  settled. The return promise is fulfilled with an array of the states of
  the promises passed into the `promises` array argument.
   Each state object will either indicate fulfillment or rejection, and
  provide the corresponding value or reason. The states will take one of
  the following formats:
   ```javascript
  { state: 'fulfilled', value: value }
    or
  { state: 'rejected', reason: reason }
  ```
   Example:
   ```javascript
  let promise1 = RSVP.Promise.resolve(1);
  let promise2 = RSVP.Promise.reject(new Error('2'));
  let promise3 = RSVP.Promise.reject(new Error('3'));
  let promises = [ promise1, promise2, promise3 ];
   RSVP.allSettled(promises).then(function(array){
    // array == [
    //   { state: 'fulfilled', value: 1 },
    //   { state: 'rejected', reason: Error },
    //   { state: 'rejected', reason: Error }
    // ]
    // Note that for the second item, reason.message will be '2', and for the
    // third item, reason.message will be '3'.
  }, function(error) {
    // Not run. (This block would only be called if allSettled had failed,
    // for instance if passed an incorrect argument type.)
  });
  ```
   @method allSettled
  @static
  @for RSVP
  @param {Array} entries
  @param {String} label - optional string that describes the promise.
  Useful for tooling.
  @return {Promise} promise that is fulfilled with an array of the settled
  states of the constituent promises.
  */

  function allSettled(entries, label) {
    if (!isArray(entries)) {
      return Promise.reject(new TypeError("Promise.allSettled must be called with an array"), label);
    }

    return new AllSettled(Promise, entries, label).promise;
  }

  /**
    This is a convenient alias for `RSVP.Promise.race`.
  
    @method race
    @static
    @for RSVP
    @param {Array} array Array of promises.
    @param {String} label An optional label. This is useful
    for tooling.
   */
  function race$1(array, label) {
    return Promise.race(array, label);
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  var PromiseHash = function (_Enumerator2) {
    (0, _emberBabel.inherits)(PromiseHash, _Enumerator2);

    function PromiseHash(Constructor, object) {
      var abortOnReject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var label = arguments[3];
      (0, _emberBabel.classCallCheck)(this, PromiseHash);
      return (0, _emberBabel.possibleConstructorReturn)(this, _Enumerator2.call(this, Constructor, object, abortOnReject, label));
    }

    PromiseHash.prototype._init = function _init(Constructor, object) {
      this._result = {};

      this._enumerate(object);
      if (this._remaining === 0) {
        fulfill(this.promise, this._result);
      }
    };

    PromiseHash.prototype._enumerate = function _enumerate(input) {
      var promise = this.promise;
      var results = [];

      for (var key in input) {
        if (hasOwnProperty.call(input, key)) {
          results.push({
            position: key,
            entry: input[key]
          });
        }
      }

      var length = results.length;
      this._remaining = length;
      var result = void 0;

      for (var i = 0; promise._state === PENDING && i < length; i++) {
        result = results[i];
        this._eachEntry(result.entry, result.position);
      }
    };

    return PromiseHash;
  }(Enumerator);

  /**
    `RSVP.hash` is similar to `RSVP.all`, but takes an object instead of an array
    for its `promises` argument.
  
    Returns a promise that is fulfilled when all the given promises have been
    fulfilled, or rejected if any of them become rejected. The returned promise
    is fulfilled with a hash that has the same key names as the `promises` object
    argument. If any of the values in the object are not promises, they will
    simply be copied over to the fulfilled object.
  
    Example:
  
    ```javascript
    let promises = {
      myPromise: RSVP.resolve(1),
      yourPromise: RSVP.resolve(2),
      theirPromise: RSVP.resolve(3),
      notAPromise: 4
    };
  
    RSVP.hash(promises).then(function(hash){
      // hash here is an object that looks like:
      // {
      //   myPromise: 1,
      //   yourPromise: 2,
      //   theirPromise: 3,
      //   notAPromise: 4
      // }
    });
    ````
  
    If any of the `promises` given to `RSVP.hash` are rejected, the first promise
    that is rejected will be given as the reason to the rejection handler.
  
    Example:
  
    ```javascript
    let promises = {
      myPromise: RSVP.resolve(1),
      rejectedPromise: RSVP.reject(new Error('rejectedPromise')),
      anotherRejectedPromise: RSVP.reject(new Error('anotherRejectedPromise')),
    };
  
    RSVP.hash(promises).then(function(hash){
      // Code here never runs because there are rejected promises!
    }, function(reason) {
      // reason.message === 'rejectedPromise'
    });
    ```
  
    An important note: `RSVP.hash` is intended for plain JavaScript objects that
    are just a set of keys and values. `RSVP.hash` will NOT preserve prototype
    chains.
  
    Example:
  
    ```javascript
    function MyConstructor(){
      this.example = RSVP.resolve('Example');
    }
  
    MyConstructor.prototype = {
      protoProperty: RSVP.resolve('Proto Property')
    };
  
    let myObject = new MyConstructor();
  
    RSVP.hash(myObject).then(function(hash){
      // protoProperty will not be present, instead you will just have an
      // object that looks like:
      // {
      //   example: 'Example'
      // }
      //
      // hash.hasOwnProperty('protoProperty'); // false
      // 'undefined' === typeof hash.protoProperty
    });
    ```
  
    @method hash
    @static
    @for RSVP
    @param {Object} object
    @param {String} label optional string that describes the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when all properties of `promises`
    have been fulfilled, or rejected if any of them become rejected.
  */
  function hash(object, label) {
    if (!isObject(object)) {
      return Promise.reject(new TypeError("Promise.hash must be called with an object"), label);
    }

    return new PromiseHash(Promise, object, label).promise;
  }

  var HashSettled = function (_PromiseHash) {
    (0, _emberBabel.inherits)(HashSettled, _PromiseHash);

    function HashSettled(Constructor, object, label) {
      (0, _emberBabel.classCallCheck)(this, HashSettled);
      return (0, _emberBabel.possibleConstructorReturn)(this, _PromiseHash.call(this, Constructor, object, false, label));
    }

    return HashSettled;
  }(PromiseHash);

  HashSettled.prototype._makeResult = makeSettledResult;

  /**
    `RSVP.hashSettled` is similar to `RSVP.allSettled`, but takes an object
    instead of an array for its `promises` argument.
  
    Unlike `RSVP.all` or `RSVP.hash`, which implement a fail-fast method,
    but like `RSVP.allSettled`, `hashSettled` waits until all the
    constituent promises have returned and then shows you all the results
    with their states and values/reasons. This is useful if you want to
    handle multiple promises' failure states together as a set.
  
    Returns a promise that is fulfilled when all the given promises have been
    settled, or rejected if the passed parameters are invalid.
  
    The returned promise is fulfilled with a hash that has the same key names as
    the `promises` object argument. If any of the values in the object are not
    promises, they will be copied over to the fulfilled object and marked with state
    'fulfilled'.
  
    Example:
  
    ```javascript
    let promises = {
      myPromise: RSVP.Promise.resolve(1),
      yourPromise: RSVP.Promise.resolve(2),
      theirPromise: RSVP.Promise.resolve(3),
      notAPromise: 4
    };
  
    RSVP.hashSettled(promises).then(function(hash){
      // hash here is an object that looks like:
      // {
      //   myPromise: { state: 'fulfilled', value: 1 },
      //   yourPromise: { state: 'fulfilled', value: 2 },
      //   theirPromise: { state: 'fulfilled', value: 3 },
      //   notAPromise: { state: 'fulfilled', value: 4 }
      // }
    });
    ```
  
    If any of the `promises` given to `RSVP.hash` are rejected, the state will
    be set to 'rejected' and the reason for rejection provided.
  
    Example:
  
    ```javascript
    let promises = {
      myPromise: RSVP.Promise.resolve(1),
      rejectedPromise: RSVP.Promise.reject(new Error('rejection')),
      anotherRejectedPromise: RSVP.Promise.reject(new Error('more rejection')),
    };
  
    RSVP.hashSettled(promises).then(function(hash){
      // hash here is an object that looks like:
      // {
      //   myPromise:              { state: 'fulfilled', value: 1 },
      //   rejectedPromise:        { state: 'rejected', reason: Error },
      //   anotherRejectedPromise: { state: 'rejected', reason: Error },
      // }
      // Note that for rejectedPromise, reason.message == 'rejection',
      // and for anotherRejectedPromise, reason.message == 'more rejection'.
    });
    ```
  
    An important note: `RSVP.hashSettled` is intended for plain JavaScript objects that
    are just a set of keys and values. `RSVP.hashSettled` will NOT preserve prototype
    chains.
  
    Example:
  
    ```javascript
    function MyConstructor(){
      this.example = RSVP.Promise.resolve('Example');
    }
  
    MyConstructor.prototype = {
      protoProperty: RSVP.Promise.resolve('Proto Property')
    };
  
    let myObject = new MyConstructor();
  
    RSVP.hashSettled(myObject).then(function(hash){
      // protoProperty will not be present, instead you will just have an
      // object that looks like:
      // {
      //   example: { state: 'fulfilled', value: 'Example' }
      // }
      //
      // hash.hasOwnProperty('protoProperty'); // false
      // 'undefined' === typeof hash.protoProperty
    });
    ```
  
    @method hashSettled
    @for RSVP
    @param {Object} object
    @param {String} label optional string that describes the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled when when all properties of `promises`
    have been settled.
    @static
  */

  function hashSettled(object, label) {
    if (!isObject(object)) {
      return Promise.reject(new TypeError("RSVP.hashSettled must be called with an object"), label);
    }

    return new HashSettled(Promise, object, false, label).promise;
  }

  /**
    `RSVP.rethrow` will rethrow an error on the next turn of the JavaScript event
    loop in order to aid debugging.
  
    Promises A+ specifies that any exceptions that occur with a promise must be
    caught by the promises implementation and bubbled to the last handler. For
    this reason, it is recommended that you always specify a second rejection
    handler function to `then`. However, `RSVP.rethrow` will throw the exception
    outside of the promise, so it bubbles up to your console if in the browser,
    or domain/cause uncaught exception in Node. `rethrow` will also throw the
    error again so the error can be handled by the promise per the spec.
  
    ```javascript
    function throws(){
      throw new Error('Whoops!');
    }
  
    let promise = new RSVP.Promise(function(resolve, reject){
      throws();
    });
  
    promise.catch(RSVP.rethrow).then(function(){
      // Code here doesn't run because the promise became rejected due to an
      // error!
    }, function (err){
      // handle the error here
    });
    ```
  
    The 'Whoops' error will be thrown on the next turn of the event loop
    and you can watch for it in your console. You can also handle it using a
    rejection handler given to `.then` or `.catch` on the returned promise.
  
    @method rethrow
    @static
    @for RSVP
    @param {Error} reason reason the promise became rejected.
    @throws Error
    @static
  */
  function rethrow(reason) {
    setTimeout(function () {
      throw reason;
    });
    throw reason;
  }

  /**
    `RSVP.defer` returns an object similar to jQuery's `$.Deferred`.
    `RSVP.defer` should be used when porting over code reliant on `$.Deferred`'s
    interface. New code should use the `RSVP.Promise` constructor instead.
  
    The object returned from `RSVP.defer` is a plain object with three properties:
  
    * promise - an `RSVP.Promise`.
    * reject - a function that causes the `promise` property on this object to
      become rejected
    * resolve - a function that causes the `promise` property on this object to
      become fulfilled.
  
    Example:
  
     ```javascript
     let deferred = RSVP.defer();
  
     deferred.resolve("Success!");
  
     deferred.promise.then(function(value){
       // value here is "Success!"
     });
     ```
  
    @method defer
    @static
    @for RSVP
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Object}
   */

  function defer(label) {
    var deferred = { resolve: undefined, reject: undefined };

    deferred.promise = new Promise(function (resolve, reject) {
      deferred.resolve = resolve;
      deferred.reject = reject;
    }, label);

    return deferred;
  }

  /**
   `RSVP.map` is similar to JavaScript's native `map` method, except that it
    waits for all promises to become fulfilled before running the `mapFn` on
    each item in given to `promises`. `RSVP.map` returns a promise that will
    become fulfilled with the result of running `mapFn` on the values the promises
    become fulfilled with.
  
    For example:
  
    ```javascript
  
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.resolve(2);
    let promise3 = RSVP.resolve(3);
    let promises = [ promise1, promise2, promise3 ];
  
    let mapFn = function(item){
      return item + 1;
    };
  
    RSVP.map(promises, mapFn).then(function(result){
      // result is [ 2, 3, 4 ]
    });
    ```
  
    If any of the `promises` given to `RSVP.map` are rejected, the first promise
    that is rejected will be given as an argument to the returned promise's
    rejection handler. For example:
  
    ```javascript
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.reject(new Error('2'));
    let promise3 = RSVP.reject(new Error('3'));
    let promises = [ promise1, promise2, promise3 ];
  
    let mapFn = function(item){
      return item + 1;
    };
  
    RSVP.map(promises, mapFn).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(reason) {
      // reason.message === '2'
    });
    ```
  
    `RSVP.map` will also wait if a promise is returned from `mapFn`. For example,
    say you want to get all comments from a set of blog posts, but you need
    the blog posts first because they contain a url to those comments.
  
    ```javscript
  
    let mapFn = function(blogPost){
      // getComments does some ajax and returns an RSVP.Promise that is fulfilled
      // with some comments data
      return getComments(blogPost.comments_url);
    };
  
    // getBlogPosts does some ajax and returns an RSVP.Promise that is fulfilled
    // with some blog post data
    RSVP.map(getBlogPosts(), mapFn).then(function(comments){
      // comments is the result of asking the server for the comments
      // of all blog posts returned from getBlogPosts()
    });
    ```
  
    @method map
    @static
    @for RSVP
    @param {Array} promises
    @param {Function} mapFn function to be called on each fulfilled promise.
    @param {String} label optional string for labeling the promise.
    Useful for tooling.
    @return {Promise} promise that is fulfilled with the result of calling
    `mapFn` on each fulfilled promise or value when they become fulfilled.
     The promise will be rejected if any of the given `promises` become rejected.
    @static
  */
  function map(promises, mapFn, label) {
    if (!isArray(promises)) {
      return Promise.reject(new TypeError("RSVP.map must be called with an array"), label);
    }

    if (!isFunction(mapFn)) {
      return Promise.reject(new TypeError("RSVP.map expects a function as a second argument"), label);
    }

    return Promise.all(promises, label).then(function (values) {
      var length = values.length;
      var results = new Array(length);

      for (var i = 0; i < length; i++) {
        results[i] = mapFn(values[i]);
      }

      return Promise.all(results, label);
    });
  }

  /**
    This is a convenient alias for `RSVP.Promise.resolve`.
  
    @method resolve
    @static
    @for RSVP
    @param {*} value value that the returned promise will be resolved with
    @param {String} label optional string for identifying the returned promise.
    Useful for tooling.
    @return {Promise} a promise that will become fulfilled with the given
    `value`
  */
  function resolve$2(value, label) {
    return Promise.resolve(value, label);
  }

  /**
    This is a convenient alias for `RSVP.Promise.reject`.
  
    @method reject
    @static
    @for RSVP
    @param {*} reason value that the returned promise will be rejected with.
    @param {String} label optional string for identifying the returned promise.
    Useful for tooling.
    @return {Promise} a promise rejected with the given `reason`.
  */
  function reject$2(reason, label) {
    return Promise.reject(reason, label);
  }

  /**
   `RSVP.filter` is similar to JavaScript's native `filter` method, except that it
    waits for all promises to become fulfilled before running the `filterFn` on
    each item in given to `promises`. `RSVP.filter` returns a promise that will
    become fulfilled with the result of running `filterFn` on the values the
    promises become fulfilled with.
  
    For example:
  
    ```javascript
  
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.resolve(2);
    let promise3 = RSVP.resolve(3);
  
    let promises = [promise1, promise2, promise3];
  
    let filterFn = function(item){
      return item > 1;
    };
  
    RSVP.filter(promises, filterFn).then(function(result){
      // result is [ 2, 3 ]
    });
    ```
  
    If any of the `promises` given to `RSVP.filter` are rejected, the first promise
    that is rejected will be given as an argument to the returned promise's
    rejection handler. For example:
  
    ```javascript
    let promise1 = RSVP.resolve(1);
    let promise2 = RSVP.reject(new Error('2'));
    let promise3 = RSVP.reject(new Error('3'));
    let promises = [ promise1, promise2, promise3 ];
  
    let filterFn = function(item){
      return item > 1;
    };
  
    RSVP.filter(promises, filterFn).then(function(array){
      // Code here never runs because there are rejected promises!
    }, function(reason) {
      // reason.message === '2'
    });
    ```
  
    `RSVP.filter` will also wait for any promises returned from `filterFn`.
    For instance, you may want to fetch a list of users then return a subset
    of those users based on some asynchronous operation:
  
    ```javascript
  
    let alice = { name: 'alice' };
    let bob   = { name: 'bob' };
    let users = [ alice, bob ];
  
    let promises = users.map(function(user){
      return RSVP.resolve(user);
    });
  
    let filterFn = function(user){
      // Here, Alice has permissions to create a blog post, but Bob does not.
      return getPrivilegesForUser(user).then(function(privs){
        return privs.can_create_blog_post === true;
      });
    };
    RSVP.filter(promises, filterFn).then(function(users){
      // true, because the server told us only Alice can create a blog post.
      users.length === 1;
      // false, because Alice is the only user present in `users`
      users[0] === bob;
    });
    ```
  
    @method filter
    @static
    @for RSVP
    @param {Array} promises
    @param {Function} filterFn - function to be called on each resolved value to
    filter the final results.
    @param {String} label optional string describing the promise. Useful for
    tooling.
    @return {Promise}
  */

  function resolveAll(promises, label) {
    return Promise.all(promises, label);
  }

  function resolveSingle(promise, label) {
    return Promise.resolve(promise, label).then(function (promises) {
      return resolveAll(promises, label);
    });
  }

  function filter(promises, filterFn, label) {
    if (!isArray(promises) && !(isObject(promises) && promises.then !== undefined)) {
      return Promise.reject(new TypeError("RSVP.filter must be called with an array or promise"), label);
    }

    if (!isFunction(filterFn)) {
      return Promise.reject(new TypeError("RSVP.filter expects function as a second argument"), label);
    }

    var promise = isArray(promises) ? resolveAll(promises, label) : resolveSingle(promises, label);
    return promise.then(function (values) {
      var length = values.length;
      var filtered = new Array(length);

      for (var i = 0; i < length; i++) {
        filtered[i] = filterFn(values[i]);
      }

      return resolveAll(filtered, label).then(function (filtered) {
        var results = new Array(length);
        var newLength = 0;

        for (var _i = 0; _i < length; _i++) {
          if (filtered[_i]) {
            results[newLength] = values[_i];
            newLength++;
          }
        }

        results.length = newLength;

        return results;
      });
    });
  }

  var len = 0;
  var vertxNext = void 0;
  function asap(callback, arg) {
    queue$1[len] = callback;
    queue$1[len + 1] = arg;
    len += 2;
    if (len === 2) {
      // If len is 1, that means that we need to schedule an async flush.
      // If additional callbacks are queued before the queue is flushed, they
      // will be processed by this flush that we are scheduling.
      scheduleFlush$1();
    }
  }

  var browserWindow = typeof window !== 'undefined' ? window : undefined;
  var browserGlobal = browserWindow || {};
  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

  // test for web worker but not in IE10
  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';

  // node
  function useNextTick() {
    var nextTick = process.nextTick;
    // node version 0.10.x displays a deprecation warning when nextTick is used recursively
    // setImmediate should be used instead instead
    var version = process.versions.node.match(/^(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/);
    if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {
      nextTick = setImmediate;
    }
    return function () {
      return nextTick(flush);
    };
  }

  // vertx
  function useVertxTimer() {
    if (typeof vertxNext !== 'undefined') {
      return function () {
        vertxNext(flush);
      };
    }
    return useSetTimeout();
  }

  function useMutationObserver() {
    var iterations = 0;
    var observer = new BrowserMutationObserver(flush);
    var node = document.createTextNode('');
    observer.observe(node, { characterData: true });

    return function () {
      return node.data = iterations = ++iterations % 2;
    };
  }

  // web worker
  function useMessageChannel() {
    var channel = new MessageChannel();
    channel.port1.onmessage = flush;
    return function () {
      return channel.port2.postMessage(0);
    };
  }

  function useSetTimeout() {
    return function () {
      return setTimeout(flush, 1);
    };
  }

  var queue$1 = new Array(1000);

  function flush() {
    for (var i = 0; i < len; i += 2) {
      var callback = queue$1[i];
      var arg = queue$1[i + 1];

      callback(arg);

      queue$1[i] = undefined;
      queue$1[i + 1] = undefined;
    }

    len = 0;
  }

  function attemptVertex() {
    try {
      var r = _nodeModule.require;
      var vertx = r('vertx');
      vertxNext = vertx.runOnLoop || vertx.runOnContext;
      return useVertxTimer();
    } catch (e) {
      return useSetTimeout();
    }
  }

  var scheduleFlush$1 = void 0;
  // Decide what async method to use to triggering processing of queued callbacks:
  if (isNode) {
    scheduleFlush$1 = useNextTick();
  } else if (BrowserMutationObserver) {
    scheduleFlush$1 = useMutationObserver();
  } else if (isWorker) {
    scheduleFlush$1 = useMessageChannel();
  } else if (browserWindow === undefined && typeof _nodeModule.require === 'function') {
    scheduleFlush$1 = attemptVertex();
  } else {
    scheduleFlush$1 = useSetTimeout();
  }

  var platform = void 0;

  /* global self */
  if (typeof self === 'object') {
    platform = self;

    /* global global */
  } else if (typeof global === 'object') {
    platform = global;
  } else {
    throw new Error('no global: `self` or `global` found');
  }

  // defaults
  config.async = asap;
  config.after = function (cb) {
    return setTimeout(cb, 0);
  };
  var cast = resolve$2;

  var async = function (callback, arg) {
    return config.async(callback, arg);
  };

  function on() {
    config['on'].apply(config, arguments);
  }

  function off() {
    config['off'].apply(config, arguments);
  }

  // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`
  if (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {
    var callbacks = window['__PROMISE_INSTRUMENTATION__'];
    configure('instrument', true);
    for (var eventName in callbacks) {
      if (callbacks.hasOwnProperty(eventName)) {
        on(eventName, callbacks[eventName]);
      }
    }
  }

  // the default export here is for backwards compat:
  //   https://github.com/tildeio/rsvp.js/issues/434
  var rsvp = (_rsvp = {
    asap: asap,
    cast: cast,
    Promise: Promise,
    EventTarget: EventTarget,
    all: all$1,
    allSettled: allSettled,
    race: race$1,
    hash: hash,
    hashSettled: hashSettled,
    rethrow: rethrow,
    defer: defer,
    denodeify: denodeify,
    configure: configure,
    on: on,
    off: off,
    resolve: resolve$2,
    reject: reject$2,
    map: map
  }, _rsvp['async'] = async, _rsvp.filter = filter, _rsvp);

  exports.asap = asap;
  exports.cast = cast;
  exports.Promise = Promise;
  exports.EventTarget = EventTarget;
  exports.all = all$1;
  exports.allSettled = allSettled;
  exports.race = race$1;
  exports.hash = hash;
  exports.hashSettled = hashSettled;
  exports.rethrow = rethrow;
  exports.defer = defer;
  exports.denodeify = denodeify;
  exports.configure = configure;
  exports.on = on;
  exports.off = off;
  exports.resolve = resolve$2;
  exports.reject = reject$2;
  exports.map = map;
  exports.async = async;
  exports.filter = filter;
  exports.default = rsvp;
});
requireModule('ember')

}());

;(function() {
/* globals define, Ember, jQuery */

  function processEmberShims() {
    var shims = {
      'ember': {
        'default': Ember
      },
      'ember-application': {
        'default': Ember.Application
      },
      'ember-array': {
        'default': Ember.Array
      },
      'ember-array/mutable': {
        'default': Ember.MutableArray
      },
      'ember-array/utils': {
        'A':            Ember.A,
        'isEmberArray': Ember.isArray,
        'wrap':         Ember.makeArray
      },
      'ember-component': {
        'default': Ember.Component
      },
      'ember-components/checkbox': {
        'default': Ember.Checkbox
      },
      'ember-components/text-area': {
        'default': Ember.TextArea
      },
      'ember-components/text-field': {
        'default': Ember.TextField
      },
      'ember-controller': {
        'default': Ember.Controller
      },
      'ember-controller/inject': {
        'default': Ember.inject.controller
      },
      'ember-controller/proxy': {
        'default': Ember.ArrayProxy
      },
      'ember-controllers/sortable': {
        'default': Ember.SortableMixin
      },
      'ember-debug': {
        'log':      Ember.debug,
        'inspect':  Ember.inspect,
        'run':      Ember.runInDebug,
        'warn':     Ember.warn
      },
      'ember-debug/container-debug-adapter': {
        'default': Ember.ContainerDebugAdapter
      },
      'ember-debug/data-adapter': {
        'default': Ember.DataAdapter
      },
      'ember-deprecations': {
        'deprecate':      Ember.deprecate,
        'deprecateFunc':  Ember.deprecateFunc
      },
      'ember-enumerable': {
        'default': Ember.Enumerable
      },
      'ember-evented': {
        'default': Ember.Evented
      },
      'ember-evented/on': {
        'default': Ember.on
      },
      'ember-globals-resolver': {
        'default': Ember.DefaultResolver
      },
      'ember-helper': {
        'default':  Ember.Helper,
        'helper':   Ember.Helper && Ember.Helper.helper
      },
      'ember-instrumentation': {
        'instrument':   Ember.Instrumentation.instrument,
        'reset':        Ember.Instrumentation.reset,
        'subscribe':    Ember.Instrumentation.subscribe,
        'unsubscribe':  Ember.Instrumentation.unsubscribe
      },
      'ember-locations/hash': {
        'default': Ember.HashLocation
      },
      'ember-locations/history': {
        'default': Ember.HistoryLocation
      },
      'ember-locations/none': {
        'default': Ember.NoneLocation
      },
      'ember-map': {
        'default':      Ember.Map,
        'withDefault':  Ember.MapWithDefault
      },
      'ember-metal/destroy': {
        'default': Ember.destroy
      },
      'ember-metal/events': {
        'addListener':    Ember.addListener,
        'removeListener': Ember.removeListener,
        'send':           Ember.sendEvent
      },
      'ember-metal/get': {
        'default': Ember.get,
        'getProperties': Ember.getProperties
      },
      'ember-metal/mixin': {
        'default': Ember.Mixin
      },
      'ember-metal/observer': {
        'default':        Ember.observer,
        'addObserver':    Ember.addObserver,
        'removeObserver': Ember.removeObserver
      },
      'ember-metal/on-load': {
        'default':  Ember.onLoad,
        'run':      Ember.runLoadHooks
      },
      'ember-metal/set': {
        'default':        Ember.set,
        'setProperties':  Ember.setProperties,
        'trySet':         Ember.trySet
      },
      'ember-metal/utils': {
        'aliasMethod':  Ember.aliasMethod,
        'assert':       Ember.assert,
        'cacheFor':     Ember.cacheFor,
        'copy':         Ember.copy,
        'guidFor':      Ember.guidFor
      },
      'ember-object': {
        'default': Ember.Object
      },
      'ember-owner/get': {
        'default': Ember.getOwner
      },
      'ember-owner/set': {
        'default': Ember.setOwner
      },
      'ember-platform': {
        'assign':         Ember.assign || Ember.merge,
        'create':         Ember.create,
        'defineProperty': Ember.platform.defineProperty,
        'hasAccessors':   Ember.platform.hasPropertyAccessors,
        'keys':           Ember.keys
      },
      'ember-route': {
        'default': Ember.Route
      },
      'ember-router': {
        'default': Ember.Router
      },
      'ember-runloop': {
        'default':      Ember.run,
        'begin':        Ember.run.begin,
        'bind':         Ember.run.bind,
        'cancel':       Ember.run.cancel,
        'debounce':     Ember.run.debounce,
        'end':          Ember.run.end,
        'join':         Ember.run.join,
        'later':        Ember.run.later,
        'next':         Ember.run.next,
        'once':         Ember.run.once,
        'schedule':     Ember.run.schedule,
        'scheduleOnce': Ember.run.scheduleOnce,
        'throttle':     Ember.run.throttle
      },
      'ember-service': {
        'default': Ember.Service
      },
      'ember-service/inject': {
        'default': Ember.inject.service
      },
      'ember-set/ordered': {
        'default': Ember.OrderedSet
      },
      'ember-string': {
        'camelize':     Ember.String.camelize,
        'capitalize':   Ember.String.capitalize,
        'classify':     Ember.String.classify,
        'dasherize':    Ember.String.dasherize,
        'decamelize':   Ember.String.decamelize,
        'fmt':          Ember.String.fmt,
        'htmlSafe':     Ember.String.htmlSafe,
        'loc':          Ember.String.loc,
        'underscore':   Ember.String.underscore,
        'w':            Ember.String.w
      },
      'ember-utils': {
        'isBlank':    Ember.isBlank,
        'isEmpty':    Ember.isEmpty,
        'isNone':     Ember.isNone,
        'isPresent':  Ember.isPresent,
        'tryInvoke':  Ember.tryInvoke,
        'typeOf':     Ember.typeOf
      }
    };

    // populate `ember/computed` named exports
    shims['ember-computed'] = {
      'default': Ember.computed
    };
    var computedMacros = [
      "empty","notEmpty", "none", "not", "bool", "match",
      "equal", "gt", "gte", "lt", "lte", "alias", "oneWay",
      "reads", "readOnly", "deprecatingAlias",
      "and", "or", "collect", "sum", "min", "max",
      "map", "sort", "setDiff", "mapBy", "mapProperty",
      "filter", "filterBy", "filterProperty", "uniq",
      "union", "intersect"
    ];
    for (var i = 0, l = computedMacros.length; i < l; i++) {
      var key = computedMacros[i];
      shims['ember-computed'][key] = Ember.computed[key];
    }

    for (var moduleName in shims) {
      generateModule(moduleName, shims[moduleName]);
    }
  }

  function processTestShims() {
    if (Ember.Test) {
      var testShims = {
        'ember-test': {
          'default': Ember.Test
        },
        'ember-test/adapter': {
          'default': Ember.Test.Adapter
        },
        'ember-test/qunit-adapter': {
          'default': Ember.Test.QUnitAdapter
        }
      };

      for (var moduleName in testShims) {
        generateModule(moduleName, testShims[moduleName]);
      }
    }
  }

  function generateModule(name, values) {
    define(name, [], function() {
      'use strict';

      Object.defineProperty(values, '__esModule', {
        value: true
      });

      return values;
    });
  }

  processEmberShims();
  processTestShims();
  generateModule('jquery', { 'default': self.jQuery });
  generateModule('rsvp', { 'default': Ember.RSVP });
})();

;/* globals define */

function createDeprecatedModule(moduleId) {
  define(moduleId, ['exports', 'ember-resolver/resolver', 'ember'], function(exports, Resolver, Ember) {
    Ember['default'].deprecate(
      'Usage of `' + moduleId + '` module is deprecated, please update to `ember-resolver`.',
      false,
      { id: 'ember-resolver.legacy-shims', until: '3.0.0' }
    );

    exports['default'] = Resolver['default'];
  });
}

createDeprecatedModule('ember/resolver');
createDeprecatedModule('resolver');

;/*
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.2
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.2
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>
 FusionCharts JavaScript Library - KDtree
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>

 @version 3.12.2
*/
(function(Ab,Rb){"object"===typeof module&&module.exports?module.exports=Ab.document?Rb(Ab):function(Q){if(!Q.document)throw Error("Window with document not present");return Rb(Q,!0)}:Ab.FusionCharts=Rb(Ab,!0)})("undefined"!==typeof window?window:this,function(Ab,Rb){"undefined"===typeof Ab&&"object"===typeof window&&(Ab=window);var Q=function(b){if(b.FusionCharts&&b.FusionCharts.version)return b.FusionCharts;var v=b.document,J=b.navigator,C={window:b},H=C.modules={},A=C.interpreters={},u=Object.prototype.toString,
a=/msie/i.test(J.userAgent)&&!b.opera,O=/loaded|complete/,q=!1,M=function(){var a=C.ready;C.ready=!0;C.raiseEvent&&(C.readyNotified=!0,C.raiseEvent("ready",{version:C.core.version,now:!a},C.core));C.readyNow=!a},U=function(a,b){var r,k;if(b instanceof Array)for(r=0;r<b.length;r+=1)"object"!==typeof b[r]?a[r]=b[r]:("object"!==typeof a[r]&&(a[r]=b[r]instanceof Array?[]:{}),U(a[r],b[r]));else for(r in b)"object"===typeof b[r]?(k=u.call(b[r]),"[object Object]"===k?("object"!==typeof a[r]&&(a[r]={}),U(a[r],
b[r])):"[object Array]"===k?(a[r]instanceof Array||(a[r]=[]),U(a[r],b[r])):a[r]=b[r]):a[r]=b[r];return a};C.extend=function(a,b,r,k){var m;r&&a.prototype&&(a=a.prototype);if(!0===k)U(a,b);else for(m in b)a[m]=b[m];return a};C.uniqueId=function(){return"chartobject-"+(C.uniqueId.lastId+=1)};C.uniqueId.lastId=0;C.policies={options:{chartTypeSourcePath:["typeSourcePath",""],product:["product","v3"],insertMode:["insertMode","replace"],safeMode:["safeMode",!0],overlayButton:["overlayButton",void 0],containerBackgroundColor:["containerBackgroundColor",
"#ffffff"],containerBackgroundOpacity:["containerBackgroundOpacity",1],containerClassName:["containerClassName","fusioncharts-container"],chartType:["type",void 0],baseChartMessageFont:["baseChartMessageFont","Verdana,sans"],baseChartMessageFontSize:["baseChartMessageFontSize","10"],baseChartMessageColor:["baseChartMessageColor","#666666"],baseChartMessageImageHAlign:["baseChartMessageImageHAlign","middle"],baseChartMessageImageVAlign:["baseChartMessageImageVAlign","middle"],baseChartMessageImageAlpha:["baseChartMessageImageAlpha",
100],baseChartMessageImageScale:["baseChartMessageImageScale",100],dataLoadStartMessage:["dataLoadStartMessage","Retrieving data. Please wait."],dataLoadErrorMessage:["dataLoadErrorMessage","Error in loading data."],dataInvalidMessage:["dataInvalidMessage","Invalid data."],dataEmptyMessage:["dataEmptyMessage","No data to display."],typeNotSupportedMessage:["typeNotSupportedMessage","Chart type not supported."],browserNotSupportedMessage:["browserNotSupportedMessage","This browser is not supported."],
loadMessage:["loadMessage","Loading chart. Please wait."],renderErrorMessage:["renderErrorMessage","Unable to render chart."]},attributes:{lang:["lang","EN"],id:["id",void 0]},width:["width","400"],height:["height","300"],src:["swfUrl",""]};A.stat="swfUrl id width height debugMode registerWithJS backgroundColor scaleMode lang detectFlashVersion autoInstallRedirect".split(" ");C.parsePolicies=function(a,b,r){var k,m,n;for(m in b)if(C.policies[m]instanceof Array)n=r[b[m][0]],a[m]=void 0===n?b[m][1]:
n;else for(k in"object"!==typeof a[m]&&(a[m]={}),b[m])n=r[b[m][k][0]],a[m][k]=void 0===n?b[m][k][1]:n};C.parseCommands=function(a,b,r){var k,m;"string"===typeof b&&(b=A[b]||[]);k=0;for(m=b.length;k<m;k++)a[b[k]]=r[k];return a};C.registrars={module:function(){return C.core.apply(C.core,arguments)}};C.core=function(a){if(!(this instanceof C.core)){if(1===arguments.length&&a instanceof Array&&"private"===a[0]){if(H[a[1]])return;H[a[1]]={};a[3]instanceof Array&&(C.core.version[a[1]]=a[3]);return"function"===
typeof a[2]?a[2].call(C,H[a[1]]):C}if(1===arguments.length&&"string"===typeof a)return C.core.items[a];C.raiseError&&C.raiseError(this,"25081840","run","",new SyntaxError('Use the "new" keyword while creating a new FusionCharts object'))}var b={};this.__state={};1===arguments.length&&"object"===typeof arguments[0]?b=arguments[0]:C.parseCommands(b,A.stat,arguments);1<arguments.length&&"object"===typeof arguments[arguments.length-1]&&(delete b[A.stat[arguments.length-1]],C.extend(b,arguments[arguments.length-
1]));this.id="undefined"===typeof b.id?this.id=C.uniqueId():b.id;this.args=b;C.core.items[this.id]instanceof C.core&&C.raiseWarning(this,"06091847","param","",Error('A FusionCharts object with the specified id "'+this.id+'" already exists. Renaming it to '+(this.id=C.uniqueId())));C.parsePolicies(this,C.policies,b);this.attributes.id=this.id;this.resizeTo&&this.resizeTo(b.width,b.height,!0);this.chartType&&this.chartType(b.type||b.swfUrl,!0);C.raiseEvent("beforeInitialize",b,this);C.core.items[this.id]=
this;C.core.defaultOptions=C.core.options;C.raiseEvent("initialized",b,this);return this};C.core.prototype={};C.core.prototype.constructor=C.core;C.extend(C.core,{id:"FusionCharts",version:["3","12","2"],items:{},options:{},getObjectReference:function(a){return C.core.items[a].ref},register:function(a){return C.registrars[a=a&&a.toString&&a.toString().toLowerCase()]&&C.registrars[a].apply(C.core,Array.prototype.slice.call(arguments,1))},get:function(a){return C.registrars[a=a&&a.toString&&a.toString().toLowerCase()]&&
C.registrars[a].apply(C.core,Array.prototype.slice.call(arguments,1))}});b.FusionCharts=C.core;b.FusionMaps&&b.FusionMaps.legacy&&(C.core(["private","modules.core.geo",b.FusionMaps.legacy,b.FusionMaps.version]),q=!0);O.test(v.readyState)||v.loaded?(C.ready=!0,setTimeout(M,1)):function(){function N(){m||(m=!0,r&&clearTimeout(r),q||(b.FusionMaps&&b.FusionMaps.legacy&&C.core(["private","modules.core.geo",b.FusionMaps.legacy,b.FusionMaps.version]),b.FusionMaps=C.core),setTimeout(M,1))}function E(){O.test(v.readyState)?
N():r=setTimeout(E,10)}var r,k,m;v.addEventListener?v.addEventListener("DOMContentLoaded",N,!1):v.attachEvent&&b.attachEvent("onLoad",N);if(a)try{"https:"===b.location.protocol?v.write('<script id="__ie_onload_fusioncharts" defer="defer" src="//:">\x3c/script>'):v.write('<script id="__ie_onload_fusioncharts" defer="defer" src="javascript:void(0)">\x3c/script>'),k=v.getElementById("__ie_onload_fusioncharts"),k.onreadystatechange=function(){"complete"==this.readyState&&N()}}catch(n){}/WebKit/i.test(J.userAgent)&&
(r=setTimeout(E,10));b.onload=function(a){return function(){N();a&&a.call&&a.call(b)}}(b.onload)}();return b.FusionMaps=C.core}(Ab);Q.register("module",["private","modules.mantle.errormanager",function(){var b=this,v=b.window,J={type:"TypeException",range:"ValueRangeException",impl:"NotImplementedException",param:"ParameterException",run:"RuntimeException",comp:"DesignTimeError",undefined:"UnspecifiedException"},C=function(A,u,a,O,q,M){var C="#"+u+" "+(A?A.id:"unknown-source")+O+" "+M+" >> ";q instanceof
Error?(q.name=J[a],q.module="FusionCharts"+O,q.level=M,q.message=C+q.message,C=q.message,v.setTimeout(function(){throw q;},0)):C+=q;u={id:u,nature:J[a],source:"FusionCharts"+O,message:C};b.raiseEvent(M,u,A);if("function"===typeof v["FC_"+M])v["FC_"+M](u)},H;b.raiseError=function(b,u,a,O,q){C(b,u,a,O,q,"Error")};b.raiseWarning=function(b,u,a,O,q){C(b,u,a,O,q,"Warning")};H={outputHelpers:{text:function(b,u){H.outputTo("#"+b.eventId+" ["+(b.sender.id||b.sender).toString()+'] fired "'+b.eventType+'" event. '+
("error"===b.eventType||"warning"===b.eventType?u.message:""))},event:function(b,u){this.outputTo(b,u)},verbose:function(b,u){H.outputTo(b.eventId,b.sender.id,b.eventType,u)}},outputHandler:function(A,u){"function"!==typeof H.outputTo?b.core["debugger"].outputFailed=!0:(b.core["debugger"].outputFailed=!1,H.currentOutputHelper(A,u))},currentOutputHelper:void 0,outputTo:void 0,enabled:!1};H.currentOutputHelper=H.outputHelpers.text;b.extend(b.core,{"debugger":{syncStateWithCharts:!0,outputFormat:function(b){return b&&
"function"===typeof b.toLowerCase&&"function"===typeof H.outputHelpers[b=b.toLowerCase()]?(H.currentOutputHelper=H.outputHelpers[b],!0):!1},outputTo:function(v){"function"===typeof v?H.outputTo=v:null===v&&(b.core["debugger"].enable(!1),delete H.outputTo)},enable:function(v,u,a){var O;"object"===typeof v&&1===arguments.length&&(O=v,v=O.state,u=O.outputTo,a=O.outputFormat);"function"===typeof v&&("string"!==typeof u||2!==arguments.length&&!O||(a=u),u=v,v=!0);if("boolean"===typeof v&&v!==H.enabled)b.core[(H.enabled=
v)?"addEventListener":"removeEventListener"]("*",H.outputHandler);"function"===typeof u&&(H.outputTo=u);b.core["debugger"].outputFormat(a);return H.enabled},enableFirebugLite:function(){var A;v.console&&v.console.firebug?b.core["debugger"].enable(v.console.log,"verbose"):((A=v.document.getElementsByTagName("html"))&&A[0].setAttribute("debug","true"),b.loadScript("https://getfirebug.com/firebug-lite.js#overrideConsole=false,startOpened=true",function(){b.core["debugger"].enable(v.console.log,"verbose")},
"{ startOpened: true }",!0,!0))}},debugMode:{enabled:function(){v.setTimeout(function(){throw Error("Deprecated! Please use FusionCharts.debugger.enable instead.");},0);return b.core["debugger"].enable.apply(b.core["debugger"],arguments)}}},!1)}]);Q.register("module",["private","modules.renderer.js-schedular",function(){var b=this.core,v=[],J={},C=[],H={},A=0,u=this.window,a=b.schedular={},O=u.requestAnimationFrame||u.webkitRequestAnimationFrame||u.mozRequestAnimationFrame||u.oRequestAnimationFrame||
u.msRequestAnimationFrame||function(a){setTimeout(a,16)},q=function(){var a=(new Date).getTime(),b,N,E;do{a:{b=E;E=N;for(var r=void 0,k=!1,m=void 0,n=void 0;!k;)if(r=v[0]){m=r.fullFrameJob;if(b&&E&&m){b=!1;break a}v.splice(0,1);--C[r.priority];H[r.jobID]&&!r.executed&&(n=k=!0,!b&&0<v.length&&O(q),r.job(),r.executed=!0,delete H[r.jobID])}else k=!0;b={jobFound:n,fullFrameJob:m}}E=!0;N=N||b.fullFrameJob}while(b.jobFound&&15>(new Date).getTime()-a)};a.addJob=function(a,b,N,E){var r,k=0;E=E?b-1:b;"function"===
typeof a&&(r="JOB"+ ++A+(b||1),a={job:a,priority:b,fullFrameJob:N,jobID:r});for(N=0;N<=E;N++)k+=C[N]||0;v.splice(k,0,a);H[r]=a;C[b]=(C[b]||0)+1;1===v.length&&O(q);return r};a.removeJob=function(a){H[a]&&delete H[a]};a.pauseExecution=function(a){if(H[a])J[H[a]]=H[a],delete H[a];else return!1};a.resumeExecution=function(b){var q=J[b];if(q)a.addJob(q),delete J[b];else return!1};b.priorityList={render:1,animation:2,entitydraw:2,label:3,tracker:4,kdTree:4,postRender:5,chartClick:2,chartEvents:1}}]);Q.register("module",
["private","modules.mantle.eventmanager",function(){var b=this,v=b.window,J=b.core,C=J.priorityList,H=J.schedular,A=Object.prototype.toString,u=A.call([]),a=function(a,b,k,m){try{a[0].call(b,k,m||{})}catch(n){setTimeout(function(){throw n;},0)}},O=function(q,r,k){if(q instanceof Array)for(var m=0,n;m<q.length;m+=1){if(q[m][1]===r.sender||void 0===q[m][1])n=q[m][1]===r.sender?r.sender:b.core,a(q[m],n,r,k),!0===r.detached&&(q.splice(m,1),--m,r.detached=!1);if(!0===r.cancelled)break}},q={unpropagator:function(){return!1===
(this.cancelled=!0)},detacher:function(){return!1===(this.detached=!0)},undefaulter:function(){return!1===(this.prevented=!0)},listeners:{},lastEventId:0,addListener:function(a,r,k){var m,n;if(A.call(a)===u){m=[];for(n=0;n<a.length;n+=1)m.push(q.addListener(a[n],r,k));return m}if("string"!==typeof a)b.raiseError(k||b.core,"03091549","param","::EventTarget.addListener",Error("Unspecified Event Type"));else if("function"!==typeof r)b.raiseError(k||b.core,"03091550","param","::EventTarget.addListener",
Error("Invalid Event Listener"));else return a=a.toLowerCase(),q.listeners[a]instanceof Array||(q.listeners[a]=[]),q.listeners[a].push([r,k]),r},removeListener:function(a,r,k){var m;if("function"!==typeof r)b.raiseError(k||b.core,"03091560","param","::EventTarget.removeListener",Error("Invalid Event Listener"));else if(a instanceof Array)for(m=0;m<a.length;m+=1)q.removeListener(a[m],r,k);else if("string"!==typeof a)b.raiseError(k||b.core,"03091559","param","::EventTarget.removeListener",Error("Unspecified Event Type"));
else if(a=a.toLowerCase(),a=q.listeners[a],a instanceof Array)for(m=0;m<a.length;m+=1)a[m][0]===r&&a[m][1]===k&&(a.splice(m,1),--m)},triggerEvent:function(a,r,k,m,n,L){if("string"!==typeof a)b.raiseError(r,"03091602","param","::EventTarget.dispatchEvent",Error("Invalid Event Type"));else{a=a.toLowerCase();var g={eventType:a,eventId:q.lastEventId+=1,sender:r||Error("Orphan Event"),cancelled:!1,stopPropagation:this.unpropagator,prevented:!1,preventDefault:this.undefaulter,detached:!1,detachHandler:this.detacher};
O(q.listeners[a],g,k);O(q.listeners["*"],g,k);switch(g.prevented){case !0:if("function"===typeof L)try{L.call(m||r||v,g,k||{})}catch(l){setTimeout(function(){throw l;},0)}break;default:if("function"===typeof n)try{n.call(m||r||v,g,k||{})}catch(l){setTimeout(function(){throw l;},0)}}return!0}}},M=b.raiseEvent=function(a,b,k,m,n,L){return q.triggerEvent(a,k,b,m,n,L)},U=b.legacyEventList={},N={};b.disposeEvents=function(a){var b,k;for(b in q.listeners)for(k=0;k<q.listeners[b].length;k+=1)q.listeners[b][k][1]===
a&&q.listeners[b].splice(k,1)};b.raiseEventWithLegacy=function(a,b,k,m,n,L,g){var l=U[a];M(a,b,k,n,L,g);l&&"function"===typeof v[l]&&H.addJob(function(){v[l].apply(n||v,m)},C.chartEvents)};b.raiseEventGroup=function(a,b,k,m,n,L,g){var l=m.id,B=a+l;N[B]?(clearTimeout(N[B]),delete N[B]):l&&B?N[B]=H.addJob(function(){M(b,k,m,n,L,g);delete N[B]},C.chartEvents):M(b,k,m,n,L,g)};b.addEventListener=function(a,b){return q.addListener(a,b)};b.removeEventListener=function(a,b){return q.removeListener(a,b)};
b.extend(J,{addEventListener:function(a,b){return q.addListener(a,b)},removeEventListener:function(a,b){return q.removeListener(a,b)},ready:function(a,r,k){b.ready?(J.ready=function(a,n){"function"===typeof a&&setTimeout(function(){a.call(n||J,r||J)},0)},J.ready(a,k)):"function"===typeof a&&J.addEventListener("ready",function(){J.ready(a,r,k)});return this}});J.on=J.addEventListener;b.extend(J.prototype,{addEventListener:function(a,b){return q.addListener(a,b,this)},removeEventListener:function(a,
b){return q.removeListener(a,b,this)}});J.prototype.on=J.prototype.addEventListener;b.policies.options.events=["events",{}];b.addEventListener("beforeInitialize",function(a){a=a.sender;var b=a.options.events,k;if(b)for(k in b)"function"===typeof b[k]&&a.addEventListener(k,b[k])});b.ready&&!b.readyNotified&&(b.readyNotified=!0,b.raiseEvent("ready",{version:b.core.version,now:b.readyNow},b.core))}]);Q.register("module",["private","modules.mantle.ajax",function(){var b=this,v=b.window,J=parseFloat(v.navigator.appVersion.split("MSIE")[1]),
C=5.5<=J&&7>=J?!0:!1,H=/mozilla/i.test(v.navigator.userAgent),A="file:"===v.location.protocol,u=v.ActiveXObject,a=(!u||!A)&&v.XMLHttpRequest,O={objects:0,xhr:0,requests:0,success:0,failure:0,idle:0},q=function(){var b;if(a)return q=function(){O.xhr++;return new a},q();try{b=new u("Msxml2.XMLHTTP"),q=function(){O.xhr++;return new u("Msxml2.XMLHTTP")}}catch(v){try{b=new u("Microsoft.XMLHTTP"),q=function(){O.xhr++;return new u("Microsoft.XMLHTTP")}}catch(N){b=!1}}return b};b.core.ajax={stats:function(a){return a?
O[a]:b.extend({},O)},headers:{"If-Modified-Since":"Sat, 29 Oct 1994 19:43:31 GMT","X-Requested-With":"XMLHttpRequest","X-Requested-By":"FusionCharts",Accept:"text/plain, */*","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}};J=b.ajax=function(a,b){this.onSuccess=a;this.onError=b;this.open=!1;O.objects++;O.idle++};b.extend(J.prototype,{headers:b.core.ajax.headers,transact:function(a,u,N,E){var r=this,k=r.xmlhttp,m=r.headers,n=r.onError,L=r.onSuccess;a="POST"===a;var g,l=Object.prototype.hasOwnProperty,
B;-1!==u.search(/^(http:\/\/|https:\/\/)/)&&v.location.hostname!==/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(u)[2]?delete m["X-Requested-By"]:!l.call(m,"X-Requested-By")&&(m["X-Requested-By"]="FusionCharts");if(!k||C||H)k=q(),r.xmlhttp=k;k.onreadystatechange=function(){try{4===k.readyState&&(!k.status&&A||200<=k.status&&300>k.status||304===k.status||1223===k.status||0===k.status?(L&&L(k.responseText,r,E,u),O.success++):n&&(n(Error("XmlHttprequest Error"),r,E,u),O.failure++),O.idle--,r.open=!1)}catch(a){n&&
n(a,r,E,u),v.FC_DEV_ENVIRONMENT&&setTimeout(function(){throw a;},0),O.failure++}};try{k.open(a?"POST":"GET",u,!0);k.overrideMimeType&&k.overrideMimeType("text/plain");if(a)if("string"===typeof N)g=N;else{g=[];for(B in N)g.push(B+"="+(N[B]+"").replace(/\=/g,"%3D").replace(/\&/g,"%26"));g=g.join("&")}else g=null;for(B in m)k.setRequestHeader(B,m[B]);k.send(g);O.requests++;O.idle++;r.open=!0}catch(e){b.raiseError(b.core,"1110111515A","run","XmlHttprequest Error",e.message)}return k},get:function(a,b){return this.transact("GET",
a,void 0,b)},post:function(a,b,q){return this.transact("POST",a,b,q)},abort:function(){var a=this.xmlhttp;this.open=!1;return a&&"function"===typeof a.abort&&a.readyState&&0!==a.readyState&&a.abort()},dispose:function(){this.open&&this.abort();delete this.onError;delete this.onSuccess;delete this.xmlhttp;delete this.open;O.objects--;return null}})}]);Q.register("module",["private","modules.mantle.runtime;1.1",function(){var b=this,v=b.window,J=/(^|[\/\\])(fusioncharts\.js)([\?#].*)?$/ig,C=/[\\\"<>;&]/,
H=/^[^\S]*?(sf|f|ht)(tp|tps):\/\//i,A={},u={},a={},O={},q=b.purgeDOM=function(a){var b=a.attributes,r,k;if(b)for(r=b.length-1;0<=r;--r)k=b[r].name,"function"===typeof a[k]&&(a[k]=null);if(b=a.childNodes)for(b=b.length,r=0;r<b;r+=1)q(a.childNodes[r])},M=function(a,b,r){var k,m;for(k in a)if(a[k]instanceof Array)b[a[k][0]]=r[k];else for(m in a[k])b[a[k][m][0]]=r[k][m]},U=/^(FusionCharts|FusionWidgets|FusionMaps)/;b.getScriptBaseUri=function(a){var b=v.document.getElementsByTagName("script"),r=b.length,
k,m;for(m=0;m<r;m+=1)if(k=b[m].getAttribute("src"),void 0!==k&&null!==k&&null!==k.match(a))return k.replace(a,"$1")};b.core.options.scriptBaseUri=function(){var a=b.getScriptBaseUri(J);return void 0===a?(b.raiseError(Q,"1603111624","run",">GenericRuntime~scriptBaseUri","Unable to locate FusionCharts script source location (URL)."),""):a}();b.isXSSSafe=function(a,b){return b&&null!==H.exec(a)?!1:null===C.exec(a)};b.xssEncode=function(a){return null===a||void 0===a||"function"!==typeof a.toString?"":
a=a.toString().replace(/&/g,"&amp;").replace(/\'/g,"&#39;").replace(/\"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;")};b.loadScript=function(q,E,r,k,m){if(!q)return!1;var n=E&&E.success||E,L=E&&E.failure,g,l=b.hcLib,B=l.priorityList,e=l.schedular.addJob,V={type:"script",success:!1},p=function(){O[g]=clearTimeout(O[g]);V.success?n&&n(q,g):L&&L(q,g);b.raiseEvent("externalresourceload",V,b.core)};m=m?"":b.core.options.scriptBaseUri;g=m+q;b.isXSSSafe(g,!1)||(g="function"===typeof v.encodeURIComponent?
v.encodeURIComponent(g):v.escape(g));V.path=m;V.src=g;V.file=q;if(!0===a[g]&&k)return V.success=!0,V.notReloaded=!0,"function"===typeof E&&(E(),b.raiseEvent("externalresourceload",V,b.core)),!0;if(A[g]&&k)return!1;A[g]=!0;u[g]&&u[g].parentNode&&u[g].parentNode.removeChild(u[g]);E=u[g]=v.document.createElement("script");E.type="text/javascript";E.src=g;r&&(E["\v"==="v"?"text":"innerHTML"]=r);"function"===typeof n&&(a[g]=!1,O[g]=clearTimeout(O[g]),E.onload=function(){a[g]=!0;V.success=!0;e(p,B.render)},
E.onerror=function(){a[g]=!1;A[g]=!1;e(p,B.render)},E.onreadystatechange=function(){if("complete"===this.readyState||"loaded"===this.readyState)a[g]=!0,V.success=!0,e(p,B.render)});v.document.getElementsByTagName("head")[0].appendChild(E);"function"===typeof L&&(O[g]=setTimeout(function(){a[g]||p()},b.core.options.html5ResourceLoadTimeout||15E3));return!0};b.capitalizeString=function(a,b){return a?a.replace(b?/(^|\s)([a-z])/g:/(^|\s)([a-z])/,function(a,k,b){return k+b.toUpperCase()}):a};b.extend(b.core,
{clone:function(a,q){var r=typeof a,k,m=b.extend({},this.args,!1,!1);M(b.policies,m,this);M(b.renderer.getRendererPolicy(this.options.renderer),m,this);delete m.id;delete m.animate;delete m.stallLoad;k=m.link;m=b.extend({},m,!1,!1);m.link=k;switch(r){case "object":b.extend(m,a);break;case "boolean":q=a}return q?m:new b.core(m)},isActive:function(){if(!this.ref||v.document.getElementById(this.id)!==this.ref)return!1;try{return U.test(this.ref.signature())}catch(a){return!1}},chartType:function(a,q){var r=
this.src,k=!0===q,m=this.options,n;"string"===typeof a&&(q="object"===typeof q?q:{},r=a.replace(/[\?\#][\s\S]*$/g,""),n=null!==r.match(/\.swf\s*?$/ig),r=r.replace(/\.swf\s*?$/ig,""),m.chartType=r.replace(/^[\s\S]*\//ig,"").replace(/^fcmap_/i,""),m.chartTypeSourcePath=-1===r.indexOf("/")?q.chartTypeSourcePath||this.options.chartTypeSourcePath||b.core.options.chartTypeSourcePath||"":r.replace(/[^\/]*?$/ig,""),this.src=((b.core.options.scriptBaseUri||"")+(m.chartTypeSourcePath||b.core.options.chartTypeSourcePath||
"")).replace(/\/\s*$/g,"")+"/"+m.chartType.replace(/\.swf\s*?$/ig,"")+".swf",n&&(b.raiseWarning(this,"08101320181","comp","FusionCharts#chartType",'Chart type has ".swf" in alias and as such has been deprecated. Please use chart type alias.'),m.chartTypeSourcePath=b.core.options.chartTypeSourcePath||""),void 0!==q.dataSource&&null!==q.dataSource?this.setChartData(q.dataSource,q.dataFormat,q.dataConfiguration):this.isActive()&&!k&&this.render());return(m.chartType||"").toLowerCase()}},!0);v.getChartFromId=
function(a){b.raiseWarning(this,"11133001041","comp","GenericRuntime~getObjectFromId()",'Use of deprecated getChartFromId() or getMapFromId(). Replace with "FusionCharts()" or FusionCharts.items[].');return b.core.items[a]instanceof b.core?b.core.items[a].ref:v.swfobject&&v.swfobject.getObjectById(a)};v.getMapFromId=v.getChartFromId}]);Q.register("module",["private","api.printmanager",function(){var b=this;b.extend(b.core,{printManager:{configure:function(){b.raiseWarning(b.core,"28141714","impl",
".printManager.configure","PrintManager is deprecated")},isReady:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.isReady","PrintManager is deprecated");return!1},enabled:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.enabled","PrintManager is deprecated");return!1},managedPrint:function(){b.raiseWarning(b.core,"28141714","impl",".printManager.managedPrint","PrintManager is deprecated")}}},!1)}]);Q.register("module",["private","modules.interface.renderer",function(){var b=
this,v=b.window,J=v.document,C=v.navigator,H=!(!v.SVGAngle&&!J.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")),A=/trident/i.test(C.userAgent)&&/rv:11/i.test(C.userAgent)&&!v.opera,u=/msie/i.test(C.userAgent)&&!v.opera||A,C=function(){b.raiseError(this,"25081845","run","::RendererManager",Error("No active renderer"))},a=b.FusionChartsDOMInsertModes={REPLACE:"replace",APPEND:"append",PREPEND:"prepend"},O={undefined:{render:C,remove:C,update:C,resize:C,config:C,
policies:{}}},q={},M=function(a){return function(){var k=this.ref;if(void 0===k||null===k||"function"!==typeof k[a])b.raiseError(this,"25081617","run","#"+a+"()","ExternalInterface call failed. Check whether chart has been rendered.");else return k[a].apply(k,arguments)}},U=function(a,k){return"function"===typeof a[k]?function(){return a[k].apply(a,arguments)}:a[k]},N=function(a,k){var g=J.getElementById(a),l=k.id||k.getAttribute("id"),B,e;if(null===g)return!1;if(a===l)return!0;l=k.getElementsByTagName("*");
B=0;for(e=l.length;B<e;B++)if(l[B]===g)return!1;return!0},E=/[^\%\d]*$/ig,r=function(){var a=function(k){var g=k.parentNode;if(!g||9===g.nodeType)return!1;var l="display";v.getComputedStyle?l=v.getComputedStyle(k)[l]:k.currentStyle&&(l=k.currentStyle[l]);return"none"===l?!0:g?a(g):!1};return a}(),k=function(){var a={},k,g=function(){var l=0,B=parseInt(b.core.options.visibilityTrackingInterval,10)||300,e,m,p,q,K;for(e in a)if(l+=1,m=a[e].chart,p=a[e].container,q=a[e].insertMode,K=a[e].callback,m.disposed||
!r(p))delete a[e],--l,!m.disposed&&m.renderChart.call(m,p,q,K);k=l?setTimeout(g,B):clearTimeout(k)};return function(l,B,e,m){a[l.id]={chart:l,container:B,insertMode:e,callback:m};k||(k=setTimeout(g,parseInt(b.core.options.visibilityTrackingInterval,10)||300))}}(),m;b.policies.options.containerElementId=["renderAt",void 0];b.policies.options.renderer=["renderer",void 0];b.policies.options.containerElementType=["containerElementType",void 0];b.policies.options.visibilityTrackingInterval=300;b.normalizeCSSDimension=
function(a,k,g){a=void 0===a?g.offsetWidth||parseFloat(g.style.width):a;k=void 0===k?g.offsetHeight||parseFloat(g.style.height):k;var l={},B=g.style,e;B.width=a=a.toString?a.toString():"0";B.height=k=k.toString?k.toString():"0";if((l.widthIsRelative=a.match(/^\s*\d*\.?\d*\%\s*$/)&&!a.match(/^\s*0\%\s*$/))&&0===g.offsetWidth)for(e=g;e=e.offsetParent;)if(0<e.offsetWidth){a=(e.offsetWidth*parseFloat(a.match(/\d*/)[0])/100).toString();break}if((l.heightIsRelative=k.match(/^\s*\d*\.?\d*\%\s*$/)&&!k.match(/^\s*0\%\s*$/))&&
20>=g.offsetHeight)for(e=g;e=e.offsetParent;)if(0<e.offsetHeight){k=(e.offsetHeight*parseFloat(k.match(/\d*/)[0])/100).toString();break}l.width=a.replace?a.replace(/^\s*(\d*\.?\d*)\s*$/ig,"$1px"):a;l.height=k.replace?k.replace(/^\s*(\d*\.?\d*)\s*$/ig,"$1px"):k;B.width=l.width;B.height=l.height;l.pixelWidth=l.widthIsRelative?g.offsetWidth:parseInt(l.width,10)||0;l.pixelHeight=l.heightIsRelative?g.offsetHeight:parseInt(l.height,10)||0;return l};m=b.renderer={register:function(a,k){if(!a||"function"!==
typeof a.toString)throw Error("#03091436 ~renderer.register() Invalid value for renderer name.");a=a.toString().toLowerCase();if(void 0!==O[a])return b.raiseError(b.core,"03091438","param","::RendererManager>register",'Duplicate renderer name specified in "name"'),!1;O[a]=k;return!0},userSetDefault:!1,setDefault:function(a){if(!a||"function"!==typeof a.toString)return b.raiseError(b.core,"25081731","param","::RendererManager>setDefault",'Invalid renderer name specified in "name"'),!1;if(void 0===
O[a=a.toString().toLowerCase()])return b.raiseError(b.core,"25081733","range","::RendererManager>setDefault","The specified renderer does not exist."),!1;this.userSetDefault=!1;b.policies.options.renderer=["renderer",a];return!0},notifyRender:function(a){var k=b.core.items[a&&a.id];k&&(!1!==a.success||a.silent)||b.raiseError(b.core.items[a.id],"25081850","run","::RendererManager",Error("There was an error rendering the chart. Enable FusionCharts JS debugger for more information."));k.ref=a.ref;b.raiseEvent("internal.DOMElementCreated",
{},k)},protectedMethods:{options:!0,attributes:!0,src:!0,ref:!0,constructor:!0,signature:!0,link:!0,addEventListener:!0,removeEventListener:!0},getRenderer:function(a){return O[a]},getRendererPolicy:function(a){a=O[a].policies;return"object"===typeof a?a:{}},currentRendererName:function(){return b.policies.options.renderer[1]},update:function(a){q[a.id].update.apply(a,Array.prototype.slice.call(arguments,1))},render:function(a){q[a.id].render.apply(a,Array.prototype.slice.call(arguments,1))},remove:function(a){q[a.id].remove.apply(a,
Array.prototype.slice.call(arguments,1))},resize:function(a){q[a.id].resize.apply(a,Array.prototype.slice.call(arguments,1))},config:function(a){q[a.id].config.apply(a,Array.prototype.slice.call(arguments,1))},dispose:function(a){q[a.id].dispose.apply(a,Array.prototype.slice.call(arguments,1))}};b.addEventListener("beforeInitialize",function(a){a=a.sender;var k=a.options.renderer.toLowerCase(),g;"string"===typeof a.options.renderer&&void 0===O[k]&&(a.options.renderer=b.policies.options.renderer[1]);
a.options.renderer=k;q[a.id]=O[a.options.renderer];!0!==q[a.id].initialized&&"function"===typeof q[a.id].init&&(q[a.id].init(),q[a.id].initialized=!0);b.parsePolicies(a,q[a.id].policies||{},a.args);for(g in q[a.id].prototype)a[g]=q[a.id].prototype[g];for(g in q[a.id].events)a.addEventListener(g,q[a.id].events[g])});b.addEventListener(["rendered","dataloaderror","nodatatodisplay","rendercancelled"],function(a,k){var g=a.sender;g instanceof b.core&&g.__state&&g.__state.rendering&&(b.raiseEvent("internal.rendered",
k,g),delete g.__state.rendering)});b.addEventListener("loaded",function(a){var k=a.sender;a=a.sender.ref;var g,l;if(void 0!==a&&null!==a&&"function"===typeof a.getExternalInterfaceMethods){try{g=a.getExternalInterfaceMethods(),g="string"===typeof g?g.split(","):[]}catch(B){g=[],b.raiseError(k,"13111126041","run","RendererManager^Loaded",Error("Error while retrieving data from the chart-object."+(B.message&&0<=B.message.indexOf("NPObject")?" Possible cross-domain security restriction.":"")))}for(a=
0;a<g.length;a+=1)l=g[a],void 0===k[l]&&(k[l]=M(l));if(k.ref)for(l in g=m.protectedMethods,a=m.getRenderer(k.options.renderer).protectedMethods,k)if(a&&!g[l]&&!a[l]&&void 0===k.ref[l])try{k.ref[l]=U(k,l)}catch(B){}}});b.legacyEventList.resized="FC_Resized";b.extend(b.core.prototype,{render:function(a,m,g){g?"function"!==typeof g&&(g=void 0):"function"===typeof m?(g=m,m=void 0):m||"function"!==typeof a||(g=a,a=void 0);void 0===a&&(a=this.options.containerElementId||this.options.containerElement);"string"===
typeof a&&(a=J.getElementById(a));if(void 0===a||null===a)return b.raiseError(this,"03091456","run",".render()",Error("Unable to find the container DOM element.")),this;r(a)?k(this,a,m,g):this.renderChart(a,m,g);return this},renderChart:function(k,m,g){var l=this,B,e,r,p;if(!this.disposed){if((r=v[this.id])&&r.FusionCharts&&r.FusionCharts===this||(r=this.ref)&&r.FusionCharts&&r.FusionCharts===this)b.renderer.dispose(this),r===v[this.id]&&(v[this.id]=void 0);void 0!==v[this.id]&&b.raiseError(this,
"25081843","comp",".render",Error("#25081843:IECompatibility() Chart Id is same as a JavaScript variable name. Variable naming error. Please use unique name forchart JS variable, chart-id and container id."));g?"function"!==typeof g&&(g=void 0):"function"===typeof m?(g=m,m=void 0):m||"function"!==typeof k||(g=k,k=void 0);m=(m||this.options.insertMode).toLowerCase()||a.REPLACE;void 0===k&&(k=this.options.containerElementId);"string"===typeof k&&(k=J.getElementById(k));if(void 0===k||null===k)return b.raiseError(this,
"03091456","run",".render()",Error("Unable to find the container DOM element.")),this;if(N(this.id,k))return b.raiseError(this,"05102109","run",".render()",Error("A duplicate object already exists with the specific Id: "+this.id)),this;B=J.createElement(this.options.containerElementType||"span");B.setAttribute("id",this.id);(p=J.getElementById("fusioncharts-tooltip-element"))&&J.body.appendChild(p);if("append"!==m&&"prepend"!==m)for(;k.hasChildNodes();)k.removeChild(k.firstChild);"prepend"===m&&k.firstChild?
k.insertBefore(B,k.firstChild):k.appendChild(B);this.options.containerElement=k;this.options.containerElementId=k.id;if(m=B.style)m.position="relative",m.textAlign="left",m.lineHeight="normal",m.display="inline-block",m.zoom="1",m["vertical-align"]="middle",m.fontWeight="normal",m.fontVariant="normal",m.fontStyle="normal",m.textDecoration="none",m["*DISPLAY"]="inline",m.padding="0",m.margin="0",m.border="none",m.direction="ltr",u&&H&&(m["-ms-touch-action"]="none");this.options.containerClassName&&
(B.className=this.options.containerClassName);m=b.normalizeCSSDimension(this.width,this.height,B);this.__state.renderedWidth=m.pixelWidth;this.__state.renderedHeight=m.pixelHeight;this.__state.rendering=!0;b.raiseEvent("beforeRender",e={container:k,width:this.width,height:this.height,renderer:this.options.renderer},this,void 0,function(a,e){!0!==this.disposed&&b.renderer.render(l,B,function(){b.renderer.notifyRender.apply(this,arguments);if(g)try{g.call(a.sender,e.container)}catch(l){setTimeout(function(){throw l;
})}})},function(){b.raiseEvent("renderCancelled",e,l)});return this}},remove:function(){b.renderer.remove(this);return this},resizeTo:function(a,k,g){var l=this,B=l.width,e=l.height,m=l.__state;(l.apiInstance&&l.apiInstance.config||{}).resize=!0;"object"===typeof a&&(g=k,k=a.h,a=a.w);a=null===a||void 0===a?B:a.toString().replace(E,"");k=null===k||void 0===k?e:k.toString().replace(E,"");!0!==g?b.raiseEvent("beforeresize",{currentWidth:B,currentHeight:e,newWidth:a,newHeight:k},l,void 0,function(){l.width=
a;l.height=k;b.renderer.resize(l,{width:a,height:k});b.raiseEventWithLegacy("resized",{width:l.width,height:l.height,prevWidth:B,prevHeight:e,pixelWidth:l.ref&&l.ref.offsetWidth||0,pixelHeight:l.ref&&l.ref.offsetHeight||0,originalWidth:m.renderedWidth,originalHeight:m.renderedHeight},l,[l.id,l.width,l.height])},function(){b.raiseEvent("resizecancelled",{currentWidth:B,currentHeight:e,cancelledTargetWidth:a,cancelledTargetHeight:k},l)}):(l.width=a,l.height=k);return this},dispose:function(){var a=
this,k={};b.raiseEvent("beforeDispose",k,a,void 0,function(){b.renderer.dispose(a);b.raiseEvent("disposed",k,a);b.disposeEvents(a);delete b.core.items[a.id];for(var g in a)a.hasOwnProperty(g)&&delete a[g];a.disposed=!0},function(){b.raiseEvent("disposeCancelled",k,a)})},configure:function(a,k){var g;a&&("string"===typeof a?(g={},g[a]=k):g=a,b.renderer.config(this,g))}});b.extend(b.core,{setCurrentRenderer:function(){var a=m.setDefault.apply(m,arguments);m.userSetDefault=!0;return a},getCurrentRenderer:function(){return m.currentRendererName.apply(m,
arguments)},render:function(a,k){return a instanceof b.core?(a.render(k),a):(new b.core(a)).render(k)}},!1)}]);Q.register("module",["private","modules.interface.transcoder",function(){var b=this,v=b.window,J=b.transcoders={},C={},H={},A=/url$/i,u=b._interactiveCharts={selectscatter:[!0,!1],dragcolumn2d:[!0,!0],dragarea:[!0,!0],dragline:[!0,!0],dragnode:[!0,!0]},a=function(a,m,n,L){var g=n.obj;n=n.args;n.dataSource=a;n.xmlHttpRequestObject=m;n.source="XmlHttpRequest";n.url=L;b.raiseEvent("dataLoadRequestCompleted",
n,g,void 0,q,M)},O=function(a,m,n){var L=n.obj;n=n.args;n.error=a;n.httpStatus=m.xhr&&m.xhr.status?m.xhr.status:-1;n.xmlHttpRequestObject=m;b.raiseEvent("dataLoadError",n,L);"function"===typeof v.FC_DataLoadError&&v.FC_DataLoadError(L.id,n)},q=function(a,b){a.sender.setChartData(b.dataSource,b.dataFormat,b.config,b.successcallback,b.silent)},M=function(a,m){b.raiseEvent("dataLoadCancelled",m,a.sender);m.xmlHttpRequestObject.abort()},U=function(k,m){var n=k.sender,L=n.__state,g=m.url;n.options.dataSource=
m.url;L.dhmXhrObj||(L.dhmXhrObj=new b.ajax(a,O));L.dhmXhrObj.get("function"===typeof v.decodeURIComponent?v.decodeURIComponent(g):v.unescape(g),{obj:n,args:m})},N=function(a,m){var n=a.sender,L=n.__state;b.raiseEvent("dataLoadRequestCancelled",m,n);L&&L.dhmXhrObj&&L.dhmXhrObj.abort()},E=function(a,m){var n=a.sender,L=n.__state,g=n.id;C[g]=m;H[g]&&delete H[g];H[g]={};L.dataReady=void 0;L.dataAvailable=!0;!0!==m.silent&&(!0!==n.options.safeMode||!0!==L.rendering||n.isActive()?(delete L.args,b.renderer.update(n,
m)):(L.updatePending=m,b.raiseWarning(n,"23091255","run","::DataHandler~update","Renderer update was postponed due to async loading.")));b.raiseEvent("dataUpdated",m,n,void 0,m.successcallback)},r=function(a,m){b.raiseEvent("dataUpdateCancelled",m,a.sender,void 0,m.failurecallback)};b.dataFormats={};b.policies.options.dataSource=["dataSource",void 0];b.policies.options.dataFormat=["dataFormat",void 0];b.policies.options.dataConfiguration=["dataConfiguration",void 0];b.policies.options.showDataLoadingMessage=
["showDataLoadingMessage",!1];b.addDataHandler=function(a,m){if("string"!==typeof a||void 0!==J[a.toLowerCase()])b.raiseError(b.core,"03091606","param","::DataManager.addDataHandler",Error("Invalid Data Handler Name"));else{var n={},L=a.toLowerCase();J[L]=m;m.name=a;n["set"+a+"Data"]=function(g,l,B){return this.setChartData(g,a,l,B)};m.transportable&&(n["set"+a+"Url"]=function(g,l,B){return this.setChartDataUrl(g,a,l,B)},b.dataFormats[a+"URL"]=L+"Url");n["get"+a+"Data"]=function(){return this.getChartData(a)};
b.dataFormats[a]=L;b.extend(b.core,n,!0)}};b.extend(b.core.prototype,{setChartDataUrl:function(a,m,n,L,g){if(void 0===m||null===m||"function"!==typeof m.toString)m=this.options.dataFormat,b.raiseWarning(this,"03091609","param","FusionCharts#setChartDataUrl","Invalid Data Format. Reverting to current data format - "+m);m=m.toString().toLowerCase();m=A.test(m)?m.slice(0,-3):m;b.raiseEvent("dataLoadRequested",{source:"XmlHttpRequest",url:a,dataFormat:m,silent:!!g,config:n,successcallback:L},this,void 0,
U,N)},setChartData:function(a,m,n,L,g){var l=this.options,B,e;if(void 0===m||null===m||"function"!==typeof m.toString)m=l.dataFormat,b.raiseWarning(this,"03091610","param","FusionCharts#setChartData","Invalid Data Format. Reverting to current data format - "+m);m=m.toString().toLowerCase();A.test(m)?this.setChartDataUrl(a,m,n,L,g):(l.dataSource=a,B=m,l.dataFormat=m,e=J[B],"undefined"===typeof e?b.raiseError(b.core,"03091611","param","FusionCharts#setChartData",Error("Data Format not recognized")):
(m=(m=b.renderer&&b.renderer.getRenderer(l.renderer||b.renderer.currentRendererName()))&&m.dataFormat,n=m===B?e.passthrough?e.passthrough(a,n,l.chartType):{data:a}:e.encode(a,this,n||l.dataConfiguration)||{},n["native"]=m===B,n.format=n["native"]?m:"xml",n.dataFormat=B,n.dataSource=a,n.silent=!!g,"function"===typeof L&&(n.successcallback=L),b.raiseEvent("beforeDataUpdate",n,this,void 0,E,r)))},getChartData:function(a,m){var n=this.options,L=this.id,g;if(void 0===a||"function"!==typeof a.toString||
void 0===(g=J[a=a.toString().toLowerCase()]))b.raiseError(this,"25081543","param","::transcoder~getChartData()",Error('Unrecognized data-format specified in "format"'));else return H[L][a]&&(H[L][a]=null),H[L][a]?n=H[L][a]:C[L]?(a===C[L].format?H[L][a]=C[L]:(H[L].xml||(H[L].xml="xml"===C[L].format?C[L]:J[C[L].format].encode(C[L].data,this,n.dataConfiguration)),H[L][a]||(H[L][a]=g.decode(H[L].xml.data,this,n.dataConfiguration))),n=H[L][a]):n={error:Error("Data not defined")},!0===!!m?n:n.data},dataReady:function(a){return a?
this.__state.dataAvailable:this.__state.dataReady}});b.extend(b.core,{transcodeData:function(a,m,n,L,g){if(m&&"function"===typeof m.toString&&n&&"function"===typeof n.toString&&void 0!==J[n=n.toString().toLowerCase()]&&void 0!==J[m=m.toString().toLowerCase()])return a=J[m].encode(a,this,g),m=J[n].decode(a.data,this,g,m),m.error instanceof Error||(m.error=a.error),L?m:m.data;b.raiseError(this,"14090217","param",".transcodeData()",Error("Unrecognized data-format specified during transcoding."))}},!1);
b.getRenderer&&!b.getRenderer("flash")||b.addEventListener("DataLoadRequested",function(a){var b=a.sender;b.options&&"flash"===b.options.renderer&&b.options.useLegacyXMLTransport&&a.preventDefault()});b.addEventListener("beforeInitialize",function(a){a=a.sender;var m=a.options,n=m.dataSource,L=b.renderer&&b.renderer.getRenderer(m.renderer);delete C[a.id];H[a.id]={};if(void 0!==n&&null!==n){a.__state.dataSetDuringConstruction=!0;if("string"!==typeof m.dataFormat)switch(typeof n){case "function":n=
m.dataSource=n.call(a,m.dataConfiguration);m.dataFormat="JSON";break;case "string":m.dataFormat=/^\s*?\{[\s\S]*\}\s*?$/g.test(a.options.dataFormat)?"JSON":"XML";break;case "object":m.dataFormat="JSON"}m.dataFormat&&m.dataFormat.toString&&(a.__state.dataFetchDuringConstruction=A.test(m.dataFormat.toString()));a.setChartData(n,m.dataFormat,void 0,void 0,!0)}else L&&(a.__state.dataSetDuringConstruction=!1,b.raiseWarning(a,"1810131922A","param",":dataHandler~event:beforeInitialize","Data source was not defined during construction, hence set to blank renderer default - "+
L.dataFormat),a.setChartData("",L.dataFormat,void 0,void 0,!0),a.__state.dataAvailable=!1)});b.addEventListener("beforeDispose",function(a){var b=a.sender;delete C[a.sender.id];delete H[a.sender.id];b&&b.__state&&b.__state.dhmXhrObj&&b.__state.dhmXhrObj.abort()});b.addEventListener("disposed",function(a){delete H[a.sender.id]});b.addEventListener("loaded",function(a){a=a.sender;var m=a.__state.updatePending;a instanceof b.core&&void 0!==m&&(delete a.__state.updatePending,b.renderer.update(a,m))});
b.addEventListener("dataUpdated",function(a,m){var n=a.sender,L=n.__state;L.rendering&&(L.dataFetchDuringConstruction||L.updatePending)&&(delete L.dataFetchDuringConstruction,delete L.updatePending,b.renderer.update(n,m))});b.addEventListener(["dataLoadError","dataInvalid"],function(a){a.sender.__state.dataAvailable=!1});b.addEventListener("loaded",function(a){a=a.sender;var m=a.__state,n,L,g;g=function(a,g){return function(e){return!1===e?g.apply(this):this.ref.getUpdatedXMLData?b.core.transcodeData(this.ref.getUpdatedXMLData(),
"xml",a):this.getData?this.getData(a):g.apply(this)}};if(a.chartType&&u[a.chartType()]&&u[a.chartType()][0]){for(n in b.transcoders)L=b.transcoders[n].name,L="get"+L+"Data",a[L]=g(n,a.constructor.prototype[L]),a[L]._dynamicdatarouter=!0;m.dynamicDataRoutingEnabled=!0}else if(m.dynamicDataRoutingEnabled){for(n in b.transcoders)L=b.transcoders[n].name,L="get"+L+"Data",a.hasOwnProperty(L)&&a[L]._dynamicdatarouter&&delete a[L];m.dynamicDataRoutingEnabled=!1}})}]);Q.register("module",["private","modules.data.json",
function(){var b=this,v=b.window,J=v.document,C=b.xssEncode,H,A,u=function(a){var b,q;for(b in a)a.hasOwnProperty(b)&&(q=b.toLowerCase(),b!==q&&(a[q]=a[b],delete a[b]),"object"===typeof a[q]&&"data"!==q&&u(a[q]))};void 0===v.JSON&&b.raiseError(this,"1113062012","run","JSONDataHandler",Error("Could not find library support for JSON parsing."));b.policies.options.allowIESafeXMLParsing=["_allowIESafeXMLParsing",!0];H=function(){var a={set:!0,trendlines:!0,vtrendlines:!0,line:{trendlines:!0,vtrendlines:!0},
data:!0,dataset:!0,lineset:!0,categories:!0,category:!0,tasks:!0,linkeddata:!0,application:!0,definition:!0,axis:!0,connectors:!0,connector:{connectors:!0},trendset:!0,row:{rows:!0},column:{columns:!0},label:{labels:!0},color:{colorrange:!0},dial:{dials:!0},pointer:{pointers:!0},point:{trendpoints:!0},process:{processes:!0},task:{tasks:!0},milestone:{milestones:!0},datacolumn:{datatable:!0},text:{datacolumn:!0},item:{legend:!0},alert:{alerts:!0},groups:{annotations:!0},items:{groups:!0,data:!0},shapes:!0,
shape:{shapes:!0},entitydef:!0,entity:{entitydef:!0}},O={chart:"linkedchart",map:"linkedmap",set:"data",vline:{chart:"data",graph:"data",dataset:"data",categories:"category",linkedchart:"data"},apply:{application:"application"},style:{definition:"definition"},marker:{application:"application",definition:"definition",data:"items"},entity:{entitydef:"entitydef",data:"data"},shape:{shapes:"shapes"},connector:{connectors:{chart:"connector",linkedchart:"connector",map:"connectors",linkedmap:"connectors"}},
annotationgroup:{annotations:"groups"},annotation:{groups:"items"}},q={vline:{vline:"true"}},M={chart:!0,map:!0,graph:!0},u={dataset:"data",categories:"category"},N={target:"target",value:"value"},E={styles:{definition:!0,application:!0},chart:{value:!0,target:!0},graph:{value:!0,target:!0},linkedchart:{value:!0,target:!0},markers:{definition:!0,application:!0,shapes:!0,connectors:!0,data:!0},map:{entitydef:!0,data:!0},linkedmap:{entitydef:!0,data:!0}},r,k,m;r={append:function(k,b,g,l){!a[g]||!0!==
a[g]&&!0!==a[g][l]?b[g]=k:(b[g]instanceof Array||(b[g]=[]),b[g].push(k))},child:function(a,k,g,l){var B,e,m,p,T,K;for(B=0;B<k.length;B+=1)switch(m=k[B],e=m.nodeName.toLowerCase(),m.nodeType){case 1:p=r.attr(m.attributes);K=M[e];!0===K&&(T=p,p={},p[e]=T);K=q[e];"object"===typeof K&&b.extend(p,K);if(K=O[e])if("object"===typeof K&&"object"===typeof K[g])for(T in T=void 0,K[g]){if(l[T]){e=K[g][T];break}}else"object"===typeof K&&"string"===typeof K[g]?e=K[g]:"string"===typeof K&&(e=K);m.childNodes.length&&
((K=E[g])&&K[e]?r.child(a,m.childNodes,e,l):r.child(p,m.childNodes,e,l));(K=E[g])&&K[e]||r.append(p,a,e,g);break;case 3:if(K=N[g])e=K,p=m.data,r.append(p,a,e,g);K=u[g];"string"===typeof K&&l.chart&&parseInt(l.chart.compactdatamode,10)&&(e=K,p=m.data,a[e]=a[e]?a[e]+p:p)}},attr:function(a){var k,g={};if(!a||!a.length)return g;for(k=0;k<a.length;k+=1)"xml"===m&&(a[k].value?a[k].value=a[k].value.replace(/</g,"&lt;").replace(/>/g,"&gt;"):a[k].nodeValue&&(a[k].nodeValue=a[k].nodeValue.replace(/</g,"&lt;").replace(/>/g,
"&gt;"))),g[a[k].nodeName.toLowerCase()]=a[k].value||a[k].nodeValue;return g}};k=function(a){var m={},g,l,B,e,V,p,q,K,t;if("object"!==typeof a&&a&&"function"!==typeof a.toString)return k.errorObject=new TypeError("xml2json.parse()"),m;a=a.toString().replace(/<\!--[\s\S]*?--\x3e/g,"").replace(/<\?xml[\s\S]*?\?>/ig,"").replace(/&(?!([^;\n\r]+?;))/g,"&amp;$1");a=a.replace(/^\s\s*/,"");for(var Z=/\s/,P=a.length;Z.test(a.charAt(--P)););a=a.slice(0,P+1);if(!a)return m;try{v.DOMParser?g=(new v.DOMParser).parseFromString(a,
"text/xml"):J.body&&b.core.options.allowIESafeXMLParsing?(l=J.createElement("xml"),l.innerHTML=a,J.body.appendChild(l),g=l.XMLDocument,J.body.removeChild(l)):(g=new v.ActiveXObject("Microsoft.XMLDOM"),g.async="false",g.loadXML(a));if(!(g&&g.childNodes&&1===g.childNodes.length&&(B=g.childNodes[0])&&B.nodeName&&(e=B.nodeName.toLowerCase()))||"chart"!==e&&"map"!==e&&"graph"!==e)return k.errorObject=new TypeError("xml2json.parse()"),m;if("graph"===e){V=g.createElement("chart");for(t=(q=B.attributes)&&
q.length||0;t--;)V.setAttribute(q[t].name,q[t].value),q.removeNamedItem(q[t].name);if(t=(K=B.childNodes)&&K.length||0)--t,p=B.removeChild(K[t]),V.appendChild(p);for(;t--;)p=B.removeChild(K[t]),V.insertBefore(p,V.firstChild);g.replaceChild(V,B);B=V}}catch(S){k.errorObject=S}B?(B.attributes&&(m[e]=r.attr(B.attributes)),B.childNodes&&r.child(m,B.childNodes,e,m),delete k.errorObject):k.errorObject=new TypeError("xml2json.parse()");return m};return function(a){delete k.errorObject;m=arguments[arguments.length-
1];return{data:k(a),error:k.errorObject}}}();A=function(){var a,b;a={items:{explode:{data:"set",groups:{annotations:"annotationgroup"},items:{groups:"annotation"}},text:{chart:{target:"target",value:"value"},graph:{target:"target",value:"value"}},dsv:{dataset:{data:"dataset"},categories:{category:"categories"}},attr:{chart:{chart:"chart"},graph:{graph:"graph"},map:{map:"map"},linkedmap:{map:"map"},linkedchart:{chart:"chart"}},group:{styles:{definition:"style",application:"apply"},map:{data:"entity",
entitydef:"entity"},markers:{definition:"marker",application:"marker",shapes:"shape",connectors:"connector",items:"marker"}},tag:{markers:{items:"data"}}},qualify:function(a,b,O){return"object"===typeof this.items[a][O]?this.items[a][O][b]:this.items[a][O]}};b=function(q,M,u,N){var E="",r="",k="",m="",n,L,g;M&&"function"===typeof M.toLowerCase&&(M=M.toLowerCase());if(void 0===u&&q[M])for(n in q[M])L=n.toLowerCase(),"compactdatamode"===L&&(N.applyDSV=1==q[M][n]);if(q instanceof Array)for(n=0;n<q.length;n+=
1)k="string"===typeof q[n]?k+C(q[n]):k+b(q[n],M,u,N);else{for(n in q)L=n.toLowerCase().replace(/[`~!@#$%^&*()|+\=?;:'", <>\{\}\[\]\\\/]/gi,""),q[n]instanceof Array&&(g=a.qualify("group",L,M))?(k=a.qualify("tag",L,M)||L,r+="<"+k+">"+b(q[n],g,M,N)+"</"+k+">"):"object"===typeof q[n]?(g=a.qualify("attr",L,M))?(m=b(q[n],g,M,N).replace(/\s*\/\>/ig,""),M=L):r+=b(q[n],L,M,N):N.applyDSV&&(g=a.qualify("dsv",L,M))?r+=q[n]:(g=a.qualify("text",L,M))?(k=a.qualify("tag",L,M)||g,r+="<"+k+">"+q[n]+"</"+k+">"):"vline"===
L&&q[n]?M="vline":E+=" "+L+'="'+C(q[n]).toString().replace(/\"/ig,"&quot;")+'"';if(g=a.qualify("explode",u,M))M=g;k=M;k=(""!==m?m:"<"+k)+E+(""!==r?">"+r+"</"+k+">":" />")}return k};return function(a){delete b.errorObject;if(a&&"string"===typeof a)try{a=JSON.parse(a)}catch(M){b.errorObject=M}return{data:b(a,a&&a.graph?"graph":a&&a.map?"map":"chart",void 0,{}),error:b.errorObject}}}();b.addDataHandler("JSON",{encode:A,decode:H,passthrough:function(a,b,q){b={data:{}};q=!!/zoomscatter/ig.test(q);if(!a)return b;
if("string"!==typeof a)try{a=JSON.stringify(a)}catch(M){return b.error=M,b}try{q?(b.data=JSON.parse(a),u(b.data)):b.data=JSON.parse(a.replace(/"([^"]+)"[\s]*:/g,function(a,b){return'"'+b.toLowerCase()+'":'}))}catch(M){console.log(M),b.error=M}return b},transportable:!0})}]);Q.register("module",["private","modules.data.xml",function(){var b=function(b){return{data:b,error:void 0}};this.addDataHandler("XML",{encode:b,decode:b,transportable:!0})}]);Q.register("module",["private","modules.data.csv",function(){var b=
this,v=b.window,J=b.core,C=v.parseInt,H=v.parseFloat,A=function(a){return a},u;u=function(a){this.data=[];this.columnCount=this.rowCount=0;this.configure(a)};u.decodeLiterals=function(a,b){return void 0!==a&&null!==a&&a.toString?a.replace("{tab}","\t").replace("{quot}",'"').replace("{apos}","'"):b};u.prototype.set=function(a,b,q){var M;if(this.rowCount<=a){for(M=this.rowCount;M<=a;M+=1)this.data[M]=[];this.rowCount=a+1}this.columnCount<=b&&(this.columnCount=b+1);this.data[a][b]=q};u.prototype.setRow=
function(a,b){var q;if(this.rowCount<=a){for(q=this.rowCount;q<=a;q+=1)this.data[q]=[];this.rowCount=a+1}this.columnCount<b.length&&(this.columnCount=b.length);this.data[a]=b};u.prototype.get=function(a,b){var q=this.data;return q[a]&&q[a][b]};u.prototype.configure=function(a){var b=u.decodeLiterals;this.delimiter=b(a.delimiter,",");this.qualifier=b(a.qualifier,'"');this.eolCharacter=b(a.eolCharacter,"\r\n");this.numberFormatted=!!C(a.numberFormatted,0)};u.prototype.clear=function(){this.data=[];
this.columnCount=this.rowCount=0};u.prototype.toString=function(){var a,b,q="";for(a=0;a<this.rowCount;a+=1)b=this.qualifier+this.data[a].join(this.qualifier+this.delimiter+this.qualifier)+this.qualifier,q+='""'===b?this.eolCharacter:b+this.eolCharacter;0<this.rowCount&&(q=q.slice(0,q.length-2));return q};b.addDataHandler("CSV",{encode:function(a,u){b.raiseError(u,"0604111215","run","::CSVDataHandler.encode()","FusionCharts CSV data-handler only supports encoding of data.");throw Error("FeatureNotSupportedException()");
},decode:function(a,b){var q=J.transcodeData(a,"xml","json")||{},M=b.jsVars,v=M&&M.instanceAPI,N=v&&v.components,E,r,k,m,n,L,g=q.chart||q.map||q.graph||{},l=!!g.exporterrorcolumns,B=q.categories&&q.categories[0]&&q.categories[0].category||[],e=q.map&&!q.chart||M&&M.instanceAPI&&"geo"===M.instanceAPI.defaultSeriesType,V=!1,p=!1,T=!1,K=!1,t=!1,Z=A,P={},S,z,R,w,F,X,h,d,f,c;k=0;var D=-1,G;E=new u({separator:g.exportdataseparator,qualifier:g.exportdataqualifier,numberFormatted:g.exportdataformattedval});
J.formatNumber&&E.numberFormatted&&(Z=function(c,d){return J.formatNumber(c,g,d)});if(e)for(r in P.geo=!0,B=(e=N&&M.instanceAPI.components.dataset&&M.instanceAPI.components.dataset[0])&&e.components.data||[],E.setRow(0,["Id"," Short Name","Long Name","Value","Formatted Value"]),M=0,B)p=B[r],c=p.config,e=c.cleanValue,!0!==p.hidden&&E.setRow(++M,[r,c.shortLabel,c.label,null===e?"":e,c.formattedValue]);else if(void 0!==(S=q.dials&&q.dials.dial||q.pointers&&q.pointers.pointer||q.value))if(P.gauge=!0,
"string"===typeof S)E.set(0,0,Z(S)),P.singlevalue=!0,"string"===typeof q.target&&(E.set(0,1,Z(q.target)),P.bullet=!0);else for(E.setRow(0,["Id","Value"]),P.multivalue=!0,M=0,L=1,n=S.length;M<n;M+=1,L+=1)E.setRow(L,[L,Z(S[M].value)]);else if(S=q.dataset||!(q.data instanceof Array)&&[]){P.multiseries=!0;k=1;if(z=q.lineset)S=S.concat(z),P.lineset=!0;if(R=q.axis)S=S.concat(R),P.multiaxis=!0;e=v.defaultDatasetType&&v.defaultDatasetType.toLowerCase();"dragnode"!==e&&"dragcolumn"!==e&&"dragline"!==e&&"dragarea"!==
e||!v.getJSONData||(S=v.getJSONData().dataset);X=S.length;F=B.length;if(!(X=S.length)){for(M=0;M<F;M+=1)h=B[M],E.set(M+1,0,h.label||h.name);P.multilevel=!0}for(M=0;M<X;M+=1)for(d=S,d[M].dataset?(d=d[M].dataset,m=0,w=d.length):(d=S,m=M,w=m+1);m<w&&!V&&!T;m+=1)if(t=d[m],D++,!(N&&N.dataset&&N.dataset[D]&&!1===N.dataset[D].visible)){G=(e=N&&N.dataset&&N.dataset[D])&&e.config&&e.config.parentYAxis;E.set(0,k,t.seriesname);"string"===typeof t.data&&(P.compactdata=!0,t.data=t.data.split(g.dataseparator||
"|"));L=n=0;for(f=t.data&&t.data.length||0;n<f||n<F;n+=1){h=B[n];r=L+1;e=t.data&&t.data[L]||{};if(void 0!==e.x&&void 0!==e.y){V=P.xy=!0;break}if(void 0!==e.open||void 0!==e.high||void 0!==e.close||void 0!==e.low){K=P.ohlc=!0;break}if(void 0!==e.rowid&&void 0!==e.columnid){T=P.heatmap=!0;break}if(n<F&&!h.vline){E.set(r,0,h.label||h.name);h=H(e?e.value:"");h=isNaN(h)?"":Z(h,G);E.set(r,k,h);if(p||l||e.errorvalue)p||E.set(0,k+1,"Error"),c=1,E.set(r,k+1,Z(e.errorvalue));L+=1}}c&&(k+=c,c=0);k+=1}z&&(S=
S.slice(0,-z.length));R&&(S=S.slice(0,-R.length))}else if(S=q.data){E.set(0,1,g.yaxisname||"Value");P.singleseries=!0;t="1"==g.showsumatend;M=0;for(F=S.length;M<F;M+=1)e=S[M],e.vline||(h=H(e.value?e.value:""),E.setRow(M+1,[e.label||e.name,isNaN(h)?"":(k+=h,Z(h))]));t&&(P.summation=!0,E.setRow(M+1,[g.sumlabel||"Total",Z(k)]))}if(K)for(E.clear(),E.setRow(0,["Open","Close","High","Low"]),M=0,r=1,S=q.dataset,w=S.length;M<w;M+=1)for(n=0,t=S[M]&&S[M].data||[],X=t.length;n<X;n+=1,r+=1)e=t[n]||{},E.setRow(n+
1,[Z(e.open),Z(e.close),Z(e.high),Z(e.low)]);else if(V)for(E.clear(),p=!1,c=0,E.setRow(0,["Series","x","y"]),M=0,r=1,S=q.dataset,w=S.length;M<w;M+=1){if(!(N&&N.dataset&&N.dataset[M]&&!1===N.dataset[M].visible))for(e=v.defaultDatasetType&&v.defaultDatasetType.toLowerCase(),"dragnode"===e&&v.getJSONData&&(S=v.getJSONData().dataset),n=0,t=S[M]&&S[M].data||[],X=t.length;n<X;n+=1,r+=1){e=t[n]||{};h=[S[M].seriesname,Z(e.x),Z(e.y)];void 0!==e.z&&(h.push(Z(e.z)),c||(E.set(0,3,"z"),c=1));if(p||l||void 0!==
e.errorvalue||void 0!==e.horizontalerrorvalue||void 0!==e.verticalerrorvalue)q=Z(e.errorvalue),h.push(e.errorvalue,void 0===e.horizontalerrorvalue?q:Z(e.horizontalerrorvalue),void 0===e.verticalerrorvalue?q:Z(e.verticalerrorvalue)),p||(E.set(0,c+3,"Error"),E.set(0,c+4,"Horizontal Error"),E.set(0,c+5,"Vertical Error")),p=P.error=!0;E.setRow(r,h)}}else if(T){E.clear();l={};V={};M=0;n=1;B=q.rows&&q.rows.row||[];for(v=B.length;M<v;M+=1,n+=1)h=B[M],h.id&&(l[h.id.toLowerCase()]=n,E.set(n,0,h.label||h.id));
M=0;n=1;B=q.columns&&q.columns.column||[];for(v=B.length;M<v;M+=1,n+=1)h=B[M],h.id&&(V[h.id.toLowerCase()]=n,E.set(0,n,h.label||h.id));t=q.dataset&&q.dataset[0]&&q.dataset[0].data||[];N=N&&N.dataset&&N.dataset[0]&&N.dataset[0].components&&N.dataset[0].components.data||[];M=0;for(v=t.length;M<v;M+=1)e=t[M],r=e.rowid.toLowerCase(),k=e.columnid.toLowerCase(),N[M]&&!1===N[M].visible||(l[r]||(l[r]=E.rowCount,E.set(E.rowCount,0,e.rowid)),V[k]||(V[k]=E.columnCount,E.set(0,E.columnCount,e.columnid)),E.set(l[r],
V[k],Z(e.value)))}S=B=z=R=null;0<E.rowCount&&void 0===E.get(0,0)&&E.set(0,0,g.xaxisname||"Label");return{data:E.toString(),error:void 0,predictedFormat:P}},transportable:!1});J.addEventListener("Loaded",function(a){a=a.sender;"javascript"!==a.options.renderer||a.getDataAsCSV||(a.getDataAsCSV=a.ref.getDataAsCSV=a.getCSVData)})}]);Q.register("module",["private","modules.renderer.js",function(){var b=this,v=b.window,J=v.document,C=b.core.options,H=/msie/i.test(v.navigator.userAgent)&&!v.opera,A=!(!v.SVGAngle&&
!J.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")),u=function(){},a=b.hcLib={cmdQueue:[]},O=a.moduleCmdQueue={base:[],charts:[],powercharts:[],widgets:[],maps:[]},q=a.moduleDependencies={},M=a.moduleMeta={base:"fusioncharts.js",charts:"fusioncharts.charts.js",powercharts:"fusioncharts.powercharts.js",widgets:"fusioncharts.widgets.js",maps:"fusioncharts.maps.js"},U={},N=a.getMetaSentence=function(){var a={};return function(g){g=g&&g.replace(/(^\s*)|(\s*$)/g,"")||
"";return a[g]||(a[g]={key:g,subject:g.replace(/[^\/]*?$/ig,""),predicate:g.replace(/^.*\//ig,"")})}}(),E=a.getDependentModuleName=function(a){var g=[],e,b;a=N(a).predicate;for(e in q)void 0!==(b=q[e][a])&&(g[b]=e);return g},r=a.hasModule=function(a){var g,e;if(a instanceof Array){g=0;for(e=a.length;g<e;g+=1)if(!b.modules["modules.renderer.js-"+N(a[g]).predicate])return!1;return!0}return!!b.modules["modules.renderer.js-"+N(a).predicate]},k=a.loadModule=function(a,g,e,k){a instanceof Array||(a=[a]);
var p=a.length,m=0,K;K=function(){if(m>=p)g&&g();else{var t=a[m],n=t&&t.match(/[^\/]*$/i)[0],P=M[t];m+=1;if(t){if(r(n)){K();return}if(U[n]){b.raiseError(k||b.core,"1112201445A","run","JavaScriptRenderer~loadModule() ","required resources are absent or blocked from loading.");e&&e(n);return}}else e&&e(n);t=b.core.options["html5"+b.capitalizeString(n)+"Src"];b.loadScript(void 0===t?P:t,{success:function(){r(n)?K():e&&e(n)},failure:e&&function(){e(n)}},void 0,!0)}};K()},m=a.executeWaitingCommands=function(a){for(var g;g=
a.shift();)"object"===typeof g&&u[g.cmd].apply(g.obj,g.args)},n=function(a){delete a.sender.jsVars._reflowData;a.sender.jsVars._reflowData={};delete a.sender.jsVars._reflowClean},L=function(){var a=function(){};a.prototype={LoadDataErrorText:"Error in loading data.",XMLLoadingText:"Retrieving data. Please wait",InvalidXMLText:"Invalid data.",ChartNoDataText:"No data to display.",ReadingDataText:"Reading data. Please wait",ChartNotSupported:"Chart type not supported.",PBarLoadingText:"",LoadingText:"Loading chart. Please wait",
RenderChartErrorText:"Unable to render chart."};return a.prototype.constructor=a}(),g=a.getContainerBackgroundColor=function(l){l=l.chartInstance;var g=l.options,e=g.containerBackgroundColor,g=g.containerBackgroundOpacity,b=l.jsVars.transparent;void 0!==b&&null!==b?g=l.jsVars.transparent?0:1:(g=parseFloat(g),0>g?g=0:1<g&&(g=1));e||(e="#ffffff");if(H&&!A)return g?e:"transparent";e=e.replace(/^#?([a-f0-9]+)/ig,"$1");e=a.graphics.HEXtoRGB(e);e[3]=g.toString();return"rgba("+e.join(",")+")"};a.injectModuleDependency=
function(l,g,e){var b=!1,k=N(l).subject;l=N(l).predicate;g=void 0===g?l:N(g).predicate;q[l]||(q[l]={},O[l]||(O[l]=[],a.moduleMeta[l]=k+C.html5ScriptNamePrefix+(g&&g.replace&&g.replace(/^[\s\S]*\//ig,"").replace(/\?/g,"%3F").replace(/\#/g,"%23").replace(/\:/g,"%3A")||"")+C.html5ScriptNameSuffix),b=!0);q[l][g]=e||0;return b};a.needsModule=function(l,g){l=N(l).predicate;g=N(g).predicate;return void 0!==(a.moduleDependencies[l]&&a.moduleDependencies[l][g])};a.cleanupWaitingCommands=function(a){for(var g=
a.chartType(),g=E(g),e,b=[],k;e=g.shift();){for(e=O[e]||[];k=e.shift();)"object"===typeof k&&k.obj!==a&&b.push(k);e.concat(b);b=[]}};b.extend(b.core.options,{html5ScriptNameSuffix:".js",html5ScriptNamePrefix:"fusioncharts."});b.extend(u,{dataFormat:"json",ready:!1,policies:{jsVars:{},options:{showChartLoadingMessage:["showChartLoadingMessage",!0]}},init:function(){r("base")?u.ready=!0:k("base",function(){u.ready=!0;m(a.cmdQueue)},void 0,b.core)},render:function(l){var b=l,e=this.jsVars.msgStore;b&&
this.options.showChartLoadingMessage&&(b.innerHTML='<small style="display: inline-block; *zoom:1; *display:inline; width: 100%; font-family: Verdana,sans; font-size: 10px; color: #666666; text-align: center; padding-top: '+(parseInt(b.style.height,10)/2-5)+'px">'+(e.PBarLoadingText||e.LoadingText)+"</small>",b.style.backgroundColor=g(this));a.cmdQueue.push({cmd:"render",obj:this,args:arguments})},update:function(){a.cmdQueue.push({cmd:"update",obj:this,args:arguments})},resize:function(){a.cmdQueue.push({cmd:"resize",
obj:this,args:arguments})},dispose:function(){var l=a.cmdQueue,g,e;g=0;for(e=l.length;g<e;g+=1)l[g].obj===this&&(l.splice(g,1),--e,--g)},load:function(){a.cmdQueue.push({cmd:"load",obj:this,args:arguments})},config:function(a,g){var e,b=this.jsVars,k=b.msgStore,b=b.cfgStore,m=this.options,K;K={LoadingText:"loadMessage",ChartNotSupported:"typeNotSupportedMessage",RenderChartErrorText:"renderErrorMessage",XMLLoadingText:"dataLoadStartMessage",ChartNoDataText:"dataEmptyMessage",LoadDataErrorText:"dataLoadErrorMessage",
InvalidXMLText:"dataInvalidMessage"};"string"===typeof a&&1<arguments.length&&(e=a,a={},a[e]=g);for(e in a)void 0!==k[e]?k[e]=a[e]:b[e.toLowerCase()]=a[e],K[e]?m[K[e]]=a[e]:m[e]=a[e]},protectedMethods:{},events:{beforeInitialize:function(l){var g=l.sender;l=g.jsVars;var e;l.fcObj=g;l.msgStore=l.msgStore||new L;l.cfgStore=l.cfgStore||{};l.previousDrawCount=-1;l.drawCount=0;l._reflowData={};g.addEventListener("beforeRender",function(e){e.sender.jsVars.smartLabel=new a.SmartLabelManager(g.id,J.body||
J.getElementsByTagName("body")[0]);e.detachHandler()});l.userModules instanceof Array||(e=l.userModules,l.userModules=[],"string"===typeof e&&(l.userModules=l.userModules.concat(e.split(","))));a.chartAPI&&a.chartAPI[void 0]||(l.needsLoaderCall=!0)},initialized:function(a){a=a.sender;var g=a.jsVars;g.needsLoaderCall&&(delete g.needsLoaderCall,u.load.call(a))},beforeDataUpdate:n,beforeDispose:function(a){var g=a.sender.jsVars;g.smartLabel&&!g.smartLabel.disposed&&g.smartLabel.dispose();n.apply(this,
arguments)},beforeRender:function(a){var g=a.sender.jsVars;delete g.drLoadAttempted;delete g.waitingModule;delete g.waitingModuleError;n.apply(this,arguments)},dataLoadRequested:function(a){a=a.sender;var g=a.jsVars;delete g.loadError;a.ref&&a.options.showDataLoadingMessage?g.hcObj&&!g.hasNativeMessage&&g.hcObj.showLoading?g.hcObj.showMessage(g.msgStore.XMLLoadingText):a.ref.showChartMessage?a.ref.showChartMessage("XMLLoadingText"):g.stallLoad=!0:g.stallLoad=!0},dataLoadRequestCompleted:function(a){delete a.sender.jsVars.stallLoad},
dataLoadError:function(a){var g=a.sender,e=g.jsVars,b=g.args,k=g.options;delete e.stallLoad;e.loadError=!0;g._chartMessageImageStyle={imageHAlign:b.dataLoadErrorMessageImageHAlign||k.baseChartMessageImageHAlign,imageVAlign:b.dataLoadErrorMessageImageVAlign||k.baseChartMessageImageVAlign,imageAlpha:b.dataLoadErrorMessageImageAlpha||k.baseChartMessageImageAlpha,imageScale:b.dataLoadErrorMessageImageScale||k.baseChartMessageImageScale};g._chartMessageStyle={color:b.dataLoadErrorMessageColor||k.baseChartMessageColor,
fontFamily:b.dataLoadErrorMessageFont||k.baseChartMessageFont,fontSize:b.dataLoadErrorMessageFontSize||k.baseChartMessageFontSize};g.apiInstance.setChartMessage&&(g.apiInstance.setChartMessage(k.dataLoadErrorMessage,g),g.apiInstance.drawChartMessage());g.__state.dataFetchDuringConstruction&&delete g.__state.dataFetchDuringConstruction;n.apply(this,arguments)}},_call:function(a,g,e){a.apply(e||v,g||[])}});b.extend(u.prototype,{getSWFHTML:function(){b.raiseWarning(this,"11090611381","run","JavaScriptRenderer~getSWFHTML()",
"getSWFHTML() is not supported for JavaScript charts.")},addVariable:function(){b.raiseWarning(this,"11090611381","run","JavaScriptRenderer~addVariable()",'Use of deprecated "addVariable()". Replace with "configure()".');b.core.prototype.configure.apply(this,arguments)},getXML:function(){b.raiseWarning(this,"11171116291","run","JavaScriptRenderer~getXML()",'Use of deprecated "getXML()". Replace with "getXMLData()".');return this.getXMLData.apply(this,arguments)},setDataXML:function(){b.raiseWarning(this,
"11171116292","run","JavaScriptRenderer~setDataXML()",'Use of deprecated "setDataXML()". Replace with "setXMLData()".');return this.setXMLData.apply(this,arguments)},setDataURL:function(){b.raiseWarning(this,"11171116293","run","JavaScriptRenderer~setDataURL()",'Use of deprecated "SetDataURL()". Replace with "setXMLUrl()".');return this.setXMLUrl.apply(this,arguments)},hasRendered:function(){return!(!this.jsVars.hcObj||!this.jsVars.hcObj.hasRendered)},setTransparent:function(a){var g;if(g=this.jsVars)"boolean"!==
typeof a&&null!==a&&(a=!0),g.transparent=null===a?!1:!0===a?!0:!1}});b.extend(b.core,{_fallbackJSChartWhenNoFlash:function(){v.swfobject.hasFlashPlayerVersion(b.core.options.requiredFlashPlayerVersion)||b.renderer.setDefault("javascript")},_enableJSChartsForSelectedBrowsers:function(a){void 0!==a&&null!==a&&b.renderer.setDefault((new RegExp(a)).test(v.navigator.userAgent)?"javascript":"flash")},_doNotLoadExternalScript:function(a){var g,e;for(g in a)e=g.toLowerCase(),M[e]&&(U[e]=!!a[g])},_preloadJSChartModule:function(){throw"NotImplemented()";
}});b.renderer.register("javascript",u);A||H?b.renderer.setDefault("javascript"):v.swfobject&&v.swfobject.hasFlashPlayerVersion&&!v.swfobject.hasFlashPlayerVersion(b.core.options.requiredFlashPlayerVersion)&&(b.raiseWarning(b.core,"1204111846","run","JSRenderer","Switched to JavaScript as default rendering due to absence of required Flash Player."),b.renderer.setDefault("javascript"))}]);Q.register("module",["private","modules.renderer.polyfill",function(){"function"!=typeof Object.create&&(Object.create=
function(){function b(){}var J=Object.prototype.hasOwnProperty;return function(C){var H,A,u;if("object"!=typeof C)throw new TypeError("Object prototype may only be an Object or null");b.prototype=C;u=new b;b.prototype=null;if(1<arguments.length)for(A in H=Object(arguments[1]),H)J.call(H,A)&&(u[A]=H[A]);return u}}());Array.prototype.indexOf||(Array.prototype.indexOf=function(b,J){var C,H,A;if(null==this)throw new TypeError('"this" is null or not defined');H=Object(this);A=H.length>>>0;if(0===A)return-1;
C=+J||0;Infinity===Math.abs(C)&&(C=0);if(C>=A)return-1;for(C=Math.max(0<=C?C:A-Math.abs(C),0);C<A;){if(C in H&&H[C]===b)return C;C++}return-1});Array.prototype.forEach||(Array.prototype.forEach=function(b,J){var C,H,A,u,a;if(null==this)throw new TypeError(" this is null or not defined");A=Object(this);u=A.length>>>0;if("function"!==typeof b)throw new TypeError(b+" is not a function");1<arguments.length&&(C=J);for(H=0;H<u;)H in A&&(a=A[H],b.call(C,a,H,A)),H++});Array.prototype.indexOf||(Array.prototype.indexOf=
function(b,J){var C;if(null==this)throw new TypeError('"this" is null or not defined');var H=Object(this),A=H.length>>>0;if(0===A)return-1;C=+J||0;Infinity===Math.abs(C)&&(C=0);if(C>=A)return-1;for(C=Math.max(0<=C?C:A-Math.abs(C),0);C<A;){if(C in H&&H[C]===b)return C;C++}return-1});"function"!=typeof Object.create&&(Object.create=function(){function b(){}var J=Object.prototype.hasOwnProperty;return function(C){var H,A,u;if("object"!=typeof C)throw TypeError("Object prototype may only be an Object or null");
b.prototype=C;H=new b;b.prototype=null;if(1<arguments.length)for(u in A=Object(arguments[1]),A)J.call(A,u)&&(H[u]=A[u]);return H}}());Function.prototype.bind||(Function.prototype.bind=function(b){if("function"!==typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var J=Array.prototype.slice.call(arguments,1),C=this,H=function(){},A=function(){return C.apply(this instanceof H?this:b,J.concat(Array.prototype.slice.call(arguments)))};this.prototype&&
(H.prototype=this.prototype);A.prototype=new H;return A});Array.prototype.reduce||(Array.prototype.reduce=function(b){if(null==this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!==typeof b)throw new TypeError(b+" is not a function");var J=Object(this),C=J.length>>>0,H=0,A;if(2==arguments.length)A=arguments[1];else{for(;H<C&&!(H in J);)H++;if(H>=C)throw new TypeError("Reduce of empty array with no initial value");A=J[H++]}for(;H<C;H++)H in J&&(A=b(A,J[H],H,
J));return A});Object.keys||(Object.keys=function(){var b=Object.prototype.hasOwnProperty,J=!{toString:null}.propertyIsEnumerable("toString"),C="toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "),H=C.length;return function(A){if("object"!==typeof A&&("function"!==typeof A||null===A))throw new TypeError("Object.keys called on non-object");var u=[],a;for(a in A)b.call(A,a)&&u.push(a);if(J)for(a=0;a<H;a++)b.call(A,C[a])&&u.push(C[a]);return u}}());
Array.prototype.map||(Array.prototype.map=function(b){var J,C,H;if(null==this)throw new TypeError("this is null or not defined");var A=Object(this),u=A.length>>>0;if("function"!==typeof b)throw new TypeError(b+" is not a function");1<arguments.length&&(J=arguments[1]);C=Array(u);for(H=0;H<u;){var a;H in A&&(a=A[H],a=b.call(J,a,H,A),C[H]=a);H++}return C});Array.prototype.filter||(Array.prototype.filter=function(b){if(void 0===this||null===this)throw new TypeError;var J=Object(this),C=J.length>>>0;
if("function"!==typeof b)throw new TypeError;for(var H=[],A=2<=arguments.length?arguments[1]:void 0,u=0;u<C;u++)if(u in J){var a=J[u];b.call(A,a,u,J)&&H.push(a)}return H});var b=this.window.Node;b&&!b.prototype.contains&&(b.prototype.contains=function(b){for(;b=b.parentNode;)if(b===this)return!0;return!1})}]);Q&&Q.register("module",["private","vendor.svgdecanvo",function(){var b=this.window,v=this.hcLib;(function(b){var v=b.document,H={},A={},u;u=function(a,b,q,M,v,N,E){var r={svg:"",context:"",callBack:"",
imageArr:[],canvas:"",dimention:{}};if(!(this instanceof u))throw"This function should be used as class";this._getStore=function(a){return"undefined"!=typeof r[a]?r[a]:!1};this._setStore=function(a,b){"undefined"!=typeof r[a]&&(r[a]=b)};this._setStore("dimention",{x:q,y:M,width:v,height:N});a&&this.setSVG(a);b&&this.setContext(b);E&&this.setCallback(E);this.drawOnCanvas()};u.prototype.setContext=function(a){var b;if(a.getContext&&a.getContext("2d"))b=a.getContext("2d"),this._setStore("canvas",a),
this._setStore("context",b);else throw"Please provide valid canvas";};u.prototype.getContext=function(){return this._getStore("context")};u.prototype.setSVG=function(a){if("undefined"!=typeof a.documentElement)this._setStore("svg",a);else if("<"==a.substr(0,1))a=A.StrToDom(a),this._setStore("svg",a);else throw"Please provide valid SVG";};u.prototype.getSVG=function(){return this._getStore("svg")};u.prototype.setCallback=function(a){"function"===typeof a&&this._setStore("callBack",a)};u.prototype.getCallback=
function(){return this._getStore("callBack")};u.prototype.drawOnCanvas=function(a,b,q,M,u,N,E){var r,k,m,n;a&&this.setSVG(a);b&&this.setContext(b);E&&this.setCallback(E);b=b||this._getStore("canvas");m=this._getStore("dimention");E=this.getCallback();r=this.getContext();(a=this.getSVG())&&r&&(n=A.getSvgDimention(a),k=n.width,b=n.height,q=q||m.x||0,M=M||m.y||0,u=u||m.width||k,N=N||m.height||b,k=n.width?u/k:1,b=n.height?N/b:1,A.startTransform("translate("+q+","+M+") scale("+k+","+b+")",r),r.save(),
r.fillStyle="#ffffff",r.fillRect(0,0,u,N),r.restore(),A.storeImagesInArr(this),A.drawNodes([a],[],this,r,function(){"function"===typeof E&&E();A.resetTransform(r)}))};H.common=function(a,b,q,M,u){var N=a.childNodes,E,r=function(){a.attributes&&M.restore();u&&u()};for(E in b)b.hasOwnProperty(E)&&"class"!=b[E].name&&"id"!=b[E].name&&"transform"!=b[E].name&&"clip-path"!=b[E].name&&"object"==typeof b[E]&&a.attributes&&!a.attributes[b[E].name]&&a.setAttribute([b[E].name],b[E].value);if(a.attributes&&a.attributes.style)for(E in styleArr=
a.attributes.style.value.replace(/;$/,"").split(";"),styleArr)if(styleArr.hasOwnProperty(E)&&(styleName=styleArr[E].split(":")[0].trim(),!a.attributes[styleName]||"undefined"==a.attributes[styleName].value))try{a.setAttribute(styleName,styleArr[E].split(":")[1].trim())}catch(k){}a.attributes&&(M.save(),a.attributes.transform&&A.startTransform(a.attributes.transform.value,M),a.attributes["clip-path"]&&A.applyClip(a.attributes["clip-path"].value,M,q));if(0===N.length||1===N.length&&!N[0].tagName)if("undefined"!==
typeof a.tagName)if(b="draw"+a.tagName,H[b])if(a.attributes.display&&"none"==a.attributes.display.value)r();else H[b](a,M,q,"draw",r);else r();else r();else A.drawNodes(N,"svg"==a.tagName?[]:a.attributes,q,M,r)};H.drawtext=function(a,b,q,M,u){this.drawtspan(a,b,q,M,u)};H.drawtspan=function(a,u,q,M,H){var N=a.innerHTML||a.textContent,E=a.attributes.x?a.attributes.x.value:0,r=a.attributes.y?a.attributes.y.value:0,k=a.attributes.dx?a.attributes.dx.value:0,m=a.attributes.dy?a.attributes.dy.value:0,n=
"serief",L="normal",g="16px",l=[],B;v.getElementsByTagName("body")[0]&&(B=b.getComputedStyle(v.getElementsByTagName("body")[0],null),B.getPropertyValue("font-family")&&(n=B.getPropertyValue("font-family")),B.getPropertyValue("font-weight")&&(L=B.getPropertyValue("font-weight")),B.getPropertyValue("font-size")&&(g=B.getPropertyValue("font-size")));n=a.attributes["font-family"]?a.attributes["font-family"].value:n;L=a.attributes["font-weight"]?a.attributes["font-weight"].value:L;B=a.attributes["text-anchor"]?
a.attributes["text-anchor"].value:"start";g=a.attributes["font-size"]?a.attributes["font-size"].value:g;E=Number(E)+Number(k);r=Number(r)+Number(m);N=N.trim();B="middle"==B?"center":B;u.save();u.font=L+" "+g+" "+n;u.textAlign=B;if("draw"===M){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)A.applyFillEffect(a,u,q,l),u.fillText(N,E,r),A.endFillEffect(a,u);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)A.applyStrokeEffect(a,u,q,l),u.strokeText(N,
E,r),A.endStrokeEffect(a,u)}u.restore();"function"===typeof H&&H()};H.drawcircle=function(a,b,q,u,v){var N=Number(a.attributes.cx.value),E=Number(a.attributes.cy.value),r=Number(a.attributes.r.value),k=[];b.beginPath();b.arc(N,E,r,0,2*Math.PI);A.bBoxFromPoint([N,1*N+1*r,1*N-1*r],[E,1*E+1*r,1*E-1*r],k);if("draw"===u){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)A.applyFillEffect(a,b,q,k),b.fill(),A.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=
a.attributes.stroke.value)A.applyStrokeEffect(a,b,q,k),b.stroke(),A.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};H.drawrect=function(a,b,q,u,v){var N=Number(a.attributes.x.value),E=Number(a.attributes.y.value),r=a.attributes.rx?Number(a.attributes.rx.value):0,k=a.attributes.ry?Number(a.attributes.ry.value):0,m=Number(a.attributes.height.value),n=Number(a.attributes.width.value),L=[];A.bBoxFromPoint([N,N+n],[E,E+m],L);b.beginPath();b.moveTo(N+r,E);b.lineTo(N+n-r,E);b.quadraticCurveTo(N+
n,E,N+n,E+k);b.lineTo(N+n,E+m-k);b.quadraticCurveTo(N+n,E+m,N+n-r,E+m);b.lineTo(N+r,E+m);b.quadraticCurveTo(N,E+m,N,E+m-k);b.lineTo(N,E+k);b.quadraticCurveTo(N,E,N+r,E);if("draw"===u){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)A.applyFillEffect(a,b,q,L),b.fill(),A.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)A.applyStrokeEffect(a,b,q,L),b.stroke(),A.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};H.drawellipse=
function(a,b,q,u,v){var N=Number(a.attributes.cx.value),E=Number(a.attributes.cy.value),r=Number(a.attributes.rx.value),k=Number(a.attributes.ry.value),m=.5522848*r,n=.5522848*k,L=N+r,g=E+k,l=[];b.beginPath();b.moveTo(N-r,E);b.bezierCurveTo(N-r,E-n,N-m,E-k,N,E-k);b.bezierCurveTo(N+m,E-k,L,E-n,L,E);b.bezierCurveTo(L,E+n,N+m,g,N,g);b.bezierCurveTo(N-m,g,N-r,E+n,N-r,E);A.bBoxFromPoint([N+r,N-r],[E+k,E-k],l);if("draw"===u){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)A.applyFillEffect(a,
b,q,l),b.fill(),A.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)A.applyStrokeEffect(a,b,q,l),b.stroke(),A.endStrokeEffect(a,b)}b.closePath();"function"===typeof v&&v()};H.drawimage=function(a,b,q,u,v){var N=a.attributes.x?Number(a.attributes.x.value):0,E=a.attributes.y?Number(a.attributes.y.value):0,r=a.attributes.height?Number(a.attributes.height.value):0,k=a.attributes.width?Number(a.attributes.width.value):0,m,n=q._getStore("imageArr");b.save();
a.attributes.opacity&&(b.globalAlpha=a.attributes.opacity.value);a.attributes["xlink:href"]?(m=a.attributes["xlink:href"].value,"complete"===n[m].status?(b.drawImage(n[m].obj,N,E,k,r),b.globalAlpha=1,b.restore(),"function"===typeof v&&v()):"error"===n[m].status?(b.globalAlpha=1,b.restore(),"function"===typeof v&&v()):"progress"===n[m].status?(n[m].callback=function(){b.drawImage(n[m].obj,N,E,k,r);b.globalAlpha=1;b.restore();"function"===typeof v&&v()},n[m].errCallback=function(){b.globalAlpha=1;b.restore();
"function"===typeof v&&v()}):(b.globalAlpha=1,b.restore(),"function"===typeof v&&v())):(b.globalAlpha=1,b.restore(),"function"===typeof v&&v())};H.drawpath=function(a,b,q,u,v){var N=a.attributes.d.value.match(/[a-z][^a-z"]*/ig),E=[],r,k,m,n=0,L=0,g;b.beginPath();for(r in N)if(N.hasOwnProperty(r))switch(k=N[r].substring(0,1),m=A.getArgsAsArray(N[r].substring(1,N[r].length)),k){case "M":n=Number(m[0]);L=Number(m[1]);b.moveTo(n,L);break;case "m":n+=Number(m[0]);L+=Number(m[1]);b.moveTo(n,L);break;case "L":for(g=
0;m[g];g+=2)A.bBoxFromPoint([n,m[g]],[L,m[g+1]],E),n=Number(m[g]),L=Number(m[g+1]),b.lineTo(n,L);break;case "l":for(g=0;m[g];g+=2)A.bBoxFromPoint([n,1*n+1*m[g]],[L,1*L+1*m[g+1]],E),n+=Number(m[g]),L+=Number(m[g+1]),b.lineTo(n,L);break;case "V":for(g=0;m[g];g+=1)A.bBoxFromPoint([n],[L,m[g]],E),L=Number(m[g]),b.lineTo(n,L);break;case "v":for(g=0;m[g];g+=1)A.bBoxFromPoint([n],[L,1*L+1*m[g]],E),L+=Number(m[g]),b.lineTo(n,L);break;case "H":for(g=0;m[g];g+=1)A.bBoxFromPoint([n,m[g]],[L],E),n=Number(m[g]),
b.lineTo(n,L);break;case "h":for(g=0;m[g];g+=1)A.bBoxFromPoint([n,1*n+1*m[g]],[L],E),n+=Number(m[g]),b.lineTo(n,L);break;case "Q":for(g=0;m[g];g+=4)A.qBezierBBox(n,L,m[g],m[g+1],m[g+2],m[g+3],E),b.quadraticCurveTo(Number(m[g]),Number(m[g+1]),Number(m[g+2]),Number(m[g+3])),n=Number(m[g+2]),L=Number(m[g+3]);break;case "q":for(g=0;m[g];g+=4)A.qBezierBBox(n,L,n+1*m[g],L+1*m[g+1],1*n+1*m[g+2],1*L+1*m[g+3],E),b.quadraticCurveTo(n+1*m[g],L+1*m[g+1],n+=Number(m[g+2]),L+=Number(m[g+3]));break;case "C":for(g=
0;m[g];g+=6)A.cBezierBBox(n,L,m[g],m[g+1],m[g+2],m[g+3],m[g+4],m[g+5],E),b.bezierCurveTo(m[g],m[g+1],m[g+2],m[g+3],m[g+4],m[g+5]),n=Number(m[g+4]),L=Number(m[g+5]);break;case "c":for(g=0;m[g];g+=6)A.cBezierBBox(n,L,n+1*m[g],1*L+1*m[g+1],n+1*m[g+2],1*L+1*m[g+3],n+1*m[g+4],1*L+1*m[g+5],E),b.bezierCurveTo(n+Number(m[g]),L+Number(m[g+1]),n+Number(m[g+2]),L+Number(m[g+3]),n+=Number(m[g+4]),L+=Number(m[g+5]));break;case "a":case "A":for(g=0;m[g];g+=7){var l=Number(m[g]),B=Number(m[g+1]),e,V,p,T,K,t,Z,P,
S,z,R,w,F,X;e=Math.PI/180*Number(m[g+2]);V=Number(m[g+3]);p=Number(m[g+4]);T=Number(m[g+5]);K=Number(m[g+6]);t=Math.cos(e)*(n-T)/2+Math.sin(e)*(L-K)/2;Z=-Math.sin(e)*(n-T)/2+Math.cos(e)*(L-K)/2;l=0>l?-l:l;B=0>B?-B:B;w=Math.pow(t,2)/Math.pow(l,2)+Math.pow(Z,2)/Math.pow(B,2);1<w&&(l*=Math.sqrt(w),B*=Math.sqrt(w));w=l>B?l:B;F=l>B?1:l/B;X=l>B?B/l:1;V=(V==p?-1:1)*Math.sqrt((Math.pow(l,2)*Math.pow(B,2)-Math.pow(l,2)*Math.pow(Z,2)-Math.pow(B,2)*Math.pow(t,2))/(Math.pow(l,2)*Math.pow(Z,2)+Math.pow(B,2)*Math.pow(t,
2)));isNaN(V)&&(V=0);P=V*l*Z/B;S=-V*B*t/l;z=P*Math.cos(e)-S*Math.sin(e)+(n+T)/2;R=P*Math.sin(e)+S*Math.cos(e)+(L+K)/2;V=A.angleBetweenVectors(1,0,(t-P)/l,(Z-S)/B);t=A.angleBetweenVectors((t-P)/l,(Z-S)/B,(-t-P)/l,(-Z-S)/B);0===p&&0<t&&(t-=Math.PI/180*360);1==p&&0>t&&(t+=Math.PI/180*360);if(0===l&&0===B){b.lineTo(T,K);break}b.save();l=A.combineTransformMatrix([[1,0,z,0,1,R],[Math.cos(e),Math.sin(e),0,Math.sin(e),Math.cos(e),0],[F,0,0,0,X,0]]);b.transform(l[0],l[3],l[1],l[4],l[2],l[5]);b.arc(0,0,w,V,
V+t,1-p);b.restore();A.arcBBox(0,0,w,V,V+t,1-p,[l[0],l[3],l[1],l[4],l[2],l[5]],E);"A"==k?(n=Number(m[g+5]),L=Number(m[g+6])):(n+=Number(m[g+5]),L+=Number(m[g+6]))}break;case "Z":case "z":b.closePath()}if("draw"===u){if(!a.attributes.fill||a.attributes.fill&&"none"!=a.attributes.fill.value)A.applyFillEffect(a,b,q,E),b.fill(),A.endFillEffect(a,b);if(!a.attributes.stroke||a.attributes.stroke&&"none"!=a.attributes.stroke.value)A.applyStrokeEffect(a,b,q,E),b.stroke(),A.endStrokeEffect(a,b);v()}};A.drawNodes=
function(a,b,q,u,v){var N=a.length,E=-1,r=0,k=0,m=function(){var n;E+=1;E<N?(n=a[E],n.tagName&&"defs"===n.tagName&&(E+=1,n=a[E]),n.attributes&&(n.attributes.dy&&(k=n.attributes.dy.value=1*n.attributes.dy.value+1*k),n.attributes.dx&&(r=n.attributes.dx.value=1*n.attributes.dx.value+1*r)),H.common(n,b,q,u,m)):v&&v()};m()};A.getSvgDimention=function(a){var b={width:0,height:0};node=a.childNodes&&a.childNodes[0]&&a.childNodes[0].attributes;b.width=Number(node.width&&node.width.value||0);b.height=Number(node.height&&
node.height.value||0);return b};A.storeImagesInArr=function(a){var b=a.getSVG(),q,u;q=a._getStore("imageArr");a=b.getElementsByTagName("image");for(u in a)a.hasOwnProperty(u)&&a[u].attributes&&a[u].attributes["xlink:href"]&&(b=a[u].attributes["xlink:href"].value,q[b]||(q[b]=[],q[b].status="progress",q[b].callback=null,q[b].obj=new Image,q[b].obj.onload=function(a){return function(){var b=q[a].callback;b?(q[a].status="complete",b()):q[a].status="complete"}}(b),q[b].obj.onerror=function(a){return function(){var b=
q[a].errCallback;b?(q[a].status="error",b()):q[a].status="error"}}(b),q[b].obj.src=b))};A.startTransform=function(a,b){var q=a.match(/[^\s][a-z,0-9.\-(\s]+\)/gi),u,v;for(v in q)q.hasOwnProperty(v)&&(-1<q[v].indexOf("matrix")&&(u=A.stringToArgs(q[v]),b.transform(u[0],u[1],u[2],u[3],u[4],u[5])),-1<q[v].indexOf("translate")&&(u=A.stringToArgs(q[v]),b.translate(u[0]||0,u[1]||0)),-1<q[v].indexOf("rotate")&&(u=A.stringToArgs(q[v]),3==u.length?(b.translate(u[1],u[2]),b.rotate(Math.PI/180*u[0]),b.translate(-u[1],
-u[2])):b.rotate(Math.PI/180*u[0])),-1<q[v].indexOf("scale")&&(u=A.stringToArgs(q[v]),1==u.length?b.scale(u[0]||1,u[0]||1):b.scale(u[0]||1,u[1]||1)),-1<q[v].indexOf("skewX")&&(u=A.stringToArgs(q[v]),b.transform(1,0,Math.tan(Math.PI/180*u[0]),1,0,0)),-1<q[v].indexOf("skewY")&&(u=A.stringToArgs(q[v]),b.transform(1,Math.tan(Math.PI/180*u[0]),0,1,0,0)))};A.resetTransform=function(a){a.setTransform(1,0,0,1,0,0)};A.stringToArgs=function(a){a=/\(([^\)]+)/.exec(a)[1];return A.getArgsAsArray(a)};A.getArgsAsArray=
function(a){var b;a=a.trim().split(/[\s,]+/);for(b=0;b<a.length;b++)a[b].trim(),0===a[b].length&&a.splice(b,1);return a};A.applyFillEffect=function(a,b,q,u){b.globalAlpha=a.attributes["fill-opacity"]&&"none"!=a.attributes["fill-opacity"].value?a.attributes["fill-opacity"].value:1;a.attributes.fill&&-1<a.attributes.fill.value.indexOf("url(")?(a=A.getFillStyleById(/url\(.*#([^\)'"]+)/.exec(a.attributes.fill.value)[1],b,q,u),b.fillStyle=a):b.fillStyle=a.attributes.fill?a.attributes.fill.value:"#000000"};
A.endFillEffect=function(a,b){b.globalAlpha=1};A.applyStrokeEffect=function(a,b,q,u){a.attributes["stroke-opacity"]&&"none"!=a.attributes["stroke-opacity"].value&&(b.globalAlpha=a.attributes["stroke-opacity"].value);a.attributes["stroke-width"]&&(b.lineWidth=a.attributes["stroke-width"].value,0===a.attributes["stroke-width"].value&&(b.globalAlpha=0));a.attributes["stroke-linecap"]&&"none"!=a.attributes["stroke-linecap"].value&&(b.lineCap=a.attributes["stroke-linecap"].value);a.attributes["stroke-linejoin"]&&
"none"!=a.attributes["stroke-linejoin"].value&&(b.lineJoin=a.attributes["stroke-linejoin"].value);a.attributes["stroke-dasharray"]&&"none"!=a.attributes["stroke-dasharray"].value&&b.setLineDash&&b.setLineDash(A.getArgsAsArray(a.attributes["stroke-dasharray"].value));b.strokeStyle=a.attributes.stroke?a.attributes.stroke.value:"#000000"};A.endStrokeEffect=function(a,b){a.attributes["stroke-opacity"]&&"none"!=a.attributes["stroke-opacity"].value&&(b.globalAlpha=1,b.setLineDash&&b.setLineDash([]),b.lineWidth=
1);b.globalAlpha=1};A.applyClip=function(a,b,q){var u=q.getSVG(),v,N;if(-1!==a.indexOf("url(")){a=/url\(.*#([^\)'"]+)/.exec(a)[1];u=u.getElementById(a);u.attributes&&(b.save(),u.attributes.transform&&A.startTransform(u.attributes.transform.value,b));a=u.childNodes;for(v in a)a.hasOwnProperty(v)&&a[v].tagName&&a[v].constructor!==Array&&(N="draw"+a[v].tagName,a[v].attributes&&(b.save(),a[v].attributes.transform&&A.startTransform(a[v].attributes.transform.value,b)),H[N]&&(H[N](a[v],b,q,"clip"),b.closePath()),
a[v].attributes&&b.restore());u.attributes&&b.restore();b.clip()}};A.getFillStyleById=function(a,b,q,u){a=q.getSVG().getElementById(a);return"linearGradient"==a.tagName?A.getLinearGradient(a,b,u):"radialGradient"==a.tagName?A.getRadialGradient(a,b,u):"#FFFFFF"};A.getLinearGradient=function(a,b,q){var u=a.attributes.x1?A.getPercentValue(a.attributes.x1.value,q.xMax-q.xMin,q.xMin):0,v=a.attributes.y1?A.getPercentValue(a.attributes.y1.value,q.yMax-q.yMin,q.yMin):0,N=a.attributes.x2?A.getPercentValue(a.attributes.x2.value,
q.xMax-q.xMin,q.xMin):0;q=a.attributes.y2?A.getPercentValue(a.attributes.y2.value,q.yMax-q.yMin,q.yMin):0;var E;linGrad=b.createLinearGradient(u,v,N,q);a=a.childNodes;for(E in a)a.hasOwnProperty(E)&&a[E].attributes&&a[E].attributes["stop-color"]&&(b=A.toRGB(a[E].attributes["stop-color"].value),u=a[E].attributes["stop-opacity"]?a[E].attributes["stop-opacity"].value:1,b.status?linGrad.addColorStop(A.getPercentValue(a[E].attributes.offset.value,1,0),"rgba("+b.r+","+b.g+","+b.b+","+Number(u)+")"):linGrad.addColorStop(A.getPercentValue(a[E].attributes.offset.value,
1,0),a[E].attributes["stop-color"].value));return linGrad};A.getRadialGradient=function(a,b,q){var u=a.attributes.cx?A.getPercentValue(a.attributes.cx.value,q.xMax-q.xMin,q.xMin):q.xMin+.5*(q.xMax-q.xMin),v=a.attributes.cy?A.getPercentValue(a.attributes.cy.value,q.yMax-q.yMin,q.yMin):q.yMin+.5*(q.yMax-q.yMin),N=a.attributes.fx?A.getPercentValue(a.attributes.fx.value,q.xMax-q.xMin,q.xMin):q.xMin+.5*(q.xMax-q.xMin),E=a.attributes.fy?A.getPercentValue(a.attributes.fy.value,q.yMax-q.yMin,q.yMin):q.yMin+
.5*(q.yMax-q.yMin);q=a.attributes.r?A.getPercentValue(a.attributes.r.value,(q.yMax-q.yMin+q.xMax-q.xMin)/2,0):A.getPercentValue("50%",(q.yMax-q.yMin+q.xMax-q.xMin)/2,0);var r;b=b.createRadialGradient(N,E,0,u,v,q);a=a.childNodes;for(r in a)a.hasOwnProperty(r)&&a[r].attributes&&a[r].attributes["stop-color"]&&(u=A.toRGB(a[r].attributes["stop-color"].value),v=a[r].attributes["stop-opacity"]?a[r].attributes["stop-opacity"].value:1,u.status?b.addColorStop(A.getPercentValue(a[r].attributes.offset.value,
1,0),"rgba("+u.r+","+u.g+","+u.b+","+Number(v)+")"):b.addColorStop(A.getPercentValue(a[r].attributes.offset.value,1,0),a[r].attributes["stop-color"].value));return b};A.getPercentValue=function(a,b,q){return-1!=a.indexOf("%")?(a=/(\d.*)%/.exec(a)[1],100<a&&(a=100),a*b/100+1*q):1<a?a:a*b+1*q};A.bBoxFromPoint=function(a,b,q){"undefined"!==typeof q.xMin&&(a.push(q.xMin,q.xMax),b.push(q.yMin,q.yMax));q.xMin=Math.min.apply(this,a);q.xMax=Math.max.apply(this,a);q.yMin=Math.min.apply(this,b);q.yMax=Math.max.apply(this,
b)};A.arcBBox=function(a,b,q,u,v,N,E,r){var k,m,n;E instanceof Array&&(a=a*E[0]+a*E[2]+E[4],b=b*E[1]+b*E[3]+E[5]);n=function(a,b,l){a=(a+2*Math.PI)%(2*Math.PI);b=(b+2*Math.PI)%(2*Math.PI);if(a<=b)return a<=l&&l<=b?!0:!1;if(a>=b)return a>=l&&l>=b?!1:!0};E=u%(2*Math.PI);k=v%(2*Math.PI);N&&(E=v%(2*Math.PI),k=u%(2*Math.PI));N=a+q*Math.cos(E);u=b+q*Math.sin(E);m=a+q*Math.cos(k);v=b+q*Math.sin(k);N=[N,m];u=[u,v];n(E,k,0)&&(N.push(1*a+1*q),u.push(b));n(E,k,.5*Math.PI)&&(N.push(a),u.push(1*b+1*q));n(E,k,
Math.PI)&&(N.push(a-1*q),u.push(b));n(E,k,1.5*Math.PI)&&(N.push(a),u.push(b-1*q));a=Math.max.apply(this,N);b=Math.min.apply(this,N);q=Math.max.apply(this,u);E=Math.min.apply(this,u);"undefined"!==typeof r.xMin?(r.xMin=Math.min(b,r.xMin),r.xMax=Math.max(a,r.xMax),r.yMin=Math.min(E,r.yMin),r.yMax=Math.max(q,r.yMax)):(r.xMin=b,r.xMax=a,r.yMin=E,r.yMax=q)};A.qBezierBBox=function(a,b,q,u,v,N,E){var r=1*a-2*q+1*v,k=1*b-2*u+1*N;0===r||0===k?(u=Math.max(a,v),a=Math.min(a,v),v=Math.max(b,N),b=Math.min(b,N)):
(r=(a-q)/r,k=(b-u)/k,q=a*Math.pow(1-r,2)+2*q*(1-r)*r+v*Math.pow(r,2),k=b*Math.pow(1-k,2)+2*u*(1-k)*k+N*Math.pow(k,2),u=Math.max(a,v,q),a=Math.min(a,v,q),v=Math.max(b,N,k),b=Math.min(b,N,k));"undefined"!==typeof E.xMin?(E.xMin=Math.min(a,E.xMin),E.xMax=Math.max(u,E.xMax),E.yMin=Math.min(b,E.yMin),E.yMax=Math.max(v,E.yMax)):(E.xMin=a,E.xMax=u,E.yMin=b,E.yMax=v)};A.cBezierBBox=function(a,b,q,u,v,N,E,r,k){var m,n,L,g,l,B,e;null===v&&null===N&&(q=a+2/3*(q-a),v=b+2/3*(u-b),u=q+1/3*(E-a),N=v+1/3*(r-b));
e=function(a,b,e,l,g){return a*Math.pow(1-g,3)+3*b*g*Math.pow(1-g,2)+3*e*g*g*(1-g)+l*g*g*g};L=3*E-9*v+9*q-3*a;g=6*a-12*q+6*v;l=Math.pow(g,2)-4*L*(3*q-3*a);n=m=a;E<m&&(m=E);E>n&&(n=E);0<=l&&(B=(-g+Math.sqrt(l))/(2*L),0<B&&1>B&&(B=e(a,q,v,E,B),B<m&&(m=B),B>n&&(n=B)),L=(-g-Math.sqrt(l))/(2*L),0<L&&1>L&&(B=e(a,q,v,E,L),B<m&&(m=B),B>n&&(n=B)));L=3*r-9*N+9*u-3*b;g=6*b-12*u+6*N;l=Math.pow(g,2)-4*L*(3*u-3*b);q=a=b;r<a&&(a=r);r>q&&(q=r);0<=l&&(B=(-g+Math.sqrt(l))/(2*L),0<B&&1>B&&(v=e(b,u,N,r,B),v<a&&(a=v),
v>q&&(q=v)),L=(-g-Math.sqrt(l))/(2*L),0<L&&1>L&&(v=e(b,u,N,r,L),v<a&&(a=v),v>q&&(q=v)));"undefined"!==typeof k.xMin?(k.xMin=Math.min(m,k.xMin),k.xMax=Math.max(n,k.xMax),k.yMin=Math.min(a,k.yMin),k.yMax=Math.max(q,k.yMax)):(k.xMin=m,k.xMax=n,k.yMin=a,k.yMax=q)};A.combineTransformMatrix=function(a){var b=a.length-1,q;if(0>=b)return a[0];q=a[0];for(i=1;i<=b;i++)q[0]=q[0]*a[i][0]+q[1]*a[i][3],q[1]=q[0]*a[i][1]+q[1]*a[i][4],q[2]=q[0]*a[i][2]+q[1]*a[i][5]+1*q[2],q[3]=q[3]*a[i][0]+q[4]*a[i][3],q[4]=q[3]*
a[i][1]+q[4]*a[i][4],q[5]=q[3]*a[i][2]+q[4]*a[i][5]+1*q[5];return q};A.angleBetweenVectors=function(a,b,q,u){return(a*u<b*q?-1:1)*Math.acos((a*q+b*u)/(Math.sqrt(Math.pow(a,2)+Math.pow(b,2))*Math.sqrt(Math.pow(q,2)+Math.pow(u,2))))};A.toRGB=function(a){var b={r:0,g:0,b:0,status:0},q,u;q=function(a){for(u in a)a.hasOwnProperty(u)&&(0>a[u]||isNaN(a[u])?a[u]=0:255<a[u]&&(a[u]=255));return b={r:a[0],g:a[1],b:a[2],status:1}};a=a.trim();a.match(/^rgb\(|^rgba\(/i)?(a=/\(\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})/.exec(a),
q([parseInt(a[1]),parseInt(a[2]),parseInt(a[3])])):a.match(/^#/)&&(a=/(\w{2})(\w{2})(\w{2})/.exec(a),q([parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)]));return b};A.StrToDom=function(a){var u;b.DOMParser?(u=new DOMParser,u=u.parseFromString(a,"text/xml")):(u=new ActiveXObject("Microsoft.XMLDOM"),u.async=!1,u.loadXML(a));return u};b.SvgDeCanvo=u})(this.window||window);b.SvgDeCanvo&&(v.SvgDeCanvo=b.SvgDeCanvo,b.SvgDeCanvo=void 0)}]);Q.register("module",["private","modules.renderer.js-lib-attr",
function(){var b={},v=this.hcLib||(this.hcLib={}),J=Math.max,C=v.attrTypeNum=1,H=v.attrTypeBool=2;v.parseConfiguration=function(A,u,a,J,q,M){var U=v.attribDefs||b,N,E,r,k=1,m;J=J||b;M=M||b;q=q||{};for(N in A)if(!J[N]&&((E=A[N])||!1===E||0===E))switch(r=(m=M[N]||U[N])&&m.type,r){case C:E=Number(E);isNaN(E)||(u[N]=E);break;case H:E=Number(E);isNaN(E)||(u[N]=!!E);break;default:u[N]=E}if(a)for(N in u)void 0===u[N]&&(m=M[N]||U[N])&&m.pAttr&&(u[N]=a[m.pAttr]);for(;k;)for(N in k=0,u)void 0===u[N]&&(m=M[N]||
U[N])&&(m.attr?void 0!==(E=u[m.attr])&&(u[N]=E,k+=1):m.parser&&void 0!==(E=m.parser(u,a,q))&&(u[N]=E,k+=1))};v.setAttribDefs=function(b,u){var a=v.attribDefs,C,q;"string"===typeof b?(C={},C[b]=u):C=b;for(q in C)a[q]||(a[q]=C[q])};v.hasAttribDefs=function(b){return!!v.attribDefs[b]};v.attribDefs={setBorderWidth:{type:C,pAttr:"plotborderthickness"},plotborderthickness:{type:C,pAttr:"plotborderthickness"},showBorderEffect:{parser:function(b,u){return 1===+u.showplotborder&&.1===u.plotborderthickness?
1:0}},alphaanimation:{type:C},showplotborder:{type:C,pAttr:"showplotborder"},zeroplanethickness:{type:C},showzeroplaneontop:{type:C},stickytracking:{type:C},usemessagelog:{type:C},showtooltip:{type:C,pAttr:"showtooltip"},seriesnameintooltip:{type:C},plothovereffect:{type:C,attr:"anchorhovereffect"},anchorhovereffect:{type:C,attr:"showhovereffect"},showhovereffect:{type:C,attr:"drawcrossline"},drawcrossline:{type:C},linethickness:{type:C,pAttr:"linethickness"},dashed:{type:C,pAttr:"linedashed"},linedashed:{type:C,
attr:"plotborderdashed"},plotborderdashed:{type:C,pAttr:"plotborderdashed"},linedashlen:{type:C,pAttr:"linedashlen"},linedashgap:{type:C,pAttr:"linedashgap"},anchoralpha:{pAttr:"anchoralpha"},anchorsides:{type:C,pAttr:"anchorsides"},anchorradius:{type:C,pAttr:"anchorradius"},anchorbgalpha:{pAttr:"anchorbgalpha"},anchorbgcolor:{pAttr:"anchorbgcolor"},anchorbordercolor:{pAttr:"anchorbordercolor"},anchorstartangle:{type:C,pAttr:"anchorstartangle"},anchorimageurl:{pAttr:"anchorimageurl"},anchorimagescale:{type:C,
pAttr:"anchorimagescale"},anchorimagealpha:{pAttr:"anchorimagealpha"},anchorimagepadding:{type:C,pAttr:"anchorimagepadding"},anchorborderthickness:{type:C,pAttr:"anchorborderthickness"},anchorshadow:{type:C,pAttr:"anchorshadow"},valuepadding:{type:C,pAttr:"valuepadding"},valueposition:{pAttr:"valueposition"},plotfillangle:{type:C,pAttr:"plotfillangle"},useplotgradientcolor:{type:C},rotatevalues:{type:C,pAttr:"rotatevalues"},includeinlegend:{type:C},connectnulldata:{type:C},plotfillalpha:{pAttr:"plotfillalpha"},
alpha:{pAttr:"linealpha"},linealpha:{pAttr:"plotfillalpha"},showvalues:{type:C,pAttr:"showvalues"},showpercentvalues:{type:C,parser:function(b){return b.isstacked&&b.stack100percent?1:0}},showpercentintooltip:{type:C,parser:function(b){return b.isstacked&&b.stack100percent?1:0}},stack100percent:{type:C,attr:"usepercentdistribution"},drawfullareaborder:{type:C},use3dlineshift:{type:C},parentyaxis:{type:C},radarborderthickness:{type:C},radarborderradius:{type:C},gaugeoriginx:{type:C},hasgaugeoriginx:{attr:"gaugeoriginx"},
gaugeoriginy:{type:C},hasgaugeoriginy:{attr:"gaugeoriginy"},gaugeradius:{type:C},hasgaugeradius:{attr:"gaugeradius"},showgaugeborder:{type:C},setAdaptiveMin:{type:C},adjustDiv:{type:C},axisNameWidth:{type:C},rotateAxisName:{type:C},useEllipsesWhenOverflow:{type:C},showZeroPlane:{type:C},zeroPlaneAlpha:{type:C},showZeroPlaneValue:{type:C},zeroPlaneOnTop:{type:C},trendlineThickness:{type:C},showTrendlinesOnTop:{type:C},trendlinesAreDashed:{type:C},trendlinesDashLen:{type:C},trendlinesDashGap:{type:C},
showTrendlines:{type:C},showTrendlineLabels:{type:C},showLabels:{type:C},rotateLabels:{type:C},slantLabel:{type:C},showAxisValues:{type:C},showTooltip:{type:C},maxLabelHeight:{type:C},useroundedges:{type:C,pAttr:"useroundedges"},placevaluesinside:{type:C},plotpaddingpercent:{type:C},use3dlighting:{type:C,pAttr:"use3dlighting"},usedataplotcolorforlabels:{type:C},plotspacepercent:{type:C,parser:function(b){return J(b.plotspacepercent%100,0)}},ratio:{pAttr:"plotfillratio"},base:{type:C},showMinorDivLineValues:{type:C},
numMinorDivLines:{type:C},majorTMNumber:{type:C},majorTMHeight:{type:C},showTickMarks:{type:C},majorTMThickness:{type:C},adjustTM:{type:H},minorTMNumber:{type:C},minorTMThickness:{type:C},tickMarkDistance:{type:C},placeTicksInside:{type:C},placeValuesInside:{type:C},axisValuePadding:{type:C},gridLineWidth:{type:C},showRadarBorder:{type:C},radarBorderThickness:{type:C},maxcolwidth:{type:C,parser:function(b){return Math.abs(b.maxcolwidth)}},maxbarheight:{type:C,parser:function(b){return Math.abs(b.maxbarheight)}},
plotborderalpha:{parser:function(b,u){return u.plotborderalpha||b.plotfillalpha}},autoscale:{type:C},plotborderdashlen:{type:C,pAttr:"plotborderdashlen"},plotborderdashgap:{type:C,pAttr:"plotborderdashgap"},plotfillratio:{pAttr:"plotfillratio"},drawverticaljoins:{type:C,pAttr:"drawverticaljoins"},useforwardsteps:{type:C,pAttr:"useforwardsteps"},minimizetendency:{type:C},usepercentdistribution:{type:C},stepatmiddle:{type:C}}}]);Q.register("module",["private","modules.renderer.js-lib",function(){var b=
this,v=b.window,J=b.core,C,H,A,u="https:"===v.location.protocol?"https://export.api3.fusioncharts.com/":"http://export.api3.fusioncharts.com/",a="https:"===v.location.protocol?"https://export.api3.fusioncharts.com/api/v1.0/logs":"http://export.api3.fusioncharts.com/api/v1.0/logs",O={DOWNLOAD:"download",SAVE:"save",DOWNLOADSAVE:"download-save"},q={CLIENT:"client",SERVER:"server",AUTO:"auto"},M=v.document,U=v.navigator,N=!(!v.SVGAngle&&!M.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure",
"1.1")),E=/msie/i.test(U.userAgent)&&!v.opera,r=/trident/i.test(U.userAgent)&&/rv:11/i.test(U.userAgent)&&!v.opera,k=v.parseFloat,m=/\s+/g,n=/^#?/,L=/^rgba/i,g=/[#\s]/ig,l=/\{br\}\s*/ig,B=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i,e=Math.abs,V=Math.pow,p=Math.round,T=V(2,-24),K=Object.prototype.toString,t="ontouchstart"in M,Z=t&&!(U.maxTouchPoints||U.msMaxTouchPoints),P="http://www.fusioncharts.com?BS=FCHSEvalMark&utm_source=FCS_trial&pver="+escape(b.core.version),S=/fusioncharts\.com|fusioncharts\.github\.io$/i,
z=!S.test(v.location.hostname),R=Math,w=R.max,F=R.min,X=v.Image,h={pageX:0,pageY:0},d="createTouch"in M,f=d&&!(v.navigator.maxTouchPoints||v.navigator.msMaxTouchPoints),c=b.hcLib||(b.hcLib={}),D=c.SvgDeCanvo,G=function(c){var a=c.data,d=a.chart,f=d.components.paper,h=c.state,b=ka(ra(c.originalEvent)),I=b.target||b.originalTarget||b.srcElement||b.relatedTarget||b.fromElement,l=d.components.resizeBox,g=a.layerX=b.pageX-a.chartPosLeft,D=a.layerY=b.pageY-a.chartPosTop,G=g-a.ox,k=D-a.oy,t=a.bBox,ba=a.ox,
Ba=a.oy,p=a.zoomX,m=a.zoomY,t=a.canvasY,z=a.canvasX,B=a.canvasW,Oa=a.canvasH,aa=a.canvasX2,K=a.canvasY2,n=a.strokeWidth,G=a.attr;switch(h){case "start":c=sa(this);a.chartPosLeft=c.left;a.chartPosTop=c.top;g=b.pageX-a.chartPosLeft;D=b.pageY-a.chartPosTop;a.oy=D;a.ox=g;a.allowMove=!1;l||(l=d.components.resizeBox=f.rect(d.graphics.trackerGroup).attr(G));g>z&&g<aa&&D>t&&D<K&&(a.allowMove=!0);I&&I.ishot&&(a.allowMove=!1);l.attr({x:0,y:0,width:0,height:0}).show();break;case "end":t=l.getBBox();d={chart:d,
selectionLeft:t.x,selectionTop:t.y,selectionHeight:t.height,selectionWidth:t.width,originalEvent:c.originalEvent};a.isDragged&&(a.selectionEnd&&a.selectionEnd(d),a.isDragged=0);l.hide();delete a.oy;delete a.ox;break;default:a.allowMove&&(G=g-a.ox,k=D-a.oy,ba=a.ox,Ba=a.oy,a.isDragged||(d={chart:d,selectionLeft:(p?F(ba,ba+G):z)+.5*n,selectionTop:(m?F(Ba,Ba+k):t)+.5*n,selectionHeight:0,selectionWidth:0,originalEvent:c.originalEvent},a.selectionStart&&a.selectionStart(d),a.isDragged=1),G=-(ba-F(ba-(ba-
w(ba+G,z)),aa)),k=-(Ba-F(Ba-(Ba-w(Ba+k,t)),K)),l.attr({x:(p?F(ba,ba+G):z)+.5*n,y:(m?F(Ba,Ba+k):t)+.5*n,width:p?e(G):B,height:m?e(k):Oa}))}},aa=function(c){var a=c.data;c=c.originalEvent;var d=c.target||c.originalTarget||c.srcElement||c.relatedTarget||c.fromElement,f=c.type,h=c.layerX,b=c.layerY;void 0===h&&(h=c.pageX-a.chartPosLeft,b=c.pageY-a.chartPosTop);"mousedown"===f&&(d.ishot=h>a.canvasX&&h<a.canvasX2&&b>a.canvasY&&b<a.canvasY2);"mouseup"===f&&setTimeout(function(){d.ishot=!1},1)},Ra=function(){var c=
"innerWidth",a="innerHeight",d=M.documentElement||M.body,f=d;"innerWidth"in v?f=v:(c="clientWidth",a="clientHeight");return function(){return{width:f[c],height:f[a],scrollTop:d.scrollTop,scrollLeft:d.scrollLeft}}}(),Ia=function(c){c.data&&(c.data.elScroll=!1)},sa=function(a,d,f){d={top:0,left:0};var h,e,I,l,g,D;f&&(I=f.config,l=f.linkedItems,l=l.eventListeners||(l.eventListeners=[]),D=I.isEvntAdded||(I.isEvntAdded=!1));if(a){if(b._fullScreenMode)d=a.getBoundingClientRect();else{d.top=a.offsetTop;
d.left=a.offsetLeft;for(h=a;(h=h.parentNode)&&"BODY"!==h.tagName;)f&&(e=v.getComputedStyle(h).getPropertyValue("position"),/fixed/.test(e)&&(g=!0)),d.top-=h.scrollTop||0,d.left-=h.scrollLeft||0,f&&!D&&l.push(va(h,"scroll",Ia,I));f&&(I.itemFixed=g,c.toolTip.inform(f.chartInstance.id,g));for(;h;)d.top-=h.scrollTop||0,d.left-=h.scrollLeft||0,h=h.parentNode;for(;a=a.offsetParent;)d.top+=a.offsetTop,d.left+=a.offsetLeft;d.top+=v.pageYOffset||v.scrollY||M.documentElement.scrollTop;d.left+=v.pageXOffset||
v.scrollX||M.documentElement.scrollLeft}f&&!D&&(l.push(va(v,"resize scroll",Ia,I)),I.isEvntAdded=!0)}return d},wa=function(c){return c&&c.replace(/\$/g,"$$$$")},ca=function(c,a){return c||!1===c||0===c?c:a},ma=function(){var c,a,d;a=0;for(d=arguments.length;a<d;a+=1)if((c=arguments[a])||!1===c||0===c)return c;return""},qa=function(){var c,a,d;a=0;for(d=arguments.length;a<d;a+=1)if((c=arguments[a])||!1===c||0===c)return c},va=function(a,d,f,h){return c.dem.listen(a,d,f,h)},ha=function(a,d,f){return c.dem.unlisten(a,
d,f)},ra=function(c){c=c&&(c.sourceEvent||c.originalEvent||c);return t&&c&&c.touches&&c.touches[0]||c||h},ka=function(){return function(c){void 0===c.pageX&&(c.pageX=c.clientX+M.body.scrollLeft+M.documentElement.scrollLeft,c.pageY=c.clientY+M.body.scrollTop+M.documentElement.scrollTop);return c}}(),na=function(c,a,d){var f=ka(ra(a)),h=b._fullScreenMode?f.clientX:f.pageX,f=b._fullScreenMode?f.clientY:f.pageY,e=d&&d.config;a=a.type;var I=e&&e.itemFixed,l=I?v.pageYOffset||v.scrollY||M.documentElement.scrollTop:
0,I=I?v.pageXOffset||v.scrollX||M.documentElement.scrollLeft:0;e&&e.elScroll?c=e.posOb:(e&&(e.elScroll=!0),c=sa(c,void 0,d),e&&(e.posOb=c));if("touchend"===a)isNaN(h)&&(h=C),isNaN(f)&&(f=H);else if("touchmove"===a||"touchstart"===a)C=h,H=f;return{chartX:h-c.left-I,chartY:f-c.top-l,pageX:h,pageY:f}},da=function(c,a,d){c=M.createElement(c);for(var f in a)c.setAttribute(f,a[f]);d&&d.appendChild&&d.appendChild(c);return c},oa=function(c){return c&&c.replace(/^#?([a-f0-9]+)/ig,"#$1")||"none"},Y=function(){var c,
a,d;a=0;for(d=arguments.length;a<d;a+=1)if(((c=arguments[a])||!1===c||0===c)&&!isNaN(c=Number(c)))return c},za=function(c,a){c=c||!1===c||0===c?Number(c):NaN;return isNaN(c)?null:a?e(c):c},fa=function(c){return"string"===typeof c?c.replace(l,"<br />"):""},Aa=function(c,a){c=c.split(",")[a||0];c=c.replace(m,"");""==c&&(c="000000");return c.replace(n,"#")},ua=function(c){c=parseInt(c,10);if(isNaN(c)||100<c||0>c)c=100;return c},ia=function(c,a){for(var d=a.length,f=-1;d--;)if(c===a[d]){f=d;break}return f},
xa=function(){if(Array.isArray)return Array.isArray;var c=Object.prototype.toString,a=c.call([]);return function(d){return c.call(d)===a}}(),ja=function(c,a,d,f,h){var b,e,I,l;h?(f.push(c),h.push(a)):(f=[c],h=[a]);if(a instanceof Array)for(b=0;b<a.length;b+=1){try{e=c[b],I=a[b]}catch(g){continue}if("object"!==typeof I)d&&void 0===I||(c[b]=I);else{if(null===e||"object"!==typeof e)e=c[b]=I instanceof Array?[]:{};l=ia(I,h);-1!==l?e=c[b]=f[l]:ja(e,I,d,f,h)}}else for(b in a){try{e=c[b],I=a[b]}catch(g){continue}if(null!==
I&&"object"===typeof I)if(l=K.call(I),"[object Object]"===l){if(null===e||"object"!==typeof e)e=c[b]={};l=ia(I,h);-1!==l?e=c[b]=f[l]:ja(e,I,d,f,h)}else"[object Array]"===l?(null!==e&&e instanceof Array||(e=c[b]=[]),l=ia(I,h),-1!==l?e=c[b]=f[l]:ja(e,I,d,f,h)):c[b]=I;else c[b]=I}return c},ya=function(c,a,d){if("object"!==typeof c&&"object"!==typeof a)return null;if("object"!==typeof a||null===a)return c;"object"!==typeof c&&(c=a instanceof Array?[]:{});ja(c,a,d);return c},W=function(c,a){var d;if(a instanceof
Array)for(d=a.length-1;0<=d;--d)"object"!==typeof a[d]?!0===a[d]&&c&&c.splice&&c.splice(d,1):K.call(a[d])===K.call(c[d])&&W(c[d],a[d]);else for(d in a)"object"!==typeof a[d]?!0===a[d]&&c&&c.splice&&c.splice(d,1):K.call(a[d])===K.call(c[d])&&W(c[d],a[d]);return c},Ma=function(){var c=/^@window_/g;return function(a,d,f){a=a.replace(/\[[\'\"]/g,".").replace(/[\'\"]\]/g,"").replace(/\[/g,".@window_").replace(/\]/g,"").split(".");var h=v,b,e;e="";var I,l,g;l=a.length;for(g=0;g<l;g+=1){I=a[g];b=h;if(I.match(c))e=
v[I.replace(c,"")],h=h[e];else{if(void 0===h||null===h)throw(e||I).replace(c,"")+" is not defined";h=h[I]}e=I}!h||"function"!==typeof h.call&&h!==v.alert?"void"!==e&&setTimeout(function(){throw I.replace(c,"")+"() is not a function";},0):h===v.alert?h(d):f?h.apply(b,d.split("-")):h.call(b,d)}}(),ea=function(c,a){var d;c=c.replace(/^j\s*\-/i,"j-");d=c.indexOf("-",2);-1===d?Ma(c.slice(2)):Ma(c.substr(2,d-2).replace(/\s/g,""),c.slice(d+1),a)},ga=function(c){var a=c.split("(");c=a.pop().split(")")[0].split(",");
var d=c.length,f;f="j-"+a[0];for(a=0;a<d;a++)f+="-"+c[a].replace(/\s*/,"").replace(/\s*$/,"").replace(/[\'|\"]/g,"");ea(f,!0)},la=function(c){var a={image:!1};void 0!==c&&(c=c.replace(/^\s+/,"").replace(/\s+$/,""),/^i\s*[\-]\s*/i.test(c)?(a.image=!0,a.string=c.replace(/^i\s*[\-]\s*/i,"")):a.string=c.replace(/^\\/,""));return a},Ca=function(c,a){c=Number(c);c=isNaN(c)?100:c;void 0!==a&&(c=c*a/100);return c%101},Ha=function(c,a,d){c=c.split(",");var f;void 0!==d&&(d=Y(d.split(",")[0]));c[0]=Ca(c[0],
d);for(f=1;f<a;f+=1)c[f]=c[0]*Ca(c[f],d)/100;return c.join(",")},pa=function(c,a,d){var f=0,h=0,b=0;d&&d.match(L)&&(d=d.split(","),f=d[0].slice(d[0].indexOf("(")+1),h=d[1],b=d[2],a||0===a||(a=parseInt(100*d[3].slice(0,d[3].indexOf(")")),10)));if(c)if(c.match(L))d=c.split(","),f=d[0].slice(d[0].indexOf("(")+1),h=d[1],b=d[2];else{c=c.replace(g,"").split(",")[0];switch(c.length){case 3:c=c.charAt(0)+c.charAt(0)+c.charAt(1)+c.charAt(1)+c.charAt(2)+c.charAt(2);break;case 6:break;default:c=(c+"FFFFFF").slice(0,
6)}f=parseInt(c.slice(0,2),16);h=parseInt(c.slice(2,4),16);b=parseInt(c.slice(4,6),16)}a||0===a||(a=100);"string"===typeof a&&(a=a.split(",")[0]);a=parseInt(a,10)/100;return"rgba("+f+","+h+","+b+","+a+")"},La=function(){var c={};return function(a){var d=(a=a||this)&&a.FCcolor||a,f=d.color,h=d.ratio,b=d.angle,e=d.alpha,I=d.r,l=d.cx,g=d.cy,D=d.fx,G=d.fy,t=d.gradientUnits,ba=d.x1,Ba=d.y1,p=d.x2,F=d.y2,m=1,z,B,Oa,w;if("string"===typeof a)return c[w="~"+a]||(c[w]=a.replace(/^#?([a-f0-9]{3,6})/ig,"#$1"));
f=f||"";if(!f)return z;w=[f,e,h,b,I,l,g,t,D,G,ba,p,Ba,F].join("_").replace(/[\(\)\s,\xb0#]/g,"_");if(c[w])return c[w];h=h&&(h+"").split(",")||[];e=(e||0===e)&&(e+"").split(",")||[];if(f=f.split(","))if(z="",1===f.length)Oa=f[0].replace(/^#?([a-f0-9]{3,6})/ig,"$1"),z=e.length?"rgba("+Ea(Oa).join(",")+","+.01*k(e[0])+")":Oa.replace(/^#?([a-f0-9]{3,6})/ig,"#$1");else{a=0;for(B=f.length;a<B;a++)Oa=f[a].replace(/^#?([a-f0-9]{3,6})/ig,"$1"),isNaN(h[a])||(h[a]=k(h[a]),Oa+=":"+h[a],isNaN(h[a+1])||(h[a+1]=
k(h[a+1])+h[a])),isNaN(e[a])||""===e[a]||(m=.01*e[a]),f[a]="rgba("+Ea(Oa).join(",")+","+m+")",isNaN(h[a])||(f[a]=f[a]+":"+h[a]);z+=f.join("-");if(void 0!==I||void 0!==D||void 0!==l||d.radialGradient)z="xr("+[D,G,I,l,g,t].join()+")"+z;else{z="-"+z;if(void 0!==ba||void 0!==Ba||void 0!==p||void 0!==F)z="("+[ba,Ba,p,F,t].join()+")"+z;void 0===b&&(b=0);z=360-k(b)%360+z}}return c[w]=z}}(),Ja=function(){return function(){return""}}(),Fa=function(c){return c.replace(g,"").replace(n,"#")},ta=function(c,a){a=
(0>a||100<a?100:a)/100;c=c.replace(g,"");var d=parseInt(c,16),f=Math.floor(d/65536),h=Math.floor((d-65536*f)/256);return("000000"+(f*a<<16|h*a<<8|(d-65536*f-256*h)*a).toString(16)).slice(-6)},Ka=function(c,a){a=(0>a||100<a?100:a)/100;c=c.replace(g,"");var d=parseInt(c,16),f=Math.floor(d/65536),h=Math.floor((d-65536*f)/256);return("000000"+(256-(256-f)*a<<16|256-(256-h)*a<<8|256-(256-(d-65536*f-256*h))*a).toString(16)).slice(-6)},Ea=function(c){c=parseInt(c,16);var a=Math.floor(c/65536),d=Math.floor((c-
65536*a)/256);return[a,d,Math.floor(c-65536*a-256*d)]},Da=function(a,d){if("object"!==typeof a)return"";if(a.fontSize||a["font-size"])!a.fontSize&&a["font-size"]&&(a.fontSize=a["font-size"],delete a["font-size"]),a.lineHeight=(parseFloat(a.fontSize)||d||10)*c.lineHeightFactor+"px",delete a["line-height"];!a.lineHeight&&a["line-height"]&&(a.lineHeight=a["line-height"],delete a["line-height"]);return a.lineHeight},Ga=function(c,a,d,f,h){var b=ma(c.labelbordercolor,a.bordercolor,d.labelbordercolor,""),
e=qa(c.labelbgcolor,a.bgcolor,d.labelbgcolor),I=Y(c.labelborderthickness,a.borderthickness,d.labelborderthickness,1);h=Y(d.usedataplotcolorforlabels,0)?h||f.color:f.color;b=b?pa(b,Y(c.labelborderalpha,a.borderalpha,d.labelborderalpha,c.labelalpha,a.alpha,d.labelalpha,100)):"";c={fontFamily:qa(c.labelfont,a.font,d.labelfont,f.fontFamily),fontSize:qa(c.labelfontsize,a.fontsize,d.labelfontsize,parseInt(f.fontSize,10))+"px",color:pa(qa(c.labelfontcolor,a.fontcolor,d.labelfontcolor,h),Y(c.labelfontalpha,
a.fontalpha,d.labelfontalpha,c.labelalpha,a.alpha,d.labelalpha,100)),fontWeight:Y(c.labelfontbold,a.fontbold,d.labelfontbold)?"bold":"normal",fontStyle:Y(c.labelfontitalic,a.fontitalic,d.labelfontitalic)?"italic":"normal",border:b||e?I+"px solid":"",borderColor:b,borderThickness:I,borderPadding:Y(c.labelborderpadding,a.borderpadding,d.labelborderpadding,2),borderRadius:Y(c.labelborderradius,a.borderradius,d.labelborderradius,0),backgroundColor:e?pa(e,Y(c.labelbgalpha,a.bgalpha,d.labelbgalpha,c.labelalpha,
a.alpha,d.labelalpha,100)):"",borderDash:Y(c.labelborderdashed,a.borderdashed,d.labelborderdashed,0)?Xa(Y(c.labelborderdashlen,a.borderdashlen,d.labelborderdashlen,4),Y(c.labelborderdashgap,a.borderdashgap,d.labelborderdashgap,2),I):"none"};c.lineHeight=Da(c);return c},Na=function(){var c={top:{align:"center",verticalAlign:"top",textAlign:"center"},right:{align:"right",verticalAlign:"middle",textAlign:"left"},bottom:{align:"center",verticalAlign:"bottom",textAlign:"center"},left:{align:"left",verticalAlign:"middle",
textAlign:"right"}},a=/([^\,^\s]+)\)$/g,d=function(c,a){var d;/^(bar|bar3d)$/.test(c)&&(this.isBar=!0,this.yPos="bottom",this.yOppPos="top",this.xPos="left",this.xOppPos="right");d=parseInt(a.labelstep,10);this.labelStep=1<d?d:1;this.showLabel=Y(a.showlabels,a.shownames,1);this.is3D=/3d$/.test(c)};d.prototype={isBar:!1,yPos:"left",yOppPos:"right",xPos:"bottom",xOppPos:"top",addAxisGridLine:function(d,f,h,b,e,I,l,g){var D=""===h?!1:!0,G=0<b||0<I.match(a)[1]?!0:!1,k;if(D||G)G||(I="rgba(0,0,0,0)",b=
.1),k={isGrid:!0,width:b,dashStyle:e,color:I,value:f,zIndex:void 0===l?2:l},D&&(f=d.opposite?g?this.xOppPos:this.yOppPos:g?this.xPos:this.yPos,f=c[f],k.label={text:h,style:d.labels.style,textAlign:f.textAlign,align:f.align,verticalAlign:f.verticalAlign,rotation:0,x:0,y:0}),d.plotLines.push(k);return k},addAxisAltGrid:function(c,a){if(!this.is3D){var d=Y(c._lastValue,c.min),f=qa(c._altGrid,!1);f&&c.plotBands.push({isGrid:!0,color:c.alternateGridColor,to:a,from:d,zIndex:1});c._lastValue=a;c._altGrid=
!f}},addXaxisCat:function(a,d,f,h,b,e,I,l){var g=c[a.opposite?this.xOppPos:this.xPos];d={isGrid:!0,isDataLabel:!0,width:.1,color:"rgba(0,0,0,0)",value:d,label:{text:h,link:qa(b.labellink,e.link,I.labellink),style:Ga(b,e,I,a.labels.style,l),textAlign:g.textAlign,align:g.align,verticalAlign:g.verticalAlign,rotation:0,x:0,y:0}};0!==f%this.labelStep&&(d.stepped=!0,d.label.style=a.steppedLabels.style);a.plotLines.push(d)},addVline:function(c,a,d,f){f=f._FCconf;var h=f.isBar,b=f.divlineStyle,e=fa(a.label),
I=!!Y(a.showlabelborder,f.showVLineLabelBorder,1),l=!!Y(a.showlabelbackground,1),g=qa(a.labelhalign,h?"left":"center"),D=qa(a.labelvalign,h?"middle":"bottom").toLowerCase(),G=Y(a.labelposition,0),k=Y(a.lineposition,.5),t=Y(a.showvlines,f.showVLines,1),ba=Y(a.alpha,f.vLineAlpha,80),Ba=qa(a.color,f.vLineColor).replace(/^#?/,"#"),p=l?qa(a.labelbgcolor,f.vLineLabelBgColor,"333333").replace(/^#?/,"#"):"",F=qa(a.labelcolor,f.vLineLabelColor,a.color,f.vLineColor).replace(/^#?/,"#"),z=Y(a.thickness,f.vLineThickness,
1),m=.5*z,B=!!Number(qa(a.dashed,0)),Oa=Y(a.dashlen,5),w=Y(a.dashgap,2),aa=f.smartLabel,K=parseInt(b.fontSize,10)+2,n=0,R=Y(a.rotatelabel,f.rotateVLineLabels)?270:0,k=0>k||1<k?.5:k,G=0>G||1<G?0:G;aa.setStyle(b);aa=aa.getOriSize(e);Ba=pa(Ba,t?ba:"0");if(h){switch(D){case "top":K-=aa.height+m+2;break;case "middle":K-=.5*aa.height+1;break;default:K+=m}a.labelhalign||(n-=aa.width*G)}else{switch(D){case "top":K=.5*-aa.height+1;break;case "middle":K=0;break;default:K=.5*aa.height}switch(g){case "left":n+=
z;break;case "right":n-=z+1}}c.plotLines.push({isVline:!0,color:Ba,width:z,value:d-1+k,zIndex:Y(a.showontop,f.showVLinesOnTop)?5:3,dashStyle:B?Xa(Oa,w,z):"none",label:{text:e,align:h?"left":"center",offsetScale:G,rotation:R,y:K,x:n,textAlign:g,backgroundColor:p,borderWidth:t&&I?1:0,borderType:t&&I?"solid":"",borderColor:t&&I?F:"",backgroundOpacity:t&&l?qa(a.labelbgalpha,f.vLineLabelBgAlpha)/100:0,style:{color:t?F:Ba,fontSize:b.fontSize,fontFamily:b.fontFamily,lineHeight:b.lineHeight,backgroundColor:p}}})}};
return d.prototype.constructor=d}(),Ua=function(){var c=function(c,d,f,h,b){c=Math.abs(d-c);d=c/(f+1);a(c,f,h)||(b&&Number(d)/Number(h)<(1<h?2:.5)&&(h/=10),d=(Math.floor(d/h)+1)*h,c=d*(f+1));return c},a=function(c,a,f){return d(c/(a+1))>d(f)?!1:!0},d=function(c){c=Math.abs(c);c=String(c);var a=0,d=c.indexOf(".");-1!=d&&(a=c.length-d-1);return a};return function(d,f,h,b,e,I,l,g){var D,G,k,t,ba,Ba,p,z=0;d=!0===isNaN(d)||void 0===d?.1:d;f=!0===isNaN(f)||void 0===f?0:f;d===f&&0===d&&(d=.1);G=Math.max(Math.floor(Math.log(Math.abs(f))/
Math.LN10),Math.floor(Math.log(Math.abs(d))/Math.LN10));D=Math.pow(10,G);2>Math.abs(d)/D&&2>Math.abs(f)/D&&(G--,D=Math.pow(10,G));G=Math.floor(Math.log(d-f)/Math.LN10);k=Math.pow(10,G);0<d-f&&10<=D/k&&(D=k);G=(Math.floor(d/D)+1)*D;0>f?k=-1*(Math.floor(Math.abs(f/D))+1)*D:I?k=0:(k=Math.floor(Math.abs(f/D)-1)*D,k=0>k?0:k);e&&0>=d&&(G=0);e=h||0===h?!0:!1;I=b||0===b?!0:!1;d=!1===e||!0===e&&Number(h)<d&&d-Number(h)>T?G:Number(h);f=!1===I||!0===I&&Number(b)>f&&Number(b)-f>T?k:Number(b);b=Math.abs(d-f);
if(!1===I&&!1===e&&g)if(0<d&&0>f)for(h=!1,e=10<D?D/10:D,g=c(f,d,l,e,!1),I=g-(l+1)*e;!1===h;){if(I+=(l+1)*e,a(I,l,e))if(g=I-b,G=I/(l+1),t=Math.min(Math.abs(f),d),k=t==Math.abs(f)?-1:1,0===l)h=!0;else for(Ba=1;Ba<=Math.floor((l+1)/2);Ba++)ba=G*Ba,!(ba-t>g)&&ba>t&&(p=I-ba,p/G==Math.floor(p/G)&&ba/G==Math.floor(ba/G)&&(b=I,d=-1==k?p:ba,f=-1==k?-ba:-p,h=!0))}else h=c(f,d,l,D,!0),g=h-b,b=h,0<d?d+=g:f-=g;else g&&(h=function(c,d,f){for(var h=0,b=1,e;;){e=c+h*b;e=0===e?1:e;if(a(d,e,f))break;h=-1==b||h>c?++h:
h;if(25<h){e=0;break}b=h<=c?-1*b:1}return e},0<l&&(g=h(l,b,D),0===g&&(g=h(l,b+1,D),z=1),l=g));return{Max:d,Min:f,Range:b,interval:D,divGap:(d-f+z)/(l+1)}}}(),Pa=function(){var c=function(c,a,d){var f=d.jsVars&&d.jsVars.smartLabel,h=c.offsetWidth,b=c.offsetHeight,e=this.chart;c=this.title;var I=d._chartMessageImageStyle,l=la(a);c.y=b/2;c.x=h/2;e.bgSWF=c.text=void 0;a=l.string;l.image?(e.bgSWF=a,e.bgImageHAlign=I.imageHAlign,e.bgImageVAlign=I.imageVAlign,e.bgImageScale=I.imageScale,e.bgSWFAlpha=I.imageAlpha):
void 0!==a&&(f?(Da(c.style),f.setStyle(c.style),a=f.getSmartText(fa(a),h,b),c.text=a.text):c.text=fa(a),c.verticalAlign="middle");c.style=d._chartMessageStyle;delete d._chartMessageImageStyle;delete d._chartMessageStyle};c.prototype={chart:{events:{},margin:[0,0,0,0],backgroundColor:{FCcolor:{alpha:0}}},credits:{href:P,text:"FusionCharts XT Trial",enabled:z},legend:{enabled:!1},title:{text:"",style:{fontFamily:"Verdana,sans",fontSize:"10px",color:"#666666"}},plotOptions:{series:{}},series:[{}],exporting:{enabled:!1},
nativeMessage:!0};return c.prototype.constructor=c}(),Sa={"true":{"true":{"true":"center","false":"center"},"false":{"true":"center","false":"center"}},"false":{"true":{"true":"right","false":"left"},"false":{"true":"left","false":"right"}}},ab=function(){return function(c,a,d,f,h,b,e){var I,l=d.trendStyle,g,D,G,k,t,ba,Ba,p,z,F,m,B,Oa,w=b?"xAxis":"dataLabels";if(b?d.showVLines:d.showTrendlines)for(I=0,D=c.length;I<D;I+=1)if((Oa=c[I])&&Oa.line)for(g=0,G=Oa.line.length;g<G;g+=1)k=Oa.line[g],F=d.numberFormatter.getCleanValue(qa(k.startvalue,
k.value,0)),m=d.numberFormatter.getCleanValue(qa(k.endvalue,qa(k.startvalue,k.value,0))),b?p=a:f&&k.parentyaxis&&/^s$/i.test(k.parentyaxis)?(p=a[1],B=1):p=a[0],ba=p.max,Ba=p.min,t=!1,ba>=F&&ba>=m&&Ba<=F&&Ba<=m&&(f&&k.parentyaxis&&/^s$/i.test(k.parentyaxis)?t="1"!==qa(k.valueonleft,d.trendlineValuesOnOpp):f||(t="1"===qa(k.valueonright,d.trendlineValuesOnOpp)),ba=!!Y(k.istrendzone,b?1:0),(Ba=(b?d.showVLineLabels:d.showTrendlineLabels)?fa(qa(k.displayvalue,d.numberFormatter[w](t?m:F,B))):"")?(z=F<m,
t={text:Ba,textAlign:h?"center":t?"left":"right",align:h?Sa[ba][!e][z]:t?"right":"left",verticalAlign:h?"bottom":"middle",rotation:0,x:0,y:0,style:l},Ba=qa(k.color,d.trendlineColor),k.alwaysVisible=ba,Ba&&(t.style=ya({},l),t.style.color=pa(Ba,Y(k.alpha,100)))):t=void 0,Ba=ca(fa(qa(k.tooltext,Oa.tooltext,d.trendLineToolText))),Ba=eb(Ba,[7,15,16,17,18,19],{startValue:F,startDataValue:d.numberFormatter[w](F,B),endValue:m,endDataValue:d.numberFormatter[w](m,B),axisName:p.title&&p.title.text},k),z=Y(k.thickness,
d.trendlineThickness,1),ba?p.plotBands.push({isTrend:!0,color:pa(qa(k.color,d.trendlineColor),qa(k.alpha,d.trendlineAlpha,40)),from:F,to:m,label:t,zIndex:d.is3d||"1"!==qa(k.showontop,d.showTrendlinesOnTop)?3:5,tooltext:Ba,alwaysVisible:k.alwaysVisible}):p.plotLines.push({isTrend:!0,color:pa(qa(k.color,d.trendlineColor,d.trendlineColor),qa(k.alpha,d.trendlineAlpha,99)),value:F,to:m,width:z,dashStyle:"1"==qa(k.dashed,d.trendlinesAreDashed)?Xa(Y(k.dashlen,d.trendlinesDashLen),Y(k.dashgap,d.trendlinesDashGap),
z):"none",label:t,zIndex:d.is3d||"1"!==qa(k.showontop,d.showTrendlinesOnTop)?3:5,tooltext:Ba}))}}(),Xa=function(c,a,d,f){return f||void 0===f?[c,a]:"none"},Za=function(){},bb=function(c,a,d,f,h){var b,e=bb[c],I;e||(I=function(){},I.prototype=d instanceof Za?d:new Za,I.prototype.constructor=I,e=bb[c]=new I,d&&(e.base=d),e.name=c,e.config={},null!==h&&(c=(h instanceof Za?h:d instanceof Za?d:{}).config)&&ya(e.config,c));f&&ya(e.config,f);for(b in a)switch(typeof a[b]){case "object":if(a[b]instanceof
Za){e[b]=a[b][b];break}default:e[b]=a[b];break;case "undefined":delete e[b]}return this instanceof bb?(a=function(){this.config={};this.__setDefaultConfig=function(){e&&e.config&&ya(this.config,e.config)};this.__setDefaultConfig()},a.prototype=e,a.prototype.constructor=a,new a):e},eb=function(){var c=[{regex:/((^|[^\\])((\\)\\)*\$cleanvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cleanvalue))/ig,argIndex:2,argKey:"cleanvalue"},{regex:/((^|[^\\])((\\)\\)*\$datavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$datavalue))/ig,
argIndex:2,argKey:"formattedValue"},{regex:/((^|[^\\])((\\)\\)*\$value)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$value))/ig,argIndex:3,argKey:"value"},{regex:/((^|[^\\])((\\)\\)*\$label)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$label))/ig,argIndex:2,argKey:"label"},{regex:/((^|[^\\])((\\)\\)*\$seriesname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$seriesname))/ig,argIndex:5,argKey:"seriesname"},{regex:/((^|[^\\])((\\)\\)*\$yaxisname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$yaxisname))/ig,argIndex:2,argKey:"yaxisName"},
{regex:/((^|[^\\])((\\)\\)*\$xaxisname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xaxisname))/ig,argIndex:2,argKey:"xaxisName"},{regex:/((^|[^\\])((\\)\\)*\$displayvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$displayvalue))/ig,argIndex:3,argKey:"displayvalue"},{regex:/((^|[^\\])((\\)\\)*\$xdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xdatavalue))/ig,argIndex:2,argKey:"xDataValue"},{regex:/((^|[^\\])((\\)\\)*\$ydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$ydatavalue))/ig,argIndex:2,argKey:"yDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$xvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xvalue))/ig,argIndex:3,argKey:"x"},{regex:/((^|[^\\])((\\)\\)*\$yvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$yvalue))/ig,argIndex:3,argKey:"y"},{regex:/((^|[^\\])((\\)\\)*\$zvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$zvalue))/ig,argIndex:3,argKey:"z"},{regex:/((^|[^\\])((\\)\\)*\$name)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$name))/ig,argIndex:3,argKey:"name"},{regex:/((^|[^\\])((\\)\\)*\$percentValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentValue))/ig,
argIndex:2,argKey:"percentValue"},{regex:/((^|[^\\])((\\)\\)*\$startValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$startValue))/ig,argIndex:2,argKey:"startValue"},{regex:/((^|[^\\])((\\)\\)*\$startDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$startDataValue))/ig,argIndex:2,argKey:"startDataValue"},{regex:/((^|[^\\])((\\)\\)*\$endValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$endValue))/ig,argIndex:2,argKey:"endValue"},{regex:/((^|[^\\])((\\)\\)*\$endDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$endDataValue))/ig,
argIndex:2,argKey:"endDataValue"},{regex:/((^|[^\\])((\\)\\)*\$axisName)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$axisName))/ig,argIndex:2,argKey:"axisName"},{regex:/((^|[^\\])((\\)\\)*\$cumulativevalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativevalue))/ig,argIndex:2,argKey:"cumulativeValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativedatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativedatavalue))/ig,argIndex:2,argKey:"cumulativeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativePercentValue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativePercentValue))/ig,argIndex:2,argKey:"cumulativePercentValue"},{regex:/((^|[^\\])((\\)\\)*\$cumulativepercentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$cumulativepercentdatavalue))/ig,argIndex:2,argKey:"cumulativePercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$sum)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$sum))/ig,argIndex:2,argKey:"sum"},{regex:/((^|[^\\])((\\)\\)*\$unformattedsum)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedsum))/ig,argIndex:2,
argKey:"unformattedSum"},{regex:/((^|[^\\])((\\)\\)*\$targetvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$targetvalue))/ig,argIndex:2,argKey:"targetValue"},{regex:/((^|[^\\])((\\)\\)*\$targetdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$targetdatavalue))/ig,argIndex:2,argKey:"targetDataValue"},{regex:/((^|[^\\])((\\)\\)*\$processname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$processname))/ig,argIndex:2,argKey:"processName"},{regex:/((^|[^\\])((\\)\\)*\$start)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$start))/ig,
argIndex:2,argKey:"start"},{regex:/((^|[^\\])((\\)\\)*\$end)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$end))/ig,argIndex:2,argKey:"end"},{regex:/((^|[^\\])((\\)\\)*\$percentcomplete)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentcomplete))/ig,argIndex:2,argKey:"percentComplete"},{regex:/((^|[^\\])((\\)\\)*\$taskpercentcomplete)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskpercentcomplete))/ig,argIndex:2,argKey:"taskPercentComplete"},{regex:/((^|[^\\])((\\)\\)*\$taskstartdate)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskstartdate))/ig,
argIndex:2,argKey:"taskStartDate"},{regex:/((^|[^\\])((\\)\\)*\$taskenddate)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$taskenddate))/ig,argIndex:2,argKey:"taskEndDate"},{regex:/((^|[^\\])((\\)\\)*\$tasklabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tasklabel))/ig,argIndex:2,argKey:"taskLabel"},{regex:/((^|[^\\])((\\)\\)*\$date)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$date))/ig,argIndex:2,argKey:"date"},{regex:/((^|[^\\])((\\)\\)*\$percentofprevvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentofprevvalue))/ig,
argIndex:2,argKey:"percentOfPrevValue"},{regex:/((^|[^\\])((\\)\\)*\$sname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$sname))/ig,argIndex:2,argKey:"sName"},{regex:/((^|[^\\])((\\)\\)*\$lname)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lname))/ig,argIndex:2,argKey:"lName"},{regex:/((^|[^\\])((\\)\\)*\$fromid)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromid))/ig,argIndex:2,argKey:"fromId"},{regex:/((^|[^\\])((\\)\\)*\$fromlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromlabel))/ig,argIndex:2,argKey:"fromLabel"},
{regex:/((^|[^\\])((\\)\\)*\$toid)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toid))/ig,argIndex:2,argKey:"toId"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$fromxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromxvalue))/ig,argIndex:2,argKey:"fromXValue"},{regex:/((^|[^\\])((\\)\\)*\$fromyvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromyvalue))/ig,argIndex:2,argKey:"fromYValue"},{regex:/((^|[^\\])((\\)\\)*\$fromxdatavalue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromxdatavalue))/ig,argIndex:2,argKey:"fromXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromydatavalue))/ig,argIndex:2,argKey:"fromYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromlabel))/ig,argIndex:2,argKey:"fromLabel"},{regex:/((^|[^\\])((\\)\\)*\$toxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toxvalue))/ig,argIndex:2,argKey:"toXValue"},{regex:/((^|[^\\])((\\)\\)*\$toyvalue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toyvalue))/ig,argIndex:2,argKey:"toYValue"},{regex:/((^|[^\\])((\\)\\)*\$toxdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toxdatavalue))/ig,argIndex:2,argKey:"toXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$toydatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toydatavalue))/ig,argIndex:2,argKey:"toYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$openvalue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$openvalue))/ig,argIndex:2,argKey:"openValue"},{regex:/((^|[^\\])((\\)\\)*\$closevalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$closevalue))/ig,argIndex:2,argKey:"closeValue"},{regex:/((^|[^\\])((\\)\\)*\$highvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$highvalue))/ig,argIndex:2,argKey:"highValue"},{regex:/((^|[^\\])((\\)\\)*\$lowvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lowvalue))/ig,argIndex:2,argKey:"lowValue"},{regex:/((^|[^\\])((\\)\\)*\$opendatavalue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$opendatavalue))/ig,argIndex:2,argKey:"openDataValue"},{regex:/((^|[^\\])((\\)\\)*\$closedatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$closedatavalue))/ig,argIndex:2,argKey:"closeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$highdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$highdatavalue))/ig,argIndex:2,argKey:"highDataValue"},{regex:/((^|[^\\])((\\)\\)*\$lowdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$lowdatavalue))/ig,argIndex:2,argKey:"lowDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$maxvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$maxvalue))/ig,argIndex:2,argKey:"maxValue"},{regex:/((^|[^\\])((\\)\\)*\$maxdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$maxdatavalue))/ig,argIndex:2,argKey:"maxDataValue"},{regex:/((^|[^\\])((\\)\\)*\$minvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$minvalue))/ig,argIndex:2,argKey:"minValue"},{regex:/((^|[^\\])((\\)\\)*\$mindatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$mindatavalue))/ig,argIndex:2,argKey:"minDataValue"},
{regex:/((^|[^\\])((\\)\\)*\$q1)/ig,argIndex:2,argKey:"Q1"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQ1)/ig,argIndex:2,argKey:"unformattedQ1"},{regex:/((^|[^\\])((\\)\\)*\$q3)/ig,argIndex:2,argKey:"Q3"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQ3)/ig,argIndex:2,argKey:"unformattedQ3"},{regex:/((^|[^\\])((\\)\\)*\$median)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$median))/ig,argIndex:2,argKey:"median"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMedian)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMedian))/ig,
argIndex:2,argKey:"unformattedMedian"},{regex:/((^|[^\\])((\\)\\)*\$SD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$SD))/ig,argIndex:2,argKey:"SD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedsd)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedsd))/ig,argIndex:2,argKey:"unformattedsd"},{regex:/((^|[^\\])((\\)\\)*\$QD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$QD))/ig,argIndex:2,argKey:"QD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedQD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedQD))/ig,argIndex:2,
argKey:"unformattedQD"},{regex:/((^|[^\\])((\\)\\)*\$MD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$MD))/ig,argIndex:2,argKey:"MD"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMD)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMD))/ig,argIndex:2,argKey:"unformattedMD"},{regex:/((^|[^\\])((\\)\\)*\$mean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$mean))/ig,argIndex:2,argKey:"mean"},{regex:/((^|[^\\])((\\)\\)*\$unformattedMean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMean))/ig,argIndex:2,argKey:"unformattedMean"},
{regex:/((^|[^\\])((\\)\\)*\$unformattedMean)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$unformattedMean))/ig,argIndex:2,argKey:"unformattedMean"},{regex:/((^|[^\\])((\\)\\)*\$volumeValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$volumeValue))/ig,argIndex:2,argKey:"volumeValue"},{regex:/((^|[^\\])((\\)\\)*\$volumeDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$volumeDataValue))/ig,argIndex:2,argKey:"volumeDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromXValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromXValue))/ig,
argIndex:2,argKey:"fromXValue"},{regex:/((^|[^\\])((\\)\\)*\$fromYValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromYValue))/ig,argIndex:2,argKey:"fromYValue"},{regex:/((^|[^\\])((\\)\\)*\$fromXDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromXDataValue))/ig,argIndex:2,argKey:"fromXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromYDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromYDataValue))/ig,argIndex:2,argKey:"fromYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$fromLabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$fromLabel))/ig,
argIndex:2,argKey:"fromLabel"},{regex:/((^|[^\\])((\\)\\)*\$toXValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toXValue))/ig,argIndex:2,argKey:"toXValue"},{regex:/((^|[^\\])((\\)\\)*\$toYValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toYValue))/ig,argIndex:2,argKey:"toYValue"},{regex:/((^|[^\\])((\\)\\)*\$toXDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toXDataValue))/ig,argIndex:2,argKey:"toXDataValue"},{regex:/((^|[^\\])((\\)\\)*\$toYDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$toYDataValue))/ig,
argIndex:2,argKey:"toYDataValue"},{regex:/((^|[^\\])((\\)\\)*\$tolabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tolabel))/ig,argIndex:2,argKey:"toLabel"},{regex:/((^|[^\\])((\\)\\)*\$tlLabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tlLabel))/ig,argIndex:5,argKey:"tlLabel"},{regex:/((^|[^\\])((\\)\\)*\$trlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$trlabel))/ig,argIndex:5,argKey:"trLabel"},{regex:/((^|[^\\])((\\)\\)*\$bllabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$bllabel))/ig,argIndex:5,argKey:"blLabel"},
{regex:/((^|[^\\])((\\)\\)*\$brlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$brlabel))/ig,argIndex:5,argKey:"brLabel"},{regex:/((^|[^\\])((\\)\\)*\$rowlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$rowlabel))/ig,argIndex:5,argKey:"rowLabel"},{regex:/((^|[^\\])((\\)\\)*\$columnlabel)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$columnlabel))/ig,argIndex:5,argKey:"columnLabel"},{regex:/((^|[^\\])((\\)\\)*\$errorvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorvalue))/ig,argIndex:2,argKey:"errorValue"},
{regex:/((^|[^\\])((\\)\\)*\$errordatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errordatavalue))/ig,argIndex:2,argKey:"errorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$errorpercentvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorpercentvalue))/ig,argIndex:2,argKey:"errorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$errorpercentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$errorpercentdatavalue))/ig,argIndex:2,argKey:"errorPercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorValue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorValue))/ig,argIndex:2,argKey:"horizontalErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorDataValue))/ig,argIndex:2,argKey:"horizontalErrorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorValue))/ig,argIndex:2,argKey:"verticalErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorDataValue))/ig,
argIndex:2,argKey:"verticalErrorDataValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorPercent)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorPercentValue))/ig,argIndex:2,argKey:"horizontalErrorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$horizontalErrorPercentDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$horizontalErrorPercentDataValue))/ig,argIndex:2,argKey:"horizontalErrorPercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorPercent)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorPercentValue))/ig,
argIndex:2,argKey:"verticalErrorPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$verticalErrorPercentDataValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$verticalErrorPercentDataValue))/ig,argIndex:2,argKey:"verticalErrorPercentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$xaxispercentvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$xaxispercentvalue))/ig,argIndex:2,argKey:"xAxisPercentValue"},{regex:/((^|[^\\])((\\)\\)*\$percentdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$percentdatavalue))/ig,argIndex:2,
argKey:"percentDataValue"},{regex:/((^|[^\\])((\\)\\)*\$trType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$trType))/ig,argIndex:4,argKey:"trtype"},{regex:/((^|[^\\])((\\)\\)*\$tlType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$tlType))/ig,argIndex:4,argKey:"tltype"},{regex:/((^|[^\\])((\\)\\)*\$brType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$brType))/ig,argIndex:4,argKey:"brtype"},{regex:/((^|[^\\])((\\)\\)*\$blType)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$blType))/ig,argIndex:4,argKey:"bltype"},{regex:/((^|[^\\])((\\)\\)*\$colorRangeLabel)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$colorRangeLabel))/ig,argIndex:5,argKey:"colorRangeLabel"},{regex:/((^|[^\\])((\\)\\)*\$zdatavalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$zdatavalue))/ig,argIndex:2,argKey:"zDataValue"},{regex:/((^|[^\\])((\\)\\)*\$svalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$svalue))/ig,argIndex:3,argKey:"svalue"},{regex:/((^|[^\\])((\\)\\)*\$positiveErrorValue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$positiveErrorValue))/ig,argIndex:2,argKey:"positiveErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$negativeErrorValue)/ig,
escapeRegex:/((^|[^\\])((\\)\\)*\\(\$negativeErrorValue))/ig,argIndex:2,argKey:"negativeErrorValue"},{regex:/((^|[^\\])((\\)\\)*\$datasvalue)/ig,escapeRegex:/((^|[^\\])((\\)\\)*\\(\$datasvalue))/ig,argIndex:2,argKey:"formattedsValue"}],a=[],d,f=c.length;for(d=0;d<f;d+=1)a.push(d);return function(){var d=arguments[0],f=arguments[1],h,b,e,I,l;xa(f)||(f=a);if(d)for(l=f.length,I=0;I<l;I+=1)if(e=c[f[I]])h=wa(ca((b=arguments[e.argIndex])&&b[e.argKey],"")+""),d=d.replace(e.regex,"$2$4"+(e.parsingMethod?
e.parsingMethod(h):h)),d=d.replace(e.escapeRegex,"$2$4$5");return d}}(),Va=function(){var c=M.createElement("canvas");return!(!c.getContext||!c.getContext("2d"))},Ya=function(c){var a,d,f;a=0<=c.split(",")[0].indexOf("base64")?v.atob(c.split(",")[1]):v.unescape(c.split(",")[1]);c=c.split(",")[0].split(":")[1].split(";")[0];d=new Uint8Array(a.length);for(f=0;f<a.length;f++)d[f]=a.charCodeAt(f);return new v.Blob([d],{type:c})},$a=function(){var c=v.navigator.userAgent,a;return-1!==(a=c.indexOf("Edge"))?
{name:"Edge",version:c.substring(a+5,a+11)}:-1!==(a=c.indexOf("Chrome"))?{name:"Chrome",version:c.substring(a+7,a+11)}:-1!==(a=c.indexOf("MSIE"))?{name:"ie",version:c.substring(a+5,a+9)}:-1!==(a=c.indexOf("rv"))&&-1!==c.indexOf("Trident")?{name:"ie",version:c.substring(a+5,a+9)}:-1!==(a=c.indexOf("Firefox"))?{name:"Firefox",version:c.substring(a+8,a+12)}:-1!==(a=c.indexOf("Safari"))?{name:"Safari",version:c.substring(a+7,a+11)}:{name:"default",version:"Not Known"}},Ta=function(c){var a=document.createElement("div");
a.innerHTML="<a></a>";a.firstChild.href=c;a.innerHTML=a.innerHTML;return a.firstChild},kb=function(c,a){var d,f,h,b,e;a=void 0===a?!0:a;d=/<image [^\>]*href=["']([^\>'"]*)["'][^\>]*\>/g;f=/^\s*data:([a-z]+\/[a-z]+(;[a-z\-]+\=[a-z\-]+)?)?(;base64)?,[a-z0-9\!\$\&\'\,\(\)\*\+\,\;\=\-\.\_\~\:\@\/\?\%\s]*\s*$/i;h=[];do b=d.exec(c),null!==b&&(e=b[1],f.test(e)||(a&&(e=Ta(e).href),h.push(e)));while(b&&null!==b);return h},hb=function(){var c;c={cacheCompleted:!1};return{cacheAllImages:function(a,d,f){var h,
b,e,I;d=d||!1;h=kb(a);b=h.length;if(Va()&&!d&&b)for(I=e=0;I<b;I++)(function(){var a,d;a=h[I];a in c?(e++,b===e&&(c.cacheCompleted=!0,f())):(d=new X,d.crossOrigin="",d.onload=function(){var h,I;h=document.createElement("canvas");h.width=d.width;h.height=d.height;h.getContext("2d").drawImage(this,0,0);try{I=h.toDataURL("image/png"),c[a]={loaded:!0,notCORS:!0,imageUri:I}}catch(l){c[a]={loaded:!0,notCORS:!1}}finally{e++,b===e&&(c.cacheCompleted=!0,f())}},d.onerror=function(){c[a]={loaded:!1};e++;b===
e&&(c.cacheCompleted=!0,f())},d.src=a)})();else f()},getImageCachedDetails:function(a){return c[a]},isCacheAllImagesCompleted:function(){return c.cacheCompleted}}}(),ib=hb.cacheAllImages,ob=hb.getImageCachedDetails,ba=hb.isCacheAllImagesCompleted,Ba=function(c){return c=c.replace(/<image [^\>]*\>/gi,function(c){return c=c.replace(/(:href=")([^"]*)(")/gi,function(c,a,d,f){return a+Ta(d).href+f})})},Oa=function(c){var a,d,f,h;c=Ba(c);ba();a=kb(c);for(d=0;d<a.length;d++)f=a[d],h=ob(f),void 0!==h&&h.loaded&&
h.notCORS&&h.imageUri&&(c=c.replace(f,h.imageUri));return c},Qa=function(c){var a,d;a=c;var f,h,b,e,I;d=/(<image [^\>]*href=["']([^\>'"]*)["'][^\>]*\>)/g;f=/^\s*data:([a-z]+\/[a-z]+(;[a-z\-]+\=[a-z\-]+)?)?(;base64)?,[a-z0-9\!\$\&\'\,\(\)\*\+\,\;\=\-\.\_\~\:\@\/\?\%\s]*\s*$/i;h=[];do b=d.exec(a),null!==b&&(e=b[1],I=b[2],f.test(I)||h.push(e));while(b&&null!==b);for(a=0;a<h.length;a++)d=h[a],c=c.replace(d,"");return c},I=function(c,a,d,f){var h=$a(),b=f.chartId,e=f.exportCallback,I=f.paper,l;"Chrome"===
h.name||"Firefox"===h.name?("blob"===c&&(a=v.URL.createObjectURL(a)),l=M.createElement("a"),l.download=d,l.href=a,M.body.appendChild(l),l.onclick=function(){e&&v[e]&&"function"===typeof v[e]&&v[e].call(v,{statusCode:1,statusMessage:"success",DOMId:b,width:I&&I.width,height:I&&I.height});l.parentNode.removeChild(l)},l.click()):"ie"!==h.name&&"Edge"!==h.name||!v.navigator.msSaveBlob||(c="url"===c?Ya(a):a,v.navigator.msSaveBlob(c,d)&&e&&v[e]&&"function"===typeof v[e]&&v[e].call(v,{statusCode:1,statusMessage:"success",
DOMId:b,width:I&&I.width,height:I&&I.height}))},cb=function(c,a){var d,f,h,e;h=a.exportAction;var I=a.exportTargetWindow,l=a.exportCallback,g=a.fusionCharts,D=a.paper,k=a.chartId;f=a.exportHandler;e=c.parameters;var G;if(h===O.DOWNLOAD||h===O.DOWNLOADSAVE){/(webkit|gecko)/ig.test(v.navigator.userAgent)&&"_self"===I&&(I=h=k+"export_iframe",G||(G=h=da("IFRAME",{name:h,width:"1px",height:"1px"},M.body),h.style.cssText="position:absolute;left:-10px;top:-10px;"));f=da("form",{method:"POST",action:f,target:I,
style:"display:none;"},M.body);for(d in c)da("input",{type:"hidden",name:d,value:c[d]},f);f.submit();M.body.removeChild(f);f=void 0;d=e.match(/exportfilename=([^|]+)/)[1];e=e.match(/exportformat=([^|]+)/)[1];b.raiseEvent("exported",{DOMId:k,height:D.height,width:D.width,fileName:d+"."+e,statusCode:void 0,statusMessage:void 0,notice:void 0},g.chartInstance);l&&v[l]&&"function"===typeof v[l]&&v[l].call(v,{statusCode:1,statusMessage:"success",DOMId:k,width:D&&D.width,height:D&&D.height});return!0}e=
new b.ajax(function(c){var a={};c.replace(RegExp("([^?=&]+)(=([^&]*))?","g"),function(c,d,f,h){a[d]=h});l&&v[l]&&"function"===typeof v[l]&&v[l].call(v,a);b.raiseEvent("exported",a,g.chartInstance)},function(c){c={statusCode:0,statusMessage:"failure",error:c,DOMId:k,width:D&&D.width,height:D&&D.height};l&&v[l]&&"function"===typeof v[l]&&v[l].call(v,c);b.raiseEvent("exported",c,g.chartInstance,[c])});for(d in c)c.hasOwnProperty(d)&&(c[d]=encodeURIComponent(c[d]));e.post(f,c)},vb=function(c){if("chrome"===
$a().name.toLowerCase()){var a,d,f;a=c.length;for(f=c.length-1;0<=f;f--)d=c.charCodeAt(f),127<d&&2047>=d?a++:2047<d&&65535>=d&&(a+=2),56320<=d&&57343>=d&&f--;if(2E6<a)return!0}return!1},sb=function(c,a){var d=new b.ajax(function(){},function(){}),f;for(f in c)c.hasOwnProperty(f)&&(c[f]=encodeURIComponent(c[f]));d.post(a.logHandler,c)},pb=function(c){return c="data:image/svg+xml;base64,"+v.btoa(v.unescape(encodeURIComponent('<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">'+
c)))},gb=function(){var c,a,d,f,h,b,e,I;if(this&&this!==v){this.disposing=!0;if(c=this.components)for(d in c)if(a=c[d],a instanceof Array)for(f=a.length,h=0;h<f;h++)(I=a[h])&&!this.disposing&&(I.dispose?I.dispose():gb.call(I));else a&&!a.disposing&&(a.dispose?a.dispose():gb.call(a));c=this.graphics;for(b in c)if(a=c[b])if(a.hide)a.hide(),a.followers&&a.followers[0]&&(a=a.followers[0].el)&&a.hide&&a.hide();else for(e in a)f=a[e],f.hide&&f.hide();for(d in this)delete this[d]}},qb=function(c,a){return(c.pIndex||
0)-(a.pIndex||0)},mb={},nb=$a();nb.hasCanvas=Va();nb.hasSvg=N;b.registrars.component=function(c){var a,d,f,h,b,e,I,l,g;if(c&&c.length&&c[0]&&c[0].toLowerCase&&(e=c[0].toLowerCase(),l=mb[e]||(mb[e]={}),c[1]&&c[1].toLowerCase)){e=c[1].toLowerCase();if(2==c.length){if("undefined"===typeof l[e])return}else{f=l[e]=l[e]||{constructor:function(){this.config={};this.__setDefaultConfig=function(){f&&f.defConfig&&ya(this.config,f.defConfig)};this.__setDefaultConfig()},defConfig:{}};h=f.constructor;g=f.defConfig;
"undefined"!==typeof c[3]&&(I=c[3].toLowerCase(),d=l[I]);if(I&&d){a=new d.constructor;h.prototype=a;h.prototype.constructor=h;I=c[2]||{};for(b in I)h.prototype[b]="undefined"!==typeof I[b]?I[b]:a[b];h.prototype.__base__=new d.constructor}else if(l[e])for(a in b=c[2],b)h.prototype[a]=b[a];else h.prototype=c[2],h.prototype.constructor=h;null!==c[5]&&("undefined"!==typeof c[5]&&(I=c[5].toLowerCase(),d=l[I]),d&&(d=d.defConfig,ya(g,d)));"undefined"!==typeof c[4]&&ya(g,c[4])}return l[e]&&l[e].constructor}};
b.core._setLineHeightFactor=function(a){!(a=k(a))||0>a||(c.lineHeightFactor=a)};c.ColorRange=A=function(c){this.linkedItems={iapi:c};this.configure()};A.prototype={configure:function(){var a=this.linkedItems.iapi,d=a.jsonData,f=d.colorrange&&ya({},d.colorrange).color,d=F(w(Y(d.chart.palette,0)-1,0),4),d=a.defaultPaletteOptions&&a.defaultPaletteOptions.paletteColors[d||0]||c.defaultPaletteOptions.paletteColors[d||0],h=function(c,a){return c.minvalue-a.minvalue},b=a.components,e,I,l,g,D;delete this.defaultAsigned;
d instanceof Array||(d=b.colorManager.getPlotColor(0));if(f&&0<f.length){for(I=l=f.length-1;0<=I;--I)if(a=f[I])a.minvalue=b.numberFormatter.getCleanValue(a.minvalue),a.maxvalue=b.numberFormatter.getCleanValue(a.maxvalue),null===a.minvalue&&(null!==a.maxvalue?a.minvalue=a.maxvalue:I!==l&&f.splice(I,1)),void 0!==a.label&&(a.label=fa(a.label)),void 0!==a.name&&(a.name=fa(a.name)),null!==a.maxvalue&&a.minvalue>a.maxvalue&&(g=a.minvalue,a.minvalue=a.maxvalue,a.maxvalue=g);f.sort(h);f[0].code||(f[0].code=
d[0]);void 0===ca(f[0].alpha)&&(f[0].alpha="100");I=0;for(l=f.length-1;I<l;I+=1)if(b=I+1,a=f[I],h=f[b],h.code||(h.code=d[b]),void 0===ca(h.alpha)&&(h.alpha="100"),null===a.maxvalue&&(a.maxvalue=h.minvalue),a.maxvalue>h.minvalue){if(a.maxvalue>h.maxvalue){b=ya(a);b.maxvalue=a.maxvalue;D=b.minvalue=h.maxvalue;for(g=I+2;g<l&&f[g].minvalue<D;g+=1);f.splice(g,0,b);l+=1}a.maxvalue=h.minvalue}a=f[I];null===a.maxvalue&&(a.maxvalue=a.minvalue)}f&&0<f.length||(e||(e={code:"CCCCCC",alpha:"100",bordercolor:"000000",
borderalpha:"100"}),f=[e],this.defaultAsigned=!0);this.colorArr=f},getColorObj:function(c){for(var a=this.colorArr,d=0,f=a.length,h,b,e={};d<f;d+=1){e.index=d;h=a[d];b=a[d+1];if(c<h.minvalue)return e.nextObj=h,e;if(c>=h.minvalue&&c<=h.maxvalue)return e.colorObj=h,b&&c==b.minvalue&&(e.nextObj=b,e.isOnMeetPoint=!0),e;e.prevObj=h}e.index=d-1;return e},getColorRangeArr:function(c,a){var d,f=this.colorArr,h,b,e=[],I,l;if(!this.defaultAsigned&&(c>a&&(d=c,c=a,a=d),c<a&&(h=this.getColorObj(c),b=this.getColorObj(a),
h&&b))){d=c;h=h.index;for(b=b.index;h<=b;h+=1)I=ya({},f[h]),I.minvalue!==d&&(I.minvalue=d),e.push(I),l=I,d=I.maxvalue;l.maxvalue=a}return e}};A.prototype.constructor=A;c.nonGradientColorRange=A=function(c){var a=c.sortLegend||!1,d=c.mapByCategory||!1,f=c.numberFormatter;c=(c.colorRange||{}).color;var h=this.colorArr=[],b,e,I,l,g,D,k=function(c,a){return c.maxvalue-a.maxvalue};this.mapByCategory=d;if(c&&(b=c.length)){for(e=0;e<b;e+=1)l=c[e],I=qa(l.color,l.code),g=Y(l.maxvalue),D=Y(l.minvalue),l=qa(l.label,
l.displayvalue,d?"":f.dataLabels(D)+" - "+f.dataLabels(g)),(I&&g>D||d&&l)&&h.push({code:I,maxvalue:g,minvalue:D,label:fa(l),labelId:l.toLowerCase()});h.length?a&&h.sort(k):this.noValidRange=!0}};A.prototype={getColorObj:function(c){var a=this.colorArr,d=this.gradient?1:0,f=a[d],h;if(this.mapByCategory){for(c=fa(c).toLowerCase();f;){if(f.labelId===c)return{code:f.code,seriesIndex:d};d+=1;f=a[d]}return{outOfRange:!0}}if(this.gradient){if(this.scaleMin<=c&&this.scaleMax>=c){for(;f&&f.maxvalue<c;)d+=
1,f=a[d];c=(c-f.minvalue)/f.range;a=a[d-1].codeRGB;f=f.codeRGB;d=a[0];h=a[1];a=a[2];return{code:("000000"+(d+(f[0]-d)*c<<16|h+(f[1]-h)*c<<8|a+(f[2]-a)*c).toString(16)).slice(-6)}}return{outOfRange:!0}}for(;f;){if(f.maxvalue>c&&f.minvalue<=c)return{code:f.code,seriesIndex:d};f.maxvalue===c&&(h=d);d+=1;f=a[d]}return(f=a[h])&&f.maxvalue===c?{code:f.code,seriesIndex:h}:{outOfRange:!0}}};A.prototype.constructor=A;c.priorityList=J.priorityList;c.schedular=J.schedular;b.extend(c,{BLANKSTRINGPLACEHOLDER:"#BLANK#",
BLANKSTRING:"",COLOR_BLACK:"000000",COLOR_GLASS:"rgba(255, 255, 255, 0.3)",COLOR_WHITE:"FFFFFF",COLOR_TRANSPARENT:"rgba(0,0,0,0)",HASHSTRING:"#",BREAKSTRING:"<br />",STRINGSTRING:"string",OBJECTSTRING:"object",COMMASTRING:",",ZEROSTRING:"0",SAMPLESTRING:"Ay0",TESTSTR:"Ag",ONESTRING:"1",DECIMALSTRING:".",STRINGUNDEFINED:"undefined",POSITION_TOP:"top",POSITION_RIGHT:"right",POSITION_BOTTOM:"bottom",POSITION_LEFT:"left",POSITION_CENTER:"center",POSITION_MIDDLE:"middle",POSITION_START:"start",POSITION_END:"end",
FC_CONFIG_STRING:"_FCconf",SHAPE_RECT:"rect",HUNDREDSTRING:"100",PXSTRING:"px",COMMASPACE:", ",TEXTANCHOR:"text-anchor",TOUCH_THRESHOLD_PIXELS:15,CLICK_THRESHOLD_PIXELS:5,DEFAULT_EXPORT_URL:u,DEFAULT_LOG_URL:a,EXPORTACTION:O,EXPORTMODE:{CLIENT:"client",SERVER:"server",AUTO:"auto"},LOGMODE:q,EXPORTFORMAT:{PNG:"png",SVG:"svg",JPEG:"jpeg",JPG:"jpg",PDF:"pdf",XLS:"xls"},regex:{stripWhitespace:m,dropHash:n,startsRGBA:L,cleanColorCode:g,breakPlaceholder:l,hexcode:/^#?[0-9a-f]{6}/i},fireEvent:function(a,
d,f,h){c.dem.fire(a,d,f,h)},plotEventHandler:function(a,h,e,I){h=h||{};var l=h.type,g=na(a.linkedItems.container,h,a);I=this.data("eventArgs")||I;g=ya(g,I);I=a.fireGroupEvent;var D=this.data("groupId"),k=function(a,d){h.FusionChartsPreventEvent=!0;E&&d.toolText&&c.toolTip&&c.toolTip.preventTooltip()};"index"in g&&!("dataIndex"in g)&&(g.dataIndex=g.index);"value"in g&&!("dataValue"in g)&&(g.dataValue=g.value);e=qa(e,"dataplotclick").toLowerCase();"dataplotrollover"===e?(h.FusionChartsPreventEvent=
!1,I?b.raiseEventGroup(D,e,g,a.chartInstance,void 0,void 0,k):b.raiseEvent(e,g,a.chartInstance,void 0,void 0,k)):I&&"dataplotclick"!==e?b.raiseEventGroup(D,e,g,a.chartInstance):b.raiseEvent(e,g,a.chartInstance);if(("click"===l||"mouseup"===l||"touchend"===l)&&/click/i.test(e)){if(d&&!f){e=(new Date).getTime();if(this.lastClickTimeStamp&&400>e-this.lastClickTimeStamp){h&&(h.originalEvent||h).preventDefault();return}this.lastClickTimeStamp=e}a.linkedItems&&a.linkedItems.linkClickFN.call({link:g.link},
a)}},getEventCoordinate:ka,getMouseCoordinate:na,addEvent:va,removeEvent:ha,getTouchEvent:ra,extend2:ya,deltend:function(c,a){if("object"!==typeof c||"object"!==typeof a)return null;W(c,a);return c},imprint:function(c,a,d){var f;if("object"!==typeof c||null===c)return a;if("object"!==typeof a||null===a)return c;for(f in a)if(void 0===c[f]||!d&&null===c[f])c[f]=a[f];return c},pluck:qa,pluckNumber:Y,getFirstDefinedValue:function(){var c,a,d;a=0;for(d=arguments.length;a<d;a+=1)if((c=arguments[a])||!1===
c||0===c||""==c)return c},createElement:da,hashify:oa,dehashify:function(c){return c&&c.replace(/^#?([a-f0-9]+)/ig,"$1")||"none"},pluckFontSize:function(){var c,a,d;a=0;for(d=arguments.length;a<d;a+=1)if(((c=arguments[a])||!1===c||0===c)&&!isNaN(c=Number(c)))return 1>c?1:c;return 1},getValidValue:ca,getPosition:sa,getViewPortDimension:Ra,bindSelectionEvent:function(c,a){a=a||{};var d=c.config,f=c.linkedItems,h=f.container,b=d.zoomType,e=ya({},a.attr||{}),I=e["stroke-width"]=Y(e.strokeWidth,e["stroke-width"],
1),f=f.eventListeners||(f.eventListeners=[]),l=sa(h,void 0,c);a=ya({chart:c,zoomX:/x/.test(b),zoomY:/y/.test(b),canvasY:d.canvasTop,canvasX:d.canvasLeft,canvasW:d.canvasWidth,canvasH:d.canvasHeight,canvasX2:d.canvasLeft+d.canvasWidth,canvasY2:d.canvasTop+d.canvasHeight,strokeWidth:I,chartPosLeft:l.left,chartPosTop:l.top,attr:e},a);e.stroke=ma(e.stroke,"rgba(51,153,255,0.8)");e.fill=ma(e.fill,"rgba(185,213,241,0.3)");e.ishot=!0;h&&(ha(h,"pointerdrag",G),f.push(va(h,"pointerdrag",G,a)));d.link&&(ha(c.linkedItems.container,
"mouseup mousedown",aa),f.push(va(c.linkedItems.container,"mouseup mousedown",aa,a)))},createContextMenu:function(a){var d=a.chart,f=d.smartLabel,h=d.logic.hcJSON&&d.logic.hcJSON.chart.useRoundEdges,b=c.Raphael,e=function(c){var a=c.menufillcolor&&oa(c.menufillcolor),d=c.menulabelcolor&&oa(c.menulabelcolor),f=c.menufillhovercolor&&oa(c.menufillhovercolor);c=c.menulabelhovercolor&&oa(c.menulabelhovercolor);return{attrs:{backgroundColor:a,color:d},hover:{backgroundColor:f,color:c}}}(d.definition.chart),
I=function(c,a,d){a=a||{};c=(c=(c=c&&b.tintshade(c.color,.7))&&b.getRGB(c))&&"rgb("+[c.r,c.g,c.b].join()+")";return{backgroundColor:a.backgroundHoverColor||d.backgroundColor||c||"rgb(64, 64, 64)",color:a.hoverColor||d.color||"#FFFFFF"}}(a.basicStyle,a.hover,e.hover),l=function(c,a,d){a=ya({},a||{});a=ya(a,c);return{fontFamily:a.fontFamily||"Verdana,sans",fontSize:a.fontSize||"10px",color:a.color||d.color||"#000000",backgroundColor:a.backgroundColor||d.backgroundColor||"rgb(255, 255, 255)"}}(a.basicStyle,
a.attrs,e.attrs),g={textAlign:"left",align:"left",paddingLeft:"5px",paddingRight:"5px",paddingTop:"5px",cursor:"pointer",borderWidth:"0px"},D=a.items,k=a.position,G=a.verticalPadding||3,t=a.horizontalPadding||6,ba={},Ba,p,z,F,m,B,Oa,aa,K,n,R,Qa,P;if(d)Ba=sa(d.linkedItems.container);else return!1;F=function(){var a=ba.items,d=a.length,b=0,e=0,I=0,D,k;ba.menuItems||(ba.menuItems=[]);for(f.setStyle(l);d--;)D=a[d],D=f.getOriSize(D.text),I||(I=D.height+2*G),b+=I,e=w(e,D.width+2*t);ba.height=b;ba.width=
e;ba.itemH=I;this.style.width=e+"px";ba.menuRect||(b=ba.menuRect=M.createElement("div"),b.style.border="1px solid rgb(100, 100, 100)",h&&(b.style.mozBorderRadius="4px",b.style.webkitBorderRadius="4px",b.style.borderRadius="4px",b.style.overflow="hidden"),E&&!N?b.style.filter="progid:DXImageTransform.Microsoft.Shadow(Color=#999999,direction=135,strength=3)":(b.style.mozBoxShadow="3px 3px 3px #999",b.style.webkitBoxShadow="3px 3px 3px #999",b.style.boxShadow="3px 3px 3px #999"),this.appendChild(b));
e=a.length;for(d=0;d<e;d+=1)if(D=a[d],ba.menuItems[d])ba.menuItems[d].label.innerHTML=D.text;else{ba.menuItems[d]={};b=ba.menuItems[d].box=M.createElement("div");b.style.height=I+"px";b.style.lineHeight=I+"px";for(k in g)b.style[k]=g[k];for(k in l)b.style[k]=l[k];ba.menuRect.appendChild(b);b.innerHTML=D.text;c.dem.listen(b,"click",P);c.dem.listen(b,"pointerhover",n);ba.menuItems[d].box._itemIdx=d}for(;ba.menuItems[d];)ba.menuItems[d].box.parentNode.removeChild(ba.menuItems[d].box),ba.menuItems.splice(d,
1)};m=function(){z||(z=M.createElement("div"),z.style.position="absolute",z.style.zIndex="50",z.style.display="none",d.linkedItems.container.appendChild&&d.linkedItems.container.appendChild(z));return z};B=function(){p=setTimeout(ba.hide,800)};Oa=function(){p&&clearTimeout(p)};aa=function(c){var a=c.x;c=c.y;var f={x:a,y:c},h=ba.width,b=ba.height,e=d.chartHeight,I=d.chartWidth;a+h>I&&0<a-h?f.x-=h:a+h>I&&(f.x=0);c+b>e&&0<c-b&&(f.y-=b);return f};K=function(){ba.hide()};n=function(c){c.target&&c.target.parentNode&&
("start"===c.state?R:Qa).call(c.target)};R=function(){var c=ba.menuItems[this._itemIdx],a;Oa();for(a in I)c.box.style[a]=I[a]};Qa=function(){var c=ba.menuItems[this._itemIdx],a;for(a in l)c.box.style[a]=l[a];B()};P=function(c){var a=ba.items[this._itemIdx];a.onclick&&a.onclick.call(a,c);c.originalEvent.stopPropagation?c.originalEvent.stopPropagation():c.originalEvent.cancelBubble=!0;ba.hide()};ba.showItem=function(c){c=this.menuItems[c];var a=this.height,d=this.itemH;c&&c._isHidden&&(c.box.style.display=
"",this.height=a+d,c._isHidden=!1,c=aa(k),this.left=c.x,this.top=c.y)};ba.hideItem=function(c){c=this.menuItems[c];var a=this.height,d=this.itemH;c&&!c._isHidden&&(c.box.style.display="none",this.height=a-d,c._isHidden=!0,c=aa(k),this.left=c.x,this.top=c.y)};ba.redraw=function(){var c=this.menuContainer;this.items=D;c?F.call(this.menuContainer):k&&void 0!==k.x&&void 0!==k.y?(this.menuContainer=m(),F.call(this.menuContainer),c=aa(k),this.left=c.x,this.top=c.y,this.menuContainer.style.left=this.left+
"px",this.menuContainer.style.top=this.top+"px"):(this.menuContainer=m(),F.call(this.menuContainer))};ba.show=function(c){var a=this;c&&void 0!==c.x&&void 0!==c.y?(c=aa(c),a.menuContainer.style.left=c.x+"px",a.menuContainer.style.top=c.y+"px"):(a.menuContainer.style.left=a.left+"px",a.menuContainer.style.top=a.top+"px");a.menuContainer.style.display="";setTimeout(function(){a.visible=!0;b.click(K)},400)};ba.hide=function(){this.visible&&(this.visible=!1,ba.menuContainer.style.display="none",ba.menuContainer.style.left=
-ba.width+"px",ba.menuContainer.style.top=-ba.height+"px",b.unclick(K))};ba.update=function(c){c&&c.length&&(this.items=c,this.redraw())};ba.updatePosition=function(c){var a=Ba.left,f=Ba.top;Ba=sa(d.linkedItems.container);c?(k=c,c=aa(c),this.left=c.x,this.top=c.y):(this.left-=a-Ba.left,this.top-=f-Ba.top)};ba.add=function(a){var d=this.menuItems,h=d.length,b;f.setStyle(l);this.width=w(this.width,f.getOriSize(a.text).width);d[h]={};d=d[h].box=M.createElement("div");d.style.height=this.itemH+"px";d.style.lineHeight=
this.itemH+"px";for(b in g)d.style[b]=g[b];for(b in l)d.style[b]=l[b];ba.menuRect.appendChild(d);d.innerHTML=a.text;c.dem.listen(d,"click",P);c.dem.listen(d,"pointerhover",n);ba.menuItems[h].box._itemIdx=h;this.height+=this.itemH};ba.removeItems=function(){for(var a=this.menuItems,d=a&&a.length,f;d--;)f=a[d],c.dem.unlisten(f.box,"click",P),c.dem.unlisten(f.box,"pointerhover",n),f.box&&f.box.parentNode&&f.box.parentNode.removeChild(f.box);delete this.menuItems;delete this.items};ba.setPosition=function(c){void 0!==
c.x&&void 0!==c.y&&(this.menuContainer.style.x=c.x,this.menuContainer.style.y=c.y)};ba.destroy=function(){this.removeItems();this.menuContainer.parentNode.removeChild(this.menuContainer)};D&&D.length&&(ba.redraw(),ba.hide());return ba},each:function(c,a,d,f){var h;d||(d=c);f||(f={});if(xa(c))for(h=0;h<c.length;h+=1){if(!1===a.call(d,c[h],h,c,f))return h}else if(null!==c&&void 0!==c)for(h in c)if(!1===a.call(d,c[h],h,c,f))return h},getDefinedColor:function(c,a){return c||0===c||""===c?c:a},getFirstValue:ma,
getFirstColor:Aa,getColorCodeString:function(c,a){var d="",f,h,b=0,e=a.split(",");for(h=e.length;b<h;b+=1)f=e[b].split("-"),d=2===f.length?"-1"!==f[0].indexOf("dark")?d+(Ka(c,100-parseInt(f[1],10))+","):d+(ta(c,100-parseInt(f[1],10))+","):d+(e[b]+",");return d.substring(0,d.length-1)},pluckColor:function(c){if(ca(c))return c=c.split(",")[0],c=c.replace(m,""),""==c&&(c="000000"),c.replace(n,"#")},toRaphaelColor:La,gradientify:Ja,trimString:function(c){c=c.replace(/^\s\s*/,"");for(var a=/\s/,d=c.length;a.test(c.charAt(--d)););
return c.slice(0,d+1)},getFirstAlpha:ua,parsePointValue:za,parseUnsafeString:fa,parseTooltext:eb,toPrecision:function(c,a){var d=V(10,a);return p(c*d)/d},hasTouch:Z,CREDIT_HREF:P,CREDIT_STRING:"FusionCharts XT Trial",getSentenceCase:function(c){c=c||"";return c.charAt(0).toUpperCase()+c.substr(1)},getCrispValues:function(c,a,d){var f=d%2/2;d=p(c+f)-f;c=p(c+a+f)-f-d;return{position:d,distance:c}},regescape:function(c){return c&&c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},regReplaceEscape:wa,getImageURL:la,
isArray:xa,preDefStr:{colors:{B90000:"B90000",FFFFFF:"FFFFFF",AAAAAA:"AAAAAA",c000000:"000000"},defaultFontStr:"Verdana,sans",line:"line",bar:"bar",column:"column",volume:"volume",HUNDREDSTRING:"100",SEVENTYSTRING:"70",NINETYSTRING:"90",AUTOSTRING:"auto",configStr:"config",animationObjStr:"animationObj",showHoverEffectStr:"showHoverEffect",hiddenStr:"hidden",visibleStr:"visible",columnStr:"columns",barStr:"bars",barHotStr:"bar-hot",colHotStr:"col-hot",shadowStr:"shadow",dataLabelStr:"datalabel",errorBarStr:"errorBar",
errorHotStr:"error-hot",errorShadowStr:"error-shadow",negativeValueStr:"negative-values",positiveValueStr:"positive-values",zeroPlaneStr:"zero-plane",categoryPlotsStr:"categoryplots",noneStr:"NONE",setRolloverAttrStr:"setRolloverAttr",setRolloutAttrStr:"setRolloutAttr",elementStr:"element",hotElementStr:"hotElement",strokeWidthStr:"stroke-width",strokeDashStr:"stroke-dasharray",strokeLineJoinStr:"stroke-linejoin",miterStr:"miter",visiblilityStr:"visibility",ROUND:"round",PERCENTAGESTRING:"%",pStr:"p",
sStr:"s",divLineAlpha3DStr:"divLineAlpha3D",divLineAlphaStr:"divLineAlpha",altVGridColorStr:"altVGridColor",altVGridAlphaStr:"altVGridAlpha",altHGridColorStr:"altHGridColor",altHGridAlphaStr:"altHGridAlpha",PLOTFILLCOLOR_STR:"plotFillColor",UNDERSCORE:"_",gaugeFillColorStr:"gaugeFillColor",gaugeBorderColorStr:"gaugeBorderColor",NORMAL:"normal",BOLD:"bold",POINTER:"pointer",DEFAULT:"default",POSITION_MIDDLE:"middle",POSITION_START:"start",POSITION_TOP:"top",POSITION_BOTTOM:"bottom",POSITION_END:"end"},
stubFN:function(){},falseFN:function(){return!1},stableSort:function(c,a){var d=c.length,f;for(f=0;f<d;f++)c[f].ssI=f;c.sort(function(c,d){var f=a(c,d);return 0===f?c.ssI-d.ssI:f});for(f=0;f<d;f++)delete c[f].ssI},hasSVG:N,CREDIT_REGEX:S,isIE:E,isIE11:r,lineHeightFactor:1.2,getLinkAction:function(a,d){var f=function(c){return c};return function(h){var e=a.chart||a.map||{},I=Y(e.unescapelinks,1),e=Y(e.clickurloverridesplotlinks,0),l=ma(this.link,"");h=h.config&&h.config.link||"";var g=e?qa(h,l):qa(l,
h),D=g,k,G,ba,t,Ba,p,z,F,m,B;void 0!==g&&(I&&(g=v.decodeURIComponent?v.decodeURIComponent(g):v.unescape(g)),g=g.replace(/^\s+/,"").replace(/\s+$/,""),-1!==g.search(/^[a-z]*\s*[\-\:]\s*/i)&&(Ba=g.split(/\s*[\-\:]\s*/)[0].toLowerCase(),B=Ba.length),c.schedular.addJob(function(){var c;switch(Ba){case "j":ea(g);break;case "javascript":ga(g.replace(/^javascript\s*\:/i,""));break;case "n":g.replace(/^n\s*\-/i,"n-");v.open(f(g.slice(2),I));break;case "f":g=g.replace(/^f\s*\-/i,"f-");k=g.indexOf("-",2);-1!==
k?(G=g.substr(2,k-2))&&v.frames[G]?v.frames[G].location=f(g.slice(k+1),I):v.open(f(g.slice(k+1),I),G):v.open(f(g.slice(2),I));break;case "p":g=g.replace(/p\s*\-/i,"p-");k=g.indexOf("-",2);ba=g.indexOf(",",2);-1===k&&(k=1);t=f(g.slice(k+1),I);(c=v.open(t,g.substr(2,ba-2),g.substr(ba+1,k-ba-1)))&&c.focus();break;case "newchart":case "newmap":":"===g.charAt(B)&&(k=g.indexOf("-",B+1),m=g.substring(B+1,k),B=k);k=g.indexOf("-",B+1);p=g.substring(B+1,k).toLowerCase();switch(p){case "xmlurl":case "jsonurl":F=
g.substring(k+1,g.length);break;case "xml":case "json":c=z=g.substring(k+1,g.length);var h={chart:{}},e;c=c.toLowerCase();if(a.linkeddata)for(e=0;e<a.linkeddata.length;e+=1)a.linkeddata[e].id.toLowerCase()===c&&(h=a.linkeddata[e].linkedchart||a.linkeddata[e].linkedmap);F=h;p="json"}b.raiseEvent("linkedChartInvoked",{alias:m,linkType:p.toUpperCase(),data:F},d);break;default:v.location.href=g}b.raiseEvent("linkClicked",{linkProvided:D,linkInvoked:g,linkAction:Ba&&Ba.toLowerCase()},d)},c.priorityList.chartEvents))}},
graphics:{parseAlpha:Ha,convertColor:pa,getDarkColor:ta,getLightColor:Ka,mapSymbolName:function(c,a){var d="circle";c=za(c);3<=c&&(d=(a?"spoke_":"poly_")+c);return d},getColumnColor:function(c,a,d,f,h,b,e,I,l){var g,D;g=c.split(",");D=a.split(",");b=b.split(",");e=e.split(",");c=c.replace(/\s/g,"").replace(/\,$/,"");l?I={FCcolor:{color:g[0],alpha:D[0]}}:h?(c=g[0],D=D[0],I={FCcolor:{color:ta(c,75)+","+Ka(c,10)+","+ta(c,90)+","+Ka(c,55)+","+ta(c,80),alpha:D+","+D+","+D+","+D+","+D,ratio:"0,11,14,57,18",
angle:I?"90":"0"}},b=[ta(c,70)]):(a=Ha(a,g.length),I={FCcolor:{color:c,alpha:a,ratio:d,angle:I?-f:f}});return[I,{FCcolor:{color:b[0],alpha:e[0]}}]},getPointColor:function(c,a){var d,f;c=Aa(c);a=ua(a);d=Ka(c,70);f=ta(c,50);return{FCcolor:{gradientUnits:"objectBoundingBox",cx:.4,cy:.4,r:"100%",color:d+","+f,alpha:a+","+a,ratio:void 0,radialGradient:!0}}},getAngle:function(c,a,d){c=180*Math.atan(a/c)/Math.PI;2==d?c=180-c:3==d?c+=180:4==d&&(c=360-c);return c},parseColor:Fa,getValidColor:function(c){return B.test(Fa(c))&&
c},HSBtoRGB:function(c){var a=c[0],d=0,f=0,h=0,b=[],b=c[1]/100;c=c[2]/100;var e=a/60-Math.floor(a/60),I=c*(1-b),l=c*(1-e*b),b=c*(1-(1-e)*b);switch(Math.floor(a/60)%6){case 0:d=c;f=b;h=I;break;case 1:d=l;f=c;h=I;break;case 2:d=I;f=c;h=b;break;case 3:d=I;f=l;h=c;break;case 4:d=b;f=I;h=c;break;case 5:d=c,f=I,h=l}return b=[p(255*d),p(255*f),p(255*h)]},RGBtoHSB:function(c){var a=c[0],d=c[1];c=c[2];var f=Math.max(Math.max(a,d),c),h=Math.min(Math.min(a,d),c),b=0,e=0;f==h?b=0:f==a?b=(60*(d-c)/(f-h)+360)%
360:f==d?b=60*(c-a)/(f-h)+120:f==c&&(b=60*(a-d)/(f-h)+240);e=0===f?0:(f-h)/f;return[p(b),p(100*e),p(f/255*100)]},RGBtoHex:function(c){return("000000"+(c[0]<<16|c[1]<<8|c[2]).toString(16)).slice(-6)},rawRGBtoHEX:function(c){c=c.match(/[\d+]+/g).splice(0,3);return("000000"+(c[0]<<16|c[1]<<8|c[2]).toString(16)).slice(-6)},HEXtoRGB:Ea,getCubePathOutline:function(c){var a=c[2]||0,d=c[4]||0,f=c[5]||0;return["M",c[0]||0,c[1]||0,"l",d,-f,a,0,0,c[3]||0,-d,f,-a,0,"Z"]}},appliedCSS:["fontFamily","fontSize",
"fontWeight","fontStyle"],setImageDisplayMode:function(c,a,d,f,h,b,e,I){var l=f/100*I.width;f=f/100*I.height;I={};var g,D=b-2*h;g=e-2*h;var k=function(c,a,d,f,b,e){var I={};switch(c){case "top":I.y=h;break;case "bottom":I.y=e-f-h;break;case "middle":I.y=(e-f)/2}switch(a){case "left":I.x=h;break;case "right":I.x=b-d-h;break;case "middle":I.x=(b-d)/2}return I};switch(c){case "center":I.width=l;I.height=f;I.y=e/2-f/2;I.x=b/2-l/2;break;case "stretch":I.width=b-2*h;I.height=e-2*h;I.y=h;I.x=h;break;case "tile":I.width=
l;I.height=f;I.tileInfo={};I.tileInfo.xCount=c=Math.ceil(D/l);I.tileInfo.yCount=g=Math.ceil(g/f);a=k(a,d,l*c,f*g,b,e);I.y=a.y;I.x=a.x;break;case "fit":c=l/f>D/g?D/l:g/f;I.width=l*c;I.height=f*c;a=k(a,d,I.width,I.height,b,e);I.y=a.y;I.x=a.x;break;case "fill":c=l/f>D/g?g/f:D/l;I.width=l*c;I.height=f*c;a=k(a,d,I.width,I.height,b,e);I.y=a.y;I.x=a.x;break;default:a=k(a,d,l,f,b,e),I.width=l,I.height=f,I.y=a.y,I.x=a.x}return I},setLineHeight:Da,parsexAxisStyles:Ga,supportedStyle:{font:"font",fontFamily:"font-family",
"font-family":"font-family",fontWeight:"font-weight","font-weight":"font-weight",fontSize:"font-size","font-size":"font-size",lineHeight:"line-height","line-height":"line-height",textDecoration:"text-decoration","text-decoration":"text-decoration",color:"color",whiteSpace:"white-space","white-space":"white-space",padding:"padding",margin:"margin",background:"background",backgroundColor:"background-color","background-color":"background-color",backgroundImage:"background-image","background-image":"background-image",
backgroundPosition:"background-position","background-position":"background-position",backgroundPositionLeft:"background-position-left","background-position-left":"background-position-left",backgroundPositionTop:"background-position-top","background-position-top":"background-position-top",backgroundRepeat:"background-repeat","background-repeat":"background-repeat",border:"border",borderColor:"border-color","border-color":"border-color",borderStyle:"border-style","border-style":"border-style",borderThickness:"border-thickness",
"border-thickness":"border-thickness",borderTop:"border-top","border-top":"border-top",borderTopColor:"border-top-color","border-top-color":"border-top-color",borderTopStyle:"border-top-style","border-top-style":"border-top-style",borderTopThickness:"border-top-thickness","border-top-thickness":"border-top-thickness",borderRight:"border-right","border-right":"border-right",borderRightColor:"border-right-color","border-right-color":"border-right-color",borderRightStyle:"border-right-style","border-right-style":"border-right-style",
borderRightThickness:"border-right-thickness","border-right-thickness":"border-right-thickness",borderBottom:"border-bottom","border-bottom":"border-bottom",borderBottomColor:"border-bottom-color","border-bottom-color":"border-bottom-color",borderBottomStyle:"border-bottom-style","border-bottom-style":"border-bottom-style",borderBottomThickness:"border-bottom-thickness","border-bottom-thickness":"border-bottom-thickness",borderLeft:"border-left","border-left":"border-left",borderLeftColor:"border-left-color",
"border-left-color":"border-left-color",borderLeftStyle:"border-left-style","border-left-Style":"border-left-style",borderLeftThickness:"border-left-thickness","border-left-thickness":"border-left-thickness"},getAxisLimits:Ua,createTrendLine:ab,getDashStyle:Xa,axisLabelAdder:Na,chartAPI:bb,createDialog:Pa,isCanvasElemSupported:Va,componentDispose:gb,componentConfigurer:function(c){var a,d,f=[],h,b,e,I={};c=c||this;a=c.components;for(e in a)if(d=a[e],d instanceof Array)for(b=d.length,h=0;h<b;h+=1)f.push(d[h]);
else f.push(d);f.sort(qb);b=f.length;for(h=0;h<b;h+=1)d=f[h],a=d.customConfigFn,null!==a&&(a&&c[a]?I[a]||(c[a](),I[a]=!0):d.configure&&d.configure())},svgStrToDataUrl:pb,createExportActionOldString:function(c){return{download:O.DOWNLOAD,"download-save":O.DOWNLOAD,save:O.SAVE}[c]},createVersionNumberString:function(){var c;c=Q.version;return[c[0],c[1],c[2]].join(".")},cacheAllImages:ib,makeImageUrlsAbsolute:Ba,embedImagesWithNonDataURL:Oa,replaceImagesWithNonDataUrl:function(c){c=Oa(c);return c=Qa(c)},
hasUndownloadableImage:function(c){c=Oa(c);return c!==Qa(c)},isImageNotCORS:function(c){c=ob(c);return ba()?c.loaded?c.notCORS:!1:null},logCharts:function(c,a){a.logEnabled&&a.logMode!==q.SERVER&&sb(c,a)},logChartsWithoutCheck:sb,getBrowserDetails:$a,dataurlToBlob:Ya,downloadCharts:function(c,a,d,f,h){a&&!vb(a)?I(c,a,d,h):f&&cb(f,h)},isDataURITooLong:vb,browserDetails:nb,drawSvgOnCanvas:function(c,a,d,f,h,b,e){if("ie"==nb.name)new D(c,a,d,f,h,b,function(){e()});else{var I,l;c=pb(c);I=a.getContext("2d");
l=new X;l.onload=function(){I.drawImage(l,d,f,h,b);e()};l.onerror=function(){};l.src=c}},executeJS:ea,pseudoEval:ga});v.getComputedStyle||(v.getComputedStyle=function(c){this.el=c;this.getPropertyValue=function(a){var d=/(\-([a-z]){1})/g;"float"==a&&(a="styleFloat");d.test(a)&&(a=a.replace(d,function(c,a,d){return d.toUpperCase()}));return c.currentStyle[a]?c.currentStyle[a]:null};return this})}]);Q.register("module",["private","modules.renderer.js-mousetracker",function(){var b=this.hcLib,v=b.addEvent,
J=b.removeEvent,C=b.parseConfiguration,H={};Q.register("component",["tracker","mouse",{pIndex:1,init:function(b){this.eventsList="mousedown touchstart mouseup touchend mousemove touchmove click".split(" ");this.linkedItems={chart:b}},configure:function(){this.__setDefaultConfig();C(H,this.config,this.linkedItems.chart.config);this._addEvents()},_mouseEvtHandler:function(b){b.data.chart._mouseEvtHandler(b)},_getMouseEvents:function(b,u,a){var v=this._lastDatasetIndex,q=this._lastPointIndex,M={fireOut:!1,
events:[]};b=b.type;if(this.hasTouchEvent&&("mousedown"===b||"mouseout"===b))return M;switch(b){case "click":M.events.push("click");break;case "touchmove":case "mousemove":v===u&&q===a?M.events.push("mousemove"):(M.events.push("mouseover"),M.fireOut=!0);break;case "touchstart":this.hasTouchEvent=!0;case "mousedown":if(v!==u||q!==a)M.fireOut=!0,M.events.push("mouseover");M.events.push("mousedown");break;case "touchend":case "mouseup":M.events.push("mouseup");break;case "mouseout":if(v!==u||q!==a)M.fireOut=
!0,M.events.push("mouseover")}return M},_addEvents:function(){var b=this.linkedItems.chart,u=b.linkedItems.container,a=this.eventsList;b.config.enableMouseOutEvent&&a.push("mouseout");this._removeListners();v(u,a.join(" "),this._mouseEvtHandler,{chart:b,mouseTracker:this})},_removeListners:function(){var b=this.linkedItems.chart.linkedItems.container,u=this.eventsList,a,v=u.length;for(a=0;a<v;a+=1)J(b,u[a],this._mouseEvtHandler)},dispose:function(){this._removeListners()}},void 0,{stickytracking:void 0}])}]);
Q&&Q.register("module",["private","vendor.redraphael",function(){var b=this.hcLib,v=this.window,J=v.Raphael,C;(function(v){(function(b,u){var a=/[\.\/]/,v=function(){},q=function(a,b){return a-b},M,C,N={n:{}},E=function(a,b){a=String(a);var m=C,n=Array.prototype.slice.call(arguments,2),L=E.listeners(a),g=0,l,B=[],e={},V=[],p=M;M=a;for(var u=C=0,K=L.length;u<K;u++)"zIndex"in L[u]&&(B.push(L[u].zIndex),0>L[u].zIndex&&(e[L[u].zIndex]=L[u]));for(B.sort(q);0>B[g];)if(l=e[B[g++]],V.push(l.apply(b,n)),C)return C=
m,V;for(u=0;u<K;u++)if(l=L[u],"zIndex"in l)if(l.zIndex==B[g]){V.push(l.apply(b,n));if(C)break;do if(g++,(l=e[B[g]])&&V.push(l.apply(b,n)),C)break;while(l)}else e[l.zIndex]=l;else if(V.push(l.apply(b,n)),C)break;C=m;M=p;return V.length?V:null};E._events=N;E.listeners=function(b){b=b.split(a);var k=N,m,n,L,g,l,B,e,q=[k],p=[];L=0;for(g=b.length;L<g;L++){e=[];l=0;for(B=q.length;l<B;l++)for(k=q[l].n,m=[k[b[L]],k["*"]],n=2;n--;)if(k=m[n])e.push(k),p=p.concat(k.f||[]);q=e}return p};E.on=function(b,k){b=
String(b);if("function"!=typeof k)return function(){};for(var m=b.split(a),n=N,L=0,g=m.length;L<g;L++)n=n.n,n=n.hasOwnProperty(m[L])&&n[m[L]]||(n[m[L]]={n:{}});n.f=n.f||[];L=0;for(g=n.f.length;L<g;L++)if(n.f[L]==k)return v;n.f.push(k);return function(a){+a==+a&&(k.zIndex=+a)}};E.f=function(a){var b=[].slice.call(arguments,1);return function(){E.apply(null,[a,null].concat(b).concat([].slice.call(arguments,0)))}};E.stop=function(){C=1};E.nt=function(a){return a?(new RegExp("(?:\\.|\\/|^)"+a+"(?:\\.|\\/|$)")).test(M):
M};E.nts=function(){return M.split(a)};E.off=E.unbind=function(b,k){if(b){var m=b.split(a),n,L,g,l,B,e,q=[N];l=0;for(B=m.length;l<B;l++)for(e=0;e<q.length;e+=g.length-2){g=[e,1];n=q[e].n;if("*"!=m[l])n[m[l]]&&g.push(n[m[l]]);else for(L in n)n.hasOwnProperty(L)&&g.push(n[L]);q.splice.apply(q,g)}l=0;for(B=q.length;l<B;l++)for(n=q[l];n.n;){if(k){if(n.f){e=0;for(m=n.f.length;e<m;e++)if(n.f[e]==k){n.f.splice(e,1);break}!n.f.length&&delete n.f}for(L in n.n)if(n.n.hasOwnProperty(L)&&n.n[L].f){g=n.n[L].f;
e=0;for(m=g.length;e<m;e++)if(g[e]==k){g.splice(e,1);break}!g.length&&delete n.n[L].f}}else for(L in delete n.f,n.n)n.n.hasOwnProperty(L)&&n.n[L].f&&delete n.n[L].f;n=n.n}}else E._events=N={n:{}}};E.once=function(a,b){var m=function(){E.unbind(a,m);return b.apply(this,arguments)};return E.on(a,m)};E.version="0.4.2";E.toString=function(){return"You are running Eve 0.4.2"};"undefined"!=typeof module&&module.exports?module.exports=E:b.eve=E})(this,!0);"undefined"===typeof v&&"object"===typeof window&&
(v=window);(function(b,u,a){u(b,"object"===typeof module&&"undefined"!==typeof module.exports?module.exports:b.eve)})(v,function(A,u){function a(c){var d,f;void 0===a._url&&(a._url="");if(a.is(c,"function"))return p?c():u.on("raphael.DOMload",c);if(a.is(c,t))return a._engine.create[T](a,c.splice(0,3+a.is(c[0],K))).add(c);d=Array.prototype.slice.call(arguments,0);return a.is(d[d.length-1],"function")?(f=d.pop(),p?f.call(a._engine.create[T](a,d)):u.on("raphael.DOMload",function(){f.call(a._engine.create[T](a,
d))})):a._engine.create[T](a,arguments)}function J(c){this._comparator=c;this._elements=[]}function q(){return this.hex}function M(c,a){for(var d=[],f=0,h=c.length;h-2*!a>f;f+=2){var b=[{x:+c[f-2],y:+c[f-1]},{x:+c[f],y:+c[f+1]},{x:+c[f+2],y:+c[f+3]},{x:+c[f+4],y:+c[f+5]}];a?f?h-4==f?b[3]={x:+c[0],y:+c[1]}:h-2==f&&(b[2]={x:+c[0],y:+c[1]},b[3]={x:+c[2],y:+c[3]}):b[0]={x:+c[h-2],y:+c[h-1]}:h-4==f?b[3]=b[2]:f||(b[0]={x:+c[f],y:+c[f+1]});d.push(["C",(-b[0].x+6*b[1].x+b[2].x)/6,(-b[0].y+6*b[1].y+b[2].y)/
6,(b[1].x+6*b[2].x-b[3].x)/6,(b[1].y+6*b[2].y-b[3].y)/6,b[2].x,b[2].y])}return d}function U(c,a,d,f,h,b,e,I,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var g=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],D=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],k=0,G=0;12>G;G++)var ba=l*g[G]+l,t=ba*(ba*(-3*c+9*d-9*h+3*e)+6*c-12*d+6*h)-3*c+3*d,ba=ba*(ba*(-3*a+9*f-9*b+3*I)+6*a-12*f+6*b)-3*a+3*f,k=k+D[G]*oa(t*t+ba*ba);return l*k}function N(c,a,d,f,h,
b,e,I,l){if(!(0>l||U(c,a,d,f,h,b,e,I)<l)){var g=.5,D=1-g,k;for(k=U(c,a,d,f,h,b,e,I,D);.01<ra(k-l);)g/=2,D+=(k<l?1:-1)*g,k=U(c,a,d,f,h,b,e,I,D);return D}}function E(c,d,f){c=a._path2curve(c);d=a._path2curve(d);for(var h,b,e,I,l,g,D,k,G,ba,t=f?0:[],Ba=0,p=c.length;Ba<p;Ba++)if(G=c[Ba],"M"==G[0])h=l=G[1],b=g=G[2];else{"C"==G[0]?(G=[h,b].concat(G.slice(1)),h=G[6],b=G[7]):(G=[h,b,h,b,l,g,l,g],h=l,b=g);for(var z=0,F=d.length;z<F;z++)if(ba=d[z],"M"==ba[0])e=D=ba[1],I=k=ba[2];else{"C"==ba[0]?(ba=[e,I].concat(ba.slice(1)),
e=ba[6],I=ba[7]):(ba=[e,I,e,I,D,k,D,k],e=D,I=k);var m;var B=G,Oa=ba;m=f;var w=a.bezierBBox(B),aa=a.bezierBBox(Oa);if(a.isBBoxIntersect(w,aa)){for(var w=U.apply(0,B),aa=U.apply(0,Oa),w=va(~~(w/5),1),aa=va(~~(aa/5),1),K=[],n=[],R={},Qa=m?0:[],P=0;P<w+1;P++){var Ra=a.findDotsAtSegment.apply(a,B.concat(P/w));K.push({x:Ra.x,y:Ra.y,t:P/w})}for(P=0;P<aa+1;P++)Ra=a.findDotsAtSegment.apply(a,Oa.concat(P/aa)),n.push({x:Ra.x,y:Ra.y,t:P/aa});for(P=0;P<w;P++)for(B=0;B<aa;B++){var r=K[P],L=K[P+1],Oa=n[B],Ra=n[B+
1],Z=.001>ra(L.x-r.x)?"y":"x",q=.001>ra(Ra.x-Oa.x)?"y":"x",S;S=r.x;var X=r.y,V=L.x,ca=L.y,u=Oa.x,T=Oa.y,E=Ra.x,v=Ra.y;if(va(S,V)<ha(u,E)||ha(S,V)>va(u,E)||va(X,ca)<ha(T,v)||ha(X,ca)>va(T,v))S=void 0;else{var cb=(S*ca-X*V)*(u-E)-(S-V)*(u*v-T*E),sa=(S*ca-X*V)*(T-v)-(X-ca)*(u*v-T*E),Ia=(S-V)*(T-v)-(X-ca)*(u-E);if(Ia){var cb=cb/Ia,sa=sa/Ia,Ia=+cb.toFixed(2),ma=+sa.toFixed(2);S=Ia<+ha(S,V).toFixed(2)||Ia>+va(S,V).toFixed(2)||Ia<+ha(u,E).toFixed(2)||Ia>+va(u,E).toFixed(2)||ma<+ha(X,ca).toFixed(2)||ma>+va(X,
ca).toFixed(2)||ma<+ha(T,v).toFixed(2)||ma>+va(T,v).toFixed(2)?void 0:{x:cb,y:sa}}else S=void 0}S&&R[S.x.toFixed(4)]!=S.y.toFixed(4)&&(R[S.x.toFixed(4)]=S.y.toFixed(4),r=r.t+ra((S[Z]-r[Z])/(L[Z]-r[Z]))*(L.t-r.t),Oa=Oa.t+ra((S[q]-Oa[q])/(Ra[q]-Oa[q]))*(Ra.t-Oa.t),0<=r&&1.001>=r&&0<=Oa&&1.001>=Oa&&(m?Qa++:Qa.push({x:S.x,y:S.y,t1:ha(r,1),t2:ha(Oa,1)})))}m=Qa}else m=m?0:[];if(f)t+=m;else{w=0;for(aa=m.length;w<aa;w++)m[w].segment1=Ba,m[w].segment2=z,m[w].bez1=G,m[w].bez2=ba;t=t.concat(m)}}}return t}function r(c,
a,d,f,h,b){null!=c?(this.a=+c,this.b=+a,this.c=+d,this.d=+f,this.e=+h,this.f=+b):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}function k(){return this.x+" "+this.y+" "+this.width+" × "+this.height}function m(c,a,d,f,h,b){function e(c,a){var d,f,h,b;h=c;for(f=0;8>f;f++){b=((g*h+l)*h+I)*h-c;if(ra(b)<a)return h;d=(3*g*h+2*l)*h+I;if(1E-6>ra(d))break;h-=b/d}d=0;f=1;h=c;if(h<d)return d;if(h>f)return f;for(;d<f;){b=((g*h+l)*h+I)*h;if(ra(b-c)<a)break;c>b?d=h:f=h;h=(f-d)/2+d}return h}var I=3*a,l=3*
(f-a)-I,g=1-I-l,D=3*d,k=3*(h-d)-D,G=1-D-k;return function(c,a){var d=e(c,a);return((G*d+k)*d+D)*d}(c,1/(200*b))}function n(c,a){var d=[],f={};this.ms=a;this.times=1;if(c){for(var h in c)c.hasOwnProperty(h)&&(f[ca(h)]=c[h],d.push(ca(h)));d.sort(Ka)}this.anim=f;this.top=d[d.length-1];this.percents=d}function L(c,a,d){function f(c,a,d){c.isRadial&&!a.isRadial&&(a[0]={f1:c[0].f1,f2:c[0].f2},a.isRadial=!0);d||f(a,c,!0)}function h(c){var a=0,f=0,b=0,b=[],e={},I,l=e=0,g=0,a=e=b=0,f={f1:.5,f2:.5};1===c.length&&
("none"===c[0]&&(c[0]="rgba(0,0,0,0)"),c.unshift(0),c.defaultAngleSet=!0);isNaN(c[0])?~"rx".indexOf(c[0].charAt(0))?(c.isRadial=!0,b=1,-1!==c[0].indexOf(")")&&(b=c[0].indexOf(")"),e=c[0].indexOf("(")+1,a=b,b=c[0].substr(e,a-e).split(","),f.f1=parseInt(b[0])||0,f.f2=parseInt(b[1])||0,~b[2].indexOf("%")&&(b[2]=parseInt(b[2])/100),f.f3=parseInt(b[2])||0,f.f4=parseInt(b[3])||0,f.f5=parseInt(b[4])||0,f.f6=b[5]),c[0]=c[0].substr(a+1),c.unshift(f)):c[0]=0:c[0]=+c[0];a=1;for(f=c.length;a<f;++a)b=c[a].split(":"),
e=d(b[0]),c[a]={},c[a].r=e.r,c[a].g=e.g,c[a].b=e.b,c[a].opacity=e.opacity,c[a].opacity=+c[a].opacity,isNaN(c[a].opacity)&&(c[a].opacity=1),c[a].position=+b[1];c.sort(function(c,a){return"number"===typeof c||c.f1?-1:"number"===typeof a||c.f2?1:isNaN(c.position)&&isNaN(a.position)?0:isNaN(c.position)?-1:isNaN(a.position)?1:c.position-a.position});if(0!==+c[1].position)if(isNaN(c[1].position))c[1].position=0;else{e={};for(I in c[1])e[I]=c[1][I];e.position=0;c.push({});for(a=c.length-1;1!==a;--a)c[a]=
c[a-1];c[1]=e}f=c.length-1;if(100!==c[f].position)if(isNaN(c[f].position))c[f].position=100;else{e={};for(I in c[f])e[I]=c[f][I];e.position=100;c.push(e)}a=2;for(f=c.length;a<f;++a)if(!c[a].position){e=c[a-1].position;g=1;for(b=a+1;b<f;++b)if(++g,!isNaN(c[b].position)){l=+c[b].position;break}c[a].position=e+(l-e)/g}c.getColorAtPosition=function(c){for(var a=-1,d=this.length,f=1,h=this.length,b=0,e="",I={r:0,g:0,b:0};f<h-1;++f)if(this[f].position<=c&&(a=f,d=f+1),!(this[f].position<c)&&this[f].position>=
c){d=f;break}b=(c-this[a].position)/(this[d].position-this[a].position);isNaN(b)&&(b=0);for(e in I)I[e]=Db((1-b)*this[a][e]+b*this[d][e]);I.position=c;I.opacity=(1-b)*this[a].opacity+b*this[d].opacity;return I};return c}var b=c.split("-"),e=a.split("-"),I=0,l=0,g=[],D=[],k={},k=0,G=[];if(1===b.length&&1===e.length)return[c,a];b=h(b);e=h(e);!b.defaultAngleSet&&e.defaultAngleSet&&(e[0]=b[0]);!e.defaultAngleSet&&b.defaultAngleSet&&(b[0]=e[0]);f(b,e);I=1;for(l=b.length;I<l;++I)k=b[I].position,-1===G.indexOf(k)&&
G.push(k);I=1;for(l=e.length;I<l;++I)k=e[I].position,-1===G.indexOf(k)&&G.push(k);G.push(0);G.sort(function(c,a){return c-a});g=[b[0]];I=1;for(l=G.length;I<l;++I)k=G[I],k=b.getColorAtPosition(k),g.push(k);D=[e[0]];I=1;for(l=G.length;I<l;++I)k=G[I],k=e.getColorAtPosition(k),D.push(k);g.isRadial=b.isRadial;D.isRadial=e.isRadial;return[g,D]}function g(c,a){function d(c){var a=[],f=0,h=c.length;if("string"===typeof c)return c;for(f=0;f<h;++f)if(c[f].join)f&&c[f+1]&&"M"===c[f+1][0]&&"M"===c[f][0]||a.push(c[f].join(" "));
else return;a=a.join("");a=a.split(/[Mm]/).slice(1);f=0;for(h=a.length;f<h;++f)a[f]="M"+a[f];return a}function f(c){var a=0,d=0,h=[];c=c||[];d=c.length;for(a=0;a<d;++a)c[a].length-1&&h.push(c[a].join(" "));return h.join("")}function h(c,a){for(var d=c.length;d-- -1;)if(c[d].slice(1).toString()===c[d-1].slice(1).toString())c.pop();else break;1===c.length&&a&&(c.length=0)}function b(c,a){for(var d=[],f=[],h=c.length,e=0,I=0,l=0,g=0,g=0,h=a-h;0<=h;)e=c.length-1,c.push(c.slice(e)),--h;h=c.length;for(e=
0;e<=a;++e)f.push(Math.round(e/a*h));e=0;for(I=f.length-1;e<I;++e)d.push(c.slice(f[e],f[e+1])),"M"!==d[e][0][0]&&"m"!==d[e][0][0]&&(g=d[e-1].length-1,l=d[e-1][g][1],g=d[e-1][g][2],d[e].unshift(["M",l,g]));return d}var e=[],I=[],l=d(c),g=d(a),D=0,k=0,G,ba=(D=document.createElementNS&&document.createElementNS.bind(document))&&D("http://www.w3.org/2000/svg","path");if(!(l&&g&&ba&&!function(c,a){function d(c){for(var a=c.length;a-- -1;)if(c[a].join("")===c[a-1].join(""))c.pop();else break}function f(c){for(var a=
"",d=0,h=c.length;d<h;++d)a+=c[d].join(" ");return a}var h="",b="";ba.setAttribute("d","M300 10 L300 300 C50 310,50 640,350 650C600 640,600 310,400 300 L400 10 L295 10");h=ba.getTotalLength();b=ba.getPointAtLength(10);if(1829.1>h||1829.2<h||300!==Math.round(b.x)||20!==Math.round(b.y))return!0;d(c);d(a);h=f(c);b=f(a);return 2<h.split(/[Mm]/).length||2<b.split(/[Mm]/).length?!1:c.length===a.length?!0:!1}(c,a)&&c&&a))return[c,a];if(!document.createElementNS)return[c,a];l=d(c);g=d(a);if(-1!==l.join().indexOf("undefined")||
-1!==g.join().indexOf("undefined")||!ba.getTotalLength||!ba.getPointAtLength)return[c,a];k=Math.max(l.length,g.length);for(D=0;D<k;++D)G=B(l[D],g[D]),l[D]=G[0],g[D]=G[1];for(D=l.length;D--;)h(l[D],D),l[D].length||l.pop();for(D=g.length;D--;)h(g[D],D),g[D].length||g.pop();(function(c){var a=[],d=[],f=[],h=0,e=0,I=!0;if(0!==c){0<c?(a=g,I=!1):(c=-c,a=l);h=0;for(e=a.length;h<e;++h)d.push(1);for(;c--;)--h,0>h&&(h=e-1),d[h]++;for(h=0;h<e;++h)1===d[h]?f.push(a[h]):f.push.apply(f,b(a[h],d[h]));I?l=f:g=f}})(l.length-
g.length);k=Math.max(l.length,g.length);for(D=0;D<k;++D)G=B(f(l[D]),f(g[D])),l[D]=G[0],g[D]=G[1];D=0;for(k=l.length;D<k;++D)e=e.concat(l[D]);D=0;for(k=g.length;D<k;++D)I=I.concat(g[D]);return[e,I]}function l(c,a){function d(c){var a=0,f=0;c=c.split(/[MCLmcl]/).slice(1);a=0;for(f=c.length;a<f;++a)c[a]=c[a].split(" ").slice(1),a||c[a].unshift("M"),a&&(2===c[a].length&&c[a].unshift("L")||c[a].unshift("C"));return c}function f(c,a){for(var d=0,h=c.length,b,e,d=0,h=c.length;d<h;++d)b=c[d].join(" "),e=
c[d],"C"===e[0]&&e[3]===e[5]&&e[4]===e[6]?c[d].stringValue=["L",e[3],e[4]].join(" "):e.stringValue=b,a[e.stringValue]&&a[e.stringValue].push(d),a[e.stringValue]||(a[e.stringValue]=[d])}function h(c,a,d,f,b){for(var e=d,I=0,l=0,g;e<f;++e)if(g=a[c[e].stringValue])for(I=0,l=g.length;I<l;++I)if(g[I]>=b)return{index:e,mapValue:g[I],diff:e-d};return-1}function b(c){var a=c.length-1;return["M",c[a-1],c[a]].join(" ")}var e=0,I=0,l=0,g=0,D=0,k=0,G,ba,t={},Ba={},p=[],m=[],z=-1,F=-1,D=!0;c=d(c);a=d(a);f(c,t);
f(a,Ba);l=c.length;g=a.length;for(I=e=0;e<l&&I<g;){++z;++F;p[z]=[];m[F]=[];D=c[e].stringValue===a[I].stringValue;e&&(p[z].push(b(c[e-1])),m[F].push(b(a[I-1])));if(D)for(;e<l&&I<g&&c[e].stringValue===a[I].stringValue;)p[z].push(c[e].stringValue),m[F].push(a[I].stringValue),++e,++I;else{G=h(c,Ba,e,l,I);ba=h(a,t,I,g,e);D=G.index;k=G.mapValue;if(!~G||G.diff>ba.diff)D=ba.mapValue,k=ba.index;~G||~ba||(D=l-1,k=g-1);for(;e<=D;)p[z].push(c[e].stringValue),++e;for(;I<=k;)m[F].push(a[I].stringValue),++I}p[z]=
p[z].join("");m[F]=m[F].join("")}if(e<l){++z;p[z]=[];p[z].push(b(c[e-1]));++F;m[F]=[];for(m[F].push(b(a[I-1]));e<l;)p[z].push(c[e].stringValue),++e;p[z]=p[z].join("")}if(I<g){++z;p[z]=[];p[z].push(b(c[e-1]));++F;m[F]=[];for(m[F].push(b(a[I-1]));I<g;)m[F].push(a[I].stringValue),++I;m[F]=m[F].join("")}return[p,m]}function B(c,a){var d=0,f=0,h=[],b=[],e,I;c&&"M  "!==c||(c=a.split(" ").slice(0,3).join(" ").replace(/[LC]/,""));a&&"M  "!==a||(a=c.split(" ").slice(0,3).join(" ").replace(/[LC]/,""));e=l(c,
a);d=0;for(f=e[0].length;d<f;++d){I=e[0][d];var g=e[1][d],D=void 0,k=void 0,G=0,ba={},t=0,Ba=0,p=[],z=[],m=0,F=Math.round,D=document.createElementNS("http://www.w3.org/2000/svg","path");D.setAttribute("d",I);k=document.createElementNS("http://www.w3.org/2000/svg","path");k.setAttribute("d",g);t=D.getTotalLength();Ba=k.getTotalLength();m=.15*Math.max(t,Ba);m=Math.ceil(m);if(!m||!isFinite(m)||10>m)m=10;for(G=0;G<=m;++G)ba=D.getPointAtLength(G/m*t),p.push([G?"L":"M",F(ba.x),F(ba.y)]),ba=k.getPointAtLength(G/
m*Ba),z.push([G?"L":"M",F(ba.x),F(ba.y)]);I=[p,z];d?(h=h.concat(I[0].slice(1)),b=b.concat(I[1].slice(1))):(h=h.concat(I[0]),b=b.concat(I[1]))}return[h,b]}function e(c,d,f,h,b,e,I,l){f=ca(f);var D,k,G,ba,t,Ba,p,z=c.ms,F={},B={},Oa={};if(null!==d.type){l=l||{};l.hookFn&&l.hookFn.call(d);l.from=l.from||{};if(h)for(w=0,p=db.length;w<p;w++){if(Ba=db[w],Ba.el.id==d.id&&Ba.anim==c){Ba.percent!=f?(delete Ba.el.e,delete Ba.el,db.splice(w,1),G=1):k=Ba;d.attr(Ba.totalOrigin);break}}else h=+B;var w=0;for(p=c.percents.length;w<
p;w++)if(c.percents[w]==f||c.percents[w]>h*c.top){f=c.percents[w];t=c.percents[w-1]||0;z=z/c.top*(f-t);ba=c.percents[w+1];D=c.anim[f];break}else h&&d.attr(c.anim[c.percents[w]]);if(D){if(k)k.initstatus=h,k.start=new Date-k.ms*h;else{for(var aa in D)if(D.hasOwnProperty(aa))if(Fa.hasOwnProperty(aa)||d.ca[aa]){F[aa]=l.from[aa]||d.attr(aa);null==F[aa]&&(F[aa]=Ja[aa]);B[aa]=D[aa];Ba=!1;switch(Fa[aa]){case K:((p=B[aa]-F[aa])||isNaN(p))&&(Ba=!0);Oa[aa]=p/z;break;case "colour":if(F[aa]===B[aa])break;else Ba=
!0;w=L(F[aa],B[aa],a.getRGB);F[aa]=w[0];var n=w[1];if("string"===typeof n)"none"!==F[aa].toLowerCase()?(F[aa]=a.getRGB(F[aa]),F[aa].opacity||(F[aa].opacity=1)):F[aa]={r:0,g:0,b:0,opacity:0},"none"!==B[aa].toLowerCase()?(n=a.getRGB(B[aa]),n.opacity||(n.opacity=1)):n={r:0,g:0,b:0,opacity:0},Oa[aa]={r:(n.r-F[aa].r)/z,g:(n.g-F[aa].g)/z,b:(n.b-F[aa].b)/z,opacity:(n.opacity-F[aa].opacity)/z};else for(Oa[aa]=[],w=0,p=F[aa].length;w<p;++w)0===w?Oa[aa].push(n[0]):Oa[aa].push({r:(n[w].r-F[aa][w].r)/z,g:(n[w].g-
F[aa][w].g)/z,b:(n[w].b-F[aa][w].b)/z,opacity:(n[w].opacity-F[aa][w].opacity)/z});break;case "path":w=mb(F[aa],B[aa]);l.smartMorph&&(w=g(w[0],w[1],l));n=w[1];F[aa]=w[0];Oa[aa]=[];w=0;for(p=F[aa].length;w<p;w++){Oa[aa][w]=[0];var R;R=F[aa][w]?F[aa][w].length:0;for(var Qa=1;Qa<R;Qa++)Oa[aa][w][Qa]=(n[w][Qa]-F[aa][w][Qa])/z,!Ba&&Oa[aa][w][Qa]&&(Ba=!0)}break;case "transform":w=d._;p=Hb(w[aa],B[aa]);Ba=!0;if(p)for(F[aa]=p.from,B[aa]=p.to,Oa[aa]=[],Oa[aa].real=!0,w=0,p=F[aa].length;w<p;w++)for(Oa[aa][w]=
[F[aa][w][0]],Qa=1,R=F[aa][w].length;Qa<R;Qa++)Oa[aa][w][Qa]=(B[aa][w][Qa]-F[aa][w][Qa])/z;else p=d.matrix||new r,w={_:{transform:w.transform},getBBox:function(){return d.getBBox(1)}},F[aa]=[p.a,p.b,p.c,p.d,p.e,p.f],Bb(w,B[aa]),B[aa]=w._.transform,Oa[aa]=[(w.matrix.a-p.a)/z,(w.matrix.b-p.b)/z,(w.matrix.c-p.c)/z,(w.matrix.d-p.d)/z,(w.matrix.e-p.e)/z,(w.matrix.f-p.f)/z];break;case "csv":n=wa(D[aa]).split(ja);R=wa(F[aa]).split(ja);if("clip-rect"==aa)for(F[aa]=R,Oa[aa]=[],w=R.length;w--;)((p=n[w]-F[aa][w])||
isNaN(p))&&(Ba=!0),Oa[aa][w]=p/z;B[aa]=n;break;default:for(n=[].concat(D[aa]),R=[].concat(F[aa]),Oa[aa]=[],w=d.ca[aa].length;w--;)((p=(n[w]||0)-(R[w]||0))||isNaN(p))&&(Ba=!0),Oa[aa][w]=p/z}Ba||(delete F[aa],delete B[aa],delete D[aa],delete Oa[aa])}else if(a._availableAttrs.hasOwnProperty(aa)||"text"===aa||d.ca[aa])d.attr(aa,D[aa]),delete D[aa];Ba=D.easing;aa=a.easing_formulas[Ba];if(!aa)if((aa=wa(Ba).match(Ma))&&5==aa.length){var P=aa;aa=function(c){return m(c,+P[1],+P[2],+P[3],+P[4],z)}}else aa=
Da;Ba=D.start||c.start||+new Date;d.e=Ba={anim:c,percent:f,timestamp:Ba,start:Ba+(c.del||0),status:0,initstatus:h||0,stop:!1,ms:z,easing:aa,from:F,diff:Oa,to:B,el:d,callback:D.callback,prev:t,next:ba,repeat:e||c.times,origin:d.attr(),totalOrigin:b,parentEl:I,delayend:l&&l.end,delaystart:l&&l.start};db.push(Ba);if(h&&!k&&!G&&(Ba.stop=!0,Ba.start=new Date-z*h,1==db.length))return Vb();G&&(Ba.start=new Date-Ba.ms*h);1==db.length&&(ac||a.getAnimFrameFn())(Vb)}!1!==a.stopEvent&&u("raphael.anim.start."+
d.id,d,c)}}}function V(c){for(var a=0;a<db.length;a++)db[a].el.paper==c&&db.splice(a--,1)}a.upgrade="1.0.0";a.version="2.1.0";a.eve=u;C=a;var p,T="apply",K="number",t="array",Z=Array.prototype.slice,P=Array.prototype.splice,S=Array.prototype.shift,z=function(){return function(){}.hasOwnProperty("prototype")}(),R={doc:A.document,win:A},w=Object.prototype.hasOwnProperty.call(R.win,"Raphael"),F=R.win.Raphael,X=R.doc,h=R.win,d=a.supportsTouch="createTouch"in X,f=a.supportsOnlyTouch=d&&!(h.navigator.maxTouchPoints||
h.navigator.msMaxTouchPoints),c=function(){};a.ca=a.customAttributes=c.prototype;var D=function(){this.ca=this.customAttributes=new c;this._CustomAttributes=function(){};this._CustomAttributes.prototype=this.ca;this._elementsById={};this.id=a._oid++;u("raphael.new",this)},G=a.fn=D.prototype=a.prototype,aa={circle:1,rect:1,path:1,ellipse:1,text:1,image:1,group:1},Ra="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel dragstart dragmove dragend".split(" "),
Ia=a._touchMap={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},sa=a._dragEventMap={dragstart:"mousedown",dragmove:"mousemove",dragend:"mouseup"},wa=String,ca=h.parseFloat,ma=h.parseInt,qa=Math,va=qa.max,ha=qa.min,ra=qa.abs,ka=qa.pow,na=qa.cos,da=qa.sin,oa=qa.sqrt,Y=qa.round,za=qa.PI,fa=za/180,Aa=180/za,ua=wa.prototype.toLowerCase,ia=wa.prototype.toUpperCase,xa=Object.prototype.toString,ja=/[, ]+/,ya=/\{(\d+)\}/g;a._ISURL=/^url\(['"]?([^\)]+?)['"]?\)$/i;var W=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
Ma=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,ea=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,ga=/,?([achlmqrstvxz]),?/gi,la=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
Ca=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,Q=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig;
a._radial_gradient=/^x?r(?:\(([^\)]*?)\))?/;var pa={NaN:1,Infinity:1,"-Infinity":1},La={hs:1,rg:1},Ja=a._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9","clip-path":"",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"about:blank","letter-spacing":0,"line-height":12,"vertical-align":"middle",opacity:1,path:"M0,0",r:0,rx:0,ry:0,
src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",visibility:"",title:"",transform:"",rotation:0,width:0,x:0,y:0,alpha:K},Fa=a._availableAnimAttrs={blur:K,"clip-rect":"csv","clip-path":"path",cx:K,cy:K,fill:"colour","fill-opacity":K,"font-size":K,height:K,opacity:K,path:"path",r:K,rx:K,ry:K,stroke:"colour","stroke-opacity":K,"stroke-width":K,transform:"transform",
width:K,x:K,y:K,color:"colour",borderColor:"colour",borderWidth:K,alpha:K},ta={},Ka=function(c,a){return ca(c)-ca(a)},Ea=function(){},Da=function(c){return c},Ga=a._rectPath=function(c,a,d,f,h){return h?[["M",c+h,a],["l",d-2*h,0],["a",h,h,0,0,1,h,h],["l",0,f-2*h],["a",h,h,0,0,1,-h,h],["l",2*h-d,0],["a",h,h,0,0,1,-h,-h],["l",0,2*h-f],["a",h,h,0,0,1,h,-h],["z"]]:[["M",c,a],["l",d,0],["l",0,f],["l",-d,0],["z"]]},Na=function(c,a,d,f){null==f&&(f=d);return[["M",c,a],["m",0,-f],["a",d,f,0,1,1,0,2*f],["a",
d,f,0,1,1,0,-2*f],["z"]]},Ua=a._getPath={group:function(){return!1},path:function(c){return c.attr("path")},circle:function(c){c=c.attrs;return Na(c.cx,c.cy,c.r)},ellipse:function(c){c=c.attrs;return Na(c.cx,c.cy,c.rx,c.ry)},rect:function(c){c=c.attrs;return Ga(c.x,c.y,c.width,c.height,c.r)},image:function(c){c=c.attrs;return Ga(c.x,c.y,c.width,c.height)},text:function(c){c=c._getBBox();return Ga(c.x,c.y,c.width,c.height)}},Pa=a.mapPath=function(c,a){if(!a)return c;var d,f,h,b,e,I,l;c=mb(c);h=0;for(e=
c.length;h<e;h++)for(l=c[h],b=1,I=l.length;b<I;b+=2)d=a.x(l[b],l[b+1]),f=a.y(l[b],l[b+1]),l[b]=d,l[b+1]=f;return c};a.pick=function(){for(var c,a=0,d=arguments.length;a<d;a+=1)if((c=arguments[a])||!1===c||0===c)return c};var Sa=a._lastArgIfGroup=function(c,d){var f=c.length-1,h=c[f];if(h&&h.constructor===a.el.constructor&&"group"===h.type)return d&&(c[f]=void 0,delete c[f],P.call(c,f,1)),h},ab=a._serializeArgs=function(c){var d=c[0],f,h;if(a.is(d,"object")&&!a.is(d,"array")&&"group"!==d.type)for(f=
d,d.path&&(d=d.path)&&!a.is(d,"string")&&a.is(d[0],t),d=1,h=arguments.length;d<h;d+=2)f[arguments[d]]||(f[arguments[d]]=arguments[d+1]);else for(f={},d=1,h=arguments.length;d<h;d+=2)f[arguments[d]]=c[(d-1)/2]||arguments[d+1];return f},Xa=a.merge=function(c,a,d,f,h){var b,e,I,l;h?(f.push(c),h.push(a)):(f=[c],h=[a]);if(a instanceof Array)for(b=0;b<a.length;b+=1){try{e=c[b],I=a[b]}catch(g){continue}if("object"!==typeof I)d&&void 0===I||(c[b]=I);else{if(null===e||"object"!==typeof e)e=c[b]=I instanceof
Array?[]:{};l=checkCyclicRef(I,h);-1!==l?e=c[b]=f[l]:Xa(e,I,d,f,h)}}else for(b in a){try{e=c[b],I=a[b]}catch(g){continue}if(null!==I&&"object"===typeof I)if(l=xa.call(I),"[object Object]"===l){if(null===e||"object"!==typeof e)e=c[b]={};l=checkCyclicRef(I,h);-1!==l?e=c[b]=f[l]:Xa(e,I,d,f,h)}else"[object Array]"===l?(null!==e&&e instanceof Array||(e=c[b]=[]),l=checkCyclicRef(I,h),-1!==l?e=c[b]=f[l]:Xa(e,I,d,f,h)):c[b]=I;else c[b]=I}return c};a.extend=function(c,a,d){if("object"!==typeof c&&"object"!==
typeof a)return null;if("object"!==typeof a||null===a)return c;"object"!==typeof c&&(c=a instanceof Array?[]:{});Xa(c,a,d);return c};var Za=a.is=function(c,a){a=ua.call(a);return"finite"==a?!pa.hasOwnProperty(+c):a==t?c instanceof Array:"object"!==a||void 0!==c&&null!==c?"null"==a&&null===c||a==typeof c&&null!==c||"object"==a&&c===Object(c)||"array"==a&&Array.isArray&&Array.isArray(c)||xa.call(c).slice(8,-1).toLowerCase()==a:!1};a.createUUID=function(c,a){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(c,
a).toUpperCase()}}(/[xy]/g,function(c){var a=16*qa.random()|0;return("x"==c?a:a&3|8).toString(16)});a.getElementID=function(c){return"rr-"+c};var bb=a.clone=z?function(c){if(Object(c)!==c)return c;var a=new c.constructor,d;for(d in c)"prototype"!==d&&c.hasOwnProperty(d)&&(a[d]=bb(c[d]));return a}:function(c){if(Object(c)!==c)return c;var a=new c.constructor,d;for(d in c)c.hasOwnProperty(d)&&(a[d]=bb(c[d]));return a},eb=A.Node;eb&&!eb.prototype.contains&&(eb.prototype.contains=function(c){for(;c=c.parentNode;)if(c===
this)return!0;return!1});a._g=R;J.prototype.isEmpty=function(){return 0===this.size()};J.prototype.peek=function(){return this.isEmpty()?null:this._elements[0]};J.prototype.deq=function(){var c=this.peek(),a=this._elements.pop(),d=this.size();if(0===d)return c;this._elements[0]=a;for(a=0;a<d;){var f=a,h=2*a+1,b=2*a+2;h<d&&0<=this._compare(h,f)&&(f=h);b<d&&0<=this._compare(b,f)&&(f=b);if(f===a)break;this._swap(f,a);a=f}return c};J.prototype.enq=function(c){c=this._elements.push(c);for(var a=c-1;0<
a;){var d=Math.floor((a-1)/2);if(0>=this._compare(a,d))break;this._swap(d,a);a=d}return c};J.prototype.size=function(){return this._elements.length};J.prototype._compare=function(c,a){return this._comparator(this._elements[c],this._elements[a])};J.prototype._swap=function(c,a){var d=this._elements[c];this._elements[c]=this._elements[a];this._elements[a]=d};a.type=h.ENABLE_RED_CANVAS&&(h.CanvasRenderingContext2D||X.createElement("canvas").getContext)?"CANVAS":h.SVGAngle||X.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure",
"1.1")?"SVG":"VML";if("VML"==a.type){var Va=X.createElement("div"),Ya;Va.innerHTML='<v:shape adj="1"/>';Ya=Va.firstChild;Ya.style.behavior="url(#default#VML)";if(!Ya||"object"!=typeof Ya.adj)return a.type="";Va=null}a.svg=!((a.vml="VML"==a.type)||(a.canvas="CANVAS"==a.type));a._Paper=D;a._id=0;a._oid=0;a.angle=function(c,d,f,h,b,e){return null==b?(c-=f,d-=h,c||d?(qa.atan2(-d,-c)*Aa+540)%360:0):a.angle(c,d,b,e)-a.angle(f,h,b,e)};a.rad=function(c){return c%360*fa};a.deg=function(c){return c*Aa%360};
a.snapTo=function(c,a,d){var f;Za(d,"finite")||(d=10);if(Za(c,t))for(f=c.length;f--;){if(ra(c[f]-a)<=d)return c[f]}else{c=+c;f=a%c;if(f<d)return a-f;if(f>c-d)return a-f+c}return a};a.setWindow=function(c){u("raphael.setWindow",a,R.win,c);h=R.win=c;X=R.doc=R.win.document;a._engine.initWin&&a._engine.initWin(R.win)};var $a=function(c){if(a.vml){var d=/^\s+|\s+$/g,f;try{var h=new ActiveXObject("htmlfile");h.write("<body>");h.close();f=h.body}catch(b){f=createPopup().document.body}var e=f.createTextRange();
$a=ba(function(c){try{f.style.color=wa(c).replace(d,"");var a=e.queryCommandValue("ForeColor");return"#"+("000000"+((a&255)<<16|a&65280|(a&16711680)>>>16).toString(16)).slice(-6)}catch(h){return"none"}})}else{var I=R.doc.createElement("i");I.title="Raphaël Colour Picker";I.style.display="none";R.doc.body.appendChild(I);$a=ba(function(c){I.style.color=c;return R.doc.defaultView.getComputedStyle(I,"").getPropertyValue("color")})}return $a(c)},Ta=function(){return"hsb("+[this.h,this.s,this.b]+")"},kb=
function(){return"hsl("+[this.h,this.s,this.l]+")"},hb=function(){return this.hex},ib=function(c,d,f){null==d&&Za(c,"object")&&"r"in c&&"g"in c&&"b"in c&&(f=c.b,d=c.g,c=c.r);null==d&&Za(c,"string")&&(f=a.getRGB(c),c=f.r,d=f.g,f=f.b);if(1<c||1<d||1<f)c/=255,d/=255,f/=255;return[c,d,f]},ob=function(c,d,f,h){var b={r:c*=255,g:d*=255,b:f*=255,hex:a.rgb(c,d,f),toString:hb};Za(h,"finite")&&(b.opacity=h);return b};a.color=function(c){var d;a.is(c,"object")&&"h"in c&&"s"in c&&"b"in c?(d=a.hsb2rgb(c),c.r=
d.r,c.g=d.g,c.b=d.b,c.hex=d.hex):a.is(c,"object")&&"h"in c&&"s"in c&&"l"in c?(d=a.hsl2rgb(c),c.r=d.r,c.g=d.g,c.b=d.b,c.hex=d.hex):(a.is(c,"string")&&(c=a.getRGB(c)),a.is(c,"object")&&"r"in c&&"g"in c&&"b"in c?(d=a.rgb2hsl(c),c.h=d.h,c.s=d.s,c.l=d.l,d=a.rgb2hsb(c),c.v=d.b):(c={hex:"none"},c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1));c.toString=hb;return c};a.hsb2rgb=function(c,a,d,f){this.is(c,"object")&&"h"in c&&"s"in c&&"b"in c&&(d=c.b,a=c.s,c=c.h,f=c.o);var h,b,e;c=360*c%360/60;e=d*a;a=e*(1-ra(c%2-1));d=h=
b=d-e;c=~~c;d+=[e,a,0,0,a,e][c];h+=[a,e,e,a,0,0][c];b+=[0,0,a,e,e,a][c];return ob(d,h,b,f)};a.hsl2rgb=function(c,a,d,f){this.is(c,"object")&&"h"in c&&"s"in c&&"l"in c&&(d=c.l,a=c.s,c=c.h);if(1<c||1<a||1<d)c/=360,a/=100,d/=100;var h,b,e;c=360*c%360/60;e=2*a*(.5>d?d:1-d);a=e*(1-ra(c%2-1));d=h=b=d-e/2;c=~~c;d+=[e,a,0,0,a,e][c];h+=[a,e,e,a,0,0][c];b+=[0,0,a,e,e,a][c];return ob(d,h,b,f)};a.rgb2hsb=function(c,a,d){d=ib(c,a,d);c=d[0];a=d[1];d=d[2];var f,h;f=va(c,a,d);h=f-ha(c,a,d);c=((0==h?null:f==c?(a-
d)/h:f==a?(d-c)/h+2:(c-a)/h+4)+360)%6*60/360;return{h:c,s:0==h?0:h/f,b:f,toString:Ta}};a.rgb2hsl=function(c,a,d){d=ib(c,a,d);c=d[0];a=d[1];d=d[2];var f,h,b;f=va(c,a,d);h=ha(c,a,d);b=f-h;c=((0==b?null:f==c?(a-d)/b:f==a?(d-c)/b+2:(c-a)/b+4)+360)%6*60/360;f=(f+h)/2;return{h:c,s:0==b?0:.5>f?b/(2*f):b/(2-2*f),l:f,toString:kb}};a._path2string=function(){return this.join(",").replace(ga,"$1")};var ba=a._cacher=function(c,a,d){function f(){var h=Z.call(arguments,0),b=h.join("␀"),e=f.cache=f.cache||{},I=f.count=
f.count||[];if(e.hasOwnProperty(b)){a:for(var h=I,I=b,l=0,g=h.length;l<g;l++)if(h[l]===I){h.push(h.splice(l,1)[0]);break a}return d?d(e[b]):e[b]}1E3<=I.length&&delete e[I.shift()];I.push(b);e[b]=c[T](a,h);return d?d(e[b]):e[b]}return f};a._preload=function(c,a){var d=X.createElement("img");d.style.cssText="position:absolute;left:-9999em;top:-9999em";d.onload=function(){a.call(this);this.onload=null;X.body.removeChild(this)};d.onerror=function(){X.body.removeChild(this)};X.body.appendChild(d);d.src=
c};a.getRGB=ba(function(c){var d,f,h,b,e;c&&Za(c,"object")&&"opacity"in c&&(d=c.opacity);if(!c||(c=wa(c)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:q};if("none"==c)return{r:-1,g:-1,b:-1,hex:"none",toString:q};!La.hasOwnProperty(c.toLowerCase().substring(0,2))&&"#"!==c.charAt()&&(c=$a(c));if(c=c.match(W)){c[2]&&(b=ma(c[2].substring(5),16),h=ma(c[2].substring(3,5),16),f=ma(c[2].substring(1,3),16));c[3]&&(b=ma((e=c[3].charAt(3))+e,16),h=ma((e=c[3].charAt(2))+e,16),f=ma((e=c[3].charAt(1))+
e,16));c[4]&&(e=c[4].split(ea),f=ca(e[0]),"%"==e[0].slice(-1)&&(f*=2.55),h=ca(e[1]),"%"==e[1].slice(-1)&&(h*=2.55),b=ca(e[2]),"%"==e[2].slice(-1)&&(b*=2.55),"rgba"==c[1].toLowerCase().slice(0,4)&&(d=ca(e[3])),e[3]&&"%"==e[3].slice(-1)&&(d/=100));if(c[5])return e=c[5].split(ea),f=ca(e[0]),"%"==e[0].slice(-1)&&(f*=2.55),h=ca(e[1]),"%"==e[1].slice(-1)&&(h*=2.55),b=ca(e[2]),"%"==e[2].slice(-1)&&(b*=2.55),"deg"!=e[0].slice(-3)&&"°"!=e[0].slice(-1)||(f/=360),"hsba"==c[1].toLowerCase().slice(0,4)&&(d=ca(e[3])),
e[3]&&"%"==e[3].slice(-1)&&(d/=100),a.hsb2rgb(f,h,b,d);if(c[6])return e=c[6].split(ea),f=ca(e[0]),"%"==e[0].slice(-1)&&(f*=2.55),h=ca(e[1]),"%"==e[1].slice(-1)&&(h*=2.55),b=ca(e[2]),"%"==e[2].slice(-1)&&(b*=2.55),"deg"!=e[0].slice(-3)&&"°"!=e[0].slice(-1)||(f/=360),"hsla"==c[1].toLowerCase().slice(0,4)&&(d=ca(e[3])),e[3]&&"%"==e[3].slice(-1)&&(d/=100),a.hsl2rgb(f,h,b,d);c={r:f,g:h,b:b,toString:q};c.hex="#"+(16777216|b|h<<8|f<<16).toString(16).slice(1);a.is(d,"finite")&&(c.opacity=d);return c}return{r:-1,
g:-1,b:-1,hex:"none",error:1,toString:q}},a);a.tintshade=ba(function(c,d){var f=a.getRGB(c),h;h=255;0>d&&(d*=-1,h=0);1<d&&(d=1);h=0===d?f:{r:h-(h-f.r)*d,g:h-(h-f.g)*d,b:h-(h-f.b)*d,toString:q};h.hex=a.rgb(h.r,h.g,h.b);f.error&&(h.error=f.error);"opacity"in f?(h.rgba="rgba("+[h.r,h.g,h.b,f.opacity].join()+")",h.opacity=f.opacity):h.rgba="rgb("+[h.r,h.g,h.b].join()+")";return h},a);a.hsb=ba(function(c,d,f){return a.hsb2rgb(c,d,f).hex});a.hsl=ba(function(c,d,f){return a.hsl2rgb(c,d,f).hex});a.rgb=ba(function(c,
a,d){return"#"+(16777216|d|a<<8|c<<16).toString(16).slice(1)});a.getColor=function(c){c=this.getColor.start=this.getColor.start||{h:0,s:1,b:c||.75};var a=this.hsb2rgb(c.h,c.s,c.b);c.h+=.075;1<c.h&&(c.h=0,c.s-=.2,0>=c.s&&(this.getColor.start={h:0,s:1,b:c.b}));return a.hex};a.getColor.reset=function(){delete this.start};a.parsePathString=function(c){if(!c)return null;var d=Ba(c);if(d.arr)return Qa(d.arr);var f={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},h=[];a.is(c,t)&&a.is(c[0],t)&&(h=Qa(c));h.length||
wa(c).replace(la,function(c,a,d){var b=[];c=a.toLowerCase();d.replace(Q,function(c,a){a&&b.push(+a)});"m"==c&&2<b.length&&(h.push([a].concat(b.splice(0,2))),c="l",a="m"==a?"l":"L");if("r"==c)h.push([a].concat(b));else for(;b.length>=f[c]&&(h.push([a].concat(b.splice(0,f[c]))),f[c]););});h.toString=a._path2string;d.arr=Qa(h);return h};a.parseTransformString=ba(function(c){if(!c)return null;var d=[];a.is(c,t)&&a.is(c[0],t)&&(d=Qa(c));d.length||wa(c).replace(Ca,function(c,a,f){var h=[];ua.call(a);f.replace(Q,
function(c,a){a&&h.push(+a)});d.push([a].concat(h))});d.toString=a._path2string;return d});var Ba=function(c){var a=Ba.ps=Ba.ps||{};a[c]?a[c].sleep=100:a[c]={sleep:100};setTimeout(function(){for(var d in a)a.hasOwnProperty(d)&&d!=c&&(a[d].sleep--,!a[d].sleep&&delete a[d])});return a[c]};a.findDotsAtSegment=function(c,a,d,f,h,b,e,I,l){var g=1-l,D=ka(g,3),k=ka(g,2),G=l*l,ba=G*l,t=D*c+3*k*l*d+3*g*l*l*h+ba*e,D=D*a+3*k*l*f+3*g*l*l*b+ba*I,k=c+2*l*(d-c)+G*(h-2*d+c),ba=a+2*l*(f-a)+G*(b-2*f+a),Ba=d+2*l*(h-
d)+G*(e-2*h+d),G=f+2*l*(b-f)+G*(I-2*b+f);c=g*c+l*d;a=g*a+l*f;h=g*h+l*e;b=g*b+l*I;I=90-180*qa.atan2(k-Ba,ba-G)/za;(k>Ba||ba<G)&&(I+=180);return{x:t,y:D,m:{x:k,y:ba},n:{x:Ba,y:G},start:{x:c,y:a},end:{x:h,y:b},alpha:I}};a.bezierBBox=function(c,d,f,h,b,e,I,l){a.is(c,"array")||(c=[c,d,f,h,b,e,I,l]);c=qb.apply(null,c);return{x:c.min.x,y:c.min.y,x2:c.max.x,y2:c.max.y,width:c.max.x-c.min.x,height:c.max.y-c.min.y}};a.isPointInsideBBox=function(c,a,d){return a>=c.x&&a<=c.x2&&d>=c.y&&d<=c.y2};a.isBBoxIntersect=
function(c,d){var f=a.isPointInsideBBox;return f(d,c.x,c.y)||f(d,c.x2,c.y)||f(d,c.x,c.y2)||f(d,c.x2,c.y2)||f(c,d.x,d.y)||f(c,d.x2,d.y)||f(c,d.x,d.y2)||f(c,d.x2,d.y2)||(c.x<d.x2&&c.x>d.x||d.x<c.x2&&d.x>c.x)&&(c.y<d.y2&&c.y>d.y||d.y<c.y2&&d.y>c.y)};a.pathIntersection=function(c,a){return E(c,a)};a.pathIntersectionNumber=function(c,a){return E(c,a,1)};a.isPointInsidePath=function(c,d,f){var h=a.pathBBox(c);return a.isPointInsideBBox(h,d,f)&&(1==E(c,[["M",d,f],["H",h.x2+10]],1)%2||1==E(c,[["M",d,f],["V",
h.y2+10]],1)%2)};a._removedFactory=function(c){return function(){u("raphael.log",null,"Raphaël: you are calling to method “"+c+"” of removed object",c)}};var Oa=a.pathBBox=function(c){var a=Ba(c);if(!c)return{x:0,y:0,width:0,height:0,x2:0,y2:0};c=mb(c);for(var d=0,f=0,h=[],b=[],e,I=0,l=c.length;I<l;I++)e=c[I],"M"==e[0]?(d=e[1],f=e[2],h.push(d),b.push(f)):(d=qb(d,f,e[1],e[2],e[3],e[4],e[5],e[6]),h=h.concat(d.min.x,d.max.x),b=b.concat(d.min.y,d.max.y),d=e[5],f=e[6]);c=ha[T](0,h);e=ha[T](0,b);h=va[T](0,
h);b=va[T](0,b);b={x:c,y:e,x2:h,y2:b,width:h-c,height:b-e};a.bbox=bb(b);return b},Qa=function(c){c=bb(c);c.toString=a._path2string;return c},I=a._pathToRelative=function(c){var d=Ba(c);if(d.rel)return Qa(d.rel);a.is(c,t)&&a.is(c&&c[0],t)||(c=a.parsePathString(c));var f=[],h=0,b=0,e=0,I=0,l=0;"M"==c[0][0]&&(h=c[0][1],b=c[0][2],e=h,I=b,l++,f.push(["M",h,b]));for(var g=c.length;l<g;l++){var D=f[l]=[],k=c[l];if(k[0]!=ua.call(k[0]))switch(D[0]=ua.call(k[0]),D[0]){case "a":D[1]=k[1];D[2]=k[2];D[3]=k[3];
D[4]=k[4];D[5]=k[5];D[6]=+(k[6]-h).toFixed(3);D[7]=+(k[7]-b).toFixed(3);break;case "v":D[1]=+(k[1]-b).toFixed(3);break;case "m":e=k[1],I=k[2];default:for(var G=1,ba=k.length;G<ba;G++)D[G]=+(k[G]-(G%2?h:b)).toFixed(3)}else for(f[l]=[],"m"==k[0]&&(e=k[1]+h,I=k[2]+b),D=0,G=k.length;D<G;D++)f[l][D]=k[D];k=f[l].length;switch(f[l][0]){case "z":h=e;b=I;break;case "h":h+=+f[l][k-1];break;case "v":b+=+f[l][k-1];break;default:h+=+f[l][k-2],b+=+f[l][k-1]}}f.toString=a._path2string;d.rel=Qa(f);return f},cb=a._pathToAbsolute=
function(c){var d=Ba(c),f;if(d.abs)return Qa(d.abs);a.is(c,t)&&a.is(c&&c[0],t)||(c=a.parsePathString(c));if(!c||!c.length)return f=[["M",0,0]],f.toString=a._path2string,f;var h=0,b=0,e=0,I=0,l=0;f=[];"M"==c[0][0]&&(h=+c[0][1],b=+c[0][2],e=h,I=b,l++,f[0]=["M",h,b]);for(var g=3==c.length&&"M"==c[0][0]&&"R"==c[1][0].toUpperCase()&&"Z"==c[2][0].toUpperCase(),D,k=l,G=c.length;k<G;k++){f.push(l=[]);D=c[k];if(D[0]!=ia.call(D[0]))switch(l[0]=ia.call(D[0]),l[0]){case "A":l[1]=D[1];l[2]=D[2];l[3]=D[3];l[4]=
D[4];l[5]=D[5];l[6]=+(D[6]+h);l[7]=+(D[7]+b);break;case "V":l[1]=+D[1]+b;break;case "H":l[1]=+D[1]+h;break;case "R":for(var ba=[h,b].concat(D.slice(1)),p=2,F=ba.length;p<F;p++)ba[p]=+ba[p]+h,ba[++p]=+ba[p]+b;f.pop();f=f.concat(M(ba,g));break;case "M":e=+D[1]+h,I=+D[2]+b;default:for(p=1,F=D.length;p<F;p++)l[p]=+D[p]+(p%2?h:b)}else if("R"==D[0])ba=[h,b].concat(D.slice(1)),f.pop(),f=f.concat(M(ba,g)),l=["R"].concat(D.slice(-2));else for(ba=0,p=D.length;ba<p;ba++)l[ba]=D[ba];switch(l[0]){case "Z":h=e;
b=I;break;case "H":h=l[1];break;case "V":b=l[1];break;case "M":e=l[l.length-2],I=l[l.length-1];default:h=l[l.length-2],b=l[l.length-1]}}f.toString=a._path2string;d.abs=Qa(f);return f},vb=function(c,a,d,f){return[c,a,d,f,d,f]},sb=function(c,a,d,f,h,b){var e=1/3,I=2/3;return[e*c+I*d,e*a+I*f,e*h+I*d,e*b+I*f,h,b]},pb=function(c,a,d,f,h,b,e,I,l,g){var D=120*za/180,k=fa*(+h||0),G=[],t,Ba=ba(function(c,a,d){var f=c*na(d)-a*da(d);c=c*da(d)+a*na(d);return{x:f,y:c}});if(g)z=g[0],t=g[1],b=g[2],p=g[3];else{t=
Ba(c,a,-k);c=t.x;a=t.y;t=Ba(I,l,-k);I=t.x;l=t.y;na(fa*h);da(fa*h);t=(c-I)/2;z=(a-l)/2;p=t*t/(d*d)+z*z/(f*f);1<p&&(p=oa(p),d*=p,f*=p);var p=d*d,F=f*f,p=(b==e?-1:1)*oa(ra((p*F-p*z*z-F*t*t)/(p*z*z+F*t*t)));b=p*d*z/f+(c+I)/2;var p=p*-f*t/d+(a+l)/2,z=qa.asin(((a-p)/f).toFixed(9));t=qa.asin(((l-p)/f).toFixed(9));z=c<b?za-z:z;t=I<b?za-t:t;0>z&&(z=2*za+z);0>t&&(t=2*za+t);e&&z>t&&(z-=2*za);!e&&t>z&&(t-=2*za)}if(ra(t-z)>D){var G=t,F=I,m=l;t=z+D*(e&&t>z?1:-1);I=b+d*na(t);l=p+f*da(t);G=pb(I,l,d,f,h,0,e,F,m,[t,
G,b,p])}b=t-z;h=na(z);D=da(z);e=na(t);t=da(t);b=qa.tan(b/4);d=4/3*d*b;b*=4/3*f;f=[c,a];c=[c+d*D,a-b*h];a=[I+d*t,l-b*e];I=[I,l];c[0]=2*f[0]-c[0];c[1]=2*f[1]-c[1];if(g)return[c,a,I].concat(G);G=[c,a,I].concat(G).join().split(",");g=[];I=0;for(l=G.length;I<l;I++)g[I]=I%2?Ba(G[I-1],G[I],k).y:Ba(G[I],G[I+1],k).x;return g},gb=function(c,a,d,f,h,b,e,I,l){var g=1-l;return{x:ka(g,3)*c+3*ka(g,2)*l*d+3*g*l*l*h+ka(l,3)*e,y:ka(g,3)*a+3*ka(g,2)*l*f+3*g*l*l*b+ka(l,3)*I}},qb=ba(function(c,a,d,f,h,b,e,I){var l=h-
2*d+c-(e-2*h+d),g=2*(d-c)-2*(h-d),D=c-d,k=(-g+oa(g*g-4*l*D))/2/l,l=(-g-oa(g*g-4*l*D))/2/l,G=[a,I],ba=[c,e];"1e12"<ra(k)&&(k=.5);"1e12"<ra(l)&&(l=.5);0<k&&1>k&&(k=gb(c,a,d,f,h,b,e,I,k),ba.push(k.x),G.push(k.y));0<l&&1>l&&(k=gb(c,a,d,f,h,b,e,I,l),ba.push(k.x),G.push(k.y));l=b-2*f+a-(I-2*b+f);g=2*(f-a)-2*(b-f);D=a-f;k=(-g+oa(g*g-4*l*D))/2/l;l=(-g-oa(g*g-4*l*D))/2/l;"1e12"<ra(k)&&(k=.5);"1e12"<ra(l)&&(l=.5);0<k&&1>k&&(k=gb(c,a,d,f,h,b,e,I,k),ba.push(k.x),G.push(k.y));0<l&&1>l&&(k=gb(c,a,d,f,h,b,e,I,l),
ba.push(k.x),G.push(k.y));return{min:{x:ha[T](0,ba),y:ha[T](0,G)},max:{x:va[T](0,ba),y:va[T](0,G)}}}),mb=a._path2curve=ba(function(c,a){var d=!a&&Ba(c);if(!a&&d.curve)return Qa(d.curve);var f=cb(c),h=a&&cb(a),b={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},e={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},I=function(c,a){var d,f;if(!c)return["C",a.x,a.y,a.x,a.y,a.x,a.y];c[0]in{T:1,Q:1}||(a.qx=a.qy=null);switch(c[0]){case "M":a.X=c[1];a.Y=c[2];break;case "A":c=["C"].concat(pb[T](0,[a.x,a.y].concat(c.slice(1))));
break;case "S":d=a.x+(a.x-(a.bx||a.x));f=a.y+(a.y-(a.by||a.y));c=["C",d,f].concat(c.slice(1));break;case "T":a.qx=a.x+(a.x-(a.qx||a.x));a.qy=a.y+(a.y-(a.qy||a.y));c=["C"].concat(sb(a.x,a.y,a.qx,a.qy,c[1],c[2]));break;case "Q":a.qx=c[1];a.qy=c[2];c=["C"].concat(sb(a.x,a.y,c[1],c[2],c[3],c[4]));break;case "L":c=["C"].concat(vb(a.x,a.y,c[1],c[2]));break;case "H":c=["C"].concat(vb(a.x,a.y,c[1],a.y));break;case "V":c=["C"].concat(vb(a.x,a.y,a.x,c[1]));break;case "Z":c=["C"].concat(vb(a.x,a.y,a.X,a.Y))}return c},
l=function(c,a){if(7<c[a].length){c[a].shift();for(var d=c[a];d.length;)c.splice(a++,0,["C"].concat(d.splice(0,6)));c.splice(a,1);k=va(f.length,h&&h.length||0)}},g=function(c,a,d,b,e){c&&a&&"M"==c[e][0]&&"M"!=a[e][0]&&!e&&(a.splice(e,0,["M",b.x,b.y]),d.bx=0,d.by=0,d.x=c[e][1],d.y=c[e][2],k=va(f.length,h&&h.length||0))},D=0,k=va(f.length,h&&h.length||0);for(;D<k;D++){f[D]=I(f[D],b);l(f,D);h&&(h[D]=I(h[D],e));h&&l(h,D);g(f,h,b,e,D);g(h,f,e,b,D);var G=f[D],ba=h&&h[D],t=G.length,p=h&&ba.length;b.x=G[t-
2];b.y=G[t-1];b.bx=ca(G[t-4])||b.x;b.by=ca(G[t-3])||b.y;e.bx=h&&(ca(ba[p-4])||e.x);e.by=h&&(ca(ba[p-3])||e.y);e.x=h&&ba[p-2];e.y=h&&ba[p-1]}h||(d.curve=Qa(f));return h?[f,h]:f},null,Qa);a._parseDots=ba(function(c){for(var d=[],f=0,h=c.length;f<h;f++){var b={},e=c[f].match(/^([^:]*):?([\d\.]*)/);b.color=a.getRGB(e[1]);if(b.color.error)return null;b.opacity=b.color.opacity;b.color=b.color.hex;e[2]&&(b.offset=e[2]+"%");d.push(b)}f=1;for(h=d.length-1;f<h;f++)if(!d[f].offset){c=ca(d[f-1].offset||0);e=
0;for(b=f+1;b<h;b++)if(d[b].offset){e=d[b].offset;break}e||(e=100,b=h);e=ca(e);for(e=(e-c)/(b-f+1);f<b;f++)c+=e,d[f].offset=c+"%"}return d});var nb=a._tear=function(c,a){c==a.top&&(a.top=c.prev);c==a.bottom&&(a.bottom=c.next);c.next&&(c.next.prev=c.prev);c.prev&&(c.prev.next=c.next)};a._tofront=function(c,a){if(a.top===c)return!1;nb(c,a);c.next=null;c.prev=a.top;a.top.next=c;a.top=c;return!0};a._toback=function(c,a){if(a.bottom===c)return!1;nb(c,a);c.next=a.bottom;c.prev=null;a.bottom.prev=c;a.bottom=
c;return!0};a._insertafter=function(c,a,d,f){nb(c,d);c.parent=f;a===f.top&&(f.top=c);a.next&&(a.next.prev=c);c.next=a.next;c.prev=a;a.next=c};a._insertbefore=function(c,a,d,f){nb(c,d);c.parent=f;a===f.bottom&&(f.bottom=c);a.prev&&(a.prev.next=c);c.prev=a.prev;a.prev=c;c.next=a};var Fb=a.toMatrix=function(c,a){var d=Oa(c),f={_:{transform:""},getBBox:function(){return d}};Bb(f,a);return f.matrix};a.transformPath=function(c,a){return Pa(c,Fb(c,a))};var Bb=a._extractTransform=function(c,d){if(null==d)return c._.transform;
d=wa(d).replace(/\.{3}|\u2026/g,c._.transform||"");var f=a.parseTransformString(d),h=0,b=0,e=0,I=1,l=1,g=c._,e=new r;g.transform=f||[];if(f)for(var b=0,D=f.length;b<D;b++){var k=f[b],G=k.length,ba=wa(k[0]).toLowerCase(),t=k[0]!=ba,Ba=t?e.invert():0;"t"==ba&&3==G?t?(G=Ba.x(0,0),ba=Ba.y(0,0),t=Ba.x(k[1],k[2]),Ba=Ba.y(k[1],k[2]),e.translate(t-G,Ba-ba)):e.translate(k[1],k[2]):"r"==ba?2==G?(Ba=g.bb||(g.bb=c.getBBox(1)),e.rotate(k[1],Ba.x+Ba.width/2,Ba.y+Ba.height/2),h+=k[1]):4==G&&(t?(t=Ba.x(k[2],k[3]),
Ba=Ba.y(k[2],k[3]),e.rotate(k[1],t,Ba)):e.rotate(k[1],k[2],k[3]),h+=k[1]):"s"==ba?2==G||3==G?(Ba=g.bb||(g.bb=c.getBBox(1)),e.scale(k[1],k[G-1],Ba.x+Ba.width/2,Ba.y+Ba.height/2),I*=k[1],l*=k[G-1]):5==G&&(t?(t=Ba.x(k[3],k[4]),Ba=Ba.y(k[3],k[4]),e.scale(k[1],k[2],t,Ba)):e.scale(k[1],k[2],k[3],k[4]),I*=k[1],l*=k[2]):"m"==ba&&7==G&&e.add(k[1],k[2],k[3],k[4],k[5],k[6]);g.dirtyT=1;c.matrix=e}c.matrix=e;g.sx=I;g.sy=l;g.deg=h;g.dx=b=e.e;g.dy=e=e.f;1==I&&1==l&&!h&&g.bbox?(g.bbox.x+=+b,g.bbox.y+=+e):g.dirtyT=
1},Wb=function(c){var a=c[0];switch(a.toLowerCase()){case "t":return[a,0,0];case "m":return[a,1,0,0,1,0,0];case "r":return 4==c.length?[a,0,c[2],c[3]]:[a,0];case "s":return 5==c.length?[a,1,1,c[3],c[4]]:3==c.length?[a,1,1]:[a,1]}},Hb=a._equaliseTransform=function(c,d){d=wa(d).replace(/\.{3}|\u2026/g,c);c=a.parseTransformString(c)||[];d=a.parseTransformString(d)||[];for(var f=va(c.length,d.length),h=[],b=[],e=0,I,l,g,D;e<f;e++){g=c[e]||Wb(d[e]);D=d[e]||Wb(g);if(g[0]!=D[0]||"r"==g[0].toLowerCase()&&
(g[2]!=D[2]||g[3]!=D[3])||"s"==g[0].toLowerCase()&&(g[3]!=D[3]||g[4]!=D[4]))return;h[e]=[];b[e]=[];I=0;for(l=va(g.length,D.length);I<l;I++)I in g&&(h[e][I]=g[I]),I in D&&(b[e][I]=D[I])}return{from:h,to:b}};a._getContainer=function(c,d,f,h){var b;b=null!=h||a.is(c,"object")?c:R.doc.getElementById(c);if(null!=b)return b.tagName?null==d?{container:b,width:b.style.pixelWidth||b.offsetWidth,height:b.style.pixelHeight||b.offsetHeight}:{container:b,width:d,height:f}:{container:1,x:c,y:d,width:f,height:h}};
a.pathToRelative=I;a._engine={};a.path2curve=mb;a.matrix=function(c,a,d,f,h,b){return new r(c,a,d,f,h,b)};(function(c){function d(c){return c[0]*c[0]+c[1]*c[1]}function f(c){var a=oa(d(c));c[0]&&(c[0]/=a);c[1]&&(c[1]/=a)}c.add=function(c,a,d,f,h,b){var e=[[],[],[]],I=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]];a=[[c,d,h],[a,f,b],[0,0,1]];c&&c instanceof r&&(a=[[c.a,c.c,c.e],[c.b,c.d,c.f],[0,0,1]]);for(c=0;3>c;c++)for(d=0;3>d;d++){for(f=h=0;3>f;f++)h+=I[c][f]*a[f][d];e[c][d]=h}this.a=e[0][0];
this.b=e[1][0];this.c=e[0][1];this.d=e[1][1];this.e=e[0][2];this.f=e[1][2]};c.invert=function(){var c=this.a*this.d-this.b*this.c;return new r(this.d/c,-this.b/c,-this.c/c,this.a/c,(this.c*this.f-this.d*this.e)/c,(this.b*this.e-this.a*this.f)/c)};c.clone=function(){return new r(this.a,this.b,this.c,this.d,this.e,this.f)};c.translate=function(c,a){this.add(1,0,0,1,c,a)};c.scale=function(c,a,d,f){null==a&&(a=c);(d||f)&&this.add(1,0,0,1,d,f);this.add(c,0,0,a,0,0);(d||f)&&this.add(1,0,0,1,-d,-f)};c.rotate=
function(c,d,f){c=a.rad(c);d=d||0;f=f||0;var h=+na(c).toFixed(9);c=+da(c).toFixed(9);this.add(h,c,-c,h,d,f);this.add(1,0,0,1,-d,-f)};c.x=function(c,a){return c*this.a+a*this.c+this.e};c.y=function(c,a){return c*this.b+a*this.d+this.f};c.get=function(c){return+this[wa.fromCharCode(97+c)].toFixed(4)};c.toString=function(){return a.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()};c.toMatrixString=
function(){return"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")"};c.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"};c.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};c.split=function(){var c={};c.dx=this.e;c.dy=this.f;var h=[[this.a,this.c],[this.b,this.d]];c.scalex=
oa(d(h[0]));f(h[0]);c.shear=h[0][0]*h[1][0]+h[0][1]*h[1][1];h[1]=[h[1][0]-h[0][0]*c.shear,h[1][1]-h[0][1]*c.shear];c.scaley=oa(d(h[1]));f(h[1]);c.shear/=c.scaley;var b=-h[0][1],h=h[1][1];0>h?(c.rotate=a.deg(qa.acos(h)),0>b&&(c.rotate=360-c.rotate)):c.rotate=a.deg(qa.asin(b));c.isSimple=!+c.shear.toFixed(9)&&(c.scalex.toFixed(9)==c.scaley.toFixed(9)||!c.rotate);c.isSuperSimple=!+c.shear.toFixed(9)&&c.scalex.toFixed(9)==c.scaley.toFixed(9)&&!c.rotate;c.noRotation=!+c.shear.toFixed(9)&&!c.rotate;return c};
c.toTransformString=function(c){c=c||this.split();return c.isSimple?(c.scalex=+c.scalex.toFixed(4),c.scaley=+c.scaley.toFixed(4),c.rotate=+c.rotate.toFixed(4),(c.dx||c.dy?"t"+[c.dx,c.dy]:"")+(1!=c.scalex||1!=c.scaley?"s"+[c.scalex,c.scaley,0,0]:"")+(c.rotate?"r"+[c.rotate,0,0]:"")):"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}})(r.prototype);var wb=h.navigator,Nb=wb.userAgent.match(/Version\/(.*?)\s/)||wb.userAgent.match(/Chrome\/(\d+)/);"Apple Computer, Inc."==wb.vendor&&
(Nb&&4>Nb[1]||"iP"==wb.platform.slice(0,2))||"Google Inc."==wb.vendor&&Nb&&8>Nb[1]?G.safari=function(){var c=this.rect(-99,-99,this.width+99,this.height+99).attr({stroke:"none"});setTimeout(function(){c.remove()});return!0}:G.safari=Ea;for(var xb=function(){this.returnValue=!1},yb=function(){return this.originalEvent.preventDefault()},Cb=function(){this.cancelBubble=!0},Ib=function(){return this.originalEvent.stopPropagation()},Jb=a.addEvent=function(){if(R.doc.addEventListener)return function(c,
a,h,b){var e=f&&Ia[a]||a,I;Ia[sa[a]]&&(e=Ia[sa[a]]);I=function(e){var I=R.doc.documentElement.scrollTop||R.doc.body.scrollTop,l=R.doc.documentElement.scrollLeft||R.doc.body.scrollLeft,g;if(d&&Ia.hasOwnProperty(f?a:sa[a]))for(var D=0,k=e.targetTouches&&e.targetTouches.length;D<k;D++)if(g=e.targetTouches[D].target,g==c||"tspan"==g.nodeName&&g.parentNode==c){g=e;e=e.targetTouches[D];e.originalEvent=g;e.preventDefault=yb;e.stopPropagation=Ib;break}return h.call(b,e,e.clientX+l,e.clientY+I)};c.addEventListener(e,
I,!1);return function(){c.removeEventListener(e,I,!1);return!0}};if(R.doc.attachEvent)return function(c,a,d,f){var h=function(c){c=c||R.win.event;var a=c.clientX+(R.doc.documentElement.scrollLeft||R.doc.body.scrollLeft),h=c.clientY+(R.doc.documentElement.scrollTop||R.doc.body.scrollTop);c.preventDefault=c.preventDefault||xb;c.stopPropagation=c.stopPropagation||Cb;return d.call(f,c,a,h)};c.attachEvent("on"+a,h);return function(){c.detachEvent("on"+a,h);return!0}}}(),ub=[],jb=function(c){for(var f=
c.clientX,h=c.clientY,b=R.doc.documentElement.scrollTop||R.doc.body.scrollTop,e=R.doc.documentElement.scrollLeft||R.doc.body.scrollLeft,I,l,g=ub.length;g--;){I=ub[g];if(d&&"touchmove"===c.type){l=c.touches.length;for(var D;l--;)if(D=c.touches[l],D.identifier==I.el._drag.id){f=D.clientX;h=D.clientY;(c.originalEvent?c.originalEvent:c).preventDefault();break}}else c.preventDefault();if(!I.el.removed){l=a._engine.getNode(I.el);var k=l.nextSibling,G=l.parentNode,ba=l.style.display;R.win.opera&&G.removeChild(l);
l.style.display="none";D=I.el.paper.getElementByPoint(f,h);l.style.display=ba;R.win.opera&&(k?G.insertBefore(l,k):G.appendChild(l));D&&u("raphael.drag.over."+I.el.id,I.el,D);f+=e;h+=b;l=c.data=[f-I.el._drag.x,h-I.el._drag.y,f,h];u("raphael.drag.move."+I.el.id,I.move_scope||I.el,c,l)}}},tb=function(c){a.undragmove(jb).undragend(tb);a.unmousemove(jb).unmouseup(tb);for(var d=ub.length,f;d--;)f=ub[d],f.el._drag={},u("raphael.drag.end."+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,c);ub=[]},
Wa=a.el={},Kb=Ra.length;Kb--;)(function(c){a[c]=Wa[c]=function(d,f){a.is(d,"function")&&(this.events=this.events||[],this.events.push({name:c,f:d,unbind:Jb(this.shape||this.node||R.doc,c,d,f||this)}));return this};a["un"+c]=Wa["un"+c]=function(a){for(var d=this.events||[],f=d.length;f--;)if(d[f].name==c&&d[f].f==a){d[f].unbind();d.splice(f,1);!d.length&&delete this.events;break}return this}})(Ra[Kb]);Wa.data=function(c,d){var f=ta[this.id]=ta[this.id]||{};if(1==arguments.length){if(a.is(c,"object")){for(var h in c)c.hasOwnProperty(h)&&
this.data(h,c[h]);return this}u("raphael.data.get."+this.id,this,f[c],c);return f[c]}f[c]=d;u("raphael.data.set."+this.id,this,d,c);return this};Wa.removeData=function(c){null==c?delete ta[this.id]:ta[this.id]&&delete ta[this.id][c];return this};Wa.getData=function(){return bb(ta[this.id]||{})};var zb=[],Gb=function(){this.untrack=Jb(R.doc,"mouseup",Sb,this)},Sb=function(){this.untrack();this.untrack=null;return this.fn&&this.fn.apply(this.scope||this.el,arguments)};Wa.mouseup=function(c,d,f){if(!f)return a.mouseup.apply(this,
arguments);zb.push(f={el:this,fn:c,scope:d});f.unbind=Jb(this.shape||this.node||R.doc,"mousedown",Gb,f);return this};Wa.unmouseup=function(c){for(var d=zb.length,f;d--;)zb[d].el===this&&zb[d].fn===c&&(f=zb[d],f.unbind(),f.untrack&&f.untrack(),zb.splice(d,1));return f?this:a.unmouseup.apply(this,arguments)};Wa.hover=function(c,a,d,f){return this.mouseover(c,d).mouseout(a,f||d)};Wa.unhover=function(c,a){return this.unmouseover(c).unmouseout(a)};var fb=[];Wa.drag=function(c,h,b,e,I,l){function g(D){var k=
R.doc.documentElement.scrollTop||R.doc.body.scrollTop,G=R.doc.documentElement.scrollLeft||R.doc.body.scrollLeft;this._drag.x=D.clientX+G;this._drag.y=D.clientY+k;this._drag.id=D.identifier;d&&!f&&!ub.length&&a.dragmove(jb).dragend(tb);!ub.length&&a.mousemove(jb).mouseup(tb);ub=[{el:this,move_scope:e,start_scope:I,end_scope:l}];k=D.data=[D.clientX+G,D.clientY+k];h&&h.call(I||e||this,D,k);c&&u.on("raphael.drag.move."+this.id,c);b&&u.on("raphael.drag.end."+this.id,b)}this._drag={};fb.push({el:this,start:g,
onstart:h,onmove:c,onend:b});d&&!f&&this.dragstart(g);this.mousedown(g);return this};Wa.onDragOver=function(c){c?u.on("raphael.drag.over."+this.id,c):u.unbind("raphael.drag.over."+this.id)};Wa.undrag=function(){for(var c=fb.length;c--;)fb[c].el==this&&(this.unmousedown(fb[c].start),fb.splice(c,1),u.unbind("raphael.drag.*."+this.id));!fb.length&&a.unmousemove(jb).unmouseup(tb);delete this._drag};Wa.undragmove=function(){for(var c=fb.length;c--;)fb[c].el==this&&fb[c].onmove&&(this.unmousedown(fb[c].start),
fb.splice(c,1),u.unbind("raphael.drag.move."+this.id));!fb.length&&a.unmousemove(jb).unmouseup(tb)};Wa.undragend=function(){for(var c=fb.length;c--;)fb[c].el==this&&fb[c].onend&&(this.unmousedown(fb[c].start),fb.splice(c,1),u.unbind("raphael.drag.end."+this.id));!fb.length&&a.unmousemove(jb).unmouseup(tb)};Wa.undragstart=function(){for(var c=fb.length;c--;)fb[c].el==this&&fb[c].onstart&&(this.unmousedown(fb[c].start),fb.splice(c,1),u.unbind("raphael.drag.start."+this.id),this._dragstart=!1);!fb.length&&
a.unmousemove(jb).unmouseup(tb)};Wa.follow=function(c,d,f){if(c.removed||c.constructor!==a.el.constructor)return this;c.followers.push({el:this,stalk:f={before:"insertBefore",after:"insertAfter"}[f],cb:d});f&&this[f](c);return this};Wa.unfollow=function(c){if(c.removed||c.constructor!==a.el.constructor)return this;for(var d=0,f=c.followers.length;d<f;d++)if(c.followers[d].el===this){c.followers.splice(d,1);break}return this};G.hide=function(){this.canvas.style.visibility="hidden";return this};G.show=
function(){this.canvas.style.visibility="";return this};G.group=function(){var c=arguments,d=Sa(c,!0),c=a._engine.group(this,c[0],d);return this.__set__&&this.__set__.push(c),this._elementsById[c.id]=c};G.circle=function(){var c=arguments,d=Sa(c,!0),c=ab(c,"cx",0,"cy",0,"r",0,"fill","none","stroke","#000"),d=a._engine.circle(this,c,d);return this.__set__&&this.__set__.push(d),this._elementsById[d.id]=d};G.rect=function(){var c=arguments,d=Sa(c,!0),c=ab(c,"x",0,"y",0,"width",0,"height",0,"r",0,"fill",
"none","stroke","#000"),d=a._engine.rect(this,c,d);return this.__set__&&this.__set__.push(d),this._elementsById[d.id]=d};G.ellipse=function(){var c=arguments,d=Sa(c,!0),c=ab(c,"x",0,"y",0,"rx",0,"ry",0,"fill","none","stroke","#000"),d=a._engine.ellipse(this,c,d);return this.__set__&&this.__set__.push(d),this._elementsById[d.id]=d};G.path=function(){var c=arguments,d=Sa(c,!0),f=this.config,c=ab(c,"path","","fill","none","stroke","#000","stroke-linecap",f&&f["stroke-linecap"]||"butt"),d=a._engine.path(this,
c,d);return this.__set__&&this.__set__.push(d),this._elementsById[d.id]=d};G.image=function(){var c=arguments,d=Sa(c,!0),c=ab(c,"src","","x",0,"y",0,"width",0,"height",0);out=a._engine.image(this,c,d);return this.__set__&&this.__set__.push(out),this._elementsById[out.id]=out};G.text=function(){var c=arguments,d=Sa(c,!0),f=ab(c,"x",0,"y",0,"text","","stroke","none","fill","#000","text-anchor","middle","vertical-align","middle"),c=a._engine.text(this,f,d,c[1]);return this.__set__&&this.__set__.push(c),
this._elementsById[c.id]=c};G.set=function(c){!a.is(c,"array")&&(c=P.call(arguments,0,arguments.length));var d=new Eb(c);this.__set__&&this.__set__.push(d);return d};G.setConfig=function(c,a){void 0!==c&&void 0!==a&&(this.config=this.config||{},this.config[c]=a);return this.config};G.setStart=function(c){this.__set__=c||this.set()};G.setFinish=function(c){c=this.__set__;delete this.__set__;return c};G.setSize=function(c,d){return a._engine.setSize.call(this,c,d)};G.setDimension=function(c,a){"object"===
typeof c?this.setSize(c.width,c.height):this.setSize(c,a)};G.attr=function(c){if(null==c)return{width:this.width,height:this.height};if(a.is(c,"string"))return this[c];this.setDimension(c);return this};G.status=function(c,a){return Wa.status.call(this,c,a)};G.animateWith=function(c,a,d,f,h,b,e){return Wa.animateWith.call(this,c,a,d,f,h,b,e)};G.animate=function(c,a,d,f){return Wa.animate.call(this,c,a,d,f)};G.setViewBox=function(c,d,f,h,b){return a._engine.setViewBox.call(this,c,d,f,h,b)};G.top=G.bottom=
null;G.raphael=a;G.getElementByPoint=function(c,a){var d,f,h=this.canvas,b=R.doc.elementFromPoint(c,a);if(R.win.opera&&"svg"==b.tagName){f=h.getBoundingClientRect();d=h.ownerDocument;var e=d.body,I=d.documentElement;d=f.top+(R.win.pageYOffset||I.scrollTop||e.scrollTop)-(I.clientTop||e.clientTop||0);f=f.left+(R.win.pageXOffset||I.scrollLeft||e.scrollLeft)-(I.clientLeft||e.clientLeft||0);e=h.createSVGRect();e.x=c-f;e.y=a-d;e.width=e.height=1;d=h.getIntersectionList(e,null);d.length&&(b=d[d.length-1])}if(!b)return null;
for(;b.parentNode&&b!=h.parentNode&&!b.raphael;)b=b.parentNode;b==this.canvas.parentNode&&(b=h);return b=b&&b.raphael?this.getById(b.raphaelid):null};G.getElementsByBBox=function(c){var d=this.set();this.forEach(function(f){a.isBBoxIntersect(f.getBBox(),c)&&d.push(f)});return d};G.getById=function(c){return this._elementsById[c]||null};G.forEach=function(c,a){for(var d=this.bottom;d&&!1!==c.call(a,d);)d=d.next;return this};G.getElementsByPoint=function(c,a){var d=this.set();this.forEach(function(f){f.isPointInside(c,
a)&&d.push(f)});return d};Wa.isPointInside=function(c,d){var f=this.realPath=this.realPath||Ua[this.type](this),h;return a.isPointInsidePath((h=this.attr("transform"))&&h.length&&a.transformPath(f,h)||f,c,d)};Wa.getBBox=function(c){if(this.removed)return{};var a=this._;if(c){if(a.dirty||!a.bboxwt)this.realPath=Ua[this.type](this),a.bboxwt=Oa(this.realPath),a.bboxwt.toString=k,a.dirty=0;return a.bboxwt}if(a.dirty||a.dirtyT||!a.bbox){if(a.dirty||!this.realPath)a.bboxwt=0,this.realPath=Ua[this.type](this);
a.bbox=Oa(Pa(this.realPath,this.matrix));a.bbox.toString=k;a.dirty=a.dirtyT=0}return a.bbox};Wa.clone=function(){if(this.removed)return null;var c=this.paper[this.type]().attr(this.attr());this.__set__&&this.__set__.push(c);return c};Wa.glow=function(c){if("text"==this.type)return null;c=c||{};var a=(c.width||10)+(+this.attr("stroke-width")||1),d=c.fill||!1,f=c.opacity||.5,h=c.offsetx||0,b=c.offsety||0;c=c.color||"#000";for(var e=a/2,I=this.paper,l=I.set(),g=this.realPath||Ua[this.type](this),g=this.matrix?
Pa(g,this.matrix):g,D=1;D<e+1;D++)l.push(I.path(g).attr({stroke:c,fill:d?c:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(a/e*D).toFixed(3),opacity:+(f/e).toFixed(3)}));return l.insertBefore(this).translate(h,b)};var Tb=function(c,d,f,h,b,e,I,l,g){return null==g?U(c,d,f,h,b,e,I,l):a.findDotsAtSegment(c,d,f,h,b,e,I,l,N(c,d,f,h,b,e,I,l,g))},Lb=function(c,d){return function(f,h,b){f=mb(f);for(var e,I,l,g,D="",k={},G=0,ba=0,t=f.length;ba<t;ba++){l=f[ba];if("M"==l[0])e=+l[1],
I=+l[2];else{g=Tb(e,I,l[1],l[2],l[3],l[4],l[5],l[6]);if(G+g>h){if(d&&!k.start){e=Tb(e,I,l[1],l[2],l[3],l[4],l[5],l[6],h-G);D+=["C"+e.start.x,e.start.y,e.m.x,e.m.y,e.x,e.y];if(b)return D;k.start=D;D=["M"+e.x,e.y+"C"+e.n.x,e.n.y,e.end.x,e.end.y,l[5],l[6]].join();G+=g;e=+l[5];I=+l[6];continue}if(!c&&!d)return e=Tb(e,I,l[1],l[2],l[3],l[4],l[5],l[6],h-G),{x:e.x,y:e.y,alpha:e.alpha}}G+=g;e=+l[5];I=+l[6]}D+=l.shift()+l}k.end=D;e=c?G:d?k:a.findDotsAtSegment(e,I,l[0],l[1],l[2],l[3],l[4],l[5],1);e.alpha&&(e=
{x:e.x,y:e.y,alpha:e.alpha});return e}},Mb=Lb(1),Ob=Lb(),Pb=Lb(0,1);a.getTotalLength=Mb;a.getPointAtLength=Ob;a.getSubpath=function(c,a,d){if(1E-6>this.getTotalLength(c)-d)return Pb(c,a).end;c=Pb(c,d,1);return a?Pb(c,a).end:c};Wa.getTotalLength=function(){if("path"==this.type)return this.node.getTotalLength?this.node.getTotalLength():Mb(this.attrs.path)};Wa.getPointAtLength=function(c){if("path"==this.type)return Ob(this.attrs.path,c)};Wa.getSubpath=function(c,d){if("path"==this.type)return a.getSubpath(this.attrs.path,
c,d)};var rb=a.easing_formulas={linear:function(c){return c},"<":function(c){return ka(c,1.7)},">":function(c){return ka(c,.48)},"<>":function(c){var a=.48-c/1.04,d=oa(.1734+a*a);c=d-a;c=ka(ra(c),1/3)*(0>c?-1:1);a=-d-a;a=ka(ra(a),1/3)*(0>a?-1:1);c=c+a+.5;return 3*(1-c)*c*c+c*c*c},backIn:function(c){return c*c*(2.70158*c-1.70158)},backOut:function(c){--c;return c*c*(2.70158*c+1.70158)+1},elastic:function(c){return c==!!c?c:ka(2,-10*c)*da(2*(c-.075)*za/.3)+1},bounce:function(c){c<1/2.75?c*=7.5625*c:
c<2/2.75?(c-=1.5/2.75,c=7.5625*c*c+.75):c<2.5/2.75?(c-=2.25/2.75,c=7.5625*c*c+.9375):(c-=2.625/2.75,c=7.5625*c*c+.984375);return c},oneBounceOut:function(c){return.9>=c?1.33*rb.easeIn(c):1.2-c/5},elasticOnce:function(c){return c==!!c?c:Math.pow(2,-10*c)*Math.sin(2*(c-.225)*Math.PI/.9)+1},easeInQuad:function(c){return c*c},easeOutQuad:function(c){return c*(2-c)},easeInOutQuad:function(c){return.5>c?2*c*c:-1+(4-2*c)*c},easeInCubic:function(c){return c*c*c},easeOutCubic:function(c){return--c*c*c+1},
easeInOutCubic:function(c){return.5>c?4*c*c*c:(c-1)*(2*c-2)*(2*c-2)+1},easeInQuart:function(c){return c*c*c*c},easeOutQuart:function(c){return 1- --c*c*c*c},easeInOutQuart:function(c){return.5>c?8*c*c*c*c:1-8*--c*c*c*c},easeInQuint:function(c){return c*c*c*c*c},easeOutQuint:function(c){return 1+--c*c*c*c*c},easeInOutQuint:function(c){return.5>c?16*c*c*c*c*c:1+16*--c*c*c*c*c}};rb.easeIn=rb["ease-in"]=rb["<"];rb.easeOut=rb["ease-out"]=rb[">"];rb.easeInOut=rb["ease-in-out"]=rb["<>"];rb["back-in"]=rb.backIn;
rb["back-out"]=rb.backOut;var db=[],ac,Vb=function(){for(var c=+new Date,d=0,f=[],h=0,I=0;d<db.length;d++)if(I=db[d],!(I.el.removed||I.paused||I.parentEl&&I.parentEl.e&&I.parentEl.e.paused)){for(var l=c-I.start,g=I.ms,D=I.easing,k=I.from,G=I.diff,ba=I.to,t=I.el,Ba={},p,z={},F=!1!==a.stopEvent,m,h=0,h=I.el&&I.el.animElements&&I.el.animElements.peek();h&&h.pos<=l/g;)f.push(I.el.animElements.deq()),h=I.el.animElements.peek();I.initstatus?(l=(I.initstatus*I.anim.top-I.prev)/(I.percent-I.prev)*g,I.status=
I.initstatus,delete I.initstatus,I.stop&&(delete I.el,db.splice(d--,1))):I.status=(I.prev+l/g*(I.percent-I.prev))/I.anim.top;h=g;I.parentEl&&I.parentEl.animElements?(g=I.delayend-I.delaystart,l=I.parentEl.cPos-I.delaystart):I.el.animElements&&(I.el.cPos=l/g);if(!(0>l))if(l<g){var aa=D(l/g),g=h,w;for(w in k)if(k.hasOwnProperty(w)){switch(Fa[w]){case K:p=+k[w]+aa*g*G[w];break;case "colour":if(G[w].length){p=[];h=0;for(l=k[w].length;h<l;++h)0===h?k[w].isRadial||G[w].isRadial?(radial="xr(",radial+=k[w][0].f1*
(1-aa)+G[w][0].f1*aa||"",radial+=",",radial+=k[w][0].f2*(1-aa)+G[w][0].f2*aa||"",radial+=",",radial+=k[w][0].f3*(1-aa)+G[w][0].f3*aa||"",radial+=",",radial+=k[w][0].f4*(1-aa)+G[w][0].f4*aa||"",radial+=",",radial+=k[w][0].f5*(1-aa)+G[w][0].f5*aa||"",radial+=",",radial+=k[w][0].f6||"userSpaceOnUse",radial+=")",p.push(radial)):(p.push(k[w][h]*(1-aa)+aa*G[w][h]),0>=p[0]&&(p[0]+=360)):p.push("rgba("+[Db(Y(k[w][h].r+aa*g*G[w][h].r)),Db(Y(k[w][h].g+aa*g*G[w][h].g)),Db(Y(k[w][h].b+aa*g*G[w][h].b)),k[w][h].opacity+
aa*g*G[w][h].opacity].join()+"):"+k[w][h].position);p=p.join("-");if(k[w].isRadial||G[w].isRadial)p=p.replace("-","")}else tmpOpacity=k[w].opacity+aa*g*G[w].opacity,isNaN(tmpOpacity)&&(tmpOpacity=1),p="rgba("+[Db(Y(k[w].r+aa*g*G[w].r)),Db(Y(k[w].g+aa*g*G[w].g)),Db(Y(k[w].b+aa*g*G[w].b)),tmpOpacity].join()+")";break;case "path":p=[];h=0;for(l=k[w].length;h<l;h++){p[h]=[k[w][h][0]];D=k[w][h]?k[w][h].length:0;for(ba=1;ba<D;ba++)p[h][ba]=(+k[w][h][ba]+aa*g*G[w][h][ba]).toFixed(4);p[h]=p[h].join(" ")}p=
p.join(" ");break;case "transform":if(G[w].real)for(p=[],h=0,l=k[w].length;h<l;h++)for(p[h]=[k[w][h][0]],ba=1,D=k[w][h].length;ba<D;ba++)p[h][ba]=k[w][h][ba]+aa*g*G[w][h][ba];else p=function(c){return+k[w][c]+aa*g*G[w][c]},p=[["m",p(0),p(1),p(2),p(3),p(4),p(5)]];break;case "csv":if("clip-rect"==w)for(p=[],h=4;h--;)p[h]=+k[w][h]+aa*g*G[w][h];break;default:for(l=[].concat(k[w]),p=[],h=t.ca[w].length;h--;)p[h]=+l[h]+aa*g*G[w][h]}Ba[w]=p}t.attr(Ba);F&&function(c,a,d){setTimeout(function(){u("raphael.anim.frame."+
c,a,d)})}(t.id,t,I.anim)}else{(function(c,d,f){setTimeout(function(){F&&u("raphael.anim.frame."+d.id,d,f);F&&u("raphael.anim.finish."+d.id,d,f);a.is(c,"function")&&c.call(d)})})(I.callback,t,I.anim);t.attr(ba);delete I.el;db.splice(d--,1);if(1<I.repeat&&!I.next){for(m in ba)ba.hasOwnProperty(m)&&(z[m]=I.totalOrigin[m]);I.el.attr(z);e(I.anim,I.el,I.anim.percents[0],null,I.totalOrigin,I.repeat-1)}I.next&&!I.stop&&e(I.anim,I.el,I.next,null,I.totalOrigin,I.repeat)}}a.svg&&t&&t.paper&&t.paper.safari();
d=0;for(I=f.length;d<I;++d)b.schedular.addJob(function(c){return function(){e.apply(null,f[c].params)}}(d),b.priorityList.instant);db.length&&(ac||a.getAnimFrameFn())(Vb)},Db=function(c){return 255<c?255:0>c?0:c},Qb=function(c){1<c&&(c=1);0>c&&(c=0);return c};a.getAnimFrameFn=function(){return ac=a.requestAnimFrame||A.webkitRequestAnimationFrame||A.mozRequestAnimationFrame||A.oRequestAnimationFrame||A.msRequestAnimationFrame||function(c){setTimeout(c,16)}};Wa.animateWith=function(c,d,f,h,b,I,l){var g=
this,D={},k;l=l||{};for(k in l)l.hasOwnProperty(k)&&(D[k]=l[k]);l=D;if(g.removed)return I&&I.call(g),g;if(0==h)return a.is(I,"function")&&setTimeout(function(){I.call(g)},0),g.attr(f);h=f instanceof n?f:a.animation(f,h,b,I);l.start=Qb(l.start||0);l.end=Qb(l.end||1);l.start>=l.end&&(l.start=l.end);!l.from&&.01<l.start?(c.animElements=c.animElements||new J(function(c,a){return a.pos-c.pos}),c.animElements.enq({pos:l.start,attr:l.start===l.end,params:[h,g,h.percents[0],null,g.attr(),void 0,c,{start:l.start,
end:l.end,smartMorph:l.smartMorph,hookFn:l.hookFn},f],executeOb:{el:this,attrs:f,callback:I,hookFn:l.hookFn}})):e(h,g,h.percents[0],null,g.attr(),void 0,c,l);f=0;for(l=db.length;f<l;f++)if(db[f].anim==d&&db[f].el==c){db[l-1].start=db[f].start;break}return g};Wa.onAnimation=function(c){c?u.on("raphael.anim.frame."+this.id,c):u.unbind("raphael.anim.frame."+this.id);return this};n.prototype.delay=function(c){var a=new n(this.anim,this.ms);a.times=this.times;a.del=+c||0;return a};n.prototype.repeat=function(c){var a=
new n(this.anim,this.ms);a.del=this.del;a.times=qa.floor(va(c,0))||1;return a};a.animation=function(c,d,f,h,b){if(c instanceof n)return c;if(a.is(f,"function")||!f)h=h||f||null,f=null;void 0===a.stopEvent&&(a.stopEvent=b);c=Object(c);d=+d||0;b={};var e,I;for(I in c)c.hasOwnProperty(I)&&ca(I)!=I&&ca(I)+"%"!=I&&(e=!0,b[I]=c[I]);return e?(f&&(b.easing=f),h&&(b.callback=h),new n({100:b},d)):new n(c,d)};Wa.animate=function(c,d,f,h){if(this.removed)return h&&h.call(this),this;c=c instanceof n?c:a.animation(c,
d,f,h);e(c,this,c.percents[0],null,this.attr());return this};Wa.setTime=function(c,a){c&&null!=a&&this.status(c,ha(a,c.ms)/c.ms);return this};Wa.status=function(c,a){var d=[],f=0,h,b;if(null!=a)return e(c,this,-1,ha(a,1)),this;for(h=db.length;f<h;f++)if(b=db[f],b.el.id==this.id&&(!c||b.anim==c)){if(c)return b.status;d.push({anim:b.anim,status:b.status})}return c?0:d};Wa.pause=function(c,a){var d=+new Date,f,h;for(h=0;h<db.length;h++)f=db[h],!(f.el.id===this.id||a&&f.parentEl&&f.parentEl.e.el&&f.parentEl.e.el.id===
this.id)||c&&f.anim!=c||!1===u("raphael.anim.pause."+this.id,this,f.anim)||(f.paused=!0,f.pauseStart=d);return this};Wa.resume=function(c,a){var d=+new Date,f,h;for(h=0;h<db.length;h++)f=db[h],!(f.el.id===this.id||a&&f.parentEl&&f.parentEl.e.el&&f.parentEl.e.el.id===this.id)||c&&f.anim!=c||!1===u("raphael.anim.resume."+this.id,this,f.anim)||(delete f.paused,f.el.status(f.anim,f.status),f.pauseEnd=d,f.start+=(f.parentEl&&f.parentEl.e.pauseEnd||f.pauseEnd)-(f.parentEl&&f.parentEl.e.pauseStart||f.pauseStart)||
0);return this};Wa.stop=function(c,a,d){var f;if(a)for(f=db.length-1;0<=f;f--)a=db[f],!(a.el.id===this.id||a.parentEl&&a.parentEl.id===this.id)||c&&db[f].anim!=c||(ele=a.el,d&&ele.attr(a.to),a.callback&&a.callback.call(ele),delete ele.e,delete a.el,db.splice(f,1));else for(f=0;f<db.length;f++)a=db[f],a.el.id!==this.id||c&&a.anim!==c||!1!==u("raphael.anim.stop."+this.id,this,a.anim)&&db.splice(f--,1);if(this.animElements)for(c=this.animElements;d=c.deq();)d=d.executeOb,d.hookFn&&d.hookFn.call(d.el),
d.el.attr(d.attrs),d.callback&&d.callback.call(d.el);return this};u.on("raphael.remove",V);u.on("raphael.clear",V);Wa.toString=function(){return"Raphaël’s object"};Wa.toFront=function(){if(this.removed)return this;var c=a._engine.getNode(this),d=this.parent,f=this.followers,h;a._tofront(this,d)&&d.canvas.appendChild(c);c=0;for(d=f.length;c<d;c++)(h=f[c]).stalk&&h.el[h.stalk](this);return this};Wa.toBack=function(){if(this.removed)return this;var c=a._engine.getNode(this),d=this.parent,f=this.followers,
h;a._toback(this,d)&&d.canvas.insertBefore(c,d.canvas.firstChild);c=0;for(d=f.length;c<d;c++)(h=f[c]).stalk&&h.el[h.stalk](this);return this};Wa.insertAfter=function(c){if(this.removed)return this;var d=a._engine.getNode(this),f=a._engine.getLastNode(c),h=c.parent.canvas,b=this.followers,e;f.nextSibling?h.insertBefore(d,f.nextSibling):h.appendChild(d);a._insertafter(this,c,this.parent,c.parent);d=0;for(f=b.length;d<f;d++)(e=b[d]).stalk&&e.el[e.stalk](c);return this};Wa.insertBefore=function(c){if(this.removed)return this;
var d=a._engine.getNode(this),f=a._engine.getNode(c),h=this.followers,b;c.parent.canvas.insertBefore(d,f);a._insertbefore(this,c,this.parent,c.parent);this.parent=c.parent;d=0;for(f=h.length;d<f;d++)(b=h[d]).stalk&&b.el[b.stalk](c);return this};Wa.appendChild=function(c){if(this.removed||"group"!==this.type)return this;var d=this.followers,f,h,b;if(c.parent===this)return c.toFront(),this;h=a._engine.getNode(c);a._tear(c,c.parent);this.canvas.appendChild(h);c.parent=this;!this.bottom&&(this.bottom=
c);c.prev=this.top;c.next=null;this.top&&(this.top.next=c);this.top=c;h=0;for(b=d.length;h<b;h++)(f=d[h]).stalk&&f.el[f.stalk](c);return this};Wa.removeChild=function(c){if(this.removed||"group"!==this.type||c.parent!==this)return this;var d=a._engine.getNode(c),f=this.paper;a._tear(c,this);f.canvas.appendChild(d);this.parent=f;!f.bottom&&(f.bottom=this);(this.prev=f.top)&&(f.top.next=this);f.top=this;this.next=null;return this};var Eb=function(c){this.items=[];this.length=0;this.type="set";if(c)for(var a=
0,d=c.length;a<d;a++)!c[a]||c[a].constructor!=Wa.constructor&&c[a].constructor!=Eb||(this[this.items.length]=this.items[this.items.length]=c[a],this.length++)},lb=Eb.prototype;lb.push=function(){for(var c,a,d=0,f=arguments.length;d<f;d++)!(c=arguments[d])||c.constructor!=Wa.constructor&&c.constructor!=Eb||(a=this.items.length,this[a]=this.items[a]=c,this.length++);return this};lb.pop=function(){this.length&&delete this[this.length--];return this.items.pop()};lb.forEach=function(c,a){for(var d=0,f=
this.items.length;d<f&&!1!==c.call(a,this.items[d],d);d++);return this};for(var Ub in Wa)Wa.hasOwnProperty(Ub)&&(lb[Ub]=function(c){return function(){var a=arguments;return this.forEach(function(d){d[c][T](d,a)})}}(Ub));lb.attr=function(c,d){if(c&&a.is(c,t)&&a.is(c[0],"object"))for(var f=0,h=c.length;f<h;f++)this.items[f].attr(c[f]);else for(f=0,h=this.items.length;f<h;f++)this.items[f].attr(c,d);return this};lb.clear=function(){for(;this.length;)this.pop()};lb.splice=function(c,a,d){c=0>c?va(this.length+
c,0):c;a=va(0,ha(this.length-c,isNaN(a)&&this.length||a));var f=[],h=[],b=[],e;for(e=2;e<arguments.length;e++)b.push(arguments[e]);for(e=0;e<a;e++)h.push(this[c+e]);for(;e<this.length-c;e++)f.push(this[c+e]);var I=b.length;for(e=0;e<I+f.length;e++)this.items[c+e]=this[c+e]=e<I?b[e]:f[e-I];for(e=this.items.length=this.length-=a-I;this[e];)delete this[e++];return new Eb(h)};lb.exclude=function(c){for(var a=0,d=this.length;a<d;a++)if(this[a]==c)return this.splice(a,1),!0};lb.animate=function(c,d,f,h){!a.is(f,
"function")&&f||(h=f||null);var b=this.items.length,e=b,I=this,l;if(!b)return this;h&&(l=function(){!--b&&h.call(I)});f=a.is(f,"string")?f:l;d=a.animation(c,d,f,l);for(c=this.items[--e].animate(d);e--;)this.items[e]&&!this.items[e].removed&&this.items[e].animateWith(c,d,d);return this};lb.insertAfter=function(c){for(var a=this.items.length;a--;)this.items[a].insertAfter(c);return this};lb.getBBox=function(){for(var c=[],a=[],d=[],f=[],h=this.items.length;h--;)if(!this.items[h].removed){var b=this.items[h].getBBox();
c.push(b.x);a.push(b.y);d.push(b.x+b.width);f.push(b.y+b.height)}c=ha[T](0,c);a=ha[T](0,a);d=va[T](0,d);f=va[T](0,f);return{x:c,y:a,x2:d,y2:f,width:d-c,height:f-a}};lb.clone=function(c){c=new Eb;for(var a=0,d=this.items.length;a<d;a++)c.push(this.items[a].clone());return c};lb.toString=function(){return"Raphaël‘s set"};lb.glow=function(c){var a=this.paper.set();this.forEach(function(d,f){var h=d.glow(c);null!=h&&h.forEach(function(c,d){a.push(c)})});return a};a.registerFont=function(c){if(!c.face)return c;
this.fonts=this.fonts||{};var a={w:c.w,face:{},glyphs:{}},d=c.face["font-family"],f;for(f in c.face)c.face.hasOwnProperty(f)&&(a.face[f]=c.face[f]);this.fonts[d]?this.fonts[d].push(a):this.fonts[d]=[a];if(!c.svg){a.face["units-per-em"]=ma(c.face["units-per-em"],10);for(var h in c.glyphs)if(c.glyphs.hasOwnProperty(h)&&(d=c.glyphs[h],a.glyphs[h]={w:d.w,k:{},d:d.d&&"M"+d.d.replace(/[mlcxtrv]/g,function(c){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[c]||"M"})+"z"},d.k))for(var b in d.k)d.hasOwnProperty(b)&&
(a.glyphs[h].k[b]=d.k[b])}return c};G.getFont=function(c,d,f,h){h=h||"normal";f=f||"normal";d=+d||{normal:400,bold:700,lighter:300,bolder:800}[d]||400;if(a.fonts){var b=a.fonts[c];if(!b){c=new RegExp("(^|\\s)"+c.replace(/[^\w\d\s+!~.:_-]/g,"")+"(\\s|$)","i");for(var e in a.fonts)if(a.fonts.hasOwnProperty(e)&&c.test(e)){b=a.fonts[e];break}}var I;if(b)for(e=0,c=b.length;e<c&&(I=b[e],I.face["font-weight"]!=d||I.face["font-style"]!=f&&I.face["font-style"]||I.face["font-stretch"]!=h);e++);return I}};G.print=
function(c,d,f,h,b,e,I){e=e||"middle";I=va(ha(I||0,1),-1);var l=wa(f).split(""),g=0,D=0,k="";a.is(h,f)&&(h=this.getFont(h));if(h){f=(b||16)/h.face["units-per-em"];var G=h.face.bbox.split(ja);b=+G[0];var ba=G[3]-G[1],t=0;e=+G[1]+("baseline"==e?ba+ +h.face.descent:ba/2);for(var G=0,Ba=l.length;G<Ba;G++){if("\n"==l[G])D=w=g=0,t+=ba;else var p=D&&h.glyphs[l[G-1]]||{},w=h.glyphs[l[G]],g=g+(D?(p.w||h.w)+(p.k&&p.k[l[G]]||0)+h.w*I:0),D=1;w&&w.d&&(k+=a.transformPath(w.d,["t",g*f,t*f,"s",f,f,b,e,"t",(c-b)/
f,(d-e)/f]))}}return this.path(k).attr({fill:"#000",stroke:"none"})};G.add=function(c){if(a.is(c,"array"))for(var d=this.set(),f=0,h=c.length,b;f<h;f++)b=c[f]||{},aa.hasOwnProperty(b.type)&&d.push(this[b.type]().attr(b));return d};a.format=function(c,d){var f=a.is(d,t)?[0].concat(d):arguments;c&&a.is(c,"string")&&f.length-1&&(c=c.replace(ya,function(c,a){return null==f[++a]?"":f[a]}));return c||""};a.fullfill=function(){var c=/\{([^\}]+)\}/g,a=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,
d=function(c,d,f){var h=f;d.replace(a,function(c,a,d,f,b){a=a||f;h&&(a in h&&(h=h[a]),"function"==typeof h&&b&&(h=h()))});return h=(null==h||h==f?c:h)+""};return function(a,f){return String(a).replace(c,function(c,a){return d(c,a,f)})}}();a.ninja=function(){w?R.win.Raphael=F:delete R.win.Raphael;return a};var Zb=a.vml&&.5||0;a.crispBound=ba(function(c,a,d,f,h){var b={},e;c=c||0;a=a||0;d=d||0;f=f||0;h=h||0;e=h%2/2+Zb;b.x=Y(c+e)-e;b.y=Y(a+e)-e;b.width=Y(c+d+e)-e-b.x;b.height=Y(a+f+e)-e-b.y;b["stroke-width"]=
h;0===b.width&&0!==d&&(b.width=1);0===b.height&&0!==f&&(b.height=1);return b},a);Wa.crisp=function(){var c=this.attrs,d,f=this.attr(["x","y","width","height","stroke-width"]),f=a.crispBound(f.x,f.y,f.width,f.height,f["stroke-width"]);for(d in f)c[d]===f[d]&&delete f[d];return this.attr(f)};a.st=lb;a.define=function(c,d,f,h,b,e){var I;if(a.is(c,t))for(e=0,I=c.length;e<I;e++)a.define(c[e]);else if(a.is(c,"object"))a.define(c.name,c[c.name],c.ca,c.fn,c.e,c.data);else if(c&&!a.fn[c])return a.fn[c]=function(){var e=
arguments,I=d.apply(this,e),l;if(h&&a.is(h,"object"))for(l in h)I[l]=h[l];if(b&&a.is(b,"object"))for(l in b)I[l]&&I[l](b[l]);if(f){if(a.is(f,"function"))I.ca[c]=f;else for(l in f)I.ca[l]=f[l];I.ca[c]&&(a._lastArgIfGroup(e,!0),e.length&&I.attr(c,Z.call(e)))}return I},f&&(a.fn[c].ca=f),h&&(a.fn[c].fn=h),b&&(a.fn[c].e=b),e&&(a.fn[c].data=e),a.fn[c]};(function(c,d,f){function h(){/in/.test(c.readyState)?setTimeout(h,9):a.eve("raphael.DOMload")}null==c.readyState&&c.addEventListener&&(c.addEventListener(d,
f=function(){c.removeEventListener(d,f,!1);c.readyState="complete"},!1),c.readyState="loading");h()})(X,"DOMContentLoaded");u.on("raphael.DOMload",function(){p=!0});"undefined"===typeof v&&"object"===typeof window&&(v=window);(function(){function c(a){for(var d={},f=a,h=d;f;)f.node&&f.node.style&&"none"===f.node.style.display&&(f.show(),h._doHide=!0),f=f.parent,h.parent={},h=h.parent;return function(){for(var c=a,f=d;c;)f._doHide&&c.hide(),c=c.parent,f=f.parent}}function d(c,a){var f=a.src,h=c.node,
b=c._.RefImg;b||(b=c._.RefImg=new Image);void 0!==a.src&&(b.src=f,b.onload=function(){c.attr({width:c.attrs.width||b.width,height:c.attrs.height||b.height})},b.onerror=function(c){h.onerror&&h.onerror(c)},c._.RefImg=b)}if(a.svg){var f=String,h=parseFloat,b=parseInt,e=Math,I=e.max,l=e.abs,g=e.pow,D=e.sqrt,k=/[, ]+/,G=!(!/AppleWebKit/.test(a._g.win.navigator.userAgent)||/Chrome/.test(a._g.win.navigator.userAgent)&&!(29>a._g.win.navigator.appVersion.match(/Chrome\/(\d+)\./)[1])),ba=a.eve,t={block:"M5,0 0,2.5 5,5z",
classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},Ba={},p=-1<a._g.win.navigator.userAgent.toLowerCase().indexOf("firefox");a.cachedFontHeight={};a.toString=function(){return"Your browser supports SVG.\nYou are running Raphaël "+this.version};a._url="";var w=function(c,a){var d=c.gradient;if(d){if(d===a)return;d.refCount--;d.refCount||d.parentNode.removeChild(d);delete c.gradient}a&&(c.gradient=a,
a.refCount++)},z=a._createNode=function(c,d){if(d){"string"==typeof c&&(c=z(c));for(var h in d)d.hasOwnProperty(h)&&("xlink:"==h.substring(0,6)?c.setAttributeNS("http://www.w3.org/1999/xlink",h.substring(6),f(d[h])):c.setAttribute(h,f(d[h])))}else c=a._g.doc.createElementNS("http://www.w3.org/2000/svg",c);return c},F={userSpaceOnUse:"userSpaceOnUse",objectBoundingBox:"objectBoundingBox"},aa={pad:"pad",redlect:"reflect",repeat:"repeat"},m=function(c,d){if(!c.paper||!c.paper.defs)return 0;var b="linear",
k=c.paper,G=a.getElementID((k.id+"-"+d).replace(/[\(\)\s%:,\xb0#]/g,"_")),ba=.5,t=.5,Ba,p,m,Oa,B,n=c.node,K=n.style,R=a._g.doc.getElementById(G);if(!R){d=f(d).replace(a._radial_gradient,function(c,a){b="radial";a=a&&a.split(",")||[];Oa=a[5];B=a[6];var d=a[0],f=a[1],e=a[2],I=a[3],l=a[4],k=d&&f,G;e&&(Ba=/\%/.test(e)?e:h(e));if(Oa===F.userSpaceOnUse)return k&&(ba=d,t=f),I&&l&&(p=I,m=l,k||(ba=p,t=m)),"";k&&(ba=h(d),t=h(f),d=2*(.5<t)-1,.25<(G=g(ba-.5,2))+g(t-.5,2)&&.25>G&&(t=D(.25-G)*d+.5)&&.5!==t&&(t=
t.toFixed(5)-1E-5*d));I&&l&&(p=h(I),m=h(l),d=2*(.5<m)-1,.25<(G=g(p-.5,2))+g(m-.5,2)&&.25>G&&(m=D(.25-G)*d+.5)&&.5!==m&&(m=m.toFixed(5)-1E-5*d),k||(ba=p,t=m));return""});d=d.split(/\s*\-\s*/);if("linear"==b){var R=d.shift(),Qa=R.match(/\((.*)\)/),P,Qa=Qa&&Qa[1]&&Qa[1].split(/\s*\,\s*/),R=-h(R);if(isNaN(R))return null;Qa&&Qa.length?(Qa[0]in F?(Oa=Qa.shift(),Qa[0]in aa&&(B=Qa.shift())):(Qa[4]&&(Oa=Qa[4]),Qa[5]&&(B=Qa[5])),P=[Qa[0]||"0%",Qa[1]||"0%",Qa[2]||"100%",Qa[3]||"0%"]):(P=[0,0,e.cos(a.rad(R)),
e.sin(a.rad(R))],R=1/(I(l(P[2]),l(P[3]))||1),P[2]*=R,P[3]*=R,0>P[2]&&(P[0]=-P[2],P[2]=0),0>P[3]&&(P[1]=-P[3],P[3]=0))}Qa=a._parseDots(d);if(!Qa)return null;R=z(b+"Gradient",{id:G});R.refCount=0;Oa in F&&R.setAttribute("gradientUnits",f(Oa));B in aa&&R.setAttribute("spreadMethod",f(B));"radial"===b?(void 0!==Ba&&R.setAttribute("r",f(Ba)),void 0!==p&&void 0!==m&&(R.setAttribute("cx",f(p)),R.setAttribute("cy",f(m))),R.setAttribute("fx",f(ba)),R.setAttribute("fy",f(t))):z(R,{x1:P[0],y1:P[1],x2:P[2],y2:P[3]});
P=0;for(var r=Qa.length;P<r;P++)R.appendChild(z("stop",{offset:Qa[P].offset?Qa[P].offset:P?"100%":"0%","stop-color":Qa[P].color||"#fff","stop-opacity":void 0===Qa[P].opacity?1:Qa[P].opacity}));k.defs.appendChild(R)}w(c,R);z(n,{fill:"url('"+a._url+"#"+G+"')","fill-opacity":1});K.fill="";return K.fillOpacity=1},B=function(c){var a=c.getBBox(1);z(c.pattern,{patternTransform:c.matrix.invert()+" translate("+a.x+","+a.y+")"})},Oa=function(c,d,h){if("path"==c.type){for(var b=f(d).toLowerCase().split("-"),
e=c.paper,I=h?"end":"start",l=c.node,g=c.attrs,D=g["stroke-width"],k=b.length,G="classic",ba,p,w=3,F=3,aa=5;k--;)switch(b[k]){case "block":case "classic":case "oval":case "diamond":case "open":case "none":G=b[k];break;case "wide":F=5;break;case "narrow":F=2;break;case "long":w=5;break;case "short":w=2}"open"==G?(w+=2,F+=2,aa+=2,ba=1,p=h?4:1,b={fill:"none",stroke:g.stroke}):(p=ba=w/2,b={fill:g.stroke,stroke:"none"});c._.arrows?h?(c._.arrows.endPath&&Ba[c._.arrows.endPath]--,c._.arrows.endMarker&&Ba[c._.arrows.endMarker]--):
(c._.arrows.startPath&&Ba[c._.arrows.startPath]--,c._.arrows.startMarker&&Ba[c._.arrows.startMarker]--):c._.arrows={};if("none"!=G){var k="raphael-marker-"+G,m="raphael-marker-"+I+G+w+F+"-obj"+c.id;a._g.doc.getElementById(k)?Ba[k]++:(e.defs.appendChild(z(z("path"),{"stroke-linecap":"round",d:t[G],id:k})),Ba[k]=1);var Oa=a._g.doc.getElementById(m);Oa?(Ba[m]++,w=Oa.getElementsByTagName("use")[0]):(Oa=z(z("marker"),{id:m,markerHeight:F,markerWidth:w,orient:"auto",refX:p,refY:F/2}),w=z(z("use"),{"xlink:href":"#"+
k,transform:(h?"rotate(180 "+w/2+" "+F/2+") ":"")+"scale("+w/aa+","+F/aa+")","stroke-width":(1/((w/aa+F/aa)/2)).toFixed(4)}),Oa.appendChild(w),e.defs.appendChild(Oa),Ba[m]=1);z(w,b);e=ba*("diamond"!=G&&"oval"!=G);h?(h=c._.arrows.startdx*D||0,D=a.getTotalLength(g.path)-e*D):(h=e*D,D=a.getTotalLength(g.path)-(c._.arrows.enddx*D||0));b={};b["marker-"+I]="url('"+a._url+"#"+m+"')";if(D||h)b.d=a.getSubpath(g.path,h,D);z(l,b);c._.arrows[I+"Path"]=k;c._.arrows[I+"Marker"]=m;c._.arrows[I+"dx"]=e;c._.arrows[I+
"Type"]=G;c._.arrows[I+"String"]=d}else h?(h=c._.arrows.startdx*D||0,D=a.getTotalLength(g.path)-h):(h=0,D=a.getTotalLength(g.path)-(c._.arrows.enddx*D||0)),c._.arrows[I+"Path"]&&z(l,{d:a.getSubpath(g.path,h,D)}),delete c._.arrows[I+"Path"],delete c._.arrows[I+"Marker"],delete c._.arrows[I+"dx"],delete c._.arrows[I+"Type"],delete c._.arrows[I+"String"];for(b in Ba)Ba.hasOwnProperty(b)&&!Ba[b]&&(c=a._g.doc.getElementById(b))&&c.parentNode.removeChild(c)}},n={"":["none"],none:["none"],"-":[3,1],".":[1,
1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},K=function(c,d,h){var b=n[f(d).toLowerCase()],e,I,l;if(d=b||void 0!==d&&[].concat(d)){e=c.attrs["stroke-width"]||1;h={round:e,square:e,butt:0}[h["stroke-linecap"]||c.attrs["stroke-linecap"]]||0;I=d.length;l=b?e:1;if("none"==d[0])b=d;else for(b=[];I--;)b[I]=d[I]*l+(I%2?1:-1)*h,0>=b[I]&&(b[I]=.01+(1>=e?h:0)),isNaN(b[I])&&(b[I]=0);a.is(d,"array")&&z(c.node,{"stroke-dasharray":b.join(",")})}},
R=function(c,a){for(var d in a)ba("raphael.attr."+d+"."+c.id,c,a[d],d),c.ca[d]&&c.attr(d,a[d])},Qa=a._setFillAndStroke=function(c,h,e){if(c.paper.canvas){var g=c.node,D=c.attrs,ba=c.paper,t=g.style,Ba=t.visibility;h&&h.text&&h.text.replace&&(h.text=h.text.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&<br\/>lt;|&l<br\/>t;|&lt<br\/>;/g,"<<br/>").replace(/&<br\/>gt;|&g<br\/>t;|&gt<br\/>;/g,"><br/>"));t.visibility="hidden";"image"===c.type&&d(c,h);for(var p in h)if(h.hasOwnProperty(p)&&a._availableAttrs.hasOwnProperty(p)){var F=
h[p];D[p]=F;switch(p){case "blur":c.blur(F);break;case "href":case "title":case "target":var aa=g.parentNode;if("a"!=aa.tagName.toLowerCase()){if(""==F)break;var R=z("a");R.raphael=!0;R.raphaelid=g.raphaelid;aa.insertBefore(R,g);R.appendChild(g);aa=R}"target"==p?aa.setAttributeNS("http://www.w3.org/1999/xlink","show","blank"==F?"new":F):aa.setAttributeNS("http://www.w3.org/1999/xlink",p,F);g.titleNode=aa;break;case "cursor":t.cursor=F;break;case "transform":c.transform(F);break;case "rotation":a.is(F,
"array")?c.rotate.apply(c,F):c.rotate(F);break;case "arrow-start":Oa(c,F);break;case "arrow-end":Oa(c,F,1);break;case "clip-path":var n=!0;case "clip-rect":aa=!n&&f(F).split(k);c._.clipispath=!!n;if(n||4==aa.length){c.clip&&c.clip.parentNode.parentNode.removeChild(c.clip.parentNode);var R=z("clipPath"),Qa=z(n?"path":"rect");R.id=a.getElementID(a.createUUID());z(Qa,n?{d:F?D["clip-path"]=a._pathToAbsolute(F):a._availableAttrs.path,fill:"none"}:{x:aa[0],y:aa[1],width:aa[2],height:aa[3],transform:c.matrix.invert()});
R.appendChild(Qa);ba.defs.appendChild(R);z(g,{"clip-path":"url('"+a._url+"#"+R.id+"')"});c.clip=Qa}!F&&(F=g.getAttribute("clip-path"))&&((F=a._g.doc.getElementById(F.replace(/(^url\(#|\)$)/g,"")))&&F.parentNode.removeChild(F),z(g,{"clip-path":""}),11===document.documentMode&&g.removeAttribute("clip-path"),delete c.clip);break;case "path":"path"==c.type&&(z(g,{d:F?D.path=a._pathToAbsolute(F):a._availableAttrs.path}),c._.dirty=1,c._.arrows&&("startString"in c._.arrows&&Oa(c,c._.arrows.startString),
"endString"in c._.arrows&&Oa(c,c._.arrows.endString,1)));break;case "width":if(g.setAttribute(p,F),c._.dirty=1,D.fx)p="x",F=D.x;else break;case "x":D.fx&&(F=-D.x-(D.width||0));case "rx":if("rx"==p&&"rect"==c.type)break;case "cx":g.setAttribute(p,F);c.pattern&&B(c);c._.dirty=1;break;case "height":if(g.setAttribute(p,F),c._.dirty=1,D.fy)p="y",F=D.y;else break;case "y":D.fy&&(F=-D.y-(D.height||0));case "ry":if("ry"==p&&"rect"==c.type)break;case "cy":g.setAttribute(p,F);c.pattern&&B(c);c._.dirty=1;break;
case "r":"rect"==c.type?z(g,{rx:F,ry:F}):g.setAttribute(p,F);c._.dirty=1;break;case "src":"image"==c.type&&g.setAttributeNS("http://www.w3.org/1999/xlink","href",F);break;case "stroke-width":if(1!=c._.sx||1!=c._.sy)F/=I(l(c._.sx),l(c._.sy))||1;ba._vbSize&&(F*=ba._vbSize);G&&0===F&&(F=1E-6);g.setAttribute(p,F);D["stroke-dasharray"]&&K(c,D["stroke-dasharray"],h);c._.arrows&&("startString"in c._.arrows&&Oa(c,c._.arrows.startString),"endString"in c._.arrows&&Oa(c,c._.arrows.endString,1));break;case "stroke-dasharray":K(c,
F,h);break;case "fill":var P=f(F).match(a._ISURL);if(P){var R=z("pattern"),r=z("image");R.id=a.getElementID(a.createUUID());z(R,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1});z(r,{x:0,y:0,"xlink:href":P[1]});R.appendChild(r);(function(c){a._preload(P[1],function(){var a=this.offsetWidth,d=this.offsetHeight;z(c,{width:a,height:d});z(r,{width:a,height:d});ba.safari()})})(R);ba.defs.appendChild(R);t.fill="url('"+a._url+"#"+R.id+"')";z(g,{fill:t.fill});c.pattern=R;c.pattern&&B(c);break}aa=
a.getRGB(F);if(!aa.error)delete h.gradient,delete D.gradient,!a.is(D["fill-opacity"],"undefined")&&a.is(h["fill-opacity"],"undefined")&&z(g,{"fill-opacity":D["fill-opacity"]}),c.gradient&&w(c);else if(("circle"==c.type||"ellipse"==c.type||"r"!=f(F).charAt())&&m(c,F)){if("opacity"in D||"fill-opacity"in D)if(aa=a._g.doc.getElementById(g.getAttribute("fill").replace(/^url\(#|\)$/g,"")))aa=aa.getElementsByTagName("stop"),z(aa[aa.length-1],{"stop-opacity":("opacity"in D?D.opacity:1)*("fill-opacity"in D?
D["fill-opacity"]:1)});D.gradient=F;D.fill="none";t.fill="";break}aa.hasOwnProperty("opacity")?(z(g,{"fill-opacity":t.fillOpacity=1<aa.opacity?aa.opacity/100:aa.opacity}),c._.fillOpacityDirty=!0):c._.fillOpacityDirty&&a.is(D["fill-opacity"],"undefined")&&a.is(h["fill-opacity"],"undefined")&&(g.removeAttribute("fill-opacity"),t.fillOpacity="",delete c._.fillOpacityDirty);case "stroke":aa=a.getRGB(F);g.setAttribute(p,aa.hex);t[p]=aa.hex;"stroke"==p&&(aa.hasOwnProperty("opacity")?(z(g,{"stroke-opacity":t.strokeOpacity=
1<aa.opacity?aa.opacity/100:aa.opacity}),c._.strokeOpacityDirty=!0):c._.strokeOpacityDirty&&a.is(D["stroke-opacity"],"undefined")&&a.is(h["stroke-opacity"],"undefined")&&(g.removeAttribute("stroke-opacity"),t.strokeOpacity="",delete c._.strokeOpacityDirty),c._.arrows&&("startString"in c._.arrows&&Oa(c,c._.arrows.startString),"endString"in c._.arrows&&Oa(c,c._.arrows.endString,1)));break;case "gradient":"circle"!=c.type&&"ellipse"!=c.type&&"r"==f(F).charAt()||m(c,F);break;case "line-height":case "vertical-align":break;
case "visibility":"hidden"===F?c.hide():c.show();break;case "opacity":F=1<F?F/100:F;z(g,{opacity:F});t.opacity=F;break;case "fill-opacity":F=1<F?F/100:F;z(g,{"fill-opacity":F});t.fillOpacity=F;break;default:"font-size"==p&&(F=b(F,10)+"px"),aa=p.replace(/(\-.)/g,function(c){return c.substring(1).toUpperCase()}),t[aa]=F,c._.dirty=1,g.setAttribute(p,F)}}"text"===c.type&&!h["_do-not-tune"]&&Ra(c,h,e);t.visibility=Ba}},P=a._updateFollowers=function(){var c,a,d,f=arguments,h=S.call(f),b=S.call(f);c=0;for(a=
h.followers.length;c<a;c++)d=h.followers[c].el,d[b].apply(d,f)},Ra=function(c,d,b){if("text"==c.type&&(d.hasOwnProperty("text")||d.hasOwnProperty("font")||d.hasOwnProperty("font-size")||d.hasOwnProperty("x")||d.hasOwnProperty("y")||d.hasOwnProperty("line-height")||d.hasOwnProperty("vertical-align"))){var I=c.attrs,l=c.node;l.firstChild&&a._g.doc.defaultView.getComputedStyle(l.firstChild,"");var g=d.fontSize||d["font-size"]||I["font-size"]||b&&b.attrs.fontSize,D=h(d["line-height"]||I["line-height"])||
1.2*g,k=I.hasOwnProperty("vertical-align")?I["vertical-align"]:"middle",G=d.direction||b&&b.attrs.direction||"initial";isIE=!!document.documentMode;fontFamily=d.fontFamily||d["font-family"]||I["font-family"]||b&&b.attrs.fontFamily||"Verdana,sans";g=void 0===g?D/1.2||10:g.toString().replace(/px/,"");isNaN(D)&&(D=1.2*g);a.is(d.text,"array")&&(d.text=d.text.join("<br>"));valign="top"===k?-.5:"bottom"===k?.5:0;if(d.hasOwnProperty("text")&&(d.text!==I.text||c._textdirty)){for(I.text=d.text;l.firstChild;)l.removeChild(l.firstChild);
var ba=f(d.text).split(/\n|<br\s*?\/?>/ig);d=[];for(var t=0,p=ba.length;t<p;t++)b=z("tspan"),t?z(b,{dy:D,x:I.x}):z(b,{dy:D*ba.length*valign,x:I.x}),ba[t]||(b.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),ba[t]=" "),b.appendChild(a._g.doc.createTextNode(ba[t])),l.appendChild(b),d[t]=b,!isIE&&"rtl"===G&&t<p-1&&(b=z("tspan"),z(b,{visibility:"hidden","font-size":"0px"}),b.appendChild(a._g.doc.createTextNode("i")),l.appendChild(b));c._textdirty=!1}else for(d=l.getElementsByTagName("tspan"),
t=ba=0,p=d.length;t<p;t++)if(b=d[t],G=b.attributes[0],!G||"visibility"!==G.name&&"visibility"!==G.nodeName||"hidden"!==G.value&&"hidden"!==G.nodeValue)t?z(b,{dy:D,x:I.x}):(G=d[1]&&d[1].attributes[0],!G||"visibility"!==G.name&&"visibility"!==G.nodeName||"hidden"!==G.value&&"hidden"!==G.nodeValue||(ba=e.floor(.5*d.length)),z(d[0],{dy:D*(d.length-ba)*valign,x:I.x}));z(l,{x:I.x,y:I.y});c._.dirty=1;(c=c._getCustomBBox(fontFamily,g+"px",k,t).diff)&&a.is(c,"finite")&&d[0]&&z(d[0],{dy:c})}},r=function(c,
d,f){f=f||d;f.canvas&&f.canvas.appendChild(c);this.node=this[0]=c;c.raphael=!0;c.raphaelid=this.id=a._oid++;this.matrix=a.matrix();this.realPath=null;this.attrs=this.attrs||{};this.followers=this.followers||[];this.paper=d;this.ca=this.customAttributes=this.customAttributes||new d._CustomAttributes;this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1};this.parent=f;!f.bottom&&(f.bottom=this);(this.prev=f.top)&&(f.top.next=this);f.top=this;this.next=null},L=a.el;r.prototype=L;L.constructor=r;a._engine.getNode=
function(c){c=c.node||c[0].node;return c.titleNode||c};a._engine.getLastNode=function(c){c=c.node||c[c.length-1].node;return c.titleNode||c};L.rotate=function(c,a,d){if(this.removed)return this;P(this,"rotate",c,a,d);c=f(c).split(k);c.length-1&&(a=h(c[1]),d=h(c[2]));c=h(c[0]);null==d&&(a=d);if(null==a||null==d)d=this.getBBox(1),a=d.x+d.width/2,d=d.y+d.height/2;this.transform(this._.transform.concat([["r",c,a,d]]));return this};L.scale=function(c,a,d,b){var e;if(this.removed)return this;P(this,"scale",
c,a,d,b);c=f(c).split(k);c.length-1&&(a=h(c[1]),d=h(c[2]),b=h(c[3]));c=h(c[0]);null==a&&(a=c);null==b&&(d=b);if(null==d||null==b)e=this.getBBox(1);d=null==d?e.x+e.width/2:d;b=null==b?e.y+e.height/2:b;this.transform(this._.transform.concat([["s",c,a,d,b]]));return this};L.translate=function(c,a){if(this.removed)return this;P(this,"translate",c,a);c=f(c).split(k);c.length-1&&(a=h(c[1]));c=h(c[0])||0;this.transform(this._.transform.concat([["t",c,+a||0]]));return this};L.transform=function(c){var d=
this._;if(null==c)return d.transform;a._extractTransform(this,c);this.clip&&!d.clipispath&&z(this.clip,{transform:this.matrix.invert()});this.pattern&&B(this);this.node&&z(this.node,{transform:this.matrix});c=this.attrs.hasOwnProperty("stroke-width")?this.attrs["stroke-width"]:1;this.attr({"stroke-width":c});return this};L.hide=function(){P(this,"hide");!this.removed&&this.paper.safari(this.node.style.display="none");return this};L.show=function(){P(this,"show");!this.removed&&this.paper.safari(this.node.style.display=
"");return this};L.remove=function(){if(!this.removed&&this.parent.canvas){var c=a._engine.getNode(this),d=this.paper,f=d.defs;d.__set__&&d.__set__.exclude(this);ba.unbind("raphael.*.*."+this.id);for(this.gradient&&f&&w(this);f=this.followers.pop();)f.el.remove();for(;f=this.bottom;)f.remove();this._drag&&this.undrag();if(this.events)for(;f=this.events.pop();)f.unbind();this.parent.canvas.contains(c)&&this.parent.canvas.removeChild(c);this.removeData();delete d._elementsById[this.id];a._tear(this,
this.parent);for(f in this)this[f]="function"===typeof this[f]?a._removedFactory(f):null;this.removed=!0}};L._getCustomBBox=function(d,f,h,b){var e,I=this.node,l,g="text"===this.type,D=!!document.documentMode,k,G,ba;D&&g?e=c(this):"none"===I.style.display&&(this.show(),l=!0);if(g){k=a.cachedFontHeight;G=k.txtElem;ba=k[d]||(k[d]={});I=ba[f];I||(G||(G=k.txtElem=document.createElementNS("http://www.w3.org/2000/svg","text"),G.setAttribute("x",-100),G.setAttribute("y",-100),I=document.createTextNode("abcdefhiklmnopqrstuvwxyz"),
G.appendChild(I),document.getElementsByTagName("svg")[0].appendChild(G)),G.setAttribute("style","font-family :"+d+"; font-size :"+f),p?(I=this.paper.canvas.getBoundingClientRect(),G=G.getBoundingClientRect(),G.x=G.left-I.left,G.y=G.top-I.top):G=G.getBBox(),ba[f]=I=[],I.push(G.height),I.push(G.y));f=I[1];d=I[0];switch(h){case "bottom":h=-100-f-d*b;break;case "top":h=-100-f;break;default:h=-100-f-d/2*b}G={height:I[0],diff:h}}D&&g?e&&e():l&&this.hide();return G};L._getBBox=function(){var a,d=this.node,
f={},h=this.attrs,b,e,I="text"===this.type,l=!!document.documentMode;l&&I?a=c(this):"none"===d.style.display&&(this.show(),e=!0);try{f=d.getBBox(),I&&(void 0===f.x&&(f.isCalculated=!0,b=h["text-anchor"],f.x=(h.x||0)-f.width*("start"===b?0:"middle"===b?.5:1)),void 0===f.y&&(f.isCalculated=!0,b=h["vertical-align"],f.y=(h.y||0)-f.height*("bottom"===b?1:"middle"===b?.5:0)))}catch(g){}finally{f=f||{}}l&&I?a&&a():e&&this.hide();return f};L.attr=function(c,d){if(this.removed)return this;if(null==c){var f=
{},h;for(h in this.attrs)this.attrs.hasOwnProperty(h)&&(f[h]=this.attrs[h]);f.gradient&&"none"==f.fill&&(f.fill=f.gradient)&&delete f.gradient;f.transform=this._.transform;f.visibility="none"===this.node.style.display?"hidden":"visible";return f}if(null==d&&a.is(c,"string")){if("fill"==c&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("transform"==c)return this._.transform;if("visibility"==c)return"none"===this.node.style.display?"hidden":"visible";var f=c.split(k),b={},
e=0;for(h=f.length;e<h;e++)c=f[e],c in this.attrs?b[c]=this.attrs[c]:a.is(this.ca[c],"function")?b[c]=this.ca[c].def:b[c]=a._availableAttrs[c];return h-1?b:b[f[0]]}if(null==d&&a.is(c,"array")){b={};e=0;for(h=c.length;e<h;e++)b[c[e]]=this.attr(c[e]);return b}null!=d?(f={},f[c]=d):null!=c&&a.is(c,"object")&&(f=c);if(!1!==a.stopEvent)for(e in f)ba("raphael.attr."+e+"."+this.id,this,f[e],e);var I={};for(e in this.ca)if(this.ca[e]&&f.hasOwnProperty(e)&&a.is(this.ca[e],"function")&&!this.ca["_invoked"+
e]){this.ca["_invoked"+e]=!0;h=this.ca[e].apply(this,[].concat(f[e]));delete this.ca["_invoked"+e];for(b in h)h.hasOwnProperty(b)&&(f[b]=h[b]);this.attrs[e]=f[e];!1===h&&(I[e]=f[e],delete f[e])}Qa(this,f);var l,e=0;for(h=this.followers.length;e<h;e++)l=this.followers[e],l.cb&&!l.cb.call(l.el,f,this)||l.el.attr(f);for(b in I)f[b]=I[b];return this};L.blur=function(c){if(0!==+c){var d=z("filter"),f=z("feGaussianBlur");this.attrs.blur=c;d.id=a.getElementID(a.createUUID());z(f,{stdDeviation:+c||1.5});
d.appendChild(f);this.paper.defs.appendChild(d);this._blur=d;z(this.node,{filter:"url('"+a._url+"#"+d.id+"')"})}else this._blur&&(this._blur.parentNode.removeChild(this._blur),delete this._blur,delete this.attrs.blur),this.node.removeAttribute("filter")};L.on=function(c,d){var f,h;if(this.removed)return this;if("dragstart"===c)return this.drag(null,d),this;if("dragmove"===c)return this.drag(d),this;if("dragend"===c)return this.drag(null,null,d),this;f=d;h=c;a.supportsTouch&&(c=a._touchMap[c]||"click"===
c&&"touchstart"||c,c!==h&&(this._tempTouchListeners||(this._tempTouchListeners={}),this._tempTouchListeners[h]||(this._tempTouchListeners[h]=[]),f=function(c){c.preventDefault();d(c)},this._tempTouchListeners[h].push({oldFn:d,newFn:f,newEvt:c})));this.node.addEventListener?this.node.addEventListener(c,f):this.node["on"+c]=f;return this};L.off=function(c,d){var f,h,b;if(this.removed)return this;if("dragstart"===c)return this.undragstart(),this;if("dragmove"===c)return this.undragmove(),this;if("dragend"===
c)return this.undragend(),this;f=d;oldEventType=c;if(a.supportsTouch&&this._tempTouchListeners&&this._tempTouchListeners[oldEventType])for(b=this._tempTouchListeners[oldEventType].length,h=0;h<b&&oldEventType===c;h+=1)this._tempTouchListeners[oldEventType][h]&&this._tempTouchListeners[oldEventType][h].oldFn===f&&(c=this._tempTouchListeners[oldEventType][h].newEvt,f=this._tempTouchListeners[oldEventType][h].newFn,this._tempTouchListeners[oldEventType].splice(h,1));this.node.removeEventListener?this.node.removeEventListener(c,
f):this.node["on"+c]=null;return this};a._engine.path=function(c,a,d){var f=z("path");c=new r(f,c,d);c.type="path";Qa(c,a);R(c,a);return c};a._engine.group=function(c,a,d){var f=z("g");c=new r(f,c,d);c.type="group";c.canvas=c.node;c.top=c.bottom=null;c._id=a||"";a&&f.setAttribute("class","raphael-group-"+c.id+"-"+a);return c};a._engine.circle=function(c,a,d){var f=z("circle");c=new r(f,c,d);c.type="circle";Qa(c,a);R(c,a);return c};a._engine.rect=function(c,a,d){var f=z("rect");c=new r(f,c,d);c.type=
"rect";a.rx=a.ry=a.r;Qa(c,a);R(c,a);return c};a._engine.ellipse=function(c,a,d){var f=z("ellipse");c=new r(f,c,d);c.type="ellipse";Qa(c,a);R(c,a);return c};a._engine.image=function(c,a,d){var f=z("image"),h=new r(f,c,d,!0);h._.group=d||c;h.type="image";f.setAttribute("preserveAspectRatio","none");Qa(h,a);R(h,a);return h};a._engine.text=function(c,a,d,f){var h=z("text");c=new r(h,c,d);c.type="text";c._textdirty=!0;f&&c.css&&c.css(f,void 0,!0);Qa(c,a,d);R(c,a);return c};a._engine.setSize=function(c,
a){this.width=c||this.width;this.height=a||this.height;this.canvas.setAttribute("width",this.width);this.canvas.setAttribute("height",this.height);this._viewBox&&this.setViewBox.apply(this,this._viewBox);return this};a._engine.create=function(){var c=a._getContainer.apply(0,arguments),d=c&&c.container,f=c.x,h=c.y,b=c.width,c=c.height;if(!d)throw Error("SVG container not found.");var e=z("svg"),I;I="overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-moz-user-select:-moz-none;-khtml-user-select:none;-ms-user-select:none;user-select:none;-o-user-select:none;cursor:default;vertical-align:middle;";
var l,f=f||0,h=h||0,b=b||512,c=c||342;z(e,{height:c,version:1.1,width:b,xmlns:"http://www.w3.org/2000/svg"});1==d?(e.style.cssText=I+"position:absolute;left:"+f+"px;top:"+h+"px",a._g.doc.body.appendChild(e),l=1):(e.style.cssText=I+"position:relative",d.firstChild?d.insertBefore(e,d.firstChild):d.appendChild(e));d=new a._Paper;d.width=b;d.height=c;d.canvas=e;z(e,{id:"raphael-paper-"+d.id});d.clear();d._left=d._top=0;l&&(d.renderfix=function(){});d.renderfix();return d};a._engine.setViewBox=function(c,
a,d,f,h){ba("raphael.setViewBox",this,this._viewBox,[c,a,d,f,h]);var b=I(d/this.width,f/this.height),e=this.top,l=h?"meet":"xMinYMin",g;null==c?(this._vbSize&&(b=1),delete this._vbSize,g="0 0 "+this.width+" "+this.height):(this._vbSize=b,g=c+" "+a+" "+d+" "+f);for(z(this.canvas,{viewBox:g,preserveAspectRatio:l});b&&e;)l="stroke-width"in e.attrs?e.attrs["stroke-width"]:1,e.attr({"stroke-width":l}),e._.dirty=1,e._.dirtyT=1,e=e.prev;this._viewBox=[c,a,d,f,!!h];return this};a.prototype.renderfix=function(){var c=
this.canvas,a=c.style,d;try{d=c.getScreenCTM()||c.createSVGMatrix()}catch(f){d=c.createSVGMatrix()}c=-d.e%1;d=-d.f%1;if(c||d)c&&(this._left=(this._left+c)%1,a.left=this._left+"px"),d&&(this._top=(this._top+d)%1,a.top=this._top+"px")};a.prototype._desc=function(c){var d=this.desc;if(d)for(;d.firstChild;)d.removeChild(d.firstChild);else this.desc=d=z("desc"),this.canvas.appendChild(d);d.appendChild(a._g.doc.createTextNode(a.is(c,"string")?c:"Created with Red Raphaël "+a.version))};a.prototype.clear=
function(){var c;for(ba("raphael.clear",this);c=this.bottom;)c.remove();for(c=this.canvas;c.firstChild;)c.removeChild(c.firstChild);this.bottom=this.top=null;c.appendChild(this.desc=z("desc"));c.appendChild(this.defs=z("defs"))};a.prototype.remove=function(){var c;for(ba("raphael.remove",this);c=this.bottom;)c.remove();this.defs&&this.defs.parentNode.removeChild(this.defs);this.desc&&this.desc.parentNode.removeChild(this.desc);this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);
for(c in this)this[c]="function"==typeof this[c]?a._removedFactory(c):null;this.removed=!0};var Z=a.st,q;for(q in L)L.hasOwnProperty(q)&&!Z.hasOwnProperty(q)&&(Z[q]=function(c){return function(){var a=arguments;return this.forEach(function(d){d[c].apply(d,a)})}}(q))}})();"undefined"===typeof v&&"object"===typeof window&&(v=window);(function(){if(a.vml){var c=String,d=parseFloat,f=Math,h=f.round,b=f.max,e=f.min,I=f.sqrt,l=f.abs,g=/[, ]+/,D=a.eve,k={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},
G=/([clmz]),?([^clmz]*)/gi,ba=/ progid:\S+Blur\([^\)]+\)/g,t=/-?[^,\s-]+/g,p={path:1,rect:1,image:1},Ba={circle:1,ellipse:1},F=function(d){var f=/[ahqstv]/ig,b=a._pathToAbsolute;c(d).match(f)&&(b=a._path2curve);f=/[clmz]/g;if(b==a._pathToAbsolute&&!c(d).match(f))return(d=c(d).replace(G,function(c,d,a){var f=[],b="m"==d.toLowerCase(),e=k[d];a.replace(t,function(c){b&&2==f.length&&(e+=f+k["m"==d?"l":"L"],f=[]);f.push(h(21600*c))});return e+f}))||"m0,0";var f=b(d),e;d=[];for(var I=0,l=f.length;I<l;I++){b=
f[I];e=f[I][0].toLowerCase();"z"==e&&(e="x");for(var g=1,D=b.length;g<D;g++)e+=h(21600*b[g])+(g!=D-1?",":"");d.push(e)}return d.length?d.join(" "):"m0,0"},z=function(c,d,f){var h=a.matrix();h.rotate(-c,.5,.5);return{dx:h.x(d,f),dy:h.y(d,f)}},w=function(c,d,a,f,h,b){var e=c._,I=c.matrix,g=e.fillpos;c=c.node;var D=c.style,k=1,G="",ba=21600/d,t=21600/a;D.visibility="hidden";if(d&&a){c.coordsize=l(ba)+" "+l(t);D.rotation=b*(0>d*a?-1:1);b&&(h=z(b,f,h),f=h.dx,h=h.dy);0>d&&(G+="x");0>a&&(G+=" y")&&(k=-1);
D.flip=G;c.coordorigin=f*-ba+" "+h*-t;if(g||e.fillsize)if(f=(f=c.getElementsByTagName("fill"))&&f[0])c.removeChild(f),g&&(h=z(b,I.x(g[0],g[1]),I.y(g[0],g[1])),f.position=h.dx*k+" "+h.dy*k),e.fillsize&&(f.size=e.fillsize[0]*l(d)+" "+e.fillsize[1]*l(a)),c.appendChild(f);D.visibility="visible"}};a._url="";a.toString=function(){return"Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël "+this.version};var aa=function(d,a,f){a=c(a).toLowerCase().split("-");f=f?"end":"start";
for(var h=a.length,b="classic",e="medium",I="medium";h--;)switch(a[h]){case "block":case "classic":case "oval":case "diamond":case "open":case "none":b=a[h];break;case "wide":case "narrow":I=a[h];break;case "long":case "short":e=a[h]}d=d.node.getElementsByTagName("stroke")[0];d[f+"arrow"]=b;d[f+"arrowlength"]=e;d[f+"arrowwidth"]=I},m=function(c,d){for(var a in d)D("raphael.attr."+a+"."+c.id,c,d[a],a),c.ca[a]&&c.attr(a,d[a])},Oa=a._setFillAndStroke=function(f,I){if(f.paper.canvas){f.attrs=f.attrs||
{};var l=f.node,D=f.attrs,k=l.style,G=p[f.type]&&(I.x!=D.x||I.y!=D.y||I.width!=D.width||I.height!=D.height||I.cx!=D.cx||I.cy!=D.cy||I.rx!=D.rx||I.ry!=D.ry||I.r!=D.r),ba=Ba[f.type]&&(D.cx!=I.cx||D.cy!=I.cy||D.r!=I.r||D.rx!=I.rx||D.ry!=I.ry),t="group"===f.type,z;for(z in I)I.hasOwnProperty(z)&&(D[z]=I[z]);G&&(D.path=a._getPath[f.type](f),f._.dirty=1);I.href&&(l.href=I.href);I.title&&(l.title=I.title);I.target&&(l.target=I.target);I.cursor&&(k.cursor=I.cursor);"blur"in I&&f.blur(I.blur);if(I.path&&"path"==
f.type||G)l.path=F(~c(D.path).toLowerCase().indexOf("r")?a._pathToAbsolute(D.path):D.path),"image"==f.type&&(f._.fillpos=[D.x,D.y],f._.fillsize=[D.width,D.height],w(f,1,1,0,0,0));"transform"in I&&f.transform(I.transform);"rotation"in I&&(k=I.rotation,a.is(k,"array")?f.rotate.apply(f,k):f.rotate(k));"visibility"in I&&("hidden"===I.visibility?f.hide():f.show());ba&&(k=+D.cx,ba=+D.cy,G=+D.rx||+D.r||0,z=+D.ry||+D.r||0,l.path=a.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",h(21600*(k-G)),h(21600*(ba-z)),
h(21600*(k+G)),h(21600*(ba+z)),h(21600*k)));"clip-rect"in I&&(k=c(I["clip-rect"]).split(g),4==k.length&&(k[0]=+k[0],k[1]=+k[1],k[2]=+k[2]+k[0],k[3]=+k[3]+k[1],G=t?l:l.clipRect||a._g.doc.createElement("div"),ba=G.style,t?(f.clip=k.slice(),G=f.matrix.offset(),G=[d(G[0]),d(G[1])],k[0]-=G[0],k[1]-=G[1],k[2]-=G[0],k[3]-=G[1],ba.width="1px",ba.height="1px"):l.clipRect||(ba.top="0",ba.left="0",ba.width=f.paper.width+"px",ba.height=f.paper.height+"px",l.parentNode.insertBefore(G,l),G.appendChild(l),G.raphael=
!0,G.raphaelid=l.raphaelid,l.clipRect=G),ba.position="absolute",ba.clip=a.format("rect({1}px {2}px {3}px {0}px)",k)),I["clip-rect"]||(t&&f.clip?(l.style.clip="rect(0px 10800px 10800px 0px)",delete f.clip):l.clipRect&&(l.clipRect.style.clip="rect(0px 10800px 10800px 0px)")));if(f.textpath||t)t=t?l.style:f.textpath.style,I.font&&(t.font=I.font),I["font-family"]&&(t.fontFamily='"'+I["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,"")+'"'),I["font-size"]&&(t.fontSize=I["font-size"]),I["font-weight"]&&
(t.fontWeight=I["font-weight"]),I["font-style"]&&(t.fontStyle=I["font-style"]);"arrow-start"in I&&aa(f,I["arrow-start"]);"arrow-end"in I&&aa(f,I["arrow-end"],1);if(null!=I.opacity||null!=I["stroke-width"]||null!=I.fill||null!=I.src||null!=I.stroke||null!=I["stroke-width"]||null!=I["stroke-opacity"]||null!=I["fill-opacity"]||null!=I["stroke-dasharray"]||null!=I["stroke-miterlimit"]||null!=I["stroke-linejoin"]||null!=I["stroke-linecap"]){t=l.getElementsByTagName("fill");k=-1;t=t&&t[0];!t&&(t=Qa("fill"));
"image"==f.type&&I.src&&(t.src=I.src);I.fill&&(t.on=!0);if(null==t.on||"none"==I.fill||null===I.fill)t.on=!1;t.on&&I.fill&&((ba=c(I.fill).match(a._ISURL))?(t.parentNode==l&&l.removeChild(t),t.rotate=!0,t.src=ba[1],t.type="tile",G=f.getBBox(1),t.position=G.x+" "+G.y,f._.fillpos=[G.x,G.y],a._preload(ba[1],function(){f._.fillsize=[this.offsetWidth,this.offsetHeight]})):(ba=a.getRGB(I.fill),t.color=ba.hex,t.src="",t.type="solid",ba.error&&(f.type in{circle:1,ellipse:1}||"r"!=c(I.fill).charAt())&&R(f,
I.fill,t)?(D.fill="none",D.gradient=I.fill,t.rotate=!1):"opacity"in ba&&!("fill-opacity"in I)&&(k=ba.opacity)));if(-1!==k||"fill-opacity"in I||"opacity"in I)ba=((+D["fill-opacity"]+1||2)-1)*((+D.opacity+1||2)-1)*((+k+1||2)-1),ba=e(b(ba,0),1),t.opacity=ba,t.src&&(t.color="none");l.appendChild(t);t=l.getElementsByTagName("stroke")&&l.getElementsByTagName("stroke")[0];k=!1;!t&&(k=t=Qa("stroke"));if(I.stroke&&"none"!=I.stroke||I["stroke-width"]||null!=I["stroke-opacity"]||I["stroke-dasharray"]||I["stroke-miterlimit"]||
I["stroke-linejoin"]||I["stroke-linecap"])t.on=!0;"none"!=I.stroke&&null!==I.stroke&&null!=t.on&&0!=I.stroke&&0!=I["stroke-width"]||(t.on=!1);ba=a.getRGB("stroke"in I?I.stroke:D.stroke);t.on&&I.stroke&&(t.color=ba.hex);ba=((+D["stroke-opacity"]+1||2)-1)*((+D.opacity+1||2)-1)*((+ba.opacity+1||2)-1);G=.75*(d(I["stroke-width"])||1);ba=e(b(ba,0),1);null==I["stroke-width"]&&(G=D["stroke-width"]);I["stroke-width"]&&(t.weight=G);G&&1>G&&(ba*=G)&&(t.weight=1);t.opacity=ba;I["stroke-linejoin"]&&(t.joinstyle=
I["stroke-linejoin"])||k&&(k.joinstyle="miter");t.miterlimit=I["stroke-miterlimit"]||8;I["stroke-linecap"]&&(t.endcap="butt"==I["stroke-linecap"]?"flat":"square"==I["stroke-linecap"]?"square":"round");I["stroke-dasharray"]&&(ba={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"},t.dashstyle=ba.hasOwnProperty(I["stroke-dasharray"])?ba[I["stroke-dasharray"]]:I["stroke-dasharray"].join&&
I["stroke-dasharray"].join(" ")||"");k&&l.appendChild(t)}if("text"==f.type){f.paper.canvas.style.display="";l=f.paper.span;t=D.font&&D.font.match(/\d+(?:\.\d*)?(?=px)/);ba=D["line-height"]&&(D["line-height"]+"").match(/\d+(?:\.\d*)?(?=px)/);k=l.style;D.font&&(k.font=D.font);D["font-family"]&&(k.fontFamily=D["font-family"]);D["font-weight"]&&(k.fontWeight=D["font-weight"]);D["font-style"]&&(k.fontStyle=D["font-style"]);t=d(D["font-size"]||t&&t[0])||10;k.fontSize=100*t+"px";ba=d(D["line-height"]||ba&&
ba[0])||12;D["line-height"]&&(k.lineHeight=100*ba+"px");a.is(I.text,"array")&&(I.text=f.textpath.string=I.text.join("\n").replace(/<br\s*?\/?>/ig,"\n"));f.textpath.string&&(l.innerHTML=c(f.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));l=l.getBoundingClientRect();f.W=D.w=(l.right-l.left)/100;f.H=D.h=(l.bottom-l.top)/100;f.X=D.x;f.Y=D.y;switch(D["vertical-align"]){case "top":f.bby=f.H/2;break;case "bottom":f.bby=-f.H/2;break;default:f.bby=0}("x"in I||"y"in I||void 0!==
f.bby)&&(f.path.v=a.format("m{0},{1}l{2},{1}",h(21600*D.x),h(21600*(D.y+(f.bby||0))),h(21600*D.x)+1));l="x y text font font-family font-weight font-style font-size line-height".split(" ");t=0;for(k=l.length;t<k;t++)if(l[t]in I){f._.dirty=1;break}switch(D["text-anchor"]){case "start":f.textpath.style["v-text-align"]="left";f.bbx=f.W/2;break;case "end":f.textpath.style["v-text-align"]="right";f.bbx=-f.W/2;break;default:f.textpath.style["v-text-align"]="center",f.bbx=0}f.textpath.style["v-text-kern"]=
!0}}},B=a._updateFollowers=function(){var c,d,a,f=arguments,h=S.call(f),b=S.call(f);c=0;for(d=h.followers.length;c<d;c++)a=h.followers[c].el,a[b].apply(a,f)},R=function(f,h,b){f.attrs=f.attrs||{};var e=Math.pow,l="linear",g=".5 .5";f.attrs.gradient=h;h=c(h).replace(a._radial_gradient,function(c,a){l="radial";a=a&&a.split(",")||[];var f=a[3],h=a[4];f&&h&&(f=d(f),h=d(h),.25<e(f-.5,2)+e(h-.5,2)&&(h=I(.25-e(f-.5,2))*(2*(.5<h)-1)+.5),g=f+" "+h);return""});h=h.split(/\s*\-\s*/);if("linear"==l){var D=h.shift(),
D=-d(D);if(isNaN(D))return null}h=a._parseDots(h);if(!h)return null;f=f.shape||f.node;if(h.length){b.parentNode==f&&f.removeChild(b);b.on=!0;b.method="none";b.color=h[0].color;b.color2=h[h.length-1].color;for(var k=[],G=1,ba=void 0===h[0].opacity?1:h[0].opacity,t=0,p=h.length;t<p;t++)h[t].offset&&k.push(h[t].offset+" "+h[t].color),void 0!==h[t].opacity&&(G=h[t].opacity);b.colors=k.length?k.join():"0% "+b.color;b.opacity=G;b["o:opacity2"]=ba;"radial"==l?(b.type="gradientTitle",b.focus="100%",b.focussize=
"0 0",b.focusposition=g,b.angle=0):(b.type="gradient",b.angle=(270-D)%360);f.appendChild(b)}return 1},n=function(c,d,f){f=f||d;var h;f.canvas&&f.canvas.appendChild(c);h=Qa("skew");h.on=!0;c.appendChild(h);this.skew=h;this.node=this[0]=c;c.raphael=!0;c.raphaelid=this.id=a._oid++;this.Y=this.X=0;this.attrs=this.attrs||{};this.followers=this.followers||[];this.paper=d;this.ca=this.customAttributes=this.customAttributes||new d._CustomAttributes;this.matrix=a.matrix();this._={transform:[],sx:1,sy:1,dx:0,
dy:0,deg:0,dirty:1,dirtyT:1};this.parent=f;!f.bottom&&(f.bottom=this);(this.prev=f.top)&&(f.top.next=this);f.top=this;this.next=null},f=a.el;n.prototype=f;f.constructor=n;f.transform=function(d){if(null==d)return this._.transform;var f=this.paper._viewBoxShift,h=f?"s"+[f.scale,f.scale]+"-1-1t"+[f.dx,f.dy]:"",b;f&&(b=d=c(d).replace(/\.{3}|\u2026/g,this._.transform||""));a._extractTransform(this,h+d);var f=this.matrix.clone(),e=this.skew;d=this.node;var h=~c(this.attrs.fill).indexOf("-"),I=!c(this.attrs.fill).indexOf("url(");
f.translate(-.5,-.5);I||h||"image"==this.type?(e.matrix="1 0 0 1",e.offset="0 0",e=f.split(),h&&e.noRotation||!e.isSimple?(d.style.filter=f.toFilter(),f=this.getBBox(),h=this.getBBox(1),I=f.x2&&h.x2&&"x2"||"x",e=f.y2&&h.y2&&"y2"||"y",I=f[I]-h[I],f=f[e]-h[e],d.coordorigin=-21600*I+" "+-21600*f,w(this,1,1,I,f,0)):(d.style.filter="",w(this,e.scalex,e.scaley,e.dx,e.dy,e.rotate))):(d.style.filter="",e.matrix=c(f),e.offset=f.offset());b&&(this._.transform=b);return this};f.rotate=function(a,f,h){if(this.removed)return this;
B(this,"rotate",a,f,h);if(null!=a){a=c(a).split(g);a.length-1&&(f=d(a[1]),h=d(a[2]));a=d(a[0]);null==h&&(f=h);if(null==f||null==h)h=this.getBBox(1),f=h.x+h.width/2,h=h.y+h.height/2;this._.dirtyT=1;this.transform(this._.transform.concat([["r",a,f,h]]));return this}};f.translate=function(a,f){if(this.removed)return this;B(this,"translate",a,f);a=c(a).split(g);a.length-1&&(f=d(a[1]));a=d(a[0])||0;f=+f||0;this._.bbox&&(this._.bbox.x+=a,this._.bbox.y+=f);this.transform(this._.transform.concat([["t",a,
f]]));return this};f.scale=function(a,f,h,b){if(this.removed)return this;B(this,"scale",a,f,h,b);a=c(a).split(g);a.length-1&&(f=d(a[1]),h=d(a[2]),b=d(a[3]),isNaN(h)&&(h=null),isNaN(b)&&(b=null));a=d(a[0]);null==f&&(f=a);null==b&&(h=b);if(null==h||null==b)var e=this.getBBox(1);h=null==h?e.x+e.width/2:h;b=null==b?e.y+e.height/2:b;this.transform(this._.transform.concat([["s",a,f,h,b]]));this._.dirtyT=1;return this};f.hide=function(c){B(this,"hide",c);!this.removed&&(this.node.style.display="none");return this};
f.show=function(c){B(this,"show",c);!this.removed&&(this.node.style.display="");return this};f._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y+(this.bby||0)-this.H/2,width:this.W,height:this.H}};f.remove=function(){if(!this.removed&&this.parent.canvas){var c=a._engine.getNode(this),d=this.paper,f=this.shape;d.__set__&&d.__set__.exclude(this);D.unbind("raphael.*.*."+this.id);f&&f.parentNode.removeChild(f);for(c.parentNode&&c.parentNode.removeChild(c);c=this.followers.pop();)c.el.remove();
for(;c=this.bottom;)c.remove();this._drag&&this.undrag();if(this.events)for(;c=this.events.pop();)c.unbind();this.removeData();delete d._elementsById[this.id];a._tear(this,this.parent);for(c in this)this[c]="function"===typeof this[c]?a._removedFactory(c):null;this.removed=!0}};f.attr=function(c,d){if(this.removed)return this;if(null==c){var f={},h;for(h in this.attrs)this.attrs.hasOwnProperty(h)&&(f[h]=this.attrs[h]);f.gradient&&"none"==f.fill&&(f.fill=f.gradient)&&delete f.gradient;f.transform=
this._.transform;f.visibility="none"===this.node.style.display?"hidden":"visible";return f}if(null==d&&a.is(c,"string")){if("fill"==c&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("visibility"==c)return"none"===this.node.style.display?"hidden":"visible";var f=c.split(g),b={},e=0;for(h=f.length;e<h;e++)c=f[e],c in this.attrs?b[c]=this.attrs[c]:a.is(this.ca[c],"function")?b[c]=this.ca[c].def:b[c]=a._availableAttrs[c];return h-1?b:b[f[0]]}if(this.attrs&&null==d&&a.is(c,
"array")){b={};e=0;for(h=c.length;e<h;e++)b[c[e]]=this.attr(c[e]);return b}null!=d&&(f={},f[c]=d);null==d&&a.is(c,"object")&&(f=c);if(!1!==a.stopEvent)for(e in f)D("raphael.attr."+e+"."+this.id,this,f[e],e);if(f){var I={};for(e in this.ca)if(this.ca[e]&&f.hasOwnProperty(e)&&a.is(this.ca[e],"function")&&!this.ca["_invoked"+e]){this.ca["_invoked"+e]=!0;h=this.ca[e].apply(this,[].concat(f[e]));delete this.ca["_invoked"+e];for(b in h)h.hasOwnProperty(b)&&(f[b]=h[b]);this.attrs[e]=f[e];!1===h&&(I[e]=f[e],
delete f[e])}"text"in f&&"text"==this.type&&(a.is(f.text,"array")&&(f.text=f.text.join("\n")),this.textpath.string=f.text.replace(/<br\s*?\/?>/ig,"\n"));Oa(this,f);var l,e=0;for(h=this.followers.length;e<h;e++)l=this.followers[e],l.cb&&!l.cb.call(l.el,f,this)||l.el.attr(f);for(b in I)f[b]=I[b]}return this};f.blur=function(c){var d=this.node.runtimeStyle,f=d.filter,f=f.replace(ba,"");0!==+c?(this.attrs.blur=c,d.filter=f+"  progid:DXImageTransform.Microsoft.Blur(pixelradius="+(+c||1.5)+")",d.margin=
a.format("-{0}px 0 0 -{0}px",h(+c||1.5))):(d.filter=f,d.margin=0,delete this.attrs.blur);return this};f.on=function(c,d){if(this.removed)return this;if("dragstart"===c)return this.drag(null,d),this;if("dragmove"===c)return this.drag(d),this;if("dragend"===c)return this.drag(null,null,d),this;this.node.attachEvent?this.node.attachEvent("on"+c,d):this.node["on"+c]=function(){var c=a._g.win.event;c.target=c.srcElement;d(c)};return this};f.off=function(c,d){if(this.removed)return this;if("dragstart"===
c)return this.undragstart(),this;if("dragmove"===c)return this.undragmove(),this;if("dragend"===c)return this.undragend(),this;this.node.attachEvent?this.node.detachEvent("on"+c,d):this.node["on"+c]=null;return this};a._engine.getNode=function(c){c=c.node||c[0].node;return c.clipRect||c};a._engine.getLastNode=function(c){c=c.node||c[c.length-1].node;return c.clipRect||c};a._engine.group=function(c,d,f){var h=a._g.doc.createElement("div"),b=new n(h,c,f);h.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";
b._id=d||"";d&&(h.className="raphael-group-"+b.id+"-"+d);(f||c).canvas.appendChild(h);b.type="group";b.canvas=b.node;b.transform=a._engine.group.transform;b.top=null;b.bottom=null;return b};a._engine.group.transform=function(f){if(null==f)return this._.transform;var h=this.node.style,b=this.clip,e=this.paper._viewBoxShift,I=e?"s"+[e.scale,e.scale]+"-1-1t"+[e.dx,e.dy]:"";e&&(f=c(f).replace(/\.{3}|\u2026/g,this._.transform||""));a._extractTransform(this,I+f);f=this.matrix;I=f.offset();e=d(I[0])||0;
I=d(I[1])||0;h.left=e+"px";h.top=I+"px";h.zoom=(this._.tzoom=f.get(0))+"";b&&(h.clip=a.format("rect({1}px {2}px {3}px {0}px)",[b[0]-e,b[1]-I,b[2]-e,b[3]-I]));return this};a._engine.path=function(c,d,a){var f=Qa("shape");f.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";f.coordsize="21600 21600";f.coordorigin=c.coordorigin;c=new n(f,c,a);c.type=d.type||"path";c.path=[];c.Path="";d.type&&delete d.type;Oa(c,d);m(c,d);return c};a._engine.rect=function(c,d,f){var h=a._rectPath(d.x,
d.y,d.w,d.h,d.r);d.path=h;d.type="rect";c=c.path(d,f);d=c.attrs;c.X=d.x;c.Y=d.y;c.W=d.width;c.H=d.height;d.path=h;return c};a._engine.ellipse=function(c,d,a){d.type="ellipse";c=c.path(d,a);d=c.attrs;c.X=d.x-d.rx;c.Y=d.y-d.ry;c.W=2*d.rx;c.H=2*d.ry;return c};a._engine.circle=function(c,d,a){d.type="circle";c=c.path(d,a);d=c.attrs;c.X=d.x-d.r;c.Y=d.y-d.r;c.W=c.H=2*d.r;return c};a._engine.image=function(c,d,f){var h=a._rectPath(d.x,d.y,d.w,d.h);d.path=h;d.type="image";d.stroke="none";c=c.path(d,f);f=
c.attrs;var h=c.node,b=h.getElementsByTagName("fill")[0];f.src=d.src;c.X=f.x=d.x;c.Y=f.y=d.y;c.W=f.width=d.w;c.H=f.height=d.h;b.parentNode==h&&h.removeChild(b);b.rotate=!0;b.src=f.src;b.type="tile";c._.fillpos=[f.x,f.y];c._.fillsize=[f.w,f.h];h.appendChild(b);w(c,1,1,0,0,0);return c};a._engine.text=function(d,f,b,e){var I=Qa("shape"),l=Qa("path"),g=Qa("textpath");x=f.x||0;y=f.y||0;text=f.text;l.v=a.format("m{0},{1}l{2},{1}",h(21600*f.x),h(21600*f.y),h(21600*f.x)+1);l.textpathok=!0;g.string=c(f.text).replace(/<br\s*?\/?>/ig,
"\n");g.on=!0;I.style.cssText="position:absolute;left:0;top:0;width:1px;height:1px";I.coordsize="21600 21600";I.coordorigin="0 0";d=new n(I,d,b);d.shape=I;d.path=l;d.textpath=g;d.type="text";d.attrs.text=c(f.text||"");d.attrs.x=f.x;d.attrs.y=f.y;d.attrs.w=1;d.attrs.h=1;e&&d.css&&d.css(e,void 0,!0);Oa(d,f);m(d,f);I.appendChild(g);I.appendChild(l);return d};a._engine.setSize=function(c,d){var f=this.canvas.style;this.width=c;this.height=d;c==+c&&(c+="px");d==+d&&(d+="px");c&&(f.width=c);d&&(f.height=
d);f.clip="rect(0 "+f.width+" "+f.height+" 0)";this._viewBox&&a._engine.setViewBox.apply(this,this._viewBox);return this};a._engine.setViewBox=function(c,d,a,f,h){D("raphael.setViewBox",this,this._viewBox,[c,d,a,f,h]);var e=this.width,I=this.height,l=1/b(a/e,f/I),g,k;h&&(g=I/f,k=e/a,a*g<e&&(c-=(e-a*g)/2/g),f*k<I&&(d-=(I-f*k)/2/k));this._viewBox=[c,d,a,f,!!h];this._viewBoxShift={dx:-c,dy:-d,scale:l};this.forEach(function(c){c.transform("...")});return this};var Qa;a._engine.initWin=function(d){var f=
d.document;f.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!f.namespaces.rvml&&f.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),Qa=a._createNode=function(d,a){var h=f.createElement("<rvml:"+d+' class="rvml">'),b;for(b in a)h[b]=c(a[b]);return h}}catch(h){Qa=a._createNode=function(d,a){var h=f.createElement("<"+d+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">'),b;for(b in a)h[b]=c(a[b]);return h}}};a._engine.initWin(a._g.win);a._engine.create=function(){var c=
a._getContainer.apply(0,arguments),d=c.container,f=c.height,h=c.width,b=c.x,c=c.y;if(!d)throw Error("VML container not found.");var e=new a._Paper,I=e.canvas=a._g.doc.createElement("div"),l=I.style,b=b||0,c=c||0,h=h||512,f=f||342;e.width=h;e.height=f;h==+h&&(h+="px");f==+f&&(f+="px");e.coordsize="21600000 21600000";e.coordorigin="0 0";I.id="raphael-paper-"+e.id;e.span=a._g.doc.createElement("span");e.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";
I.appendChild(e.span);l.cssText=a.format("top:0;left:0;width:{0};height:{1};display:inline-block;cursor:default;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",h,f);1==d?(a._g.doc.body.appendChild(I),l.left=b+"px",l.top=c+"px",l.position="absolute"):d.firstChild?d.insertBefore(I,d.firstChild):d.appendChild(I);e.renderfix=function(){};return e};a.prototype.clear=function(){var c;for(D("raphael.clear",this);c=this.bottom;)c.remove();this.canvas.innerHTML="";this.span=a._g.doc.createElement("span");
this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";this.canvas.appendChild(this.span);this.bottom=this.top=null};a.prototype.remove=function(){var c;for(D("raphael.remove",this);c=this.bottom;)c.remove();this.canvas.parentNode.removeChild(this.canvas);for(c in this)this[c]="function"==typeof this[c]?a._removedFactory(c):null;return!0};var K=a.st,P;for(P in f)f.hasOwnProperty(P)&&!K.hasOwnProperty(P)&&(K[P]=function(c){return function(){var d=
arguments;return this.forEach(function(a){a[c].apply(a,d)})}}(P))}})();w&&(R.win.Raphael=a);return a},!0);b.Raphael=C;b.Raphael.desc="";J&&J!==C?v.Raphael=J:v.Raphael===C&&(v.Raphael=void 0)})(v||window)}]);Q.register("module",["private","fusioncharts.redraphael.helper",function(){var b=this.hcLib,v=b.Raphael,J={};v.fn._elementFromEvent=function(b){if(!b||this.removed)return null;var v=b.srcElement||b.target||(b=b.originalEvent)&&(b.srcElement||b.target)||J;"tspan"===v.nodeName&&(v=v.parentNode);
return this.getById(v.raphaelid)};v.requestAnimFrame=b.schedular.addJob&&function(v){b.schedular.addJob(v,b.priorityList.animation,!0)}}]);Q.register("module",["private","fusioncharts.redraphael.css",function(){var b=this.hcLib,v=b.Raphael,J=v.eve,C=v._g,H=v.fn,A=v.el,u=/[, ]+/,a=/\B([A-Z]{1})/g,O,q;O=function(a){this.styleSheet="";this.rules={};this.ns=a||""};q=O.prototype;q.getSheet=function(){var a=this.node;this.styleSheet=q.getStyleSheet("fusioncharts-raphael-stylesheet");this.styleSheet||(a=
this.node=C.doc.createElement("style"),a.setAttribute("id",v.format("raphael-stylesheet-{0}",v._oid++)),a.setAttribute("type","text/css"),a.setAttribute("title","fusioncharts-raphael-stylesheet"),(C.doc.head||C.doc.getElementsByTagName("head")[0]).appendChild(this.node),this.styleSheet=q.getStyleSheet("fusioncharts-raphael-stylesheet"));return this.styleSheet};q.getStyleSheet=function(a){for(var b=C.doc.styleSheets,q=b.length,u;q--;)if(u=b[q],u.title===a)return u};q.applyCSSRule=function(a,b){var q=
this.styleSheet,u;if(!q)if(a&&b)q=this.getSheet();else return;u=(q.rules||q.cssRules||{}).length||0;q.insertRule?q.insertRule(a+"{"+b+"}",u):q.addRule&&q.addRule(a,b,u)};q.removeCSS=function(a){var b=this.styleSheet,q=b.rules||b.cssRules||{},u=q.length||0,r;for(a=a||this.ns;u--;)r=q[u],(new RegExp(a)).test(r.selectorText)&&(b.removeRule?b.removeRule(u):b.deleteRule(u))};q.destroy=function(){this.removeCSS();delete this.node;delete this.styleSheet;delete this.ns;delete this.rules};q.clear=function(){this.removeCSS();
this.rules={}};q.add=function(b,q,u){var E,r="",k=this.rules[b]||(this.rules[b]={}),m=u?"":"\t";u=u?":":": ";for(E in q)(k[E]=q[E])&&(r+=m+E.replace(a,"-$1").toLowerCase()+u+k[E]+";");this.applyCSSRule(b,r)};q.render=function(){this.setCssText()};q.setCssText=function(b){var q=b?"":"\t";b=b?":":": ";var u="",E="",r,k;for(r in this.rules){u="";E=r.replace(/(^|\,)/g,"$1"+this.ns+" ");r=this.rules[r];for(k in r)r[k]&&(u+=q+k.replace(a,"-$1").toLowerCase()+b+r[k]+";");this.applyCSSRule(E,u)}};J.on("raphael.new",
function(){this._stylesheet=this._stylesheet||new O;this.cssNamespace("")});J.on("raphael.remove",function(){this._stylesheet&&this._stylesheet.destroy();delete this._stylesheet});H.cssNamespace=function(a){arguments.length&&(this._stylesheet.ns=v.format("{0}#raphael-paper-{1}",a&&a+" "||"",this.id));return this._stylesheet.ns};H.cssAddRule=function(a,b){if(1===arguments.length&&"object"===typeof a){for(var q in a)this.cssAddRule(q,a[q]);return this}return this._stylesheet.add(a,b),this};H.cssRender=
function(){return v.svg&&this._stylesheet.render(),this};H.cssClear=function(){return this._stylesheet.clear(),this};v.ca["class"]=function(a){var b=this.node,q=this.paper,u="."+a,q=q._stylesheet&&q._stylesheet.rules,r=this.parent,k=this.attrs,m={},n;if(v.svg)a=a||"",b.setAttribute("class","group"===this.type&&this._id?"raphael-group-"+this.id+"-"+this._id+" "+a:a);else if(v.vml&&(b.className="group"===this.type?a&&this._id+" "+a||this._id:"rvml "+a,u&&q)){a=q[u];for(n in a)"color"===n&&"text"===
this.type&&(n="fill"),!k[n]&&(m[n]=a[n]);for(;r&&r.attr;){if(a=r.attr("class"))for(n in u="."+a+" "+u,a=q[u],a)"color"===n&&"text"===this.type&&(n="fill"),k[n]||m[n]||(m[n]=a[n]);r=r.parent}this.css(m)}};A.css=function(a,b,q){var E,r;if(this.removed)return this;this.styles||(this.styles={});if(null==b&&v.is(a,"string")){q=a.split(u);E={};r=0;for(b=q.length;r<b;r++)a=q[r],a in this.styles&&(E[a]=this.styles[a]);return b-1?E:E[q[0]]}if(null==b&&v.is(a,"array")){E={};r=0;for(b=a.length;r<b;r++)E[a[r]]=
this.styles(a[r]);return E}null!=b?(E={},E[a]=b):null!=a&&v.is(a,"object")&&(E=a);a={};for(r in E)b=r.replace(/\B([A-Z]{1})/g,"-$1").toLowerCase(),v._availableAttrs.hasOwnProperty(b)||"color"===b?("color"===b&&"text"===this.type&&(b="fill"),a[b]=E[r],a.dirty=!0):(J("raphael.css."+b+"."+this.id,this,E[r],b),this.node.style[b]=E[r],this.styles[b]=E[r]);r=0;for(b=this.followers.length;r<b;r++)this.followers[r].el.attr(E);a.hasOwnProperty("dirty")&&(delete a.dirty,q&&(a["_do-not-tune"]=!0),this.attr(a));
return this};A.removeCSS=function(a){var q,u,E;!a&&(a=b.appliedCSS);if(this.removed)return this;v.is(a,"string")&&(a=a.split(","));if(v.is(a,"array"))for(E=a.length,u=0;u<E;u++)q=a[u].replace(/\B([A-Z]{1})/g,"-$1").toLowerCase(),this.node.removeAttribute(q),this.node.style[q]="";return this}}]);Q.register("module",["private","modules.renderer.js-raphaelexport",function(){var b=this.hcLib,v=b.Raphael,J=b.pluckNumber,C=b.pluck,H=v._availableAttrs,A=/^matrix\(|\)$/g,u=/\,/g,a=/\n|<br\s*?\/?>/ig,O=/[^\d\.]/ig,
q=/[\%\(\)\s,\xb0#]/g,M=/group/ig,U=/&/g,N=/"/g,E=/'/g,r=/</g,k=/>/g,m=0;(function(b){var L=Math,g=parseFloat,l=L.max,B=L.abs,e=L.pow,V=String,p=/[, ]+/,T=[{reg:/xmlns\=\"http\:\/\/www.w3.org\/2000\/svg\"/ig,repStr:""},{reg:/^.*<svg /,repStr:'<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" '},{reg:/\/svg>.*$/,repStr:"/svg>"},{reg:/<desc\>[^<]*<\/desc\>/,repStr:""},{reg:/zIndex="[^"]+"/g,repStr:""},{reg:/url\((\\?[\'\"])[^#]+#/g,repStr:"url($1#"},{reg:/ href=/g,repStr:" xlink:href="},
{reg:/(id|class|width|height)=([^" >]+)/g,repStr:'$1="$2"'},{reg:/:(path|rect)/g,repStr:"$1"},{reg:/<ima?ge? ([^\>]+?[^\/])\>/gi,repStr:"<image $1 />"},{reg:/<\/ima?ge?\>/g,repStr:""},{reg:/style="([^"]+)"/g,repStr:function(a){return a.toLowerCase()}}],K={blur:function(){},transform:function(){},src:function(a,b){b.attrSTR+=' xlink:href="'+b.attrs.src+'"'},path:function(a,e){var l=e.attrs.path,l=b._pathToAbsolute(l||"");e.attrSTR+=' d="'+(l.toString&&l.toString()||"").replace(u," ")+'"'},gradient:function(a,
k,t){var p=a.attrs.gradient,F="linear",m,h,d,f=.5,c=.5,D=h="",G="",aa,K,P,r;m=p.replace(q,"_");if(!t[m]){p=V(p).replace(b._radial_gradient,function(d,a){var h,b,l,D,k,G,t;a=a&&a.split(",")||[];F="radial";h=a[0];b=a[1];l=a[2];D=a[3];k=a[4];r=a[5];t=h&&b;l&&(P=/\%/.test(l)?l:g(l));if("userSpaceOnUse"===r)return t&&(f=h,c=b),D&&k&&(aa=D,K=k,t||(f=aa,c=K)),"";t&&(f=g(h),c=g(b),h=2*(.5<c)-1,.25<(G=e(f-.5,2))+e(c-.5,2)&&.25>G&&(c=L.sqrt(.25-G)*h+.5)&&.5!==c&&(c=c.toFixed(5)-1E-5*h));D&&k&&(aa=g(D),K=g(k),
h=2*(.5<K)-1,.25<(G=e(aa-.5,2))+e(K-.5,2)&&.25>G&&(K=L.sqrt(.25-G)*h+.5)&&.5!==K&&(K=K.toFixed(5)-1E-5*h),t||(f=aa,c=K));return""});p=p.split(/\s*\-\s*/);if("linear"===F){h=p.shift();h=-g(h);if(isNaN(h))return null;d=[0,0,L.cos(b.rad(h)),L.sin(b.rad(h))];h=1/(l(B(d[2]),B(d[3]))||1);d[2]*=h;d[3]*=h;0>d[2]&&(d[0]=-d[2],d[2]=0);0>d[3]&&(d[1]=-d[3],d[3]=0)}p=b._parseDots(p);if(!p)return null;"radial"===F?(h='<radialGradient fx = "'+f+'" fy = "'+c+'" cy = "'+K+'" cx = "'+aa+'" r = "'+P+'" gradientUnits = "'+
r+'" id = "'+m+'">',D="</radialGradient>"):(h='<linearGradient x1 = "'+d[0]+'" y1 = "'+d[1]+'" x2 = "'+d[2]+'" y2 = "'+d[3]+'" gradientTransform ="matrix('+a.matrix.invert()+')" id = "'+m+'">',D="</linearGradient>");a=0;for(d=p.length;a<d;a++)G+='<stop offset="'+(p[a].offset?p[a].offset:a?"100%":"0%")+'" stop-color="'+(p[a].color||"#fff")+'" stop-opacity="'+(void 0===p[a].opacity?1:p[a].opacity)+'" />';t[m]=!0;t.str+=h+G+D}k.attrSTR+=" fill=\"url('#"+m+"')\""},fill:function(a,e){var l=e.attrs,g=l.fill,
k;a.attrs.gradient||(g=b.color(g),k=g.opacity,"text"===a.type?e.styleSTR+="fill:"+g+"; stroke-opacity:0; ":(e.attrSTR+=' fill="'+g+'"',l["fill-opacity"]||!k&&0!==k||(e.attrSTR+=' fill-opacity="'+k+'"')))},stroke:function(a,e){var l=e.attrs,g,k;g=b.color(l.stroke);k=g.opacity;"text"!==a.type&&(e.attrSTR+=' stroke="'+g+'"',l["stroke-opacity"]||!k&&0!==k||(e.attrSTR+=' stroke-opacity="'+k+'"'))},"clip-rect":function(a,b,e){var l=V(b.attrs["clip-rect"]),g=l.split(p),l=l.replace(q,"_")+"__"+m++;4===g.length&&
(e[l]||(e[l]=!0,e.str+='<clipPath id="'+l+'"><rect x="'+g[0]+'" y="'+g[1]+'" width="'+g[2]+'" height="'+g[3]+'" transform="matrix('+a.matrix.invert().toMatrixString().replace(A,"")+')"/></clipPath>'),b.attrSTR+=' clip-path="url(#'+l+')"')},cursor:function(a,b){var e=b.attrs.cursor;e&&(b.styleSTR+="cursor:"+e+"; ")},font:function(a,b){b.styleSTR+="font:"+b.attrs.font.replace(/\"/ig," ")+"; "},"font-size":function(a,b){var e=C(b.attrs["font-size"],"10");e&&e.replace&&(e=e.replace(O,""));b.styleSTR+=
"font-size:"+e+"px; "},"font-weight":function(a,b){b.styleSTR+="font-weight:"+b.attrs["font-weight"]+"; "},"font-family":function(a,b){b.styleSTR+="font-family:"+b.attrs["font-family"]+"; "},"line-height":function(){},"clip-path":function(){},visibility:function(){},"vertical-align":function(){},"text-anchor":function(a,b){var e=b.attrs["text-anchor"]||"middle";"text"===a.type&&(b.attrSTR+=' text-anchor="'+e+'"')},title:function(){},text:function(b,e){var l=e.attrs,g=l.text,t=C(l["font-size"],l.font,
"10"),p=C(l["line-height"]),h,d,f;t&&t.replace&&(t=t.replace(O,""));t=J(t);p&&p.replace&&(p=p.replace(O,""));p=J(p,t&&1.2*t);h=t?.85*t:.75*p;t=l.x;d=C(l["vertical-align"],"middle").toLowerCase();g=V(g).split(a);f=g.length;l=0;for(h="top"===d?h:"bottom"===d?h-p*f:h-p*f*.5;l<f;l++)e.textSTR+="<tspan ",d=(g[l]||"").replace(U,"&amp;").replace(N,"&quot;").replace(E,"&#39;").replace(r,"&lt;").replace(k,"&gt;"),e.textSTR=l?e.textSTR+('dy="'+p+'" x="'+t+'" '):e.textSTR+('dy="'+h+'"'),e.textSTR+=">"+d+"</tspan>"}},
t=function(a,b){var e="",l={attrSTR:"",styleSTR:"",textSTR:"",attrs:a.attr()},g=a.isShadow,k="",h="",d,f,c=l.attrs;if("none"===a.node.style.display||g)a.next&&(e+=t(a.next,b));else{for(d in c)if("gradient"!==d&&(void 0!==H[d]||K[d])&&void 0!==c[d])if(K[d])K[d](a,l,b);else l.attrSTR+=" "+d+'="'+c[d]+'"';a.attrs.gradient&&K.gradient(a,l,b);"rect"===a.type&&c.r&&(l.attrSTR+=' rx="'+c.r+'" ry="'+c.r+'"');for(f in a.styles)l.styleSTR+=f+":"+a.styles[f]+"; ";"image"===a.type&&(l.attrSTR+=' preserveAspectRatio="none"');
if("text"===a.type&&!c["text-anchor"])K["text-anchor"](a,l);a.bottom&&(k=t(a.bottom,b));a.next&&(h=t(a.next,b));g=a.type;g.match(M)&&(g="g");e+="<"+g+' transform="matrix('+a.matrix.toMatrixString().replace(A,"")+')" style="'+l.styleSTR+'"'+l.attrSTR+">"+l.textSTR+k+"</"+g+">"+h}return e},Z=function(a){a=JSON.stringify(a);a=a.replace(/([a-z]+)([A-Z]+)([a-z]+)/g,function(a,b,e,l){return b+"-"+e.toLowerCase()+l});a=a.replace(/\"\,\"/g,'";"');a=a.replace(/\"/g," ");return a=a=a.replace(/\{|\}/g,"")},
P=function(a,b){var e,l,g,k,h,d=function(a){return a=a.match(/style\s*=/)?a.replace(/(style\s*=")([^"]+)/g,function(c,a,d){return a+g+d}):a.replace(/class\s*="[^"]*"/i,function(c){return c+' style="'+g+'" '})};for(e in b)if(b.hasOwnProperty(e))for(h in l=/\s+/,l=e.split(l),g=Z(b[e]),l)l.hasOwnProperty(h)&&(k=l[h].trim().replace(".",""),k=new RegExp("<[^>]+("+k+")[^>]+","g"),a=a.replace(k,d));return a};b.fn.toSVG=function(a){var e="",l={str:""},g=0,k=T.length,p="";if(b.svg){if(this.canvas&&this.canvas.parentNode){for(e=
this.canvas.parentNode.innerHTML;g<k;g+=1)l=T[g],e=e.replace(l.reg,l.repStr);this._stylesheet&&this._stylesheet.rules&&(e=P(e,this._stylesheet.rules))}a||(e=e.replace(/<image[^\>]*\>/gi,function(a){return a.match(/href=\"data\:image/i)?a:""}))}else e='<svg style="overflow: hidden; position: relative;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'+this.width+'" version="1.1" height="'+this.height+'">',this.bottom&&(p=t(this.bottom,l)),e+="<defs>"+l.str+"</defs>"+
p+"</svg>",a||(e=e.replace(/<image[^\>]*\>[^\>]*\>/gi,function(a){return a.match(/href=\"data\:image/i)?a:""}));return e}})(v)}]);Q.register("module",["private","modules.renderer.js-raphaelshadow",function(){var b=this.window,v=Math.sqrt,J=b.parseFloat,C=b.parseInt,b=b.SVGFilterElement||b.SVGFEColorMatrixElement&&2===b.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE,H=this.hcLib.Raphael,A={"drop-shadow":"drop-shadow",stroke:"stroke",fill:"fill","stroke-width":"stroke-width","stroke-opacity":"stroke-opacity",
"stroke-linecap":"stroke-linecap","stroke-linejoin":"stroke-linejoin","shape-rendering":"shape-rendering",transform:"transform"},u=H._createNode,a;H.svg?(b&&(H.el.dropshadow=function(a,b,C,A){var N=this.node,E=this._.shadowFilter,r=this.paper.cacheShadows||(this.paper.cacheShadows={}),k="drop-shadow"+[a,b,C,A].join(" "),m;if("none"===a){if(E){--E.use;this.node.removeAttribute("filter");if(!E.use){k=E.hash;for(m in E)a=E[m],a.parentNode&&a.parentNode.removeChild(a),delete E[m];delete r[k]}delete this._.shadowFilter}}else E&&
r[k]===E||(E=this.paper.defs.appendChild(u("filter",{id:H.getElementID(H.createUUID()),width:"200%",height:"200%"})),A=H.color(A),A.error&&(A=H.color("rgba(0,0,0,1)")),m=H.pick(A.opacity,1),this._.shadowFilter=r[k]={use:1,filter:E,hash:k,offset:E.appendChild(u("feOffset",{result:"offOut","in":"SourceGraphic",dx:J(a),dy:J(b)})),matrix:E.appendChild(u("feColorMatrix",{result:"matrixOut","in":"offOut",type:"matrix",values:"0 0 0 0 "+A.r/255+" 0 0 0 0 "+A.g/255+" 0 0 0 0 "+A.b/255+" 0 0 0 "+m+" 0"})),
blur:E.appendChild(u("feGaussianBlur",{result:"blurOut","in":"matrixOut",stdDeviation:v(J(C))})),blend:E.appendChild(u("feComposite",{"in":"SourceGraphic",in2:"blurOut",operator:"over"}))},N.setAttribute("filter",'url("'+H._url+"#"+E.id+'")'));return this}),a=function(a,b){var u=this.__shadowscale,v={},N,E;for(E in a)switch(A[E]&&(v[E]=a[E],delete a[E]),E){case "transform":N=b.matrix.clone();N.translate(this.__shadowx,this.__shadowy);this.transform(N.toTransformString());break;case "stroke-width":a[E]=
((v[E]||1)+6-2*this.__shadowlevel)*u}this.attr(a);for(E in v)a[E]=v[E]},H.ca["drop-shadow"]=function(b,q,u,v,N,E){u=this._.shadows||(this._.shadows=[]);var r,k,m,n,L;if(!this.__shadowblocked)if("none"===b)for(;k=u.pop();)k.remove();else for(v=H.color(v),v.error&&(v=H.color("rgba(0,0,0,1)")),N instanceof Array?(r=N[0],N=N[1]):r=N,r=1/H.pick(r,1),N=1/H.pick(N,1),b=H.pick(b,1)*r,q=H.pick(q,1)*r,r=.05*H.pick(v.opacity,1),m=C(this.attr("stroke-width")||1,10)+6,n=this.matrix.clone(),n.translate(b,q),L=
1;3>=L;L++)k=(u[L-1]||this.clone().follow(this,a,!E&&"before")).attr({stroke:v.hex,"stroke-opacity":r*L,"stroke-width":(m-2*L)*N,transform:n.toTransformString(),"stroke-linecap":"round","stroke-linejoin":"round",fill:"none"}),k.__shadowlevel=L,k.__shadowscale=N,k.__shadowx=b,k.__shadowy=q,E&&E.appendChild(k),u.push(k);return!1},H.el.shadow=function(a,b,u,v){var N;u&&u.constructor===H.el.constructor&&(v=u,u=void 0);"object"===typeof a&&(b&&b.constructor===H.el.constructor&&(v=b),b=a.opacity,u=a.scalefactor,
N=!!a.useFilter,a=void 0===a.apply?!!b:a.apply);void 0===b&&(b=1);if(this.dropshadow){if(N)return a&&this.dropshadow(1,1,3,"rgb(64,64,64)")||this.dropshadow("none"),this;this._.shadowFilter&&this.dropshadow("none")}return this.attr("drop-shadow",a?[1,1,3,"rgba(64,64,64,"+b+")",u,v]:"none")}):H.vml?(H.ca["drop-shadow"]=function(a,b,u,v,N,E){var r=this._.shadow,k,m;if(this.isShadow)return!1;"none"===a?r&&(this._.shadow=r.remove()):(r||(r=this._.shadow=this.clone(),E&&E.appendChild(r.follow(this))||
r.follow(this,void 0,"before"),r.attr({fill:"none","fill-opacity":.5,"stroke-opacity":1}).isShadow=!0,0>=r.attr("stroke-width")&&r.attr("stroke-width",1)),E=r.node.runtimeStyle,k=E.filter.replace(/ progid:\S+Blur\([^\)]+\)/g,""),v=H.color(v),v.error&&(v=H.color("rgba(0,0,0,1)")),m=H.pick(v.opacity,1)/5,N=1/H.pick(N,1),a=H.pick(a,1)*N,b=H.pick(b,1)*N,r.translate(a,b),E.filter=k+" progid:DXImageTransform.Microsoft.Blur(pixelRadius="+J(.4*u)+" makeShadow=True Color="+v.hex+' shadowOpacity="'+m+'");');
return!1},H.el.shadow=function(a,b,u,v){u&&u.constructor===H.el.constructor&&(v=u,u=void 0);"object"===typeof a&&(b&&"group"===b.type&&(v=b),b=a.opacity,u=a.scalefactor,a=void 0===a.apply?!!b:a.apply);void 0===b&&(b=1);return this.attr("drop-shadow",a||!b?[1,1,5,"rgba(64,64,64,"+b+")",u,v]:"none")}):H.canvas&&(H.el.shadow=function(){return this})}]);Q.register("module",["private","modules.renderer.js-raphaelshapes",function(){var b=this.window,v="createTouch"in b.document,J=/msie/i.test(b.navigator.userAgent)&&
!b.opera,C=Math,H=C.cos,A=C.sin,u=C.abs,a=C.pow,O=C.atan2,q=C.tan,M=C.acos,U=C.min,N=C.round,E=C.PI,r=C.sqrt,k=2*E,m=b.parseInt,n=b.parseFloat,L=String,g=Array.prototype.slice,l=a(2,-24),B="rgba(192,192,192,"+(J?.002:1E-6)+")",e=this.hcLib.Raphael,V=e.eve,p=e._createNode,T=e._setFillAndStroke,K=e.el.constructor,t={speed:"optimizeSpeed",crisp:"crispEdges",precision:"geometricPrecision"},Z={enabled:!1,"false":!1,0:!1,disabled:!0,"true":!0,1:!0},P={Q:"L",Z:"X",q:"l",z:"x",",":" "},S=/,?([achlmqrstvxz]),?/gi,
z=/\s*\,\s*/g,R,w=function(){return this.join(",").replace(S,R)},F,X,h=e._cacher(function(d,c,h,b){return r(a(h-d,2)+a(b-c,2))}),d=e._cacher(function(a,c,d,b,e){var l=d-a,g=b-c;d=h(a,c,d,b);return{x:a+l/d*e,y:c+g/d*e}});if(e.svg)V.on("raphael.attr.shape-rendering",function(a,c){var d=this.node;this.attrs[c]=a=t[a]||a||"auto";d.setAttribute(c,a);d.style.shapeRendering=a});else if(e.vml)V.on("raphael.attr.shape-rendering",function(a){this.node.style.antialias="crisp"!==a});e.define&&e.define([{name:"polypath",
polypath:function(){return this.path(void 0,e._lastArgIfGroup(arguments))},ca:{polypath:function(a,c,d,h,b,l){var g,k,t;g=[];a=m(a,10)||0;c=n(c)||0;d=n(d)||0;h=n(h)||0;b=null===b||isNaN(b)?.5*E:e.rad(b);l=null===l||isNaN(l)?0:n(l);k=b;if(2<a)switch(b=2*E/a,l){case 0:for(l=0;l<a;l++)g.push("L",c+h*H(-k),d+h*A(-k)),k+=b;g[0]="M";g.push("Z");break;case 1:for(l=0;l<a;l++)g.push("M",c,d,"L",c+h*H(-k),d+h*A(-k)),k+=b;break;default:b*=.5;t=h*H(b)*(1-l);for(l=0;l<a;l++)g.push("L",c+h*H(-k),d+h*A(-k)),k+=
b,g.push("L",c+t*H(-k),d+t*A(-k)),k+=b;g[0]="M";g.push("Z")}else 0===h?g.push("M",c,d,"L",c,d,"Z"):g.push("M",c-h,d,"A",h,h,0,0,0,c+h,d,"A",h,h,0,0,0,c-h,d,"Z");return{path:g}},r:function(a){var c=this.attrs.polypath;c[3]=a;this.attr("polypath",c);return!1}}},{name:"ringpath",ringpath:function(){return this.path(void 0,e._lastArgIfGroup(arguments))},ca:function(a,c,d,h,b,e){var g=e%k-b%k,t=e-b,p,F,m,z,w,B;this._.ringangle=.5*(b+e);u(t)<l?(p=H(b),t=A(b),d=["M",a+d*p,c+d*t,"L",a+h*p,c+h*t,"Z"]):(u(t)>
l&&+(u(t)%k<l||k-u(t)%k<l)?(d=["M",a-d,c,"A",d,d,0,0,0,a+d,c,"A",d,d,0,0,0,a-d,c],0!==h&&(d=d.concat(["M",a-h,c,"A",h,h,0,0,1,a+h,c,"A",h,h,0,0,1,a-h,c]))):(p=H(b),t=A(b),F=H(e),e=A(e),g%=k,0>g&&(g+=k),g=g<E?0:1,m=a+d*p,w=c+d*t,z=a+d*F,B=c+d*e,F=a+h*F,e=c+h*e,.01>u(m-z)&&.01>u(w-B)&&(m=a+d*H(b+1.745329E-4),w=c+d*A(b+1.745329E-4)),d=["M",m,w,"A",d,d,0,g,1,z,B,"L",F,e],0!==h&&(p=a+h*p,t=c+h*t,.01>u(F-p)&&.01>u(e-t)&&(p=a+h*H(b+1.745329E-4),t=c+h*A(b+1.745329E-4)),d.push("A",h,h,0,g,0,p,t))),d.push("Z"));
return{path:d}}},{name:"cubepath",cubepath:function(){var a={"stroke-linejoin":"round","shape-rendering":"precision",stroke:"none"},c=arguments,d=c.length-1,h=c[d],b,l;h&&h.constructor===e.el.constructor?c[d]=void 0:h=void 0;d=this.path(a,h);b=this.path(a,h);a=this.path(a,h);a._.cubetop=d.follow(a,void 0,"before");a._.cubeside=b.follow(a,void 0,"before");for(l in e.fn.cubepath.ca)a.ca[l]=e.fn.cubepath.ca[l];return a.attr("cubepath",[c[0],c[1],c[2],c[3],c[4],c[5]])},fn:{_getBBox2:function(){var a=
this._.cubeside.getBBox(),c=this._.cubetop.getBBox(),d=this.getBBox();return{x:d.x+c.height,y:d.y-a.width,width:d.width,height:d.height}}},ca:{cubepath:function(a,c,d,h,b,e){var l=this._.cubetop,g=this._.cubeside;a=a||0;c=c||0;d=d||0;h=h||0;b=b||0;e=e||0;this.attr("path",["M",a+d,c,"l",0,h,-d,0,0,-h,"z"]);l.attr("path",["M",a,c,"l",1,1,d-1,0,0,-1,b,-e,-d,0,"z"]);g.attr("path",["M",a+d-1,c+1,"l",0,h-1,1,0,b,-e,0,-h,-b,e]);return!1},"stroke-linejoin":function(){return{"stroke-linejoin":"round"}},"drop-shadow":function(a,
c,d,h){var b=this._.cubetop,e=this._.cubeside;this.dropshadow&&(b.dropshadow(a,-c,d,h),e.dropshadow(a,-c,d,h));return!1},fill:function(a,c){var d=this._.cubetop,h=this._.cubeside,b=this.attr("cubepath")||[0,0,0,0,0,0],l=b[2],g=b[4],b=b[5],k;a=e.color(a);c?(this.attr("fill",a),d.attr("fill",e.tintshade(a,-.78).rgba),h.attr("fill",e.tintshade(a,-.65).rgba)):(k="opacity"in a?"rgba("+[a.r,a.g,a.b,a.opacity]+")":"rgb("+[a.r,a.g,a.b]+")",this.attr("fill",[270,e.tintshade(k,.55).rgba,e.tintshade(k,-.65).rgba].join("-")),
h.attr("fill",[270,e.tintshade(k,-.75).rgba,e.tintshade(k,-.35).rgba].join("-")),d.attr("fill",[45+e.deg(O(b,g+l)),e.tintshade(k,-.78).rgba,e.tintshade(k,.22).rgba].join("-")));return!1}}},{name:"arcpath",arcpath:function(){return this.path(void 0,e._lastArgIfGroup(arguments))},ca:function(a,c,d,h){var b=(h-90)/180*Math.PI;return{path:["M",a,c-d,"A",d,d,0,180<h?1:0,1,a+d*Math.cos(b),c+d*Math.sin(b)]}}},{name:"scroller",scroller:function(a,c,d,h,b,l,g){var k=this.group("scroller",g),t=k.attrs,p=k._.scroller=
{};b=b&&"horizontal"||"vertical";var F,m={},z,w,B;p.track=this.rect(k).mousedown(function(c){var a=t["scroll-position"];c="horizontal"===t["scroll-orientation"]?c.layerX||c.x:c.layerY||c.y;c=(c-p.anchorOffset)/p.trackLength;F=e.animation({"scroll-position":c},2E3*u(a-c),"easeIn");k.animate(F);V("raphael.scroll.start."+k.id,k,a)}).mouseup(p._mouseupTrack=function(){this.stop(F);V("raphael.scroll.end."+this.id,this,t["scroll-position"])},k,!0);p.anchor=this.rect(k).drag(function(c,a){m["scroll-position"]=
z+a[w]/p.trackLength;k.animate(m,0)},function(c){w="horizontal"===t["scroll-orientation"]?0:1;V("raphael.scroll.start."+k.id,k,z=t["scroll-position"]);c.stopPropagation()},function(){V("raphael.scroll.end."+k.id,k,z=t["scroll-position"])});for(B in e.fn.scroller.fn)k[B]=e.fn.scroller.fn[B];for(B in e.fn.scroller.ca)k.ca[B]=e.fn.scroller.ca[B];t["scroll-orientation"]=b;t["stroke-width"]=1;k.ca["scroll-repaint"]=k.ca["scroll-repaint-"+b];!e.is(l,"object")&&(l={});return k.attr({ishot:!0,"scroll-display-buttons":l.showButtons&&
"arrow"||"none","scroll-display-style":l.displayStyleFlat&&"flat"||"3d","scroll-ratio":n(l.scrollRatio)||1,"scroll-position":n(l.scrollPosition)||0,"scroll-repaint":[a,c,d,h]})},fn:{scroll:function(a,c){var d=this._.scroller;c=c||this;d.callback=function(){return a.apply(c,arguments)};return this},remove:function(){var a=this._.scroller,c;this.attr("scroll-display-buttons","none");a.track.unmouseup(a._mouseupTrack);for(c in a)a[c]&&a[c].remove&&a[c].remove(),a[c]=null;delete this._.scroller;e.el.remove.apply(this,
arguments)}},ca:{"stroke-width":function(){return!1},"drop-shadow":function(a,c,d,h,b,e){this._.scroller.track.attr("drop-shadow",[a,c,d,h,b,e]);return!1},"scroll-display-style":function(a){var c=this.attrs,d=c["scroll-display-style"],h=c.fill;a={flat:"flat","3d":"3d",transparent:"transparent"}[a]||d;h&&a!==d&&(c["scroll-display-style"]=a,this.attr("fill",h));return{"scroll-display-style":a}},"scroll-display-buttons":function(a){var c=this,d=c.paper,h=c._.scroller,b=c.attrs,l=b["scroll-display-buttons"],
g=b["scroll-repaint"],k,t;void 0===l&&(l="none");a={none:"none",arrow:"arrow"}[a]||l;a!==l&&(b["scroll-display-buttons"]=a,"none"===a&&h.start?(h.arrowstart.remove(),delete h.arrowstart,h.arrowend.remove(),delete h.arrowend,h.start.unmouseup(h._mouseupStart),h.start.remove(),delete h.start,h.end.unmouseup(h._mouseupEnd),h.end.remove(),delete h.end):(h.arrowstart=d.polypath(c),h.arrowend=d.polypath(c),h.start=d.rect(c).mousedown(function(){var a;0!==(a=b["scroll-position"])&&(c.animate({"scroll-position":a-
.1},100).animate(k=e.animation({"scroll-position":0},4500*a,"easeIn")),V("raphael.scroll.start."+c.id,c,a))}).mouseup(h._mouseupStart=function(){c.stop(k);V("raphael.scroll.end."+c.id,c,b["scroll-position"])},c,!0),h.end=d.rect(c).mousedown(function(){var a;1!==(a=b["scroll-position"])&&(c.animate({"scroll-position":a+.1},100).animate(t=e.animation({"scroll-position":1},4500*(1-a),"easeIn")),V("raphael.scroll.start."+c.id,c,a))}).mouseup(h._mouseupEnd=function(){c.stop(t);V("raphael.scroll.end."+
c.id,c,b["scroll-position"])},c,!0),b.fill&&c.attr("fill",b.fill)),g&&c.attr("scroll-repaint",g));return{"scroll-display-buttons":a}},"scroll-orientation":function(a){var c=this.attrs,d=c["scroll-repaint"],h=c["scroll-orientation"];a={horizontal:"horizontal",vertical:"vertical"}[a]||h;h!==a&&(this.ca["scroll-repaint"]=this.ca["scroll-repaint-"+a],d&&(d[2]+=d[3],d[3]=d[2]-d[3],d[2]-=d[3],this.attr("scroll-repaint",d)),c.fill&&this.attr("fill",c.fill));return{"scroll-orientation":a}},"scroll-ratio":function(a){var c=
this.attrs,d=c["scroll-ratio"],h=c["scroll-repaint"];a=1<a?1:.01>a?.01:n(a);h&&a!==d&&(c["scroll-ratio"]=a,this.attr("scroll-repaint",h));return{"scroll-ratio":a}},"scroll-position":function(a,c){var d=this.attrs,h="horizontal"===d["scroll-orientation"],b=d["scroll-repaint"],e=d["scroll-position"],l=this._.scroller,g=l.anchor;a=1<a?1:0>a?0:n(a);isNaN(a)&&(a=e);b&&(e!==a||c)&&(e=l.start&&l.start.attr(h&&"width"||"height")||0,h&&g.attr("x",b[0]+e+(b[2]-2*e-g.attr("width"))*a+.5)||g.attr("y",b[1]+e+
(b[3]-2*e-g.attr("height"))*a+.5),!c&&1>d["scroll-ratio"]&&(V("raphael.scroll.change."+this.id,this,a),l.callback&&l.callback(a)));return{"scroll-position":a}},r:function(a){var c=this._.scroller;c.track.attr("r",a);c.anchor.attr("r","none"===this.attrs["scroll-display-buttons"]&&a||0);return!1},"scroll-repaint-horizontal":function(a,c,d,h){var b=this.attrs,e=this._.scroller,l=b["scroll-ratio"],g=b["scroll-position"],k=0,t=d*l,b="none"===b["scroll-display-buttons"];d&&--d;a&&(a+=.5);h&&--h;c&&(c+=
.5);e.track.attr({width:d,height:h,y:c,x:a}).crisp();b||(k=U(h,.5*d),t-=2*k*l,e.start.attr({width:k,height:h,x:a,y:c}),e.arrowstart.attr("polypath",[3,a+.5*k,c+.5*h,.25*k,180]),e.end.attr({width:k,height:h,x:a+d-k,y:c}),e.arrowend.attr("polypath",[3,a+d-.5*k,c+.5*k,.25*k,0]));e.trackLength=d-2*k-t;e.trackOffset=a+k+.5;e.anchorOffset=e.trackOffset+.5*(t-1);e.anchor.attr({height:h,width:t-1,y:c,x:e.trackOffset+e.trackLength*g}).crisp()},"scroll-repaint-vertical":function(a,c,d,h){var b=this.attrs,e=
this._.scroller,l=b["scroll-ratio"],g=b["scroll-position"],k=0,t=h*l,b="none"===b["scroll-display-buttons"];d&&--d;a&&(a+=.5);h&&--h;c&&(c+=.5);e.track.attr({width:d,height:h,y:c,x:a}).crisp();b||(k=U(d,.5*h),t-=2*k*l,e.start.attr({width:d,height:k,x:a,y:c}),e.arrowstart.attr("polypath",[3,a+.5*d,c+.5*k,.25*k,90]),e.end.attr({width:d,height:k,x:a,y:c+h-k}),e.arrowend.attr("polypath",[3,a+.5*d,c+h-.5*k,.25*k,-90]));e.trackLength=h-2*k-t;e.trackOffset=c+k+.5;e.anchorOffset=e.trackOffset+.5*(t-1);e.anchor.attr({height:0>
t-1?0:t-1,width:d,y:e.trackOffset+e.trackLength*g,x:a}).crisp()},fill:function(a){var c=this.attrs,d=this._.scroller,h=c["scroll-repaint"],b="flat"===c["scroll-display-style"],l="horizontal"===c["scroll-orientation"],g={stroke:"none"},k;v&&h&&3<(k=16-h[l&&3||2])&&(g.stroke=B,g["stroke-width"]=k);a=e.color(a);a.error&&(a=e.color("#000000"));a="opacity"in a?"rgba("+[a.r,a.g,a.b,a.opacity]+")":"rgb("+[a.r,a.g,a.b]+")";g.fill=b&&a||[90*l,e.tintshade(a,.15).rgba,a].join("-");g.stroke=e.tintshade(a,-.75).rgba;
d.track.attr(g);g.fill=b&&e.tintshade(a,-.6).rgba||[270*l,e.tintshade(a,.3).rgba+":40",e.tintshade(a,-.7).rgba].join("-");g.stroke=e.tintshade(a,-.6).rgba;d.anchor.attr(g);g.stroke="none";"none"!==c["scroll-display-buttons"]&&(g.fill=B,d.start.attr(g),d.end.attr(g),g.fill=e.tintshade(a,-.4).rgba,d.arrowstart.attr(g),d.arrowend.attr(g));return!1}}},{name:"button",button:function(a,c,d,h,b,l){l=this.group("button",l);var g;l._.button={bound:this.rect(l),tracker:this.rect(l).attr({fill:B,stroke:B,cursor:"pointer"}).data("compositeButton",
l)};!e.is(b,"object")&&(b={});for(g in e.fn.button.fn)l[g]=e.fn.button.fn[g];for(g in e.fn.button.ca)l.ca[g]=e.fn.button.ca[g];return l.attr({ishot:!0,"button-padding":[b.horizontalPadding,b.verticalPadding],"button-label":d,"button-symbol":h,"button-disabled":b.disabled||"false","button-symbol-position":b.symbolPosition,"button-symbol-padding":b.symbolPadding}).attr("button-repaint",[a,c,b.width,b.height,b.r])},data:{hoverin:function(){var a=this._.button,c=a.hoverbackIn,d=this._hover||{};d.fill||
d["fill-symbol"]||d.stroke||d["stroke-width"]||d.cursor?(d.fill&&this.bottom.attr("fill",d.fill)&&!d["fill-symbol"]&&a.symbol.attr("fill",d.fill),d["fill-symbol"]&&a.symbol.attr("fill",d["fill-symbol"]),d.stroke&&this.bottom.attr("stroke",d.stroke)&&a.symbol.attr("stroke",d.stroke),d["stroke-width"]&&this.bottom.attr("stroke-width",d["stroke-width"])&&a.symbol.attr("stroke-width",d["stroke-width"]),d.cursor&&a.tracker.attr("cursor",d.cursor),c&&c()):c&&!1===c(arguments)||this.attr("fill","hover");
this.hovered=!0},hoverout:function(){var a=this._.button,c=a.hoverbackOut,d=this._normal||{};d.fill||d["fill-symbol"]||d.stroke||d["stroke-width"]||d.cursor?(d.fill&&this.bottom.attr("fill",d.fill)&&!d["fill-symbol"]&&a.symbol.attr("fill",d.fill),d["fill-symbol"]&&a.symbol.attr("fill",d["fill-symbol"]),d.stroke&&this.bottom.attr("stroke",d.stroke)&&a.symbol.attr("stroke",d.stroke),d["stroke-width"]&&this.bottom.attr("stroke-width",d["stroke-width"])&&a.symbol.attr("stroke-width",d["stroke-width"]),
d.cursor&&a.tracker.attr("cursor",d.cursor),c&&c()):c&&!1===c(arguments)||this.attr("fill",(this.pressed||this.active)&&"active"||"normal");this.hovered=!1},mousedown:function(){var a=this._.button,c=this._pressed||{};c.fill||c["fill-symbol"]||c.stroke||c["stroke-width"]||c.cursor?(c.fill&&this.bottom.attr("fill",c.fill)&&!c["fill-symbol"]&&a.symbol.attr("fill",c.fill),c["fill-symbol"]&&a.symbol.attr("fill",c["fill-symbol"]),c.stroke&&this.bottom.attr("stroke",c.stroke)&&a.symbol.attr("stroke",c.stroke),
c["stroke-width"]&&this.bottom.attr("stroke-width",c["stroke-width"])&&a.symbol.attr("stroke-width",c["stroke-width"]),c.cursor&&a.tracker.attr("cursor",c.cursor)):this.attr("fill","active");this.pressed=!0},mouseup:function(){var a=this._.button,c=a.callback,d=this._normal||{};d.fill||d.stroke||d["stroke-width"]||d.cursor?(d.fill&&this.bottom.attr("fill",d.fill)&&a.symbol.attr("fill",d.fill),d.stroke&&this.bottom.attr("stroke",d.stroke)&&a.symbol.attr("stroke",d.stroke),d["stroke-width"]&&this.bottom.attr("stroke-width",
d["stroke-width"])&&a.symbol.attr("stroke-width",d["stroke-width"]),d.cursor&&a.tracker.attr("cursor",d.cursor)):this.attr("fill",this.hovered&&"hover"||this.active&&"active"||"normal");this.pressed=!1;c&&c(arguments)},mousemove:function(){var a=this._.button.mousemove;a&&a(arguments)}},fn:{tooltip:function(){e.el.tooltip&&e.el.tooltip.apply(this._.button.tracker,arguments);return this},buttonclick:function(a,c){var d=this._.button;c=c||this;d.callback=function(){return a.apply(c,arguments)};return this},
labelcss:function(){var a=this._.button,c=a.label;a.cssArg=arguments;c&&c.css.apply(c,arguments);return this.attr("button-repaint",this.attrs["button-repaint"])},buttonhover:function(a,c,d,h,b,e){var l=this._.button;d=d||this;h=h||this;e=e||this;b&&(l.mousemove=function(){return b.apply(e,arguments)});l.hoverbackIn=function(){return a.apply(d,arguments)};l.hoverbackOut=function(){return c.apply(h,arguments)};return this},remove:function(){var a=this._.button,c;this.attr("button-disabled","true");
for(c in a)a[c]&&a[c].remove&&a[c].remove(),a[c]=null;delete this._.button;e.el.remove.apply(this,arguments)}},ca:{"button-active":function(a){this.attr("fill",(this.active=!!a)?"active":this.hovered&&"hover"||"normal")},"button-disabled":function(a){var c=this._.button,d=c.tracker,h=this.attrs["button-disabled"],b=this.paper.button.data,e=this._disabled||{};a=Z[a];h=Z[h];if(void 0!==a&&a!==h)switch(a){case !0:e.fill||e.stroke||e["stroke-width"]||e.cursor?(e.fill&&this.bottom.attr("fill",e.fill)&&
c.symbol.attr("fill",e.fill),e.stroke&&this.bottom.attr("stroke",e.stroke)&&c.symbol.attr("stroke",e.stroke),e["stroke-width"]&&this.bottom.attr("stroke-width",e["stroke-width"]&&c.symbol.attr("fill",e.fill)),e.cursor&&c.tracker.attr("cursor",e.cursor)):d.attr("fill","rgba(204,204,205,.5)");d.unmousedown(b.mousedown).unmouseup(b.mouseup).unhover(b.hoverin,b.hoverout).unmousemove(b.mousemove);break;case !1:d.attr("fill",B).mousedown(b.mousedown,this).mouseup(b.mouseup,this,!0).hover(b.hoverin,b.hoverout,
this,this).mousemove(b.mousemove,this)}},"button-label":function(a){var c=this._.button,d=this.attrs,h=c.label,b=c.cssArg,e=this.attrs["button-repaint"];a=L(a||"");"none"===a?h&&(c.label=h.remove()):a&&(!h&&(h=c.label=this.paper.text(this).insertBefore(c.tracker)),h.attr({text:a,"text-anchor":"middle","vertical-align":"middle"}),b&&b.length&&h.css.apply(h,b));e&&d["button-label"]!==a&&this.attr("button-repaint",e)},"button-symbol":function(a){var c=this._.button,d=c.symbol,h=this.attrs["button-repaint"];
a=L(a||"");"none"===a?(d&&(c.symbol=d.remove()),delete c.symbol):a&&!d&&(c.symbol=this.paper.symbol(this).insertAfter(c.bound));h&&this.attr("button-repaint",h)},"button-symbol-position":function(a){return{"button-symbol-position":{top:"top",right:"right",bottom:"bottom",left:"left",none:"none"}[L(a).toLowerCase()]||"none"}},"button-symbol-padding":function(a){return{"button-symbol-padding":n(a)}},"button-padding":function(a,c){return{"button-padding":[null==a&&(a=5)||n(a),null==c&&a||n(c)]}},"button-repaint":function(a,
c,d,h,b){var l=this._.button,g=l.bound,k=l.label,t=l.symbol,p=this.attrs,F=p["button-padding"],m=F[0],z=F[1],w,B;void 0===a&&(a=0);void 0===c&&(c=0);if(void 0===d||void 0===h)w=k&&k.getBBox()||{width:0,height:0},void 0===d&&(d=2*m+w.width),void 0===h&&(h=2*z+w.height);g=e.crispBound(a,c,d,h,g.attr("stroke-width"));g.r=e.pick(b,N(.1*U(h,d)));a=g.x;c=g.y;d=g.width;h=g.height;k&&k.attr({x:a+d/2,y:c+h/2});if(t){!e.is(B=p["button-symbol-padding"],"finite")&&(B=.2*h);b=h-z;w=.5*b;switch(p["button-symbol-position"]+
(k&&"+"||"-")){case "right+":a=a+(d+(2*w+z))-w-m;c+=.5*h;k.attr("transform",["t",-(b+B),0]);break;case "left+":a=a+m+w;c+=.5*h;k.attr("transform",["t",b+B,0]);break;case "top+":a+=.5*d;c=c+F[1]+w;k.attr("transform",["t",0,b+B]);break;case "bottom+":a+=.5*d;c=c+(h+(2*w+B))-z-w;k.attr("transform",["t",0,-(b+B)]);break;default:a+=.5*d,c+=.5*h}t.attr("symbol",[p["button-symbol"],a,c,w])}l.bound.attr(g);l.tracker.attr(g)},fill:function(a,c,d,h,b){var l=this._.button,g=l.bound,k=l.symbol,t=l.label,p={normal:l.gradient,
active:l.gradientActive,hover:l.gradientHover}[a];p||(b||(a=e.getRGB(a),a.error&&(a=e.color("#cccccc")),a="opacity"in a?"rgba("+[a.r,a.g,a.b,a.opacity]+")":"rgb("+[a.r,a.g,a.b]+")"),l.gradient=b?a:[90,e.tintshade(a,-.8).rgba+":0",e.tintshade(a,.8).rgba+":100"].join("-"),l.gradientActive=[270,e.tintshade(a,-.8).rgba+":0",e.tintshade(a,.8).rgba+":100"].join("-"),h=e.getRGB(h),h.error&&(h=a)||(h="opacity"in h?"rgba("+[h.r,h.g,h.b,h.opacity]+")":"rgb("+[h.r,h.g,h.b]+")"),l.gradientHover=b?h:[90,e.tintshade(h,
-.9).rgba+":0",e.tintshade(h,.7).rgba+":100"].join("-"),d=d||e.tintshade(a,.2).rgba,c=c||e.tintshade(a,-.2).rgba,l.symbolFill=d,l.labelFill=c,p=(this.pressed||this.active)&&l.gradientActive||this.hovered&&l.gradienthover||l.gradient);g.attr("fill",p);k&&k.attr("fill",l.symbolFill);t&&t.attr("fill",l.labelFill);return!1},stroke:function(a,c){var d=this._.button,h=d.symbol;a=e.color(a);a.error&&(a=e.color("#999999"));d.bound.attr("stroke",a);h&&h.attr("stroke",c||a);return!1},"stroke-width":function(a,
c){var d=this._.button,h=d.symbol;d.bound.attr("stroke-width",a);d.tracker.attr("stroke-width",a);h&&h.attr("stroke-width",c);return!1},config:function(a){a.hover&&(this._hover={fill:a.hover.fill,"fill-symbol":a.hover["fill-symbol"],stroke:a.hover.stroke,"stroke-width":a.hover["stroke-width"],cursor:a.hover.cursor});a.disabled&&(this._disabled={fill:a.disabled.fill,"fill-symbol":a.disabled["fill-symbol"],stroke:a.disabled.stroke,"stroke-width":a.disabled["stroke-width"],cursor:a.disabled.cursor});
a.pressed&&(this._pressed={fill:a.pressed.fill,"fill-symbol":a.pressed["fill-symbol"],stroke:a.pressed.stroke,"stroke-width":a.pressed["stroke-width"],cursor:a.pressed.cursor});a.normal&&(this._normal={fill:a.normal.fill,"fill-symbol":a.normal["fill-symbol"],stroke:a.normal.stroke,"stroke-width":a.normal["stroke-width"],cursor:a.normal.cursor});a.symbol&&(a.symbol={stroke:a.normal.stroke,"stroke-width":a.normal["stroke-width"]})}}},{name:"trianglepath",trianglepath:function(){var a=arguments,c=e._lastArgIfGroup(a);
return this.path(c).attr("trianglepath",[a[0],a[1],a[2],a[3],a[4],a[5],a[6]||0,a[7]||0,a[8]||0])},fn:{sides:function(){var a=this._args;return[h(a[0],a[1],a[2],a[3]),h(a[2],a[3],a[4],a[5]),h(a[4],a[5],a[0],a[1])]},enclosedAngles:function(){var d=this._sides;return[M((a(d[0],2)+a(d[2],2)-a(d[1],2))/(2*d[0]*d[2])),M((a(d[0],2)+a(d[1],2)-a(d[2],2))/(2*d[0]*d[1])),M((a(d[2],2)+a(d[1],2)-a(d[0],2))/(2*d[2]*d[1]))]},semiperimeter:function(){var a=this._sides||this.sides();return(a[0]+a[1]+a[2])/2}},ca:{trianglepath:function(a,
c,h,b,e,l,g,k,t){if(g||k||t){this._args=arguments;this._sides=this.sides();var p=this.enclosedAngles(),F;F=this.semiperimeter();F=r(F*(F-this._sides[0])*(F-this._sides[1])*(F-this._sides[2]))/F;p=[U(g,F)/q(p[0]/2),U(k,F)/q(p[1]/2),U(t,F)/q(p[2]/2)];p=[d(a,c,e,l,p[0]),d(a,c,h,b,p[0]),d(h,b,a,c,p[1]),d(h,b,e,l,p[1]),d(e,l,h,b,p[2]),d(e,l,a,c,p[2])];this.attr({path:["M",p[0].x,p[0].y,"Q",a,c,p[1].x,p[1].y,"L",p[2].x,p[2].y,"Q",h,b,p[3].x,p[3].y,"L",p[4].x,p[4].y,"Q",e,l,p[5].x,p[5].y,"L",p[0].x,p[0].y]})}else this.attr({path:["M",
a,c,"L",h,b,e,l,"Z"]})}}}]);e.ca["text-bound"]=function(a,c,d,h,b,l){var g=this.paper,k=this._.textbound;if("text"===this.type){if(!(c&&"none"!==c||a&&"none"!==a))return this._.textbound=k&&k.unfollow(this).remove(),!1;this.attrs["text-bound"]=arguments;d&&e.is(d,"finite")||(d=0);b&&e.is(b,"finite")||(b=0);!k&&(k=this._.textbound=g.rect(0,0,0,0,this.group).follow(this,e.ca["text-bound"].reposition,"before"));k.attr({stroke:c,"stroke-width":d,fill:a,"shape-rendering":1===d&&"crisp"||"",r:b});l&&k.attr("stroke-dasharray",
l);e.ca["text-bound"].reposition.call(k,this.attr(),this);return!1}};e.ca["text-bound"].reposition=function(a,c){var d={},h,b,l,g,k;a.hasOwnProperty("visibility")&&this.attr("visibility",a.visibility);if(a.hasOwnProperty("text-bound")||a.hasOwnProperty("x")||a.hasOwnProperty("y")||a.hasOwnProperty("text")||a.hasOwnProperty("text-anchor")||a.hasOwnProperty("text-align")||a.hasOwnProperty("font-size")||a.hasOwnProperty("line-height")||a.hasOwnProperty("vertical-align")||a.hasOwnProperty("transform")||
a.hasOwnProperty("rotation"))h=c.attrs["text-bound"],b=L(h&&h[3]||"0").split(z),h=n(b[0])||0,b=e.pick(n(b[1]),h),l=c.getBBox(),g=l.width,k=l.height,isNaN(g)||(d.x=l.x-h,d.y=l.y-b,d.width=g+2*h,d.height=k+2*b),this.attr(d)};e.fn.symbol=function(){var a=arguments,c=a.length-1,d=a[c];d&&d.constructor===e.el.constructor?a[c]=void 0:d=void 0;c=this.path(void 0,d);c.ca.symbol=e.fn.symbol.ca.symbol;return a.length===!!d+0?c:c.attr("symbol",a)};e.fn.getSuggestiveRotation=function(){var a,c,d;a=arguments[0];
1===arguments.length?(c=a.angle,d=a.x,a=a.y):(c=a,d=arguments[1],a=arguments[2]);return"r"+(c||0)+","+d+","+a};e.fn.symbol.cache={"":e._cacher(function(a,c,d,h){return 3<arguments.length?["M",a,c,"h",d,"v",h,"h",-d,"v",-h,"z"]:["M",a-d,c-d,"h",d*=2,"v",d,"h",-d,"v",-d,"z"]})};e.fn.symbol.ca={symbol:function(a){var c=e.is(a,"object")&&1===arguments.length&&!e.is(a,"function")?a:arguments,d;c===a&&(a=c[0]);c=(d=e.is(a,"function")&&a||e.fn.symbol.cache[a]||e.fn.symbol.cache[""])&&d.apply(e,g.call(c,
1));e.is(c,"array")||e.is(c,"string")?this.attr("path",c):c&&this.attr(c)}};e.addSymbol=function(a,c){var d=e.is(c,"function")&&(d={},d[a]=c,d)||a,h=e.fn.symbol.cache,b=[],l;for(l in d)c=d[l],h[l]=e.is(c,"function")&&e._cacher(c,e)||(b.push(l),c);for(;l=b.pop();)h[l]=h[h[l]]};e.svg?(R="$1",F=function(a){a?"string"===typeof a?a=a.replace(S,R):a.toString=w:a="M0,0";this.node.setAttribute("d",a.toString())},e._engine.litepath=function(a,c,d,h){a=p("path");(h||c).canvas.appendChild(a);c=new K(a,c,h);
c.type="litepath";c.id=a.raphaelid=e._oid++;a.raphael=!0;T(c,{fill:"none",stroke:"#000"});return c},e._getPath.litepath=function(a){return e.parsePathString(a.node.getAttribute("d"))}):e.vml&&(R=function(a,c){return P[c]||c},X=function(){this._transform.apply(this,arguments);this._.bcoord&&(this.node.coordsize=this._.bcoord);return this},F=function(a){a?"string"===typeof a?a=a.replace(S,R):a.toString=w:a="M0,0";this.node.path=a;return this},e._engine.litepath=function(a,c,d,h){a=p("shape");var b=
a.style,l=new K(a,c,h);b.cssText="position:absolute;left:0;top:0;width:21600px;height:21600px;";d=n(d);isNaN(d)?a.coordsize="21600 21600":(l._.bzoom=d,b.width="1px",b.height="1px",a.coordsize=l._.bcoord=d+" "+d);a.coordorigin=c.coordorigin;l.type="litepath";l.id=a.raphaelid=e._oid++;a.raphael=!0;l._transform=l.transform;l.transform=X;e._setFillAndStroke(l,{fill:"none",stroke:"#000"});(h||c).canvas.appendChild(a);c=p("skew");c.on=!0;a.appendChild(c);l.skew=c;return l},e._getPath.litepath=function(a){return e.parsePathString(a.node.path||
"")});e.fn.litepath=function(a,c,d){c&&c.constructor===K&&(d=c,c=void 0);a&&a.constructor===K&&(d=a,a="");c=e._engine.litepath(a,this,c,d);c.ca.litepath=F;a&&c.attr("litepath",e.is(a,"array")?[a]:a);return this.__set__&&this.__set__.push(c),this._elementsById[c.id]=c}}]);Q.register("module",["private","modules.renderer.js-htmlrenderer",function(){var b=this.hcLib,v=b.Raphael,J=b.dem,C=this.window,H=C.document,A=/msie/i.test(C.navigator.userAgent)&&!C.opera,u="VML"===v.type,a=b.hasTouch,O={cursor:"cursor"},
q={x:"left",y:"top",strokeWidth:"borderThickness","stroke-width":"borderThickness",width:"width",height:"height"},M={fill:"backgroundColor",stroke:"borderColor",color:"color"},U={left:0,top:0,padding:0,border:"none",margin:0,outline:"none","-webkit-apperance":"none",position:"absolute",zIndex:20},N,E=function(a,b,n,r){a=H.createElement(a);for(var g in b)q[g]?a.style[g]=b[g]:a.setAttribute(g,b[g]);for(g in n)a.style[g]=n[g];r&&r.appendChild&&r.appendChild(a);return a},r;r=function(a,b,n){b&&b instanceof
r&&(b=b.element);(this.element=E(a,n,U,b)).ishot="true";this.nodeName=a.toLowerCase();this.added=!!b};r.prototype={attr:function(a){var b=this.element,n={},r,g,l,B,e,V,p;if("object"!==typeof a){if(!(n=this[a])){if("string"===typeof a)b&&b.getAttribute&&(B=b.getAttribute(a));else if(void 0!==a&&null!==a&&"object"===typeof a)for(l in a)b.setAttribute(l,a[l]);n=B}return n}for(r in a){l=a[r];if(O[r]){switch(r){case "cursor":"pointer"===l&&u&&(l="hand")}b.style[O[r]]=l;g=!0}else if(q[r])b.style[q[r]]=
l+"px",g=!0;else if(M[r])b.style[M[r]]=l&&l.replace(/^#?([a-f0-9]+)/ig,"#$1")||"none",g=!0;else if(/^visibility$/i.test(r))g="hidden"===l,b.style.display=g?"none":"",this.hidden=g,g=!0;else if(/^opacity$/i.test(r))b.style.opacity=l,A&&(g=100*Number(l),b.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+g+")"),g=!0;else if(/^innerhtml$/i.test(r)){if(u&&"select"==b.nodeName.toLowerCase()){for(g=l.match(/<option\s?[\s\S]*?(\/>|><\/option>|>[\s\S]*?<\/option>)/ig);b.firstChild;)b.removeChild(b.firstChild);
e=0;for(V=g.length;e<V;e+=1)B=g[e],p=H.createElement("option"),/<option\s([\s\S]*[\'\"])\s*?(\/>|>[\s\S]*<\/option>)/ig.test(B)&&(p.value=B.replace(/<option\s([\s\S]*[\'\"])\s*?(\/>|>[\s\S]*<\/option>)/ig,"$1").replace(/[\s\S]*value\s*\=\s*[\'\"]([\s\S]*)[\'\"]/,"$1")),p.text=B.replace(/<option\s*[\s\S]*[\'\"]?\s*?[\/>|\>]([\s\S]*)<\/option>/ig,"$1 "),b.options.add(p)}else"input"!==b.nodeName.toLowerCase()&&void 0!==l&&(b.innerHTML=l||"");g=!0}else/^text$/i.test(r)?("input"!==b.nodeName.toLowerCase()&&
(b.innerHTML="",void 0!==l&&b.appendChild(H.createTextNode(l))),g=!0):/^type$/i.test(r)&&A&&this.added&&(g=!0);g&&(n[r]=l,delete a[r],g=!1)}for(r in a)b.setAttribute(r,a[r]);for(r in n)this[r]=a[r]=n[r],delete n[r];return this},val:function(a){var b=this.element,n=void 0===a;return"input"===this.nodeName&&"checkbox"===b.getAttribute("type")?n?this.checked()?1:0:this.checked(a):n?b.value:(b.value=a,this)},checked:function(a){var b=this.element;return void 0===a?b.checked:(a?b.setAttribute("checked",
"checked"):b.removeAttribute("checked"),this)},css:function(a,b){var n=this.element.style,r;if("object"===typeof a)for(r in a)n[r]=a[r];else r&&void 0!==b&&(n[r]=b);return this},translate:function(a,b){var n=this.element;void 0!==a&&(n.style.left=a+"px");void 0!==b&&(n.style.top=b+"px");return this},add:function(a,b){var n=this.element,r=a.element;b?r.insertBefore(n,r.firstChild):r.appendChild(n);this.added=!0;return this},hide:function(){this.element.style.display="none";return this},show:function(){this.element.style.display=
"";return this},focus:function(){"function"===typeof this.element.focus?this.element.focus():b.dem.fire(this.element,"focus")},destroy:function(){var a=this.element||{};a.onclick=a.onmouseout=a.onmouseover=a.onmousemove=a.onblur=a.onfocus=null;N||(N=E("div"));a&&N.appendChild(a);N.innerHTML="";delete this.element;return null},on:u?function(a,b){this.element["on"+a]=function(){var a=C.event;a.target=a.srcElement;b(a)};return this}:function(b,m){var n=m;a&&"click"===b&&(b="touchstart",n=function(a){a.preventDefault();
m()});this.element["on"+b]=n;return this},bind:function(a,b,n){J.listen(this.element,a,b,n);return this},unbind:function(a,b){J.unlisten(this.element,a,b);return this},trigger:function(a,b){J.fire(this.element,a,b);return this},fadeIn:function(a,m){var n="fast"===a?400:1E3;this.show();this.attr({opacity:0});b.danimate.animate(this.element,{opacity:1},n,"linear",m)},animate:function(a,m,n,r){b.danimate.animate(this.element,a,m,n,r)}};r.prototype.constructor=r;v.fn.html=function(a,b,n,q){var g={},l;
b&&"type"in b&&(g.type=b.type,delete b.type);a=(new r(a,q,g)).css(n).attr(b);for(l in g)b[l]=g[l];return a}}]);Q.register("module",["private","modules.renderer.js-dom",function(){var b=this.hcLib,v=this.window,J=v.document,C=b.extend2,H="ontouchstart"in v;(function(b){var u=function(){var a={},b;a.pointerdrag={start:["mousedown"],end:["mouseup"],onStart:["mousemove"],postHandlers:{},preHandlers:{}};a.pointerhover={start:["mouseover"],end:["mouseout"]};a.click={start:["click"]};a.escape={start:["keydown"],
preHandlers:{start:function(a){a=a||v.event;return a.keyCode&&27===a.keyCode?!0:!1}}};H&&(b=a.pointerdrag,b.start.push("touchstart"),b.end.push("touchend"),b.onStart.push("touchmove"),b.postHandlers.onStart=function(a){a.preventDefault?a.preventDefault():a.returnValue=!1});return a}(),a;a=C({},u);b.dem=new function(){var b={},q={},u=J.addEventListener?function(a,b,n){a.addEventListener(b,n,!1)}:function(a,b,n){a.attachEvent("on"+b,n)},A=J.removeEventListener?function(a,b,n){a.removeEventListener(b,
n,!1)}:function(a,b,n){a.detachEvent("on"+b,n)},N=function(b,m,n){var r=[],g,l,B;B=a[m];n.start=function(a){a=a||v.event;for(var l=B.onStart,g=B.end,m=[],K=[],t=l&&l.length||0;t--;)m.push(E(b,l[t],n,"onStart"));for(t=g&&g.length||0;t--;)K.push(E(b,g[t],n,"end"));n.startUn=n.startUn?n.startUn.concat(m):m;n.endUn=n.endUn?n.endUn.concat(K):K;n.state="start";n.closure(a)};n.onStart=function(a){a=a||v.event;n.state="on";if(n.gDef&&n.gDef.preHandlers&&"function"===typeof n.gDef.preHandlers.onStart)n.gDef.preHandlers.onStart(a);
n.closure(a);if(n.gDef&&n.gDef.postHandlers&&"function"===typeof n.gDef.postHandlers.onStart)n.gDef.postHandlers.onStart(a)};n.end=function(a){a=a||v.event;for(var b=n.startUn,l=n.endUn,g=b&&b.length||0;g--;)b[g]();delete n.startUn;n.startUn=[];for(g=l&&l.length||0;g--;)l[g]();delete n.endUn;n.endUn=[];n.state="end";n.closure(a)};if(B)for(m=B.start,l=m.length;l--;)(g=m[l])&&r.push(E(b,g,n,"start"));return r},E=function(a,b,n,r){r=r||"closure";u(a,b,n[r]);return function(){A(a,b,n[r])}},r=function(a){return function(b){b=
b||v.event;a.handler.call(a.context||a.elem,{data:a.data,type:a.type,state:a.state,isGesture:a.isGesture,target:b.target||b.srcElement,originalEvent:b})}};return{listen:function(k,m,n,u,g){var l=this;m="string"===typeof m?m.split(" "):m;var B=m.length,e=[],V=function(a,b,g){e.push(function(){l.unlisten(a,b,g)})},p,T,K,t,Z;if(k.ownerDocument&&k.ownerDocument===J)for(;B--;)T=m[B],t=!!a[T],Z="function"===typeof n?n:n[B],K={handler:Z,elem:k,type:T,isGesture:t,gDef:t?a[T]:null,data:u,context:g,start:[],
end:[],links:{prev:null,next:null}},K.closure=r(K),t?((p=q[T])||(p=q[T]=[]),p.push(K),N(k,T,K)):((p=b[T])||(p=b[T]=[]),p.push(K),E(k,T,K)),V(k,T,Z);else for(;B--;)T=m[B],Z="function"===typeof n?n:n[B],K={handler:Z,elem:k,type:T,isGesture:t,data:u,context:g,start:[],end:[],links:{prev:null,next:null}},K.closure=r(K),(p=b[T])||(p=b[T]=[]),p.push(K),E(k,T,K),V(k,T,Z);return{unlisten:function(){for(var a=e.length;a--;)e[a]();e.length=0;e=null}}},unlisten:function(k,m,n){var r,g=!1,l,B;if(a[m])for(l=(r=
q[m])&&r.length||0;l--;){if(B=r[l],B.handler===n&&B.elem===k){var g=k,e=B,u=void 0,p=void 0,T=void 0,u=void 0;if(u=a[m])for(u=u.start,T=u.length;T--;)(p=u[T])&&A(g,p,e.start);r.splice(l,1);g=!0;B.closure=null;B.start=null;B.onStart=null;B.end=null}}else for(l=(r=b[m])&&r.length||0;l--;)B=r[l],B.handler===n&&B.elem===k&&(A(k,m,B.closure),r.splice(l,1),g=!0,B.closure=null);return g},fire:function(a,m,n,r){var g;if(a.ownerDocument&&a.ownerDocument===J)J.createEvent?(g=J.createEvent("HTMLEvents"),g.initEvent(m,
!0,!0),n&&(n.originalEvent?n.originalEvent=g:C(g,n)),"function"===typeof a[m]&&a[m].call(a),a.dispatchEvent(g)):(g=J.createEventObject(),g.eventType=m,n&&(n.originalEvent?n.originalEvent=g:C(g,n)),"function"===typeof a[m]&&a[m].call(a),a.fireEvent("on"+m,g)),r&&!g.returnValue&&r(g);else for(r=(m=b[m])&&m.length||0;r--;)g=m[r],g.elem===a&&g.closure(n)}}}})(b||v);(function(b){function u(a,b){var q="";J.defaultView&&J.defaultView.getComputedStyle?q=J.defaultView.getComputedStyle(a,"").getPropertyValue(b):
a.currentStyle&&(b=b.replace(/\-(\w)/g,function(a,b){return b.toUpperCase()}),q=a.currentStyle[b]);q=parseInt(q,10);return isNaN(q)?0:q}function a(a,b,u,r,k,m,n,L){var g=b/40,l=q[m||"linear"](r-u,g),B=0,e,V,p=v.requestAnimationFrame||v.webkitRequestAnimationFrame||v.mozRequestAnimationFrame||v.oRequestAnimationFrame||v.msRequestAnimationFrame||function(a){setTimeout(a,40)},T=function(m){var t;t=!1;m?(e||(e=m),V=m-e,m=Math.abs(u-r),t=(t=0>u-r?!1:!0)?Math.max(u-m/b*V,r)+L:Math.min(u+m/b*V,r)+L,a.style[k]=
t,M&&"opacity"===k&&(t=100*Number(t),a.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+t+")"),V<b?p(T):n&&n()):B<g?(t=l[B],a.style[k]=u+t+L,M&&"opacity"===k&&(t=100*Number(t),a.style.filter="progid:DXImageTransform.Microsoft.Alpha(Opacity="+t+")"),B+=1,setTimeout(T,40)):n&&n()};L=L||"";p(T)}var H={width:{suffix:"px"},height:{suffix:"px"},opacity:!0,top:{suffix:"px"},left:{suffix:"px"}},q={linear:function(a,b){for(var q=[],r=a/b,k=0;k<b;k+=1)q[k]=r*(k+1);return q}},M=/msie/i.test(v.navigator.userAgent)&&
!v.opera;b.danimate=C({animate:function(b,q,v,r,k){r={};var m={},n=function(){g+=1;g===L&&"function"===typeof k&&k()},L=0,g=0,l,B;if(40>v){for(B in q)b.style[B]=q[B];k&&k()}else for(B in q)l=null,"x"===B?(l=B,B="left"):"y"===B&&(l=B,B="top"),H[B]&&(L+=1,r[B]=q[l||B],m[B]=u(b,B),l="object"===typeof H[B]&&H[B].suffix,a(b,v,m[B],r[B],B,"linear",n,l))}},{})})(b||v)}]);Q.register("module",["private","modules.renderer.js-raphaeltooltip",function(){var b=this,v=b.window,J=v.document,C=J.body||J.getElementsByTagName("body")[0],
H=b.hcLib,A=H.Raphael,u=A.eve,a=H.createElement,O=H.addEvent,q=H.removeEvent,M=H.getPosition,U=H.hasTouch,N=H.getTouchEvent,E=Math,r=E.ceil,k=E.floor,m={},n=v.screen.availHeight,L=v.screen.availWidth,g={E:1,moz:1,webkit:1,o:1,ms:1},l={borderRadius:"borderRadius",boxShadow:"boxShadow"},B=/\-([a-z])/ig,e=function(a,b){return b.toUpperCase()},V=function(a){var b=p.forbiddenStyle,k,m,z;for(k in a)m=B.test(k)?k.replace(B,e):k,void 0!==a[k]&&!b[m]&&(this[m]=a[k]),A.vml&&/color/ig.test(m)&&(this[m]=A.getRGB(this[m]).toString());
for(k in l)if(this[k])for(z in g)this[z+k]=this[k]},p=H.toolTip={elementId:"fusioncharts-tooltip-element",element:null,lastTarget:null,currentTarget:null,currentPaper:null,pointeroffset:12,prevented:!1,defaultStyle:H.extend2(V.prototype,{backgroundColor:"#ffffee",borderColor:"#000000",borderWidth:"1px",color:"#000000",fontSize:"10px",lineHeight:"12px",padding:"3px",borderStyle:"solid"}),defaultContainerStyle:{position:"absolute",textAlign:"left",margin:"0",zIndex:"99999",pointer:"default",display:"block"},
forbiddenStyle:{}},T=function(e,l){var g=e.element,k=e.textElement,z=e.style,m=e.defaultContainerStyle,w=e.forbiddenStyle,F,g=e.element=a("span");(J.body||J.getElementsByTagName("body")[0]).appendChild(g);g.setAttribute("id",p.elementId);z=e.containerStyle=g.style;k=e.textElement=a("span");g.appendChild(k);e.style=A.vml?k.runtimeStyle:k.style;e.style.overflow="hidden";e.style.display="block";e.hidden=!1;p.hide.call(e);for(F in m)!w[F]&&(z[F]=m[F]);e.scatted=!0;l&&(u.on("raphael.drag.start.*",function(){p.scatted&&
(p.waitingScat=!0)}),u.on("raphael.drag.move.*",function(){p.waitingScat&&(p.block(),p.waitingScat=!1)}),u.on("raphael.drag.end.*",function(){p.waitingScat=!1;p.scatted&&p.unblock(!0)}),u.on("raphael.remove",function(){if(p.currentPaper===this||p.currentTarget&&p.currentTarget.paper===this)p.hide(),p.currentTarget=p.currentPaper=null}),b.addEventListener("LinkedChartInvoked",function(a){p.currentPaper===a.sender.apiInstance.components.paper&&p.hide()}),b.addEventListener("realTimeUpdateComplete",
function(a){p.currentPaper===a.sender.apiInstance.components.paper&&p.hide()}));return e},K=function(a){!0===p._oobready?p._oobready=!1:(q(C,"touchstart",K),!p.hidden&&p.currentTarget&&(a=a.srcElement||a.target||m,a.raphael&&p.currentTarget.paper.getById(a.raphaelid)===p.currentTarget||p.hide()))};p.fixedChartID={};A.svg&&(p.defaultContainerStyle.pointerEvents="none",p.defaultStyle.borderRadius="0",p.defaultStyle.boxShadow="none");A.vml&&(p.forbiddenStyle.borderRadius=!0,p.forbiddenStyle.boxShadow=
!0,p.defaultStyle.filter="");p.setup=function(){p.element||T(p,!0)};p.restyle=function(a){var b=this.style,e;for(e in a)b[e]=a[e]};p.onelement=function(a){if(!a.__tipProcessed){var b=this.paper,e="group"===this.type?b&&b._elementFromEvent(a):this,l=b.__tipStyle;e&&l&&e.__tipNeeded&&((a.originalEvent||a).FusionChartsPreventEvent&&p.preventTooltip(),p.hiding&&(p.hiding=clearTimeout(p.hiding)),p.setStyle(b),p.lastTarget=p.currentTarget,p.currentTarget=e,(p.scatted=e.__tipScatted)&&p.unblock(!0),p.onredraw.call(this,
a),a.__tipProcessed=!0,U&&(p._oobready=!0,O(C||(C=J.body||J.getElementsByTagName("body")[0]),"touchstart",K)))}};p.setStyle=function(a){p.currentPaper!==a&&(a.__tipCp=a.canvas&&M(a.canvas.parentNode,!0)||{},p.restyle.call(this,a.__tipStyle),p.currentPaper=a)};p.onredraw=function(a){a.__tipProcessed||(a.__tipProcessed=!0,(this.paper&&this.paper._elementFromEvent(a))===p.currentTarget&&(p.setPosition(a),p.redraw()))};p.setPosition=function(a,e,l){a=N(a);this.x=e||k((b._fullScreenMode?a.clientX:a.pageX)||
a.clientX+J.body.scrollLeft+J.documentElement.scrollLeft||0);this.y=l||k((b._fullScreenMode?a.clientY:a.pageY)||a.clientY+J.body.scrollTop+J.documentElement.scrollTop||0)};p.onhide=function(a){a.__tipProcessed||(a.__tipProcessed=!0,(this.paper&&this.paper._elementFromEvent(a))===p.currentTarget&&(p.hiding=setTimeout(p.hide,200)))};p.redraw=function(){var a,b;!p.prevented&&!p.blocked&&p.currentTarget&&p.currentTarget.__tipNeeded&&(a=p.currentTarget,b=a.paper,a=a.__tipText,p.draw.call(this,a,b))};p.customDraw=
function(a,b,e,l,g,k){var w,F=p.callee&&p.callee===k;(w=p[k])||p.currentPaper===b||(!p.drawTrendRegion||p.hidden||F?p.callee=k:w=p[k]=T({elementId:"fusioncharts-tooltip-element-"+k,pointeroffset:12,defaultStyle:p.defaultStyle,defaultContainerStyle:p.defaultContainerStyle,forbiddenStyle:{}}));!w&&(w=p);p.isFixed=p.fixedChartID[k];p.setStyle.call(w,b,p.hidden&&k);p.setPosition.call(w,e,l,g);p.draw.call(w,a,b,F)};p.draw=function(a,b,e){var l=void 0!==e?this:p,g=l.textElement,k=l.containerStyle,w=l.style,
F=l.pointeroffset,m=b.__tipCp,h=l.x,d=l.y,f,c=b.width,D=b.height;b=b.__tipConstrain;if(100>c||100>D)b=!1;l.hidden&&(l.containerStyle.top="-999em",p.show.call(l));e&&a===l.text||(l.text=a,k.width=k.height="",g.innerHTML=a,w.whiteSpace="nowrap",e=r(w.pixelWidth||g.offsetWidth||0),a=r(w.pixelHeight||g.offsetHeight||0),(l.textWidthOverflow=h+e>m.left+c)?(e=c-2*F>e?k.width:c-2*F||0,k.width=e&&e+"px"||"",w.whiteSpace="normal"):k.width="",(l.textHeightOverflow=a>D)?(k.height=(D||0)-2*F+"px",w.whiteSpace=
"normal"):k.height="");e=r(w.pixelWidth||g.offsetWidth||0);a=r(w.pixelHeight||g.offsetHeight||0);b?(l.textWidthOverflow?h=h-e<m.left?m.left:h-e:!p.isFixed&&(f=h+F+e-(m.left+c-F))&&0<f?h-=f:h+F+e>m.left+c-F&&(h=h-e-F),l.textHeightOverflow?d=m.top:!p.isFixed&&(f=d+F+a-(m.top+D-F))&&0<f?d-=f:d+F+a>m.top+D-F&&(d=d-a-1.5*F)):(L<h+F+e&&(h=h-e-F),n<d+F+a&&(d=d-a-1.5*F));k.left=(h+F||0)+"px";k.top=(d+F||0)+"px";l.hidden&&p.show.call(l)};p.inform=function(a,b){p.fixedChartID[a]=b};p.hide=function(a){a=p[a]||
p;a.hiding&&(a.hiding=clearTimeout(a.hiding));a.containerStyle.display="none";a.hidden=!0;a.prevented=!1};p.show=function(){this.blocked||(this.hiding&&(this.hiding=clearTimeout(this.hiding)),this.containerStyle.display="inline",this.hidden=!1)};p.preventTooltip=function(){p.prevented=!0};p.block=function(){this.blocked=!0;this.containerStyle.display="none"};p.unblock=function(a){this.blocked=!1;a&&(this.containerStyle.display=this.hidden&&"none"||"inline")};A.fn.tooltip=function(a,b,e){b&&(b=.4*
(void 0===b.opacity?1:b.opacity),A.svg?a.boxShadow="1px 1px 3px rgba(64,64,64,"+b+")":a.filter='progid:DXImageTransform.Microsoft.Shadow(Strength=2, Direction=135, Color="#404040", shadowOpacity="'+b/2+'")');this.__tipStyle=new V(a);this.__tipCp=this.canvas&&M(this.canvas.parentNode,!0)||{};this.__tipConstrain=!!e;p.style&&p.restyle(this.__tipStyle);p.containerStyle&&p.hide();return this};A.el.trackTooltip=function(a){var b=!!this.__tiptracking;if(void 0===a||(a=!!a)===b)return this;a?U?this.touchstart(p.onelement):
(this.mouseover(p.onelement),this.mousemove(p.onredraw),this.mouseout(p.onhide)):U?this.untouchstart(p.onelement):(this.unmouseover(p.onelement),this.unmousemove(p.onredraw),this.unmouseout(p.onhide));this.__tiptracking=a;return this};A.el.tooltip=function(a,b,e,l,g){p.setup();A.el.tooltip=function(a,b,e,l,h){b=!1===a||void 0===a||""===a;this.__tipScatted=void 0===l?this.__tipScatted:!l;void 0===this.__tipScatted&&(this.__tipScatted=!0);null!==h&&(this.__tip_blocked=h);b^!this.__tipText&&(this.__tipNeeded=
!b);this.__tipText=a;if(p.currentTarget===this&&a!==p.text&&!p.hidden)p[b?"hide":"redraw"]();return this};return A.el.tooltip.call(this,a,b,e,l,g)};b.core._setTooltipZIndex=function(a){a=parseInt(a,10);p&&!isNaN(a)&&(p.defaultContainerStyle.zIndex=a,p.containerStyle&&(p.containerStyle.zIndex=a))};H.addEvent(v,"webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange",function(a){var e=a.target,l,g,k,m=J.webkitIsFullScreen||J.mozFullScreen||J.msFullscreenElement||void 0!==J.fullscreenElement,
w;if(p.element){if("mozfullscreenchange"===a.type)e=a.originalEvent.explicitOriginalTarget.mozFullScreenElement;else if("MSFullscreenChange"===a.type)e=a.originalEvent.srcElement.activeElement;else if("fullscreenchange"===a.type)e=a.originalEvent.srcElement.firstElementChild;else if(e===v||e===J)return;if(!e||e instanceof v.SVGElement)e=p._lastTargetElem;a=e.getElementsByClassName("fusioncharts-container");l=a.length;b._fullScreenMode=m;for(w=0;w<l;w++)g=a[w].FusionCharts.apiInstance,k=g.components.paper,
k.__tipCp=k.canvas&&H.getPosition(k.canvas.parentNode,!0,g)||{};m?(e.appendChild(p.element),p._lastTargetElem=e):J.body.appendChild(p.element)}})}]);Q.register("module",["private","modules.renderer.js-smartlabel",function(){var b=this.hcLib,v=b.isIE,J=b.hasSVG,C=Math,H=C.max,A=C.round,C=this.window,u=/ HtmlUnit/.test(C.navigator.userAgent),a=C.document,O=/ AppleWebKit\//.test(C.navigator.userAgent),q=!!a.createElement("canvas").getContext,M=(C=!(!q||!a.createElement("canvas").getContext("2d")))&&
C.measureText,U=/<br\/>/ig,N=/&lt;|&gt;/g,E=[],r={" ":"&nbsp;"},C=function(){function k(a,b,h){if(!a||!a.length)return 0;var d=h.getWidthFunction(),f=0,c=0,c=d(a),e=c/a.length;h=b;f=Math.ceil(b/e);if(c<b)return a.length-1;f>a.length&&(h=b-c,f=a.length);for(;0<h;)if(h=b-d(a.substr(0,f)),c=Math.floor(h/e))f+=c;else return f;for(;0>h;)if(h=b-d(a.substr(0,f)),c=Math.floor(h/e))f+=c;else break;return f}function m(b,e){e=5<e?e:5;this.maxContainers=20>e?e:20;this.last=this.first=null;this.containers={};
this.length=0;this.rootNode=b;if(Z){var h=a.createElementNS("http://www.w3.org/2000/svg","svg");h.setAttributeNS("http://www.w3.org/2000/svg","xlink","http://www.w3.org/1999/xlink");h.setAttributeNS("http://www.w3.org/2000/svg","height","0");h.setAttributeNS("http://www.w3.org/2000/svg","width","0");this.svgRoot=h;this.rootNode.appendChild(h)}}function n(b,e,h){if("undefined"!==typeof b&&"object"!==typeof b){this.id=b;var d;"string"===typeof e&&(e=a.getElementById(e));a:{if(e&&(e.offsetWidth||e.offsetHeight)){if(e.appendChild){e.appendChild(e=
a.createElement("div"));e.className="fusioncharts-smartlabel-container";e.setAttribute("aria-hidden","true");e.setAttribute("role","presentation");b=e;break a}}else if((b=a.getElementsByTagName("body")[0])&&b.appendChild){e=a.createElement("div");e.className="fusioncharts-smartlabel-container";e.setAttribute("aria-hidden","true");e.setAttribute("role","presentation");b.appendChild(e);b=e;break a}b=void 0}b=this.parentContainer=b;b.innerHTML="WgI";if(u||!v&&!b.offsetHeight&&!b.offsetWidth)Z=!0;b.innerHTML=
"";for(d in l)b.style[d]=l[d];this.containerManager=new m(b,10);this.showNoEllipses=!h;this.init=!0;this.style={};this.setStyle()}}var L=b.supportedStyle,g={fontWeight:1,"font-weight":1,fontStyle:1,"font-style":1,fontSize:1,"font-size":1,fontFamily:1,"font-family":1},l={position:"absolute",top:"-9999em",whiteSpace:"nowrap",padding:"0px",width:"1px",height:"1px",overflow:"hidden"},B=O?0:4.5,e=0,V=/\b_SmartLabel\b/,p=/\b_SmartLabelBR\b/,T=/(<[^<\>]+?\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,K=RegExp("\\<span[^\\>]+?_SmartLabel[^\\>]{0,}\\>(.*?)\\<\\/span\\>",
"ig"),t=/<[^>][^<]*[^>]+>/i,Z=!1,P=0,S=0,z,R,w;a.getElementsByClassName?(z="getElementsByClassName",R="_SmartLabel",w=!0):(z="getElementsByTagName",R="span",w=!1);m.prototype={get:function(a){var b=this.containers,h=this.length,d=this.maxContainers,f,c="",e="",e=this.getCanvasFont(a);for(f in L)void 0!==a[f]&&(c+=L[f]+":"+a[f]+";");if(!c)return!1;if(b[c])c=b[c],this.first!==c&&(c.prev&&(c.prev.next=c.next),c.next&&(c.next.prev=c.prev),c.next=this.first,c.next.prev=c,this.last===c&&(this.last=c.prev),
c.prev=null,this.first=c);else{if(h>=d)for(a=h-d+1;a--;)this.removeContainer(this.last);c=this.addContainer(c,e)}return c},getCanvasFont:function(a){var b,h=[];if(!q||!M)return!1;for(b in g)void 0!==a[b]&&h.push(a[b]);return h.join(" ")},setMax:function(a){var b=this.length;a=5<a?a:5;a=20>a?a:20;if(a<b){for(b-=a;b--;)this.removeContainer(this.last);this.length=a}this.maxContainers=a},addContainer:function(b,e){var h,d;this.containers[b]=d={next:null,prev:null,node:null,ellipsesWidth:0,lineHeight:0,
dotWidth:0,avgCharWidth:4,keyStr:b,canvasStr:e,charCache:{}};d.next=this.first;d.next&&(d.next.prev=d);this.first=d;this.last||(this.last=d);this.length+=1;h=d.node=a.createElement("div");this.rootNode.appendChild(h);v&&!J?h.style.setAttribute("cssText",b):h.setAttribute("style",b);h.setAttribute("aria-hidden","true");h.setAttribute("role","presentation");h.style.display="inline-block";h.innerHTML="WgI";d.lineHeight=h.offsetHeight;d.avgCharWidth=h.offsetWidth/3;Z?(h=d.svgText=a.createElementNS("http://www.w3.org/2000/svg",
"text"),h.setAttribute("style",b),this.svgRoot.appendChild(h),h.textContent="WgI",d.lineHeight=h.getBBox().height,d.avgCharWidth=(h.getBBox().width-B)/3,h.textContent="...",d.ellipsesWidth=h.getBBox().width-B,h.textContent=".",d.dotWidth=h.getBBox().width-B):e?(h=d.canvas=a.createElement("canvas"),h.style.height=h.style.width="0px",this.rootNode.appendChild(h),d.context=h=h.getContext("2d"),h.font=e,d.ellipsesWidth=h.measureText("...").width,d.dotWidth=h.measureText(".").width):(h.innerHTML="...",
d.ellipsesWidth=h.offsetWidth,h.innerHTML=".",d.dotWidth=h.offsetWidth,h.innerHTML="");return d},removeContainer:function(a){var b=a.keyStr;b&&this.length&&a&&(--this.length,a.prev&&(a.prev.next=a.next),a.next&&(a.next.prev=a.prev),this.first===a&&(this.first=a.next),this.last===a&&(this.last=a.prev),a.node.parentNode.removeChild(a.node),a.canvas&&a.canvas.parentNode.removeChild(a.canvas),delete this.containers[b])},dispose:function(){var a,b=this.containers;this.maxContainers=null;for(a in b)this.removeContainer(b[a]);
this.rootNode.parentNode.removeChild(this.rootNode);this.last=this.first=this.rootNode=null}};m.prototype.constructor=m;n.prototype={dispose:function(){this.init&&(this.containerManager&&this.containerManager.dispose&&this.containerManager.dispose(),delete this.container,delete this.context,delete this.cache,delete this.containerManager,delete this.containerObj,delete this.id,delete this.style,delete this.parentContainer,delete this.showNoEllipses)},useEllipsesOnOverflow:function(a){this.init&&(this.showNoEllipses=
!a)},getWidthFunction:function(){var a=this.context,b=this.container,h=this.containerObj.svgText;return h?function(a){var b;h.textContent=a;a=h.getBBox();b=a.width-B;1>b&&(b=a.width);return b}:a?function(d){d=d&&d.split?d.split(U):E;for(var h=0,c=d.length,b=0,h=0;h<c;h+=1)b=H(a.measureText(d[h]||"").width,b);return b}:function(a){b.innerHTML=a;return b.offsetWidth}},getSmartText:function(b,l,h,d){if(!this.init)return!1;if(void 0===b||null===b)b="";var f={text:b,maxWidth:l,maxHeight:h,width:null,height:null,
oriTextWidth:null,oriTextHeight:null,oriText:b,isTruncated:!1},c=!1,g,G,m=0,B,n,r,q,u,L=-1,v=q=-1;G=this.container;var E=this.context,C=0;u=0;var A,J,M;M=[];var da=0,oa=this.showNoEllipses?"":"...";r=this.lineHeight;var Y,C=[],L=g=-1;Y=function(c){c=c.replace(/^\s\s*/,"");for(var a=/\s/,d=c.length;a.test(c.charAt(--d)););return c.slice(0,d+1)};q=-1;J=this.getWidthFunction();h===r&&(h*=1.2);if(G){if(!Z){(c=t.test(b))?(G.innerHTML=b,f.oriTextWidth=q=G.offsetWidth,f.oriTextHeight=u=G.offsetHeight):(n=
b.replace(N,function(c){return"&lt;"===c?"<":">"}),n=this.getOriSizeImprove(n,!0),f.oriTextWidth=q=n.width,f.oriTextHeight=u=n.height);if(u<=h&&q<=l)return f.width=f.oriTextWidth=q,f.height=f.oriTextHeight=u,f;if(r>h)return f.text="",f.width=f.oriTextWidth=0,f.height=f.oriTextHeight=0,f}b=Y(b).replace(/(\s+)/g," ");r=this.showNoEllipses?l:l-e;if(c){m=b.replace(T,"$2");b=b.replace(T,'$1<span class="_SmartLabel">$2</span>');b=b.replace(/(<br\s*\/*\>)/g,'<span class="_SmartLabel _SmartLabelBR">$1</span>');
G.innerHTML=b;da=G[z](R);E=0;for(J=da.length;E<J;E+=1)if(b=da[E],w||V.test(b.className))Y=b.innerHTML,""!==Y&&(" "===Y?L=C.length:"-"===Y&&(g=C.length),C.push({spaceIdx:L,dashIdx:g,elem:b}),M.push(Y));da=0;g=C.length;P=C[0].elem.offsetWidth;if(P>l)return f.text="",f.width=f.oriTextWidth=f.height=f.oriTextHeight=0,f;P>r&&!this.showNoEllipses&&(r=l-2*S,r>P?oa="..":(r=l-S,r>P?oa=".":(r=0,oa="")));M=C[0].elem.offsetLeft;E=C[0].elem.offsetTop;if(d)for(;da<g;da+=1)b=C[da].elem,J=b.offsetLeft-M+b.offsetWidth,
J>r&&(A||(A=da),G.offsetWidth>l&&(B=da,da=g));else for(;da<g;da+=1)b=C[da].elem,Y=b.offsetHeight+(b.offsetTop-E),J=b.offsetLeft-M+b.offsetWidth,d=null,J>r?(A||(A=da),J>l&&(q=C[da].spaceIdx,L=C[da].dashIdx,q>v?(C[q].elem.innerHTML="<br/>",v=q):L>v?(C[L].elem.innerHTML=L===da?"<br/>-":"-<br/>",v=L):b.parentNode.insertBefore(d=a.createElement("br"),b),b.offsetHeight+b.offsetTop>h?(d?d.parentNode.removeChild(d):v===L?C[L].elem.innerHTML="-":C[q].elem.innerHTML=" ",B=da,da=g):A=null)):Y>h&&(B=da,da=g);
if(B<g){f.isTruncated=!0;A=A?A:B;for(da=g-1;da>=A;--da)b=C[da].elem,b.parentNode.removeChild(b);for(;0<=da;--da)b=C[da].elem,p.test(b.className)?b.parentNode.removeChild(b):da=0}f.text=G.innerHTML.replace(K,"$1").replace(/\&amp\;/g,"&");f.isTruncated&&(f.text+=oa,f.tooltext=m)}else{M=b.split("");g=M.length;G="";B=[];A=M[0];this.cache[A]?P=this.cache[A].width:(P=J(A),this.cache[A]={width:P});if(r>P)B=b.substr(0,k(b,r,this)).split(""),da=B.length;else{if(P>l)return f.text="",f.width=f.oriTextWidth=
f.height=f.oriTextHeight=0,f;oa&&(r=l-2*S,r>P?oa="..":(r=l-S,r>P?oa=".":(r=0,oa="")))}C=J(B.join(""));u=this.lineHeight;if(d){for(;da<g;da+=1)if(A=B[da]=M[da],this.cache[A]?P=this.cache[A].width:(n&&(P=n.detailObj[A])||(P=J(A)),this.cache[A]={width:P}),C+=P,C>r&&(G||(G=B.slice(0,-1).join("")),C>l))return f.text=Y(G)+oa,f.tooltext=f.oriText,f.width=J(f.text),f.height=this.lineHeight,f;f.text=B.join("");f.width=C;f.height=this.lineHeight}else{for(;da<g;da+=1)if(A=B[da]=M[da]," "!==A||E||(A="&nbsp;"),
this.cache[A]?P=this.cache[A].width:(n&&(P=n.detailObj[A])||(P=J(A)),this.cache[A]={width:P}),C+=P,C>r&&(G||(G=B.slice(0,-1).join("")),C>l)){q=b.substr(0,B.length).lastIndexOf(" ");L=b.substr(0,B.length).lastIndexOf("-");q>v?(C=J(B.slice(v+1,q).join("")),B.splice(q,1,"<br/>"),v=q,d=q+1):L>v?(L===B.length-1?(C=J(B.slice(v+1,q).join("")),B.splice(L,1,"<br/>-")):(C=J(B.slice(v+1,q).join("")),B.splice(L,1,"-<br/>")),v=L,d=L+1):(B.splice(B.length-1,1,"<br/>"+M[da]),q=B.length-2,C=J(B.slice(v+1,q+1).join("")),
v=q,d=da);u+=this.lineHeight;if(u>h)return f.text=Y(G)+oa,f.tooltext=f.oriText,f.width=l,f.height=u-this.lineHeight,f;m=H(m,C);G=null;A=k(b.substr(d),r,this);C=J(b.substr(d,A||1));B.length<d+A&&(B=B.concat(b.substr(B.length,d+A-B.length).split("")),da=B.length-1)}m=H(m,C);f.text=B.join("");f.width=m;f.height=u}return f}f.height=G.offsetHeight;f.width=G.offsetWidth}else f.error=Error("Body Tag Missing!");return f},setStyle:function(a){if(!this.init)return!1;if(a!==this.style||this.styleNotSet){a||
(a=this.style);var b=a,h=b.fontSize=b.fontSize||"12px";b.lineHeight=b.lineHeight||b["line-height"]||1.2*parseInt(h,10)+"px";this.style=a;(this.containerObj=a=this.containerManager.get(a))?(this.container=a.node,this.context=a.context,this.cache=a.charCache,this.lineHeight=a.lineHeight,e=a.ellipsesWidth,S=a.dotWidth,this.styleNotSet=!1):this.styleNotSet=!0}},getTextSize:function(a,b,h){if(!this.init)return!1;var d={text:a,width:null,height:null,oriTextWidth:null,oriTextHeight:null,isTruncated:!1},
f=this.container;f&&(f.innerHTML=a,d.oriTextWidth=f.offsetWidth,d.oriTextHeight=f.offsetHeight,d.width=Math.min(d.oriTextWidth,b),d.height=Math.min(d.oriTextHeight,h),d.width<d.oriTextWidth||d.height<d.oriTextHeight)&&(d.isTruncated=!0);return d},getOriSize:function(a){if(!this.init)return!1;var b={text:a,width:null,height:null},h=this.container,d=this.getWidthFunction(),f=0;if(Z){a=a.split(/(<br\s*\/*\>)/g);h=a.length;for(b.height=this.lineHeight*h;h--;)f=H(f,d(a[h]));b.width=f}else h&&(h.innerHTML=
a,b.width=h.offsetWidth,b.height=h.offsetHeight);return b},getOriSizeImprove:function(a,b){if(!this.init)return!1;var h,d,f,c=0,e=0,l={},g,k;if(!b)return this.calCharDimWithCache(a);h=a.split("");g=0;for(k=h.length;g<k;g++)d=h[g],f=this.calCharDimWithCache(d,!0,h.length),e=H(e,f.height),c+=f.width,l[d]=f.width;return{width:A(c),height:e,detailObj:l}},calCharDimWithCache:function(a,b,h){if(!this.init)return!1;var d=this.container,f=this.style||{},c=this.advancedCache||(this.advancedCache={}),e=this.advancedCacheKey||
(this.advancedCacheKey=[]),l=a+(f.fontSize||"")+(f.fontFamily||"")+(f.fontWeight||"")+(f.fontStyle||""),f=a+"init"+(f.fontSize||"")+(f.fontFamily||"")+(f.fontWeight||"")+(f.fontStyle||""),g;r[a]&&(a=r[a]);b?void 0===(b=c[f])&&(d.innerHTML=a.repeat?a.repeat(h):Array(h+1).join(a),b=d.offsetWidth,d.innerHTML=a,g=d.offsetWidth,b=c[f]=(b-h*g)/(h+1),e.push(f),500<e.length&&delete c[e.shift()]):b=0;if(h=c[l])return c=h.split(","),{width:parseFloat(c[0],10),height:parseFloat(c[1],10)};d.innerHTML=a;a={height:d.offsetHeight,
width:d.offsetWidth+b};c[l]=a.width+","+a.height;e.push(l);500<e.length&&delete c[e.shift()];return a}};return n.prototype.constructor=n}();b.SmartLabelManager=C}]);Q.register("module",["private","modules.renderer.js-numberformatter",function(){var b=this,v=b.hcLib,J=v.pluckNumber,C=v.extend2,H=v.getValidValue,A=v.pluck,u=v.getFirstValue,a=Math.abs,O=Math.pow,q=Math.round,M=function(a){return a&&a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},U={},N=function(a){var b=[],m;for(m in a)b.push(m+"_"+a[m]);
b.sort();return b.join(",")},E=function(a){var b={},m;for(m in a)b[m.toLowerCase()]=a[m];return b};v.NumberFormatter=function(){function b(a,g,e){var k;if(0>=g)return q(a)+"";if(isNaN(g))return a+="",12<a.length&&-1!=a.indexOf(".")&&(g=12-a.split(".")[0].length,k=O(10,g),a=q(a*k)/k+""),a;k=O(10,g);a=q(a*k)/k+"";if(1==e)for(-1==a.indexOf(".")&&(a+=".0"),e=a.split("."),g-=e[1].length,e=1;e<=g;e++)a+="0";return a}function k(a,b,e,g,k){var m=Number(a),n="",t=!1,r="",P="",q=r=0;if(isNaN(m))return"";if(1E15<
m)return m.toExponential(k?1:14);r=0;q=a.length;-1!=a.indexOf(".")&&(n=a.substring(a.indexOf(".")+1,a.length),q=a.indexOf("."));0>m&&(t=!0,r=1);r=a.substring(r,q);a=r.length;k=g.length-1;m=g[k];if(a<m)P=r;else for(;a>=m;)P=(a-m?e:"")+r.substr(a-m,m)+P,a-=m,m=0>=--k?g[0]:g[k],a<m&&(P=r.substring(a,0)+P);""!=n&&(P=P+b+n);!0===t&&(P="-"+P);return P}var m,n={formatnumber:"1",formatnumberscale:"1",forcenumberscale:"0",defaultnumberscale:"",numberscaleunit:["K","M"],numberscalevalue:[1E3,1E3],numberprefix:"",
numbersuffix:"",decimals:"",forcedecimals:"0",yaxisvaluedecimals:"2",decimalseparator:".",thousandseparator:",",thousandseparatorposition:[3],indecimalseparator:"",inthousandseparator:"",sformatnumber:"1",sformatnumberscale:"0",sforcenumberscale:"0",sdefaultnumberscale:"",snumberscaleunit:["K","M"],snumberscalevalue:[1E3,1E3],snumberprefix:"",snumbersuffix:"",sdecimals:"2",sforcedecimals:"0",syaxisvaluedecimals:"2",xFormatNumber:"0",xFormatNumberScale:"0",xforcenumberscale:"0",xDefaultNumberScale:"",
xNumberScaleUnit:["K","M"],xNumberScaleValue:[1E3,1E3],xNumberPrefix:"",xNumberSuffix:""},L={mscombidy2d:{formatnumberscale:"1"}},g=function(a,b){var e=a.name,g=this.csConf=C({},n);(e=L[e])&&C(g,e);this.linkedItems={iapi:a};this.configure(b)};g.prototype={configure:function(a){var b=this.linkedItems.iapi,e=b.jsonData;a=a||e.chart;var e=b.name,g=this.csConf,k,m,r,t,q,P,L,z,R,w,F,v,h,d,f,c,D,G,aa,E;this.csConf=g;this.useScaleRecursively=b.useScaleRecursively;H(a.numberscaleunit)&&(k=a.numberscaleunit.split(","));
if(m=H(a.snumberscaleunit,a.numberscaleunit))m=m.split(",");if(r=H(a.xnumberscaleunit,a.numberscaleunit))r=r.split(",");if(t=H(a.ticknumberscaleunit,a.numberscaleunit))t=t.split(",");if(q=H(a.ynumberscaleunit,a.numberscaleunit))q=q.split(",");H(a.numberscalevalue)&&(P=a.numberscalevalue.split(","));if(F=H(a.snumberscalevalue,a.numberscalevalue))F=F.split(",");if(L=H(a.xnumberscalevalue,a.numberscalevalue))L=L.split(",");if(z=H(a.ticknumberscalevalue,a.numberscalevalue))z=z.split(",");if(R=H(a.ynumberscalevalue,
a.numberscalevalue))R=R.split(",");if(H(a.thousandseparatorposition))for(w=a.thousandseparatorposition.split(","),v=w.length,d=n.thousandseparatorposition[0];v--;)h=parseInt(w[v],10),0>=h&&(h=d),d=w[v]=h;b||(b={});v=J(a.scalerecursively,0);h=J(a.sscalerecursively,v);d=J(a.xscalerecursively,v);f=J(a.maxscalerecursion,-1);c=J(a.smaxscalerecursion,f);D=J(a.xmaxscalerecursion,f);G=H(a.scaleseparator," ");aa=H(a.sscaleseparator,G);E=H(a.xscaleseparator,G);f||(f=-1);this.baseConf=w={cacheStore:[],formatnumber:A(a.formatnumber,
b.formatnumber,g.formatnumber),formatnumberscale:A(a.formatnumberscale,b.formatnumberscale,g.formatnumberscale),forcenumberscale:A(a.forcenumberscale,b.forcenumberscale,g.forcenumberscale),defaultnumberscale:u(a.defaultnumberscale,b.defaultnumberscale,g.defaultnumberscale),numberscaleunit:A(k,b.numberscaleunit,g.numberscaleunit).concat(),numberscalevalue:A(P,b.numberscalevalue,g.numberscalevalue).concat(),numberprefix:u(a.numberprefix,b.numberprefix,g.numberprefix),numbersuffix:u(a.numbersuffix,b.numbersuffix,
g.numbersuffix),decimalprecision:parseInt("auto"===a.decimals?g.decimalprecision:A(a.decimals,a.decimalprecision,b.decimals,g.decimals,b.decimalprecision,g.decimalprecision),10),forcedecimals:A(a.forcedecimals,b.forcedecimals,g.forcedecimals),decimalseparator:A(a.decimalseparator,b.decimalseparator,g.decimalseparator),thousandseparator:A(a.thousandseparator,b.thousandseparator,g.thousandseparator),thousandseparatorposition:A(w,b.thousandseparatorposition,g.thousandseparatorposition),indecimalseparator:u(a.indecimalseparator,
b.indecimalseparator,g.indecimalseparator),inthousandseparator:u(a.inthousandseparator,b.inthousandseparator,g.inthousandseparator),scalerecursively:v,maxscalerecursion:f,scaleseparator:G};H(w.inthousandseparator)&&(this.baseConf._REGinthousandseparator=new RegExp(M(w.inthousandseparator),"g"));H(w.indecimalseparator)&&(this.baseConf._REGindecimalseparator=new RegExp(M(w.indecimalseparator)));this.Y=[];k={cacheStore:[],formatnumber:w.formatnumber,formatnumberscale:w.formatnumberscale,forcenumberscale:w.forcenumberscale,
defaultnumberscale:w.defaultnumberscale,numberscaleunit:w.numberscaleunit.concat(),numberscalevalue:w.numberscalevalue.concat(),numberprefix:w.numberprefix,numbersuffix:w.numbersuffix,decimalprecision:w.decimalprecision,forcedecimals:w.forcedecimals,decimalseparator:w.decimalseparator,thousandseparator:w.thousandseparator,thousandseparatorposition:w.thousandseparatorposition,indecimalseparator:w.indecimalseparator,inthousandseparator:w.inthousandseparator,scalerecursively:v,maxscalerecursion:f,scaleseparator:G};
b.useScaleRecursively&&(k.numberscalevalue&&k.numberscalevalue.length)==(k.numberscaleunit&&k.numberscaleunit.length)||(k.scalerecursively=v=0);P={cacheStore:[],formatnumber:k.formatnumber,formatnumberscale:k.formatnumberscale,forcenumberscale:k.forcenumberscale,defaultnumberscale:k.defaultnumberscale,numberscaleunit:k.numberscaleunit.concat(),numberscalevalue:k.numberscalevalue.concat(),numberprefix:k.numberprefix,numbersuffix:k.numbersuffix,decimalprecision:parseInt(A(a.yaxisvaluedecimals,k.decimalprecision,
2),10),forcedecimals:A(a.forceyaxisvaluedecimals,k.forcedecimals),decimalseparator:k.decimalseparator,thousandseparator:k.thousandseparator,thousandseparatorposition:k.thousandseparatorposition.concat(),indecimalseparator:k.indecimalseparator,inthousandseparator:k.inthousandseparator,scalerecursively:v,maxscalerecursion:f,scaleseparator:G};F={cacheStore:[],formatnumber:A(a.sformatnumber,b.sformatnumber,n.sformatnumber),formatnumberscale:A(a.sformatnumberscale,b.sformatnumberscale,n.sformatnumberscale),
forcenumberscale:A(a.sforcenumberscale,b.sforcenumberscale,n.sforcenumberscale),defaultnumberscale:u(a.sdefaultnumberscale,b.sdefaultnumberscale,k.defaultnumberscale),numberscaleunit:A(m,b.snumberscaleunit,n.snumberscaleunit).concat(),numberscalevalue:A(F,b.snumberscalevalue,n.snumberscalevalue).concat(),numberprefix:u(a.snumberprefix,b.snumberprefix,n.snumberprefix),numbersuffix:u(a.snumbersuffix,b.snumbersuffix,n.snumbersuffix),decimalprecision:parseInt(A(a.syaxisvaluedecimals,a.sdecimals,a.decimals,
b.sdecimals,n.sdecimals),10),forcedecimals:A(a.forcesyaxisvaluedecimals,a.sforcedecimals,a.forcedecimals,b.sforcedecimals,n.sforcedecimals),decimalseparator:A(a.decimalseparator,b.decimalseparator,n.decimalseparator),thousandseparator:A(a.thousandseparator,b.thousandseparator,n.thousandseparator),thousandseparatorposition:k.thousandseparatorposition.concat(),indecimalseparator:A(a.indecimalseparator,b.indecimalseparator,n.indecimalseparator),inthousandseparator:A(a.inthousandseparator,b.inthousandseparator,
n.inthousandseparator),scalerecursively:h,maxscalerecursion:c,scaleseparator:aa};m=C({},F);m.decimalprecision=parseInt(A(a.sdecimals,a.decimals,a.syaxisvaluedecimals,b.sdecimals,n.sdecimals),10);m.forcedecimals=A(a.sforcedecimals,a.forcedecimals,a.forcesyaxisvaluedecimals,b.sforcedecimals,n.sforcedecimals);m.cacheStore=[];b.useScaleRecursively&&(F.numberscalevalue&&F.numberscalevalue.length)==(F.numberscaleunit&&F.numberscaleunit.length)||(F.scalerecursively=h=0);/^(bubble|scatter|selectscatter|zoomscatter)$/.test(e)&&
(P.formatnumber=A(a.yformatnumber,P.formatnumber),P.formatnumberscale=A(a.yformatnumberscale,P.formatnumberscale),P.forcenumberscale=A(a.yforcenumberscale,P.forcenumberscale),P.defaultnumberscale=u(a.ydefaultnumberscale,P.defaultnumberscale),P.numberscaleunit=A(q,P.numberscaleunit),P.numberscalevalue=A(R,P.numberscalevalue),P.numberprefix=A(a.ynumberprefix,P.numberprefix),P.numbersuffix=A(a.ynumbersuffix,P.numbersuffix),k.formatnumber=A(a.yformatnumber,k.formatnumber),k.formatnumberscale=A(a.yformatnumberscale,
k.formatnumberscale),k.forcenumberscale=A(a.yforcenumberscale,k.forcenumberscale),k.defaultnumberscale=u(a.ydefaultnumberscale,k.defaultnumberscale),k.numberscaleunit=A(a.ynumberscaleunit,k.numberscaleunit.concat()),k.numberscalevalue=A(a.ynumberscalevalue,k.numberscalevalue.concat()),k.numberprefix=A(a.ynumberprefix,k.numberprefix),k.numbersuffix=A(a.ynumbersuffix,k.numbersuffix));/^(pie2d|pie3d|doughnut2d|doughnut3d|marimekko|pareto2d|pareto3d)$/.test(e)&&(k.decimalprecision=A(a.decimals,"2"));
v&&(k.numberscalevalue.push(1),k.numberscaleunit.unshift(k.defaultnumberscale),P.numberscalevalue.push(1),P.numberscaleunit.unshift(P.defaultnumberscale));h&&(F.numberscalevalue.push(1),F.numberscaleunit.unshift(F.defaultnumberscale),m.numberscalevalue.push(1),m.numberscaleunit.unshift(m.defaultnumberscale));this.Y[0]={yAxisLabelConf:P,dataLabelConf:k};this.Y[1]={yAxisLabelConf:F,dataLabelConf:m};this.paramLabels=k;this.param1=P;this.param2=F;this.paramLabels2=m;this.paramX={cacheStore:[],formatnumber:A(a.xformatnumber,
w.formatnumber),formatnumberscale:A(a.xformatnumberscale,w.formatnumberscale),forcenumberscale:A(a.xforcenumberscale,w.forcenumberscale),defaultnumberscale:u(a.xdefaultnumberscale,w.defaultnumberscale),numberscaleunit:A(r,w.numberscaleunit.concat()),numberscalevalue:A(L,w.numberscalevalue.concat()),numberprefix:A(a.xnumberprefix,w.numberprefix),numbersuffix:A(a.xnumbersuffix,w.numbersuffix),decimalprecision:parseInt(A(a.xaxisvaluedecimals,a.xaxisvaluesdecimals,w.decimalprecision,2),10),forcedecimals:A(a.forcexaxisvaluedecimals,
0),decimalseparator:w.decimalseparator,thousandseparator:w.thousandseparator,thousandseparatorposition:w.thousandseparatorposition.concat(),indecimalseparator:w.indecimalseparator,inthousandseparator:w.inthousandseparator,scalerecursively:d,maxscalerecursion:D,scaleseparator:E};this.paramLegend=C(C({},w),{cacheStore:[],decimalprecision:parseInt(J(a.legendvaluedecimals,w.decimalprecision,2),10),forcedecimals:J(a.legendvalueforcedecimals,w.forcedecimals,0),formatnumberscale:A(a.legendvalueformatnumberscale,
w.formatnumberscale),forcenumberscale:A(a.legendvalueforcenumberscale,w.forcenumberscale),formatnumber:A(a.legendvalueformatnumber,w.formatnumber)});v&&(this.paramLegend.numberscalevalue.push(1),this.paramLegend.numberscaleunit.unshift(this.paramLegend.defaultnumberscale));b.useScaleRecursively&&(this.paramX.numberscalevalue&&this.paramX.numberscalevalue.length)==(this.paramX.numberscaleunit&&this.paramX.numberscaleunit.length)||(this.paramX.scalerecursively=d=0);d&&(this.paramX.numberscalevalue.push(1),
this.paramX.numberscaleunit.unshift(this.paramX.defaultnumberscale));this.paramScale={cacheStore:[],formatnumber:A(a.tickformatnumber,w.formatnumber),formatnumberscale:A(a.tickformatnumberscale,w.formatnumberscale),forcenumberscale:A(a.tickforcenumberscale,w.forcenumberscale),defaultnumberscale:u(a.tickdefaultnumberscale,w.defaultnumberscale),numberscaleunit:A(t,w.numberscaleunit.concat()),numberscalevalue:A(z,w.numberscalevalue.concat()),numberprefix:A(a.ticknumberprefix,w.numberprefix),numbersuffix:A(a.ticknumbersuffix,
w.numbersuffix),decimalprecision:parseInt(A(a.tickvaluedecimals,w.decimalprecision,"2"),10),forcedecimals:A(a.forcetickvaluedecimals,w.forcedecimals,0),decimalseparator:w.decimalseparator,thousandseparator:w.thousandseparator,thousandseparatorposition:w.thousandseparatorposition.concat(),indecimalseparator:w.indecimalseparator,inthousandseparator:w.inthousandseparator,scalerecursively:v,maxscalerecursion:f,scaleseparator:G};v&&(this.paramScale.numberscalevalue.push(1),this.paramScale.numberscaleunit.unshift(this.paramScale.defaultnumberscale));
this.timeConf={inputDateFormat:A(a.inputdateformat,a.dateformat,"mm/dd/yyyy"),outputDateFormat:A(a.outputdateformat,a.inputdateformat,a.dateformat,"mm/dd/yyyy"),days:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),months:"January February March April May June July August September October November December".split(" "),daySuffix:" st nd rd th th th th th th th th th th th th th th th th th st nd rd th th th th th th th st".split(" ")};this.cleaneValueCacheStore={};this.percentStrCacheStore=
{}},cleaneValueCacheStore:{},percentStrCacheStore:{},dispose:function(){this.Y&&delete this.Y;this.cleaneValueCacheStore&&delete this.cleaneValueCacheStore;this.percentStrCacheStore&&delete this.percentStrCacheStore;this.paramLabels&&delete this.paramLabels;this.param1&&delete this.param1;this.param2&&delete this.param2;this.paramLabels2&&delete this.paramLabels2;this.csConf&&delete this.csConf;this.iapi&&delete this.iapi;this.baseConf&&delete this.baseConf;this.timeConf&&delete this.timeConf;this.paramX&&
delete this.paramX;this.paramScale&&delete this.paramScale},parseMLAxisConf:function(b,g){var e=this.baseConf,k=this.csConf,p=J(b.scalerecursively,e.scalerecursively),m=J(b.maxscalerecursion,e.maxscalerecursion),r=H(b.scaleseparator,e.scaleseparator),t,q,P,L,z,R;g=J(g,this.Y.length);H(b.numberscaleunit)&&(t=b.numberscaleunit.split(","));H(b.numberscalevalue)&&(q=b.numberscalevalue.split(","));m||(m=-1);if(H(b.thousandseparatorposition))for(P=b.thousandseparatorposition.split(","),L=P.length,R=n.thousandseparatorposition[0];L--;)(z=
J(a(P[L])))?R=z:z=R,P[L]=z;e={cacheStore:[],formatnumber:A(b.formatnumber,e.formatnumber),formatnumberscale:A(b.formatnumberscale,e.formatnumberscale),forcenumberscale:A(b.forcenumberscale,e.forcenumberscale),defaultnumberscale:u(b.defaultnumberscale,e.defaultnumberscale),numberscaleunit:A(t,e.numberscaleunit).concat(),numberscalevalue:A(q,e.numberscalevalue).concat(),numberprefix:u(b.numberprefix,e.numberprefix),numbersuffix:u(b.numbersuffix,e.numbersuffix),forcedecimals:A(b.forcedecimals,e.forcedecimals),
decimalprecision:parseInt("auto"===b.decimals?k.decimalprecision:A(b.decimals,e.decimalprecision),10),decimalseparator:A(b.decimalseparator,e.decimalseparator),thousandseparator:A(b.thousandseparator,e.thousandseparator),thousandseparatorposition:A(P,e.thousandseparatorposition),indecimalseparator:u(b.indecimalseparator,e.indecimalseparator),inthousandseparator:u(b.inthousandseparator,e.inthousandseparator),scalerecursively:p,maxscalerecursion:m,scaleseparator:r};this.useScaleRecursively&&(e.numberscalevalue&&
e.numberscalevalue.length)==(e.numberscaleunit&&e.numberscaleunit.length)||(e.scalerecursively=p=0);m={cacheStore:[],formatnumber:e.formatnumber,formatnumberscale:e.formatnumberscale,forcenumberscale:e.forcenumberscale,defaultnumberscale:e.defaultnumberscale,numberscaleunit:e.numberscaleunit.concat(),numberscalevalue:e.numberscalevalue.concat(),numberprefix:e.numberprefix,numbersuffix:e.numbersuffix,decimalprecision:parseInt(A(b.yaxisvaluedecimals,e.decimalprecision,2),10),forcedecimals:A(b.forceyaxisvaluedecimals,
e.forcedecimals),decimalseparator:e.decimalseparator,thousandseparator:e.thousandseparator,thousandseparatorposition:e.thousandseparatorposition.concat(),indecimalseparator:e.indecimalseparator,inthousandseparator:e.inthousandseparator,scalerecursively:p,maxscalerecursion:m,scaleseparator:r};p&&(e.numberscalevalue.push(1),e.numberscaleunit.unshift(e.defaultnumberscale),m.numberscalevalue.push(1),m.numberscaleunit.unshift(m.defaultnumberscale));this.Y[g]={dataLabelConf:e,yAxisLabelConf:m}},percentValue:function(a){var g=
this.percentStrCacheStore[a];void 0===g&&(g=isNaN(this.paramLabels.decimalprecision)?"2":this.paramLabels.decimalprecision,g=this.percentStrCacheStore[a]=k(b(a,g,this.paramLabels.forcedecimals),this.paramLabels.decimalseparator,this.paramLabels.thousandseparator,this.paramLabels.thousandseparatorposition)+"%");return g},getCleanValue:function(b,g){var e=this.cleaneValueCacheStore[b];if(void 0===e||g){var k=this.baseConf,e=b+"";k._REGinthousandseparator&&(e=e.replace(k._REGinthousandseparator,""));
k._REGindecimalseparator&&(e=e.replace(k._REGindecimalseparator,"."));e=parseFloat(e);e=isFinite(e)?e:NaN;this.cleaneValueCacheStore[b]=e=isNaN(e)?null:g?a(e):e}return e},dataLabels:function(a,b){var e=this.Y[b]||(b?this.Y[1]:this.Y[0]),g,e=e&&e.dataLabelConf||this.baseConf;g=e.cacheStore[a];void 0===g&&(g=e.cacheStore[a]=m(a,e));return g},yAxis:function(a,b){var e=this.Y[b]||(b?this.Y[1]:this.Y[0]),g,e=e&&e.yAxisLabelConf||this.baseConf;g=e.cacheStore[a];void 0===g&&(g=e.cacheStore[a]=m(a,e,!0));
return g},xAxis:function(a){var b=this.paramX.cacheStore[a];void 0===b&&(b=this.paramX.cacheStore[a]=m(a,this.paramX,!0));return b},sYAxis:function(a){var b=this.Y[1],e,b=b&&b.yAxisLabelConf||this.baseConf;e=b.cacheStore[a];void 0===e&&(e=b.cacheStore[a]=m(a,b));return e},scale:function(a){var b=this.paramScale.cacheStore[a];void 0===b&&(b=this.paramScale.cacheStore[a]=m(a,this.paramScale));return b},getCleanTime:function(a){var b;this.timeConf.inputDateFormat&&Date.parseExact&&(b=Date.parseExact(a,
this.timeConf.inputDateFormat));return b&&b.getTime()},legendValue:function(a){var b=this.paramLegend.cacheStore[a];void 0===b&&(b=this.paramLegend.cacheStore[a]=m(a,this.paramLegend));return b},legendPercentValue:function(a){var g=this.percentStrCacheStore[a],e=this.paramLegend;void 0===g&&(g=isNaN(e.decimalprecision)?"2":e.decimalprecision,g=this.percentStrCacheStore[a]=k(b(a,g,e.forcedecimals),e.decimalseparator,e.thousandseparator,e.thousandseparatorposition)+"%");return g},getDateValue:function(a){var b,
e,g;a&&!/\//.test(this.timeConf.inputDateFormat)&&(a=a.replace(new RegExp(this.timeConf.inputDateFormat.replace(/[a-z]/ig,"").slice(0,1),"g"),"/"));a=/^dd/.test(this.timeConf.inputDateFormat)&&a&&a.replace(/(\d{1,2})\/(\d{1,2})\/(\d{2,4})/,"$2/$1/$3")||a;b=new Date(a);e=b.getTime();!e&&a&&/\:/.test(a)&&(a=a.split(":"),e=J(a[0],0),g=J(a[1],0),a=J(a[2],0),e=23<e?24===e&&0===g&&0===a?e:23:e,g=59<g?59:g,a=59<a?59:a,b=new Date,b.setHours(e),b.setMinutes(g),b.setSeconds(a),e=b.getTime());return{ms:e,date:b}},
getFormattedDate:function(a,b){var e="object"===typeof a&&a||new Date(a),g=this.timeConf,k=A(b,g.outputDateFormat),m=e.getFullYear(),n=e.getMonth(),t=e.getDate(),r=e.getDay(),P=e.getMinutes(),q=e.getSeconds(),e=e.getHours(),P=9<P?""+P:"0"+P,q=9<q?""+q:"0"+q,e=9<e?""+e:"0"+e;k.match(/dnl/)&&(k=k.replace(/dnl/ig,g.days[r]));k.match(/dns/)&&(k=k.replace(/dns/ig,g.days[r]&&g.days[r].substr(0,3)));k.match(/dd/)&&(k=k.replace(/dd/ig,t));k.match(/mnl/)&&(k=k.replace(/mnl/ig,g.months[n]));k.match(/mns/)&&
(k=k.replace(/mns/ig,g.months[n]&&g.months[n].substr(0,3)));k.match(/mm/)&&(k=k.replace(/mm/ig,n+1));k.match(/yyyy/)&&(k=k.replace(/yyyy/ig,m));k.match(/yy/)&&(k=k.replace(/yy/ig,(m%1E3%100+"").replace(/^(\d)$/,"0$1")));k.match(/hh12/)&&(k=k.replace(/hh12/ig,e%12||12));k.match(/hh/)&&(k=k.replace(/hh/ig,e));k.match(/mn/)&&(k=k.replace(/mn/ig,P));k.match(/ss/)&&(k=k.replace(/ss/ig,q));k.match(/ampm/)&&(k=k.replace(/ampm/ig,12>e?"AM":"PM"));k.match(/ds/)&&(k=k.replace(/ds/ig,g.daySuffix[t]));return k}};
g.prototype.constructor=g;m=function(a,g,e){if(null!==a){a=Number(a);var m=a+"",p,n,K,t,q;p=1==g.formatnumberscale?g.defaultnumberscale:"";q=(q=m.split(".")[1])?q.length:g.forcedecimals?"2":"";if(1==g.formatnumberscale){m=a;n=g.defaultnumberscale;a=g.numberscalevalue;p=g.numberscaleunit;var P=g.scalerecursively;K=g.forcenumberscale;t={};var u=n,z=0,R=[],w=[],F;K=J(K)||0;if(P){u=J(a[0])||1E3;for(z=0;z<a.length;z++)if(P=J(a[z])||1E3,Math.abs(Number(m))>=P&&z<a.length-1)F=m%P,m=(m-F)/P,0===z&&0!==F&&
""===p[z]&&K?(R.push(F/u),w.push(p[1]||"")):0!==F&&(1===z&&""===n&&K?(P=F+(R.length?R.pop():0),w.pop(),R.push(P)):R.push(F),w.push(p[z]));else{0===z&&""===n&&K?(m=Number(m)/u,R.push(m),w.push(p[1]||"")):(1===z&&""===n&&K?(P=m+(R.length?R.pop():0),w.pop(),R.push(P)):R.push(m),w.push(p[z]));break}R.reverse();w.reverse();t.value=R;t.scale=w}else{if(a.length===p.length)for(z=0;z<a.length;z++)if(P=J(a[z])||1E3,Math.abs(Number(m))>=P)u=p[z]||"",m=Number(m)/P;else{0===z&&""===n&&K&&(u=p[0]||"",m=Number(m)/
P);break}t.value=m;t.scale=u}n=t;a=m=n.value;p=n.scale}if(g.scalerecursively&&0!==g.formatnumberscale&&"0"!==g.formatnumberscale){e=n.value;n=n.scale;a=-1==g.maxscalerecursion?e.length:Math.min(e.length,g.maxscalerecursion);if(1==g.formatnumber)for(m="",t=0;t<a;t++)p=0===t?e[t]:Math.abs(e[t]),K=p+"",t==a-1&&(K=b(p,A(g.decimalprecision,q),g.forcedecimals)),m=m+k(K,g.decimalseparator,g.thousandseparator,g.thousandseparatorposition)+n[t]+(t<a-1?g.scaleseparator:"");else for(m="",t=0;t<a;t++)m=m+(0===
t?e[t]:Math.abs(e[t])+"")+n[t]+(t<a-1?g.scaleseparator:"");m=(g.numberprefix||"")+m+(g.numbersuffix||"")}else 1==g.formatnumber&&(m=b(a,A(g.decimalprecision,q),g.forcedecimals),m=k(m,g.decimalseparator,g.thousandseparator,g.thousandseparatorposition,e)),m=(g.numberprefix||"")+m+p+(g.numbersuffix||"");return m}};return g}();b.extend(b.core,{formatNumber:function(a,b,m){b=b&&E(b)||{};var n=N(b),q;U[n]?q=U[n]:U[n]=q=new v.NumberFormatter(b,{useScaleRecursively:!0});return q.dataLabels(a,m)}},!1);b.extend(b.core,
{formatNumber:function(a,k,m,n){m=m&&E(m)||{};var q=this.jsVars.instanceAPI||{},g=q.numberFormatter,l;""===N(m)?g?l=g:(g=this.getChartData(b.dataFormats.JSON,!0),g=g.data||{},g=g.chart||{},m=N(g),U[m]?l=U[m]:U[m]=l=new v.NumberFormatter(g,q)):(g=this.getChartData(b.dataFormats.JSON,!0),g=g.data||{},g=g.chart||{},g=C(C({},g),m),m=N(g),U[m]?l=U[m]:U[m]=l=new v.NumberFormatter(g,q));switch((k&&k.toLowerCase?k:"").toLowerCase()){case "yaxisvalues":a=l.yAxis(a,n);break;case "xaxisvalues":a=l.xAxis(a);
break;case "scale":a=l.scale(a);break;default:a=l.dataLabels(a,n)}return a}},!0)}]);Q.register("module",["private","modules.renderer.js-colormanager",function(){var b=this.hcLib,v=b.pluckNumber,J=b.graphics.getDarkColor,C=b.graphics.getLightColor,H="AFD8F8 F6BD0F 8BBA00 FF8E46 008E8E D64646 8E468E 588526 B3AA00 008ED6 9D080D A186BE CC6600 FDC689 ABA000 F26D7D FFF200 0054A6 F7941C CC3300 006600 663300 6DCFF6".split(" "),A="8BBA00 F6BD0F FF654F AFD8F8 FDB398 CDC309 B1D0D2 FAD1B9 B8A79E D7CEA5 C4B3CE E9D3BE EFE9AD CEA7A2 B2D9BA".split(" "),
u=b.defaultPaletteOptions={paletteColors:[H,H,H,H,H],bgColor:["CBCBCB,E9E9E9","CFD4BE,F3F5DD","C5DADD,EDFBFE","A86402,FDC16D","FF7CA0,FFD1DD"],bgAngle:[270,270,270,270,270],bgRatio:["0,100","0,100","0,100","0,100","0,100"],bgAlpha:["50,50","60,50","40,20","20,10","30,30"],canvasBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],canvasBgAngle:[0,0,0,0,0],canvasBgAlpha:["100","100","100","100","100"],canvasBgRatio:["","","","",""],canvasBorderColor:["545454","545454","415D6F","845001","68001B"],
canvasBorderAlpha:[100,100,100,90,100],showShadow:[0,1,1,1,1],divLineColor:["717170","7B7D6D","92CDD6","965B01","68001B"],divLineAlpha:[40,45,65,40,30],altHGridColor:["EEEEEE","D8DCC5","99C4CD","DEC49C","FEC1D0"],altHGridAlpha:[50,35,10,20,15],altVGridColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],altVGridAlpha:[10,20,10,15,10],anchorBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor:["545454","545454","415D6F",
"845001","68001B"],baseFontColor:["555555","60634E","025B6A","A15E01","68001B"],borderColor:["767575","545454","415D6F","845001","68001B"],borderAlpha:[50,50,50,50,50],legendBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],legendBorderColor:["545454","545454","415D6F","845001","D55979"],plotGradientColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],plotBorderColor:["333333","8A8A8A","FFFFFF","FFFFFF","FFFFFF"],plotFillColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],bgColor3D:["FFFFFF",
"FFFFFF","FFFFFF","FFFFFF","FFFFFF"],bgAlpha3D:["100","100","100","100","100"],bgAngle3D:[90,90,90,90,90],bgRatio3D:["","","","",""],canvasBgColor3D:["DDE3D5","D8D8D7","EEDFCA","CFD2D8","FEE8E0"],canvasBaseColor3D:["ACBB99","BCBCBD","C8A06C","96A4AF","FAC7BC"],divLineColor3D:["ACBB99","A4A4A4","BE9B6B","7C8995","D49B8B"],divLineAlpha3D:[100,100,100,100,100],legendBgColor3D:["F0F3ED","F3F3F3","F7F0E8","EEF0F2","FEF8F5"],legendBorderColor3D:["C6CFB8","C8C8C8","DFC29C","CFD5DA","FAD1C7"],toolTipbgColor3D:["FFFFFF",
"FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor3D:["49563A","666666","49351D","576373","681C09"],baseFontColor3D:["49563A","4A4A4A","49351D","48505A","681C09"],anchorBgColor3D:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"]},H=b.colorManager=function(a){this.linkedItems={iapi:a};this.configure()};H.prototype={configure:function(){var a=this.linkedItems.iapi,A=a.jsonData.chart||{},q=b.extend2({},u),H=a.defaultPaletteOptions||{},U;q||(q={});for(U in H)q[U]=H[U];q=this.paletteOptions=q;H=this.themeEnabled=
A.palettethemecolor;this.paletteIndex=(0<A.palette&&6>A.palette?A.palette:v(a.paletteIndex,1))-1;this.iterator=0;this.paletteColors=q.paletteColors[this.themeEnabled?0:this.paletteIndex];U=A.palettecolors;void 0!==U&&null!==U&&""!==A.palettecolors&&(this.paletteColors=A.palettecolors.split(/\s*\,\s*/));this.paletteLen=this.paletteColors.length;this.useFlatColors=v(A.useflatdataplotcolor,a.useFlatColor,0);H&&(this.paletteIndex=5,q.bgColor[5]=C(H,35)+","+C(H,10),q.bgAngle[5]=270,q.bgRatio[5]="0,100",
q.bgAlpha[5]="50,50",q.canvasBgColor[5]="FFFFFF",q.canvasBgAngle[5]=0,q.canvasBgAlpha[5]="100",q.canvasBgRatio[5]="",q.canvasBorderColor[5]=J(H,80),q.canvasBorderAlpha[5]=100,q.showShadow[5]=1,q.divLineColor[5]=J(H,20),q.divLineAlpha[5]=40,q.altHGridColor[5]=C(H,20),q.altHGridAlpha[5]=15,q.altVGridColor[5]=C(H,80),q.altVGridAlpha[5]=10,q.anchorBgColor[5]="FFFFFF",q.toolTipBgColor[5]="FFFFFF",q.toolTipBorderColor[5]=J(H,80),q.baseFontColor[5]=H.split&&H.split(",")[0],q.borderColor[5]=J(H,60),q.borderAlpha[5]=
50,q.legendBgColor[5]="FFFFFF",q.legendBorderColor[5]=J(H,80),q.plotGradientColor[5]="FFFFFF",q.plotBorderColor[5]=J(H,85),q.plotFillColor[5]=J(H,85),q.bgColor3D[5]="FFFFFF",q.bgAlpha3D[5]="100",q.bgAngle3D[5]=90,q.bgRatio3D[5]="",q.canvasBgColor3D[5]=C(H,20),q.canvasBaseColor3D[5]=C(H,40),q.divLineColor3D[5]=J(H,20),q.divLineAlpha3D[5]=40,q.legendBgColor3D[5]="FFFFFF",q.legendBorderColor3D[5]=J(H,80),q.toolTipbgColor3D[5]="FFFFFF",q.toolTipBorderColor3D[5]=J(H,80),q.baseFontColor3D[5]=H.split&&H.split(",")[0],
q.anchorBgColor3D[5]="FFFFFF",q.tickColor&&(q.tickColor[5]=J(H,90)),q.trendDarkColor&&(q.trendDarkColor[5]=J(H,90)),q.trendLightColor&&(q.trendLightColor[5]=C(H,q.TrendLightShadeOffset)),q.msgLogColor&&(q.msgLogColor[5]=C(H,80)),q.dialColor&&(q.dialColor[5]=J(H,95)+",FFFFFF,"+J(H,95)),q.dialBorderColor&&(q.dialBorderColor[5]=J(H,95)+",FFFFFF,"+J(H,95)),q.pivotColor&&(q.pivotColor[5]=C(H,95)+",FFFFFF,"+C(H,95)),q.pivotBorderColor&&(q.pivotBorderColor[5]=J(H,95)+",FFFFFF,"+J(H,95)),q.pointerBorderColor&&
(q.pointerBorderColor[5]=J(H,75)),q.pointerBgColor&&(q.pointerBgColor[5]=J(H,75)),q.thmBorderColor&&(q.thmBorderColor[5]=J(H,90)),q.thmFillColor&&(q.thmFillColor[5]=C(H,55)),q.gaugeBorderColor&&(q.gaugeBorderColor[5]=J(H,90)),q.gaugeFillColor&&(q.gaugeFillColor[5]=C(H,55)),q.cylFillColor&&(q.cylFillColor[5]=C(H,55)),q.periodColor&&(q.periodColor[5]=C(H,10)),q.winColor&&(q.winColor[5]="666666"),q.lossColor&&(q.lossColor[5]="CC0000"),q.drawColor&&(q.drawColor[5]="666666"),q.scorelessColor&&(q.scorelessColor[5]=
"FF0000"),q.gridColor&&(q.gridColor[5]=C(H,30)),q.categoryBgColor&&(q.categoryBgColor[5]=C(H,10)),q.dataTableBgColor&&(q.dataTableBgColor[5]=C(H,10)),q.gridResizeBarColor&&(q.gridResizeBarColor[5]=J(H,90)),q.scrollBarColor&&(q.scrollBarColor[5]=C(H,50)))},getColor:function(a){return this.paletteOptions[a][this.paletteIndex]},getPlotColor:function(a){var b=this.paletteColors;a=this.useFlatColors?this.getColor("plotFillColor"):b[a%this.paletteLen];a||(this.iterator===this.paletteLen&&(this.iterator=
0),a=b[this.iterator],this.iterator+=1);return a},parseColorMix:function(a,b){var q=[],u,v,A,E,r,k,m,n,L,g;b=b.replace(/\s/g,"");b=b.toLowerCase();if(""===b||null===b||void 0===b)q=[a];else for(v=b.split(","),A=a.split(","),E=Math.max(v.length,A.length,1),r=v[0],k=A[0],L=/[\{\}]/ig,g=0;g<E;g++)m=(v[g]||r).replace(L,""),n=A[g]||k,"color"==m?q.push(n):"light"==m.substr(0,5)?(u=m.indexOf("-"),u=-1==u?1:m.substr(u+1,m.length-u),u=100-u,q.push(C(n,u))):"dark"==m.substr(0,4)?(u=m.indexOf("-"),u=-1==u?1:
m.substr(u+1,m.length-u),u=100-u,q.push(J(n,u))):q.push(m);return q},parseAlphaList:function(a,b){var q=a.split(","),u=[],A,C=100,E;for(E=0;E<b;E++)A=v(q[E]),void 0!==A&&null!==A&&(C=A),u[E]=C;return u.join()},parseRatioList:function(a,b){var q=a.split(","),u=[],v=0,A,E;for(E=0;E<b;E++)A=q[E],A=isNaN(A)||void 0===A?0:Math.abs(Number(A)),A=100<A?100:A,u[E]=A,v+=A;v=100<v?100:v;if(q.length<b)for(E=q.length;E<b;E++)u[E]=(100-v)/(b-q.length);u[-1]=0;return u.join()}};H.prototype.constructor=H;b.defaultGaugePaletteOptions=
{paletteColors:[A,A,A,A,A],bgColor:["CBCBCB,E9E9E9","CFD4BE,F3F5DD","C5DADD,EDFBFE","A86402,FDC16D","FF7CA0,FFD1DD"],bgAngle:[270,270,270,270,270],bgRatio:["0,100","0,100","0,100","0,100","0,100"],bgAlpha:["50,50","60,50","40,20","20,10","30,30"],toolTipBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],toolTipBorderColor:["545454","545454","415D6F","845001","68001B"],baseFontColor:["555555","60634E","025B6A","A15E01","68001B"],tickColor:["333333","60634E","025B6A","A15E01","68001B"],trendDarkColor:["333333",
"60634E","025B6A","A15E01","68001B"],trendLightColor:["f1f1f1","F3F5DD","EDFBFE","FFF5E8","FFD1DD"],pointerBorderColor:["545454","60634E","415D6F","845001","68001B"],pointerBgColor:["545454","60634E","415D6F","845001","68001B"],canvasBgColor:["FFFFFF","FFFFFF","FFFFFF","FFFFFF","FFFFFF"],canvasBgAngle:[0,0,0,0,0],canvasBgAlpha:["100","100","100","100","100"],canvasBgRatio:["","","","",""],canvasBorderColor:["545454","545454","415D6F","845001","68001B"],canvasBorderAlpha:[100,100,100,90,100],altHGridColor:["EEEEEE",
"D8DCC5","99C4CD","DEC49C","FEC1D0"],altHGridAlpha:[50,35,10,20,15],altVGridColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],altVGridAlpha:[10,20,10,15,10],borderColor:["767575","545454","415D6F","845001","68001B"],borderAlpha:[50,50,50,50,50],legendBgColor:["ffffff","ffffff","ffffff","ffffff","ffffff"],legendBorderColor:["545454","545454","415D6F","845001","D55979"],plotFillColor:["767575","D8DCC5","99C4CD","DEC49C","FEC1D0"],plotBorderColor:["999999","8A8A8A","6BA9B6","C1934D","FC819F"],msgLogColor:["717170",
"7B7D6D","92CDD6","965B01","68001B"],TrendLightShadeOffset:30}}]);Q.register("module",["private","modules.renderer.js-annotations",function(){var b=this,v=b.core,J=b.hcLib,C=b.window,H=/msie/i.test(C.navigator.userAgent)&&!C.opera,A=J.addEvent,u=J.removeEvent,a=J.hasTouch,O=C.Number,q=a?6:5,M="rgba(192,192,192,"+(H?.002:1E-6)+")",H=Math,U=H.min,N=H.max,E=H.sin,r=H.cos,k=H.PI,m=k/180,n=H.abs,L=b.extend,g=J.pluck,l=J.pluckNumber,B=J.graphics.convertColor,e=J.getValidValue,V=J.parseUnsafeString,p=J.setImageDisplayMode,
T=J.graphics.parseColor,K=J.setLineHeight,t=J.getMouseCoordinate,Z={style:{}},P=J.toRaphaelColor,S=function(a,b){return{start:-a,end:-b,angle:a-b}},z=function(a,b){var c=0;switch(a){case "startx":c=b.x;break;case "starty":c=b.y;break;case "x":case "middlex":case "centerx":c=b.x+b.width/2;break;case "y":case "middley":case "centery":c=b.y+b.height/2;break;case "endx":c=b.x+b.width;break;case "endy":c=b.y+b.height;break;default:c=0}return c},R=function(a,b,c,h,e){var g,l,k=0,t=0;l=void 0===b||null===
b?1:b;var p;if(!a||!a.toString)return{value:c,hasDynamicMacros:!1};a=a.toString();a=a.toLowerCase().replace(/\s/g,"");if(c=a.match(/^[\+\-]?\d+(\.\d+)?|[\+\-]\d+(\.\d+)?/g)){for(b=0;b<c.length;b+=1)k+=Number(c[b])||0;k*=l}if(c=a.match(/^[\+\-]?(\$[a-z0-9\.]+)|[\+\-](\$[a-z0-9\.]+)/g))for(b=0;b<c.length;b+=1){g=c[b];var m=h,z=e,w=g.split("."),F=void 0,n=void 0,r=0;for(l=void 0;F=w.shift();)switch(typeof(n=m[F])){case "object":m=n[F];break;case "function":n=n(w,z),"-"===g.charAt()&&(n*=-1),l=!0;default:r+=
O(n)||0,w.length=0}g=r;l&&(p=!0);t+=g}if(c=a.match(/^[\+\-]?\$\d+(\.\d+)?|[\+\-]\$\d+(\.\d+)?/g))for(b=0;b<c.length;b+=1)t=t+Number(c[b].replace("$",""))||0;return{value:k+t,hasDynamicMacros:p}},w=function(a,h,c){if(!h.removed){h=h.data("annotation");var e=h.getRenderer(),g=t(e.linkedItems.container,c),l=g.annotationOptions=h.options,k=g.groupOptions=h.group.options;g._shape=h;"id"in l&&(g.annotationId=l.id);"id"in k&&(g.groupId=k.id);b.raiseEvent(a,g,e.chartInstance,c)}},F,X,h;X=function(a,b,c,e,
g,l){this.options=a;this.attrs={};this.css={};this.bounds={};this.shared=b;this.snaps=c||{};this.annotations=g;this.items=b=[];this._idstore=e;a.id&&(this._id=a.id,e[a.id]=this);if(a=a.items)for(e=0,c=a.length;e<c;e+=1)b.push(new h(a[e],this)),b[e].chart=l};L(X.prototype,{scaleImageX:1,scaleImageY:1,scaleText:1,scaleValue:1,scaleValueComplement:1,scaleX:1,scaleY:1});X.prototype.setup=function(){var a=this.options,b=this.shared,c=this.getRenderer();c&&(this.isBelow=0!==l(a.showbelow,a.showbelowchart,
b.showbelow),this.useTracker=!this.isBelow&&c.graphics.trackerGroup&&this.shared.useTracker,this.raiseOwnEvents=b.interactionevents)};X.prototype.scale=function(){var a=this.options,b=this.shared,c=this.bounds,h=this.snaps,e=this.getRenderer(),k=b.rootxscale,t=b.rootyscale,p=c.xs=l(a.xscale,b.xscale,100)/100,m=c.ys=l(a.yscale,b.yscale,100)/100,z,w,F;z=(z=this.annotations)&&z.resetScale;e&&(z&&(this.scaleText=1),this.scaleText*=m,this.scaleImageX*=p,this.scaleImageY*=m,0!==l(a.autoscale,b.autoscale)&&
(p=l(a.origw,b.origw),m=l(a.origh,b.origh),p=e.config.width/p,m=e.config.height/m,e=0!==l(a.constrainedscale,b.constrainedscale),z=p<m?p:m,w=e?z:p,F=e?z:m,this.scaleValue=X.prototype.scaleValue*z,this.scaleValueComplement=X.prototype.scaleValueComplement*(e?z:p<m?m:p),this.scaleX=X.prototype.scaleX*w,this.scaleY=X.prototype.scaleX*F,c.xs*=w,c.ys*=F,k*=w,t*=F,"1"==g(a.scaletext,b.scaletext)&&(this.scaleText=X.prototype.scaleText*F),"1"==g(a.scaleimages,b.scaleimages)&&(this.scaleImageX=X.prototype.scaleImageX*
w,this.scaleImageY=X.prototype.scaleImageY*F)),c.x=R(g(a.x,a.xpos),k,0,h,this.isBelow).value+l(a.grpxshift,b.grpxshift,0),c.y=R(g(a.y,a.ypos),t,0,h,this.isBelow).value+l(a.grpyshift,b.grpyshift,0),this.xshift=l(a.xshift,b.xshift,0),this.yshift=l(a.yshift,b.yshift,0))};X.prototype.draw=function(){var a=this.getRenderer(),b=this.options,c=this.bounds,h=this.items,e=a&&a.graphics,g,k=this.wrapper,t,p=[],m,z,w=this.chart,F=w&&w.config||{},w=F.annRenderDelay,F=F.resize,n=function(){m=0;for(z=p.length;m<
z;m++)t=p[m],t.draw()},r=(g=this.annotations)&&g.resetScale;if(a){a.annotationRelativeLayer&&"axis"===a.annotationRelativeLayer?(g=e.axisTopGroup||e.datasetGroup,e=e.axisBottomGroup||e.datasetGroup):g=e=e.datasetGroup;k||(this.wrapper=k=a.components.paper.group("annotations"),g&&e&&(this.isBelow?k.insertBefore(e):k.insertAfter(a.graphics.datalabelsGroup||g)));r&&this.wrapper.attr({transform:""});this.wrapper.attr({x:0,y:0,visibility:l(b.visible,1)?"":"hidden"}).translate(c.x,c.y);m=0;for(z=h.length;m<
z;m+=1)t=h[m],t.scale(!0),t.queueDraw?t.queue():(p.push(t),t.setup());w&&!F?setTimeout(function(){n()},w):n();return this}};X.prototype.destroy=function(){for(var a=this.wrapper,b=this.items,c;c=b.shift();)c.destroy();a&&(this.wrapper=a.remove());this._idstore[this._id]===this&&delete this._idstore[this._id]};X.prototype.addItem=function(a,b,c){var e=this.items,g=this._idstore;this.chart=c;e.push(a=new h(a,this,g));b&&null!==this.getRenderer()&&(a.scale(),a.setup(),a.draw());return a};X.prototype.removeItem=
function(a){for(var b=this.items,c=b.length;c--;)if(a===b[c]._id)return b.splice(c,1)};X.prototype.getRenderer=function(){return this.annotations&&this.annotations.getRenderer()||null};h=function(a,b){var c=!1,e;this.options=a;this.chart=(this.group=b)&&b.chart;this.args=[];this.attrs={};this.attrsTracker={};this.style={};this.bounds={};this._idstore=b._idstore;a.id&&(this._id=a.id,b._idstore[a.id]=this);this.type=a.type&&a.type.toLowerCase&&a.type.toLowerCase();for(e in h.eventNames)"function"===
typeof a[e]&&(this[e]=a[e],c=!0);this.hasEvents=c;"function"===typeof a.onload&&(this.onload=a.onload)};b.extend(h.prototype,{getAbsoluteBounds:function(){var a=this.bounds,b=a.x1,c=a.y1,h=a.x2,e=a.y2,g=U(b,h),l=U(c,e),b=N(b,h)-g,c=N(c,e)-l;return{x:g,width:b,y:l,height:c,r:a.r,unscaled:{width:b/a.xs,height:c/a.ys}}},queue:function(){this.group.annotations.shapesToDraw.push(this)},scale:function(a){var b=this,c=b.group,e=c.bounds,k=b.bounds,t=b.options,p=c.snaps,m=g(t.x,t.xpos),z=g(t.y,t.ypos),w=
g(t.tox,t.toxpos),F=g(t.toy,t.toypos),n=k.xs=e.xs,e=k.ys=e.ys,r=l(t.xshift,c.xshift,0),B=l(t.yshift,c.yshift,0),K;K=function(h,e,g,l){h=R(h,e,g,l,c.isBelow);h.hasDynamicMacros&&a&&(b.queueDraw=!0);return h.value};b.hasDimension=!0;b.hasDimensionX=!0;b.hasDimensionY=!0;k.x1=K(m,n,0,p)+r;void 0===w?(b.hasDimension=!1,b.hasDimensionX=!1,k.x2=k.x1):k.x2=K(w,n,0,p)+r;k.y1=K(z,e,0,p)+B;void 0===F?(b.hasDimension=!1,b.hasDimensionY=!1,k.y2=k.y1):k.y2=K(F,e,0,p)+B;h.angularShapeTypes[b.type]&&(k.angles=S(K(t.startangle,
1,0,p),K(t.endangle,1,360,p)));k.r=K(t.radius,c.scaleValue,0,p)},setup:function(){var a=this.options,b=this.group,c=b.options,k=this.attrs,t=this.style,p=b.scaleValue,m=l(c.fillalpha,c.alpha,100),z=this.fillAlpha=g(a.fillalpha,a.alpha,m),w=this.fillColor=g(a.fillcolor,a.color,c.color),F=this.fillPattern=g(a.fillpattern&&a.fillpattern.toLowerCase&&a.fillpattern.toLowerCase(),c.fillpattern&&c.fillpattern.toLowerCase&&c.fillpattern.toLowerCase()),n=this.bordered=l(a.showborder,h.borderedShapeTypes[this.type],
!!e(a.bordercolor)),r=this.borderColor=g(a.bordercolor,c.bordercolor,w),m=this.borderAlpha=l(a.borderalpha,a.alpha,c.borderalpha,m),K=this.dashed=!!l(a.dashed,0),q=l(a.borderthickness,a.thickness,2)*p;this.link=g(a.link,c.link);this.shadow="1"==g(a.showshadow,c.showshadow);void 0===w&&(w=h.borderedShapeTypes[this.type]&&"none"||"#ff0000",void 0===r&&(r="#ff0000"));n&&q?(k.stroke=B(r,m),k["stroke-linecap"]="round",k["stroke-width"]=q,K&&(k["stroke-dasharray"]=[l(a.dashlen,5)*p,l(a.dashgap,3)*p])):
k.stroke="none";this.fillOptions={gradientUnits:"objectBoundingBox",color:w,alpha:z,ratio:g(a.fillratio,c.fillratio),angle:360-l(a.fillangle,0),radialGradient:"radial"===F};this.link&&(t.cursor="pointer",t._cursor="hand");k.visibility=l(a.visible,1)?"":"hidden";this.useTracker=b.useTracker;this.toolText=V(g(a.tooltext,c.tooltext));if(this.useTracker||this.link||this.toolText)L(this.attrsTracker,{stroke:M,fill:M}),this.link&&(this.attrsTracker.ishot=+new Date);this.raiseOwnEvents=b.raiseOwnEvents},
draw:function(){var a=this.getRenderer(),b=this.type,c=this.attrs,e=this.style,g=a&&a.components.paper,l=h.types[b]&&h.types[b].call&&h.types[b].call(this,a),k=h.imageShapeTypes[l],t=h.textShapeTypes[l],p=k||t||h.trackerShapeTypes[l],m=this.link||this.toolText,z=this.wrapper,b=this.tracker,w=a&&a.graphics.trackerGroup||this.group.wrapper,F=!1,n=b||z,r=h.eventNames,K=h.ownEvents,B,q;if(a){if(l){if(z)if(z.elemType!==l){if(this.ownEventsAttached){for(q in K)n["un"+q].apply(z,K[q]);this.ownEventsAttached=
!1}z=z.remove()}else if(this.hasEvents)for(B in r)(q=this[B])&&q.eventAttached&&(u(n.node,r[B],q),q.eventAttached=!1);k||(c.fill=P(this.fillOptions));z?z.attr(c).css(e):(this.args.push(this.group.wrapper),z=this.wrapper="text"===l?g[l].call(g,c,e,this.group.wrapper):g[l].apply(g,this.args).attr(c).css(e),z.elemType=l,z.data("annotation",this),F=!0,this.args.pop());!this.shadow||this.shadowAdded||k||t?z.shadow(this.shadowAdded=!1):z.shadow(this.shadowAdded=!0,N(this.borderAlpha,this.fillOptions.alpha)/
100);m?this.useTracker&&(b||(this.args.push(w),b=this.tracker=p?g.rect(0,0,0,0,0,w):g[l].apply(g,this.args),this.args.pop()),b.attr(c).attr(this.attrsTracker)):b&&(b=b.remove());n=b||z;if(this.raiseOwnEvents&&!this.ownEventsAttached){for(q in K)n[q].apply(z,K[q]);this.ownEventsAttached=!0}this.link&&n.click(a.linkedItems.linkClickFN,this);this.toolText&&(n.tooltip(this.toolText||""),this.group.wrapper.trackTooltip(!0));if(this.hasEvents)for(B in r)(q=this[B])&&!q.eventAttached&&(A(n.node,r[B],q,this),
q.eventAttached=!0);k||(b&&p&&(a=z.getBBox(),b.attr({x:a.x,y:a.y,width:a.width,height:a.height})),F&&this.onload&&this.onload(c))}return this}},destroy:function(){var a=this.wrapper,b=this.tracker,c=b||a,e=h.eventNames,g=h.ownEvents,l,k;if(a){if(this.ownEventsAttached){for(k in g)c["un"+k].apply(a,g[k]);this.ownEventsAttached=!1}if(this.hasEvents)for(l in e)(k=this[l])&&k.eventAttached&&(u(c.node,e[l],k),k.eventAttached=!1);b&&(this.tracker=b.remove());this.wrapper=a.remove()}this._idstore[this._id]===
this&&delete this._idstore[this._id]},getRenderer:function(){return this.group&&this.group.getRenderer()||null}});b.extend(h,{imageShapeTypes:{image:!0},angularShapeTypes:{circle:!0,arc:!0},textShapeTypes:{text:!0},trackerShapeTypes:{image:!0,text:!0},borderedShapeTypes:{path:!0,line:!0},eventNames:{onmouseover:a?"touchstart":"mouseover",onmouseout:"mouseout",onmousemove:a?"touchmove":"mousemove",onclick:"click"},ownEvents:{click:[function(a){w("annotationClick",this,a)}],hover:[function(a){w("annotationRollOver",
this,a)},function(a){w("annotationRollOut",this,a)}]},textAlignOptions:{left:"start",right:"end",center:"middle"},textVerticalAlignOptions:{top:"bottom",middle:"middle",bottom:"top"},textRotationOptions:{0:"0",1:"270",right:"90",cw:"90",left:"270",ccw:"270"},types:{rectangle:function(){var a=this.args,b=this.attrs,c=this.getAbsoluteBounds(),h=.5*c.width;c.r>h&&(c.r=h);a[0]=b.x=c.x;a[1]=b.y=c.y;a[2]=b.width=c.width;a[3]=b.height=c.height;a[4]=b.r=c.r;return"rect"},line:function(){var a=this.attrs,
b=this.bounds;this.args[0]=a.path=["M",b.x1,b.y1,"L",b.x2,b.y2];1===a["stroke-width"]&&(a["shape-rendering"]="crisp");a["stroke-width"]<q&&(this.attrsTracker["stroke-width"]=q);this.bordered&&this.dashed&&(this.attrsTracker["stroke-dasharray"]="solid");return"path"},path:function(){var a=this.attrs,b=this.bounds;this.args[0]=a.path=this.options.path;a.transform=["T",b.x1,b.y1,"S",b.xs,b.ys,b.x1,b.y1];1===a["stroke-width"]&&(a["shape-rendering"]="crisp");return"path"},polygon:function(){var a=this.args,
b=this.attrs,c=this.options,h=this.bounds,e=this.group,g=e.snaps;a[0]=R(c.sides,1,5,g,e.isBelow).value;a[1]=h.x1;a[2]=h.y1;a[3]=h.r;a[4]=R(c.startangle,1,0,g,e.isBelow).value;a[5]=0;b.polypath=a.slice(0);return"polypath"},circle:function(a){var b=this.args,c=this.attrs,h=this.options,e=this.bounds,l=a.config.width,t=a.config.height,p=this.group.scaleValueComplement,z=this.group.snaps,w=e.angles,F=this.group;a=e.r;g(h.radius)||(e.r=l<t?l*e.xs:t*e.ys,e.r=a=.3*e.r);h=R(h.yradius,p,a,z,F.isBelow).value;
this.fillPattern||(this.fillOptions.radialGradient=!0,this.fillPattern="radial");"radial"===this.fillPattern&&(this.fillOptions.cx=this.fillOptions.cy=.5);t=w.angle%360;if(!t&&a===h)return b[0]=c.cx=e.x1,b[1]=c.cy=e.y1,b[2]=c.r=e.r,"circle";t||(w.angle=0<w.angle?w.angle-.001:w.angle+.001,w.start=w.end-w.angle);t||t==w.angle||(t=360);l=w.start*m;w=w.end*m;t*=m;z=e.x1;F=e.y1;e=z+r(l)*a;p=F+E(l)*h;z+=r(w)*a;F+=E(w)*h;a=["M",e,p,"A",a,h,0,n(t)>=k?1:0,l<w?1:0,z,F,"Z"];b[0]=c.path=a;return"path"},arc:function(a){var b=
this.options,c=this.args,h=this.attrs,e=this.bounds,l=a.config.width;a=a.config.height;var k=this.group,t=k.scaleValue,p=e.angles;g(b.radius)||(e.r=l<a?l*e.xs:a*e.ys,e.r*=.3);e.innerR=R(b.innerradius,t,.8*e.r,this.group.snaps,k.isBelow).value;e.innerR>e.r&&(e.innerR+=e.r,e.r=e.innerR-e.r,e.innerR-=e.r);this.fillPattern||(this.fillOptions.radialGradient=!0,this.fillPattern="radial");"radial"===this.fillPattern&&(this.fillOptions.cx=this.fillOptions.cy=.5);c[0]=e.x1;c[1]=e.y1;c[2]=e.r;c[3]=e.innerR;
c[4]=p.end*m;c[5]=p.start*m;h.ringpath=c.slice(0);return"ringpath"},text:function(a){var b=this.args,c=this.style,e=this.attrs,k=this.group,t=this.bounds,p=this.options,m=this.getAbsoluteBounds(),z=g(p.align,k.options.textalign,"center").toLowerCase(),w=g(p.valign,k.options.textvalign,"middle").toLowerCase(),F=V(g(p.text,p.label)),n=a.linkedItems.smartLabel,r=l(p.wrap,k.options.wraptext,1),B,q,P=g(p.rotatetext,k.options.rotatetext,"0").toLowerCase(),P=h.textRotationOptions[P],R="0"!==P?"y":"x",u=
a.config.orphanStyles;a=L({},u.defaultStyle.style||{});u=k.id&&u[k.id.toLowerCase()]||Z;a=L(a,u.style);var u=parseFloat(a.fontSize),v=g(p.font,k.options.font,a.fontFamily),k=l(p.fontsize,k.options.fontsize,u)*k.scaleText;r&&(B=l(p.wrapwidth,this.hasDimensionX?m.width/t.xs:void 0),q=l(p.wrapheight,this.hasDimensionY?m.height/t.ys:void 0),B&&(B*=t.xs),q&&(q*=t.ys));c.fontFamily=v;c.fontWeight=l(p.bold,p.isbold,0)?"bold":"normal";l(p.italic,p.isitalic,0)&&(c.fontStyle="italic");p.bgcolor&&(!e["text-bound"]&&
(e["text-bound"]=[]),e["text-bound"][0]=T(p.bgcolor));p.bordercolor&&(!e["text-bound"]&&(e["text-bound"]=[]),e["text-bound"][1]=T(p.bordercolor),e["text-bound"][2]=l(p.borderthickness,1),e["text-bound"][3]=l(p.padding,1));p.fontcolor&&(e.fill=T(p.fontcolor),this.fillOptions&&(this.fillOptions.color=e.fill));c.fontSize=k+"px";k===u?c.lineHeight=a.lineHeight:K(c);e["text-anchor"]=h.textAlignOptions[z]||h.textAlignOptions.center;n.setStyle(c);c=n.getSmartText(F,B,q,!1);e["vertical-align"]=h.textVerticalAlignOptions[w]||
h.textVerticalAlignOptions.middle;e["text-anchor"]===h.textAlignOptions.left?m[R]+=l(p.leftmargin,0):e["text-anchor"]===h.textAlignOptions.center&&(m[R]+=.5*l(p.leftmargin,0));"0"!==P&&(e.rotation=[parseFloat(P),m.x,m.y]);b[0]=e.x=m.x;b[1]=e.y=m.y;b[2]=e.text=c.text;c.tooltext&&(e.title=c.tooltext);delete e.stroke;delete e["stroke-weight"];return"text"},image:function(a){var b=this,c=b.style,h=a.config.width,k=a.config.height;a=b.options;var t=b.attrs,m=b.args,z=e(a.url),w=b.group.scaleImageX*g(Number(a.xscale),
100)/100,F=b.group.scaleImageY*g(Number(a.yscale),100)/100,n=b.getAbsoluteBounds(),r={width:1,height:1},B;if(!z)return m[0]=t.x=n.x,m[1]=t.y=n.y,m[2]=t.width=n.width,m[3]=t.height=n.height,m[4]=t.r=n.r,"rect";B=new C.Image;B.onload=function(){r=p("none","top","left",100,0,h,k,B);delete r.x;delete r.y;r=L(r,{width:(b.hasDimensionX?n.unscaled.width:r.width)*w,height:(b.hasDimensionY?n.unscaled.height:r.height)*F});setTimeout(function(){var a,d,h;if(a=b.wrapper){a.attr(r);if(d=b.tracker)h=a.getBBox(),
d.attr({x:h.x,y:h.y,width:h.width,height:h.height});a.css({opacity:c.opacity=N(l(b.fillAlpha,b.borderAlpha),b.borderAlpha)/100})}b.onload&&b.onload(r)},0)};B.src=z;m[0]=t.src=z;m[1]=t.x=n.x;m[2]=t.y=n.y;m[3]=t.width=(b.hasDimensionX?n.unscaled.width:r.width)*w;m[4]=t.height=(b.hasDimensionY?n.unscaled.height:r.height)*F;c.opacity=N(l(b.fillAlpha,b.borderAlpha),b.borderAlpha)/100;delete t.stroke;delete t.fill;delete t["stroke-linecap"];return"image"}}});F=function(){this.groups=[];this._idstore={};
this._options={}};J.Annotations=F;b.extend(F.prototype,{reset:function(a,b,c){var h=this.groups,e,g;this.chart=c;this.clear();if(g=this.setSnapPoints()){e={};for(var l in g)switch(typeof g[l]){case "object":case "function":e["-$"+l]=e["$"+l]=e["+$"+l]=g[l];break;default:e["$"+l]=e["+$"+l]=g[l],e["-$"+l]=-1*g[l]}e=this._literals=e}b&&(this._options=b);if(a&&a.groups&&h)for(g=0;g<a.groups.length;g+=1)h.push(new X(a.groups[g],b,e,this._idstore,this,c)),h[g].chart=c},getRenderer:function(){return this._renderer},
addGroup:function(a){var b=this.getRenderer();this.groups.push(a=new X(a,this._options,this._literals,this._idstore,this,this.chart));b&&(a.setup(),a.scale(),a.draw());return a},addItem:function(a,h,c){var e,g=this.getRenderer();"string"===typeof a?e=this._idstore[a]:(c=h,h=a);if(e&&e.addItem){if(!g&&c){b.raiseWarning(this,"04031411430","run","Annotations~addItem()","Cannot draw the shapeif the group has not been drawn. Use Annotations~draw() to draw the group and pass the renderer to it.");return}a=
e.addItem(h,c)}else a=this.addGroup({}).addItem(h,c);return a},draw:function(a,b){var c=this.groups,h,e,g;if(c&&(this._renderer=a||this._renderer))for(this.resetScale=b,e=0,g=c.length;e<g;e++)h=c[e],h.setup(),h.scale(),h.draw()},clear:function(){var a=this.groups,b;if(a){for(;b=a.shift();)b.destroy();this.shapesToDraw=[]}},dispose:function(){var a;this.disposing=!0;this.clear();for(a in this)delete this[a];this.disposed=!0},hide:function(a){if(a=this._idstore[a])return a.attrs.visibility="hidden",
a.wrapper&&a.wrapper.hide(),a},show:function(a){if(a=this._idstore[a])return a.attrs.visibility="",a.wrapper&&a.wrapper.show(),a},update:function(a,b,c){a=this._idstore[a];var h;if(a&&b){if("object"===typeof b)for(h in b.id&&delete b.id,b.type&&delete b.type,b)a.options[(h+"").toLowerCase()]=b[h]+"";else a.options[(b+"").toLowerCase()]=c+"";a.wrapper&&(a.scale(),a.setup(),a.draw());return a}},destroy:function(a){var b=this._idstore[a],c=b.group;b&&"function"===typeof b.destroy&&(c&&c.removeItem(a),
b.destroy())},shapesToDraw:[],setSnapPoints:function(){var a=this.chart,b=a.config,c=a.components,h=c.legend,e=c.gradientLegend,g=c.caption.config,c=c.subCaption.config,l=g.width||0,k=c.width||0,t,p=this.datasetFunction.bind(a),m=this.xAxisFunction.bind(a),z=this.yAxisFunction.bind(a);"end"===g.align?(a=g.x-l,t=g.x-k):"start"===g.align?a=t=g.x:(a=g.x-l/2,t=g.x-k/2);h=b.gLegendEnabled?e.conf:h.config;return{canvasendx:b.canvasRight,canvasendy:b.canvasBottom,canvasheight:b.canvasHeight,canvasstartx:b.canvasLeft,
canvasstarty:b.canvasTop,canvaswidth:b.canvasWidth,canvascenterx:b.canvasCenterX||b.canvasLeft+(b.canvasRight-b.canvasLeft)/2,canvascentery:b.canvasCenterY||b.canvasTop+(b.canvasBottom-b.canvasTop)/2,chartcenterx:b.width/2,chartcentery:b.height/2,chartstartx:0,chartstarty:0,chartendx:b.width,chartendy:b.height,chartheight:b.height,chartwidth:b.width,chartleftmargin:b.marginLeft,chartrightmargin:b.marginRight,chartbottommargin:b.marginBottom,charttopmargin:b.marginTop,captionendx:a+g.width,captionendy:g.y+
g.height,captionheight:g.height,captionstartx:a,captionstarty:g.y,captionwidth:l,subcaptionendx:t+c.width,subcaptionendy:c.y+c.height,subcaptionheight:c.height,subcaptionstartx:t,subcaptionstarty:c.y,subcaptionwidth:k,legendendx:h.xPos+h.width,legendendy:h.yPos+h.height,legendheight:h.height,legendstartx:h.xPos,legendstarty:h.yPos,legendwidth:h.width,dataset:p,xaxis:m,yaxis:z,gaugestartx:b.gaugeStartX,gaugestarty:b.gaugeStartY,gaugeendx:b.gaugeEndX,gaugeendy:b.gaugeEndY,gaugecenterx:b.gaugeCenterX,
gaugecentery:b.gaugeCenterY,gaugestartangle:b.gaugeStartAngle,gaugeendangle:b.gaugeEndAngle,gaugeradius:b.gaugeRadius,plotwidth:b.plotWidth,plotsemiwidth:b.plotSemiWidth}},datasetFunction:function(a,b){var c=this.components.dataset,h,e,g,l,k;l=this.is3D;if(!c||!c.length)return 0;isNaN(a[0])?h=0:(h=Number(a[0]),a=a.slice(1));e=a[0];if("set"===e){isNaN(a[1])?(g=0,a=a.slice(1)):(g=Number(a[1]),a=a.slice(2));e=a[0];k=(g=c[h]&&c[h].components.data[g])&&(g.graphics.element||g.graphics.hotElement||g.graphics.upperBoxElem);
c=c[h]&&c[h].graphics.sharedAnchor;!k&&c&&g._polyPath&&(k=c.element.attr(g._polyPath));if(!k)return 0;l=b&&l?k._getBBox2():k.getBBox();g=z(e,l)}return g},xAxisFunction:function(a){var b=this.components&&this.components.xAxis&&this.components.xAxis[0],c,h;if(!b)return 0;h=a[0];if("label"===h){isNaN(a[1])?(c=0,a=a.slice(1)):(c=Number(a[1]),a=a.slice(2));h=a[0];a=b._getLabelElement(c);if(!a)return 0;a=a.getBBox();c=z(h,a)}return c},yAxisFunction:function(a){var b=this.components&&this.components.yAxis,
c,h;if(!b||!b.length)return 0;isNaN(a[0])?c=0:(c=Number(a[0]),a=a.slice(1));c=b[c];if(!c)return 0;b=a[0];if("label"===b){isNaN(a[1])?(h=0,a=a.slice(1)):(h=Number(a[1]),a=a.slice(2));b=a[0];a=c._getLabelElement(h);if(!a)return 0;a=a.getBBox();h=z(b,a)}return h}});b.core.addEventListener("beforeinitialize",function(a){"javascript"===a.sender.options.renderer&&(a.sender.annotations=new F)});b.core.addEventListener("disposed",function(a){a.sender.annotations&&a.sender.annotations.dispose()});b.addEventListener("internal.animationComplete",
function(a){a=a.sender;var b=a.annotations,c=b&&b.shapesToDraw,h=c&&c.length,e,g;a=a.apiInstance.config;var l=a.annRenderDelay,k=a.resize,t=(new Date).getTime(),p,m=function(){for(g=0;g<h;g++)e=c[g],e.draw()};if(h){for(g=0;g<h;g++)e=c[g],e.queueDraw=!1,e.scale(),e.setup();p=(new Date).getTime();l&&!k?setTimeout(function(){m();b.shapesToDraw=[]},l-(p-t)):(m(),b.shapesToDraw=[])}a.resize=!1});v.addEventListener("rendered",function(a,b){if("javascript"===b.renderer){var c=a.sender;c.apiInstance&&(c.apiInstance.showAnnotation||
(c.apiInstance.showAnnotation=function(){c.annotations.show.apply(c.annotations,arguments)}),c.apiInstance.hideAnnotation||(c.apiInstance.hideAnnotation=function(){c.annotations.hide.apply(c.annotations,arguments)}))}})}]);Q.register("module",["private","modules.renderer.jpegtopdf",function(){var b=this.window,v=b.btoa,J=b.atob;this.hcLib.JpegToPdf=function(b,H){var A=[],u=0,a=b||500,O=H||500,q,M,U;q=function(a){u+=a.length+1;A.push(a)};this.addImage=function(a){a=/base64,(.+?)$/g.exec(a);U=J(a[1])};
M=function(){var b=[],v,r;q("%PDF-1.7");b[1]=u;q("1 0 obj");q("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]");q("endobj");b[4]=u;q("4 0 obj");q("<< /Length 36>>");q("stream");q("q "+O+" 0 0 "+a+" 0 0 cm /Im3 Do Q");q("endstream");q("endobj");b[5]=u;q("5 0 obj");q("<</Type /Page /Parent 2 0 R /MediaBox [0 0 "+O+" "+a+"] /Contents [4 0 R ] /Resources <</ProcSet 1 0 R /Font <<>> /XObject <</Im3 3 0 R >> >> >>");q("endobj");b[3]=u;q("3 0 obj");q("<</Type /XObject /Subtype /Image /Width "+O+" /Height "+
a+" /ColorSpace /DeviceRGB /BitsPerComponent 8 /Filter /DCTDecode /Length "+U.length+">>");q("stream");q(U);q("endstream");q("endobj");b[2]=u;q("2 0 obj");q("<</Type /Pages /Kids [5 0 R ] /Count 1>>");q("endobj");b[6]=u;q("6 0 obj");q("<</Type /Catalog /Pages 2 0 R >>");q("endobj");v=u;q("xref");q("0 7");q("0000000000 65535 f ");for(r=1;6>=r;r++)q(("0000000000"+b[r]).slice(-10)+" 00000 n ");q("trailer");q("<</Size 7 /Root 6 0 R >>");q("startxref");q(v);q("%%EOF");return A.join("\n")};this.getDataUrl=
function(){return"data:application/pdf;base64,"+v(M())}}}]);Q.register("module",["private","modules.exporter.batch-export",function(){var b=this.window,v=this.hcLib,J=Math.max,C=b.Image,H=v.drawSvgOnCanvas,A=v.downloadCharts,u=v.browserDetails,a=v.pluckNumber,O=v.pluck,q=v.JpegToPdf,M=b.navigator.userAgent.match(/ (iPad|iPhone|iPod)/g),U=v.createExportActionOldString,N=v.createVersionNumberString,E=v.cacheAllImages,r=v.replaceImagesWithNonDataUrl,k=v.logCharts,m=v.DEFAULT_EXPORT_URL,n=v.DEFAULT_LOG_URL,
L=v.EXPORTACTION,g=v.EXPORTFORMAT,l=v.EXPORTMODE,B=v.LOGMODE;Q.batchExport=function(e){var v=e||{},p,T,K,t,Z,P=0,S=!1,z,R,w,F={exportTargetWindow:O(v.exportTargetWindow,M?"_blank":"_self"),exportAction:function(){var a;return v.exportAction&&"string"===typeof v.exportAction?(a=v.exportAction.toLowerCase(),0<=[L.DOWNLOAD,L.SAVE,L.DOWNLOADSAVE].indexOf(a)?a:L.DOWNLOAD):L.DOWNLOAD}(),exportFileName:O(v.exportFileName,"FusionCharts"),exportHandler:O(v.exportHandler,m),exportParameters:O(v.exportParameters,
""),exportFormat:O(v.exportFormat,g.PNG),exportCallback:O(v.exportCallback,""),exportAtClientSide:a(v.exportAtClientSide,1),exportMode:function(){var a;"undefined"!==typeof v.exportAtClientSide&&(a={1:l.AUTO,0:l.SERVER}[v.exportAtClientSide]);a=v.exportMode||a||l.AUTO;return a=a.toLowerCase()}(),logEnabled:a(v.logEnabled,0),logMode:function(){var a=v.logMode;return"undefined"!==typeof a&&"string"===typeof a&&a.toUpperCase()in B?B[a.toUpperCase()]:B.AUTO}(),logHandler:O(v.logHandler,n)};(function(){var a,
c;a=F.exportMode;c={};c[l.CLIENT]=1;c[l.AUTO]=0;c[l.SERVER]=0;F.exportatclientside=c[a]})();var X=F.exportFormat.toLowerCase(),h=0,d=0,f,c=b.document,D=Q.items,G=function(a){return a.match(/http:\/\/|https:\/\//)&&/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(a)[2]&&b.location.hostname!==/(http:\/\/|https:\/\/)([^\/\:]*)/.exec(a)[2]?!1:!0},aa=function(c,d,b,h){var e=c,f=d;isNaN(e)&&(e=a(d,h)*(b/h));isNaN(f)&&(f=a(c,b)*(h/b));return{width:e,height:f}},Ra=function(a,c,d){var b,h;d=d||F.exportAction;b=F.exportAction;
h=U(F.exportAction);d=["exportfilename="+F.exportFileName,"exportformat="+F.exportFormat,"exportaction="+h,"exportactionnew="+b,"configuredexportaction="+d,"exportparameters="+F].join("|");b=!!F.logEnabled;F.logMode===B.CLIENT&&(b=!1);return{charttype:"combined",stream_type:a||"",stream:c||"",is_single_export:!1,is_full_version:!1,version:N(),user_time_zone:-(new Date).getTimezoneOffset(),log_enabled:b,parameters:d}},Ia=function(){return{chartType:"combined",isSingleExport:!1,isFullVersion:!1,exportAction:F.exportAction,
userTimeZone:-(new Date).getTimezoneOffset(),exportFileName:[F.exportFileName,F.exportFormat].join("."),exportFormat:F.exportFormat,version:N()}},sa=function(a){var c;c="undefined"!==typeof b.btoa&&("Chrome"===u.name||"Firefox"===u.name||"Edge"===u.name||"ie"===u.name);if(F.exportMode===l.CLIENT||F.exportMode===l.AUTO&&c){if(F.exportAction===L.DOWNLOAD||F.exportAction===L.DOWNLOADSAVE)c=F.exportMode===l.AUTO?Ra("IMAGE-DATA",a):null,A("url",a,F.exportFileName+"."+X,c,F);F.exportAction===L.SAVE||F.exportAction===
L.DOWNLOADSAVE?(c=F.exportAction,F.exportAction===L.DOWNLOADSAVE&&(F.exportAction=L.SAVE),c=Ra("IMAGE-DATA",a,c),F.paper={width:void 0,height:void 0},F.fusionCharts={},A(null,null,null,c,F),delete F.paper,delete F.fusioncharts,F.logMode===B.CLIENT&&k(Ia(),F)):F.logMode!==B.SERVER&&k(Ia(),F)}else c=Ra("IMAGE-DATA",a),F.paper={width:void 0,height:void 0},F.fusionCharts={},A(null,null,null,c,F),delete F.paper,delete F.fusioncharts,F.logMode===B.CLIENT&&k(Ia(),F)},wa=function(a){var c;H(a,K,this.x,this.y,
this.width,this.height,function(){--P;if(0===P&&S)switch(X){case "png":sa(K.toDataURL("image/png"));break;case "jpeg":sa(K.toDataURL("image/jpeg"));break;case "pdf":c=new q(h,d);c.addImage(K.toDataURL("image/jpeg"));sa(c.getDataUrl());break;default:sa(K.toDataURL("image/png"))}})};e=function(b){var e=v.background;K=c.createElement("canvas");K.id="newCanvas";K.width=d;K.height=h;K.style.border="1px solid black";t=K.getContext("2d");t.fillStyle=e&&e.bgColor||"#ffffff";t.fillRect(0,0,d,h);e&&e.bgImage&&
G(e.bgImage)?(R=new C,R.src=e.bgImage,R._userData=e,t.globalAlpha=a(e.bgImageAlpha,100)/100,R.onload=function(){var c=this._userData,d=a(c.bgImageX,0),h=a(c.bgImageY,0),e=aa(Number(c.bgImageWidth),Number(c.bgImageHeight),this.width,this.height),c=e.width,e=e.height;try{t.drawImage(this,d,h,c,e)}finally{t.globalAlpha=1,b()}},R.onerror=function(){b()}):b()};var ca=function(a,c){p=Q.items[a];Z=p.jsVars.instanceAPI.components.paper.toSVG(!0);Z=Z.replace(/NS\d+:/gi,"xlink:");Z=Z.replace(/(\sd\s*=\s*["'])[M\s\d\.]*(["'])/ig,
"$1M 0 0 L 0 0$2");Z=Z.replace(/(xlink:title\s*=\s*)['"].*["']/ig,"");P+=1;(function(){var a=Z;E(a,!1,function(){a=r(a);wa.call(c?c:p,a)})})()};if(u.hasCanvas){(function(){var a=v.charts,c,d,b,h;T=[];if(a)for(b in a)a.hasOwnProperty(b)&&(c=D[a[b].id])&&(d=a[b],h=aa(Number(d.width),Number(d.height),c.width,c.height),T.push({id:c.id,width:h.width,height:h.height,x:d.x,y:d.y}));else for(b in D)D.hasOwnProperty(b)&&(c=D[b],T.push({id:c.id,width:c.width,height:c.height}))})();f=0;for(z=T.length;f<z;f+=
1)w=T[f],w.x=a(w.x,5),w.y=a(w.y,h+5),w.height=a(w.height),w.width=a(w.width),h=J(h,w.y+w.height),d=J(d,w.x+w.width);h=v.imageHeight||h+5;d=v.imageWidth||d+5;e(function(){return function(){f=0;for(z=T.length;f<z;f+=1)w=T[f],f===z-1&&(S=!0),ca(w.id,w)}}())}}}]);Q.register("module",["private","modules.exporter.main",function(){var b=this,v=b.window,J=b.hcLib,C=J.extend2,H=J.EXPORTACTION,A=J.EXPORTMODE,u=J.EXPORTFORMAT,a=J.LOGMODE,O=J.BLANKSTRING,q=J.graphics.RGBtoHex,M=/\s\bx\b=['"][^'"]+?['"]/ig,U=
/\s\by\b=['"][^'"]+?['"]/ig,N=v.document,E=J.JpegToPdf,r=J.browserDetails;J.exportChart=function(k){var m=this,n=m.config,L=m.components,g=m.chartInstance,l=J.svgStrToDataUrl,B=J.createExportActionOldString,e=J.cacheAllImages,V=J.makeImageUrlsAbsolute,p=J.embedImagesWithNonDataURL,T=J.replaceImagesWithNonDataUrl,K=J.hasUndownloadableImage,t=J.downloadCharts,Z=J.logCharts,P=n.exportOption;k="object"===typeof k&&function(a){var c={},d;for(d in a)c[d.toLowerCase()]=a[d];return c}(k)||{};var S=C(C({},
P),k),z=(S.exportformat||u.PNG).toLowerCase(),R=S.exporthandler,w=S.exportaction,F=S.exporttargetwindow||O,X=S.exportfilename,h=S.exportparameters,d=S.exportcallback,f=S.exportwithimages,c=S.exportmode,D=S.logenabled,G=S.loghandler,aa=S.logmode,Ra,Ia,sa;if(!P||!P.enabled||!R)return!1;b.raiseEvent("beforeExport",S,g,void 0,function(){var k=g.id,P=n.caption,C=n.subcaption,qa=L.paper,va,ha,ra,ka=J.isCanvasElemSupported(),na={DOMId:k,height:qa.height,width:qa.width,fileName:X+"."+z,statusCode:void 0,
statusMessage:void 0,notice:void 0},da={exportAction:w,exportTargetWindow:F,exportCallback:d,fusionCharts:m,paper:qa,chartId:k,exportHandler:R,logEnabled:D,logMode:aa,logHandler:G},oa=J.createVersionNumberString,Y=function(c,d,b){var e,f;b=b||w;e=w;f=B(w);b=["exportfilename="+X,"exportformat="+z,"exportaction="+f,"exportactionnew="+e,"configuredexportaction="+b,"exportparameters="+h].join("|");e=!!D;aa===a.CLIENT&&(e=!1);return{charttype:g.chartType(),stream_type:c||"",stream:d||"",meta_bgColor:S.bgcolor||
"",meta_bgAlpha:S.bgalpha||"1",meta_DOMId:g.id,meta_width:qa.width||n.width,meta_height:qa.height||n.height,chart_caption:P,chart_sub_caption:C,is_single_export:!0,is_full_version:!1,version:oa(),user_time_zone:-(new Date).getTimezoneOffset(),log_enabled:e,parameters:b}},za=function(){var a=w;return{chartType:g.chartType(),chartCaption:P,chartSubCaption:C,isSingleExport:!0,isFullVersion:!1,exportAction:a,userTimeZone:-(new Date).getTimezoneOffset(),exportFileName:[X,z].join("."),exportFormat:z,version:oa()}},
fa=function(a){a=Y(u.SVG,a);t(null,null,null,a,da)},Aa=function(a){var c,d,b,h=K(a);r.hasCanvas&&"undefined"!==typeof v.btoa?(c=N.createElement("canvas"),c.width=qa.width,c.height=qa.height,a=p(a),ra=T(ra),h||z===u.SVG?(b=Y(u.SVG,a),t(null,null,null,b,da)):J.drawSvgOnCanvas(ra,c,0,0,qa.width,qa.height,function(){var a;switch(z){case u.PNG:a=c.toDataURL("image/png");break;case u.JPEG:a=c.toDataURL("image/jpeg");break;case u.PDF:d=new E(qa.height,qa.width);d.addImage(c.toDataURL("image/jpeg"));a=d.getDataUrl();
break;default:a=c.toDataURL("image/jpeg")}b=Y("IMAGE-DATA",a);t(null,null,null,b,da)})):fa(a)},ua=function(a,c,d){var b;b=N.createElement("canvas");b.width=qa.width;b.height=qa.height;J.drawSvgOnCanvas(ra,b,0,0,qa.width,qa.height,function(){switch(a){case u.PNG:c(a,b.toDataURL("image/png"),X,d);break;case u.JPEG:c(a,b.toDataURL("image/jpeg"),X,d);break;case u.PDF:c(a,b.toDataURL("image/jpeg"),X,d);break;default:c(a,b.toDataURL("image/jpeg"),X,d)}})},ia=function(a,c,d){z===u.SVG?(a=l(a),d(a,c)):(a=
function(a,b){d(b,c)},ua(z,a,c))},xa=function(a,c,d){var b;b=X+"."+z;z===u.SVG?(a=l(a),va=d===A.AUTO?Y("IMAGE-DATA",a):null,t("url",a,b,va,c)):(b=function(a,c,b,h){b=b+"."+a;a===u.PDF&&(a=new J.JpegToPdf(qa.height,qa.width),a.addImage(c),c=a.getDataUrl());va=d===A.AUTO?Y("IMAGE-DATA",c):null;t("url",c,b,va,h)},ua(z,b,c))},k=function(){var a=0;Ra=[];Ia.replace(/[^\r\n]+/g,function(c){Ra[a]=[];Ra[a]=c.split(",").map(function(a){return a.replace(/"/g,"")});a+=1})},ja=function(){return"data:application/vnd.ms-excel;base64,"+
function(a){return v.btoa(v.unescape(encodeURIComponent(a)))}("<html xmlns:o='urn:schemas-microsoft-com:office:office'xmlns:x='urn:schemas-microsoft-com:office:excel'xmlns='http://www.w3.org/TR/REC-html40'><head>\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head><body>"+function(){var a,c,d,b,h,
e;if(!Ra.length)return"";d=0;for(e=Ra.length;d<e;d+=1)if(0===d){a="<thead valign='top'><tr>";b=0;for(h=Ra[d].length;b<h;b+=1)a+="<th>"+Ra[d][b]+"</th>";a+="</tr></thead>";c="<tbody>"}else{c+="<tr>";b=0;for(h=Ra[d].length;b<h;b+=1)c+="<td>"+Ra[d][b]+"</td>";c+="</tr>"}return"<table align='center' >"+a+(c+"</tbody>")+"</table>"}()+"</body></html>")},ya=function(a){b.raiseEvent("exportDataReady",a,g)},W=function(c){c===a.CLIENT&&Z(za(),da)};if("xls"===z){if("undefined"!==typeof v.btoa)Ia=g.getCSVData();
else return b.raiseEvent("exportCancelled",S,g),!1;ya();k();sa=ja();if(ka="undefined"!==typeof v.btoa&&("Chrome"===r.name||"Firefox"===r.name||"Edge"===r.name||"ie"===r.name)){if(w===H.DOWNLOAD||w===H.DOWNLOADSAVE)t("url",sa,X+"."+z,null,da),b.raiseEvent("exported",na,g);w===H.SAVE||w===H.DOWNLOADSAVE?(ka=w,w===H.DOWNLOADSAVE&&(w=H.SAVE),va=Y("IMAGE-DATA",sa,ka),t(null,null,null,va,da),W(aa)):aa!==a.SERVER&&Z(za(),da)}else va=Y("IMAGE-DATA",sa),t(null,null,null,va,da),W(aa)}else L.chartMenuBar&&L.chartMenuBar.group.attr("visibility",
"hidden"),ha=qa.toSVG(f),ra=qa.toSVG(f&&ka),L.chartMenuBar&&L.chartMenuBar.group.attr("visibility","visible"),ha=ha.replace(/(\sd\s*=\s*["'])[M\s\d\.]*(["'])/ig,"$1M 0 0 L 0 0$2"),ha=ha.replace(/NS\d+:/gi,"xlink:"),ra=ra.replace(/NS\d+:/gi,"xlink:"),ra=ra.replace(/(\sd\s*=\s*["'])[M\s\d\.]*(["'])/ig,"$1M 0 0 L 0 0$2"),ra=ra.replace(/(xlink:title\s*=\s*)['"].*["']/ig,""),ha=ha.replace(/[\w\-]+\=\"undefined\"/ig,""),ha=ha.replace(/(xlink:title\s*=\s*)['"].*["']/ig,""),ha=ha.replace(/rgba\(([^\)]+)\)/ig,
function(a,c){return"#"+new q(c.split(","))}),ha=ha.replace(/<svg[^>]+/i,function(a){a.match(/height/i)||!qa.height&&!n.height||(a+=' height="'+(qa.height||n.height)+'"');a.match(/width/i)||!qa.width&&!n.width||(a+=' width="'+(qa.width||n.width)+'"');return a}),ha=ha.replace(/(([\w]+\-)?opacity\s*=\s*)['"][\d\.]+e[\-\+][\d]+["']/ig,'$1"0.001"'),ha=ha.replace(/(([\w]+\-)?opacity\s*:\s*)[\d\.]+e[\-\+][\d]+/ig,"$10.001"),ha=ha.replace(/<text[^\>]+/ig,function(a){a=a.replace(/stroke\=[\"\']([a-z0-9\#]+)?[\"\']/ig,
"");a=a.replace(/stroke\s*\:\s*([a-z0-9\#]+)?;?/ig,"");a=a.replace(/stroke-width\=[\"\']([a-z0-9\#]+)?[\"\']/ig,"");a=a.replace(/stroke-width\s*\:\s*([a-z0-9\#]+)?;?/ig,"");a=a.replace(/stroke-opacity\=[\"\']([a-z0-9\#]+)?[\"\']/ig,"");a=a.replace(/stroke-opacity\s*\:\s*([a-z0-9\#]+)?;?/ig,"");a=a.replace(/(<text[^\>]+fill\=)([\"\'][^\"\']+[\"\'])([^\>]+)/ig,'$1$2 stroke=$2 stroke-width="0.2"$3');return a=a.replace(/(<text[^\>]+fill-opacity\=)([\"\'][^\"\']+[\"\'])([^\>]+)/ig,"$1$2 stroke-opacity=$2 $3")}),
ha=ha.replace(/<(\b[^<>s\s]+\b)[^\>]+?opacity\s*=\s*['"][^1][^\>]+?(\/>|>[\s\r\n]*?<\/\1>)/ig,function(a,c){var d=M.exec(a)||O,b=U.exec(a)||O;return a+"<"+c+d+b+' opacity="1" stroke-opacity="1" fill="#cccccc" stroke-width="0" r="0" height="0.5" width="0.5" d="M 0 0 L 1 1" />'}),ha=V(ha),ra=V(ra),ka=c===A.SERVER,e(ha,ka,function(){va=Y(u.SVG,ha);ya(va);va=null;var d,h="undefined"!==typeof v.btoa&&("Chrome"===r.name||"Firefox"===r.name||"Edge"===r.name||"ie"===r.name),e=K(ha);if((c===A.CLIENT||c===
A.AUTO&&!e)&&h){ra=T(ra);if(w===H.DOWNLOAD||w===H.DOWNLOADSAVE)xa(ra,da,c),b.raiseEvent("exported",na,g);w===H.SAVE||w===H.DOWNLOADSAVE?(d=w,w===H.DOWNLOADSAVE&&(w=H.SAVE),ia(ra,da,function(a,c){va=Y("IMAGE-DATA",a,d);t(null,null,null,va,c);W(aa)}),b.raiseEvent("exported",na,g)):aa!==a.SERVER&&Z(za(),da)}else c===A.AUTO?(Aa(ha),W(aa)):c===A.SERVER&&(fa(ha),W(aa))})},function(){b.raiseEvent("exportCancelled",S,g)})}}]);Q.register("module",["private","modules.renderer.js-component-toolbox",function(){function b(a){"number"===
typeof a&&(a="'"+a+"'");return a.split("").reduce(function(a,b){a=(a<<5)-a+b.charCodeAt(0);return a&a},0)}function v(a,b){var e;if(a.getBBox)return a;e=a.getBoundingClientRect();a.getBBox=function(){return{x:b.x,y:b.y,width:e.right-e.left,height:e.bottom-e.top,isArtificial:!0}};return a}function J(a,b,e){var g,l;for(g in a)l=a[g],void 0!==l&&null!==l&&(e?b[g]||(b[g]=l):b[g]=l)}function C(){this.pool={}}function H(a,b){var e,g,l;g=this.elemTypes={KEY_RECT:"rect",KEY_TEXT:"text",KEY_GROUP:"group",KEY_SCROLLER:"scoller",
KEY_BUTTON:"button",KEY_PATH:"path",KEY_DIV:"div"};l=this.cachedState={};e=this.actions={};e[g.KEY_DIV]=function(){return O.createElement("div")};e[g.KEY_RECT]=function(b){return a.paper.rect(b)};e[g.KEY_TEXT]=function(b){return a.paper.text(b)};e[g.KEY_GROUP]=function(b,e){return a.paper.group(b,e)};e[g.KEY_SCROLLER]=function(b,e,g,l,h,d,f){return a.paper.scroller(b,e,g,l,h,d,f)};e[g.KEY_BUTTON]=function(b,e,g,l,h,d){return a.paper.button(b,e,g,l,h,d)};e[g.KEY_PATH]=function(b,e){return a.paper.path(b,
e)};g=this.cache=l[b]||(l[b]={});this._hideRecursive(g.pool);g.initialized||(e=g.pool=(new C).pool,e._tmp=b,g.initialized=!0)}var A=this.hcLib,u=A.hasTouch,a=A.Raphael,O=this.window.document,q=A.graphics,M=q.convertColor,U=q.getLightColor,N=q.rawRGBtoHEX,E=A.pluckNumber,r=A.pluck,k={},m={},n={},L=A.extend2,g,l,B,e,V=function(){},p=A.BLANKSTRING,T=M("FFFFFF",0),K=0;g=function(a,b,e){return["M",a-e,b-e]};l=function(a,b,e){var g=e/4;return["M",a-3*g,b,"L",a-g,b+e,a+e,b-e]};B=function(){a.addSymbol("Internal_CB",
g);return{register:function(){var b,e,g;if(1===arguments.length){e=arguments[0];if(null==e||"object"!==typeof e)return;g=e}else if(1<arguments.length){b=arguments[0];e=arguments[1];if("string"!==typeof b||"function"!==typeof e)return;g={};g[b]=e}else return;for(b in g)e=g[b],{}.hasOwnProperty.call(g,b)&&a.addSymbol(b,e)}}}();H.prototype._hideRecursive=function(a){var b,e,g,l,k,p;if(a)for(b in a)for(e in g=a[b],g)if(l=g[e],l instanceof Array)for(k=0,p=l.length;k<p;k++)l[k].hide&&l[k].hide();else l.hide&&
l.hide()};H.prototype.isInitialized=function(){return this.initialized};H.prototype.getCreationStatus=function(){return this.newCreationDataFlag};H.prototype.emptyPool=function(a){a=this.cachedState[a]||{};a.pool&&(a.pool={})};H.prototype.hideRecursive=function(a){this._hideRecursive((this.cachedState[a]||{}).pool)};H.prototype.getKeys=function(){return this.elemTypes};H.prototype.getComponent=function(a,b,e,g){var l=this.cachedState[b||0]||{};b=l.pool;var k=b[a],p,m,n,h=this.actions,d=0;k||(k=b[a]=
{});return(m=k[e])&&!(m instanceof Array)||m instanceof Array&&0<m.length?function(){l.newCreationDataFlag=!1;return g?(n=m[d++])?n.show():m[d]=h[e].apply(l,arguments):m.show&&"function"===typeof m.show&&m.show()||m}:function(){l.newCreationDataFlag=!0;return g?(p=k[e]||(k[e]=[]),m=h[e].apply(l,arguments),p.push(m),m.show&&"function"===typeof m.show&&m.show()||m):k[e]=h[e].apply(l,arguments)}};e=function(a,e){function p(a,c){switch(a){case "click":return function(a){wa.push(A.dem.listen(c,"click",
function(c){c.target&&c.target.parentNode&&a.call(c.target)}))};case "hover":return function(a,d){wa.push(A.dem.listen(c,"pointerhover",function(c){c.target&&c.target.parentNode&&("start"===c.state?a:d).call(c.target)}))}}}function r(a){a=a||{};this.name=a.name;this.handler=a.handler||V;this.action=a.action&&a.action.toLowerCase()||"click";this.eventMap={};this.style={padding:"3px 8px",margin:"2px 0px",fontFamily:n.baseFontFamily,fontSize:n.baseFontSize+"px"};this.hoverOverStyle=a.hoverOverStyle||
{};this.hoverOutStyle=a.hoverOutStyle||{};J(a.style||{},this.style);this.node=this.subConRef=void 0}function z(a,c){var d=this,b,h;b=c&&c.top||0;var e=c&&c.left,f=c&&c.right;this.container=a;this.position=z.POSITION_BOTTOM;this.atomicLists=[];this.refContainers=[];this.parentListCon=void 0;this.hideFnIds=[];this.target=void 0;e&&f||(this.positionCalculation=!0);this.hoverOverStyle={background:"#333333",color:"#FFFFFF",cursor:"pointer"};this.hoverOutStyle={background:"#FFFFFF",color:"#000000"};this._defaultStyle=
{position:"absolute","z-index":50,top:void 0===b?"auto":b+"px",right:void 0===f?"auto":f+"px",left:void 0===e?"auto":e+"px",overflow:"hidden",background:"#ffffff",border:"1px solid #646464","box-shadow":"#999999 2px 2px 5px",padding:"5px 3px",display:"none"};b=this.container.style;for(h in this._defaultStyle)b[h]=this._defaultStyle[h];sa.linkedItems&&(sa.linkedItems.container.appendChild(this.container),h=p("hover",this.container),h(function(){d.show(this)},function(){d.hide(300,this)}))}function K(a){this.listContainer=
this.container=void 0;this.measurement=a}function w(a,c,d,b){this.symbol=a;this._id="TB_SYMBOL"+(d||0);this.node=void 0;this.pId=b;this.isPlaintext=c;this.conf={btnTextStyle:{"stroke-width":"1px",stroke:"none"}};this.evt={tooltext:void 0,click:V,hover:[V,V]}}function F(a,c,d,b){w.call(this,"Internal_CB");this._id="TB_CBSYMBOL"+(d||0);this.symbol="Internal_CB";this.text={plaintext:a,node:void 0,style:u};this.pId=b;this.checked=!!c;this.textNode=void 0;this.interPadding=3;this.pos={};this.regSymbolCmd=
void 0;this.checked?this.check():this.uncheck()}function q(a,c,d){w.call(this);this._id="TB_SCROLLER"+(c||0);this.pId=d;this.conf={};this.userConf=m;this.setConfiguaration(a);this.evt.scroll=V;return this}function h(a,c,d){var b;w.call(this,a,void 0,c,d);this.rawContextDefinitation=void 0;this.listContainerManager=(new K(this.position)).init(d);b=this.listContainerManager.getFirstContainer();this.evt.hover=[function(a){b.show(v(a.target||a.fromElement,a))},function(a){b.hide(300,a.target)}]}function d(a,
c){this.preId=a||0;this.id=void 0;this.symbolList=[];this.groupRect=void 0;this.pId=c;L(this.btnConfig={},k);L(this.groupConfig={},D)}function f(a,d){c[this.id="TB_MASTER"+a||b((new Date).getTime())]=this;this.toolbarRect=void 0;this.componentGroups=[];this.toolbarConfig=G;this.group=void 0;this.pId=d}var c={},D={hPadding:3,vPadding:3,borderRadius:2,fill:M("DBDBDB",100),borderColor:M("B2B1B1",100),borderThickness:1,offsetAdjustment:1,radius:1,spacing:6},G={hPadding:3,vPadding:3,borderRadius:0,fill:M("EBEBEB",
100),borderColor:M("D1D0D0",100),borderThickness:1,offsetAdjustment:1,radius:0},u={fontFamily:"Verdana,sans",fontSize:"12px",fill:void 0,fontStyle:"normal",fontWeight:"normal"},C,H,sa=e.chart,wa=sa.linkedItems.eventListeners||(sa.linkedItems.eventListeners=[]);H=e.graphics;C=e.components;r.prototype.updateName=function(a){this.name=a;this.node&&(this.node.innerHTML=a)};r.prototype.assignSubContainer=function(a){a instanceof z&&(this.subConRef=a)};r.prototype.stickIntoContainer=function(a,c){var d=
this.node=O.createElement("div"),b=this.style,h,e,f,g=this;d&&(d.ishot=!0);this.handler&&(this.eventMap[this.action]=this.handler);a.appendChild(d);d.innerHTML=this.name;e=d.style;for(h in b)e[h]=b[h];b=p("hover",d);p("click",d)(function(){g.handler&&((f=g.eventMap.click)&&f.apply(g,[sa]),c.hide())});b(function(){var a,c=d.style,b=g.hoverOverStyle;for(a in b)c[a]=b[a];g.subConRef&&g.subConRef.show(this)},function(){var a,c=d.style,b=g.hoverOutStyle;for(a in b)c[a]=b[a];g.subConRef&&g.subConRef.hide(300,
this)})};r.prototype.setStyle=function(a){J(a||{},this.style)};r.prototype.dispose=function(){var a=this.node;a&&a.remove&&a.remove();this.node=void 0};z.POSITION_TOP="top";z.POSITION_BOTTOM="bottom";z.prototype.addAtomicListItem=function(a){a instanceof r&&(this.atomicLists.push(a),a.stickIntoContainer(this.container,this))};z.prototype.show=function(a){var c=this.hideFnIds,d=sa.config.width,b=this.positionCalculation,e=0,f;this.target=this.target||a;for(f=c.length;e<f;e++)clearTimeout(c[e]);c.length=
0;(c=this.parentListCon)?(c.show(this.target),this.container.style.left=c.container.offsetLeft+c.container.offsetWidth+"px",this.container.style.top=c.container.offsetTop+this.target.offsetTop+"px"):(c=a&&a.nodeName&&"DIV"===a.nodeName.toUpperCase()?!0:!1,c||(a=a.getBBox(),b&&(this.container.style.display="block",b=this.container.offsetWidth,b+a.x>d?(this.container.style.left="auto",this.container.style.right=d-a.x-a.width+"px"):(this.container.style.left=a.x+"px",this.container.style.right="auto"),
this.container.style.display="none"),this.position===h.POSITION_BOTTOM?(d=a.isArtificial?.5:1.5,this.container.style.top=a.y+a.height*d+"px",this.container.style.bottom="auto"):(this.container.style.bottom=sa.config.height-a.y+"px",this.container.style.top="auto")));this.container.style.display="block"};z.prototype.hide=function(a){var c=this.container,d;(d=this.parentListCon)&&d.hide(300);this.hideFnIds.push(setTimeout(function(){c.style.display="none"},a))};z.prototype.dispose=function(){var a=
this.atomicLists,c=this.refContainers,d,b;d=this.hideFnIds.length=0;for(b=a.length;d<b;d++)a[d].dispose();d=a.length=0;for(b=c.length;d<b;d++)c[d].dispose();c.length=0};K.prototype.init=function(c){var d=a.getKeys();this.container||(c=a.getComponent("div0",c,d.KEY_DIV),(c=c())&&(c.innerHTML=""),this.container=new z(c,this.measurement));return this};K.prototype.getFirstContainer=function(){return this.container};K.prototype.appendAsList=function(a,c){var d=this,b,h=this.container.hoverOverStyle,e=
this.container.hoverOutStyle;(function na(a,c){var f,g=0,l,k,t,p,m,D,w,G;w=c?c:d.container;f=a instanceof Array?a:[a];for(l=f.length;g<l;g++){k=f[g];t=new r({hoverOverStyle:h,hoverOutStyle:e});for(p in k)t.name=p,m=k[p],t.action=m.action,t.setStyle(m.style),-1!==p.search(/^<[^<]+>$/)&&(t.hoverOverStyle={},t.hoverOutStyle={},m.handler=V),D=m.handler,"function"!==typeof D?G=na(D,new z(O.createElement("div"))):t.handler=m.handler;w.addAtomicListItem(t);G&&(G.parentListCon=w,w.refContainers.push(G),t.assignSubContainer(G));
G=void 0}return b=w})(a,c);return b};K.prototype.dispose=function(){this.container.dispose();this.container=void 0};w.prototype.registerSymbol=function(a){B.register(this.symbol,a)};w.prototype._setConfiguaration=function(a){this.conf?J(a,this.conf,!0):this.conf=a};w.prototype.attachEventHandlers=function(a,c){var d=this.evt,b=a.tooltext,h=a.click||V,e=a.hover,f=c&&c.click||V,g=this;b&&(d.tooltext=b);d.click="function"===typeof h?function(){f();h.apply(g,arguments)}:function(){var a=h.fn,c=h.context,
d=(h.args||[]).slice(0);h.hasOwnProperty("context")?d.push(g):c=g;[].push.apply(d,arguments);f();a.apply(c,d)};e&&e instanceof Array&&(d.hover=e);this.node&&this.node.tooltip(this.evt.tooltext).buttonclick(this.evt.click).hover(this.evt.hover[0],this.evt.hover[1]);return g};w.prototype.getLogicalSpace=function(){return{width:this.conf.width*(this.conf.scale||1),height:this.conf.height*(this.conf.scale||1)}};w.prototype.show=function(){var a=this.node;a&&a.css({display:"block"})};w.prototype.hide=
function(){var a=this.node;a&&a.css({display:"none"})};w.prototype.draw=function(c,d,b){var h=this.conf||{},e,f,g=a.getKeys(),l=sa.get("config","animationObj"),k=l.animObj,p=l.dummyObj,m=l.duration;this.isPlaintext?f=this.symbol:e=this.symbol;void 0!==b.idCount&&(this._id+=b.idCount);h.hoverFill=h.hoverFill?M(h.hoverFill):M(U(N(h.fill),80));b=this.node=a.getComponent(this._id,this.pId,g.KEY_BUTTON,!0)(c,d,f,e,{width:h.width*h.scale,height:h.height*h.scale,r:h.radius*h.scale,verticalPadding:h.symbolVPadding*
h.scale,horizontalPadding:h.symbolHPadding},b.parentLayer).labelcss(this.conf.btnTextStyle);b.attr({ishot:!0,fill:[h.fill,h.labelFill,h.symbolFill,h.hoverFill,!0],stroke:[h.stroke,h.symbolStroke],"stroke-width":[h.strokeWidth,h.symbolStrokeWidth]}).tooltip(this.evt.tooltext).buttonclick(this.evt.click).hover(this.evt.hover[0],this.evt.hover[1]);a.getCreationStatus()||(this.node.unclick(),this.node.animateWith(p,k,{"button-repaint":[c,d,h.width*h.scale,h.height*h.scale,h.radius*h.scale]},m,l.animType),
this.node.attr({"button-label":f,"button-padding":[h.symbolHPadding,h.symbolVPadding*h.scale]}),this.node.buttonclick(this.evt.click));b.getBBox=function(){return{x:c,y:d,width:h.width*h.scale,height:h.height*h.scale}};return b};w.prototype.dispose=function(){var a=this.node;a&&a.remove();this.node=void 0};F.prototype=Object.create(w.prototype);F.prototype.constructor=F;F.prototype.check=function(){var a=this.pos;this.checked=!0;this.regSymbolCmd=l;this.node&&(this.registerSymbol(this.regSymbolCmd),
this.node.attr({"button-repaint":[a.x,a.y,a.width,a.height,a.r]}))};F.prototype.uncheck=function(){var a=this.pos;this.checked=!1;this.regSymbolCmd=g;this.node&&(this.registerSymbol(this.regSymbolCmd),this.node.attr({"button-repaint":[a.x,a.y,a.width,a.height,a.r]}))};F.prototype.click=function(){this.checked?this.uncheck():this.check()};F.prototype.attachEventHandlers=function(a){var c=this;w.prototype.attachEventHandlers.apply(this,[a,{click:function(){c.click()}}])};F.prototype.getLogicalSpace=
function(){var a=sa.linkedItems.smartLabel,c=this.text.style,d;d=w.prototype.getLogicalSpace.apply(this,arguments);a.useEllipsesOnOverflow(sa.config.useEllipsesWhenOverflow);a.setStyle(c);a=a.getSmartText(this.text.plaintext);return{width:a.width+this.interPadding+d.width,height:Math.max(d.height,a.height)}};F.prototype.draw=function(c,d,b){var h,e=this.conf,f;f=sa.linkedItems.smartLabel;var g=C.colorManager,l=this.text.plaintext,k,p=a.getKeys();this.registerSymbol(this.regSymbolCmd);h=this.node=
w.prototype.draw.apply(this,arguments);this.pos={x:c,y:d,width:e.width,height:e.height,r:e.radius};k=this.text.style;k.fill=k.fill||"#"+g.getColor("baseFontColor");f.useEllipsesOnOverflow(sa.config.useEllipsesWhenOverflow);f.setStyle(k);f=f.getSmartText(l);h=h.getBBox();g=a.getComponent(this._id,this.pId,p.KEY_TEXT);this.textNode=g(b.parentLayer).attr({text:l,x:h.x+h.width+f.width/2+this.interPadding,y:h.y+h.height/2}).css(k);e=e.height>f.height?e.height:f.height;g=a.getComponent(this._id,this.pId,
p.KEY_RECT);return g(b.parentLayer).attr({height:e,width:h.width+f.width+this.interPadding,x:c,y:d,stroke:T})};F.prototype.dispose=function(){this.textNode&&this.textNode.remove();this.textNode=void 0;w.prototype.dispose.call(this)};q.prototype=Object.create(w.prototype);q.prototype.constructor=F;q.prototype.setConfiguaration=function(a){var c=C.colorManager;m.color||(m.color="#"+c.getColor("altHGridColor"));J(m,this.conf);J(a,this.conf)};q.prototype.getLogicalSpace=function(){var a=this.conf,c={};
J(m,c);J(c,a);return w.prototype.getLogicalSpace.call(this)};q.prototype.getDefaultLayer=function(){var c=a.getKeys();return a.getComponent(this._id,this.pId,c.KEY_GROUP)("scroll")};q.prototype.registerSymbol=void 0;q.prototype._setConfiguaration=function(){};q.prototype.attachEventHandlers=function(a){a&&a.scroll&&"function"===typeof a.scroll&&(this.evt.scroll=a.scroll);w.prototype.attachEventHandlers.apply(this,arguments);return this};q.prototype.draw=function(){var c,d,b,h,e,f,g,l,k,p,D,w,z,G,
n,F;n=this.conf;var r,K=a.getKeys(),B={},q=sa.get("config","animationObj"),u=q.animObj,R=q.dummyObj;b={};var P=q.duration;1===arguments.length?(n=arguments[0],c=n.x,d=n.y,g=n.parentLayer,e=!!n.sepLayer):(c=arguments[0],d=arguments[1],e=arguments[2],n&&e?J(e,n):e={},g=e.parentLayer,e=!!e.sepLayer);J(m,b);n.isHorizontal?delete b.width:delete b.height;J(b,n);d+=n.padding;b=n.height;h=n.width;f=n.isHorizontal;F=n.startPercent;l=n.scrollRatio;k=n.showButtons;p=n.displayFlat;D=n.fullCanvasWidth;w=n.windowedCanvasWidth;
z=n.color;G=n.roundEdges;B["scroll-repaint"]=[c,d,h,b];g=g?g:this.getDefaultLayer();r=a.getComponent(this._id,this.pId,K.KEY_RECT);g=e?r("scroll-child"):g;r=a.getComponent(this._id,this.pId,K.KEY_SCROLLER);this.node=r(c,d,h,b,f,{scrollPosition:n.scrollPosition||E(F,0),displayStyleFlat:p,showButtons:k},g).data("fullCanvasWidth",D).data("windowedCanvasWidth",w).attr({"scroll-ratio":l,fill:z,r:G&&2||0}).scroll(this.evt.scroll);a.getCreationStatus()||(this.node.undrag(),this.node.animateWith(R,u,B,P,
q.animType),this.node.attr({"scroll-display-style":p?"flat":"3d","scroll-position":n.scrollPosition||E(F,0)}).scroll(this.evt.scroll));return this.node};h.POSITION_TOP="top";h.POSITION_BOTTOM="bottom";h.prototype=Object.create(w.prototype);h.prototype.constructor=h;h.allNodes=[];h.prototype.getListRefernce=function(){return this.listContainerManager};h.prototype.attachEventHandler=function(a){var c=this.evt;if(a=a.tooltext)c.tooltext=a};h.prototype.getLogicalSpace=function(){var a=this.listContainerManager.getFirstContainer().atomicLists;
return a&&0===a.length?{width:0,height:0}:w.prototype.getLogicalSpace.call(this)};h.prototype.draw=function(){var a=this.listContainerManager.getFirstContainer().atomicLists;if(a&&0===a.length)return this.hide(),{getBBox:function(){return{width:0,height:0}}};a=w.prototype.draw.apply(this,arguments);h.allNodes.push(this.node);return a};h.prototype.dispose=function(){this.listContainerManager&&this.listContainerManager.dispose();this.listContainerManager=void 0;w.prototype.dispose.call(this)};d.prototype.addSymbol=
function(a,c){var d=this.symbolList;c?d.unshift(a):d.push(a)};d.prototype.setConfiguaration=function(a){var c=a.buttons;a=a.group;c&&J(c,this.btnConfig);a&&J(a,this.groupConfig)};d.prototype.draw=function(c,d,b){var h=this.preId,e=this.symbolList,f,g,l=this.groupConfig,k=this.btnConfig;f=k.reverseToolbarIcons;var p=d.x,m=d.y,D,w=0,z=0,G=Number.NEGATIVE_INFINITY;D=a.getKeys();h=this.id=h.toString()+b;H.toolbarGroup=H.toolbar||{};b=a.getComponent(this.id,this.pId,D.KEY_GROUP);c=b("toolbar-group"+h,
c).trackTooltip(!0);b=a.getComponent(this.id,this.pId,D.KEY_RECT);D=this.groupRect=b(c).attr({height:0,width:0,x:p,y:m});p+=l.hPadding;m+=l.vPadding;z+=l.hPadding;w+=l.vPadding;if(f)for(f=e.length-1;-1<f;f--)g=e[f],g._setConfiguaration(k),g=g.draw(p,m,{parentLayer:c}),g=g.getBBox(),G<g.height&&(G=g.height),p+=g.width+(g=k.spacing);else for(f=0,b=e.length;f<b;f++)g=e[f],g._setConfiguaration(k),g=g.draw(p,m,{parentLayer:c}),g=g.getBBox(),G<g.height&&(G=g.height),p+=g.width+(g=k.spacing);z+=p+l.hPadding-
d.x-g-l.offsetAdjustment;w+=G+l.vPadding+l.offsetAdjustment;isFinite(w)||(w=0);isFinite(z)||(z=0);D.attr({height:w,width:z}).attr({fill:l.fill,r:l.radius,stroke:l.borderColor,"stroke-width":l.borderThickness});g=D.getBBox();return{height:g.height,width:g.width}};d.prototype.getLogicalSpace=function(){var a=this.symbolList,c,d,b,h=0,e=0,f=Number.NEGATIVE_INFINITY,g=0;d=0;for(b=a.length;d<b;d++)c=a[d],c._setConfiguaration(this.btnConfig),c=c.getLogicalSpace(),e+=c.width+this.btnConfig.spacing,g+=c.width,
f=f<c.height?c.height:f;if(!g)return{width:0,height:0};f!==Number.NEGATIVE_INFINITY&&e&&(e-=this.btnConfig.spacing-2*this.groupConfig.hPadding-this.groupConfig.offsetAdjustment,h=f+2*this.groupConfig.vPadding+this.groupConfig.offsetAdjustment);return{width:e,height:h}};d.prototype.dispose=function(){for(var a=this.symbolList,c=0,d=a.length;c<d;c++)a[c].dispose();a.length=0;this.groupRect.remove()};f.prototype.getId=function(){return this.id};f.prototype.addComponent=function(a){this.componentGroups.push(a)};
f.prototype.draw=function(c,d,b,h){var e=this.componentGroups,f,g,l,k=this.toolbarConfig;l=this.id;var p=c,m,D,w=Number.NEGATIVE_INFINITY;m=a.getKeys();b=b||{};g=H.toolbar=b.parentGroup||H.toolbar||{};b=a.getComponent(this.id,this.pId,m.KEY_GROUP,!0);this.group=l=b(l,g);b=a.getComponent(this.id,this.pId,m.KEY_RECT,!0);m=this.toolbarRect=b(l).attr({height:0,width:0,x:p,y:d});p+=k.hPadding;d+=k.vPadding;b=0;for(g=e.length;b<g;b++)f=e[b],f.btnConfig.reverseToolbarIcons=E(h,f.btnConfig.reverseToolbarIcons),
D=f.groupConfig.spacing||1,f=f.draw(l,{x:p,y:d},b),p+=f.width+D,w=w>f.height?w:f.height;h=w;c=p-D-k.hPadding-c;isFinite(h)||(h=0);isFinite(c)||(c=0);m.attr({height:h+=2*k.vPadding,width:c+=2*k.hPadding}).attr({fill:k.fill,r:k.radius,stroke:k.borderColor,"stroke-width":k.borderThickness});return{height:h,width:c}};f.prototype.reverseDraw=function(a,c,d){this.draw(a,c,d,!0)};f.prototype.getLogicalSpace=function(){var a=this.componentGroups,c,d,b,h=c=0,e=Number.NEGATIVE_INFINITY,f,g=0;c=0;for(d=a.length;c<
d;c++)b=a[c],f=b.getLogicalSpace(),b=b.groupConfig.spacing||1,h+=f.width+b,g+=f.width,e=e<f.height?f.height:e;if(!g)return{width:0,height:0};h-=b-2*this.toolbarConfig.hPadding;c=e+2*this.toolbarConfig.vPadding;return{width:h,height:c}};f.prototype.dispose=function(){for(var c=this.componentGroups,d=0,b=c.length;d<b;d++)c[d].dispose();c.length=0;this.toolbarRect.remove();a.emptyPool(this.pId)};return{HorizontalToolbar:f,ComponentGroup:d,Symbol:w,CheckboxSymbol:F,Scroller:q,SymbolWithContext:h,getInstanceById:function(a){return c[a]}}};
Q.register("component",["toolbox","toolbox",{onceInitialized:!1,ALIGNMENT_HORIZONTAL:0,ALIGNMENT_VERTICAL:1,POSITION_TOP:0,POSITION_RIGHT:1,POSITION_BOTTOM:2,POSITION_LEFT:3,init:function(a){if(this.onceInitialized)return this.configure(),this._iCount;this._options=a;this._chart=a.chart;this._iCount=++K;this.configure();this.onceInitialized=!0;return this._iCount},configure:function(){var a,b,e=this._chart.jsonData.chart;k.scale=E(e.toolbarbuttonscale)||1.15;k.width=E(e.toolbarbuttonwidth,u?20:15);
k.height=E(e.toolbarbuttonheight,u?20:15);k.radius=E(e.toolbarbuttonradius,u?4:2);k.spacing=E(e.toolbarbuttonspacing,5);k.fill=M(r(e.toolbarbuttoncolor,"ffffff"));k.labelFill=M(r(e.toolbarlabelcolor,"cccccc"));k.symbolFill=M(r(e.toolbarsymbolcolor,"ffffff"));k.hoverFill=r(e.toolbarbuttonhovercolor);k.stroke=M(r(e.toolbarbuttonbordercolor,"bbbbbb"));k.symbolStroke=M(r(e.toolbarsymbolbordercolor,"9a9a9a"));k.strokeWidth=E(e.toolbarbuttonborderthickness,1);k.symbolStrokeWidth=E(e.toolbarsymbolborderthickness,
1);b=k.symbolPadding=E(e.toolbarsymbolpadding,5);k.symbolHPadding=E(e.toolbarsymbolhpadding,b);k.symbolVPadding=E(e.toolbarsymbolvpadding,b);k.reverseToolbarIcons=E(e.reversetoolbaricons,0);a=k.position=r(e.toolbarposition,"tr").toLowerCase();switch(a){case "tr":case "rt":case "top right":case "right top":a="tr";break;case "br":case "rb":case "bottom right":case "right bottom":a="br";break;case "tl":case "lt":case "top left":case "left top":a="tl";break;case "bl":case "lb":case "bottom left":case "left bottom":a=
"bl";break;default:a="tr"}b=k.hAlign="left"===(p+e.toolbarhalign).toLowerCase()?"l":a.charAt(1);a=k.vAlign="bottom"===(p+e.toolbarvalign).toLowerCase()?"b":a.charAt(0);k.hDirection=E(e.toolbarhdirection,"r"===b?-1:1);k.vDirection=E(e.toolbarvdirection,"b"===a?-1:1);k.vMargin=E(e.toolbarvmargin,6);k.hMargin=E(e.toolbarhmargin,10);e.toolbary&&e.toolbarx?(k.x=E(e.toolbarx),k.y=E(e.toolbary),delete k.spaceNotHardCoded):k.spaceNotHardCoded=!0;m.color=e.scrollcolor&&M(e.scrollcolor);m.padding=E(e.scrollpadding,
0);m.height=E(e.scrollheight,12);m.width=E(e.scrollwidth,12);m.displayFlat=E(e.flatscrollbars,0);m.scrollBar3DLighting=E(e.scrollbar3dlighting,1);m.startPercent=Math.min(1,Math.max(0,parseFloat(e.scrolltoend)||0));m.showButtons=!!E(e.scrollshowbuttons,1);m.buttonPadding=E(e.scrollbtnpadding,0);n.baseFontFamily=r(e.basefont,"Verdana,sans");n.baseFontSize=E(e.basefontsize,10);n.baseFontColor=r(e.basefontcolor,"595959")},getAPIInstances:function(a){var b={},g;g=this.componentPool=new H(this._chart.components,
this._iCount);g=e(g,this._options);switch(a){case this.ALIGNMENT_HORIZONTAL:b.Toolbar=g.HorizontalToolbar}b.ComponentGroup=g.ComponentGroup;b.Symbol=g.Symbol;b.Scroller=g.Scroller;b.SymbolWithContext=g.SymbolWithContext;b.SymbolStore=B;b.CheckboxSymbol=g.CheckboxSymbol;return b},getDefaultConfiguration:function(){return k},clean:function(){this.componentPool.hideRecursive(this._iCount)}}])}]);Q.register("module",["private","modules.renderer.js-base",function(){var b=this,v=b.hcLib,J=v.Raphael,C=J._availableAnimAttrs,
H="VML"===J.type,A=b.window,u=A.document,a=v.BLANKSTRING,O=v.HUNDREDSTRING,q=v.preDefStr,M=q.configStr,U=q.animationObjStr,N=q.NORMAL,E=q.BOLD,r=q.hiddenStr,k=q.visibleStr,m=q.ROUND,n=q.miterStr,L=v.EXPORTACTION,g=v.EXPORTFORMAT,l=v.EXPORTMODE,B=v.LOGMODE,e=q.POSITION_START,V=q.POSITION_TOP,p=q.POSITION_END,T=q.POSITION_BOTTOM,K=q.POSITION_MIDDLE,t=q.POINTER,Z=q.noneStr,P=q.SEVENTYSTRING,S=q.blackStr="AAAAAA",z=q.AUTOSTRING,R=v.parseConfiguration,w=v.componentConfigurer,F=v.BLANKSTRING,X=v.DEFAULT_EXPORT_URL,
h=v.DEFAULT_LOG_URL,d=v.pluck,f=v.getValidValue,c=v.pluckNumber,D=v.getFirstValue,G=v.parseUnsafeString,aa=v.extend2,Ra=v.getDashStyle,Ia=v.graphics.mapSymbolName,sa=v.regex.dropHash,wa=v.HASHSTRING,ca=A.Image,ma=v.setImageDisplayMode,qa=v.removeEvent,va=v.getPosition,ha=v.getMouseCoordinate,ra=v.addEvent,ka=8===A.document.documentMode?k:F,na=v.toRaphaelColor,da=Math,oa=da.min,Y=da.max,za=da.abs,fa=da.ceil,Aa=da.floor,ua=da.round,ia=da.sin,xa=da.cos,ja=Math.PI,ya=ja/2,W=2*ja,Ma=ja+ya,ea=v.getFirstColor,
ga=v.setLineHeight,la=v.pluckFontSize,Ca=v.graphics.getDarkColor,Ha=v.graphics.getLightColor,pa=v.graphics.convertColor,La=v.POSITION_CENTER,Ja=v.POSITION_RIGHT,Fa=v.POSITION_LEFT,ta=v.chartAPI,Ka=v.COMMASTRING,Ea=v.PXSTRING,Da=v.componentDispose,Ga,Na=A.navigator.userAgent.match(/ (iPad|iPhone|iPod)/g),Ua={left:e,right:p,center:K},Pa=v.each,Sa="rgba(255,0,0,"+(v.isIE?.002:1E-6)+")",ab=v.BGRATIOSTRING,Xa=v.graphics.getAngle,Za=v.NumberFormatter,bb=v.getLinkAction,eb=v.hasTouch=void 0!==u.documentElement.ontouchstart,
Va={1:E,0:N},Ya=function(a){a=a.replace("rgba(",F).split(",");return"#"+("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},$a=!v.CREDIT_REGEX.test(A.location.hostname),Ta=v.chartPaletteStr={chart2D:{bgColor:"bgColor",bgAlpha:"bgAlpha",bgAngle:"bgAngle",bgRatio:"bgRatio",canvasBgColor:"canvasBgColor",canvasBaseColor:"canvasBaseColor",divLineColor:"divLineColor",legendBgColor:"legendBgColor",legendBorderColor:"legendBorderColor",toolTipbgColor:"toolTipbgColor",toolTipBorderColor:"toolTipBorderColor",
baseFontColor:"baseFontColor",anchorBgColor:"anchorBgColor"},chart3D:{bgColor:"bgColor3D",bgAlpha:"bgAlpha3D",bgAngle:"bgAngle3D",bgRatio:"bgRatio3D",canvasBgColor:"canvasBgColor3D",canvasBaseColor:"canvasBaseColor3D",divLineColor:"divLineColor3D",divLineAlpha:"divLineAlpha3D",legendBgColor:"legendBgColor3D",legendBorderColor:"legendBorderColor3D",toolTipbgColor:"toolTipbgColor3D",toolTipBorderColor:"toolTipBorderColor3D",baseFontColor:"baseFontColor3D",anchorBgColor:"anchorBgColor3D"}},kb=function(){var a=
{},c,d=function(){var h,e,f,g,l=0,k,p,t=parseInt(b.core.options.resizeTrackingInterval,10)||300,m={},D=function(){m.itemVar._containerOffsetW=m.parentEle.offsetWidth;m.itemVar._containerOffsetH=m.parentEle.offsetHeight},w;for(h in a)l+=1,e=a[h],f=e.jsVars,k=e.ref,!e.disposed&&(g=k&&k.parentNode)&&(p=k.style)&&(/\%/g.test(p.width)||/\%/g.test(p.height))?(k=g.offsetWidth,w=g.offsetHeight,!f.resizeLocked&&(k&&f._containerOffsetW!==k||w&&f._containerOffsetH!==w)&&(e.resizeTo&&e.resizeTo(),m.itemVar=f,
m.parentEle=g,setTimeout(D,1))):(delete a[h],--l);c=l?setTimeout(d,t):clearTimeout(c)};return function(h,e){var f=h.jsVars,g=e||h.ref&&h.ref.parentNode||{};f._containerOffsetW=g.parentNode.offsetWidth;f._containerOffsetH=g.parentNode.offsetHeight;a[h.id]=h;c||(c=setTimeout(d,parseInt(b.core.options.resizeTrackingInterval,10)||300))}}(),hb=v.schedular,ib=v.priorityList,ob={getExternalInterfaceMethods:function(){var a=ta[this.jsVars.type],a=a&&a.eiMethods,c="saveAsImage,print,exportChart,getXML,hasRendered,signature,cancelExport,getSVGString,lockResize,showChartMessage,drawCrossLine,",
d;if("string"===typeof a)c+=a+Ka;else if(void 0!==a||null!==a)for(d in a)c+=d+Ka;return c.substr(0,c.length-1)},drawOverlayButton:function(a){var c=this.jsVars,d=c.overlayButton,h,e;if(a&&a.show){d||(d=c.overlayButton=u.createElement("span"),v.dem.listen(d,"click",function(){b.raiseEvent("OverlayButtonClick",a,c.fcObj)}));for(h=a.message?a.message:"Back";d.firstChild;)d.removeChild(d.firstChild);d.appendChild(u.createTextNode(h));c.overlayButtonMessage=h;h={border:"1px solid "+(a.borderColor?a.borderColor.replace(sa,
wa):"#7f8975"),backgroundColor:a.bgColor?a.bgColor.replace(sa,wa):"#edefec",fontFamily:a.font?a.font:"Verdana,sans",color:"#"+a.fontColor?a.fontColor:"49563a",fontSize:(a.fontSize?a.fontSize:"10")+Ea,padding:(a.padding?a.padding:"3")+Ea,fontWeight:0===parseInt(a.bold,10)?N:E,position:"absolute",top:"0",right:"0",_cursor:"hand",cursor:t};for(e in h)d.style[e]=h[e];c.hcObj.container.appendChild(d);c.overlayButtonActive=!0}else d&&(c.overlayButton=d.parentNode.removeChild(d),c.overlayButtonActive=!1,
delete c.overlayButtonMessage)},print:function(a){var c=this.apiInstance,d=aa({},a);if(c.config.isPrinting||!c.config.hasRendered)return!1;b.raiseEvent("BeforePrint",d,c.chartInstance,void 0,function(){var a=c.linkedItems.container,h=[],e=a.parentNode,f=u.body||u.getElementsByTagName("body")[0],g=f.childNodes,l,p,ba,t;c.config.isPrinting=!0;Pa(g,function(a,c){1==a.nodeType&&(h[c]=a.style.display,a.style.display="none")});if(!1!==d.hideButtons){p=c.components.chartMenuBar.componentGroups[0].symbolList;
t=0;for(l=p.length;t<l;t++)if((ba=p[t])instanceof c.components.toolBoxAPI.SymbolWithContext){ba=ba.getListRefernce().getFirstContainer();break}ba.container.style.display=Z}f.appendChild(c.linkedItems.container);A.print();setTimeout(function(){ba.container.style.display=k;e.appendChild(a);Pa(g,function(a,c){1==a.nodeType&&(a.style.display=h[c])});!1!==d.hideButtons&&(ba.container.style.display=k);c.config.isPrinting=!1;b.raiseEvent("PrintComplete",d,c.chartInstance)},1E3)},function(){b.raiseEvent("PrintCancelled",
d,c.chartInstance)})},exportChart:function(a){return v.exportChart.call(this.apiInstance,a)},getSVGString:function(a){var c=this,d=c.apiInstance,b=d.chartInstance.args.asyncRender,d=d.getJobList();if("function"===typeof a)d.eiMethods.push(hb.addJob(function(){a(c.jsVars&&c.jsVars.instanceAPI&&c.jsVars.instanceAPI.components&&c.jsVars.instanceAPI.components.paper&&c.jsVars.instanceAPI.components.paper.toSVG())},ib.postRender));else return b?"<svg></svg>":c.jsVars&&c.jsVars.instanceAPI&&c.jsVars.instanceAPI.components&&
c.jsVars.instanceAPI.components.paper&&c.jsVars.instanceAPI.components.paper.toSVG()},resize:function(){var a=this.jsVars,c=a.container;a.instanceAPI.config.elScroll=!1;a.instanceAPI&&a.instanceAPI.redraw?a.instanceAPI.redraw():v.createChart(a.fcObj,c,a.type,void 0,void 0,!1,!0);delete a.isResizing},lockResize:function(a){return"boolean"!==typeof a?!!this.jsVars.resizeLocked:this.jsVars.resizeLocked=a},showChartMessage:function(a,b,h,e){var f=this,g=f.jsVars,l=f.apiInstance,k=l.chartInstance,p=k.args.asyncRender,
k=k.options,t=l.getJobList(),m,D=function(){b&&l&&l.config.hasRendered?(l._show(),f.showMessage(a,m,h)):(l._hide(),l.setChartMessage(a,{_chartMessageStyle:m}),l.drawChartMessage())};!e&&(e={});m={fontFamily:d(e.font,k.baseChartMessageFont,"Verdana,sans"),fontSize:c(e.fontSize,k.baseChartMessageFontSize,10),color:d(e.color&&pa(e.color,e.alpha),k.baseChartMessageColor)};g.msgStore[a]&&(a=g.msgStore[a]);p?t.eiMethods.push(hb.addJob(D,ib.postRender)):D();return a},showMessage:function(a,c,d){var b=this.apiInstance,
h=b.config,e=b.components,f=b.graphics.messageGroup,g=e.chartMessage||(e.chartMessage={}),g=g.graphics||(g.graphics={}),l=e.paper,k=b.linkedItems.smartLabel,e=g.messageText,p=g.messageVeil,m=g.message,D=l.width,w=l.height;f?f.toFront():b.graphics.messageGroup=f=l.group("messageGroup");p||(p=g.messageVeil=l.rect(0,0,D,w,f).attr({fill:"rgba(0,0,0,0.2)",stroke:Z}));p.show().toFront().attr("cursor",d?t:"default")[d?"click":"unclick"](b._hideChartMessage,b);e||(e=g.messageText=l.text(D/2,w/2,F,f));m&&
m.hide();a=a||F;k.setStyle(c);a=k.getSmartText(a,D-(h.marginRight||0)-(h.marginLeft||0),w-(h.marginTop||0)-(h.marginBotton||0));e.attr({"font-size":c.fontSize,"font-family":c.fontFamily,fill:c.color,text:a.text,ishot:!0,cursor:d?t:"default","line-height":14})[d?"click":"unclick"](b._hideChartMessage,b).show().toFront()},signature:function(){return"FusionCharts/3.4.0 (XT)"},drawCrossLine:function(a){var c=this.apiInstance.components,c=c["datasetGroup_"+c.dataset[0].type];c.config.customHighlightFlag=
!0;c.drawTrendRegion&&c.drawTrendRegion();c._moveTrendRegion&&c._moveTrendRegion(a,void 0,!1)}};delete C.fill;delete C.stroke;b.core.options.resizeTrackingInterval=300;b.core.options.preventTrackResize=!1;b.core.options.SVGDefinitionURL="relative";v.createChart=function(h,e,f,g,I,l,k){var p=h.jsVars,t,m=ta[f||(f=h.chartType())],D=h.apiInstance,z=p.hasNativeMessage;l=h.options;var G=h.args,n=p.secondTimeRender,r;if(e.offsetWidth&&e.offsetHeight){e.FusionCharts=b.core.items[h.id];G.asyncRender=c(G.asyncRender,
1);/^\s*absolute\s*$/i.test(b.core.options.SVGDefinitionURL)&&(J._url=(J._g&&J._g.win||A).location.href.replace(/#.*?$/,a));r=function(a){var c={renderer:"javascript"},d=p.fcObj,f=d.width,I=d.height,l=p.overlayButton;z=p.hasNativeMessage;p.container=e;p.hcObj=a;p.width=e.offsetWidth;p.height=e.offsetHeight;p.instanceAPI=D;a.hasRendered&&p.overlayButtonActive&&l&&(l.innerHTML=F,l.appendChild(u.createTextNode(p.overlayButtonMessage)),a.container.appendChild(l));(/\%/g.test(f)||/\%/g.test(I))&&e&&e.parentNode&&
!b.core.options.preventTrackResize&&kb(d,e);if(g&&(g({success:a.hasRendered,ref:e,id:h.id}),a.hasRendered)){D.config.hasRendered=!0;if(!0===h.disposed)return;z||(d.__state.firstRenderNotified=!0,D.getJobList().postRender.push(hb.addJob(function(){v.raiseEvent("rendered",{renderer:"javascript"},d,[d.id])},ib.postRender)))}a.hasRendered&&p.previousDrawCount<p.drawCount&&(c.width=p.width,c.height=p.height,c.drawCount=p.drawCount,c.displayingMessage=z,c.renderer=d.options.renderer,v.raiseEvent("drawcomplete",
c,d,[d.id]),z||k||D.getJobList().postRender.push(hb.addJob(function(){d.__state&&!d.__state.firstRenderNotified&&v.raiseEvent("rendered",{renderer:"javascript"},d,[d.id]);b.raiseEvent("renderComplete",c,d)},ib.postRender)))};if(D&&D.inited)b.raiseEvent("internal.drawStart",{chartType:f,logicName:D.name,logicBase:D.base&&D.base.name,defaultSeriesType:D.defaultSeriesType},h),I=h.jsVars&&h.jsVars.themeObject&&h.jsVars.themeObject.getThemedJSONData()||h.getChartData(b.dataFormats.JSON,!0),t=I.data,D.config&&
D.config.hasChartMessage&&D._hideChartMessage(),D.jsonData=t,k||v.raiseEvent("dataloaded",{},h,[h.id]),D._removeWaitingJobs(),D.configure(),D._feedAxesRawData(),D._setCategories(),w(D),D.draw(),h.hasRendered()||D.setChartEvents(),r({hasRendered:!0,container:e});else if(D&&"base"===f)D.setChartMessage(I,h,e),D.drawChartMessage(),e.signature=function(){return"FusionCharts/3.4.0 (XT)"},b.renderer.notifyRender({success:!0,ref:e,id:h.id});else{D&&"base"===D.name&&"base"!==f&&(D.dispose(),D=void 0);D?D.config&&
D.config.hasChartMessage&&D._hideChartMessage():D=h.apiInstance=m?new ta(f):new ta("base");D.chartInstance=h;D.origRenderWidth=h.__state.renderedWidth;D.origRenderHeight=h.__state.renderedHeight;if("base"!==f){e.jsVars=h.jsVars;m=D.eiMethods;h.ref=e;p.type=f;b.extend(e,ob);if(m&&"string"!==typeof m)for(t in m)e[t]=m[t];v.raiseEvent("loaded",{type:f,renderer:"javascript"},h,[h.id])}if("base"===f)D.setChartMessage(I,h,e),D.drawChartMessage();else if(void 0!==I)"string"===typeof I&&(D.setChartMessage(I,
h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0);else if(!D||!D.init||D&&"base"===D.name)h._chartMessageImageStyle={imageHAlign:d(G.typeNotSupportedMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(G.typeNotSupportedMessageImageVAlign,l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(G.typeNotSupportedMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:c(G.typeNotSupportedMessageImageScale,l.baseChartMessageImageScale)},h._chartMessageStyle={color:G.typeNotSupportedMessageColor||
l.baseChartMessageColor,fontFamily:G.typeNotSupportedMessageFont||l.baseChartMessageFont,fontSize:G.typeNotSupportedMessageFontSize||l.baseChartMessageFontSize},D.setChartMessage(l.typeNotSupportedMessage,h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0;else if(p.message)D.setChartMessage(p.message,h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0;else if(p.loadError)h._chartMessageImageStyle={imageHAlign:d(G.dataLoadErrorMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(G.dataLoadErrorMessageImageVAlign,
l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(G.dataLoadErrorMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:c(G.dataLoadErrorMessageImageScale,l.baseChartMessageImageScale)},h._chartMessageStyle={color:G.dataLoadErrorMessageColor||l.baseChartMessageColor,fontFamily:G.dataLoadErrorMessageFont||l.baseChartMessageFont,fontSize:G.dataLoadErrorMessageFontSize||l.baseChartMessageFontSize},D.setChartMessage(l.dataLoadErrorMessage,h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0;
else if(p.stallLoad)h._chartMessageImageStyle={imageHAlign:d(G.dataLoadStartMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(G.dataLoadStartMessageImageVAlign,l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(G.dataLoadStartMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:c(G.dataLoadStartMessageImageScale,l.baseChartMessageImageScale)},h._chartMessageStyle={fontFamily:G.dataLoadStartMessageFont||l.baseChartMessageFont,fontSize:G.dataLoadStartMessageFontSize||
l.baseChartMessageFontSize,color:G.dataLoadStartMessageColor||l.baseChartMessageColor},D.setChartMessage(l.dataLoadStartMessage,h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0,r({hasRendered:!0,container:e});else if("zoomscatter"!==f||u.createElement("canvas").getContext)if(b.raiseEvent("internal.drawStart",{chartType:f,logicName:D.name,logicBase:D.base&&D.base.name,defaultSeriesType:D.defaultSeriesType},h),I=h.jsVars&&h.jsVars.themeObject&&h.jsVars.themeObject.getThemedJSONData()||h.getChartData(b.dataFormats.JSON,
!0),t=I.data,I.error instanceof Error)h._chartMessageImageStyle={imageHAlign:d(G.dataInvalidMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(G.dataInvalidMessageImageVAlign,l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(G.dataInvalidMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:c(G.dataInvalidMessageImageScale,l.baseChartMessageImageScale)},h._chartMessageStyle={fontFamily:G.dataInvalidMessageFont||l.baseChartMessageFont,fontSize:G.dataInvalidMessageFontSize||
l.baseChartMessageFontSize,color:G.dataInvalidMessageColor||l.baseChartMessageColor},D.setChartMessage(l.dataInvalidMessage,h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0,h.__state.dataReady=!1,k||b.raiseEvent("dataInvalid",{error:I.error},p.fcObj,void 0,function(){v.raiseEvent("dataxmlinvalid",{},h,[h.id])});else{k||v.raiseEvent("dataloaded",{},h,[h.id]);if(!0===D.chartInstance.disposed)return;G.asyncRender&&!n&&"base"!==f&&(D.setChartMessage(D.chartInstance.options.loadMessage,void 0,e),D.drawChartMessage(),
D.config.hasChartMessage=!1);D.init(e,t,h,r)}else h._chartMessageImageStyle={imageHAlign:d(G.browserNotSupportedMessageImageHAlign,l.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(G.browserNotSupportedMessageImageVAlign,l.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(G.browserNotSupportedMessageImageAlpha,l.baseChartMessageImageAlpha),imageScale:c(G.browserNotSupportedMessageImageScale,l.baseChartMessageImageScale)},h._chartMessageStyle={color:G.browserNotSupportedMessageColor||
l.baseChartMessageColor,fontFamily:G.browserNotSupportedMessageFont||l.baseChartMessageFont,fontSize:G.browserNotSupportedMessageFontSize||l.baseChartMessageFontSize},D.setChartMessage(d(G.browserNotSupportedMessage,l.browserNotSupportedMessage),h,e),D.drawChartMessage(),z=p.hasNativeMessage=!0}p.secondTimeRender=!0}};Q.register("component",["legend","legend",{customConfigFn:null,init:function(){this.graphics||(this.graphics={});this.item||(this.items=[]);this.components||(this.components={})},drawLegend:function(a,
d){var b,h,f,g=this.chart,l=g.config;b=g.components;var k=b.paper,t=this.config,m=this.graphics||(this.graphics={}),D=g.graphics.legendGroup,w;h=m.box;var z=m.caption,G,n=l.height-l.canvasBottom,r=l.canvasLeft,B=l.canvasWidth,q=t.chartMarginLeft||0,u=t.chartMarginRight||0,R=t.chartMarginBottom||0,aa=l.actionBarHeight||0,L=t.actualCanvasMarginLeft||0,P=l.actualCanvasMarginBottom||0,v=l.actualCanvasMarginRight||0,Z=t.alignLegendWithCanvas,E=l.height,T=l.canvasTop,S=t.width,X=t.height,A=l.borderWidth;
f=t.borderRadius;var C=t.backgroundColor,H=t.borderColor,z=t.borderWidth||0,Ra=t.legendPos,N=.5*z,ca=.5*z+2,Ia=c(t.padding,4),sa=.5*Ia,wa=t.scroll.enabled,ma=t.drawn,g=g.get(M,U),va=g.dummyObj,ra=g.animObj,ha=g.transposeAnimDuration,qa=g.animType,na,W,da,fa,ka,g=b.legendScrollBar,O=0,za=0,O=l.oriCanvasLeft,ia=l.oriTopSpace,za=l.oriBottomSpace,ja=b.tb,ua=b.toolBoxAPI.Scroller;Ra===Ja&&(t.align=Ja,t.verticalAlign=K,G=t.layout="vertical");G?(void 0===a&&(a=l.width-u-v-S-A),void 0===d&&(O=c(ia,T),za=
c(za,n),d=O+.5*(E-za-O-X)+(t.y||0))):(void 0===a&&(G=l.width-(q+L+(u+v)),G=Z?B-S:G-S,r=Z?c(O,r):q+L,a=r+G/2),void 0===d&&(d=E-X-P-R-aa));X=J.crispBound(a,d,S,X,z);a=X.x;d=X.y;S=X.width;X=X.height;ma?(t.xL&&(t.xL=oa(Y(t.xL,ca),l.width-t.width-ca)),t.yL&&(t.yL=oa(Y(t.yL,ca),l.height-t.height-ca)),D.show().animateWith(va,ra,{transform:["T",t.xL||a,t.yL||d]},ha,qa)):D.show().transform(["T",a,d]);t.xPos=a;t.yPos=d;D.attr({cursor:t.legendAllowDrag?"move":F});t.legendAllowDrag&&!t._dragEvtListenerBinded&&
(D.drag(function(a,c){var d=c[0],b=c[1];t.legendAllowDrag&&(fa=W+d,ka=da+b,fa=oa(Y(fa,ca),l.width-t.width-ca),ka=oa(Y(ka,ca),l.height-t.height-ca),D.transform("t"+fa+","+ka),t.xPos=t.xL=fa,t.yPos=t.yL=ka)},function(){t.legendAllowDrag&&(W=t.xL||t.xPos,da=t.yL||t.yPos)}),t._dragEvtListenerBinded=!0);ma={x:0,y:0,width:S,height:X,r:f,stroke:H,"stroke-width":z,fill:C||"none",ishot:t.legendAllowDrag};h?(h.animateWith(va,ra,{x:0,y:0,width:S,height:X,r:f},ha,qa),h.attr({stroke:H,"stroke-width":z,fill:C||
"none"})):h=m.box=k.rect(ma,D);ma=t.drawn=!0;h.shadow(t&&t.shadow);w=m.itemGroup||(m.itemGroup=k.group("item",D));wa?(h={isHorizontal:!1},f={scroll:function(a){w.transform(["T",0,(na-t.totalHeight)*a])},mousedown:function(a){a.preventDefault();a.stopPropagation()}},g=b.legendScrollBar,g||(b.legendScrollBar=g=(new ua(h,(ja.idCount||0)+1,ja.pId)).attachEventHandlers(f)),na=X-Ia,w.attr({"clip-rect":"0,"+sa+(","+S+","+na)}),b=(na+Ia)/t.totalHeight,g.draw(S-10+sa-z,N,{height:X-z,scrollRatio:b,startPercent:0,
color:t.legendScrollBgColor}),D.appendChild(g.node)):(g&&g.node&&g.node.hide(),w.attr({"clip-rect":null}),w.node&&w.node.removeAttribute("clip-path"));z=m.caption;if(t.title&&t.title.text!==F&&t.validLegendItem){switch(t.title.align){case e:wa=Ia;break;case p:wa=S-Ia-(wa?10:0);break;default:wa=.5*S}D.trackTooltip(!0);S=t.title.style;ma={text:t.title.text,title:t.title.originalText||F,x:wa,y:Ia,fill:t.title.style.color,direction:t.textDirection,"line-height":S.lineHeight,"vertical-align":V,"text-anchor":t.title.align};
Ia={"font-weight":S.fontWeight,"font-style":S.fontStyle,"font-family":S.fontFamily,"font-size":S.fontSize};z?(z.show().attr(ma),z.css(Ia)):z=m.caption=k.text(ma,Ia,w);z.tooltip(t.title.originalText)}else z&&z.hide();t.showLegend&&!1!==t.enabled?this._drawPointLegendItem():D.hide()},reverseLegendFn:function(){var a=this.components.items||[],c,d=[],b,h=0,e=this.config;for(c=a.length-1;0<=c;c--)a[c].configuration.mainDS?(b=c,d=d.concat(a.splice(b,h+1)),h=0):h++;d.length&&(e.orderReversed=!0,this.components.items=
d.slice(0))},_manageLegendPosition:function(a){var c=this.config,d=this.chart.hasSubDataset,b=c.legendPos,h=this.components.items;c.reversed?d?!c.orderReversed&&this.reverseLegendFn():h&&h.reverse():d&&c.orderReversed&&this.reverseLegendFn();return b===Ja?this._placeLegendBlockRight(a):this._placeLegendBlockBottom(a)},_placeLegendBlockBottom:function(d){var b=this.chart,h=this.components,e=b.config,f=v.TESTSTR,g=e.width,l=e.height,k=e.canvasLeft,t=e.width-(e.canvasRight||0),p=b.linkedItems.smartLabel,
m=this.config,D=m.chartMarginLeft,z=m.chartMarginRight,w=m.chartMarginTop,n=m.alignLegendWithCanvas,r=m.minimiseWrappingInLegend,B=m.legendScale,K=m.numColumns,q=m.padding,u=2*d,R=2*q,aa=R,L=m.title,P=L.padding,Z=parseInt(m.itemStyle.fontSize,10)||10,E=h.items||[],V=E.length,h=m.oriSymbolPadding,S=m.textPadding,T=m.legendPadding,X=e.canvasMarginRight,A=e.canvasMarginLeft,C=b.components.yAxis||[],b=C[0],C=C[1],b=b&&b.config||{},C=C&&C.config||{},H=b.nameMaxW,Ra=C.nameMaxW,N=b.name&&b.name.style||{},
J=C.name&&C.name.style||{},ca=b.axisName||F,Ia=C.axisName||F,sa=0,wa=0,M=0,ma=0,va=C=0,ra=0,ha=0,qa=[],na=!1,W=0,da=0,ka,O,za=b=e.canvasWidth-e.canvasMarginLeft-e.canvasMarginRight,ia;m.paddingBottom=e.height-e.canvasBottom;p.useEllipsesOnOverflow(e.useEllipsesWhenOverflow);p.setStyle(N);ma=p.getOriSize(ca);p.setStyle(J);J=p.getOriSize(Ia);Z+=1;0>=Z&&(Z=1);b-=R;h*=B;Z=oa(Z*B,b);0>=Z&&(h=Z=0);m.symbolWidth=Z;m.textPadding=4;m.legendHeight=e=Z+2*h;m.rowHeight=B=Y(parseInt(m.itemStyle.lineHeight,10)||
12,e);q=S+h+q;p.setStyle(m.itemStyle);N=p.getOriSize(f).height;f=T+m.borderWidth/2+1;f=oa(f,d-N-8);T=.05*B;if(ma||J)ka=c(ma.height,0)>c(J.height,0)?(ia=H)&&ma.width:(ia=Ra)&&J.width;b=n?b:g-(ka+w>l-d?2*ia+z+D+X+A:z+D+A+X);m.initialItemY=0;m.initialItemX=0;if(m.showLegend&&0!==V){for(g=0;g<V;g+=1)ka=E[g],l=ka.config||(ka.config={}),w=ka.configuration,ka=l.name=G(w.label),ka===a||0===w.enabled||!1===w.enabled?l.enabled=0:(l.enabled=1,M+=1,O=!0,ka=p.getOriSize(ka),sa=Y(sa,ka.width),va=Y(va,oa(ka.height,
u)),wa+=ka.width);m.validLegendItem=O;ma=wa/M;w=e+T+S+h+R;wa+=w*M;m.x=(k-D-t+z)/2;m.x=!n&&wa>za?0:m.x;if(O){ma+=w;sa+=w;0<K&&M<K&&(K=M);wa<=b&&(0>=K||K===M)?(K=M,C=wa/M,na=!0,va>B&&(ha=(va-B)/2,B=va)):0<K&&(C=b/K)>ma?C>sa&&(C=sa):b>sa&&(r||1.5*ma>sa)?(K=Aa(b/sa),M<K&&(K=M),C=sa):b>=2*ma?(K=Aa(b/ma),M<K&&(K=M),C=Aa(b/K),C>sa&&(C=sa)):(K=1,C=b);m.itemWidth=C;k=fa(C-w);0>k&&(h=k=S=0);m.symbolPadding=h;m.textPadding=S;m.width=C*K-T;L.oriText!==a&&(p.setStyle(L.style),ka=p.getSmartText(L.oriText,b,u),
L.text=ka.text,ka.tooltext&&(L.originalText=ka.tooltext),L=ka.width+R,m.width<L&&(m.initialItemX=(L-m.width)/2,m.width=L),m.initialItemY=ra=ka.height+P);p.setStyle(m.itemStyle);for(g=0;g<V;g+=1)if(ka=E[g],l=ka.config,0!==l.enabled){0===k&&(qa[da]=!0,l.name=a,P=1,L=parseInt(da/K,10),t=da%K,l._legendX=t*C,l._legendY=L*B+R,l._legendH=P*B,l._totalWidth=Z+h);if(na)ka=p.getOriSize(l.name),ka.height<B&&(l._legendTestY=(B-ka.height)/2),l._markerYGutter=ha,l._legendX=W,l._legendY=R,l._legendH=B,l._totalWidth=
Z+q+ka.width,W+=ka.width+w;else{ka=p.getSmartText(l.name,k,u);l.name=ka.text;for(ka.tooltext&&(l.originalText=ka.tooltext);!0===qa[da];)da+=1;L=ka.height/B;t=da;for(P=0;P<L;P+=1,t+=K)qa[t]=!0;ka.height<B&&(l._legendTestY=(B-ka.height)/2);L=parseInt(da/K,10);t=da%K;l._legendX=t*C;l._legendY=L*B+R;l._legendH=P*B;l._totalWidth=Z+q+ka.width}da++}p=na?1:fa(qa.length/K);m.height=m.totalHeight=aa+(p*B+ra);m.rowHeight=B;m.legendNumColumns=K;m.height-2*h>d?(m.height=d,d=m.scroll||(m.scroll={}),d.enabled=!0,
d.flatScrollBars=m.flatScrollBars,d.scrollBar3DLighting=m.scrollBar3DLighting,m.width=m.width+12>b?m.width:m.width+12):m.scroll.enabled=!1;f+=m.height;m.isActive=!0;m.enabled=!0}else m.enabled=!1,f=m.width=0}else f=0,m.height=0,m.width=0;return{bottom:f,right:0}},_placeLegendBlockRight:function(c){var d=this.config,b=this.components,h=this.chart,e=h.config,f=h.linkedItems.smartLabel,g=h.components.canvas.config.canvasBorderThickness||0,l=d.textPadding,h=d.title.padding,k=d.oriSymbolPadding,t=d.legendPadding,
p=d.legendScale,m=parseInt(d.itemStyle.fontSize,10),D=2*e.canvasHeight,w=0,z=2*d.padding,n=z,F={},r=!1,b=b.items||[],K=b.length,B,q,u,R=0;c-=z+t;m+=1;0>=m&&(m=1);k*=p;m=oa(m*p,c);0>=m&&(k=m=0);d.symbolPadding=k;d.symbolWidth=m;d.legendHeight=p=m+2*k;d.rowHeight=Y(parseInt(d.itemStyle.lineHeight,10)||12,p);g=t+d.borderWidth/2+g;q=c-p-t-l;0>q&&(q=0);f.useEllipsesOnOverflow(e.useEllipsesWhenOverflow);f.setStyle(d.itemStyle);if(d.showLegend&&0!==K){for(R=0;R<K;R+=1)B=b[R],e=B.config||(B.config={}),u=
B.configuration,B=e.name=G(u.label),e._legendX=0,e._legendY=n,0===u.enabled||!1===u.enabled||B===a?e.enabled=0:(e.enabled=1,r=!0,0===q?(n+=e._legendH=p,e.name=a,e._totalWidth=m+k):(B=f.getSmartText(B,q,D),e.name=B.text,B.tooltext&&(e.originalText=B.tooltext),B.height<p&&(e._legendTestY=(p-B.height)/2),e._totalWidth=m+k+l+B.width+t,n+=e._legendH=Y(B.height,p),w=Y(B.width,w)));(d.validLegendItem=r)?(d.itemWidth=w+p+t+l,d.width=d.itemWidth+z,d.title.oriText!==a&&(f.setStyle(d.title.style),B=f.getSmartText(d.title.oriText,
c,D),d.title.text=B.text,B.tooltext&&(d.title.originalText=B.tooltext),f=B.width+z,d.width<f&&(d.initialItemX=(f-d.width)/2,d.width=f),d.initialItemY=B.height+h,n+=d.initialItemY),d.height=d.totalHeight=n,g=oa(d.width+g,c),F.right=g+t,d.isActive=!0,d.enabled=!0):(d.enabled=!1,d.width=0,F.right=0)}else F.right=0,d.height=0,d.width=0;return F},postSpaceManager:function(){var a=this.config,c=this.chart.config.canvasHeight;a.legendPos===Ja&&(a.height>c?(a.height=c,a.scroll.enabled=!0,a.scroll.flatScrollBars=
a.flatScrollBars,a.scroll.scrollBar3DLighting=a.scrollBar3DLighting,a.width+=(a.scroll.scrollBarWidth=10)+(a.scroll.scrollBarPadding=2)):a.scroll.enabled=!1)},configure:function(){var b=this.chart,h=this.config,e=b.config,f=e.style,g=b.jsonData.chart||b.jsonData.map,l=b.components.colorManager,k=b.is3D?Ta.chart3D:Ta.chart2D,p,m,z=c(g.useroundedges,0);p=f.outCancolor;m=c(g.legendpadding,7);var w=d(g.legenditemfont,f.outCanfontFamily),n=c(g.legendiconscale,1),r=la(g.legenditemfontsize,f.fontSize),B=
d(g.legenditemfontcolor,p).replace(/^#?([a-f0-9]+)/ig,"#$1"),K=d(g.legendiconbgcolor),q=d(g.legendiconbordercolor),u=d(g.legendiconbgalpha,g.legendiconalpha,100),R=d(g.legendiconborderalpha,g.legendiconalpha,100),L=c(g.legendiconsides,4),aa=c(g.legendiconborderthickness),P=c(g.legendiconstartangle,45),v=ea(d(g.legenditemhoverfontcolor,B)),Z=Va[c(g.legenditemfontbold,0)]||F,f=la(g.legendcaptionfontsize,f.fontSize)+"px";h.isActive=!1;h.chartMarginTop=e.origMarginTop;h.chartMarginRight=e.origMarginRight;
h.chartMarginBottom=e.origMarginBottom;h.chartMarginLeft=e.origMarginLeft;h.showLegend=c(g.showlegend,!b.dontShowLegendByDefault,1);r+="px";h.legendPos=d(g.legendposition,b.legendposition,T).toLowerCase();h.numColumns=c(g.legendnumcolumns,0);h.xL=h.yL=0;if(0>=n||5<n)n=1;h.drawCustomLegendIcon=c(g.drawcustomlegendicon,0);h.customLegendConfig={bgColor:K,borderColor:q,bgAlpha:u,borderAlpha:R,borderThickness:aa,startAngle:P,sides:L};h.legendScale=n;h.legendPadding=m;h.oriSymbolPadding=3;h.textPadding=
4;h.alignLegendWithCanvas=c(g.alignlegendwithcanvas,1);h.itemStyle={color:pa(B),fontFamily:w,fontSize:r,fontWeight:Z};ga(h.itemStyle);h.itemHiddenStyle={fontFamily:w,fontSize:r,color:pa(d(g.legenditemhiddencolor,"cccccc").replace(/^#?([a-f0-9]+)/ig,"#$1")),fontWeight:Z};ga(h.itemHiddenStyle);h.title.style={fontFamily:d(g.legendcaptionfont,w),fontSize:f,color:d(g.legendcaptionfontcolor,p).replace(/^#?([a-f0-9]+)/ig,"#$1"),fontWeight:Va[c(g.legendcaptionfontbold,1)]||F};h.title.align=Ua[g.legendcaptionalignment&&
g.legendcaptionalignment.toLowerCase()||Ua.center]||Ua.center;h.itemHoverStyle={color:pa(v.replace(/^#?([a-f0-9]+)/ig,"#$1"))};h.title.style["text-anchor"]=h.title.align;h.padding=4;e=d(g.legendbordercolor,l.getColor(k.legendBorderColor));p=c(g.legendborderalpha,100);m=c(g.legendbgalpha,100);h.backgroundColor=pa(d(g.legendbgcolor,l.getColor(k.legendBgColor)),m);h.borderColor=pa(e,p);h.borderWidth=c(g.legendborderthickness,!z||g.legendbordercolor?1:0);h.borderRadius=c(z,0);h.shadow=!!c(g.legendshadow,
1);h.symbol3DLighting=!!c(g.use3dlighting,g.useplotgradientcolor,1);h.shadow&&(h.shadow={enabled:h.shadow,opacity:Y(p,m)/100});h.reversed=!!c(g.reverselegend,0);h.style={padding:4};h.lineWidth=c(g.linethickness,2);(h.interactiveLegend=!1!==b.hasInteractiveLegend&&!!c(g.interactivelegend,1))?(h.interactiveLegend=!0,h.symbolStyle={_cursor:"hand",cursor:t}):(h.interactiveLegend=!1,h.itemStyle.cursor="default",h.itemHoverStyle.cursor="inherit");h.borderRadius=c(g.legendborderradius,z?3:0);h.legendAllowDrag=
!!c(g.legendallowdrag,0);h.title.text=h.title.oriText=G(D(g.legendcaption,a));h.legendScrollBgColor=ea(d(g.legendscrollbgcolor,g.scrollcolor,l.getColor("altHGridColor")));h.legendScrollBarColor=d(g.legendscrollbarcolor,e);h.legendScrollBtnColor=d(g.legendscrollbtncolor,e);h.minimiseWrappingInLegend=c(g.minimisewrappinginlegend,0);h.flatScrollBars=c(g.flatscrollbars,0);h.scrollBar3DLighting=c(g.scrollbar3dlighting,1);h.orderReversed=!1},_drawPointLegendItem:function(){var a=this,h=a.chart,f=h.hasSubDataset,
g=h.config,l=h.get(M,U),k=l.transposeAnimDuration,p=l.animType,m=l.dummyObj,l=l.animObj,D=h.components.dataset,z=h.components.paper,w=a.config,G=w.reversed,n=a.components.items||[],F=w.legendHeight,r=w.symbolPadding,B=w.symbolWidth,K=w.interactiveLegend,q=w.textPadding||2,u=c(w.padding,4),g=g.textDirection,R=w.itemHiddenStyle,L=w.itemStyle,aa=w.itemHoverStyle,P=w.lineWidth,Z=L.color,E=R&&R.color||"#CCCCCC",R=a.graphics,S=R.itemGroup,T=w.drawCustomLegendIcon,X=w.customLegendConfig,C,A,H,Ra,N,J,ca,
ma,Y,va,ra,qa,ka,W,da,fa,O,oa,za,ia,ja,ua,xa,ea,ya,Aa,ga,la,ta,Q=v.hashify,Ca=function(a){var c=this.data("legendItem"),d=c.configuration.datasetObj||c.dataset,d=d.getEventArgs?d.getEventArgs(c):{};a=ha(h.linkedItems.container,a);d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=a.pageX;d.pageY=a.pageY;d.legendItemIndex=c.index;d.legendItemId=c.legendItemId;d.preventDefaults=function(){};b.raiseEvent("LegendItemClicked",d,h.chartInstance)},Da=function(a){var c=this.data("legendItem")||{},d=c.configuration.datasetObj||
c.dataset,e=this.data("interactive"),d=d.getEventArgs?d.getEventArgs(c):{};a=ha(h.chartInstance,a,h);var f=this.data("itemHoverStyle"),g=c.graphics&&c.graphics.legendItemText;!1!==c.dataset.visible&&e&&g&&g.attr({fill:f.color});d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=a.pageX;d.pageY=a.pageY;d.legendItemIndex=c.index;d.legendItemId=c.legendItemId;b.raiseEvent("LegendItemRollover",d,h.chartInstance)},Ea=function(a){var c=this.data("legendItem")||{},d=c.configuration.datasetObj||c.dataset,e=this.data("interactive"),
d=d.getEventArgs?d.getEventArgs(c):{};a=ha(h.chartInstance,a,h);var f=!1!==c.dataset.visible,g=this.data("itemStyle"),l=c.graphics&&c.graphics.legendItemText;f&&e&&l&&l.attr({fill:g.color});d.chartX=a.chartX;d.chartY=a.chartY;d.pageX=a.pageX;d.pageY=a.pageY;d.legendItemIndex=c.index;d.legendItemId=c.legendItemId;b.raiseEvent("LegendItemRollout",d,h.chartInstance)},Ga=function(c){var d=this.data("legendItem"),b=d.dataset;this.data("interactive")&&d.legendClickFN.call(a,b,d,D);Ca.call(this,c)},Fa=function(){oa=
.5*B;O=ma+r+oa;Ra=Y+(da._markerYGutter||0)+r+oa;Ja&&(oa*=.6);la=Ia(ua.anchorSide);ia=ua.symbol=la&&la.split("_")||[];za="spoke"===ia[0]?1:0;Ka={polypath:[ia[1]||2,O,Ra,oa,ua.startAngle,ua.spoke||za]};Ta={cursor:L.cursor||t,stroke:H?xa:E,fill:H?ea:E,"stroke-width":ja,ishot:K}},Ma,Ta,La={},Ja,Ka,Na;C=w.initialItemX||0;A=w.initialItemY||0;if(!1!==w.enabled&&w.showLegend){S.css(L);ra=0;for(qa=n.length;ra<qa;ra+=1)w=n[ra],w.index=ra,ua=w.configuration,J=ua.type,da=w.config=w.config||(w.config={}),R=w.graphics||
(w.graphics={}),ka=w.dataset,ka.graphics&&(ka.graphics.legendGraphics=R),xa=da.strokeColor=ua.strokeColor||"000000",ea=da.fillColor=ua.fillColor||"000000",da.interactiveLegend=ua.interactiveLegend,da.legendBackgroundColor=ua.legendBackgroundColor?na({color:ua.legendBackgroundColor,alpha:20}):na(Sa),ya=ua.anchorSide,Aa=da.drawLine=ua.drawLine,P=ua.lineWidth||P,ga=ua.lineColor||xa,ma=C+da._legendX+u,Y=A+da._legendY-u,ja=da.strokeWidth=ua.strokeWidth||.5,va=da._legendH,H=!1!==ka.visible,ka=R.legendItemBackground,
N=R.legendItemText,W=R.legendItemLine,fa=R.legendItemSymbol,K=d(da.interactiveLegend,K),!K&&(L.cursor="default"),0!==da.enabled?(ta=ma+F+q-2,Na=Y+(da._legendTestY||0),ca={text:da.name,fill:H?Z:E,"text-anchor":e,"vertical-align":V,cursor:L.cursor||t,direction:g,"line-height":L.lineHeight},Ma=Ka=null,da.textAttr=ca,N?(N.show().animateWith(m,l,{x:ta,y:Na},k,p),N.attr(ca)):(ca.x=ta,ca.y=Na,N=R.legendItemText=z.text(ca,S).data("legendItem",da)),Ja=!1,T&&!1!==ua.customLegendIcon?(ta=X.borderColor,N=d(X.borderAlpha),
ga=X.bgColor,ca=d(X.bgAlpha,"100"),ya||"line"===J||Aa||"spline"===J?(J=Q(ua.rawStrokeColor),ua.rawFillColor=Q(ua.rawFillColor),ea=d(ga,ua.rawFillColor,da.color),/^#/.test(ea)&&(ea=pa(ea,ca)),ga=d(ta,J,da.strokeColor),ga=pa(ga,N),da.anchorSide=X.sides):(J=d(ua.rawFillColor,da.fillColor),ea=d(ga,J),ea=pa(ea,ca),X.borderColor?ga=pa(X.borderColor,N):(/rgb/.test(J)&&(J=Ya(J)),ga=Ha(J,60).replace(sa,wa),ga=pa(ga,N))),da.fillColor=ea,da.strokeColor=ga,oa=.5*B,O=ma+r+oa,Ra=Y+(da._markerYGutter||0)+r+oa,ia=
(la=Ia(X.sides))&&Ia(X.sides).split("_")||[],za="spoke"===ia[0]?1:0,Ka={polypath:[ia[1]||2,O,Ra,oa,X.startAngle,za]},Ta={cursor:L.cursor||t,stroke:H?ga:E,fill:H?ea:E,"stroke-width":c(X.borderThickness,1),ishot:K}):"line"===J||Aa?(Ra=Y+(da._markerYGutter||0)+r+.5*B,Ma={path:["M",ma+r,Ra,"L",ma+r+B,Ra]},Ja=!0,La={"stroke-width":P,stroke:H?ga:E,cursor:L.cursor||t,ishot:K},ya&&Fa()):ya?Fa():"line"!==J&&(fa=R.legendItemSymbol,J=a._getSymbolPath(ma+r,Y+(da._markerYGutter||0)+r,B,B,J),Ka={path:J.path},Ta=
{"stroke-width":.5,stroke:H?xa:E,fill:H?ea:E,cursor:L.cursor||t,ishot:K}),Ma&&Ja?(da.lineAttr=La,W||(W=R.legendItemLine=z.path(S),W.attr(Ma)),W.show().animateWith(m,l,Ma,k,p),W.attr(La).data("legendItem",da)):W&&W.hide(),Ka?(da.symbolAttr=Ta,fa||(fa=R.legendItemSymbol=z.polypath(S),fa.attr(Ka)),fa.show().animateWith(m,l,Ka,k,p),fa.attr(Ta),fa.data("legendItem",da)):fa&&fa.hide(),va={x:ma,y:Y,width:da._totalWidth,height:va},W={r:0,fill:da.legendBackgroundColor,"stroke-width":1,stroke:"none",cursor:L.cursor||
t,ishot:K},ka||(ka=R.legendItemBackground=z.rect(S),ka.attr(va).mouseover(Da).mouseout(Ea).click(Ga)),ka.show().animateWith(m,l,va,k,p),ka.attr(W),ka.data("legendItem",w).data("interactive",K).data("itemHoverStyle",aa).data("itemStyle",L)):(N&&N.hide(),ka&&ka.hide(),fa&&fa.hide(),W&&W.hide());!f&&G&&n.reverse()}},_getSymbolPath:function(a,c,d,b,h){var e=["M"],f,g,l;switch(h){case "column":case "dragcolumn":case "column3d":f=.25*d;h=.5*f;g=.7*b;l=.4*b;e=e.concat([a,c+b,"l",0,-g,f,0,0,g,"z","m",f+h,
0,"l",0,-b,f,0,0,b,"z","m",f+h,0,"l",0,-l,f,0,0,l,"z"]);break;case "bar2d":case "bar3d":f=.3*d;h=.6*d;g=b/4;l=g/2;e=e.concat([a,c,"L",a+h,c,a+h,c+g,a,c+g,"Z","M",a,c+g+l,"L",a+d,c+g+l,a+d,c+g+l+g,a,c+2*g+l,"Z","M",a,c+2*(g+l),"L",a+f,c+2*(g+l),a+f,c+b,a,c+b,"Z"]);break;case "area":case "area3d":case "areaspline":case "dragarea":g=.6*b;l=.2*b;h=.8*b;e=e.concat([a,c+h,"L",a,c+g,a+.3*d,c+l,a+.6*d,c+g,a+d,c+l,a+d,c+h,"Z"]);break;case "pie2d":case "pie3d":case "doughnut2d":case "doughnut3d":f=.5*d;h=.9*
f;d=a+f+1;b=c+f-1;a=a+f-1;c=c+f+1;e=e.concat(["M",d,b,"L",d,b-h+1,"A",h-1,h-1,0,0,1,d+h-1,b,"Z","M",a,c,"L",a,c-h,"A",h,h,0,1,0,a+h,c,"Z"]);break;case "boxandwhisker2d":e=e.concat([a,c,"L",a+d,c,a+d,c+b,a,c+b,"Z"]);break;default:e=e.concat([a,c,"L",a+d,c,a+d,c+b,a,c+b,"Z"])}return{path:e}},emptyItems:function(a,c){var d=this.components,b=d.items||(d.items=[]),h,e,d=void 0!==c?c:b.length,f=b.splice(a,d);a=0;for(d=f.length;a<d;a+=1)for(h in b=(f[a]||(f[a]={})).graphics,b)(e=b[h])&&e.remove&&"function"===
typeof e.remove&&e.remove()},removeItem:function(a){var c=this.getItems()||[],d,b,h,e=c.length;for(d=0;d<e;d++)if(b=c[d],h=b.legendItemId,a===h){Da.call(b);c.splice(d,1);break}},addItems:function(a,c,b){var h,e=this.components;h=this.lastItemId;var f=d(a.legendItemId,b.legendItemId),e=e.items||(e.items=[]);void 0!==f?(this.configureItems(f,{legendClickFN:c,configuration:b,dataset:a}),h=f):(void 0===h?this.lastItemId=h="FCLEGEND_0":(h=(h=h.split("_"))&&h[1],this.lastItemId=h="FCLEGEND_"+ ++h),e.push({legendItemId:h,
dataset:a,legendClickFN:c,configuration:b||{}}));return h},configureItems:function(a,c){var b=this.components.items,h,e,f=b.length,g,l;for(e=0;e<f&&(l=b[e],!l.dataset||(g=d(l.dataset.legendItemId,l.legendItemId),g!==a));e++);for(h in l)if(h in c)switch(h){case "configuration":this.mergeConf(c[h],l[h]);break;default:l[h]=c[h]}},mergeConf:function(a,c){var d,b;for(d in a)b=a[d],void 0!==b&&null!==b&&(c[d]=b)},getItems:function(){return this.components.items},hide:function(){this.chart.graphics.legendGroup.hide()}},
void 0,{enabled:!0,symbolWidth:12,borderRadius:1,backgroundColor:"#FFFFFF",initialItemX:0,title:{text:F,x:0,y:0,padding:2},scroll:{},itemStyle:{}}]);Q.register("component",["toolbox","horizontaltoolbox",{init:function(a){this.config={type:a};this.components={};this.graphics={};this._configure()},_getPosition:function(){var a=this.config.type,c=a.frame,d=a.orientation,b=a.placement,h={chart:{outer:{left:0,right:0,top:0,bottom:0},inner:{left:0,right:0,top:0,bottom:0}},canvas:{outer:{left:0,right:0,
top:0,bottom:0},inner:{left:0,right:0,top:0,bottom:0}}};!a&&(a={});return c&&b&&d?h[c][b][d]:a},_configure:function(){var b,h,e=this.config,f=this.chart,g=f.jsonData.chart,l=f.config,f=l.width,l=l.height;e.scale=c(g.toolbarbuttonscale,1.15);e.width=c(g.toolbarbuttonwidth,15);e.height=c(g.toolbarbuttonheight,15);e.radius=c(g.toolbarbuttonradius,2);e.spacing=c(g.toolbarbuttonspacing,5);e.fill=pa(d(g.toolbarbuttoncolor,"ffffff"));e.labelFill=pa(d(g.toolbarlabelcolor,"cccccc"));e.symbolFill=pa(d(g.toolbarsymbolcolor,
"ffffff"));e.hoverFill=pa(d(g.toolbarbuttonhovercolor,"ffffff"));e.stroke=pa(d(g.toolbarbuttonbordercolor,"bbbbbb"));e.symbolStroke=pa(d(g.toolbarsymbolbordercolor,"9a9a9a"));e.strokeWidth=c(g.toolbarbuttonborderthickness,1);e.symbolStrokeWidth=c(g.toolbarsymbolborderthickness,1);b=e.symbolPadding=c(g.toolbarsymbolpadding,5);e.symbolHPadding=c(g.toolbarsymbolhpadding,b);e.symbolVPadding=c(g.toolbarsymbolvpadding,b);h=e.position=d(g.toolbarposition,"tr").toLowerCase();switch(h){case "tr":case "rt":case "top right":case "right top":h=
"tr";break;case "br":case "rb":case "bottom right":case "right bottom":h="br";break;case "tl":case "lt":case "top left":case "left top":h="tl";break;case "bl":case "lb":case "bottom left":case "left bottom":h="bl";break;default:h="tr"}b=e.hAlign=(a+g.toolbarhalign).toLowerCase()===Fa?"l":h.charAt(1);h=e.vAlign=(a+g.toolbarvalign).toLowerCase()===T?"b":h.charAt(0);e.hDirection=c(g.toolbarhdirection,"r"===b?-1:1);e.vDirection=c(g.toolbarvdirection,"b"===h?-1:1);e.vMargin=c(g.toolbarvmargin,6);e.hMargin=
c(g.toolbarhmargin,10);e.x=c(g.toolbarx,"l"===b?0:f);e.y=c(g.toolbary,"t"===h?0:l)},_manageToolBoxPosition:function(a,c){var d,b,h=0,e=this.components;for(d in e)e.hasOwnProperty(d)&&(b=e[d],b=b._spaceOccupied(),h=Y(h,b.height));h>c&&this._postSpaceManager();return{top:0,bottom:h,left:0,right:0}},addItem:function(a){var c,d,b,h=this.components;for(c=0;c<a.length;c+=1)b=a[c],d=h[b.name]=new (Q.register("component",["toolButton","button"])),d.init(this,b),d.chart=this.chart},draw:function(){var a,c,
d=this.components,b=this.x,h=this.y;for(a in d)d.hasOwnProperty(a)&&(c=d[a],c.draw(b,h))},_postSpaceManager:function(){}}]);Q.register("component",["toolBox","verticalToolBox",{},"horizontaltoolbox"]);Q.register("component",["toolButton","button",{init:function(){this.config={};this.components={};this.graphics={};this._configure.apply(this,arguments)},_configure:function(a,b){var h=a.config,e=this.config;e.type=b.type;e.scale=c(b.scale,h.scale);e.width=c(b.width,h.width);e.height=c(b.height,h.height);
e.radius=c(b.radius,h.radius);e.spacing=c(b.spacing,h.spacing);e.fill=pa(d(b.fill,h.fill));h.x=c(b.x,h.x);h.y=c(b.y,h.y)},draw:function(){this["_draw"+this.config.type]()},_drawScroller:function(){var a=this.chart,d=a.components,h=a.config,e=a.jsonData.chart,f=d.paper,g=a.graphics,l=d.xAxis["0"]||{},k=l.config||{},t=k.rawAttr.axisLineThickness,d=h.scrollOptions||{},p=h.canvasTop,m=h.canvasLeft,D=h.canvasWidth,w=h.canvasHeight,z=h.canvasBorderWidth,k=z||(k.showLine?t:0),G=z||t,t=z||t,e=h.useRoundEdges||
(h.useRoundEdges=c(e.useroundedges,0)),n,r,F,B,K,q,u,R,L,aa,P,Z=g.scroller,z=g.datasetGroup,E;d.enabled&&(E=g.scroll=g.scroll||f.group("scroll").insertAfter(z),z=d.scrollRatio,B=c(d.startPercent),K=d.viewPortMax,q=d.viewPortMin,r=d.vxLength,fa(r),u=d.showButtons,R=d.height,L=d.padding,aa=d.color,P=d.flatScrollBars,r=d.windowedCanvasWidth=l.getAxisPosition(r),n=d.fullCanvasWidth=l.getAxisPosition(K-q)-r,F=ua(B*n),Z||(Z=g.scroller=f.scroller(m-G,p+w+k+L-!!k,D+G+t,R,!0,{showButtons:u,displayStyleFlat:P,
scrollRatio:z,scrollPosition:B},E).data("fullCanvasWidth",n).data("windowedCanvasWidth",r).attr({"scroll-display-style":P,fill:aa,r:e&&2||0}).scroll(function(c){var d=h.viewPortConfig;F=-ua(c*n);d.x=-F/d.scaleX;v.chartAPI.mscolumn2d._drawDataset.call(a);l.draw()})),function(){var c;J.eve.on("raphael.scroll.start."+Z.node.id,function(d){c=d;b.raiseEvent("scrollstart",{scrollPosition:d},a.chartInstance)});J.eve.on("raphael.scroll.end."+Z.node.id,function(d){b.raiseEvent("scrollend",{prevScrollPosition:c,
scrollPosition:d},a.chartInstance)})}());this._finalizeScrollPlots();return d.enabled},_finalizeScrollPlots:function(){var a=this.chart,d=a.config,h=a.container,f=a.graphics,g=f.scroller,l=f.datasetGroup,k=f.datalabelsGroup,t=f.trackerGroup,m,D={},w,z,G=a.components.xAxis["0"]||{};w=d.scrollOptions||{};var n=c(w.startPercent),r=w.fullCanvasWidth,F,B=d.animation,K=w.startPercent,d=[Y(0,d.canvasLeft),Y(0,d.canvasTop),Y(1,d.canvasWidth),Y(1,d.canvasHeight)];w.enabled&&(l.attr({"clip-rect":d}),k.attr({"clip-rect":d}),
t.attr({"clip-rect":d}),w=function(c){var d=f.canvas,h=m.left,l=m.top,k={pageX:0,pageY:0},t=c.state,k=eb&&v.getTouchEvent(c)||k;c=c.originalEvent;h=(c.clientX||c.pageX||k.pageX)-h;l=(c.clientY||c.pageY||k.pageY)-l;switch(t){case e:z=d.isPointInside(h,l);D.ox=z&&h||null;if(!z)return!1;D.prevScrollPosition=g.attrs["scroll-position"];b.raiseEvent("scrollstart",{scrollPosition:D.prevScrollPosition},a.logic.chartInstance);break;case p:b.raiseEvent("scrollend",{prevScrollPosition:D.prevScrollPosition,scrollPosition:D.scrollPosition},
a.logic.chartInstance);z=!1;D={};break;default:z&&(d=h-D.ox,D.ox=h,D.scrollPosition=g.attrs["scroll-position"]-d/r,g.attr({"scroll-position":D.scrollPosition}))}},eb&&(m=va(h),h&&(qa(h,"pointerdrag",w),ra(h,"pointerdrag",w))),0<n&&(F=-ua(n*r),l&&l.transform(["T",F,0]),t&&t.transform(["T",F,0]),G.setOffset&&G.setOffset(F),B&&K?a.animationCompleteQueue.push({fn:function(){k&&k.transform(["T",F,0])},scope:a}):k&&k.transform(["T",F,0])))},_spaceOccupied:function(){var a=this.config;return{x:a.x,y:a.y,
width:a.width,height:a.height}}}]);ta("base",{creditLabel:$a,setChartMessage:function(a,b,h){var e=this.components||(this.components={}),f=this.chartInstance,g=f.options,l=f.args,k=this.config||(this.config={}),t=this.linkedItems&&this.linkedItems.smartLabel||f.jsVars.smartLabel,p=v.getImageURL(void 0!==a?a:g.dataEmptyMessage),D,w;h&&!this.linkedItems?this.linkedItems={container:h}:h=this.linkedItems.container;D=k.prevWidth=h.offsetWidth;w=k.prevHeight=h.offsetHeight;a=k.height=Number(w);f=k.width=
Number(D);k.hasChartMessage=!0;e.paper?e.paper.setSize(D,w):(h=e.paper=new J(h,D,w),h.setConfig("stroke-linecap",m));J.svg&&this._createDummyText();p.image?(a=p.string,b=b?{imageHAlign:d(b._chartMessageImageStyle.imageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(b._chartMessageImageStyle.imageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(b._chartMessageImageStyle.imageAlpha,g.baseChartMessageImageAlpha),imageScale:c(b._chartMessageImageStyle.imageScale,g.baseChartMessageImageScale)}:
{imageHAlign:d(l.dataEmptyMessageImageHAlign,g.baseChartMessageImageHAlign).toLowerCase(),imageVAlign:d(l.dataEmptyMessageImageVAlign,g.baseChartMessageImageVAlign).toLowerCase(),imageAlpha:c(l.dataEmptyMessageImageAlpha,g.baseChartMessageImageAlpha),imageScale:c(l.dataEmptyMessageImageScale,g.baseChartMessageImageScale)},k.chartMessageType="image"):(b=b?{"font-family":b._chartMessageStyle.fontFamily||g.baseChartMessageFont,"font-size":b._chartMessageStyle.fontSize||g.baseChartMessageFontSize,fill:b._chartMessageStyle.color||
g.baseChartMessageColor}:{"font-family":l.dataEmptyMessageFont||g.baseChartMessageFont,"font-size":l.dataEmptyMessageFontSize||g.baseChartMessageFontSize,fill:l.dataEmptyMessageColor||g.baseChartMessageColor},t.setStyle(b),g=t.getSmartText(G(p.string),f,a),a={text:g.text,x:f/2,y:a/2},k.chartMessageType="text");k.chartMessageAttr=a;k.chartMessageStyle=b},_hideChartMessage:function(){var a=this.config,c=this.components.chartMessage,d=c&&c.graphics,b;if(c)for(b in"image"===a.chartMessageType&&!d.backgroundImage&&
d.backgroundElement&&(a.stopImageDraw=!0),a&&(a.hasChartMessage=!1),d)d[b].hide?d[b].hide():d[b][0]&&d[b][0].hide()},drawChartMessage:function(){var a=this.config,c=this.components,d=c.paper,b,c=c.chartMessage||(c.chartMessage={}),c=c.graphics||(c.graphics={});b=this.graphics||(this.graphics={});var h=aa(a.chartMessageAttr,a.chartMessageStyle);b=b.messageGroup||(b.messageGroup=d.group("messageGroup"));this._hideChartMessage();a.hasChartMessage=!0;"image"===a.chartMessageType?this._drawBackground(a.chartMessageAttr,
a.chartMessageStyle):c.message||"text"!==a.chartMessageType?(c.message=c.message.attr(h),c.message.show()):c.message=d.text(h,b);this._drawCreditLabel()},_createDummyText:function(){var a=this.components.paper,c=this.linkedItems,d=c.txtElem,b;d||(d=A.document.createElementNS("http://www.w3.org/2000/svg","text"),d.setAttribute("x",-100),d.setAttribute("y",-100),b=A.document.createTextNode("abcdefhiklmnopqrstuvwxyz"),d.appendChild(b),a.canvas.appendChild(d),J.cachedFontHeight&&(J.cachedFontHeight.txtElem=
c.txtElem=d))},dispose:function(){var a=this.components,a=a&&a.paper,c=this.linkedItems&&this.linkedItems.eventListeners,d=c&&c.length;for(this._clearTimers&&this._clearTimers();d--;)c[d].unlisten();this._removeWaitingJobs();a&&(a.clear(),a.remove());this.chartInstance&&delete this.chartInstance.apiInstance;Da.call(this)},_removeWaitingJobs:function(){var a=this.jobList,c,d,b,h;for(h in a)for(b=a[h],d=b.length,c=0;c<d;c++)hb.removeJob(b[c])},_drawBackground:function(h,e){var g=this,l=g.components,
I=g.graphics,k=g.jsonData&&g.jsonData.chart||{},t=l.paper,p=h?l.chartMessage:l.background,m=p.graphics,l=m.backgroundElement,D=m.borderElement,p=p.config||{},w=g.config,z=w.width,G=w.height,n,r,F,B,q,u,R,L=g.get&&g.get(M,U)||{},aa=L.animType,P=L.animObj,E=L.dummyObj,S=L.duration,X,C,A=h?I.messageGroup:I.backgroundGroup,H=p.borderWidth||0,I=p.borderRadius,L=p.borderDashStyle,Ra=p.borderColor,N=p.bgSWF=d(h,k.bgimage,k.bgswf),J=p.bgSWFAlpha=c(e&&e.imageAlpha,k.bgimagealpha,k.bgswfalpha,100),sa=p.imgClipRect=
H+","+H+","+(z-2*H)+","+(G-2*H),Ia=d(k.bgimagedisplaymode,Z).toLowerCase(),wa=(e&&f(e.imageVAlign)||f(k.bgimagevalign,a)).toLowerCase(),Y=(e&&e.imageHAlign||k.bgimagehalign||a).toLowerCase(),va=p.bgImageScale=c(e&&e.imageScale,k.bgimagescale,100),k=p.containerBackgroundColor=v.getContainerBackgroundColor(g);t.canvas.style.backgroundColor=k;"tile"==Ia||"fill"==Ia||"fit"==Ia?(wa!=V&&wa!=K&&wa!=T&&(wa=K),Y!=Fa&&Y!=K&&Y!=Ja&&(Y=K)):(wa!=V&&wa!=K&&wa!=T&&(wa=V),Y!=Fa&&Y!=K&&Y!=Ja&&(Y=Fa));p.bgSWFAlpha=
J;p.bgImageVAlign=wa;p.bgImageHAlign=Y;p.backgroundColor=p=!h&&g._getBackgroundCosmetics();k={x:H,y:H,width:z-2*H,height:G-2*H,stroke:"none",fill:na(p)};l?(l.animateWith(E,P,{x:H,y:H,width:z-2*H,height:G-2*H},S,aa),l.attr({stroke:"none",fill:na(p)})):m.backgroundElement=t.rect(k,A);k={x:H/2,y:H/2,width:z-H,height:G-H,stroke:Ra,"stroke-width":H,"stroke-dasharray":L,fill:"none",r:I||0};D||h?h||(D.animateWith(E,P,{x:H/2,y:H/2,width:z-H,height:G-H,r:I||0},S,aa),D.attr({stroke:Ra,"stroke-width":H,"stroke-dasharray":L,
fill:"none"})):m.borderElement=t.rect(k,A);if(N)n=new ca,F=r=1,n.onload=function(){if(w.stopImageDraw)w.stopImageDraw=!1;else{!m.backgroundImage&&(m.backgroundImage=[]);if(m.backgroundImage)for(C=0,X=m.backgroundImage.length;C<X;C++)m.backgroundImage[C].hide();B=ma(Ia,wa,Y,va,H,z,G,n);B["clip-rect"]=sa;if(B.tileInfo)for(r=B.tileInfo.xCount,F=u=B.tileInfo.yCount,q=B.y,delete B.tileInfo,R=0;r&&B.width&&B.height;)--u,m.backgroundImage[R]||(m.backgroundImage[R]=t.image(N,A)),m.backgroundImage[R].show(),
m.backgroundImage[R].animateWith(E,P,B,S,aa),m.backgroundImage[R].attr({src:N}).css({opacity:.01*J}),B.y+=B.height,0===u&&(u=F,--r,B.x+=B.width,B.y=q),R++;else m.backgroundImage[0]||(m.backgroundImage[0]=t.image(N,A),m.backgroundImage[0].attr(B)),m.backgroundImage[0].show(),m.backgroundImage[0].animateWith(E,P,B,S,aa),m.backgroundImage[0].css({opacity:.01*J}).attr({src:N,visibility:ka,"clip-rect":sa});b.raiseEvent("BackgroundLoaded",{url:N,bgImageAlpha:100*J,bgImageDisplayMode:Ia,bgImageVAlign:wa,
bgImageHAlign:Y,bgImageScale:va,imageWidth:n.width,imageHeight:n.height},g.chartInstance)}},n.onerror=function(a){b.raiseEvent("BackgroundLoadError",{url:N,bgImageAlpha:100*J,error:a,bgImageDisplayMode:Ia,bgImageVAlign:wa,bgImageHAlign:Y,bgImageScale:va},g.chartInstance)},n.src=N;else if(m.backgroundImage)for(C=0,X=m.backgroundImage.length;C<X;C++)m.backgroundImage[C].hide()},redraw:function(){var a=this.graphics.dummyObj;a&&a.stop(void 0,!0,!0);this.draw&&this.draw()},_drawCreditLabel:function(){var a=
b.core.options.creditLabel,c=this.chartInstance.args.creditLabel,d=this.config.height,h=this.graphics,f=h.creditLabel,g=h.creditGroup,l=h.parentGroup||h.messageGroup,k=this.components.paper,p={href:v.CREDIT_HREF,text:v.CREDIT_STRING},a=this.creditLabel&&(void 0===c?!1!==a:!1!==c);g||(g=h.creditGroup=k.group("creditgroup"));l&&g.insertAfter(l);d={text:p.text,x:6,y:d-4,"vertical-align":T,"text-anchor":e,fill:"rgba(0,0,0,0.5)",title:p.title||F};h={fontSize:9,fontFamily:"Verdana,sans",cursor:t,_cursor:"hand"};
a&&(f?f.attr(d).css(h):f=this.graphics.creditLabel=k.text(d,h,g).click(function(){try{A.open(p.href)}catch(a){(A.top||A).location.href=p.href}}))},_mouseEvtHandler:function(a){var c=a.data.mouseTracker,d=this.config,b=d.scrollEnabled,h=d.canvasLeft-(d.toleranceLeft||0),e=d.canvasRight+(d.toleranceRight||0),f=d.canvasBottom+(d.toleranceBottom||0),g=d.canvasTop-(d.toleranceTop||0),l=d.datasetOrder||this.components.dataset,k=v.getMouseCoordinate(this.linkedItems.container,a.originalEvent,this),p=k.chartX,
k=k.chartY,t,m=this.components,D="datasetGroup_"+l[0].type,w,z=!1,G=l.length,n,e=p>h&&p<e&&k>g&&k<f,f=c._lastDatasetIndex,h=c._lastPointIndex;b&&e&&this._swipeX(a,p);if(e)for(;G--&&!z;)(t=l[G])&&t.visible&&(w=t._getHoveredPlot&&t._getHoveredPlot(p,k))&&w.hovered&&(z=!0,w.datasetIndex=G,n=c._getMouseEvents(a,w.datasetIndex,w.pointIndex));(!z||n&&n.fireOut)&&void 0!==f&&(delete c._lastDatasetIndex,delete c._lastPointIndex,l[f]&&l[f]._firePlotEvent&&l[f]._firePlotEvent("mouseout",h,a));if(z)for(b=n.events&&
n.events.length,c._lastDatasetIndex=w.datasetIndex,h=c._lastPointIndex=w.pointIndex,d.drawTrendRegion&&m[D]._notifyGroup(!0,a),c=0;c<b;c+=1)t&&t._firePlotEvent&&t._firePlotEvent(n.events[c],h,a,w.datasetIndex);else d.drawTrendRegion&&m[D]._notifyGroup(!1,a);d.drawTrendRegion&&m[D]._getHoveredRegion(p,k,a)},eiMethods:{hideChartMessage:function(){var a=this.apiInstance;a._show.apply(a);a._hideChartMessage(a)}}});ta("mscartesian",{standaloneInit:!1,tooltipConstraint:"chart",annotationInteractionEvents:!0,
useScaleRecursively:!0,init:function(a,c,d,b){var h=this;d=h.chartInstance||d;var e=d.jsVars,f=c.colorrange,g,l=h.getJobList(),k=function(){h.draw();h.setChartEvents();b({hasRendered:!0,container:a})};c.chart=c.chart||c.graph||c.map||{};h.jsonData=c;c=h.components||(h.components={});c.background||(c.background={graphics:{},config:{}});c.canvas||(c.canvas={graphics:{},config:{}});g=Q.register("component",["caption","caption"]);c.caption||(c.caption=new g);c.caption.init();c.caption.chart=h;g=Q.register("component",
["caption","subCaption"]);c.subCaption||(c.subCaption=new g);c.subCaption.init();c.dataset||(c.dataset=[]);h.linkedItems={container:a,smartLabel:e.smartLabel};c.colorManager=new v.colorManager(h);c.numberFormatter=new Za(h);f&&(c.colorRange=new v.ColorRange(h));h._checkInvalidData()?(v.raiseEvent("nodatatodisplay",{},d,[d.id]),b({hasRendered:!0,container:a})):(h._createLegend(),h._createGradientLegend(),h.configure(),h.disposeChartStyleSheet(),h._createAxes(),h._feedAxesRawData(),h.config.realtimeEnabled&&
(e=Q.get("component",["manager","alert"]))&&(c.alertManager=new e,c.alertManager.init(h),c.alertManager.configure()),h.config.enablemousetracking&&(e=Q.get("component",["tracker","mouse"]))&&(c.mouseTracker=new e,c.mouseTracker.init(h),c.mouseTracker.configure(),v.toolTip.setup()),h._createDatasets(),h._createQuadrant&&h._createQuadrant(),d.args.asyncRender?l.draw.push(hb.addJob(k,ib.render)):k(),h.inited=!0,h.chartInstance.__state.dataReady=!0)},_scrollTo:function(a){var c=this.apiInstance,d=c.components.scrollBar,
h=d.node,e=d.conf,d=h.attr("scroll-position");e.scrollTo=!0;void 0!==a&&(a=oa(Y(a,0),1),1>h.attr("scroll-ratio")&&(b.raiseEvent("scrollStart",{scrollPosition:h.attr("scroll-position")},c.chartInstance),c.updateManager(a),b.raiseEvent("scrollEnd",{prevScrollPosition:d,scrollPosition:a},c.chartInstance)))},_checkInvalidData:function(){var a=this.jsonData,c=this.chartInstance;if(!(this.isWidget||this.isMap||a.data&&0!==a.data.length||a.dataset||a.value||a.lineset||a.annotations||a.category||a.tasks||
a.process||a.axis))return this.setChartMessage(),this.drawChartMessage(),c.__state.dataReady=!1,c.jsVars.hasNativeMessage=!0,c.jsVars.drawCount+=1,!0},_createToolBox:function(){var a,d,b,h,e,f,l,k;e=!!A.btoa;var p=this,t=p.jsonData.chart,m=c(t.exportshowmenuitem),D=t.exportformats,w=p.chartMenuTools,t=w.get,z=w.set,w=this.components,G=p.config,n=G.exportOption.enabled;a=w.chartMenuBar;b=w.actionBar;var G=G.printOption.enabled,r={PNG:"Export As "+g.PNG.toUpperCase(),JPG:"Export As "+g.JPG.toUpperCase(),
PDF:"Export As "+g.PDF.toUpperCase(),SVG:"Export As "+g.SVG.toUpperCase(),XLS:"Export As "+g.XLS.toUpperCase()},F,B={},K=[],q;if(!(a&&a.drawn||b&&b.drawn)){a=w.tb||(w.tb=new (Q.register("component",["toolbox","toolbox"])));k=a.init({graphics:p.graphics||(p.graphics={}),chart:p,components:w});w.toolBoxAPI=b=w.toolBoxAPI||(w.toolBoxAPI=a.getAPIInstances(a.ALIGNMENT_HORIZONTAL));h=b.SymbolWithContext;d=b.SymbolStore;f=b.ComponentGroup;l=b.Toolbar;a.idCount=a.idCount||0;a.pId=k;b=a.getDefaultConfiguration();
d.register("ContextIcon",function(a,c,d){var b=2*d;d=ua(b/4);var h=.7*ua(b/2),b=a-h;a+=h;h=c+d;d=c-d;return["M",b,c,"L",a,c,"M",b,h,"L",a,h,"M",b,d,"L",a,d]});d=new h("ContextIcon",a.idCount++,k);h=d.getListRefernce();if(n&&0!==m){if(D)for(m=D.split("|"),B=0,n=m.length;B<n;B++)D=m[B].split("="),q=D[0].toUpperCase(),r[q]&&(r[q]=D[1]||r[q]),r[q]&&(F||(F={}))&&(F[q]=!0);m=function(a){return function(){v.exportChart.call(p,a)}};for(q in r)"XLS"===q&&!e||F&&!F[q]||(B={},B[r[q]]={handler:m({exportformat:q}),
action:"click"},K.push(B));z(K)}G&&z([{Print:{handler:function(a){p.chartInstance.print.call(p.chartInstance,a)},action:"click"}}]);h.appendAsList(t());e=new f(a.idCount++,k);e.setConfiguaration({buttons:b,group:{fill:Sa,borderColor:Sa}});e.addSymbol(d);delete w.chartMenuBar;delete w.actionBar;a="t"===e.btnConfig.vAlign?w.chartMenuBar=new l(a.idCount++,a.pId):w.actionBar=new l(a.idCount++,a.pId);a.addComponent(e)}},chartMenuTools:function(){var a=[];return{get:function(){return a},set:function(c){var d,
b=c.length||0;for(d=0;d<b;d+=1)a.push(c[d])},reset:function(c,d){var b=d.components,h=b.actionBar;(b=b.chartMenuBar)&&(b.drawn=!1);h&&(h.drawn=!1);a.length=0;c&&(c.idCount=0,c.clean())},update:function(a,c,d){var b=d.components;d=d.components.toolBoxAPI.SymbolWithContext;var h=(b.chartMenuBar||b.actionBar).componentGroups,e,f,g,l,k,b=0;for(g=h.length;b<g;b++)for(f=h[b],f=f.symbolList||[],l=0,k=f.length;l<k;l++)f[l]instanceof d&&(e=f[l],e=e.getListRefernce().getFirstContainer().atomicLists);e=e||[];
b=0;for(g=e.length;b<g;b++)if(d=e[b],d.name===a){d.updateName(c);break}}}}(),getConfig:function(a){return a?this.config[a]:this.config},get:function(a,c){var d=this[a];return c?d&&d[c]:d},disposeChartStyleSheet:function(){var a=this.components.paper;a&&a.cssClear()},createChartStyleSheet:function(){this.components.paper.cssRender()},configure:function(){var b,e,k,p=this.components,I=this.jsonData,t,m=this.chartInstance,w=p.colorManager,z=this.is3D,n=z?Ta.chart3D:Ta.chart2D,r,K=this.isBar,u,P;u=!1;
var Z=p.legend,V={linear:"linear",easein:"easeIn",easeout:"easeOut",easeinout:"easeInOut",backin:"backIn",backout:"backOut",elastic:"elastic",bounce:"bounce"};I.chart=I.chart||I.graph||I.map||{};delete I.map;delete I.graph;t=I.chart;!t&&(t=I.chart={});p.colorRange||(p.colorRange=new v.ColorRange(this));r=this.config||(this.config={});this.__setDefaultConfig();R(t,r);r.snapLiterals={};r.viewPortConfig={scaleY:1,scaleX:1,x:0,y:0};z&&(K?(r.xDepth=5,r.yDepth=5):(r.xDepth=10,r.yDepth=10),r.showCanvasBase=
I=!!c(t.showcanvasbase,1),r.canvasBasePadding=c(t.canvasbasepadding,2),r.canvasBaseDepth=I?c(t.canvasbasedepth,10):0,r.canvasBgDepth=c(t.canvasbgdepth,3));p.colorManager&&p.colorManager.configure();r.placeAxisLabelsOnTop=c(t.placexaxislabelsontop,0);r.enableAnimation=I=c(t.animation,t.defaultanimation,1);p=c(t.transposeanimation,0);I=I?1E3*c(t.animationduration,1):0;p=p?1E3*c(t.transposeanimduration,.2):0;r.animationObj&&(u=!0);r.animationObj=p={initAnimDuration:I,transposeAnimDuration:p};p.duration=
u||void 0!==p.duration?p.transposeAnimDuration:p.initAnimDuration;for(P in V)P===d(t.animationeffect)&&(r.animationeffect=V[P]);r.showToolTip=c(t.showtooltip,1);r.exportOption={enabled:c(t.exportenabled,0),bgcolor:m.jsVars.transparent||0===c(m.options.containerBackgroundOpacity,1)?a:m.options.containerBackgroundColor||"#ffffff",bgalpha:(m.jsVars.transparent?0:c(m.options.containerBackgroundOpacity,1))+a,exporttargetwindow:d(t.exporttargetwindow,Na?"_blank":"_self"),exportaction:function(){var a;return t.exportaction&&
"string"===typeof t.exportaction?(a=t.exportaction.toLowerCase(),0<=[L.DOWNLOAD,L.SAVE,L.DOWNLOADSAVE].indexOf(a)?a:L.DOWNLOAD):L.DOWNLOAD}(),exportfilename:d(t.exportfilename,"FusionCharts"),exporthandler:d(t.html5exporthandler,t.exporthandler,X),exportparameters:d(t.exportparameters,a),exportformat:d(t.exportformat,g.PNG),exportcallback:d(t.exportcallback,a),logenabled:c(t.logenabled,0),logmode:function(){var a=t.logmode;return"undefined"!==typeof a&&"string"===typeof a&&a.toUpperCase()in B?B[a.toUpperCase()]:
B.AUTO}(),loghandler:d(t.html5loghandler,t.loghandler,h),exportwithimages:c(t.exportwithimages,1),exportatclientside:c(t.exportatclientside,1),exportmode:function(){var a;"undefined"!==typeof t.exportatclientside&&(a={1:l.AUTO,0:l.AUTO}[t.exportatclientside]);a=t.exportmode||a||l.AUTO;return a=a.toLowerCase()}()};(function(){var a=r.exportOption.exportmode,c={};c[l.CLIENT]=1;c[l.AUTO]=0;c[l.SERVER]=0;r.exportOption.exportatclientside=c[a]})();r.printOption={enabled:c(t.printshowbutton,t.showprintmenuitem,
0)};r.chartMenuOptions={position:b=d(t.toolbarposition,"tr").toLowerCase(),hAlign:e=(a+t.toolbarhalign).toLowerCase()===Fa?"l":b.charAt(1),vAlign:k=(a+t.toolbarvalign).toLowerCase()===T?"b":b.charAt(0),hDirection:c(t.toolbarhdirection,"r"===e?-1:1),vDirection:c(t.toolbarvdirection,"b"===k?-1:1),vMargin:c(t.toolbarvmargin,6),hMargin:c(t.toolbarhmargin,10),x:c(t.toolbarx,"l"===e?0:r.width),y:c(t.toolbary,"t"===k?0:r.height)};b=r.style={};r.textDirection="1"===t.hasrtltext?"rtl":F;b.inCanfontFamily=
e=d(t.basefont,"Verdana,sans");b.inCanfontSize=k=la(t.basefontsize,10);b.inCancolor=m=d(t.basefontcolor,w.getColor(n.baseFontColor));b.outCanfontFamily=d(t.outcnvbasefont,e);b.fontSize=u=la(t.outcnvbasefontsize,k);b.outCanfontSize=u+Ea;b.outCancolor=d(t.outcnvbasefontcolor,m).replace(/^#? ([a-f0-9]+)/ig,"#$1");b.baseFontSize=k;b.inCanfontSize=k+Ea;b.inCancolor=m.replace(/^#? ([a-f0-9]+)/ig,"#$1");b.inCanvasStyle=u={fontFamily:e,fontSize:k,color:m};b.inCanLineHeight=u=ga(u);P=(P=D(t.valuebordercolor,
a))?pa(P,c(t.valueborderalpha,t.valuealpha,100)):a;r.reverseXAxis=this.config.allowreversexaxis&&c(t.reversexaxis,0);r.showBorder=c(t.showborder,z?0:1);r.borderWidth=Y(r.showBorder?c(t.borderthickness,1):0,0);r.useplotgradientcolor=""===t.plotgradientcolor?0:r.useplotgradientcolor;r.valuefontbold=c(t.valuefontbold,r.valuefontbold);r.dataLabelStyle=z={fontFamily:d(t.valuefont,e),fontSize:d(t.valuefontsize,parseInt(k,10))+Ea,lineHeight:u,color:pa(d(t.valuefontcolor,m),c(t.valuefontalpha,t.valuealpha,
100)),fontWeight:r.valuefontbold?E:N,fontStyle:c(t.valuefontitalic)?"italic":N,border:P||t.valuebgcolor?c(t.valueborderthickness,1)+"px solid":F,borderColor:P,borderThickness:c(t.valueborderthickness,1),borderPadding:c(t.valueborderpadding,2),borderRadius:c(t.valueborderradius,0),backgroundColor:t.valuebgcolor?pa(t.valuebgcolor,c(t.valuebgalpha,t.valuealpha,100)):a,borderDash:c(t.valueborderdashed,0)?Ra(c(t.valueborderdashlen,4),c(t.valueborderdashgap,2),c(t.valueborderthickness,1)):"none"};ga(z);
r.orphanStyles={defaultStyle:{style:aa({},b.inCanvasStyle)},connectorlabels:{style:aa({},r.dataLabelStyle)},vyaxisname:{style:aa({},b.inCanvasStyle)}};r.legendPosition=d(t.legendposition,T);r.logoURL=f(t.logourl);r.logoPosition=d(t.logoposition,"tl").toLowerCase();r.logoAlpha=c(t.logoalpha,100);r.logoLink=f(t.logolink);r.logoScale=c(t.logoscale,100);r.logoLeftMargin=c(t.logoleftmargin,0);r.logoTopMargin=c(t.logotopmargin,0);r.minChartWidthPercent=c(t.minchartwidth,this.minChartWidth,50)/100;r.minChartHeightPercent=
c(t.minchartheight,this.minChartHeight,50)/100;r.minCanvasWidthPercent=c(t.mincanvaswidth,this.minCanvasWidth,60)/100;r.minCanvasHeightPercent=c(t.mincanvasheight,this.minCanvasHeight,30)/100;this._parseBackgroundCosmetics();this.components.caption.configure();this._parseCanvasCosmetics();r.origMarginTop=c(t.charttopmargin,this.chartTopMargin,15);r.origMarginLeft=c(t.chartleftmargin,this.chartLeftMargin,15);r.origMarginBottom=c(t.chartbottommargin,this.chartBottomMargin,15);r.origMarginRight=c(t.chartrightmargin,
this.chartRightMargin,15);n=d(t.zeroplanecolor,t.divlinecolor,w.getColor(n.divLineColor));z=d(t.zeroplanealpha,t.divlinealpha,w.getColor("divLineAlpha"));r.zeroPlaneColor=pa(n,z);r.zeroPlaneBorderColor=pa(d(t.zeroplanebordercolor,n),c(t.zeroplaneshowborder,1)?z:0);r.zeroPlaneShowBorder=c(t.zeroplaneshowborder,1);r.dataStreamURL=G(t.datastreamurl);r.realtimeEnabled=n=c(t.realtimeenabled,this.isRealTime);r.showLegend=c(t.showlegend,this.showLegend,1);r.link=t.clickurl;r.annRenderDelay=1E3*c(t.annrenderdelay,
0);r.transposeAxis=c(this.transposeAxis,t.transposeaxis,0);r.useEllipsesWhenOverflow=c(t.useellipseswhenoverflow,t.useellipsewhenoverflow,1);r.gLegendPadding=c(t.legendpadding,10);r.skipZeroPlots=c(t.skipzeroplots,1);r.drawTrendRegion=v.toolTip.drawTrendRegion=c(t.drawcrossline,0);r.drawCrossLineOnTop=c(t.drawcrosslineontop,0);r.rolloverbandanimation=c(t.crosslineanimation,0);r.rolloverbandanimationduration=1E3*c(t.crosslineanimationduration,.09);r.plotcolorintooltip=c(t.plotcolorintooltip,this.singleseries?
0:1);r.trendRegionColor=r.trendRegionStroke=pa(d(t.crosslinecolor,w.getColor(q.altHGridColorStr)),d(t.crosslinealpha,w.getColor(q.altHGridAlphaStr)));r.showsum=c(t.showsum,this.showsum,0);r.binSize=oa(c(t.plotbinsize,this.binSize,.5),1);r.labelBinSize=oa(c(t.labelbinsize,1),1);r.enableMouseOutEvent=c(t.enablemouseoutevent,this.enableMouseOutEvent,0);r.tooltipgrayoutcolor=d(t.tooltipgrayoutcolor,S);n&&this._realTimeConfigure();this._setToolTipOptions();Z.configure();this.linkedItems.linkClickFN=bb(this.jsonData,
this.chartInstance);this._createConfigurableComponents()},_createConfigurableComponents:function(){var a=this.config,c=this.components,d;a.realtimeEnabled&&a.usemessagelog&&(a=Q.get("component",["logger","message"]))&&(d=c.messageLogger,d||(c.messageLogger=new a,c.messageLogger.init(this)),c.messageLogger.configure())},_parseBackgroundCosmetics:function(){var a=this.is3D,b=this.components.background.config,h=this.components.colorManager,e=this.jsonData.chart,f;f=b.showBorder=c(e.showborder,this.showBorder,
a?0:1);b.borderWidth=f=Y(f?c(e.borderthickness,1):0,0);b.borderRadius=b.borderRadius=c(e.borderradius,0);b.borderDashStyle=b.borderDashStyle=c(e.borderdashed,0)?Ra(c(e.borderdashlen,4),c(e.borderdashgap,2),f):"none";b.borderAlpha=d(e.borderalpha,a?"100":h&&h.getColor("borderAlpha"));b.borderColor=b.borderColor=pa(d(e.bordercolor,a?"#666666":h&&h.getColor("borderColor")),b.borderAlpha)},_parseCanvasCosmetics:function(){var a,b,h=this.config;b=this.components;var e=b.canvas.config,f=this.jsonData.chart;
b=b.colorManager;var g,l=this.is3D?Ta.chart3D:Ta.chart2D,k=e.isRoundEdges=c(f.useroundedges,0);a=c(f.showxaxisline,f.showyaxisline,f.showaxislines,0)?0:1;e.canvasBorderRadius=c(f.plotborderradius,k?2:0);a=e.showCanvasBorder=!!c(f.showcanvasborder,a,void 0,k?0:1);g=e.oriCanvasBorderThickness=Y(c(f.canvasborderthickness,k?0:c(this.canvasborderthickness,2),0));e.canvasBorderWidth=this.is3D?0:a?g:0;e.canvasBorderColor=pa(d(f.canvasbordercolor,b.getColor("canvasBorderColor")),d(f.canvasborderalpha,b.getColor("canvasBorderAlpha")));
a=e.canBGAlpha=d(f.canvasbgalpha,b.getColor("canvasBgAlpha"));e.canBGColor={FCcolor:{color:d(f.canvasbgcolor,b.getColor(l.canvasBgColor)),alpha:d(f.canvasbgalpha,100),angle:d(f.canvasbgangle,0),ratio:d(f.canvasbgratio)}};b=e.shadow=c(f.showshadow,k,0)&&k?{enabled:!0,opacity:a/100}:0;e.shadowOnCanvasFill=b&&b.enabled;h.origMarginTop=c(f.charttopmargin,15);h.origMarginLeft=c(f.chartleftmargin,15);h.origMarginBottom=c(f.chartbottommargin,15);h.origMarginRight=c(f.chartrightmargin,15);h.origCanvasLeftMargin=
c(f.canvasleftmargin,0);h.origCanvasRightMargin=c(f.canvasrightmargin,0);h.origCanvasTopMargin=c(f.canvastopmargin,0);h.origCanvasBottomMargin=c(f.canvasbottommargin,0);e.canvasPadding=c(f.canvaspadding,0);e.origCanvasTopPad=c(f.canvastoppadding,0);e.origCanvasBottomPad=c(f.canvasbottompadding,0);e.origCanvasLeftPad=c(f.canvasleftpadding,0);e.origCanvasRightPad=c(f.canvasrightpadding,0)},_preDraw:function(){var a=this.config.realTimeConfig,a=a&&a.showRTmenuItem;this.config.realtimeEnabled&&this._setRealTimeCategories&&
this._setRealTimeCategories();this._setAxisValuePadding();this._setAxisLimits();this.chartMenuTools.reset(this.components.tb,this);a&&this._setRTmenu();this.config.useShowLogMenu&&this._setUseLog()},_setUseLog:function(){var a=this.components.messageLogger,c=this.chartMenuTools;c&&c.set([{"Show Log":{handler:function(){a.show()},action:"click"}}])},_manageSpace:function(){var a=this.components.canvas.config,c=this.linkedItems.container,d=this.config,b,h,e,f,g,l,k,t,p,m,D;d.width=b=c.offsetWidth;d.height=
D=c.offsetHeight;d.minChartHeight=p=d.minChartHeightPercent*D;d.minChartWidth=m=d.minChartWidthPercent*b;d.minCanvasWidth=c=d.minCanvasWidthPercent*m;d.minCanvasHeight=h=d.minCanvasHeightPercent*p;d.marginTop=e=d.origMarginTop;d.marginLeft=f=d.origMarginLeft;d.marginBottom=g=d.origMarginBottom;d.marginRight=l=d.origMarginRight;d.canvasMarginTop=d.origCanvasTopMargin;d.canvasMarginLeft=d.origCanvasLeftMargin;d.canvasMarginBottom=d.origCanvasBottomMargin;d.canvasMarginRight=d.origCanvasRightMargin;
d.canvasHeight=k=d.height-d.marginTop-d.marginBottom;d.canvasWidth=t=d.width-d.marginLeft-d.marginRight;d.availableHeight=k-h;d.availableWidth=t-c;k<p&&(k=D-p,d.canvasHeight=p,D=e+g,d.marginTop=k*e/D,d.marginBottom=k*g/D,d.availableHeight=p-h);t<m&&(k=b-m,D=l+f,d.canvasWidth=m,d.marginLeft=k*f/D,d.marginRight=k*l/D,d.availableWidth=m-c);d.canvasLeft=d.marginLeft;d.canvasTop=d.marginTop;a.canvasPaddingLeft=oa(a.origCanvasLeftPad,ua(.1*d.height));a.canvasPaddingRight=oa(a.origCanvasRightPad,ua(.1*d.height));
a.canvasPaddingTop=oa(a.origCanvasTopPad,ua(.1*d.height));a.canvasPaddingBottom=oa(a.origCanvasBottomPad,ua(.1*d.height));this._spaceManager()},_postSpaceManagement:function(){var a=this.config,c=this.components,d=c.xAxis&&c.xAxis[0],b=c.yAxis&&c.yAxis[0],h=c.legend,e=a.xDepth,f=c.canvas.config,c=f.canvasBorderWidth,g=f.canvasPadding||0,l=f.canvasPaddingLeft,k=f.canvasPaddingRight,t=f.canvasPaddingTop,f=f.canvasPaddingBottom;d&&d.setAxisDimention({x:a.canvasLeft+(e||0)+Y(l,g),y:a.canvasBottom+(a.shift||
0)+c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-(e||0)-Y(l,g)-Y(k,g)});d&&this._allocateXAxisLabelSpace(d);b&&b.setAxisDimention({x:a.canvasLeft-c,y:a.canvasTop+t,opposite:a.canvasRight+c,axisLength:a.canvasHeight-t-f});d&&d.shiftLabels(-e,0);h.postSpaceManager();this._adjustCanvasPadding()},_allocateXAxisLabelSpace:function(a){var c=this.config,d=a.getAxisEndLabelDisplaySpace();a=d.left;var b=d.right,h=d.top,d=d.bottom,e=c.availableWidth,f=c.availableHeight,g=c.canvasLeft,l=c.canvasRight,k=
c.canvasTop,t=c.canvasBottom,p=c.width,m=c.height,D=function(a,c){return a<c&&0<c?c-a:0};h+d>f&&(c=h+d,h=f*h/c,d=f*d/c);a+b>e&&(c=a+b,a=e*a/c,b=e*b/c);a=D(g,a);b=D(p-l,b);h=D(k,h);d=D(m-t,d);this._allocateSpace({left:a,right:b,top:h,bottom:d})},_animCallBack:function(){var a=this.config;a.animationStarted&&(b.raiseEvent("internal.animationComplete",{},this.chartInstance),a.animationStarted=!1)},_setAnimDuration:function(){var a=this.config.animationObj;a&&(a.duration=a.transposeAnimDuration)},_setDataLabelStyle:function(){var a=
this.config.dataLabelStyle;this.graphics.datalabelsGroup.css({fontFamily:a.fontFamily,fontSize:a.fontSize,fontWeight:a.fontWeight,fontStyle:a.fontStyle})},_updateVisuals:function(){var a=this.linkedItems.container,c=this.components,d=c.paper,b=c.tooltip,h=this.chartInstance,e=this.get(M,U),f=e.animType,g=e.dummyObj,l=e.animObj,e=e.duration,k=this.config,t,p=k.prevWidth,D=k.prevHeight;k.animationStarted=!0;d?((p||D)&&d.setSize(p,D),p={width:a.offsetWidth,height:a.offsetHeight},t=!0,this._chartAnimation(!0),
d.animateWith(g,l,p,e,f)):(d=c.paper=new J(a,a.offsetWidth,a.offsetHeight),d.setConfig("stroke-linecap",m));J.svg&&this._createDummyText();k.prevWidth=a.offsetWidth;k.prevHeight=a.offsetHeight;d.tooltip(b.style,b.config.shadow,b.config.constrain);this.setChartCursor();this._createLayers();this._setDataLabelStyle();!t&&this._chartAnimation(!0);this._drawBackground();!1!==this.hasCanvas&&this._drawCanvas();c.chartMenuBar&&this._drawChartMenuBar();this._manageCaptionPosition();c.caption&&c.caption.draw();
this.drawLegend();c.actionBar&&this.drawActionBar();this._drawAxis&&this._drawAxis();this._drawDataset();this._drawQuadrant&&this._drawQuadrant();this._drawCreditLabel();this._drawLogo();h.annotations&&this._drawAnnotations();this.drawAxisUpdateUI&&this.drawAxisUpdateUI();c.messageLogger&&c.messageLogger.isDrawn()&&c.messageLogger.draw();this.drawScrollBar&&this.drawScrollBar();this.showRTvalue&&k.realTimeConfig.showRTValue&&this._drawRealTimeValue()},_chartAnimation:function(a){var c=this,d=c.graphics,
b=c.components.paper,h=c.config.animationObj,e,f=h.duration||h.transposeAnimDuration,g=c.getJobList(),l=c.config,k=l.animationeffect,t=function(){c._animCallBack()};!f||l.parentElementPause?hb.addJob(function(){c._animCallBack()},ib.animation):(h.animObj=f=J.animation({x:0},f,k,t,!1),h.animType=k,(e=d.dummyObj)?e.attr({x:100}):(d.dummyObj=e=b.rect({x:100,y:0,width:10,height:30}),e.hide()),h.dummyObj=d.dummyObj,e.stop(void 0,!0,!0),a?(e.animate(f),e.pause(void 0,!0),l.parentElementPause=!0,g.postRender.push(hb.addJob(function(){l.parentElementPause=
!1;c._setAnimDuration();e.resume(void 0,!0)},ib.animation))):(setTimeout(function(){c._setAnimDuration()},0),e.animate(f)))},draw:function(){var a=this.chartInstance;this.config.hasChartMessage?(this._hide(),this.drawChartMessage(),v.raiseEvent("nodatatodisplay",{},a,[a.id]),this.chartInstance.jsVars.drawCount+=1,this.chartInstance.__state.dataReady=!1,this.chartInstance.jsVars.hasNativeMessage=!0):(this._hideChartMessage(),this._clearTimers&&this._clearTimers(),this.config.plotOverFlow=!1,this._show(),
this._preDraw(),this._createToolBox(),this._manageSpace(),this._postSpaceManagement(),this._setInitialDrawingIndex&&this._setInitialDrawingIndex(),this._updateVisuals(),this.chartInstance.jsVars.drawCount+=1,this.chartInstance.jsVars.hasNativeMessage=!1)},drawLegend:function(){var a=this.components,c=a.legend,a=a.gradientLegend,d=this.hasLegend;this.config.gLegendEnabled?(c&&c.hide(),this.drawGradientLegend&&this.drawGradientLegend()):(a&&a.elem&&a.elem.gl.carpet&&a.elem.gl.carpet.node&&a.elem.gl.carpet.group.hide(),
!1!==d&&c.drawLegend())},manageGradientLegendSpace:function(a){var c=this.components.gradientLegend,d=c&&c.conf,b;b=oa(this.config.gLegendPadding,.5*a);d?(d=d.legendPosition,a=c.getLogicalSpace(a),b=d===T?{bottom:(a.height||0)+b}:{right:(a.width||0)+b}):b={bottom:0,right:0};return b},drawGradientLegend:function(){var a=this.components,c=this.config,d=this.jsonData.colorrange,b=a.gradientLegend||{},h=(b.conf||{}).legendPosition,e=c.canvasLeft,f=c.canvasTop,g=c.canvasWidth,l=c.canvasHeight,k=c.marginBottom,
t=c.marginRight,p=this.hasGradientLegend,m,D,w;m=b.getLogicalSpace();D=m.width;w=m.height;h===T?(h=g-D,t=e+(0>h?0:h/2),k=c.height-m.height-k-(c.actionBarHeight||0)):(h=l-w,k=f+(0>h?0:h/2),t=c.width-m.width-t);d&&p&&b.draw(t,k,{paper:a.paper,parentGroup:this.graphics.parentGroup})},_drawAxis:function(){var a=this.components,c=a.yAxis||[],d=a.xAxis||[],a=a.scale,b,h;b=0;for(h=d.length;b<h;b++)d[b].draw();b=0;for(h=c.length;b<h;b++)c[b].draw();a&&a.draw()},_drawAnnotations:function(){var a=this.jsonData,
b=a.chart,h=this.config,e=h.width,f=h.height,h=a&&a.annotations||{},g=this.chartInstance.annotations;if(a&&b&&c(b.showannotations,1)){var a=c(h.scaleonresize,b.scaleonresize,1),b={interactionevents:d(this.annotationInteractionEvents,!0),showbelow:d(h.showbelow,h.showbelowchart),autoscale:h.autoscale,scaletext:h.scaletext,scaleimages:h.scaleimages,constrainedscale:h.constrainedscale,scaleonresize:a,origw:d(h.origw,b.origw,this.origRenderWidth,e),origh:d(h.origh,b.origh,this.origRenderHeight,f),xshift:h.xshift,
yshift:h.yshift,grpxshift:h.grpxshift,grpyshift:h.grpyshift,xscale:h.xscale,yscale:h.yscale,rootxscale:c(h.xscale,100)/100,rootyscale:c(h.yscale,100)/100},l;b||(b={});for(l in void 0)b[l]=(void 0)[l];g.reset(h,b,this)}else g.clear();g.draw(this)},_clearTimers:function(){var a=this.config&&this.config.realTimeConfig,c=this.linkedItems.timers,d=c&&c.setTimeout,c=c&&c.setInterval,b;a&&(a.refreshIntervalFlag=!1);for(b in d)clearTimeout(d[b]);for(b in c)clearInterval(c[b])},_createLayers:function(){var a=
this.graphics||(this.graphics={}),c,d,b=this.components.paper,a=this.graphics;a.parentGroup=c=a.parentGroup||b.group("parentgroup");a.backgroundGroup=a.backgroundGroup||b.group("background",c);a.canvasGroup=a.canvasGroup||b.group("canvas",c);a.axisBottomGroup=a.axisBottomGroup||b.group("axisbottom",c);a.datasetGroup=d=a.datasetGroup||b.group("dataset",c);a.axisTopGroup=a.axisTopGroup||b.group("axistop",c);a.sumLabelsLayer=a.sumLabelsLayer||b.group("sumlabels",c);a.datalabelsGroup=a.datalabelsGroup||
b.group("datalabel",c);a.legendGroup=a.legendGroup||b.group("legend",c);a.captionGroup=a.captionGroup||b.group("caption",c);a.captionGroup.trackTooltip(!0);a.columnTrendGroup=a.columnTrendRegion||b.group("columnTrendGroup",d);a.columnGroup=a.columnGroup||b.group("column",d);a.areaGroup=a.areaGroup||b.group("area",d);a.lineGroup=a.lineGroup||b.group("line",d);a.trackerGroup||(a.trackerGroup=b.group("tracker",c),a.trackerGroup.trackTooltip(!0));a.buttonGroup=a.buttonGroup||b.group("buttons")},_spaceManager:function(){var a,
c,d=this.config,b=this.components,h=b.xAxis&&b.xAxis[0];c=b.yAxis&&b.yAxis||[];var e,f,g=b.legend.config.legendPos,l=d.xDepth,k=d.yDepth,t=d.canvasBgDepth,p=d.canvasBaseDepth,m=d.canvasBasePadding,D=b.canvas.config.canvasBorderWidth,w=d.realTimeConfig&&d.realTimeConfig.showRTValue,z=d.borderWidth,G=d.canvasMarginTop,r=d.canvasMarginBottom,n=d.canvasMarginLeft,B=d.canvasMarginRight,b=d.minCanvasHeight,F=d.minCanvasWidth;a=d.minChartWidth;var K=d.minChartHeight,q=d.height,u=d.width,R=!1,L=!1,P,aa=d.origCanvasTopMargin,
v=d.origCanvasBottomMargin,Z=d.origCanvasLeftMargin,E=d.origCanvasRightMargin,S,V,X=[];d.canvasWidth-2*z<a&&(f=(d.canvasWidth-a)/2);d.canvasHeight-2*z<K&&(e=(d.canvasHeight-K)/2);this._allocateSpace({top:e||z,bottom:e||z,left:f||z,right:f||z});z=0;for(f=c.length;z<f;z++)e=c[z],a=.7*d.availableWidth,a=e&&e.placeAxis(a)||{},X.push({axisIndex:z,spaceTaken:a}),e&&this._allocateSpace(a);d.yAxisSpaceAllocation=X;this._allocateSpace(this._manageActionBarSpace&&this._manageActionBarSpace(.225*d.availableHeight)||
{});this._manageLegendSpace(void 0);c=g===T?.6*d.availableHeight:.6*d.availableWidth;k&&(this._allocateSpace({bottom:k}),d.shift=l+m+p);t&&this._allocateSpace({right:t});d.canvasWidth-2*D<F&&(V=(d.canvasWidth-F)/2);this._allocateSpace({left:V||D,right:V||D});F>u-n-B&&(L=!0,k=d.canvasWidth-F,l=n+B,n=d.canvasMarginLeft=k*n/l,B=d.canvasMarginRight=k*B/l);n=n>d.canvasLeft?n-d.canvasLeft:0;B=B>u-d.canvasRight?B+d.canvasRight-u:0;this._allocateSpace({left:n,right:B});L&&(l=Z+E,L=d.canvasWidth,L>F&&(k=L-
F,n=k*Z/l,B=k*E/l),this._allocateSpace({left:n,right:B}));d.actualCanvasMarginRight=B;d.actualCanvasMarginBottom=P;this._manageChartMenuBar(c);c=.2*d.availableHeight;this._allocateSpace(this._getSumValueSpace(c));c=.3*d.availableHeight;d.realtimeEnabled&&(w?this._allocateSpace(this._realTimeValuePositioning(c)):this._hideRealTimeValue());this._resetViewPortConfig&&this._resetViewPortConfig();this._setAxisScale&&this._setAxisScale();c=.6*d.availableHeight;d.xAxisSpaceAllocation=P=h&&h.placeAxis(c);
h&&this._allocateSpace(P);c=.3*d.availableHeight;this._manageScrollerPosition&&this._manageScrollerPosition(c);d.canvasHeight-2*D<b&&(S=(d.canvasHeight-b)/2);this._allocateSpace({top:S||D,bottom:S||D});this._allocateSpace({bottom:p});b>q-G-r&&(R=!0,k=d.canvasHeight-b,l=G+r,G=d.canvasMarginTop=k*G/l,r=d.canvasMarginBottom=k*r/l);h=G>d.canvasTop?G-d.canvasTop:0;P=r>q-d.canvasBottom?r+d.canvasBottom-q:0;this._allocateSpace({top:h,bottom:P});R&&(l=aa+v,p=d.canvasHeight,p>b&&(k=p-b,h=k*aa/l,P=k*v/l),this._allocateSpace({top:h,
bottom:P}));d.actualCanvasMarginTop=h;d.actualCanvasMarginLeft=n},_manageLegendSpace:function(){var a=this.config,d=this.components,b=d.legend,h=d.gradientLegend,e;e=this.jsonData.colorrange;var d=this.hasLegend,f={},g=this.hasGradientLegend,l=c(this.jsonData.chart.mapbycategory,0);g&&e&&c(e.gradient)&&!l?(e=h.conf,g=!0,a.gLegendEnabled=!0,h=.5,e=e.legendPosition):(e=b.config,g=!1,a.gLegendEnabled=!1,e=e.legendPos,h=e===Ja?.8:.4);a=e===Ja?a.availableWidth*h:a.availableHeight*h;g?f=this.manageGradientLegendSpace(a):
!1!==d&&(f=b._manageLegendPosition(a));this._allocateSpace({bottom:f.bottom||0,right:f.right||0})},_getSumValueSpace:function(a){var d={},b=this.isBar,h=this.jsonData.chart,d=0!==this.showsum?c(h.showsum,this.showsum,0):0,e=this.config.stack100percent,f=this.config.isstacked,h=0,g=this.components["datasetGroup_"+this.defaultDatasetType],l=0;d&&e&&f&&g&&(d=g.getMaxSumValueSpace(),b?h=d.maxWidth:l=d.maxHeight,l>a&&(l=a),h>a&&(h=a));return{top:l,right:h}},_setAxisValuePadding:function(){var a=this.components.dataset,
c=a.length,d,b,h=-Infinity,e=-Infinity,f=this.components.xAxis;for(d=0;d<c;d++)b=a[d],b=b.getAxisValuePadding&&b.getAxisValuePadding()||{},h=Y(h,b.left||-Infinity),e=Y(e,b.right||-Infinity);-Infinity===h&&(h=0);-Infinity===e&&(e=0);f&&f[0].setAxisPadding(h,e)},_fetchCaptionPos:function(a){var c=this.config,d=this.components,b=c.width,h=d.chartMenuBar,f=h.componentGroups[0].btnConfig,h=h.getLogicalSpace().width,d=d.caption.config,g=d.width,f="l"===f.hAlign,l=c.width-a,k=c.origMarginRight,t=c.origMarginLeft,
p=f?t:k;return d.align===K?(f?a:l)-g/2-p-h:d.align===e?f?-1:b-c.canvasLeft-p-g-h+d.horizontalPadding:f?b-(k+t+h+g):-1},_manageChartMenuBar:function(a){var d=this.config,b=this.components,h=b.chartMenuBar,e=h&&h.getLogicalSpace(),b=b.caption.config,f=b.isOnTop,g=d.width/2,l=d.canvasRight,k=l?(d.canvasLeft+l)/2:g,l=0,g=b.alignWithCanvas?k:g,l=h&&h.componentGroups[0].btnConfig,h=e&&l.spaceNotHardCoded;l&&l.spaceNotHardCoded&&(l.x=c("l"===l.hAlign?0:d.width),l.y=c("t"===l.vAlign?0:d.height));delete b._offsetHeight;
f?(a=this._manageCaptionSpacing(a),h&&(l=this._fetchCaptionPos(g),b._offsetHeight=0>l?e.height:0,a.top=0>l?c(a.top,0)+e.height:Y(a.top,e.height))):(this._allocateSpace({top:h?e.height:0}),a=this._manageCaptionSpacing(a));this._allocateSpace(a);return{top:e?Y(e.height,a.top):a.top,bottom:a.bottom}},_manageActionBarSpace:function(){var a=this.config,c=this.components.actionBar,c=(c&&c.getLogicalSpace()||{}).height||0;a.actionBarHeight=c;return{bottom:c}},_getDSspace:function(a){var c=this.components.dataset,
d,b=c.length,h,e,f={},g={left:0,right:0,top:0,bottom:0,paddingLeft:0,paddingRight:0,paddingBottom:0,paddingTop:0},l;for(h=0;h<b;h++)if(d=c[h],e=d.groupManager)f[d.type]=e;else if(d.manageSpace)for(l in d=d.manageSpace&&d.manageSpace(),d)g[l]=Y(d[l],g[l]);for(l in f)if(e=f[l],e.manageSpace)for(l in d=e.manageSpace&&e.manageSpace(a),d)g[l]=Y(d[l],g[l]);c=g.paddingLeft;b=g.paddingRight;h=c+b;a<h&&(g.paddingLeft=a*c/h,g.paddingRight=a*b/h);return g},_adjustCanvasPadding:function(){var a=this.config,c=
this.components,d=c.dataset,b=d.length,h=c.xAxis&&c.xAxis[0],e=c.yAxis&&c.yAxis[0],f=a.xDepth,g={},l,k,t,p,c=c.canvas.config,m=c.canvasBorderWidth,D=c.canvasPadding;for(l=0;l<b;l++)k=d[l],(t=k.groupManager)&&(g[k.type]=t);for(p in g)t=g[p],t.preDrawCalculate&&t.preDrawCalculate();this._getDSspace&&(this._allocateSpace(this._getDSspace(.4*a.canvasWidth)),d=a.canvasLeft,b=c.canvasPaddingLeft,g=a.canvasTop,p=c.canvasPaddingTop,h&&h.setAxisDimention({x:d+(f||0)+Y(b,D),y:a.canvasBottom+(a.shift||0)+m,
opposite:g-m,axisLength:a.canvasWidth-(f||0)-Y(b,D)-Y(c.canvasPaddingRight,D)}),e&&e.setAxisDimention({x:d-m,y:g+p,opposite:a.canvasRight+m,axisLength:a.canvasHeight-p-c.canvasPaddingBottom}))},_setAxisLimits:function(){var a=this.components,c=a.dataset,b=a.yAxis,a=a.xAxis,h,e=c.length,f,g=-Infinity,l=Infinity,k=Infinity,t=-Infinity,p,m,D,w={},z=[],G=function(a){m=d(a.xMax,-Infinity);D=d(a.xMin,Infinity);g=Y(g,a.max);l=oa(l,a.min);t=Y(t,m);k=oa(k,D)};for(f=0;f<e;f++)h=c[f],(p=h.groupManager)?w[h.type]=
p:z.push(h);for(p in w)c=w[p].getDataLimits(),G(c);e=z.length;for(f=0;f<e;f++)c=z[f].getDataLimits(),G(c);G(this._getTrendLineMinMax("h"));-Infinity===g&&(g=0);Infinity===l&&(l=0);this.config.yMax=g;this.config.yMin=l;b[0].setAxisConfig({isPercent:this.config.isstacked?this.config.stack100percent:0});b[0].setDataLimit(g,l);if(-Infinity!==t||Infinity!==k)a[0].config.xaxisrange={max:t,min:k},a[0].setDataLimit(t,k)},_getTrendLineMinMax:function(a,c){var d="v"===a?this.jsonData.vtrendlines:this.jsonData.trendlines,
b={max:-Infinity,min:Infinity},h,e,f,g,l;c=c||"p";if(d)for(e=0,g=d.length;e<g;e+=1)for(f=0,l=d[e].line?d[e].line.length:0;f<l;f+=1)h=d[e].line[f],"s"===c&&"s"!==h.parentyaxis||"s"!==c&&"s"===h.parentyaxis||(b.max=Y(h.startvalue||-Infinity,h.endvalue||-Infinity,b.max),b.min=oa(h.startvalue||Infinity,h.endvalue||Infinity,b.min));return b},_setToolTipOptions:function(){var a=this.components,b=this.components.colorManager,h=this.jsonData.chart,e=a.tooltip||(e=a.tooltip={}),a=e.config||(a=e.config={}),
f=this.config,g=f.style,f=f.style.inCanvasStyle,l,k,t;l=pa(d(h.tooltipbgcolor,b.getColor("toolTipBgColor")),d(h.tooltipbgalpha,100));b=pa(d(h.tooltipbordercolor,b.getColor("toolTipBorderColor")),d(h.tooltipborderalpha,100));k=c(h.tooltipborderthickness,1)+"px";t=c(h.tooltippadding,3)+"px";e=e.style={fontFamily:g.inCanfontFamily,fontSize:g.inCanfontSize,lineHeight:f.lineHeight,color:pa(g.inCancolor),backgroundColor:l,borderColor:b,borderWidth:k,padding:t};h.tooltipcolor&&(e.color=ea(h.tooltipcolor));
if(h.tooltipborderradius||h.useroundedges)e.borderRadius=c(h.tooltipborderradius,2)+"px";a.shadow=c(h.showtooltipshadow,h.showshadow,1)?{enabled:!0,opacity:Y(c(h.tooltipbgalpha,100),c(h.tooltipborderalpha,100))/100}:!1;a.constrain=c(h.constraintooltip,1)},_createAxes:function(){var a=this.components,c=Q.register("component",["axis","cartesian"]),d;a.yAxis=[];a.xAxis=[];a.yAxis[0]=d=new c;a.xAxis[0]=a=new c;d.chart=this;a.chart=this;d.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=
this.config,b=this.components,h=b.colorManager,e=this.jsonData,f=e.chart,g,l=this.is3d,k=l?Ta.chart3D:Ta.chart2D;g={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisBreaks:f.xaxisbreaks,axisNamePadding:f.xaxisnamepadding,axisValuePadding:f.labelpadding,axisNameFont:f.xaxisnamefont,axisNameFontSize:f.xaxisnamefontsize,
axisNameFontColor:f.xaxisnamefontcolor,axisNameFontBold:f.xaxisnamefontbold,axisNameFontItalic:f.xaxisnamefontitalic,axisNameBgColor:f.xaxisnamebgcolor,axisNameBorderColor:f.xaxisnamebordercolor,axisNameAlpha:f.xaxisnamealpha,axisNameFontAlpha:f.xaxisnamefontalpha,axisNameBgAlpha:f.xaxisnamebgalpha,axisNameBorderAlpha:f.xaxisnameborderalpha,axisNameBorderPadding:f.xaxisnameborderpadding,axisNameBorderRadius:f.xaxisnameborderradius,axisNameBorderThickness:f.xaxisnameborderthickness,axisNameBorderDashed:f.xaxisnameborderdashed,
axisNameBorderDashLen:f.xaxisnameborderdashlen,axisNameBorderDashGap:f.xaxisnameborderdashgap,useEllipsesWhenOverflow:f.useellipseswhenoverflow,divLineColor:d(f.vdivlinecolor,f.divlinecolor,h.getColor(k.divLineColor)),divLineAlpha:d(f.vdivlinealpha,f.divlinealpha,l?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(f.vdivlinethickness,f.divlinethickness,1),divLineIsDashed:!!c(f.vdivlinedashed,f.vdivlineisdashed,f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.vdivlinedashlen,
f.divlinedashlen,4),divLineDashGap:c(f.vdivlinedashgap,f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatevgridcolor,0),alternateGridColor:d(f.alternatevgridcolor,h.getColor("altVGridColor")),alternateGridAlpha:d(f.alternatevgridalpha,h.getColor("altVGridAlpha")),numDivLines:c(f.numvdivlines,this.numVDivLines),labelFont:f.labelfont,labelFontSize:f.labelfontsize,labelFontColor:f.labelfontcolor,labelFontAlpha:f.labelalpha,labelFontBold:f.labelfontbold,labelFontItalic:f.labelfontitalic,maxLabelHeight:f.maxlabelheight,
axisName:f.xaxisname,axisMinValue:f.xaxisminvalue,axisMaxValue:f.xaxismaxvalue,setAdaptiveMin:c(f.setadaptivexmin,this.setadaptivexmin,a.setadaptivexmin),adjustDiv:f.adjustvdiv,labelDisplay:f.labeldisplay,showLabels:f.showlabels,rotateLabels:f.rotatelabels,slantLabel:c(f.slantlabels,f.slantlabel),labelStep:c(f.labelstep,f.xaxisvaluesstep),showAxisValues:c(f.showxaxisvalues,f.showxaxisvalue),showLimits:c(f.showvlimits,this.showvlimits),showDivLineValues:c(f.showvdivlinevalues,f.showvdivlinevalues,
this.showvdivlinevalues),showZeroPlane:c(f.showvzeroplane,this.showzeroplane),zeroPlaneColor:f.vzeroplanecolor,zeroPlaneThickness:c(f.vzeroplanethickness,f.vdivlinethickness,a.zeroplanethickness,2),zeroPlaneAlpha:c(f.vzeroplanealpha,f.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:c(f.showvzeroplanevalue,this.showzeroplanevalue),trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,
showAxisLine:l?0:c(f.showxaxisline,f.showaxislines,f.drawAxisLines,this.showxaxisline,0),axisLineThickness:c(f.xaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.xaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.xaxislinecolor,f.axislinecolor,"#000000")};h={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,
"#$1"),axisBreaks:f.yaxisbreaks,axisNamePadding:f.yaxisnamepadding,axisValuePadding:f.yaxisvaluespadding,axisNameFont:f.yaxisnamefont,axisNameFontSize:f.yaxisnamefontsize,axisNameFontColor:f.yaxisnamefontcolor,axisNameFontBold:f.yaxisnamefontbold,axisNameFontItalic:f.yaxisnamefontitalic,axisNameBgColor:f.yaxisnamebgcolor,axisNameBorderColor:f.yaxisnamebordercolor,axisNameAlpha:f.yaxisnamealpha,axisNameFontAlpha:f.yaxisnamefontalpha,axisNameBgAlpha:f.yaxisnamebgalpha,axisNameBorderAlpha:f.yaxisnameborderalpha,
axisNameBorderPadding:f.yaxisnameborderpadding,axisNameBorderRadius:f.yaxisnameborderradius,axisNameBorderThickness:f.yaxisnameborderthickness,axisNameBorderDashed:f.yaxisnameborderdashed,axisNameBorderDashLen:f.yaxisnameborderdashlen,axisNameBorderDashGap:f.yaxisnameborderdashgap,axisNameWidth:f.yaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,rotateAxisName:c(f.rotateyaxisname,1),axisName:f.yaxisname,divLineColor:d(f.divlinecolor,h.getColor(k.divLineColor)),divLineAlpha:d(f.divlinealpha,
l?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(f.divlinethickness,1),divLineIsDashed:!!c(f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.divlinedashlen,4),divLineDashGap:c(f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatehgridcolor,1),alternateGridColor:d(f.alternatehgridcolor,h.getColor("altHGridColor")),alternateGridAlpha:d(f.alternatehgridalpha,h.getColor("altHGridAlpha")),numDivLines:c(f.numdivlines,this.numDivLines),axisMinValue:f.yaxisminvalue,
axisMaxValue:f.yaxismaxvalue,setAdaptiveMin:c(f.setadaptivesymin,f.setadaptiveymin),adjustDiv:f.adjustdiv,labelStep:f.yaxisvaluesstep,showAxisValues:c(f.showyaxisvalues,f.showyaxisvalue,this.showyaxisvalues),showLimits:c(f.showyaxislimits,f.showlimits,this.showLimits),showDivLineValues:c(f.showdivlinevalues,f.showdivlinevalue,this.showdivlinevalues),showZeroPlane:c(f.showzeroplane,this.showzeroplane),zeroPlaneColor:f.zeroplanecolor,zeroPlaneThickness:c(f.zeroplanethickness,f.divlinethickness,a.zeroplanethickness,
2),zeroPlaneAlpha:c(f.zeroplanealpha,f.divlinealpha,a.zeroplanealpha),showZeroPlaneValue:c(f.showzeroplanevalue,this.showzeroplanevalue),showZeroPlaneOnTop:a.showzeroplaneontop,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:l?0:c(f.showyaxisline,f.showaxislines,f.drawAxisLines,this.showyaxisline,0),axisLineThickness:c(f.yaxislinethickness,f.axislinethickness,
1),axisLineAlpha:c(f.yaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.yaxislinecolor,f.axislinecolor,"#000000")};g.vtrendlines=e.vtrendlines;h.trendlines=e.trendlines;e=b.yAxis&&b.yAxis[0];b=b.xAxis&&b.xAxis[0];e&&(e.setCommonConfigArr(h,!0,!1,!1),e.configure());b&&(b.setCommonConfigArr(g,!1,a.reverseXAxis,!1),b.configure())},_createLegend:function(){var a=this.components,c=Q.register("component",["legend","legend"]);Ga=a.legend=new c;Ga.chart=this;Ga.init()},_createGradientLegend:function(){var a=
this.components,c;this.hasGradientLegend&&(c=a.gradientLegend=a.gradientLegend||new (Q.register("component",["gradientLegend","gradientLegend"])),a.postLegendInitFn=c.init({chart:this}))},_setCategories:function(){var a=this.jsonData,c=this.components.xAxis,a=a.categories&&a.categories[0].category;c&&c[0].setCategory(a)},_getDiff:function(a,c,d,b){d>a&&(a=d,c=b);return{diff:a,startIndex:c}},_createDatasets:function(){var a,c=this.components,b=c.xAxis[0],h=this.jsonData,e=h.dataset,f=e&&e.length,g,
l,k,t=this.defaultDatasetType,p=this.applicableDSList,m=this.components.legend.components.items||[],D,w,z,r=this.config.isstacked,n,B,K=[],q=this.isRealTime,u=this.config.catLen,R={};e&&0!==e.length||this.setChartMessage();this.config.categories=h.categories&&h.categories[0].category;g=c.dataset||(c.dataset=[]);l=g.length;for(h=0;h<f;h++)if(z=e[h],z.seriesname&&(z.seriesname=G(z.seriesname)),k=z.parentyaxis||F,w=(w=this.isDual&&"s"===k.toLowerCase()?d(z.renderas,this.sDefaultDatasetType):d(z.renderas,
t))&&w.toLowerCase(),p[w]||(w=t),a=Q.get("component",["dataset",w]))void 0===R[w]?R[w]=0:R[w]++,n="datasetGroup_"+w,k=Q.register("component",["datasetGroup",w]),(D=c[n])&&K.push(D),k&&!D&&(D=c[n]=new k,D.chart=this,D.init()),(k=g[h])?(w=b.getCategoryLen(),a=u-w,n=q?k.components:k.JSONData,B=n.data&&n.data.length,n=q?0:z.data&&z.data.length||0,B-=n,a=this._getDiff(B,n,a,w),w=a.diff,a=a.startIndex,this.config._dataUpdated=!0,0<w&&k.removeData(a,w,!1),this.config._dataUpdated=!1,g[h].JSONData=z,g[h].configure(),
g[h]._deleteGridImages&&g[h]._deleteGridImages()):(k=new a,g.push(k),k.chart=this,k.index=h,D&&(r?D.addDataSet(k,0,R[w]):D.addDataSet(k,R[w],0)),k.init(z));if(l>f){w=l-f;D&&r&&D.removeDataSet(0,h,w);c=h;for(f=w+h;c<f;c++)D&&!r&&D.removeDataSet(h,0,1),Da.call(g[c]);g.splice(h,w);m.splice(h,w)}this.config.catLen=b.getCategoryLen()},_drawDataset:function(){var a=this.components.dataset,c,d=a.length,b,h,e={},f=[];for(b=0;b<d;b++)c=a[b],(h=c.groupManager)?e[c.type]=h:f.push(c);for(h in e)e[h].skipOverlapPlot(),
e[h].draw();d=f.length;for(b=0;b<d;b++)f[b].draw();this._setRTdata&&this._setRTdata()},_drawCanvas:function(){var a=this.jsonData.chart,d=this.components,b=this.config,h=this.graphics,e=d.paper,f=d.canvas,d=f.graphics,g=f.config,f=g.clip={},l=d.canvasBorderElement,k=this.get(M,U),t=k.animType,p=k.animObj,D=k.dummyObj,k=k.duration,w=d.canvasElement,z=b.canvasLeft,G=b.canvasTop,r=b.canvasWidth,B=b.canvasHeight,F=g.xDepth=b.xDepth||0,b=g.yDepth=b.yDepth||0,h=h.canvasGroup,K=g.canvasBorderRadius,q=g.canvasBorderWidth,
u=.5*q,R=g.canvasBorderColor,L=g.canBGColor,P=g.canBGAlpha,aa=g.shadow,a=g.showCanvasBG=!!c(a.showcanvasbg,1),v=g.shadowOnCanvasFill,Z=g.showCanvasBorder,g={x:z-u,y:G-u,width:r+q,height:B+q,r:K,"stroke-width":q,stroke:R,"stroke-linejoin":2<q?m:n};Z?l?(l.show(),l.animateWith(D,p,{x:z-u,y:G-u,width:r+q,height:B+q,r:K},k,t),l.attr({"stroke-width":q,stroke:R,"stroke-linejoin":2<q?m:n}),l.shadow(aa)):d.canvasBorderElement=e.rect(g,h).shadow(aa):l&&l.hide();f["clip-canvas"]=[Y(0,z-F),Y(0,G-b),Y(1,r+2*F),
Y(1,B+b)];f["clip-canvas-init"]=[Y(0,z-F),Y(0,G-b),1,Y(1,B+2*b)];a?(g={x:z,y:G,width:r,height:B,r:K,"stroke-width":0,stroke:"none",fill:na(L)},w?(w.show(),w.animateWith(D,p,{x:z,y:G,width:r,height:B,r:K},k,t),w.attr({"stroke-width":0,stroke:"none",fill:na(L)})):w=d.canvasElement=e.rect(g,h),v?w.shadow({opacity:P/100}):w.shadow(!1)):w&&w.hide()},_getBackgroundCosmetics:function(){var a=this.jsonData.chart,c=this.components.colorManager,b=this.is3D?Ta.chart3D:Ta.chart2D;return{FCcolor:{color:d(a.bgcolor,
this.bgColor,c.getColor(b.bgColor)),alpha:d(a.bgalpha,this.bgAlpha,c.getColor(b.bgAlpha)),angle:d(a.bgangle,c.getColor(b.bgAngle)),ratio:d(a.bgratio,c.getColor(b.bgRatio))}}},_manageCaptionSpacing:function(a,c){return this.components.caption.manageSpace(a,c)},_manageCaptionPosition:function(){this.components.caption.managePosition()},drawActionBar:function(){var a=this.config,c=this.components,d=c.actionBar||{},b=this.graphics,h=b.toolbarWrapperGroup,e=c.paper,f=d.componentGroups[0].btnConfig,c=d&&
d.getLogicalSpace();d.toolbarConfig.fill=Sa;d.toolbarConfig.vPadding=0;d.toolbarConfig.borderColor=Sa;h||(h=b.toolbarWrapperGroup=e.group("toolbarWrapper",b.parentGroup).insertBefore(b.datalabelsGroup));f.spaceNotHardCoded?d.draw("b"===f.vAlign&&"r"===f.hAlign?a.width-a.marginRight-c.width:a.marginLeft,a.height-a.marginBottom-c.height,{parentGroup:h}):d.draw(f.x,f.y);d.drawn=!0},_drawChartMenuBar:function(){var a=this.components.chartMenuBar,c=a.getLogicalSpace(),d=a.toolbarConfig,b=a.componentGroups[0].btnConfig,
h=b.vDirection,e=b.hDirection,f=b.y,g=b.x;d.fill=Sa;d.borderColor=Sa;b.spaceNotHardCoded?(f+=b.vMargin*h+oa(0,c.height*h),g+=b.hMargin*e-Y(0,c.width*e),a.draw("l"===b.hAlign?g+c.width:g-c.width,f)):a.draw(g,f);a.drawn=!0},_drawLogo:function(){var a=this,c=a.components.paper,d=a.config,h=d.borderWidth||0,e=d.height,f=d.width,g=a.graphics.logoImage,l=d.logoURL,k=d.logoAlpha/100,p=d.logoPosition,m=d.logoLink,D=d.logoScale,w=d.logoLeftMargin,z=d.logoTopMargin,G,r,d=a.get(M,U),n=d.animType,B=d.animObj,
F=d.dummyObj,q=d.duration,d={tr:{vAlign:V,hAlign:Ja},bl:{vAlign:T,hAlign:Fa},br:{vAlign:T,hAlign:Ja},cc:{vAlign:K,hAlign:K}},u,R,L;l?(u=new ca,(L=d[p])||(L={vAlign:V,hAlign:Fa}),u.onload=function(){R=ma("none",L.vAlign,L.hAlign,D,h,f,e,u);H&&(R.w=R.width||0,R.h=R.height||0);R.src=l;g?g.animateWith(F,B,R,q,n):g=a.graphics.logoImage=c.image(R);g.show();g.translate(w,z).css("opacity",k);m?g.css({cursor:t,_cursor:"hand"}):g.css({cursor:"default",_cursor:N});if(g.events&&g.events.length)for(r=0,G=g.events.length;r<
G;r++)g.events[r].unbind(),g.events.splice(r,1),--G,--r;g.mouseover(function(c){c=ha(a.chartInstance.ref,c);b.raiseEvent("LogoRollover",{logoURL:l,logoAlpha:100*k,logoPosition:p||"tl",logoScale:D,logoLink:m,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance)});g.mouseout(function(c){c=ha(a.chartInstance.ref,c);b.raiseEvent("LogoRollout",{logoURL:l,logoAlpha:100*k,logoPosition:p||"tl",logoScale:D,logoLink:m,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance)});
g.click(function(c){c=ha(a.chartInstance.ref,c);b.raiseEvent("LogoClick",{logoURL:l,logoAlpha:100*k,logoPosition:p||"tl",logoScale:D,logoLink:m,chartX:c.chartX,chartY:c.chartY,pageX:c.pageX,pageY:c.pageY},a.chartInstance,void 0,function(){m&&a.linkedItems.linkClickFN.call({link:m},a)})});b.raiseEvent("LogoLoaded",{logoURL:l,logoAlpha:100*k,logoPosition:p||"tl",logoScale:D,logoLink:m},a.chartInstance)},u.onerror=function(c){b.raiseEvent("LogoLoadError",{logoURL:l,logoAlpha:100*k,logoPosition:p||"tl",
logoScale:D,logoLink:m,error:c},a.chartInstance)},u.src=l):g&&g.hide()},_addCSSDefinition:function(a,c){var d=this.components.paper;c.color&&(c.fill=c.color);d.cssAddRule(a,c)},_allocateSpace:function(a){var c=this.components.canvas.config,d=this.config,b=d.canvasHeight,h=d.canvasWidth,e=d.availableHeight,f=d.availableWidth;d.canvasLeft+=a.left||0;d.canvasTop+=a.top||0;h=d.canvasWidth=Y(h-((a.left||0)+(a.right||0)),0);b=d.canvasHeight=Y(b-((a.top||0)+(a.bottom||0)),0);d.availableHeight=Y(e-((a.top||
0)+(a.bottom||0)),0);d.availableWidth=Y(f-((a.left||0)+(a.right||0)),0);d.canvasRight=d.canvasLeft+h;d.canvasBottom=d.canvasTop+b;c.canvasPaddingLeft=Y(c.canvasPaddingLeft,a.paddingLeft||0);c.canvasPaddingRight=Y(c.canvasPaddingRight,a.paddingRight||0);c.canvasPaddingTop=Y(c.canvasPaddingTop,a.paddingTop||0);c.canvasPaddingBottom=Y(c.canvasPaddingBottom,a.paddingBottom||0)},_updateCategory:function(a){var c=this.jsonData,c=c.categories&&c.categories[0].category,d=a.category,b=d.length,h=a.index,e=
a.prepend;a=a.add;var f;for(f=0;f<b;f++)h?(a&&c.splice(h-1+f,0,d[f]),!a&&(c[h-1+f]=d[f])):e?(a&&c.splice(f,0,d[f]),!a&&(c[f]=d[f])):(a&&c.push(d),!a&&(c[c.length-1]=d))},realTimeUpdate:function(a){var c=this.components,d=c.xAxis&&c.xAxis[0],c=c.dataset,b=a.dataset;a=a.categories&&a.categories.category||[];var h=d&&d.getCategoryLen(),e=this.config.realTimeConfig=this.config.realTimeConfig||(this.config.realTimeConfig={}),f=0,g;if(c){if(d){d.categoryInsert(h,a,!0);h=0;for(g=a.length;h<g;h++)a[h].vline||
(f+=1);d.categoryDelete(0,f,!0)}this.config._sumValuesUpdated=!1;h=0;for(g=c.length;h<g;h++)f=b[h],c[h].addData(f),c[h].removeData(0,f.data.length),c[h].maxminFlag&&(e.maxminFlag=c[h].maxminFlag)}},_RTmanageSpace:function(){var a=this.config,c=this.components,d=c.xAxis[0],b=c.yAxis[0],h=c.yAxis[1],e,f=c.canvas.config,c=f.canvasBorderWidth,g=f.canvasPaddingTop,l=f.canvasPaddingBottom,k=f.canvasPadding||0,t=f.canvasPaddingLeft,f=f.canvasPaddingRight,p;e=a.xAxisSpaceAllocation;p=a.yAxisSpaceAllocation||
[];var m=p[0]&&p[0].spaceTaken||{},D=p[1]&&p[1].spaceTaken||{},w=a.primaryAxisOnleft,z,G,r;e=(a.xAxisSpaceAllocation=d.placeAxis(a.availableHeight+e.bottom)).bottom-e.bottom;0!==e&&(this._allocateSpace({bottom:e}),e=a.availableWidth,p[0].spaceTaken=e=b.placeAxis(e+m.left),this._allocateSpace({left:e.left-m.left}),e=a.availableWidth,m=a.canvasLeft-c,G=a.canvasRight+c,h&&(z=G,r=m,0===w&&(w=m,m=z,z=w,w=G,G=r,r=w),p[1].spaceTaken=p=h.placeAxis(e+(D.right||0)),this._allocateSpace({right:(p.right||0)-(D.right||
0)}),h.setAxisDimention({x:z,y:a.canvasTop+g,opposite:r,axisLength:a.canvasHeight-g-l})),d&&d.setAxisDimention({x:a.canvasLeft+Y(t,k),y:a.canvasBottom+(a.shift||0)+c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-Y(t,k)-Y(f,k)}),b&&b.setAxisDimention({x:m,y:a.canvasTop+g,opposite:G,axisLength:a.canvasHeight-g-l}),b.draw(),this._drawCanvas())},realTimeDraw:function(a,c,d,h,e){var f=this.components,g=f.xAxis&&f.xAxis[0],l=f.yAxis&&f.yAxis[0],k=f.yAxis&&f.yAxis[1],t=f.scale,f=f.dataset,p=this.config.realTimeConfig,
m=p.sync,D=p.showRTValue,w=p.maxminFlag,z,G,r=f.length;G=(new Date).getTime();this._chartAnimation(m);this.rtManageSpace&&this._RTmanageSpace();if(f){g&&g.draw();this._setAxisLimits();w&&l&&l.draw();k&&k.draw();w&&t&&t.draw();for(g=0;g<r;g++)z=f[g].groupManager,!z&&f[g].draw();D&&this._drawRealTimeValue&&this._drawRealTimeValue();z&&z.draw()}this._setRTdata&&this._setRTdata();G=(new Date).getTime()-G;c={data:c,updateObject:p.legacyUpdateObj,prevData:d,source:a?"XmlHttpRequest":"feedData",latency:G};
a&&(c.networkLatency=e,c.url=h);b.raiseEvent("realTimeUpdateComplete",c,this.chartInstance)},_getPrevData:function(){return this.config.realTimeConfig&&this.config.realTimeConfig.prevData},feedData:function(a,c,d,b){var h=this,e=h.config.realtimeEnabled,f=h.config.realTimeConfig||(h.config.realTimeConfig={}),g,l=h.components,k=l.xAxis,t=h.components.dataset,p,m,D=f.clearInterval,w=f.refreshInterval,z=f.updateInterval,G=h.linkedItems.timers||(h.linkedItems.timers={setTimeout:{},setInterval:{}}),r=
t.length,n=f.prevData;g=h._linearDataParser(a);if(e&&h.chartInstance.isActive()){if(f.clear){for(e=0;e<r;e++)t[e]._realTimeConfigure(!0);f.clear=!1}w<z&&(w=f.refreshInterval=f.updateInterval);l.messageLogger&&l.messageLogger.addLog(g);l.alertManager&&l.alertManager.processRTData(g);h.realTimeUpdate(g);h.canvasPadding&&h._adjustCanvasPadding();w&&!1===f.clearIntervalFlag?(h.realTimeDraw(c,a,n,d,b),f.refreshIntervalFlag=!1):w&&!f.refreshIntervalFlag?(f.refreshIntervalFlag=!0,G.setTimeout.loadData=setTimeout(function(){p=
(new Date).getTime();h.realTimeDraw(c,a,n,d,b);m=(new Date).getTime();f.refreshIntervalFlag=!1;f.refreshIntervalTimeDifference=m-p},1E3*w-(f.refreshIntervalTimeDifference||0)-(b||0))):w||h.realTimeDraw(c,a,n,d,b);D&&!f.clearIntervalFlag&&k&&(f.clearIntervalFlag=!0,G.setTimeout.clearData=setTimeout(function(a){p=(new Date).getTime();try{clearTimeout(a.setTimeout.loadData)}catch(c){clearTimeout(G.setTimeout.loadData)}h._clearChart();m=(new Date).getTime();f.clearIntervalTimeDifference=m-p;f.clearIntervalFlag=
!1},1E3*D-(f.clearIntervalTimeDifference||0)-(b||0),G));return!0}return!1},_clearChart:function(a){var c=this.components,d=c.xAxis&&c.xAxis[0],c=c.dataset,b=d.getCategoryLen(),h=this.config.realTimeConfig||(this.config.realTimeConfig={}),e=c.length;h.clear=!0;if(c){d&&d.categoryDelete(0,b,!0);this.config._sumValuesUpdated=!1;for(b=0;b<e;b++)d=c[b],c[b].removeData(0,d.components.data.length),c[b].maxminFlag&&(h.maxminFlag=c[b].maxminFlag);this.realTimeDraw()}this._setRealTimeCategories();v.raiseEvent("ChartCleared",
{source:a},this.chartInstance,[this.id,a])},_linearDataParser:function(c,d){var b,h,e,f,g,l,k,t,p,m,D,w,z,G,r,n,B,K,q,u,R,L,P=this.components.dataset,P=P&&P.length;G=this.config.realTimeConfig;var aa=G.prevData=[],v=G.legacyUpdateObj={},Z=v.values=[],E=v.target=[],S=v.valueVisibility=[],V=v.toolTexts=[],T=v.toolTextsTarget=[],X=v.colors=[],C=v.links=[],A=0,H={categories:{category:[]},dataset:[]},Ra=H.categories.category,N=H.dataset,J,ca=c,Ia;c=c&&c.toString&&c.toString()||F;this.rtParserModify&&(ca=
ca.replace(/([^\\])(\|)/g,"$1,"),c=c.replace(/\|/g,","));b=c.split("&");G=0;for(r=b.length;G<r;G+=1)if(h=b[G].split("="),e=h[1],h=h[0],h!==a&&void 0!==h&&void 0!==e&&(e!==a||d))switch(J=h.toLowerCase(),J){case "label":v.labels=n=e.split(",");break;case "vline":v.vlines=B=e.split(",");break;case "vlinelabel":v.vlineLabels=p=e.split(",");break;case "vlinecolor":v.vlineColors=m=e.split(",");break;case "vlinethickness":v.vlineThickness=D=e.split(",");break;case "vlinedashed":v.vlineDashed=w=e.split(",");
break;case "value":K=e.split("|");break;case "target":q=e.split("|");break;case "showlabel":v.showLabels=z=e.split(",");break;case "showvalue":f=e.split("|");break;case "tooltext":g=(g=(g=ca.match(/tooltext=(.*?\\&)*.*?[^\\]&/i))?g[0].substr(9,g[0].length-10):ca.match(/(tooltext=)(.*)/i)[2])&&g.replace(/([^\\])(\|)/g,"$1_FC@@**");g=g.split("_FC@@**");break;case "targettooltext":l=e.split("|");break;case "link":t=e.split("|");break;case "color":k=e.split("|");break;case "datastamp":v.dataStamp=u=e;
break;case "stopupdate":v.pause=R="1"==e;break;case "clear":v.clear=L="1"==e;break;default:v[h]=H[h]=e}b=K&&K.length;for(G=0;G<b;G++)Z[G]=K[G].split(","),E[G]=q&&q[G]&&q[G].split(","),S[G]=f&&f[G]&&f[G].split(","),T[G]=l&&l[G]&&l[G].split(","),X[G]=k&&k[G]&&k[G].split(","),C[G]=t&&t[G]&&t[G].split(","),g&&(Ia=g[G])&&(Ia=Ia.replace(/([^\\])(\,)/g,"$1_FC@@**"),V[G]=Ia.split("_FC@@**")),A=Y(A,Z[G].length);f=Y(n&&n.length||0,A||0);for(G=0;G<f;G++)Ra.push({label:n&&n[G],color:m&&m[G],showlabel:z&&z[G]});
B&&Ra.push({label:p&&p[0],vline:B&&B[0],color:m&&m[0],thickness:D&&D[0],dashed:w&&w[0],showlabel:z&&z[0]});for(G=0;G<P;G++){D={};p=D.data=[];w=aa[G]=[];for(m=0;m<f;m++)p.push({value:Z[G]&&Z[G][m],target:E[G]&&E[G][m],showvalue:S[G]&&S[G][m],tooltext:V[G]&&V[G][m]&&V[G][m].replace(/\\/g,""),tooltexttarget:T[G]&&T[G][m],color:X[G]&&X[G][m],link:C[G]&&C[G][m]}),w.push(Z[G]&&Z[G][m]);N.push(D)}R&&this._stopUpdate();L&&this._clearChart();u&&(this.config.dataStamp=u);return H},exportChart:function(a){return v.exportChart.call(this,
a)},chartHoverManager:function(){return function(a){var c=a.type,d=a.data,b=d.linkedItems.eventListeners||(d.linkedItems.eventListeners=[]);"mouseover"!==c&&"touchstart"!==c||!1!==d.mouseStateIn||(d.mouseStateIn=!0,d.onContainerRollOver(a),b.push(ra(H?u:A,"mouseover",d.winMouseHover,d)))}}(),setChartEvents:function(){var a=this.linkedItems.eventListeners||(this.linkedItems.eventListeners=[]),d=this.components.paper.canvas,b=this.linkedItems.container,h=c(this.jsonData.chart.enablechartmousemoveevent,
0);qa(b,"click",this.onContainerClick);a.push(ra(b,"click",this.onContainerClick,this));qa(d,"mouseover",this.chartHoverManager,this);qa(d,"touchstart",this.chartHoverManager,this);qa(d,"mouseout",this.chartHoverManager,this);qa(d,"touchend",this.chartHoverManager,this);a.push(ra(d,"mouseover touchstart mouseout touchend",this.chartHoverManager,this));qa(b,"mousemove",this.onContainerMouseMove,this);qa(b,"touchmove",this.onContainerMouseMove,this);h&&a.push(ra(b,"mousemove touchmove",this.onContainerMouseMove,
this))},setChartCursor:function(){var a=this.config.link,c=this.components.paper.canvas.style;J.svg?c.cursor=a?t:"default":this.components.paper.canvas.style.cursor=a?"hand":"default"},onContainerClick:function(a){var c=a.target||a.originalTarget||a.srcElement||a.relatedTarget||a.fromElement,d=c&&c.parentElement,h=c&&c.nodeName.toLowerCase(),e=a.data,f=e.chartInstance;a=v.getMouseCoordinate(e.linkedItems.container,a.originalEvent,e);var g;f.ref&&(g=aa({height:f.args.height,width:f.args.width,pixelHeight:f.ref.offsetHeight,
pixelWidth:f.ref.offsetWidth,id:f.args.id,renderer:f.args.renderer,container:f.options.containerElement},a),hb.addJob(function(){b.raiseEvent("chartclick",g,e.chartInstance)},ib.chartClick),c&&c.ishot&&e||"tspan"===h&&d&&d.ishot&&e||e.config.link&&e.linkedItems.linkClickFN.call(e,e))},onContainerMouseMove:function(a){var c=a.data,d=c.chartInstance;a=v.getMouseCoordinate(c.linkedItems.container,a.originalEvent,c);d.ref&&(d=aa({height:d.args.height,width:d.args.width,pixelHeight:d.ref.offsetHeight,
pixelWidth:d.ref.offsetWidth,id:d.args.id,renderer:d.args.renderer,container:d.options.containerElement},a),b.raiseEvent("chartMouseMove",d,c.chartInstance))},onContainerRollOver:function(a){var c=a.data,d=c.chartInstance;a=v.getMouseCoordinate(c.linkedItems.container,a.originalEvent,c);d.ref&&(d=aa({height:d.args.height,width:d.args.width,pixelHeight:d.ref.offsetHeight,pixelWidth:d.ref.offsetWidth,id:d.args.id,renderer:d.args.renderer,container:d.options.containerElement},a),b.raiseEvent("chartRollOver",
d,c.chartInstance))},onContainerRollOut:function(a){var c=a.chart,d=c.chartInstance;a=v.getMouseCoordinate(c.linkedItems.container,a.event,c);d.ref&&(d=aa({height:d.args.height,width:d.args.width,pixelHeight:d.ref.offsetHeight,pixelWidth:d.ref.offsetWidth,id:d.args.id,renderer:d.args.renderer,container:d.options.containerElement},a),b.raiseEvent("chartRollOut",d,c.chartInstance))},mouseStateIn:!1,winMouseHover:function(a){var c=a.originalEvent,c=c.target||c.originalTarget||c.srcElement||c.relatedTarget||
c.fromElement,d=a.data,b=d.components.paper;a={chart:d,event:a.originalEvent};H?b.getById(c.parentNode.raphaelid)||(d.onContainerRollOut(a),d.mouseStateIn=!1,qa(u,"mouseover",d.winMouseHover)):c.viewportElement||(d.mouseStateIn=!1,d.onContainerRollOut(a),qa(A,"mouseover",d.winMouseHover))},_show:function(){this.graphics&&this.graphics.parentGroup&&this.graphics.parentGroup.show()},_hide:function(){this.graphics&&this.graphics.parentGroup&&this.graphics.parentGroup.hide()},getJobList:function(){this.jobList||
(this.jobList={trackerDrawID:[],labelDrawID:[],entityDrawID:[],kdTreeID:[],draw:[],eiMethods:[],postRender:[]});return this.jobList},_setDatasetOrder:function(){var a=this.config,d=this.components.dataset,b=c(this.jsonData.chart.areaovercolumns,1),h={line:[],area:[],column:[]},e=d.length,f,g;for(f=0;f<e;f++)g=d[f],(h[g.type]||h.line).push(g);a.datasetOrder=b?h.column.concat(h.area).concat(h.line):h.area.concat(h.column).concat(h.line)}},ta.base,{valuefontbold:0,stickytracking:1,usemessagelog:0,zeroplanethickness:void 0,
animationeffect:"easeIn",showshadow:1,showhovereffect:void 0,plothovereffect:void 0,anchorhovereffect:void 0,plotborderdashed:void 0,stack100percent:void 0,showpercentvalues:void 0,showpercentintooltip:void 0,plotbordercolor:void 0,showtooltip:1,seriesnameintooltip:1,rotatevalues:0,minimizetendency:0,plotfillangle:270,valuepadding:2,useplotgradientcolor:1,plotborderthickness:1,plotfillalpha:P,showvalues:1,valueposition:z,tooltipsepchar:", ",usedataplotcolorforlabels:0,placevaluesinside:0,showplotborder:1,
use3dlighting:1,useroundedges:0,plotspacepercent:20,plotpaddingpercent:void 0,plotfillratio:void 0,maxcolwidth:50,plotborderdashlen:5,plotborderdashgap:4});Q.register("component",["caption","caption",{pIndex:2,customConfigFn:null,init:function(){var a=this.graphics;!this.components&&(this.components={});!a&&(this.graphics={})},configure:function(){var a=this.chart,b=a.jsonData.chart,h=a.components,g=h.caption,l=g.config,k=a.config.style,t=k.outCanfontFamily,m=k.outCancolor,k=k.fontSize,h=h.subCaption,
D=h.config;g.components.text=G(b.caption);h.components.text=G(b.subcaption);l.style={fontFamily:d(b.captionfont,t),color:pa(d(b.captionfontcolor,m).replace(/^#? ([a-f0-9]+)/ig,"#$1")),fontSize:c(b.captionfontsize,k+3)+Ea,fontWeight:0===c(b.captionfontbold)?N:E};l.align=D.align=d(b.captionalignment,La);switch(l.align){case Ja:l.align=p;break;case Fa:l.align=e;break;default:l.align=K}l.isOnTop=D.isOnTop=c(b.captionontop,1);l.isOnLeft=!c(b.captiononright,0);l.captionPosition=f(b.captionposition,V).toLowerCase();
l.alignWithCanvas=D.alignWithCanvas=c(a.aligncaptionwithcanvas,b.aligncaptionwithcanvas,1);l.horizontalPadding=D.horizontalPadding=c(b.captionhorizontalpadding,l.alignWithCanvas?0:15);l.drawCaption=!0;ga(l.style);D.style={fontFamily:d(b.subcaptionfont,b.captionfont,t),color:pa(d(b.subcaptionfontcolor,b.captionfontcolor,m).replace(/^#? ([a-f0-9]+)/ig,"#$1")),fontSize:c(b.subcaptionfontsize,c(Y(c(b.captionfontsize)-3,-1),k)+c(a.subTitleFontSizeExtender,1))+Ea,fontWeight:0===c(b.subcaptionfontbold,a.subTitleFontWeight,
b.captionfontbold)?N:E};ga(D.style)},draw:function(){var a=this.chart,c=a.config,d=a.components,b=a.config.textDirection,h=a.graphics,e=h.captionGroup,f=d.paper,g=a.linkedItems.smartLabel,l=d.caption,t=l.graphics,p=t.captionElement,m=d.subCaption,d=m.graphics,D=d.subCaptionElement,w=l.components,l=l.config,z=m.config,G=l.style,n=z.style,m=m.components,B=w.text,F=m.text,q=l.x,u=l.align,R,L=c.showToolTip;R=a.get(M,U);var a=R.animType,P=R.animObj,aa=R.dummyObj,v=R.duration;!B&&!F||e||(e=h.captionGroup=
f.group("caption"),e.trackTooltip(!0),h.tracker?e.insertBefore(h.trackerGroup):e.insertAfter(h.datasetGroup));B?(R={text:w.text,fill:G.color,x:q,y:l.y,"text-anchor":u||K,"vertical-align":l.verticalAlign||V,visibility:l.drawCaption?k:r,direction:b},p?(p.animateWith(aa,P,{x:q,y:l.y,"text-anchor":u||K,"vertical-align":l.verticalAlign||V,direction:b},v,a),p.attr({"text-anchor":u||K,text:w.text,fill:G.color,visibility:l.drawCaption?k:r}),p.css(G)):p=t.captionElement=f.text(R,G,e),p.tooltip(w.originalText),
g&&(g.useEllipsesOnOverflow(c.useEllipsesWhenOverflow),g.setStyle(G),g.getOriSize(w.text))):p&&(t.captionElement=p.remove());F?(R={text:m.text,fill:n.color,x:q,y:z.y,"text-anchor":u||K,"vertical-align":V,direction:b,visibility:l.drawCaption?k:r},D?(D.animateWith(aa,P,{x:q,y:z.y,"text-anchor":u||K,"vertical-align":V,direction:b},v,a),D.attr({"text-anchor":u||K,text:m.text,fill:n.color,visibility:l.drawCaption?k:r}),D.css(n)):D=d.subCaptionElement=f.text(R,n,e),D.tooltip(m.originalText)):D&&(d.subCaptionElement=
D.remove());e&&e.trackTooltip(L?!0:!1);B||F||!e||(h.captionGroup=e.remove())},manageSpace:function(d,b){var h=this.chart,e=h.config,f=h.components,g=f.caption,l=f.subCaption,k=g.config,t=l.config,g=g.components,l=l.components,p=h.jsonData.chart,h=h.linkedItems.smartLabel,m=d,D=G(p.caption),w=G(p.subcaption),z=p=c(p.captionpadding,10),r=e.canvasWidth,n=!1,B,K,q=0,u=0,R=0,L=0,P=0,u=Y(f.canvas.config.canvasBorderThickness,0),aa=f=0;!b&&(b=r);if(3<m){p<u&&(p=u+2);D!==a&&(B=k.style,L=fa(c(parseFloat(B.fontHeight,
10),parseFloat(B.lineHeight,10),12)));w!==a&&(K=t.style,P=c(parseInt(K.fontHeight,10),parseInt(K.lineHeight,10),12));if(0<L||0<P)m=Y(m,0),q=L+P+p,q>m?(u=m-q,n=!0,u<p?p=Y(u,5):(u-=p,p=0,P>u?(R=P-u+10,P=0,l._originalText=l.text,l.text=F):(u-=P,P=0,L>u&&(R=L-u)))):R=m-q,h.useEllipsesOnOverflow(e.useEllipsesWhenOverflow),0<L&&(h.setStyle(B),L+=R,B=h.getSmartText(D,b,L),R=L-B.height,k.height=L=B.height,g.text=B.text,g.originalText=B.tooltext?B.tooltext:!1,f=B.width),0<P&&(h.setStyle(K),P+=R,K=h.getSmartText(w,
b,P),R=P-K.height,P=K.height,l.text=K.text,t.height=K.height,l.originalText=K.tooltext?K.tooltext:!1,aa=K.width),n&&0<R&&(p+=oa(z-p,R)),k.captionPadding=p,k.height=L,k.width=f,t.width=aa,t.height=P,q=L+P+p;q>e.canvasHeight?(q=0,k.drawCaption=!1):k.drawCaption=!0;e=k.isOnTop?{top:q}:{bottom:q,top:5}}else e={bottom:0,top:0},k.drawCaption=!1;return e},managePosition:function(){var a=this.chart,d=a.config,b=a.components,h=b.caption,f=h.config,g=f.widgetValueHeight||0,l=b.subCaption.config,k=f.x,t=d.canvasWidth,
k=f.align,h=h.components.text,m=f.alignWithCanvas,D=f.horizontalPadding,w=d.width,z=d.canvasLeft,G=d.canvasRight,r=d.marginRight,n=d.marginLeft,d=d.marginTop,B=(ua(z)||0)+c(t,w)/2,t=f.height,F=l.height,K=b.legend.config,q=K.height,u=K.legendPadding,R=K.legendPos,L=b.gradientLegend||{},P=0,aa=!!(L.conf||{}).showLegend,v=a.config.borderWidth,b=b.actionBar,Z=0;K.isActive||(q=0);aa&&a.config.gLegendEnabled&&(P=L.getLogicalSpace().height);switch(k){case p:k=m?G-D:w-D;break;case e:k=m?z+D:D;break;default:k=
m?B:n+.5*(w-n-r)||w/2}f.x=k;f.isOnTop?f.y=(v||0)+(d||0):(R===Ja&&(P=q=u=0),b&&(k=b.getLogicalSpace()||{},Z=k.height,void 0===Z||Infinity===Z||0>Z)&&(Z=0),f.y=a.config.height-a.config.marginBottom-t-(F||0)-(v||0)-(u||0)-(q||0)-P-g-Z);f.y+=f._offsetHeight||0;l.y=h?f.y+t+2:f.y||d||0}}]);Q.register("component",["caption","subcaption",{pIndex:2,init:function(){var a=this.graphics;!this.components&&(this.components={});!a&&(this.graphics={})}}]);ta("scrollbase",{standaloneInit:!1,_scrollBar:function(){var a=
[];return{get:function(){return a},clear:function(){a.length=0},add:function(c,d){a.push({conf:c,handler:d})}}}()},ta.mscartesian,{enablemousetracking:!0});ta("msinversecartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=Q.register("component",["axis","cartesian"]),d;a.yAxis=[];a.xAxis=[];a.yAxis[0]=d=new c;a.xAxis[0]=a=new c;d.chart=this;a.chart=this;d.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.components,b=this.config,h=a.colorManager,
e=this.jsonData,f=e.chart,g,l=(g=this.is3d)?Ta.chart3D:Ta.chart2D;g={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.xaxisnamepadding,axisValuePadding:f.labelpadding,axisNameFont:f.xaxisnamefont,axisNameFontSize:f.xaxisnamefontsize,axisNameFontColor:f.xaxisnamefontcolor,axisNameFontBold:f.xaxisnamefontbold,
axisNameFontItalic:f.xaxisnamefontitalic,axisNameBgColor:f.xaxisnamebgcolor,axisNameBorderColor:f.xaxisnamebordercolor,axisNameAlpha:f.xaxisnamealpha,axisNameFontAlpha:f.xaxisnamefontalpha,axisNameBgAlpha:f.xaxisnamebgalpha,axisNameBorderAlpha:f.xaxisnameborderalpha,axisNameBorderPadding:f.xaxisnameborderpadding,axisNameBorderRadius:f.xaxisnameborderradius,axisNameBorderThickness:f.xaxisnameborderthickness,axisNameBorderDashed:f.xaxisnameborderdashed,axisNameBorderDashLen:f.xaxisnameborderdashlen,
axisNameBorderDashGap:f.xaxisnameborderdashgap,useEllipsesWhenOverflow:f.useellipseswhenoverflow,divLineColor:d(f.vdivlinecolor,f.divlinecolor,h.getColor(l.divLineColor)),divLineAlpha:d(f.vdivlinealpha,f.divlinealpha,g?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(f.vdivlinethickness,f.divlinethickness,1),divLineIsDashed:!!c(f.vdivlinedashed,f.vdivlineisdashed,f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.vdivlinedashlen,f.divlinedashlen,4),divLineDashGap:c(f.vdivlinedashgap,
f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatevgridcolor,0),alternateGridColor:d(f.alternatevgridcolor,h.getColor("altVGridColor")),alternateGridAlpha:d(f.alternatevgridalpha,h.getColor("altVGridAlpha")),numDivLines:f.numvdivlines,maxLabelHeight:f.maxlabelheight,labelFont:f.labelfont,labelFontSize:f.labelfontsize,labelFontColor:f.labelfontcolor,labelFontAlpha:f.labelalpha,labelFontBold:f.labelfontbold,labelFontItalic:f.labelfontitalic,axisName:f.xaxisname,axisMinValue:f.xaxisminvalue,
axisMaxValue:f.xaxismaxvalue,setAdaptiveMin:f.setadaptivexmin,adjustDiv:f.adjustvdiv,labelDisplay:f.labeldisplay,showLabels:f.showlabels,rotateLabels:f.rotatelabels,slantLabel:c(f.slantlabels,f.slantlabel),labelStep:c(f.labelstep,f.xaxisvaluesstep),showAxisValues:c(f.showxaxisvalues,f.showxaxisvalue),showLimits:f.showvlimits,showDivLineValues:c(f.showvdivlinevalues,f.showvdivlinevalues),showZeroPlane:f.showvzeroplane,zeroPlaneColor:f.vzeroplanecolor,zeroPlaneThickness:f.vzeroplanethickness,zeroPlaneAlpha:f.vzeroplanealpha,
showZeroPlaneValue:f.showvzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showxaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.xaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.xaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.xaxislinecolor,f.axislinecolor,"#000000")};b={outCanfontFamily:d(f.outcnvbasefont,
f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(l.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.yaxisnamepadding,axisValuePadding:f.yaxisvaluespadding,axisNameFont:f.yaxisnamefont,axisNameFontSize:f.yaxisnamefontsize,axisNameFontColor:f.yaxisnamefontcolor,axisNameFontBold:f.yaxisnamefontbold,axisNameFontItalic:f.yaxisnamefontitalic,axisNameBgColor:f.yaxisnamebgcolor,axisNameBorderColor:f.yaxisnamebordercolor,
axisNameAlpha:f.yaxisnamealpha,axisNameFontAlpha:f.yaxisnamefontalpha,axisNameBgAlpha:f.yaxisnamebgalpha,axisNameBorderAlpha:f.yaxisnameborderalpha,axisNameBorderPadding:f.yaxisnameborderpadding,axisNameBorderRadius:f.yaxisnameborderradius,axisNameBorderThickness:f.yaxisnameborderthickness,axisNameBorderDashed:f.yaxisnameborderdashed,axisNameBorderDashLen:f.yaxisnameborderdashlen,axisNameBorderDashGap:f.yaxisnameborderdashgap,axisNameWidth:f.yaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,
rotateAxisName:c(f.rotateyaxisname,1),axisName:f.yaxisname,divLineColor:d(f.divlinecolor,h.getColor(l.divLineColor)),divLineAlpha:d(f.divlinealpha,h.getColor("divLineAlpha")),divLineThickness:c(f.divlinethickness,1),divLineIsDashed:!!c(f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.divlinedashlen,4),divLineDashGap:c(f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatehgridcolor,1),alternateGridColor:d(f.alternatehgridcolor,h.getColor("altHGridColor")),alternateGridAlpha:d(f.alternatehgridalpha,
h.getColor("altHGridAlpha")),numDivLines:f.numdivlines,axisMinValue:f.yaxisminvalue,axisMaxValue:f.yaxismaxvalue,setAdaptiveMin:f.setadaptiveymin,adjustDiv:f.adjustdiv,labelStep:f.yaxisvaluesstep,showAxisValues:c(f.showyaxisvalues,f.showyaxisvalue),showLimits:c(f.showyaxislimits,f.showlimits,this.showLimits),showDivLineValues:c(f.showdivlinevalues,f.showdivlinevalue),showZeroPlane:f.showzeroplane,zeroPlaneColor:f.zeroplanecolor,zeroPlaneThickness:c(f.zeroplanethickness,f.divlinethickness,b.zeroplanethickness,
2),zeroPlaneAlpha:c(f.zeroplanealpha,f.zeroplanealpha,b.zeroplanealpha,80),showZeroPlaneValue:f.showzeroplanevalue,showZeroPlaneOnTop:b.showzeroplaneontop,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showyaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.yaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.yaxislinealpha,
f.axislinealpha,100),axisLineColor:d(f.yaxislinecolor,f.axislinecolor,"#000000")};g.vtrendlines=e.vtrendlines;b.trendlines=e.trendlines;e=a.yAxis&&a.yAxis[0];a=a.xAxis&&a.xAxis[0];e&&(e.setCommonConfigArr(b,!0,!0,!1),e.configure());a&&(a.setCommonConfigArr(g,!1,!1,!1),a.configure(),a.setAxisConfig({isRelativeAxisInverse:!0}))}},ta.mscartesian);ta("sscartesian",{standaloneInit:!1,hasLegend:!1,_createDatasets:function(){var a=this.components,c=a.legend,d=this.jsonData,b=d.dataset,h=d.data||b&&b[0].data,
f=this.defaultDatasetType,e,g,d=this._dataSegregator(h);this.config.categories=d.data;b=a.dataset||(a.dataset=[]);if(!h||0===h.length)this.setChartMessage();else if(f&&(g=Q.get("component",["dataset",f])))if(h="datasetGroup_"+f,e=Q.register("component",["datasetGroup",f]),f=a[h],e&&!f&&(f=a[h]=new e,f.chart=this,f.init()),b[0]){a=b[0];f=a.JSONData;b=a.components.data||[];h=f.data.length-(a.config.showSum||0);g=d.data&&d.data.length||0;if(h>g){if(c)for(f=g;f<h;f++)b[f]&&b[f].legendItemId&&c.removeItem(b[f].legendItemId);
a.removeData(g,h-g,!1)}a.JSONData=d;a.configure()}else a=new g,b.push(a),a.chart=this,f&&f.addDataSet(a,0,0),a.index=0,a.init(d)},_dataSegregator:function(a){var c=[];Pa(a,function(a){"true"!==a.vline&&!0!==a.vline&&1!==a.vline&&"1"!==a.vline&&c.push(a)});return{data:c}},_setCategories:function(){var a=this.jsonData,c=a.dataset;this.components.xAxis[0].setCategory(a.data||c&&c[0].data)}},ta.mscartesian,{linethickness:4});ta("msdybasecartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,
c,d=Q.register("component",["axis","cartesian"]),b;a.yAxis=[];a.xAxis=[];a.yAxis[0]=b=new d;a.yAxis[1]=c=new d;a.xAxis[0]=a=new d;b.chart=this;c.chart=this;a.chart=this;b.init();c.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.config,b=this.components,h=b.colorManager,f=this.jsonData,e=f.chart,g,l,k=this.is3d,t=k?Ta.chart3D:Ta.chart2D,p,m=a.primaryAxisOnleft=c(e.primaryaxisonleft,1),D=c(e.syncaxislimits,0);l=[{line:[]}];p=[{line:[]}];var w,z=f.trendlines||[];g={outCanfontFamily:d(e.outcnvbasefont,
e.basefont,"Verdana,sans"),outCanfontSize:la(e.outcnvbasefontsize,e.basefontsize,10),outCancolor:d(e.outcnvbasefontcolor,e.basefontcolor,h.getColor(t.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:e.xaxisnamepadding,axisValuePadding:e.labelpadding,axisNameFont:e.xaxisnamefont,axisNameFontSize:e.xaxisnamefontsize,axisNameFontColor:e.xaxisnamefontcolor,axisNameFontBold:e.xaxisnamefontbold,axisNameFontItalic:e.xaxisnamefontitalic,axisNameBgColor:e.xaxisnamebgcolor,axisNameBorderColor:e.xaxisnamebordercolor,
axisNameAlpha:e.xaxisnamealpha,axisNameFontAlpha:e.xaxisnamefontalpha,axisNameBgAlpha:e.xaxisnamebgalpha,axisNameBorderAlpha:e.xaxisnameborderalpha,axisNameBorderPadding:e.xaxisnameborderpadding,axisNameBorderRadius:e.xaxisnameborderradius,axisNameBorderThickness:e.xaxisnameborderthickness,axisNameBorderDashed:e.xaxisnameborderdashed,axisNameBorderDashLen:e.xaxisnameborderdashlen,axisNameBorderDashGap:e.xaxisnameborderdashgap,useEllipsesWhenOverflow:e.useellipseswhenoverflow,divLineColor:d(e.vdivlinecolor,
e.divlinecolor,h.getColor(t.divLineColor)),divLineAlpha:d(e.vdivlinealpha,e.divlinealpha,k?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(e.vdivlinethickness,e.divlinethickness,1),divLineIsDashed:!!c(e.vdivlinedashed,e.vdivlineisdashed,e.divlinedashed,e.divlineisdashed,0),divLineDashLen:c(e.vdivlinedashlen,e.divlinedashlen,4),divLineDashGap:c(e.vdivlinedashgap,e.divlinedashgap,2),showAlternateGridColor:c(e.showalternatevgridcolor,0),alternateGridColor:d(e.alternatevgridcolor,
h.getColor("altVGridColor")),alternateGridAlpha:d(e.alternatevgridalpha,h.getColor("altVGridAlpha")),numDivLines:e.numvdivlines,maxLabelHeight:e.maxlabelheight,labelFont:e.labelfont,labelFontSize:e.labelfontsize,labelFontColor:e.labelfontcolor,labelFontAlpha:e.labelalpha,labelFontBold:e.labelfontbold,labelFontItalic:e.labelfontitalic,axisName:e.xaxisname,axisMinValue:e.xaxisminvalue,axisMaxValue:e.xaxismaxvalue,setAdaptiveMin:e.setadaptivexmin,adjustDiv:e.adjustvdiv,labelDisplay:e.labeldisplay,showLabels:e.showlabels,
rotateLabels:e.rotatelabels,slantLabel:c(e.slantlabels,e.slantlabel),labelStep:c(e.labelstep,e.xaxisvaluesstep),showAxisValues:c(e.showxaxisvalues,e.showxaxisvalue),showLimits:e.showvlimits,showDivLineValues:c(e.showvdivlinevalues,e.showvdivlinevalues),zeroPlaneColor:e.vzeroplanecolor,zeroPlaneThickness:c(e.vzeroplanethickness,e.vdivlinethickness,2),zeroPlaneAlpha:c(e.vzeroplanealpha,e.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:e.showvzeroplanevalue,trendlineColor:e.trendlinecolor,trendlineToolText:e.trendlinetooltext,
trendlineThickness:e.trendlinethickness,trendlineAlpha:e.trendlinealpha,showTrendlinesOnTop:e.showtrendlinesontop,showAxisLine:k?0:c(e.showxaxisline,e.showaxislines,e.drawAxisLines,0),axisLineThickness:c(e.xaxislinethickness,e.axislinethickness,1),axisLineAlpha:c(e.xaxislinealpha,e.axislinealpha,100),axisLineColor:d(e.xaxislinecolor,e.axislinecolor,"#000000")};a={outCanfontFamily:d(e.outcnvbasefont,e.basefont,"Verdana,sans"),outCanfontSize:la(e.outcnvbasefontsize,e.basefontsize,10),outCancolor:d(e.outcnvbasefontcolor,
e.basefontcolor,h.getColor(t.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:c(e.pyaxisnamepadding,e.yaxisnamepadding),axisValuePadding:c(e.pyaxisvaluespadding,e.yaxisvaluespadding),axisNameFont:d(e.pyaxisnamefont,e.yaxisnamefont),axisNameFontSize:c(e.pyaxisnamefontsize,e.yaxisnamefontsize),axisNameFontColor:d(e.pyaxisnamefontcolor,e.yaxisnamefontcolor),axisNameFontBold:c(e.pyaxisnamefontbold,e.yaxisnamefontbold),axisNameFontItalic:c(e.pyaxisnamefontitalic,e.yaxisnamefontitalic),
axisNameBgColor:d(e.pyaxisnamebgcolor,e.yaxisnamebgcolor),axisNameBorderColor:d(e.pyaxisnamebordercolor,e.yaxisnamebordercolor),axisNameAlpha:c(e.pyaxisnamealpha,e.yaxisnamealpha),axisNameFontAlpha:c(e.pyaxisnamefontalpha,e.yaxisnamefontalpha),axisNameBgAlpha:c(e.pyaxisnamebgalpha,e.yaxisnamebgalpha),axisNameBorderAlpha:c(e.pyaxisnameborderalpha,e.yaxisnameborderalpha),axisNameBorderPadding:c(e.pyaxisnameborderpadding,e.yaxisnameborderpadding),axisNameBorderRadius:c(e.pyaxisnameborderradius,e.yaxisnameborderradius),
axisNameBorderThickness:c(e.pyaxisnameborderthickness,e.yaxisnameborderthickness),axisNameBorderDashed:c(e.pyaxisnameborderdashed,e.yaxisnameborderdashed),axisNameBorderDashLen:c(e.pyaxisnameborderdashlen,e.yaxisnameborderdashlen),axisNameBorderDashGap:c(e.pyaxisnameborderdashgap,e.yaxisnameborderdashgap),axisNameWidth:c(e.pyaxisnamewidth,e.yaxisnamewidth),useEllipsesWhenOverflow:e.useellipseswhenoverflow,rotateAxisName:c(e.rotateyaxisname,1),axisName:d(e.pyaxisname,e.yaxisname),divLineColor:d(e.divlinecolor,
h.getColor(t.divLineColor)),divLineAlpha:d(e.divlinealpha,h.getColor("divLineAlpha")),divLineThickness:c(e.divlinethickness,1),divLineIsDashed:!!c(e.divlinedashed,e.divlineisdashed,0),divLineDashLen:c(e.divlinedashlen,4),divLineDashGap:c(e.divlinedashgap,2),showAlternateGridColor:c(e.showalternatehgridcolor,1),alternateGridColor:d(e.alternatehgridcolor,h.getColor("altHGridColor")),alternateGridAlpha:d(e.alternatehgridalpha,h.getColor("altHGridAlpha")),numDivLines:e.numdivlines,axisMinValue:D?c(e.syaxisminvalue,
e.pyaxisminvalue,e.yaxisminvalue):c(e.pyaxisminvalue,e.yaxisminvalue),axisMaxValue:D?c(e.syaxismaxvalue,e.pyaxismaxvalue,e.yaxismaxvalue):c(e.pyaxismaxvalue,e.yaxismaxvalue),setAdaptiveMin:e.setadaptiveymin,adjustDiv:e.adjustdiv,labelStep:e.yaxisvaluesstep,showAxisValues:c(e.showyaxisvalues,e.showyaxisvalue),showLimits:c(e.showyaxislimits,e.showlimits,this.showLimits),showDivLineValues:c(e.showdivlinevalues,e.showdivlinevalue),zeroPlaneColor:e.zeroplanecolor,zeroPlaneThickness:c(e.zeroplanethickness,
e.divlinethickness,a.zeroplanethickness,2),zeroPlaneAlpha:c(e.zeroplanealpha,e.divlinealpha,a.zeroplanealpha),showZeroPlaneValue:e.showzeroplanevalue,showZeroPlaneOnTop:a.showzeroplaneontop,trendlineColor:e.trendlinecolor,trendlineToolText:e.trendlinetooltext,trendlineThickness:e.trendlinethickness,trendlineAlpha:e.trendlinealpha,showTrendlinesOnTop:e.showtrendlinesontop,showAxisLine:k?0:c(e.showyaxisline,e.showaxislines,e.drawAxisLines,0),axisLineThickness:c(e.yaxislinethickness,e.axislinethickness,
1),axisLineAlpha:c(e.yaxislinealpha,e.axislinealpha,100),axisLineColor:d(e.yaxislinecolor,e.axislinecolor,"#000000")};h={outCanfontFamily:d(e.outcnvbasefont,e.basefont,"Verdana,sans"),outCanfontSize:la(e.outcnvbasefontsize,e.basefontsize,10),outCancolor:d(e.outcnvbasefontcolor,e.basefontcolor,h.getColor(t.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:e.yaxisnamepadding,axisValuePadding:e.yaxisvaluespadding,axisNameFont:e.syaxisnamefont,axisNameFontSize:e.syaxisnamefontsize,axisNameFontColor:e.syaxisnamefontcolor,
axisNameFontBold:e.syaxisnamefontbold,axisNameFontItalic:e.syaxisnamefontitalic,axisNameBgColor:e.syaxisnamebgcolor,axisNameBorderColor:e.syaxisnamebordercolor,axisNameAlpha:e.syaxisnamealpha,axisNameFontAlpha:e.syaxisnamefontalpha,axisNameBgAlpha:e.syaxisnamebgalpha,axisNameBorderAlpha:e.syaxisnameborderalpha,axisNameBorderPadding:e.syaxisnameborderpadding,axisNameBorderRadius:e.syaxisnameborderradius,axisNameBorderThickness:e.syaxisnameborderthickness,axisNameBorderDashed:e.syaxisnameborderdashed,
axisNameBorderDashLen:e.syaxisnameborderdashlen,axisNameBorderDashGap:e.syaxisnameborderdashgap,axisNameWidth:e.syaxisnamewidth,useEllipsesWhenOverflow:e.useellipseswhenoverflow,rotateAxisName:c(e.rotateyaxisname,1),axisName:e.syaxisname,divLineColor:d(e.divlinecolor,h.getColor(t.divLineColor)),divLineAlpha:d(e.divlinealpha,h.getColor("divLineAlpha")),divLineThickness:c(e.divlinethickness,1),divLineIsDashed:!!c(e.divlinedashed,e.divlineisdashed,0),divLineDashLen:c(e.divlinedashlen,4),divLineDashGap:c(e.divlinedashgap,
2),showAlternateGridColor:c(e.showalternatehgridcolor,1),alternateGridColor:d(e.alternatehgridcolor,h.getColor("altHGridColor")),alternateGridAlpha:d(e.alternatehgridalpha,h.getColor("altHGridAlpha")),numDivLines:e.numdivlines,axisMinValue:D?c(e.syaxisminvalue,e.pyaxisminvalue,e.yaxisminvalue):e.syaxisminvalue,axisMaxValue:D?c(e.syaxismaxvalue,e.pyaxismaxvalue,e.yaxismaxvalue):e.syaxismaxvalue,setAdaptiveMin:e.setadaptivesymin||e.setadaptiveymin,adjustDiv:e.adjustdiv,labelStep:e.yaxisvaluesstep,showAxisValues:c(e.showsyaxisvalues,
e.showsyaxisvalue,e.showyaxisvalues,e.showyaxisvalue),showLimits:c(e.showsecondarylimits,e.showyaxislimits,e.showlimits),showDivLineValues:c(e.showdivlinesecondaryvalue,e.showyaxisvalues,e.showyaxisvalue,1),zeroPlaneColor:e.zeroplanecolor,zeroPlaneThickness:c(e.zeroplanethickness,e.divlinethickness,2),zeroPlaneAlpha:e.zeroplanealpha,showZeroPlaneValue:e.showzeroplanevalue,trendlineColor:e.trendlinecolor,trendlineToolText:e.trendlinetooltext,trendlineThickness:e.trendlinethickness,trendlineAlpha:e.trendlinealpha,
showTrendlinesOnTop:e.showtrendlinesontop,showAxisLine:k?0:c(e.showsyaxisline,e.showaxislines,e.drawAxisLines,0),axisLineThickness:c(e.syaxislinethickness,e.axislinethickness,1),axisLineAlpha:c(e.syaxislinealpha,e.axislinealpha,100),axisLineColor:d(e.syaxislinecolor,e.axislinecolor,"#000000")};g.vtrendlines=f.vtrendlines;D=0;for(t=z.length;D<t;D++)for(f=z[D]&&z[D].line||[],k=f.length,w=0;w<k;w++)e=f[w]||{},e.parentyaxis&&e.parentyaxis.toLowerCase(),"s"===e.parentyaxis?l[0].line.push(e):p[0].line.push(e);
a.trendlines=p;h.trendlines=l;p=b.yAxis[0];l=b.yAxis[1];b=b.xAxis[0];1===m?(p.setCommonConfigArr(a,!0,!1,!1),l.setCommonConfigArr(h,!0,!1,!0)):(p.setCommonConfigArr(a,!0,!1,!0),l.setCommonConfigArr(h,!0,!1,!1));b.setCommonConfigArr(g,!1,!1,!1);p.configure();l.configure();b.configure();l.setAxisConfig({isActive:!1,isPercent:this.isPercentage,axisIndex:1,uniqueClassName:1})},_setAxisLimits:function(){var a=this.components,d=a.dataset,b=a.yAxis,a=a.xAxis,h,e=d.length,f,g=-Infinity,l=Infinity,k=-Infinity,
t=Infinity,p=Infinity,m=-Infinity,D,w,z;D=c(this.jsonData.chart.syncaxislimits,0);var G={};w=function(a){return-Infinity===a||Infinity===a?null:a};var r=function(a){n?(k=Y(k,a.sYMax||a.max),t=oa(t,a.sYMin||a.min)):(g=Y(g,a.max),l=oa(l,a.min));m=Y(m,a.xMax||-Infinity);p=oa(p,a.xMin||Infinity)},n=0;for(f=0;f<e;f++)h=d[f],z=h.groupManager,n=h.config.parentYAxis,z?(G[h.type]=z,G[h.type].yAxisIndex=n):(h=h.getDataLimits(),r(h));for(z in G)n=G[z].yAxisIndex,h=G[z].getDataLimits(),g=Y(g,h.max),l=oa(l,h.min),
k=Y(k,h.sYMax),t=oa(t,h.sYMin);d=this._getTrendLineMinMax("h");z=this._getTrendLineMinMax("h","s");g=Y(g,d.max);l=oa(l,d.min);k=Y(k,z.max);t=oa(t,z.min);D?(D=Y(g,k),w=oa(l,t),b[0].setDataLimit(D,w),b[1].setDataLimit(D,w)):(g=w(g),l=w(l),k=w(k),t=w(t),b[0].setDataLimit(g,l),b[1].setDataLimit(k,t));b[0].getDivLineCount();if(-Infinity!==m||Infinity!==p)a[0].config.xaxisrange={max:m,min:p},a[0].setDataLimit(m,p)},_postSpaceManagement:function(){var a=this.config,c=this.components,d=c.yAxis,b=c.xAxis&&
c.xAxis[0],h=d[0],d=d[1],e=c.legend,f=a.xDepth,g=c.canvas.config,l=g.canvasBorderWidth,k=g.canvasPadding,t=g.canvasPaddingLeft,p=g.canvasPaddingRight,c=g.canvasPaddingTop,m=a.primaryAxisOnleft,g=g.canvasPaddingBottom;b&&b.setAxisDimention({x:a.canvasLeft+(f||0)+Y(t,k),y:a.canvasBottom+(a.shift||0)+l,opposite:a.canvasTop-l,axisLength:a.canvasWidth-(f||0)-Y(t,k)-Y(p,k)});m?(a.yAxisStartXPos=a.canvasLeft-l,a.sYAxisStartXPos=a.canvasRight+l):(a.yAxisStartXPos=a.canvasRight+l,a.sYAxisStartXPos=a.canvasLeft-
l);l=a.yAxisStartXPos;k=a.sYAxisStartXPos;h&&h.setAxisDimention({x:l,y:a.canvasTop+c,opposite:k,axisLength:a.canvasHeight-c-g});d&&d.setAxisDimention({x:k,y:a.canvasTop+c,opposite:l,axisLength:a.canvasHeight-c-g});b&&b.shiftLabels(-f,0);e.postSpaceManager();this.config.realtimeEnabled&&this._setRealTimeCategories&&this._setRealTimeCategories();this._adjustCanvasPadding()}},ta.mscartesian);ta("mscartesian3d",{standaloneInit:!1,is3d:!0,_createDatasets:function(){var a=this.components,c=a.xAxis[0],b=
this.jsonData,h=b.dataset,e=h&&h.length,f,g,l,k=this.defaultDatasetType,t=this.applicableDSList,p=this.components.legend,m,D,w,z,n=this.config.isstacked,r,B,K=[],q=this.isRealTime,u=this.config.catLen,R={};h||this.setChartMessage();this.config.categories=b.categories&&b.categories[0].category;f=a.dataset||(a.dataset=[]);g=f.length;for(b=0;b<e;b++)if(z=h[b],z.seriesname&&(z.seriesname=G(z.seriesname)),l=z.parentyaxis||F,D=(D=this.isDual&&"s"===l.toLowerCase()?d(z.renderas,this.sDefaultDatasetType):
d(z.renderas,k))&&D.toLowerCase(),t[D]||(D=k),w=Q.get("component",["dataset",D]))void 0===R[D]?R[D]=0:R[D]++,r="datasetGroup_"+D,l=Q.register("component",["datasetGroup",D]),(m=a[r])&&K.push(m),l&&!m&&(m=a[r]=new l,m.chart=this,m.init()),(l=f[b])?(D=c.getCategoryLen(),r=u-D,w=q?l.components:l.JSONData,B=w.data&&w.data.length||0,w=z.data&&z.data.length||0,B-=w,r>B||(r=B,D=w),0<r&&l.removeData(D,r,!1),f[b].JSONData=z,f[b].configure(),f[b]._deleteGridImages&&f[b]._deleteGridImages()):(l=new w,f.push(l),
l.chart=this,l.index=b,m&&(n?m.addDataSet(l,0,R[D]):m.addDataSet(l,R[D],0)),l.init(z));if(g>e){r=g-e;m&&n&&m.removeDataSet(0,b,r);a=b;for(e=r+b;a<e;a++)m&&!n&&m.removeDataSet(b,0,1),f[a].visible=!1,f[a].draw(),p.removeItem(f[a].legendItemId);f.splice(b,r)}this.config.catLen=c.getCategoryLen()},_drawCanvas:function(){var a=this.config,b=a.canvasLeft,h=a.canvasTop,e=a.canvasWidth,f=a.canvasHeight,g=this.jsonData.chart,l=this.components,k=l.canvas,t=l.colorManager,l=l.paper,p=k.graphics,m=p.canvasBorderElement,
D=p.canvasElement,w=k.config,z=w.clip={},k=this.graphics.canvasGroup,G=p.canvasBg,r=p.canvas3DBase,B=this.get(M,U),F=B.animType,K=B.animObj,q=B.dummyObj,B=B.duration,u=p.canvas3dbaseline,R=w.canvasBgColor,L=w.showCanvasBG=!!c(g.showcanvasbg,1),P=a.canvasBgDepth,aa=a.showCanvasBase,v=a.canvasBaseDepth,Z=w.canvasBaseColor3D=d(g.canvasbasecolor,t.getColor("canvasBaseColor3D")),E=w.use3DLighting=c(g.use3dlighting,1),R=Ta.chart3D,S=w.canvasBorderRadius=c(g.plotborderradius,0),V=w.canvasBorderColor=pa(d(g.canvasbordercolor,
t.getColor("canvasBorderColor"))),T=w.canBGAlpha=d(g.canvasbgalpha,t.getColor("canvasBgAlpha")),X=w.canBGColor=d(g.canvasbgcolor,t.getColor(R.canvasBgColor)),C=a.xDepth,g=a.yDepth,t=a.canvasBasePadding||2,R=E?w.canvasBgColor={FCcolor:{color:Ca(X,85)+Ka+Ha(X,55),alpha:T+Ka+T,ratio:ab,angle:Xa(a.width-(a.marginLeft+a.marginRight),a.height-(a.marginTop+a.marginBottom),1)}}:w.canvasBgColor=pa(X,T);X.split(Ka);T.split(Ka);C=w.xDepth=10;g=w.yDepth=10;a={x:b-0,y:h-0,width:e+0,height:f+0,r:S,"stroke-width":0,
stroke:V,"stroke-linejoin":n};m?(m.animateWith(q,K,{x:b-0,y:h-0,width:e+0,height:f+0,r:S},B,F),m.attr({"stroke-width":0,stroke:V,"stroke-linejoin":n})):p.canvasBorderElement=l.rect(a,k);z["clip-canvas"]=[Y(0,b-C),Y(0,h),Y(1,e+C),Y(1,f+g)];z["clip-canvas-init"]=[Y(0,b-C),Y(0,h-g),1,Y(1,f+2*g)];a={x:b,y:h,width:e,height:f,r:S,"stroke-width":0,stroke:"none",fill:na(R)};L?(D?(D.show(),D.animateWith(q,K,{x:b,y:h,width:e,height:f,r:S},B,F),D.attr({"stroke-width":0,stroke:"none",fill:na(R)})):p.canvasElement=
l.rect(a,k),a=["M",b+e,",",h,"L",b+e+P,",",h+1.2*P,",",b+e+P,",",h+f-P,",",b+e,",",h+f,"Z"],G?(G.show(),G.animateWith(q,K,{path:a},B,F),G.attr({path:a})):G=p.canvasBg=l.path(a,k),G.attr({"stroke-width":0,stroke:"none",fill:na(R)})):(D&&D.hide(),G&&G.hide());aa?(a=b-C-t,m=h+f+g+t,D=C+t,G=g+t,r?(r.show(),r._.cubeside.show(),r._.cubetop.show(),r.animateWith(q,K,{cubepath:[a,m,e,v,D,G]},B,F),r.attr({cubepath:[a,m,e,v,D,G]})):r=p.canvas3DBase=l.cubepath(a,m,e,v,D,G,k),r.attr({stroke:"none","stroke-width":0,
fill:[Z.replace(sa,wa),!E]}),u?(u.show(),u.animateWith(q,K,{path:["M",b,h+f,"H",e+b]},B,F)):u=p.canvas3dbaseline=l.path(void 0,k),u.attr({path:["M",b,h+f,"H",e+b],stroke:J.tintshade(Z.replace(sa,wa),.05).rgba})):(r&&(r.hide(),r._.cubeside.hide(),r._.cubetop.hide()),u&&u.hide())}},ta.mscartesian,{showplotborder:0});ta("msdybasecartesian3d",{standaloneInit:!1,is3d:!0,_drawCanvas:ta.mscartesian3d},ta.msdybasecartesian);ta("sscartesian3d",{standaloneInit:!1,hasLegend:!1,is3d:!0,_drawCanvas:ta.mscartesian3d},
ta.sscartesian,{showplotborder:0});ta("msbarcartesian",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=Q.get("component",["axis","cartesian"]),d;a.yAxis=[];a.xAxis=[];a.yAxis[0]=d=new c;a.xAxis[0]=a=new c;d.chart=this;a.chart=this;d.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.config,b=this.components,h=b.colorManager,e=this.jsonData,f=e.chart,g,l=this.is3d,k=l?Ta.chart3D:Ta.chart2D;g={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),
outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.xaxisnamepadding,maxLabelWidthPercent:f.maxlabelwidthpercent,minLabelWidthPercent:f.minlabelwidthpercent,axisValuePadding:f.labelpadding,axisNameFont:f.xaxisnamefont,axisNameFontSize:f.xaxisnamefontsize,axisNameFontColor:f.xaxisnamefontcolor,axisNameFontBold:f.xaxisnamefontbold,axisNameFontItalic:f.xaxisnamefontitalic,
axisNameBgColor:f.xaxisnamebgcolor,axisNameBorderColor:f.xaxisnamebordercolor,axisNameAlpha:f.xaxisnamealpha,axisNameFontAlpha:f.xaxisnamefontalpha,axisNameBgAlpha:f.xaxisnamebgalpha,axisNameBorderAlpha:f.xaxisnameborderalpha,axisNameBorderPadding:f.xaxisnameborderpadding,axisNameBorderRadius:f.xaxisnameborderradius,axisNameBorderThickness:f.xaxisnameborderthickness,axisNameBorderDashed:f.xaxisnameborderdashed,axisNameBorderDashLen:f.xaxisnameborderdashlen,axisNameBorderDashGap:f.xaxisnameborderdashgap,
axisNameWidth:f.xaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,divLineColor:d(f.vdivlinecolor,f.divlinecolor,h.getColor(k.divLineColor)),divLineAlpha:d(f.vdivlinealpha,f.divlinealpha,l?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(f.vdivlinethickness,f.divlinethickness,1),divLineIsDashed:!!c(f.vdivlinedashed,f.vdivlineisdashed,f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.vdivlinedashlen,f.divlinedashlen,4),divLineDashGap:c(f.vdivlinedashgap,
f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatehgridcolor,1),alternateGridColor:d(f.alternatehgridcolor,h.getColor("altHGridColor")),alternateGridAlpha:d(f.alternatehgridalpha,h.getColor("altHGridAlpha")),numDivLines:f.numvdivlines,labelFont:f.labelfont,labelFontSize:f.labelfontsize,labelFontColor:f.labelfontcolor,labelFontAlpha:f.labelalpha,labelFontBold:f.labelfontbold,labelFontItalic:f.labelfontitalic,axisName:f.xaxisname,axisMinValue:f.xaxisminvalue,axisMaxValue:f.xaxismaxvalue,setAdaptiveMin:f.setadaptivexmin,
adjustDiv:f.adjustvdiv,labelDisplay:f.labeldisplay,showLabels:f.showlabels,rotateLabels:f.rotatelabels,slantLabel:c(f.slantlabels,f.slantlabel),labelStep:c(f.labelstep,f.xaxisvaluesstep),showAxisValues:c(f.showxaxisvalues,f.showxaxisvalue),showLimits:f.showvlimits,showDivLineValues:c(f.showvdivlinevalues,f.showvdivlinevalues),zeroPlaneColor:f.vzeroplanecolor,zeroPlaneThickness:c(f.vzeroplanethickness,f.vdivlinethickness,2),zeroPlaneAlpha:c(f.vzeroplanealpha,f.vdivlinealpha,a.zeroplanealpha),showZeroPlaneValue:f.showvzeroplanevalue,
trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,rotateAxisName:c(f.rotatexaxisname,1),trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:l?0:c(f.showxaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.xaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.xaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.xaxislinecolor,f.axislinecolor,"#000000")};a={outCanfontFamily:d(f.outcnvbasefont,
f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,h.getColor(k.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.yaxisnamepadding,axisValuePadding:f.yaxisvaluespadding,axisNameFont:f.yaxisnamefont,axisNameFontSize:f.yaxisnamefontsize,axisNameFontColor:f.yaxisnamefontcolor,axisNameFontBold:f.yaxisnamefontbold,axisNameFontItalic:f.yaxisnamefontitalic,axisNameBgColor:f.yaxisnamebgcolor,axisNameBorderColor:f.yaxisnamebordercolor,
axisNameAlpha:f.yaxisnamealpha,axisNameFontAlpha:f.yaxisnamefontalpha,axisNameBgAlpha:f.yaxisnamebgalpha,axisNameBorderAlpha:f.yaxisnameborderalpha,axisNameBorderPadding:f.yaxisnameborderpadding,axisNameBorderRadius:f.yaxisnameborderradius,axisNameBorderThickness:f.yaxisnameborderthickness,axisNameBorderDashed:f.yaxisnameborderdashed,axisNameBorderDashLen:f.yaxisnameborderdashlen,axisNameBorderDashGap:f.yaxisnameborderdashgap,axisNameWidth:f.yaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,
axisName:f.yaxisname,divLineColor:d(f.divlinecolor,h.getColor(k.divLineColor)),divLineAlpha:d(f.divlinealpha,l?h.getColor("divLineAlpha3D"):h.getColor("divLineAlpha")),divLineThickness:c(f.divlinethickness,1),divLineIsDashed:!!c(f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.divlinedashlen,4),divLineDashGap:c(f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatevgridcolor,1),alternateGridColor:d(f.alternatevgridcolor,h.getColor("altVGridColor")),alternateGridAlpha:d(f.alternatevgridalpha,
h.getColor("altVGridAlpha")),numDivLines:f.numdivlines,axisMinValue:f.yaxisminvalue,axisMaxValue:f.yaxismaxvalue,setAdaptiveMin:f.setadaptiveymin,adjustDiv:f.adjustdiv,labelStep:f.yaxisvaluesstep,showAxisValues:c(f.showyaxisvalues,f.showyaxisvalue),showLimits:c(f.showyaxislimits,f.showlimits,this.showLimits),showDivLineValues:c(f.showdivlinevalues,f.showdivlinevalue),zeroPlaneColor:f.zeroplanecolor,zeroPlaneThickness:c(f.zeroplanethickness,f.divlinethickness,2),zeroPlaneAlpha:c(f.zeroplanealpha,f.divlinealpha,
a.zeroplanealpha),showZeroPlaneValue:f.showzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,isTrendZone:0,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:l?0:c(f.showyaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.yaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.yaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.yaxislinecolor,f.axislinecolor,"#000000"),
numberFormatterFn:"yAxis"};a.vtrendlines=e.trendlines;g.trendlines=e.vtrendlines;e=b.yAxis[0];b=b.xAxis[0];e.setCommonConfigArr(a,!1,!1,!1);b.setCommonConfigArr(g,!0,!0,!1);e.configure();b.configure()},_spaceManager:function(){var a,c,d=this.config,b=this.components,h=b.yAxis&&b.yAxis[0],f=b.xAxis&&b.xAxis||[];c=b.legend.config.legendPos;var e=d.xDepth,g=d.yDepth,l=d.canvasBgDepth,k=d.canvasBaseDepth,t=d.canvasBasePadding,p=b.canvas.config.canvasBorderWidth,m=d.realTimeConfig&&d.realTimeConfig.showRTValue,
D=d.borderWidth,w=d.canvasMarginTop,z=d.canvasMarginBottom,G=d.canvasMarginLeft,r=d.canvasMarginRight,b=d.minCanvasHeight,n=d.minCanvasWidth,B=d.minChartWidth,F=d.minChartHeight,K=d.height,q=d.width,u=!1,R=!1,L,P=d.origCanvasTopMargin,aa=d.origCanvasBottomMargin,v=d.origCanvasLeftMargin,Z=d.origCanvasRightMargin,E,S,V;d.canvasWidth-2*D<B&&(E=(d.canvasWidth-B)/2);d.canvasHeight-2*D<F&&(a=(d.canvasHeight-F)/2);this._allocateSpace({top:a||D,bottom:a||D,left:E||D,right:E||D});f=f[0];a=.7*d.availableWidth;
d.yAxisSpaceAllocation=a=f&&f.placeAxis(a);f&&this._allocateSpace(a);f=.225*d.availableHeight;f=this._manageActionBarSpace&&this._manageActionBarSpace(f)||{};this._allocateSpace(f);this._manageLegendSpace();c=c===T?.6*d.availableHeight:.6*d.availableWidth;g&&(this._allocateSpace({left:g}),d.shift=e+t+k);l&&this._allocateSpace({top:l});d.canvasWidth-2*p<n&&(V=(d.canvasWidth-n)/2);this._allocateSpace({left:V||p,right:V||p});n>q-G-r&&(R=!0,g=d.canvasWidth-n,e=G+r,G=d.canvasMarginLeft=g*G/e,r=d.canvasMarginRight=
g*r/e);G=G>d.canvasLeft?G-d.canvasLeft:0;r=r>q-d.canvasRight?r+d.canvasRight-q:0;this._allocateSpace({left:G,right:r});this._allocateSpace({left:k});R&&(e=v+Z,k=d.canvasWidth,k>n&&(g=k-n,G=g*v/e,r=g*Z/e),this._allocateSpace({left:G,right:r}));d.actualCanvasMarginRight=r;d.actualCanvasMarginBottom=L;this._manageChartMenuBar(c);c=.2*d.availableHeight;this._allocateSpace(this._getSumValueSpace(c));c=.3*d.availableHeight;d.realtimeEnabled&&(m?this._allocateSpace(this._realTimeValuePositioning(c)):this._hideRealTimeValue());
c=.6*d.availableHeight;d.xAxisSpaceAllocation=L=h&&h.placeAxis(c);h&&this._allocateSpace(L);c=.3*d.availableHeight;this._manageScrollerPosition&&this._manageScrollerPosition(c);d.canvasHeight-2*p<b&&(S=(d.canvasHeight-b)/2);this._allocateSpace({top:S||p,bottom:S||p});b>K-w-z&&(u=!0,g=d.canvasHeight-b,e=w+z,w=d.canvasMarginTop=g*w/e,z=d.canvasMarginBottom=g*z/e);h=w>d.canvasTop?w-d.canvasTop:0;L=z>K-d.canvasBottom?z+d.canvasBottom-K:0;this._allocateSpace({top:h,bottom:L});u&&(e=P+aa,z=d.canvasHeight,
z>b&&(g=z-b,h=g*P/e,L=g*aa/e),this._allocateSpace({top:h,bottom:L}));d.actualCanvasMarginTop=h;d.actualCanvasMarginLeft=G},_postSpaceManagement:function(){var a=this.config,c=this.components,d=c.xAxis&&c.xAxis[0],b=c.yAxis&&c.yAxis[0],h=c.legend,f=a.xDepth,e=c.canvas.config,c=e.canvasBorderWidth,g=e.canvasPadding,l,k,t;b&&this._allocateXAxisLabelSpace(b);l=e.canvasPaddingLeft;k=e.canvasPaddingRight;t=e.canvasPaddingTop;e=e.canvasPaddingBottom;b&&b.setAxisDimention({x:a.canvasLeft+l,y:a.canvasBottom+
c,opposite:a.canvasTop-c,axisLength:a.canvasWidth-l-k});d&&d.setAxisDimention({x:a.canvasLeft-(a.shift||0)-c,y:a.canvasTop+(f||0)+Y(t,g),opposite:a.canvasRight+c,axisLength:a.canvasHeight-(f||0)-Y(t,g)-Y(e,g)});h.postSpaceManager()}},ta.mscartesian,{maxbarheight:50});ta("ssbarcartesian",{standaloneInit:!1,_createAxes:ta.msbarcartesian,_feedAxesRawData:ta.msbarcartesian,_spaceManager:ta.msbarcartesian,_postSpaceManagement:ta.msbarcartesian,_allocateXAxisLabelSpace:ta.msbarcartesian},ta.sscartesian);
ta("msbarcartesian3d",{standaloneInit:!1,_createDatasets:ta.mscartesian3d,is3d:!0,_drawCanvas:function(){var a=this.config,b=a.canvasLeft,h=a.canvasTop,f=a.canvasWidth,e=a.canvasHeight,g=this.jsonData.chart,l=this.components,k=l.canvas,t=l.colorManager,l=l.paper,p=k.graphics,D=p.canvasBorderElement,w=p.canvasElement,z=k.config,G=z.clip={},k=this.graphics.canvasGroup,r=p.canvasBg,B=p.canvas3DBase,F=this.get(M,U),K=F.animType,q=F.animObj,u=F.dummyObj,F=F.duration,R=p.canvas3dbaseline,L=z.canvasBgColor,
P=z.showCanvasBG=!!c(g.showcanvasbg,1),aa=a.canvasBgDepth,v=a.showCanvasBase,Z=a.canvasBaseDepth,E=z.canvasBaseColor3D=d(g.canvasbasecolor,t.getColor("canvasBaseColor3D")),S=z.use3DLighting=c(g.use3dlighting,1),L=Ta.chart3D,V=z.canvasBorderRadius=c(g.plotborderradius,0),T=z.canvasBorderWidth=0,X=.5*T,C=z.canvasBorderColor=pa(d(g.canvasbordercolor,t.getColor("canvasBorderColor"))),A=z.canBGAlpha=d(g.canvasbgalpha,t.getColor("canvasBgAlpha")),H=z.canBGColor=d(g.canvasbgcolor,t.getColor(L.canvasBgColor)),
t=z.xDepth,g=z.yDepth,L=S?z.canvasBgColor={FCcolor:{color:Ca(H,85)+Ka+Ha(H,55),alpha:A+Ka+A,ratio:ab,angle:Xa(a.width-(a.marginLeft+a.marginRight),a.height-(a.marginTop+a.marginBottom),1)}}:z.canvasBgColor=pa(H,A);H.split(Ka);A.split(Ka);t=z.xDepth=5;g=z.yDepth=5;a={x:b-X,y:h-X,width:f+T,height:e+T,r:V,"stroke-width":T,stroke:C,"stroke-linejoin":2<T?m:n};D?(D.animateWith(u,q,{x:b-X,y:h-X,width:f+T,height:e+T,r:V},F,K),D.attr({"stroke-width":T,stroke:C,"stroke-linejoin":2<T?m:n})):p.canvasBorderElement=
l.rect(a,k);G["clip-canvas"]=[Y(0,b-t),Y(0,h),Y(1,f+t),Y(1,e+g)];G["clip-canvas-init"]=[Y(0,b-t),Y(0,h-g),1,Y(1,e+2*g)];a={x:b,y:h,width:f,height:e,r:V,"stroke-width":0,stroke:"none",fill:na(L)};P?(w?(w.show(),w.animateWith(u,q,{x:b,y:h,width:f,height:e,r:V},F,K),w.attr({"stroke-width":0,stroke:"none",fill:na(L)})):p.canvasElement=l.rect(a,k),f=["M",b,",",h,"L",b+1.2*aa,",",h-aa,",",b+f-aa,",",h-aa,",",b+f,",",h,"Z"],r?(r.show(),r.animateWith(u,q,{path:f},F,K),r.attr({path:f})):r=p.canvasBg=l.path(f,
k),r.attr({"stroke-width":0,stroke:"none",fill:na(L)})):(w&&w.hide(),r&&r.hide());v?(f=b-t-Z-1,a=h+g+1,D=t+1,w=g+1,B?(B.show(),B._.cubeside.show(),B._.cubetop.show(),B.animateWith(u,q,{cubepath:[f,a,Z,e,D,w]},F,K),B.attr({cubepath:[f,a,Z,e,D,w]})):B=p.canvas3DBase=l.cubepath(f,a,Z,e,D,w,k),B.attr({stroke:"none","stroke-width":0,fill:[E.replace(sa,wa),!S]}),R?(R.show(),R.animateWith(u,q,{path:["M",b,h,"V",e+h]},F,K)):R=p.canvas3dbaseline=l.path(void 0,k),R.attr({path:["M",b,h,"V",e+h],stroke:J.tintshade(E.replace(sa,
wa),.05).rgba})):(B&&(B.hide(),B._.cubeside.hide(),B._.cubetop.hide()),R&&R.hide())}},ta.msbarcartesian,{showplotborder:0});ta("ssbarcartesian3d",{standaloneInit:!1,_createAxes:ta.msbarcartesian,_feedAxesRawData:ta.msbarcartesian,_drawCanvas:ta.msbarcartesian3d,_spaceManager:ta.msbarcartesian,_postSpaceManagement:ta.msbarcartesian,_allocateXAxisLabelSpace:ta.msbarcartesian},ta.sscartesian3d);ta("mspolar",{standaloneInit:!1,hasCanvas:!1,_createAxes:function(){var a=this.components,c=Q.register("component",
["axis","polarcartesan"]),d=Q.register("component",["axis","polar"]);a.yAxis=[];a.xAxis=[];a.yAxis[0]=c=new c;a.xAxis[0]=a=new d;c.chart=this;a.chart=this;c.init();a.init();c.setAxisConfig({polarAxis:a});this._setCategories()},_feedAxesRawData:function(){var a=this.components,b=a.colorManager,h=this.jsonData,f=h.chart,e,g=(e=this.is3d)?Ta.chart3D:Ta.chart2D;e={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,
f.basefontcolor,b.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.xaxisnamepadding,axisValuePadding:f.labelpadding,axisNameFont:f.xaxisnamefont,axisNameFontSize:f.xaxisnamefontsize,axisNameFontColor:f.xaxisnamefontcolor,axisNameFontBold:f.xaxisnamefontbold,axisNameFontItalic:f.xaxisnamefontitalic,axisNameBgColor:f.xaxisnamebgcolor,axisNameBorderColor:f.xaxisnamebordercolor,axisNameAlpha:f.xaxisnamealpha,axisNameFontAlpha:f.xaxisnamefontalpha,axisNameBgAlpha:f.xaxisnamebgalpha,
axisNameBorderAlpha:f.xaxisnameborderalpha,axisNameBorderPadding:f.xaxisnameborderpadding,axisNameBorderRadius:f.xaxisnameborderradius,axisNameBorderThickness:f.xaxisnameborderthickness,axisNameBorderDashed:f.xaxisnameborderdashed,axisNameBorderDashLen:f.xaxisnameborderdashlen,axisNameBorderDashGap:f.xaxisnameborderdashgap,useEllipsesWhenOverflow:f.useellipseswhenoverflow,divLineColor:d(f.vdivlinecolor,f.divlinecolor,b.getColor(g.divLineColor)),divLineAlpha:d(f.vdivlinealpha,f.divlinealpha,e?b.getColor("divLineAlpha3D"):
b.getColor("divLineAlpha")),divLineThickness:c(f.vdivlinethickness,f.divlinethickness,1),divLineIsDashed:!!c(f.vdivlinedashed,f.vdivlineisdashed,f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.vdivlinedashlen,f.divlinedashlen,4),divLineDashGap:c(f.vdivlinedashgap,f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatevgridcolor,1),alternateGridColor:d(f.alternatevgridcolor,b.getColor("altVGridColor")),alternateGridAlpha:d(f.alternatevgridalpha,b.getColor("altVGridAlpha")),numDivLines:f.numvdivlines,
labelFont:f.labelfont,labelFontSize:f.labelfontsize,labelFontColor:f.labelfontcolor,labelFontAlpha:f.labelalpha,labelFontBold:f.labelfontbold,labelFontItalic:f.labelfontitalic,axisName:f.yaxisname,axisMinValue:f.xaxisminvalue,axisMaxValue:f.xaxismaxvalue,setAdaptiveMin:f.setadaptivexmin,adjustDiv:f.adjustvdiv,labelDisplay:f.labeldisplay,showLabels:f.showlabels,rotateLabels:f.rotatelabels,slantLabel:c(f.slantlabels,f.slantlabel),labelStep:c(f.labelstep,f.xaxisvaluesstep),showAxisValues:c(f.showxaxisvalues,
f.showxaxisvalue),showLimits:f.showvlimits,showDivLineValues:c(f.showvdivlinevalues,f.showvdivlinevalues),zeroPlaneColor:f.vzeroplanecolor,zeroPlaneThickness:f.vzeroplanethickness,zeroPlaneAlpha:f.vzeroplanealpha,showZeroPlaneValue:f.showvzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showxaxisline,f.showaxislines,f.drawAxisLines,
0),axisLineThickness:c(f.xaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.xaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.xaxislinecolor,f.axislinecolor,"#000000"),showRadarBorder:f.showradarborder,radarBorderColor:f.radarbordercolor,radarBorderThickness:f.radarborderthickness,radarBorderAlpha:f.radarborderalpha,radarFillColor:f.radarfillcolor,radarFillAlpha:f.radarfillalpha,radarSpikeColor:f.radarspikecolor,radarSpikeThickness:f.radarspikethickness,radarSpikeAlpha:f.radarspikealpha,
radarInLineAlpha:f.radarinlinealpha};b={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,b.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.yaxisnamepadding,axisValuePadding:f.yaxisvaluespadding,axisNameFont:f.yaxisnamefont,axisNameFontSize:f.yaxisnamefontsize,axisNameFontColor:f.yaxisnamefontcolor,axisNameFontBold:f.yaxisnamefontbold,axisNameFontItalic:f.yaxisnamefontitalic,
axisNameBgColor:f.yaxisnamebgcolor,axisNameBorderColor:f.yaxisnamebordercolor,axisNameAlpha:f.yaxisnamealpha,axisNameFontAlpha:f.yaxisnamefontalpha,axisNameBgAlpha:f.yaxisnamebgalpha,axisNameBorderAlpha:f.yaxisnameborderalpha,axisNameBorderPadding:f.yaxisnameborderpadding,axisNameBorderRadius:f.yaxisnameborderradius,axisNameBorderThickness:f.yaxisnameborderthickness,axisNameBorderDashed:f.yaxisnameborderdashed,axisNameBorderDashLen:f.yaxisnameborderdashlen,axisNameBorderDashGap:f.yaxisnameborderdashgap,
axisNameWidth:f.yaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,rotateAxisName:c(f.rotateyaxisname,1),axisName:f.xaxisname,divLineColor:d(f.divlinecolor,b.getColor(g.divLineColor)),divLineAlpha:d(f.divlinealpha,b.getColor("divLineAlpha")),divLineThickness:c(f.divlinethickness,1),divLineIsDashed:!!c(f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.divlinedashlen,4),divLineDashGap:c(f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatehgridcolor,1),alternateGridColor:d(f.alternatehgridcolor,
b.getColor("altHGridColor")),alternateGridAlpha:d(f.alternatehgridalpha,b.getColor("altHGridAlpha")),numDivLines:f.numdivlines,axisMinValue:f.yaxisminvalue,axisMaxValue:f.yaxismaxvalue,setAdaptiveMin:f.setadaptiveymin,adjustDiv:f.adjustdiv,labelStep:f.yaxisvaluesstep,showAxisValues:c(f.showyaxisvalues,f.showyaxisvalue),showLimits:c(f.showyaxislimits,f.showlimits,this.showLimits),showDivLineValues:c(f.showdivlinevalues,f.showdivlinevalue),zeroPlaneColor:f.zeroplanecolor,zeroPlaneThickness:c(f.zeroplanethickness,
f.divlinethickness,2),zeroPlaneAlpha:f.zeroplanealpha,showZeroPlaneValue:f.showzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showyaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.yaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.yaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.yaxislinecolor,f.axislinecolor,
"#000000")};e.vtrendlines=h.trendlines;b.trendlines=h.vtrendlines;h=a.yAxis[0];a=a.xAxis[0];h.setCommonConfigArr(b,!0,!1,!1);a.setCommonConfigArr(e,!1,!1,!1);h.configure();a.configure()},_spaceManager:function(){var a,c,d=this.config;c=this.components;var b=d.radarborderthickness,h=d.legendPosition,f=c.xAxis&&c.xAxis[0],e=c.yAxis&&c.yAxis[0];a=this.hasLegend;c=c.legend;var g;g=h===T?.3*d.canvasHeight:.3*d.canvasWidth;!1!==a&&f&&this._allocateSpace(c._manageLegendPosition(g));c=.7*d.canvasHeight;a=
.7*d.canvasWidth;f&&this._allocateSpace(f.placeAxis(a,c));a=.7*d.canvasWidth;e&&e.placeAxis(a);a=.225*d.availableHeight;a=this._manageActionBarSpace&&this._manageActionBarSpace(a)||{};this._allocateSpace(a);a=0<d.radarradius?2*d.radarradius:oa(d.canvasHeight,d.canvasWidth);d.canvasHeight>a&&(c=za((d.canvasHeight-a)/2),this._allocateSpace({top:c,bottom:c}));d.canvasWidth>a&&(c=za((d.canvasWidth-a)/2),this._allocateSpace({left:c,right:c}));c=h===T?.6*d.availableHeight:.6*d.availableWidth;this._manageChartMenuBar(c);
e.setAxisDimention({x:d.canvasLeft+d.canvasWidth/2-b/2,y:d.canvasTop,axisLength:d.canvasHeight/2});f.setAxisConfig({centerX:d.canvasLeft+d.canvasWidth/2,centerY:d.canvasTop+d.canvasHeight/2,radius:oa(d.canvasWidth/2,d.canvasHeight/2)-b/2})}},ta.mscartesian);ta("mslog",{standaloneInit:!1,_createAxes:function(){var a=this.components,c=Q.register("component",["axis","cartesian"]),d=Q.register("component",["axis","log"]);a.yAxis=[];a.xAxis=[];a.yAxis[0]=d=new d;a.xAxis[0]=a=new c;d.chart=this;a.chart=
this;d.init();a.init();this._setCategories()},_feedAxesRawData:function(){var a=this.components,b=a.colorManager,h=this.jsonData,f=h.chart,e,g=(e=this.is3d)?Ta.chart3D:Ta.chart2D,l=1===c(f.invertyaxis,0)?!0:!1;e={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,b.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.xaxisnamepadding,axisValuePadding:f.labelpadding,
axisNameFont:f.xaxisnamefont,axisNameFontSize:f.xaxisnamefontsize,axisNameFontColor:f.xaxisnamefontcolor,axisNameFontBold:f.xaxisnamefontbold,axisNameFontItalic:f.xaxisnamefontitalic,axisNameBgColor:f.xaxisnamebgcolor,axisNameBorderColor:f.xaxisnamebordercolor,axisNameAlpha:f.xaxisnamealpha,axisNameFontAlpha:f.xaxisnamefontalpha,axisNameBgAlpha:f.xaxisnamebgalpha,axisNameBorderAlpha:f.xaxisnameborderalpha,axisNameBorderPadding:f.xaxisnameborderpadding,axisNameBorderRadius:f.xaxisnameborderradius,
axisNameBorderThickness:f.xaxisnameborderthickness,axisNameBorderDashed:f.xaxisnameborderdashed,axisNameBorderDashLen:f.xaxisnameborderdashlen,axisNameBorderDashGap:f.xaxisnameborderdashgap,useEllipsesWhenOverflow:f.useellipseswhenoverflow,divLineColor:d(f.vdivlinecolor,f.divlinecolor,b.getColor(g.divLineColor)),divLineAlpha:d(f.vdivlinealpha,f.divlinealpha,e?b.getColor("divLineAlpha3D"):b.getColor("divLineAlpha")),divLineThickness:c(f.vdivlinethickness,f.divlinethickness,1),divLineIsDashed:!!c(f.vdivlinedashed,
f.vdivlineisdashed,f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.vdivlinedashlen,f.divlinedashlen,4),divLineDashGap:c(f.vdivlinedashgap,f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatevgridcolor,0),alternateGridColor:d(f.alternatevgridcolor,b.getColor("altVGridColor")),alternateGridAlpha:d(f.alternatevgridalpha,b.getColor("altVGridAlpha")),numDivLines:f.numvdivlines,maxLabelHeight:f.maxlabelheight,labelFont:f.labelfont,labelFontSize:f.labelfontsize,labelFontColor:f.labelfontcolor,
labelFontAlpha:f.labelalpha,labelFontBold:f.labelfontbold,labelFontItalic:f.labelfontitalic,axisName:f.xaxisname,axisMinValue:f.xaxisminvalue,axisMaxValue:f.xaxismaxvalue,setAdaptiveMin:f.setadaptivexmin,adjustDiv:f.adjustvdiv,labelDisplay:f.labeldisplay,showLabels:f.showlabels,rotateLabels:f.rotatelabels,slantLabel:c(f.slantlabels,f.slantlabel),labelStep:c(f.labelstep,f.xaxisvaluesstep),showAxisValues:c(f.showxaxisvalues,f.showxaxisvalue),showLimits:f.showvlimits,showDivLineValues:c(f.showvdivlinevalues,
f.showvdivlinevalues),showZeroPlane:f.showvzeroplane,zeroPlaneColor:f.vzeroplanecolor,zeroPlaneThickness:f.vzeroplanethickness,zeroPlaneAlpha:f.vzeroplanealpha,showZeroPlaneValue:f.showvzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showxaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.xaxislinethickness,f.axislinethickness,
1),axisLineAlpha:c(f.xaxislinealpha,f.axislinealpha,100),axisLineColor:d(f.xaxislinecolor,f.axislinecolor,"#000000")};b={outCanfontFamily:d(f.outcnvbasefont,f.basefont,"Verdana,sans"),outCanfontSize:la(f.outcnvbasefontsize,f.basefontsize,10),outCancolor:d(f.outcnvbasefontcolor,f.basefontcolor,b.getColor(g.baseFontColor)).replace(/^#? ([a-f0-9]+)/ig,"#$1"),axisNamePadding:f.yaxisnamepadding,axisValuePadding:f.yaxisvaluespadding,axisNameFont:f.yaxisnamefont,axisNameFontSize:f.yaxisnamefontsize,axisNameFontColor:f.yaxisnamefontcolor,
axisNameFontBold:f.yaxisnamefontbold,axisNameFontItalic:f.yaxisnamefontitalic,axisNameBgColor:f.yaxisnamebgcolor,axisNameBorderColor:f.yaxisnamebordercolor,axisNameAlpha:f.yaxisnamealpha,axisNameFontAlpha:f.yaxisnamefontalpha,axisNameBgAlpha:f.yaxisnamebgalpha,axisNameBorderAlpha:f.yaxisnameborderalpha,axisNameBorderPadding:f.yaxisnameborderpadding,axisNameBorderRadius:f.yaxisnameborderradius,axisNameBorderThickness:f.yaxisnameborderthickness,axisNameBorderDashed:f.yaxisnameborderdashed,axisNameBorderDashLen:f.yaxisnameborderdashlen,
axisNameBorderDashGap:f.yaxisnameborderdashgap,axisNameWidth:f.yaxisnamewidth,useEllipsesWhenOverflow:f.useellipseswhenoverflow,rotateAxisName:c(f.rotateyaxisname,1),axisName:f.yaxisname,divLineColor:d(f.divlinecolor,b.getColor(g.divLineColor)),divLineAlpha:d(f.divlinealpha,b.getColor("divLineAlpha")),divLineThickness:c(f.divlinethickness,2),divLineIsDashed:!!c(f.divlinedashed,f.divlineisdashed,0),divLineDashLen:c(f.divlinedashlen,4),divLineDashGap:c(f.divlinedashgap,2),showAlternateGridColor:c(f.showalternatehgridcolor,
1),alternateGridColor:d(f.alternatehgridcolor,b.getColor("altHGridColor")),alternateGridAlpha:d(f.alternatehgridalpha,b.getColor("altHGridAlpha")),numDivLines:f.numdivlines,axisMinValue:f.yaxisminvalue,axisMaxValue:f.yaxismaxvalue,setAdaptiveMin:f.setadaptiveymin,adjustDiv:f.adjustdiv,labelStep:f.yaxisvaluesstep,showAxisValues:c(f.showyaxisvalues,f.showyaxisvalue),showLimits:c(f.showyaxislimits,f.showlimits,this.showLimits),showDivLineValues:c(f.showdivlinevalues,f.showdivlinevalue),showZeroPlane:f.showzeroplane,
zeroPlaneColor:f.zeroplanecolor,zeroPlaneThickness:f.zeroplanethickness,zeroPlaneAlpha:f.zeroplanealpha,showZeroPlaneValue:f.showzeroplanevalue,trendlineColor:f.trendlinecolor,trendlineToolText:f.trendlinetooltext,trendlineThickness:f.trendlinethickness,trendlineAlpha:f.trendlinealpha,showTrendlinesOnTop:f.showtrendlinesontop,showAxisLine:c(f.showyaxisline,f.showaxislines,f.drawAxisLines,0),axisLineThickness:c(f.yaxislinethickness,f.axislinethickness,1),axisLineAlpha:c(f.yaxislinealpha,f.axislinealpha,
100),base:f.base,logBase:f.logbase,axisLineColor:d(f.yaxislinecolor,f.axislinecolor,"#000000"),showMinorDivLineValues:c(f.showminordivlinevalues,0),numMinorDivLines:f.numminordivlines};"1"===b.base&&(b.base=10,b.logBase=10);b.minorDivlinecolor=d(f.minordivlinecolor,b.divLineColor);b.minorDivLineThickness=d(f.minordivlinethickness,1);b.minorDivLineAlpha=d(f.minordivlinealpha,b.divLineAlpha/2);e.vtrendlines=h.vtrendlines;b.trendlines=h.trendlines;h=a.yAxis[0];a=a.xAxis[0];h.setCommonConfigArr(b,!0,
l,!1);a.setCommonConfigArr(e,!1,!1,!1);h.configure();a.configure()},_setAxisLimits:function(){var a=this.components,c=a.dataset,d=a.yAxis,a=a.xAxis,b,h=c.length,f,e=-Infinity,g=Infinity,l=Infinity,k=-Infinity,t,p={},m=[],D=function(a){e=Y(e,a.max);g=oa(g,a.min);k=Y(k,a.xMax||-Infinity);l=oa(l,a.xMin||Infinity)};for(f=0;f<h;f++)b=c[f],(t=b.groupManager)?p[b.type]=t:m.push(b);for(t in p)c=p[t].getDataLimits(),D(c);h=m.length;for(f=0;f<h;f++)c=m[f].getDataLimits(),D(c);D(this._getTrendLineMinMax("h"));
-Infinity===e&&(e=1);Infinity===g&&(g=1);d[0].setDataLimit(e,g);if(-Infinity!==k||Infinity!==l)a[0].config.xaxisrange={max:k,min:l},a[0].setDataLimit(k,l)}},ta.mscartesian);ta("guageBase",{standaloneInit:!1,hasCanvas:!1,_createAxes:function(){},_feedAxesRawData:function(){},_setCategories:function(){},_setAxisLimits:function(){},_adjustCanvasPadding:function(){},placeDataLabels:function(){var a=function(a,c){return a.point.value-c.point.value},d=function(a,c){return a.angle-c.angle},b=[e,e,p,p],h=
[-1,1,1,-1],f=[1,1,-1,-1];return function(e,g,l,k){var t=this.config,p=this.components.dataset[0].conf,m=t.canvasLeft,w=t.canvasTop,z=t.canvasWidth,G=m+.5*t.canvasWidth,n=w+.5*t.canvasHeight,B=this.linkedItems.smartLabel,F=p.dataLabelOptions,q=F.style,u=c(fa(parseFloat(q.lineHeight)),12),R=D(F.placeLabelsInside,1===g.length?!0:!1),L=F.skipOverlapLabels,P=F.manageLabelOverflow,aa=F.connectorPadding,v;v=k&&k.metrics||[G,n,2*p.pieMinRadius,p.innerSize||0];var Z=v[1],E=v[0];k=.5*v[2];var S=[[],[],[],
[]],p=l.labelsRadius=k+F.distance,n=G=parseInt(q.fontSize,10),V=n/2,aa=[aa,aa,-aa,-aa];l=l.labelsMaxInQuadrant||(l.labelsMaxInQuadrant=Aa(p/n));var F=F.isSmartLineSlanted,T=v[3]/2,X,C,A,H,Ra,N,J,ca,Ia,sa,wa,M,ma,va,ra,ha;v=Number.POSITIVE_INFINITY;var qa,na;A=[];C=[];B.useEllipsesOnOverflow(t.useEllipsesWhenOverflow);e||B.setStyle(q);if(1==g.length&&!T&&R)A=g[0],(wa=A.dataLabel)&&wa.show(),A.slicedTranslation=[m,w],wa&&(wa.attr({visibility:ka,align:K,transform:["t",E,Z]}),wa.x=E);else if(R)ha=T+(k-
T)/2,Pa(g,function(a){qa=a.config;na=a.graphics;(wa=na.label)&&wa.show();wa&&(sa=qa.angle,Ia=Z+ha*ia(sa),Ra=E+ha*xa(sa),wa.x=Ra,wa._x=Ra,wa.y=Ia,a.sliced&&(ra=a.slicedTranslation,ma=ra[0]-m,va=ra[1]-w,Ra+=ma,Ia+=va),wa.attr({visibility:ka,align:K,transform:["t",Ra,Ia]}))});else{Pa(g,function(a){qa=a.config;na=a.graphics;(wa=na.label)&&wa.show();wa&&(sa=qa.angle%W,0>sa&&(sa=W+sa),M=0<=sa&&sa<ya?1:sa<ja?2:sa<Ma?3:0,S[M].push({point:a,angle:sa}))});for(g=e=4;g--;){if(L&&(t=S[g].length-l,0<t))for(S[g].sort(a),
q=S[g].splice(0,t),t=0,C=q.length;t<C;t+=1)A=q[t].point,A.dataLabel.attr({visibility:r}),A.connector&&A.connector.attr({visibility:r});S[g].sort(d)}g=Y(S[0].length,S[1].length,S[2].length,S[3].length);t=Y(oa(g,l)*n,p+n);C=S[0].concat(S[1]);A=S[2].concat(S[3]);for(g=C.length-1;0<=g;g--)q=C[g].point.config,delete q.clearance,delete q.clearanceShift,T=za(t*ia(q.angle)),Math.abs(v-T)<2*u&&(q.clearance=0,C[g+1].point.clearanceShift=u/2),v=T;v=Number.POSITIVE_INFINITY;g=0;for(C=A.length;g<C;g++)q=A[g].point.config,
delete q.clearance,delete q.clearanceShift,T=za(t*ia(q.angle)),Math.abs(v-T)<2*u&&(q.clearance=0,A[g-1].point.clearanceShift=u/2),v=T;S[1].reverse();for(S[3].reverse();e--;){q=S[e];C=q.length;L||(n=C>l?t/C:G,V=n/2);u=C*n;v=t;for(g=0;g<C;g+=1,u-=n)T=za(t*ia(q[g].angle)),v<T?T=v:T<u&&(T=u),v=(q[g].oriY=T)-n;R=b[e];C=t-(C-1)*n;v=0;for(g=q.length-1;0<=g;--g,C+=n)if(A=q[g].point,sa=q[g].angle,qa=A.config,na=A.graphics,A=qa.sliced,wa=na.label,T=za(t*ia(sa)),T<v?T=v:T>C&&(T=C),v=T+n,u=void 0===qa.clearance?
2*fa(c(parseFloat(qa.style.border),12),12):2*fa(c(parseFloat(qa.style.border),qa.clearance)),J=(T+q[g].oriY)/2,T=E+f[e]*p*xa(da.asin(J/t)),J*=h[e],J+=Z,ca=Z+k*ia(sa),H=E+k*xa(sa),(2>e&&T<H||1<e&&T>H)&&(T=H),Ra=T+aa[e],Ia=J-V-2,N=Ra+aa[e],wa.x=N,wa._x=N,P&&(X=1<e?N-this.canvasLeft:this.canvasLeft+z-N,B.setStyle(qa.style),u=c(fa(parseFloat(qa.style.lineHeight)),12)+u,u=B.getSmartText(qa.labelText,X,u),void 0===qa.clearance&&u.height>n&&(J+=n),wa.attr({text:u.text}).tooltip(u.tooltext)),wa.y=Ia,A&&(ma=
qa.transX,va=qa.transY,Ra+=ma,T+=ma,H+=ma,ca+=va,N+=ma),wa.attr({visibility:ka,"text-anchor":R,vAlign:K,x:N,y:J}),u=na.connector)na.connectorPath=A=["M",H,ca,"L",F?T:H,J,Ra,J],u.attr({path:A,visibility:ka})}}}}()},ta.sscartesian);ta("scatterBase",{standaloneInit:!1,usesXYinCategory:!0,_setCategories:function(){var a=this.jsonData,c=this.components.xAxis,b=d(a.chart.xaxislabelmode,"categories"),a=a.categories&&a.categories[0].category;c[0].setAxisConfig({xAxisLabelMode:"categories"});"auto"!==b&&"mixed"!==
b&&a&&0<a.length?c[0].setCategory(a):"auto"!==b?(c[0].setCategory(a,!1),c[0].setAxisConfig({xAxisLabelMode:"mixed"})):c[0].setAxisConfig({xAxisLabelMode:"auto"})},_setAxisLimits:function(){var a=this.components,c=this.jsonData,b=a.xAxis,h=d(c.chart.xaxislabelmode,"categories"),c=c.categories&&c.categories[0],c=(c&&c.category||[]).slice(),f,e,g,l,k;f=Infinity;g=-Infinity;var t,p;ta("mscartesian")._setAxisLimits.call(this);e=b[0].getLimit();l=e.tickInterval;for(k=0;k<c.length;k+=1)if(t=c[k].x)t<f&&
(f=t),t>g&&(g=t);k=this._getTrendLineMinMax("v");g=Y(g,k.max);f=oa(f,k.min);if(g>e.max||f<e.min)g=Y(g,e.max),f=oa(f,e.min),b[0].setDataLimit(g,f);if("mixed"===h||"auto"===h||!(c&&0<c.length)){g=[];f=a.numberFormatter.xAxis;if("mixed"===h)for(k=0,h=c.length;k<h;k+=1)g[c[k].x||c[k].y||k]=!0;else c=[];t=b[0].getAxisConfig();p=k=e.min;for(h=e.max;k<=h;)g[k]||c.push({label:F+f.call(a.numberFormatter,k),x:k,showverticalline:0===k?t.showZeroPlane:1,isNumeric:!0,linecolor:0===k?t.zeroPlaneColor:t.divLineColor,
linealpha:0===k?t.zeroPlaneAlpha:t.divLineAlpha,linethickness:0===k?t.zeroPlaneThickness:t.divLineThickness,linedashed:t.divLineIsDashed,linedashLen:t.divLineDashLen,linedashgap:t.divLineDashGap}),0>k&&0<k+l?(k=0,p+=l):k<p?k=p:(k+=l,p+=l);b[0].setCategory(c,!1)}},_createQuadrant:function(){var a;a=this.components;var c=Q.register("component",["quadrant","cartesian"]);a.quadrant=a=new c;a.chart=this;a.init()},_drawQuadrant:function(){this.components.quadrant.draw()},_getDiff:function(a,c){return{diff:a,
startIndex:c}}},ta.mscartesian,{zeroplanethickness:1,zeroplanealpha:40,showzeroplaneontop:0,setadaptivexmin:1});ta("areabase",{standaloneInit:!1,enableMouseTracker:!0},ta.mscartesian,{anchorborderthickness:1,anchorimageurl:void 0,anchorimagepadding:1,anchorsides:1,anchoralpha:void 0,anchorbgalpha:O,anchorimagealpha:O,anchorimagescale:100,anchorstartangle:90,anchorshadow:0,anchorbgcolor:void 0,anchorbordercolor:void 0,anchorradius:3,showvalues:1,plotfillalpha:P,linedashlen:5,linedashgap:4,linedashed:void 0,
linealpha:O,linethickness:2,drawfullareaborder:1,connectnulldata:0})}]);Q.register("module",["private","modules.renderer.js-renderer",function(){var b=this.hcLib.Raphael,v=Math.round;b.ca.ishot=function(v){if(this.removed)return!1;var C=this.node;v=v||"";C.ishot=v;switch(this.type){case "group":for(C=this.bottom;C;)C.attr("ishot",v),C=C.next;break;case "text":if(b.svg)for(C=C.getElementsByTagName("tspan")[0];C;)C.ishot=v,C=C.nextSibling}return!1};b.addSymbol({printIcon:function(b,C,H){var A=.75*H,
u=.5*H,a=.33*H,O=v(b-H)+.5,q=v(C-H)+.5,M=v(b+H)+.5;H=v(C+H)+.5;var U=v(b-A)+.5,N=v(C-A)+.5,A=v(b+A)+.5,E=v(C+u)+.5,r=v(b+u)+.5,k=v(C+a)+.5;b=v(b-u)+.5;a=v(C+a+a)+.5;return["M",U,q,"L",A,q,A,N,U,N,"Z","M",O,N,"L",O,E,U,E,U,C,A,C,A,E,M,E,M,N,"Z","M",U,C,"L",U,H,A,H,A,C,"Z","M",r,k,"L",b,k,"M",r,a,"L",b,a]},exportIcon:function(b,C,H){var A=.66*H,u=.5*A,a=v(b-H)+.5,O=v(C-H)+.5,q=v(b+H)+.5;H=v(C+H)-.5;var M=v(b-u)+.5,U=C<H-3?H-3:v(C)+.5,u=v(b+u)-.5,N=v(b+A)-.5,A=v(b-A)+.5;return["M",a,U,"L",a,H,q,H,q,
U,q,H,a,H,"Z","M",b,H-1,"L",A,C,M,C,M,O,u,O,u,C,N,C,"Z"]}})}]);Q.register("module",["private","modules.renderer.js-axis-cartesian",function(){var b=this.hcLib,v=b.parseConfiguration,J=b.BLANKSTRING,C=b.extend2,H=b.pluck,A=b.toPrecision,u=b.pluckNumber,a=b.setLineHeight,O=b.pluckFontSize,q=b.toRaphaelColor,M=b.graphics.convertColor,U=b.parseUnsafeString,N=b.ONESTRING,E=b.getDashStyle,r=b.plotEventHandler,k=b.getValidValue,m=b.getFirstValue,n=b.parseTooltext,L=b.preDefStr,g=L.visibleStr,l=L.hiddenStr,
B=L.POSITION_MIDDLE,e=L.POSITION_START,V=L.POSITION_TOP,p=L.POSITION_BOTTOM,T=L.POSITION_END,K=8===this.window.document.documentMode?g:"",L=Math,t=L.round,Z=L.min,P=L.max,S=L.abs,z=L.ceil,R=L.floor,w=L.pow,F=L.log,X=function(a,d){var b=!1,c=d%2,e;a[1]===a[4]&&(b=a[1],e=t(b),a[1]=a[4]=c?e>b?e-.5:e+.5:e,b=!0);a[2]===a[5]&&(b=a[2],e=t(b),a[2]=a[5]=c?e>b?e-.5:e+.5:e,b=!0);return{path:a,isCrisped:b}};Q.register("component",["axis","cartesian",{pIndex:2,customConfigFn:"_feedAxesRawData",init:function(a,
d,b,c){var e;this.graphics={};this.components={};e=this.config;e.isVertical=d;e.isReverse=b;e.isOpposit=c;e.isActive=!0;e.drawLabels=!0;e.drawOnlyCategoryLine=!1;e.drawLabelsOpposit=!1;e.drawLabelOnBothSide=!1;e.drawPlotlines=!0;e.drawAxisLine=!0;e.drawPlotBands=!0;e.drawAxisName=!0;e.drawAxisNameOpposit=!1;e.axisNameAlignCanvas=!1;e.drawAxisNameFromBottom=!1;e.drawTrendLines=!0;e.drawTrendLabels=!0;e.drawTick=!0;e.drawTickMinor=!0;e.animateAxis=!0;e.drawAxisLineWRTCanvas=!0;e.isRelativeAxisInverse=
!1;e.axisIndex=0;e.uniqueClassName=0;e.viewPortRatio={};e.canvas={};e.rawAttr=a;e.axisRange={};e.isConfigured=!0;e.axisDimention={};e.extremeLabels={firstLabel:{},lastLabel:{}};e._setRangeAgain=!1;e._defaultForceDecimal=void 0;e._defaultDecimalPrecision=void 0},setCommonConfigArr:function(a,d,b,c){var e=this.config;e.rawAttr=a;e.isVertical=d;e.isReverse=b;e.isOpposit=c},configure:function(){var b=this.config,d=b.rawAttr,f=this.chart,c=f.components,e=this.chart.is3D,f=f.jsonData.chart,g=c.numberFormatter;
b.trendLines=d.trendlines;b.vTrendLines=d.vtrendlines;this.__setDefaultConfig();v(d,b);b.axisName=U(d.axisName);b.axisValuePadding=b.axisNamePadding||u(d.axisValuePadding,4);b.axisNamePadding=b.axisNamePadding||u(d.axisNamePadding,5);b.maxLabelWidthPercent=u(d.maxLabelWidthPercent);b.maxLabelWidthPercent=S(b.maxLabelWidthPercent);b.minLabelWidthPercent=S(u(d.minLabelWidthPercent));b.numDivLines=u(d.numDivLines,4);0>b.numDivLines&&(b.numDivLines=0);b.categoryNumDivLines=u(d.numDivLines,0);0>b.axisValuePadding&&
(b.axisValuePadding=0);b.categoryDivLinesFromZero=1;b.axisMinValue=g.getCleanValue(d.axisMinValue);b.axisMaxValue=g.getCleanValue(d.axisMaxValue);b.zeroPlaneColor=H(d.zeroPlaneColor,d.divLineColor);b.zeroPlaneThickness=H(d.zeroPlaneThickness,d.divLineThickness);b.axisLineColor=M(d.axisLineColor,d.axisLineAlpha);b.tickAlpha=u(d.tickAlpha,b.axisLineAlpha);b.tickColor=M(H(d.tickColor,d.axisLineColor),b.tickAlpha);b.tickWidth=u(d.tickWidth,b.axisLineThickness);b.showVLines=u(f.showvlines,1);b.showVLinesOnTop=
u(f.showvlinesontop,0);b.showVLineLabels=u(f.showvlinelabels,this.showVLineLabels,1);b.showVLineLabelBorder=u(f.showvlinelabelborder,1);b.rotateVLineLabels=u(f.rotatevlinelabels,0);b.vLineColor=H(f.vlinecolor,"333333");b.vLineLabelColor=H(f.vlinelabelcolor);b.vLineThickness=H(f.vlinethickness,1);b.vLineAlpha=u(f.vlinealpha,80);b.vLineLabelBgColor=H(f.vlinelabelbgcolor,"ffffff");b.vLineLabelBgAlpha=u(f.vlinelabelbgalpha,e?50:100);b.staggerLines=Math.max(u(f.staggerlines,2),2);1>b.staggerlines&&(b.staggerlines=
1);b.trendlineValuesOnOpp=H(d.trendlineValuesOnOpp,d.trendlineValuesOnOpp,0);b.labelDisplay=H(d.labelDisplay,"auto").toLowerCase();b.labelStep=u(d.labelStep,0);b.labelStep=t(b.labelStep);0>b.labelStep&&(b.labelStep=0);b._oriLabelStep=b.labelStep;b.showLimits=u(d.showLimits,b.showAxisValues);b.showUpperLimit=d.showLimits;b.showDivLineValues=u(d.showDivLineValues,b.showAxisValues);b.showCanvasBorder=c.canvas.config.showCanvasBorder?1:0;b.axisBreak=d.axisBreaks;b.isBreak=!!b.axisBreak;b.isBreak&&this._processAxisBreak();
c=(c=m(d.axisNameBorderColor,""))?M(c,u(d.axisNameBorderAlpha,d.axisNameAlpha,100)):"";b.name=b.name||{};b.name.style={fontFamily:H(d.axisNameFont,d.outCanfontFamily),fontSize:H(d.axisNameFontSize,parseInt(d.outCanfontSize,10))+"px",color:M(H(d.axisNameFontColor,d.outCancolor),u(d.axisNameFontAlpha,d.axisNameAlpha,100)),fontWeight:u(d.axisNameFontBold,1)?"bold":"normal",fontStyle:u(d.axisNameFontItalic)?"italic":"normal",border:c||d.axisNameBgColor?u(d.axisNameBorderThickness,1)+"px solid":void 0,
borderColor:c,borderThickness:u(d.axisNameBorderThickness,1),borderPadding:u(d.axisNameBorderPadding,2),borderRadius:u(d.axisNameBorderRadius,0),backgroundColor:d.axisNameBgColor?M(d.axisNameBgColor,u(d.axisNameBgAlpha,d.axisNameAlpha,100)):"",borderDash:u(d.axisNameBorderDashed,0)?E(u(d.axisNameBorderDashLen,4),u(d.axisNameBorderDashGap,2),u(d.axisNameBorderThickness,1)):"none"};b.name.style.lineHeight=a(b.name.style);c=(c=m(f.trendvaluebordercolor,""))?M(c,u(f.trendvalueborderalpha,f.trendvaluealpha,
100)):"";b.trend=b.trend||{};b.trend.trendStyle={fontFamily:H(f.trendvaluefont,d.outCanfontFamily),color:H(f.trendvaluefontcolor,d.trendlineColor,d.outCancolor,"333333"),fontSize:O(f.trendvaluefontsize,parseInt(d.outCanfontSize,10))+"px",fontWeight:u(f.trendvaluefontbold)?"bold":"normal",fontStyle:u(f.trendvaluefontitalic)?"italic":"normal",border:c||f.trendvaluebgcolor?u(f.trendvalueborderthickness,1)+"px solid":"",borderColor:c,borderThickness:u(f.trendvalueborderthickness,1),borderPadding:u(f.trendvalueborderpadding,
2),borderRadius:u(f.trendvalueborderradius,0),backgroundColor:f.trendvaluebgcolor?M(f.trendvaluebgcolor,u(f.trendvaluebgalpha,f.trendvaluealpha,100)):"",borderDash:u(f.trendvalueborderdashed,0)?E(u(f.trendvalueborderdashlen,4),u(f.trendvalueborderdashgap,2),u(f.trendvalueborderthickness,1)):"none"};b.trend.trendStyle.lineHeight=a(b.trend.trendStyle);b.labels=b.labels||{};b.lines=b.lines||{};b.band=b.band||{};c=(c=m(f.labelbordercolor,""))?M(c,u(f.labelborderalpha,f.labelalpha,100)):"";b.labels.style=
{fontFamily:H(d.labelFont,d.outCanfontFamily),fontSize:u(d.labelFontSize,parseInt(d.outCanfontSize,10))+"px",fontWeight:u(d.labelFontBold)?"bold":"normal",fontStyle:u(d.labelFontItalic)?"italic":"normal",color:M(H(d.labelFontColor,d.outCancolor),u(d.labelFontAlpha,100)),labelLink:f.labellink,border:c||f.labelbgcolor?u(f.labelborderthickness,1)+"px solid":"",borderColor:c,borderThickness:u(f.labelborderthickness,1),borderPadding:u(f.labelborderpadding,2),borderRadius:u(f.labelborderradius,0),backgroundColor:f.labelbgcolor?
M(f.labelbgcolor,u(f.labelbgalpha,f.labelalpha,100)):"",borderDash:u(f.labelborderdashed,0)?E(u(f.labelborderdashlen,4),u(f.labelborderdashgap,2),u(f.labelborderthickness,1)):"none"};b.labels.style.lineHeight=a(b.labels.style);b.numberFormatterFn=H(d.numberFormatterFn);b.axisEndLabelDisplaySpace={left:0,right:0,top:0,bottom:0};b.isConfigured=!0;b._defaultForceDecimal=void 0;b._defaultDecimalPrecision=void 0},_processAxisBreak:function(){var a=this.config,d,b,c,e;a.breakPoints=[];d=a.axisBreak.split("|");
c=0;e=d.length;for(b=0;c<e;c+=1)d[c]=d[c].split(","),isNaN(d[c][0])||isNaN(d[c][1])||(a.breakPoints[b]={start:u(d[c][0]),end:u(d[c][1]),length:u(d[c][2],0)},b+=1);a.breakPoints.sort(function(a,c){return a.start-c.start});a.hasBreakPoints=!0;this._validateBreakPoints()},_validateBreakPoints:function(){var a=this.config,d=a.breakPoints,b=0,c,e=d.length;for(c=0;c<e;c+=1)b+=d[c].end-d[c].start;a.totalBreakAmount=b},_getRelativeBreakValue:function(a){var d=this.config.breakPoints,b,c=d.length,e=0;for(b=
0;b<c;b+=1){if(a>=d[b].start&&a<=d[b].end)return d[b].start-e;if(a<d[b].start)break;e+=d[b].end-d[b].start}return a-e},_getRealBreakValue:function(a){var d=this.config.breakPoints,b,c=d.length;for(b=0;b<c;b+=1)if(a>=d[b].start)a+=d[b].end-d[b].start;else if(a<d[b].start)break;return a},getBreakPoints:function(){var a=this.config;return a.hasBreakPoints?a.breakPoints:!1},setCanvas:function(a){this.config.canvas=a},getAxisBase:function(){var a=this.config,d=a.axisRange.min,b=a.axisRange.max;return 0>
d&&0<b?0:a.isReverse?b:0>=b?b:d},getValue:function(a){var d=this.config,b=d.axisRange,c=d.canvas,e=d.axisDimention||{},g=this.chart.config,l=g.viewPortConfig,k=e.axisLength||c.canvasWidth||g.canvasWidth,e=e.axisLength||c.canvasHeight||g.canvasHeight,c=b.max,b=b.min,g=c-b;d.isVertical?(k=e*l.scaleY/g,a=d.isReverse?b+(l.y*l.scaleY+Number(a))/k:c-(l.y*l.scaleY+Number(a))/k):(k=k*l.scaleX/g,a=d.isReverse?c-(l.x*l.scaleX+Number(a))/k:b+(l.x*l.scaleX+Number(a))/k);return a},_getLabelElement:function(a){var d=
this.components;return this.config.hasCategory?d&&d.categoryLabel&&d.categoryLabel[a]&&d.categoryLabel[a].graphics&&d.categoryLabel[a].graphics.label:this.graphics&&this.graphics.labels&&this.graphics.labels[a]},_getVisibleConfig:function(){var a=this.config,d=a.axisRange,b=a.canvas,c=a.axisDimention||{},e=this.chart.config,g=e.viewPortConfig,l=c.axisLength||b.canvasWidth||e.canvasWidth,b=c.axisLength||b.canvasHeight||e.canvasHeight,c=d.max,d=d.min,e=c-d;a.isVertical?(e/=b,a=g.scaleY,l=c-e*g.y,b=
c-e*(g.y+b/a)):(e/=l,a=g.scaleX,b=d+e*g.x,l=d+e*(g.x+l/a));return{maxValue:l,minValue:b}},_adjustNumberFormatter:function(a){var d=this.config,b=d.axisIndex,c=this.chart.components,e=d._defaultDecimalPrecision,g=d._defaultForceDecimal,l=0,b=d.isVertical||"yAxis"===d.numberFormatterFn?(c.numberFormatter.Y[b]||c.numberFormatter.Y[0]).yAxisLabelConf:c.numberFormatter.paramX;void 0!==e?b.decimalprecision=e:d._defaultDecimalPrecision=b.decimalprecision;void 0!==g?b.forcedecimals=g:d._defaultForceDecimal=
b.forcedecimals;0<parseInt(a)||!(a=a.toString().split(".")[1])||(l=a.match(/^[0]*/)[0].length,l+1>b.decimalprecision&&(b.forcedecimals=1),b.decimalprecision=P(l+1,b.decimalprecision))},_setTickIntervalAfterZoom:function(){var a=this.config,d=this.chart.config.viewPortConfig,f=a.isVertical,c=a.axisRange,e=b.getAxisLimits,g=a.numDivLines,l=a.setAdaptiveMin,k=a.adjustDiv,k=a.rawAttr,t,p,m,w;a.hasCategory||(f=f?d.scaleY:d.scaleX,d=u(k.axisrange?k.axisrange.max:c.max),w=u(k.axisrange?k.axisrange.min:c.min),
p=c.max,m=c.min,l=t=!l,k=u(1===f?a.adjustDiv:0),a=e(d,w,p,m,t,l,g*f,k),c.min=Number(A(a.Min,10)),c.max=Number(A(a.Max,10)),c.tickInterval=Number(A(a.divGap,10)),this._adjustNumberFormatter(c.tickInterval),0===c.tickInterval&&(c.tickInterval=1))},_getAttribAsObj:function(a){var d,b={};for(d in a)a.hasOwnProperty(d)&&"string"===typeof a[d]&&a[d]&&(b[d]=a[d]);return b},_extractAttribToEnd:function(a,d){var b;a._attrib=C({},d);a._attrib=C(a._attrib,this._getAttribAsObj(a));for(b in a)a.hasOwnProperty(b)&&
a[b]&&"object"===typeof a[b]&&"_attrib"!==b&&this._extractAttribToEnd(a[b],a._attrib)},setCategory:function(a,d){var b;function c(a){var c={labelfont:["fontFamily"],labelfontcolor:["fontColor"],labelfontsize:["fontSize",function(a){return a?u(a)+"px":void 0}],labelfontbold:["fontWeight",function(a){return a?"bold":"normal"}],labelfontitalic:["fontStyle",function(a){return a?"italic":"normal"}],labelfontalpha:["fontAlpha"]},d=function(a){return a},b=!1,f,h,e,l={},k,t;for(f in g)"category"===f||f in
a||(h=g[f],a[f]=h);for(f in c){e=c[f];k=e[0];t=e[1]||d;h=a[f];e=a[k.toLowerCase()];if(void 0!==h||void 0!==e)if(void 0!==(h=t(h))||void 0!==(h=t(e)))l[k]=h,b=!0;b&&(a.style=l)}}var e=this.chart.jsonData.categories,g=e&&e[0]||{},e=this.config,l=e.axisRange;b=a&&a.length;var k=e.startPad||0,t=e.endPad||0,p=0,m=void 0!==d?d:!0,w,z,r,n,B,F;e.hasCategory=1;e.categories={};n=e.categories.category=[];B=e.categories.vline=[];z=e.categories.catIdMap={};e.isCategoryAnimate=!1;e.isCategoryVlineAnimate=!1;for(r=
0;r<b;r+=1)(w=a[r])||(w={}),F=Number(w.x),"true"!==w.vline&&!0!==w.vline&&1!==w.vline&&"1"!==w.vline?(w.id&&(z[w.id.toLowerCase()]={catObj:w,index:r}),c(w),F===F&&this.chart.usesXYinCategory&&(w.x=F,e.irregularCatAxis=!0),n.push(w),n[p].label=U(n[p].label),p+=1):(w.startIndex=n.length-1,B.push(w));e.oriCatLen=p-1;1===p&&(0===k&&(k=.5),0===t&&(t=.5));m&&(b=p-1+t,l.min=Number(A(-k,10)),l.max=Number(A(b,10)),l.tickInterval=Number(A(1,10)));e.isConfigured=!0},updateCategory:function(a,d){var b=this.config,
c,e;c=b.categories.category;if(c[a])for(e in d)d.hasOwnProperty(e)&&(c[a][e]=d[e]);b.isConfigured=!0},categoryInsert:function(a,d,b){var c=this.config,e=c.axisRange,g=d.length,l=c.endPad||0,k,t,p,m,w;k=c.categories.category;p=c.categories.catIdMap;t=c.categories.vline;for(m=0;m<g;m+=1)w=d[m],"true"!==w.vline&&!0!==w.vline&&1!==w.vline&&"1"!==w.vline?(w.id&&(p[w.id]={catObj:w,i:a}),k.splice(a,0,w),a+=1):(w.startIndex=a-2,t.push(w));b&&(e.max=Number(A(k.length-1+l,10)));c.isConfigured=!0},categoryDelete:function(a,
d,b){var c=this.config,e=c.axisRange,g,l,k;c.isCategoryAnimate=!0;g=c.animateCategories=c.categories.category.slice();l=0;for(k=g.length;l<k;l++)g[l].animate=!0,g[l].leftShift=d,g[l]["delete"]=l<d;c.isCategoryVlineAnimate=!0;g=c.animateCategoriesVline=c.categories.vline.slice();l=0;for(k=g.length;l<k;l++)g[l].animate=!0,g[l].leftShift=d;c.categories.category.splice(a,d);this._shiftVline(a,d,"left");b&&(e.max-=d);c.isConfigured=!0},categoryUpdate:function(a,d){var b=this.config,c;c=b.categories.category;
c[a]&&(c[a]=d);b.isConfigured=!0},_getRotateTextTransformString:function(a,d,b){var c,e="";a=a.matrix.toMatrixString();a.replace(/\(([^\)]*)/,function(a,h){c=h.split(",");c[4]=Number(c[4])+d;c[5]=Number(c[5])+b;e=c.join();return a});e="m"+e;""===a&&(e="t"+d+","+b);return e},_shiftVline:function(a,d,b){var c=this.config,e=c.categories.vline,c=c.categories.category.length,g=e.length,l,k;for(l=0;l<g;l+=1)if(k=e[l],k.startIndex>=a&&(k.startIndex="right"===b?k.startIndex+d:k.startIndex-d,0>k.startIndex-
d||k.startIndex-d>=c))e.splice(l,1),--g,--l},shiftLabels:function(a,d){var b=this.config.labels;b.shiftX=a;b.shiftY=d},setAxisPadding:function(a,d){var b=this.config;a=b.startPad=u(a,0);d=b.endPad=u(d,0);0===b.oriCatLen&&(0===a&&(a=.5),0===d&&(d=.5));b.hasCategory?0<=b.oriCatLen&&this.setAxisRange({max:b.oriCatLen+d,min:-a}):b.originalMax&&b.originalMin&&this.setDataLimit(b.originalMax,b.originalMin)},setAxisConfig:function(a){var d=this.config,b;for(b in a)a.hasOwnProperty(b)&&(d[b]=a[b])},getAxisConfig:function(a){var d=
this.config;return a?d[a]:d},setLabelConfig:function(a){var d=this.config.labels,b;for(b in a)a.hasOwnProperty(b)&&(d[b]=a[b])},setAxisRange:function(a){var d=this.config.axisRange,b;for(b in a)a.hasOwnProperty(b)&&void 0!==d[b]&&(d[b]=a[b])},getAxisEndLabelDisplaySpace:function(){return this.config.axisEndLabelDisplaySpace||{}},getDivLineCount:function(){var a=this.config.axisRange;return S((a.max-a.min)/a.tickInterval)-1},getLabel:function(a){var d=this.config;a=d.categories&&d.categories.category[a];
var d=[3],b={};a&&a.tooltext&&(b.label=a.label,a.tooltext=n(a.tooltext,d,b));return{label:a&&(a.oriLabel||a.label),tooltext:a&&a.tooltext}},getCategoryFromId:function(a){var d=this.config;return(a=d.categories&&d.categories.catIdMap[a])?a:{}},getCategoryPositionById:function(a){var d=this.config;return(a=d.categories&&d.categories.catIdMap[a])?a.catObj.x||a.index:!1},getClosestDiv:function(a,d){var b=this.config,c=b.axisRange,e=c.tickInterval,g=c.min,c=a;b.hasCategory&&(g=0,e=1);d=d||e/2;g=(a-g)%
e;e-=g;b.showZeroPlaneValue&&0>a-g&&0<a&&(g=a);b.showZeroPlaneValue&&0<a+e&&0>a&&(e=-a);g<=e?g<=d&&(c=a-g):e<=d&&(c=a+e);return c},setAxisDimention:function(a){var d=this.config,d=d.axisDimention||(d.axisDimention={});d.x=u(a.x,d.x);d.y=u(a.y,d.y);d.opposite=u(a.opposite,d.opposite);d.axisLength=u(a.axisLength,d.axisLength)},setDataLimit:function(a,d){var f=this.config,c=f.axisRange,e=b.getAxisLimits,g=f.isPercent?100:f.axisMaxValue,l=f.isPercent?0:f.axisMinValue,k=f.numDivLines,t=f.setAdaptiveMin,
p=f.adjustDiv,m=f.startPad||0,w=f.endPad||0;f.originalMax=a;f.originalMin=d;a=f.isPercent?100:a+w;d=f.isPercent?0:d-m;t=m=!t;f.hasBreakPoints&&(a-=f.totalBreakAmount);f=e(u(a,g),u(d,l),g,l,m,t,k,p);c.min=Number(A(f.Min,10));c.max=Number(A(f.Max,10));c.tickInterval=Number(A(f.divGap,10));this._adjustNumberFormatter(c.tickInterval);0===c.tickInterval&&(c.tickInterval=1)},getPixel:function(a){var d=this.config,b=d.canvas,c=this.chart.config,e=d.axisDimention||{},g=c.viewPortConfig,l=e.axisLength||b.canvasHeight||
c.canvasHeight,k=e.y||b.canvasTop||c.canvasTop,t=e.x||b.canvasLeft||c.canvasLeft,p=e.y+e.axisLength||b.canvasBottom||c.canvasBottom,b=e.x+e.axisLength||b.canvasRight||c.canvasRight,c=d.axisRange.min;d.hasBreakPoints&&(a=this._getRelativeBreakValue(a));g||(g={x:t,y:k,scaleX:1,scaleY:1});d.isVertical?(e=-this.getPVR(),a=d.isReverse?p-((a-c)*e+(l*g.scaleY-g.y*g.scaleY)):k+((a-c)*e+(l*g.scaleY-g.y*g.scaleY))):(e=this.getPVR(),a=d.isReverse?b-((a-c)*e-g.x*g.scaleX):t+((a-c)*e-g.x*g.scaleX));return a},
_getCustomPixel:function(a,b){var f=this.config,c=f.canvas,e=this.chart.config,g=f.axisRange,l=e.viewPortConfig,k=b||c.canvasHeight||e.canvasHeight,t=b||c.canvasWidth||e.canvasWidth,p=c.canvasTop||e.canvasTop,m=c.canvasLeft||e.canvasLeft,w=w||e.canvasBottom,c=c.canvasRight||e.canvasRight,e=g.min,g=g.max-e;f.hasBreakPoints&&(a=this._getRelativeBreakValue(a));l||(l={x:m,y:p,scaleX:1,scaleY:1});f.isVertical?(t=-(k*l.scaleY/g),f=f.isReverse?w-((a-e)*t+(k*l.scaleY-l.y*l.scaleY)):p+((a-e)*t+(k*l.scaleY-
l.y*l.scaleY))):(t=t*l.scaleX/g,f=f.isReverse?c-((a-e)*t-l.x*l.scaleX):m+((a-e)*t-l.x*l.scaleX));return f},getLimit:function(){var a=this.config.axisRange;return{min:a.min,max:a.max,tickInterval:a.tickInterval}},getAxisPosition:function(a){return this.getPixel(a)},getPVR:function(){var a=this.config,b=a.canvas,f=a.isVertical,c=a.axisRange,e=a.axisDimention||{},g=this.chart.config,a=g.viewPortConfig,l=e.axisLength||b.canvasHeight||g.canvasHeight,b=e.axisLength||b.canvasWidth||g.canvasWidth,c=c.max-
c.min,c=0<c?c:1;return f?l*a.scaleY/c:b*a.scaleX/c},_isZoomed:function(){var a=this.chart.config;if(this.config.isVertical){if(a.viewPortConfig&&1===a.viewPortConfig.scaleY)return!1}else if(a.viewPortConfig&&1===a.viewPortConfig.scaleX)return!1;return!0},draw:function(){var a=this.config,b=a.canvas,f=this.chart,c=f.config,e=a.isVertical,g=f.graphics,l=f.components.paper,k=c.viewPortConfig,t=a.viewPortRatio||{},p=b.canvasLeft||c.canvasLeft,m=b.canvasTop||c.canvasTop,w=b.canvasWidth||c.canvasWidth,
z=b.canvasHeight||c.canvasHeight,b=a.axisContainer,c=a.axisLabelContainerTop,r=a.axisPlotLineContainer,n=a.axisPlotLineContainerTop,B=a.vlineLabelContainer,F=a.axisBandContainer,q=a.axisNameContainer,K=a.axisTrendContainerTop,u=a.axisTrendContainerBottom,R=a.axisTrendLabelContainer,L=a.axisAxisLineContainer,P=a.axisAxisLineContainerBottom,v=a.divLineThickness||0,Z=g.axisBottomGroup,E=g.axisTopGroup,T=a.animateAxis,S,V,X,C,A,H,N,J,M,O,U,Q,Ja;M=k.y*k.scaleY;O=k.x*k.scaleX;f=f.get("config","animationObj");
U=f.animObj;Q=f.dummyObj;S=f.transposeAnimDuration;Ja=e?p+","+(m-v)+","+w+","+(z+2*v):p-v+","+m+","+(w+2*v)+","+z;v=g.axisBandGroup=g.axisBandGroup||l.group("dataset-Band-group",Z);V=g.axisPlotLineGroup=g.axisPlotLineGroup||l.group("dataset-Line-group",Z);J=g.axisTrendGroupBottom=g.axisTrendGroupBottom||l.group("dataset-Trend-group-bottom",Z);X=g.axisPlotLineGroupTop=g.axisPlotLineGroupTop||l.group("dataset-Line-group-top",E);A=g.axisNameGroup=g.axisNameGroup||l.group("dataset-Name-group",Z);C=g.axisLineGroup=
g.axisLineGroup||l.group("axis-Line-group",E);N=g.axisTrendGroupTop=g.axisTrendGroupTop||l.group("dataset-Trend-group-top",E);H=g.axisLabelGroup=g.axisLabelGroup||l.group("dataset-Label-group",Z);g=g.axisLabelGroupTop=g.axisLabelGroupTop||l.group("dataset-Label-group",E);b||(a.axisContainer=b=l.group("dataset-axis",H));c||(a.axisLabelContainerTop=c=l.group("dataset-top-label",g));L||(a.axisAxisLineContainer=l.group("axis-line-tick",C));B||(a.vlineLabelContainer=B=l.group("axis-vline-label",C));F?
S&&T?F.animateWith(Q,U,{"clip-rect":p+","+m+","+w+","+z},S,f.animType):F.attr({"clip-rect":p+","+m+","+w+","+z}):(a.axisBandContainer=F=l.group("dataset-axis-bands",v),F.attr({"clip-rect":p+","+m+","+w+","+z}));r?S&&T?r.animateWith(Q,U,{"clip-rect":Ja},S,f.animType):r.attr({"clip-rect":Ja}):(a.axisPlotLineContainer=r=l.group("dataset-axis-lines",V),r.attr({"clip-rect":Ja}));n?S&&T?n.animateWith(Q,U,{"clip-rect":Ja},S,f.animType):n.attr({"clip-rect":Ja}):(a.axisPlotLineContainerTop=n=l.group("dataset-axis-lines-top",
X),n.attr({"clip-rect":Ja}));K?S&&T?K.animateWith(Q,U,{"clip-rect":p+","+m+","+w+","+z},S,f.animType):K.attr({"clip-rect":p+","+m+","+w+","+z}):(a.axisTrendContainerTop=K=l.group("dataset-axis-trend-top",N),K.attr({"clip-rect":p+","+m+","+w+","+z}));u?S&&T?u.animateWith(Q,U,{"clip-rect":p+","+m+","+w+","+z},S,f.animType):u.attr({"clip-rect":p+","+m+","+w+","+z}):(a.axisTrendContainerBottom=u=l.group("dataset-axis-trend-bottom",J),u.attr({"clip-rect":p+","+m+","+w+","+z}));R||(a.axisTrendLabelContainer=
l.group("dataset-axis-trend-label",N));q||(a.axisNameContainer=l.group("dataset-axis-name",A));P||(a.axisAxisLineContainerBottom=l.group("axis-line-tick-bottom",Z));t.scaleX!==k.scaleX||t.scaleY!==k.scaleY?(t.scaleX=k.scaleX,t.scaleY=k.scaleY):e?(a=M-k.y*k.scaleY,B.transform("t0,"+a),b.transform("t0,"+a),c.transform("t0,"+a),r.transform("t0,"+a),n.transform("t0,"+a),F.transform("t0,"+a),K.transform("t0,"+a),u.transform("t0,"+a)):(a=O-k.x*k.scaleX,B.transform("t"+a+",0"),b.transform("t"+a+",0"),c.transform("t"+
a+",0"),r.transform("t"+a+",0"),n.transform("t"+a+",0"),F.transform("t"+a+",0"),K.transform("t"+a+",0"),u.transform("t"+a+",0"));this._drawComponents()},hide:function(){var a=this.config;a.axisContainer&&(a.axisLabelContainerTop.hide(),a.axisContainer.hide(),a.axisPlotLineContainer.hide(),a.axisPlotLineContainerTop.hide(),a.axisBandContainer.hide(),a.axisNameContainer.hide(),a.axisTrendContainerTop.hide(),a.axisTrendContainerBottom.hide(),a.axisTrendLabelContainer.hide(),a.axisAxisLineContainer.hide(),
a.axisAxisLineContainerBottom.hide())},show:function(){var a=this.config;a.axisContainer&&(a.axisLabelContainerTop.show(),a.axisContainer.show(),a.axisPlotLineContainer.show(),a.axisPlotLineContainerTop.show(),a.axisBandContainer.show(),a.axisNameContainer.show(),a.axisTrendContainerTop.show(),a.axisTrendContainerBottom.show(),a.axisTrendLabelContainer.show(),a.axisAxisLineContainer.show(),a.axisAxisLineContainerBottom.show())},_drawComponents:function(){var a=this.config,b=this.chart.is3D,f,c;a.drawAxisName&&
this._drawAxisName();a.drawAxisLine&&this._drawAxisLine();a.drawAxisLine&&a.hasBreakPoints&&this._drawBreakPoints();a.isActive||(f=a.lines.isDraw,c=a.band.isDraw,a.lines.isDraw=0,a.band.isDraw=0);a.hasCategory?(a.drawLabels&&this._drawCategory(),a.drawOnlyCategoryLine&&this._drawCategoryLine()):(a.drawLabels&&this._drawLabel(),a.drawPlotlines&&this._drawPlotLine());a.hasCategory&&"auto"!==a.xAxisLabelMode?(a.drawPlotlines&&this._drawCategoryVline(),a.drawPlotlines&&!b&&this._drawCategoryPlotLine(),
a.drawPlotBands&&!a.hasBreakPoints&&!b&&this._drawCategoryPlotBand(),"mixed"===a.xAxisLabelMode&&a.drawPlotBands&&!a.hasBreakPoints&&!b&&this._drawPlotBand()):a.drawPlotBands&&!a.hasBreakPoints&&!b&&this._drawPlotBand();a.isActive||(a.lines.isDraw=f,a.band.isDraw=c);a.drawTrendLines&&this._drawTrendLine();a.isConfigured=!1},_manageReuseableElement:function(a,b,f){var c=this.config.isConfigured,e=this.chart.components.paper,g,l,k,t;g=a._graphicElem||(a._graphicElem=[]);l=a._freeElem||(a._freeElem=
[]);k=a._usedElem||(a._usedElem={});t=a._drawnIds={};return{getElement:function(a,h){var p=h||{};t[a]=!0;if(k[a])return k[a]._applyAllAttr=c,k[a]._firstTimeDraw=!1,k[a];if(0<l.length)return k[a]=l.pop(),k[a]._applyAllAttr=!0,k[a]._firstTimeDraw=!1,k[a];g.push(e[b](p,f));k[a]=g[g.length-1];k[a]._firstTimeDraw=!0;k[a]._applyAllAttr=!1;return k[a]},freeUnusedElement:function(){for(var a in k)k.hasOwnProperty(a)&&!t[a]&&(k[a].attr({visibility:"hidden"}),l.push(k[a]),delete k[a])}}},_drawLabel:function(){var a=
this.config,b=a.canvas,f=a.axisDimention||{},c=this.chart,g=c.config,l=c.components,k=a.axisRange,t=a.isOpposit,m,w=a.labels,r=w.style,n,B,F=a.isVertical,q=a.animateAxis,K=k.max,u=k.min,L=b.canvasTop||g.canvasTop,P=b.canvasLeft||g.canvasLeft,v=b.canvasBottom||g.canvasBottom,b=b.canvasRight||g.canvasRight,g=a.axisNameContainer,Z=a.labelPadding,E=a.showUpperLimit,X=l.paper,C=a.labelMaxH,H=a.labelMaxW,N=a.extremeLabels,J=F?f.x:f.y,f=f.opposite,M=a.drawLabelOnBothSide,O=this.graphics.labels||[],U=0,W=
!0,Q=!1,ea,ga,la,Ca={fontFamily:r.fontFamily,fontSize:r.fontSize,fontWeight:r.fontWeight,fontStyle:r.fontStyle,lineHeight:r.lineHeight},Ha,pa,La,Ja,Fa,ta=function(){(E||!E&&1>=a.labels.step)&&!Q&&n<K&&n+m>K&&(B=n=K-m,Q=!0);a.showZeroPlane&&0>n&&0<n+m?(n=0,B+=m):n<B?n=B:(n+=m,B+=m)};r.lineHeight&&(ea=r.lineHeight,-1!==ea.indexOf("px")&&(ea=ea.replace("px",""),ea=parseFloat(ea)));if(a.labels.isDraw){!M&&a.drawLabelsOpposit&&(t=!t,J=f);W=c.get("config","animationObj");La=W.animObj;Ja=W.dummyObj;c=W.transposeAnimDuration;
Fa=W.animType;W=S(this.getPixel(u)-this.getPixel(u+k.tickInterval));F?(a.labelMaxH>W&&!a.hasCategory&&(ga=z(a.labelMaxH/W)),ga>a.labels.step&&(a.labels.step=ga)):(a.labelMaxW>W&&!a.hasCategory&&(ga=z(a.labelMaxW/W)),ga>a.labels.step&&(a.labels.step=ga,E=!0));a.labels.step?m=k.tickInterval*a.labels.step:m=k.tickInterval;la=a.labels.rotation;k=this._getVisibleConfig();W=this._isZoomed();U=u+m*R((k.minValue-3*m-u)/m);ga=u+m*R((k.maxValue+3*m-u)/m);U=U<u?u:U;ga=ga>K?K:ga;Ha={fill:r.color,"line-height":ea,
"font-size":r.fontSize};M&&(pa={fill:r.color,"line-height":ea,"font-size":r.fontSize});F||(la?(Ha["text-anchor"]=t?e:T,Ha["vertical-align"]="center",M&&(pa["text-anchor"]=t?T:e,pa["vertical-align"]="center")):(Ha["vertical-align"]=t?p:V,M&&(pa["vertical-align"]=t?V:p)));g.css(Ca);N.firstLabel={};N.lastLabel={};B=n=U;for(U=0;n<=ga;){if(!W||!(n<k.minValue||n>k.maxValue))if(a.labels.drawNormalVal||a.labels.drawLimitVal&&(n===u||n===K))if(a.labels.drawNormalVal||n===u||n===K)if(a.labels.drawLimitVal||
n!==u&&n!==K)if(0!==a.showZeroPlane&&0!==a.showZeroPlaneValue||0!==n){if(1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(0>n&&0<n+m||0<n&&0>n-m)&&n!==u&&n!==K)if(F){if(this.getPixel(n)+C>=this.getPixel(0)&&this.getPixel(0)>=this.getPixel(n)-C){ta();continue}}else if(this.getPixel(n)+H>=this.getPixel(0)&&this.getPixel(0)>=this.getPixel(n)-H){ta();continue}r=a.hasBreakPoints?A(this._getRealBreakValue(n),10):A(n,10);if(F)ea=a.numberFormatterFn?l.numberFormatter[a.numberFormatterFn]:a.isPercent?l.numberFormatter.percentValue:
l.numberFormatter.yAxis,ea=""+ea.call(l.numberFormatter,r,a.axisIndex),Ha["text-anchor"]=t?e:T,Ha.text=ea,Ha.x=t?(J||b)+Z:(J||P)-Z,Ha.y=this.getPixel(r),M&&(pa["text-anchor"]=t?T:e,pa.text=ea,pa.x=t?(f||P)-Z:(f||b)+Z,pa.y=this.getPixel(r));else{ea=a.numberFormatterFn?l.numberFormatter[a.numberFormatterFn]:a.isPercent?l.numberFormatter.percentValue:l.numberFormatter.xAxis;ea=""+ea.call(l.numberFormatter,r);Ha.text=ea;Ha.x=this.getPixel(r);Ha.y=t?(J||L)-Z:(J||v)+Z;if(n!==K&&E&&Ha.x+a.labelMaxW>b){ta();
continue}M&&(pa.text=ea,pa.x=this.getPixel(r),pa.y=t?(f||v)+Z:(f||L)-Z)}w.shiftX&&(Ha.x+=w.shiftX);w.shiftY&&(Ha.y+=w.shiftY);Ha.transform=X.getSuggestiveRotation(la,Ha.x,Ha.y);O[U]?(r=O[U],c&&q?r.animateWith(Ja,La,Ha,c,Fa):r.attr(Ha)):O[U]=r=X.text(Ha,g);U+=1;M&&(pa.transform=X.getSuggestiveRotation(la,pa.x,pa.y),O[U]?(r=O[U],c&&q?r.animateWith(Ja,La,pa,c,Fa):r.attr(pa)):O[U]=r=X.text(pa,g),U+=1);n===K?N.lastLabel.graphic=r:n===u&&(N.firstLabel.graphic=r)}ta()}if(O[U])for(n=U;n<O.length;n++)O[n].attr({text:""});
this.graphics.labels=O}else if(O[U])for(n=U;n<O.length;n++)O[n].attr({text:""})},_drawAxisName:function(){var a=this.config,b=a.canvas,f=this.chart,c=f.config,e=f.components,k=a.axisDimention||{},t=a.name.style,p=a.name.value,m=a.isVertical,w=a.isOpposit,z=f.linkedItems.smartLabel,r=b.canvasBottom||c.canvasBottom,n=b.canvasLeft||c.canvasLeft,B=b.canvasRight||c.canvasRight,F=b.canvasTop||c.canvasTop,K=b.canvasHeight||c.canvasHeight,q=b.canvasWidth||c.canvasWidth,b=a.axisNameContainer,R=a.axisNamePadding,
L=a.nameMaxH,v=a.nameMaxW,Z=m?k.x:k.y,E=k.opposite,S=this.graphics.axisName||{},k=u(a.name.rotation,m?270:90),e=e.paper,T={fontFamily:t.fontFamily,fontSize:t.fontSize,lineHeight:t.lineHeight,fontWeight:t.fontWeight,fontStyle:t.fontStyle},V=a.animateAxis,X,C,A,H;a.name.isDraw?(X=f.get("config","animationObj"),C=X.animObj,A=X.dummyObj,f=X.transposeAnimDuration,H=X.animType,X={fontFamily:t.fontFamily,fill:t.color,"vertical-align":"center","font-size":t.fontSize,"line-height":t.lineHeight},z.useEllipsesOnOverflow(c.useEllipsesWhenOverflow),
z.setStyle({fontSize:t.fontSize,fontFamily:t.fontFamily,lineHeight:t.lineHeight,fontWeight:t.fontWeight}),!a.drawLabelOnBothSide&&a.drawAxisNameOpposit&&(w=!w,Z=E),m?(a.relativeAxis&&a.relativeAxis.config&&a.relativeAxis.config.axisNamePadding&&(R=P(a.relativeAxis.config.axisNamePadding,R)),w&&c.canvasMarginRight&&(R=P(R,c.canvasMarginRight-c.marginLeft-v)),!w&&c.canvasMarginLeft&&(R=P(R,c.canvasMarginLeft-c.marginRight-v)),q=a.axisNameAlignCanvas||c.captionalignment&&"left"==c.captionalignment?K:
P(K,a.oriCanvasHeight||0),k?(p=z.getSmartText(p,q,v),z=p.tooltext,q=p.width):(p=z.getSmartText(p,v,q),z=p.tooltext,q=p.height),c=a.drawAxisNameFromBottom?r-q/2:q>K?c.height/2:F+K/2,X.text=p.text,X.x=w?(Z||B)+R+v/2:(Z||n)-R-v/2,X.y=c):(p=z.getSmartText(p,q,L),z=p.tooltext,w&&c.canvasMarginTop&&(R=P(R,c.canvasMarginTop-c.marginTop-L)),!w&&c.canvasMarginBottom&&(R=P(R,c.canvasMarginBottom-c.marginBottom-L)),X.text=p.text,X.x=n+q/2,X.y=w?(Z||F)-R-L/2:(Z||r)+R+L/2),X.transform=e.getSuggestiveRotation(m?
k:0,X.x,X.y),this.graphics.axisName?(X.visibility=g,f&&V?S.animateWith(A,C,X,f,H):S.attr(X),a.showTooltip&&z&&S.trackTooltip(!0),S.css(T)):(S=e.text(X,T,b).tooltip(z),a.showTooltip&&z&&S.trackTooltip(!0)),""!==p.text?S.attr({"text-bound":[t.backgroundColor,t.borderColor,t.borderThickness,t.borderPadding,t.borderRadius,t.borderDash]}):S.attr({"text-bound":[]}),this.graphics.axisName=S):this.graphics.axisName&&this.graphics.axisName.attr({visibility:l})},_drawPlotLine:function(){var a=this.config,b=
a.axisRange,f=b.tickInterval,c=a.isVertical,e=a.canvas,g=this.chart,l=this.chart.is3D,k=g.config,t=e.canvasBottom||k.canvasBottom,p=e.canvasLeft||k.canvasLeft,m=e.canvasRight||k.canvasRight,e=e.canvasTop||k.canvasTop,k=b.max,b=b.min,w=a.axisPlotLineContainer,z=a.axisPlotLineContainerTop,r=a.showCanvasBorder,n=g.components.paper,B=this.graphics.line||[],F=0,q=M(a.divLineColor,a.divLineAlpha),K=a.divLineThickness,u=a.divLineIsDashed?E(a.divLineDashLen,a.divLineDashGap,K):"none",L=M(a.zeroPlaneColor,
a.zeroPlaneAlpha),P=a.zeroPlaneThickness,v=a.animateAxis,Z,T,V,C,A,H,N,J,u={stroke:q,"stroke-width":K,"stroke-dasharray":u};2>S(this.getPixel(b)-this.getPixel(b+f))&&(a.lines.isDraw=0);if(a.lines.isDraw){F=g.get("config","animationObj");H=F.animObj;N=F.dummyObj;g=F.transposeAnimDuration;J=F.animType;T=this._getVisibleConfig();F=b+f*R((T.minValue-3*f-b)/f);T=b+f*R((T.maxValue+3*f-b)/f);F=F<b?b:F;T=T>k?k:T;A=w;C=V=F;for(F=0;V<=T;)0===a.showZeroPlane&&0===V||r&&(V===k||V===b)||(0===V&&V!==b&&V!==k&&
(u.stroke=L,u["stroke-width"]=P,a.showZeroPlaneOnTop&&!l&&(A=z)),Z=a.hasBreakPoints?this._getRealBreakValue(V):V,Z=c?X(["M",p,this.getPixel(Z),"L",m,this.getPixel(Z)],K):X(["M",this.getPixel(Z),e,"L",this.getPixel(Z),t],K),u.path=Z.path,u["shape-rendering"]=Z.isCrisped?"crisp":void 0,B[F]?(Z=B[F],A.appendChild(Z),g&&v?Z.animateWith(N,H,u,g,J):Z.attr(u)):(Z=n.path(u,A),B[F]=Z),0===V&&V!==b&&V!==k&&(u.stroke=q,u["stroke-width"]=K,A=w),F+=1),a.showZeroPlane&&0>V&&0<V+f?(V=0,C+=f):V<C?V=C:(V+=f,C+=f);
if(B[F])for(V=F;V<B.length;V++)B[V].attr({path:[]});this.graphics.line=B}else if(B[F])for(V=F;V<B.length;V++)B[V].attr({path:[]})},_drawAxisLine:function(){var a=this.config,b=a.axisRange,f=a.isVertical,c=a.isOpposit,e=a.canvas,g=this.chart,l=g.config,k=a.breakPoints,t=e.canvasBottom||l.canvasBottom,p=e.canvasLeft||l.canvasLeft,m=e.canvasRight||l.canvasRight,w=e.canvasTop||l.canvasTop,e=a.axisDimention||{},z=f?e.x:e.y,r=a.drawAxisLineWRTCanvas,n=g.jsonData.chart,e=g.components.paper,l=this.graphics.axisLine||
[],B=!1,F=0,K=b.max,q=b.min,b=b.tickInterval,L=a.axisAxisLineContainerBottom,P={},v=a.animateAxis,Z,S,T,P=1===u(n.showyaxisline,n.showyaxisline)?u(n.yaxislinethickness,n.pyaxislinethickness,1):0;if(a.showAxisLine){Z=g.get("config","animationObj");n=Z.animObj;T=Z.dummyObj;g=Z.transposeAnimDuration;Z=Z.animType;if(f)if(c?z=(r?m:z||m)+a.axisLineThickness/2:(z=r?p:z||p,z-=a.axisLineThickness/2),a.hasBreakPoints){P=["M",z,t,"L"];t=0;for(r=k.length;t<r;t+=1)p=this.getPixel(k[t].start),P.push(z,p,"M",z,
p-4,"L");P.push(z,w)}else S=X(["M",z,t,"L",z,w],a.axisLineThickness),P=S.path;else if(c?(z=r?w:z||w,z-=a.axisLineThickness/2):(z=r?t:z||t,z+=a.axisLineThickness/2),a.hasBreakPoints){P=["M",p-P,z,"L"];t=0;for(r=k.length;t<r;t+=1)p=this.getPixel(k[t].start),P.push(p,z,"M",p-4,z,"L");P.push(m,z)}else S=X(["M",p-P,z,"L",m,z],a.axisLineThickness),P=S.path;l[F]?(k=l[F],g&&v?k.animateWith(T,n,{path:P,stroke:a.axisLineColor,"stroke-linecap":"butt","stroke-width":a.axisLineThickness,"shape-rendering":S.isCrisped?
"crisp":void 0},g,Z):k.attr({path:P,"stroke-linecap":"butt",stroke:a.axisLineColor,"stroke-width":a.axisLineThickness,"shape-rendering":S.isCrisped?"crisp":void 0})):(k=e.path({path:P,"stroke-linecap":"butt",stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},L),l[F]=k);F+=1;if(a.drawTick&&a.tickLength)for(P={stroke:a.tickColor,"stroke-width":a.tickWidth},c=f?c?z+a.tickLength:z-a.tickLength:c?z-a.tickLength:z+a.tickLength,S=this._getVisibleConfig(),F=q+b*R((S.minValue-3*b-q)/b),S=q+b*R((S.maxValue+
3*b-q)/b),S=S>K?K:S,t=F<q?q:F,F=1;t<=S;t+=b)q=a.hasBreakPoints?this._getRealBreakValue(t):t,q=this.getPixel(q),P.path=f?"M"+z+" "+q+"L"+c+" "+q:"M"+q+" "+z+"L"+q+" "+c,l[F]?(q=l[F],g&&v?q.animateWith(T,n,P,g,Z):q.attr(P)):(q=e.path(P,L),l[F]=q),!B&&t<K&&t+b>K&&(t=K-b,B=!0),F+=1}if(l[F])for(t=F;t<l.length;t++)l[t].attr({path:[]});this.graphics.axisLine=l},_drawBreakPoints:function(){var a=this.config,b=a.isVertical,e=this.chart,c=e.config,g=a.breakPoints,c=a.canvas.canvasLeft||c.canvasLeft,l=e.components.paper,
k=this.graphics.brokeLine||[],t=e.graphics,p=a.animateAxis,m,w,z,r,n,B,F,q;if(a.showAxisLine)for(m=e.get("config","animationObj"),B=m.animObj,F=m.dummyObj,e=m.transposeAnimDuration,q=m.animType,m=0,r=g.length;m<r;m+=1)b?(w=c-a.axisLineThickness/2,z=this.getPixel(g[m].start),z=["M",w-4,z+4/3,"L",w+4,z-4/3,"M",w-4,z-8/3,"L",w+4,z-16/3]):z=["M",0,0],k[m]?(w=k[m],e&&p?w.animateWith(F,B,{path:z,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},e,q):w.attr({path:z,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness})):
(w=l.path({path:z,stroke:a.axisLineColor,"stroke-width":a.axisLineThickness},t.axisLineGroup),k[m]=w),n+=1;if(k[n])for(m=n;m<k.length;m++)k[m].attr({path:[]});this.graphics.brokeLine=k},_drawPlotBand:function(){var a=this.config,b=a.axisRange,e=a.canvas,c=this.chart,g=c.config,l=e.canvasLeft||g.canvasLeft,k=e.canvasTop||g.canvasTop,p=e.canvasHeight||g.canvasHeight,e=e.canvasWidth||g.canvasWidth,g=b.tickInterval,m=a.isVertical,w=a.isReverse,z=b.max,r=b.min,b=a.axisBandContainer,n=c.components.paper,
B=this.graphics.band||[],F=0,K=a.showAlternateGridColor,u=a.alternateGridColor,L=a.alternateGridAlpha,P=a.animateAxis,v,Z,T,V,E;2>S(this.getPixel(r)-this.getPixel(r+g))&&(a.band.isDraw=0);if(K&&a.band.isDraw){F=c.get("config","animationObj");K=F.animObj;V=F.dummyObj;c=F.transposeAnimDuration;E=F.animType;v=this._getVisibleConfig();F=r+g*R((v.minValue-3*g-r)/g);v=r+g*R((v.maxValue+3*g-r)/g);F=F<r?r:F;v=v>z?z:v;z=t((F-r)/g)+1;u={fill:q(M(u,L)),"stroke-width":0};r=this.getPVR();Z=L=F;for(F=0;L<v;z+=
1)0===z%2&&(T=a.showZeroPlane&&0>L&&0<L+g?L:L!==Z?Z-L:g,m?(u.x=l,u.y=this.getPixel(w?L:L+S(T)),u.width=e,u.height=S(T*r)):(u.x=this.getPixel(L),u.y=k,u.width=S(T*r),u.height=p),B[F]?(T=B[F],c&&P?T.animateWith(V,K,u,c,E):T.attr(u)):(T=n.rect(u,b),B[F]=T),F+=1),a.showZeroPlane&&0>L&&0<L+g?(L=0,Z+=g):L<Z?L=Z:(L+=g,Z+=g);if(B[F])for(L=F;L<B.length;L++)B[L].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0});this.graphics.band=B}else if(B[F])for(L=F;L<B.length;L++)B[L].attr({x:0,y:0,width:0,height:0,
fill:null,"stroke-width":0})},_drawTrendLine:function(){var a=this.config,b=a.canvas,f=this.chart,c=f.config,g=f.components,l=a.isOpposit,t=a.isVertical,p=f.is3D,m=a.axisIndex,w=g.numberFormatter,z=b.canvasBottom||c.canvasBottom,r=b.canvasLeft||c.canvasLeft,B=b.canvasRight||c.canvasRight,F=b.canvasTop||c.canvasTop,q=b.canvasHeight||c.canvasHeight,b=b.canvasWidth||c.canvasWidth,K=a.axisRange,c=K.max,K=K.min,R,L,v=a.trend.trendStyle,S=a.labelPadding,C=a.axisTrendContainerTop,A=a.axisTrendContainerBottom,
J=a.axisTrendLabelContainer,O=g.paper,Aa=this.components.trendObj||[],ua={fontFamily:v.fontFamily,fontSize:v.fontSize,lineHeight:v.lineHeight,fontWeight:v.fontWeight,fontStyle:v.fontStyle},ia=a.vTrendLines,xa=a.trendLines,ja=!0,ya=a.drawTrendLabels,W=a.axisDimention||{},Q=a.animateAxis,ea,ga,la,Ca,Ha,pa,La=0,Ja,Fa,ta,Ka,Ea,Da,Ga,Na,Ua,Pa,Sa;Ea=this._getVisibleConfig();a.hasBreakPoints&&(Ea.minValue=this._getRealBreakValue(Ea.minValue),Ea.maxValue=this._getRealBreakValue(Ea.maxValue));(ja=this._isZoomed())?
(R=P(this.getPixel(Ea.minValue),this.getPixel(Ea.maxValue)),L=Z(this.getPixel(Ea.minValue),this.getPixel(Ea.maxValue))):(Ea.minValue=K,Ea.maxValue=c);ia?Ua=l?(W.opposite||z)-(a.trendBottomPadding||0):(W.y||z)+(a.trendBottomPadding||0):(Ua=l?(W.opposite||r)+(S||0):(W.x||r)-(S||0),Pa=l?(W.x||B)+(S||0):(W.opposite||B)+(S||0));t?g.trendlines=[]:g.vTrendlines=[];if(l=xa||ia){ea=f.get("config","animationObj");S=ea.animObj;W=ea.dummyObj;f=ea.transposeAnimDuration;Sa=ea.animType;la=0;for(Ca=l.length;la<Ca;la+=
1)for(ea=0,ga=l[la].line&&l[la].line.length;ea<ga;ea+=1)Da=l[la].line[ea],Ja=t?"yAxis":"xAxis",Fa=w.getCleanValue(H(Da.startvalue,Da.value,0)),pa=Number(Da.endvalue)||void 0,Ha=k(U(H(Da.tooltext,l[0].tooltext,a.trendlineToolText))),Ha=n(Ha,[7,15,16,17,18,19],{startValue:Fa,startDataValue:w[Ja](Fa,m),endValue:pa||Fa,endDataValue:w[Ja](pa||Fa,m),axisName:a.axisName},Da),Fa>c||Fa<K||pa>c||pa<K||!(ia&&Fa>=Ea.minValue&&Fa<=Ea.maxValue||pa&&pa>=Ea.minValue&&pa<=Ea.maxValue||pa&&Fa<=Ea.minValue&&pa>=Ea.maxValue||
xa&&Fa>Ea.minValue&&Fa<=Ea.maxValue||pa&&pa>=Ea.minValue&&pa<=Ea.maxValue||pa&&Fa>=Ea.minValue&&pa<=Ea.maxValue)||(ia?(Ka=U(Da.displayvalue||""),Ga=this.getPixel(a.hasBreakPoints?this._getRelativeBreakValue(Fa):Fa),ta=u(Da.istrendzone,a.isTrendZone,1),Na=pa?this.getPixel(a.hasBreakPoints?this._getRelativeBreakValue(pa):pa):0,void 0!==pa&&""!==pa&&pa!==Fa&&ta?(ta={fill:M(H(Da.color,a.trendlineColor),H(Da.alpha,a.trendlineAlpha,40)),"stroke-width":0,path:["M",Ga,F,"L",Ga,z,"L",Na,z,"L",Na,F,"Z"]},g.vTrendlines.push({isTrendZone:!0,
x1:Ga<Na?Ga:Na,y1:F,x2:Ga>Na?Ga:Na,y2:z,tooltext:Ha}),Ka={fill:M(H(Da.color,v.color),H(Da.alpha,a.trendlineAlpha,99)),"vertical-align":V,text:Ka,x:Ga+(Na-Ga)/2,y:Ua}):(ta=u(Da.thickness,a.trendlineThickness,1),ta=ta>b?1:ta,Fa=pa?X(["M",Ga,F,"L",Na,z],ta):X(["M",Ga,F,"L",Ga,z],ta),g.vTrendlines.push({isTrendZone:!1,x1:Ga,y1:F,x2:pa?Na:Ga,y2:z,tolerance:5>ta?2.5:ta/2,tooltext:Ha}),ta={stroke:M(H(Da.color,a.trendlineColor),H(Da.alpha,a.trendlineAlpha,99)),"stroke-width":ta,"stroke-dasharray":H(Da.dashed,
a.trendlinesAreDashed)===N?E(u(Da.dashlen,a.trendlinesDashLen),u(Da.dashgap,a.trendlinesDashGap),ta):"none","shape-rendering":Fa.isCrisped?"crisp":void 0,path:Fa.path},Ka={fill:M(H(Da.color,v.color),H(Da.alpha,a.trendlineAlpha,99)),"vertical-align":V,text:Ka,x:pa?Na:Ga,y:Ua}),ja&&(!ya||Ka.x>R||Ka.x<L)&&(Ka.text="")):xa&&(Ka=U(Da.displayvalue||""),Ja=u(Da.valueonright,0),ta=u(Da.istrendzone,a.isTrendZone,0),Ga=this.getPixel(Fa),Na=pa?this.getPixel(pa):0,void 0!==pa&&""!==pa&&pa!==Fa&&ta?(ta={fill:M(H(Da.color,
a.trendlineColor),H(Da.alpha,a.trendlineAlpha,40)),"stroke-width":0,path:["M",r,Ga,"L",B,Ga,"L",B,Na,"L",r,Na,"Z"]},g.trendlines.push({isTrendZone:!0,x1:r,y1:Ga<Na?Ga:Na,x2:B,y2:Ga>Na?Ga:Na,tooltext:Ha,showontop:u(Da.showontop)}),Ka={"text-anchor":Ja?e:T,fill:M(H(Da.color,v.color),H(Da.alpha,a.trendlineAlpha,99)),text:Ka,x:Ja?Pa:Ua,y:Ga+(Na-Ga)/2}):(ta=u(Da.thickness,a.trendlineThickness,1),ta=ta>q?1:ta,Fa=pa?X(["M",r,Ga,"L",B,Na],ta):X(["M",r,Ga,"L",B,Ga],ta),g.trendlines.push({isTrendZone:!1,x1:r,
y1:Ga,x2:B,y2:pa?Na:Ga,tolerance:5>ta?2.5:ta/2,tooltext:Ha,showontop:u(Da.showontop)}),ta={stroke:M(H(Da.color,a.trendlineColor),H(Da.alpha,a.trendlineAlpha,99)),"stroke-width":ta,"stroke-dasharray":H(Da.dashed,a.trendlinesAreDashed)===N?E(u(Da.dashlen,a.trendlinesDashLen),u(Da.dashgap,a.trendlinesDashGap),ta):"none","shape-rendering":Fa.isCrisped?"crisp":void 0,path:Fa.path},Ka={"text-anchor":Ja?e:T,fill:M(H(Da.color,v.color),H(Da.alpha,a.trendlineAlpha,99)),text:Ka,x:Ja?Pa:Ua,y:pa?Ja?Na:Ga:Ga}),
ja&&(!ya||Ka.y>R||Ka.y<L)&&(Ka.text="")),pa=u(Da.showontop),pa=p||1!==pa&&1!==a.showTrendlinesOnTop?A:C,Aa[La]?(Ja=Aa[La].graphics.drawing,Fa=Aa[La].graphics.label,pa.appendChild(Ja),Aa[La].graphics.config.text=Ka.text,f&&Q?(Ja.animateWith(W,S,ta,f,Sa),Fa.animateWith(W,S,Ka,f,Sa)):(Ja.attr(ta),Fa.attr(Ka)),Fa.css(ua),Fa.tooltip(Da.valueToolText)):(Ja=O.path(ta,pa),Fa=O.text(Ka,ua,J),Fa.tooltip(Da.valueToolText),Aa[La]={},Aa[La].graphics={},Aa[La].graphics.drawing=Ja,Aa[La].graphics.label=Fa,Aa[La].graphics.config=
{text:Ka.text}),a.showTooltip&&Da.valueToolText?Fa.trackTooltip(!0):Fa.trackTooltip(!1),a.showTooltip&&Ha?Ja.tooltip(Ha).trackTooltip(!0):Ja.trackTooltip(!1),La+=1);if(Aa[La])for(ea=La;ea<Aa.length;ea++)Aa[ea].graphics.drawing.attr({path:["M",0,0]}),Aa[ea].graphics.label.attr({text:"","text-bound":[]});this.components.trendObj=Aa;for(ea=0;ea<La;ea++)Aa[ea].graphics.label.attr({"text-bound":Aa[ea].graphics.config.text?[v.backgroundColor,v.borderColor,v.borderThickness,v.borderPadding,v.borderRadius,
v.borderDash]:[]})}if(Aa[La])for(ea=La;ea<Aa.length;ea++)Aa[ea].graphics.drawing.attr({path:["M",0,0]}),Aa[ea].graphics.label.attr({text:"","text-bound":[]})},_drawCategory:function(){var b,d,f,c,g,l,k=this.config,t=k.axisDimention||{},m=k.canvas,w=this.chart,n=w.config,F=w.linkedItems.smartLabel,q,R,L=n.realtimeEnabled,P=k.isOpposit,v=k.labels,Z=v.style,X=k.isVertical,C=m.canvasBottom||n.canvasBottom,A=m.canvasLeft||n.canvasLeft,N=m.canvasRight||n.canvasRight,m=m.canvasTop||n.canvasTop,J=k.axisContainer,
O=k.labelPadding,U=w.components.paper,ua=X?t.x:t.y,t=t.opposite,ia=k.drawLabelOnBothSide,xa=this.components.categoryLabel||(this.components.categoryLabel=[]),ja=w.jsonData.categories,ya,W,Q,ea=function(a){return function(c){r.call(this,w,c,a)}},ga=0;q=0;var la=k.animateAxis,Ca,n=n.scrollEnabled,Ha,pa,La,Ja;Ca=function(a){for(var c=0,b=a.length;c<b;c++)if(a[c].label)return c};var Fa,ta,Ka,Ea,Da,Ga,Na,Ua,Pa,Sa,ab;Ha=k.isCategoryAnimate&&k.animateCategories?k.animateCategories:k.categories.category;
Ja=L?Ca(Ha):0;La=Ha?Ha.length-1:0;this._drawCategoryLine(Ha,Ja,La);if(k.labels.isDraw){ga=w.get("config","animationObj");Pa=ga.animObj;Sa=ga.dummyObj;Ca=ga.transposeAnimDuration;ab=ga.animType;X&&(ga=S(this.getPixel(0)-this.getPixel(1)),k.labelMaxH>ga&&(q=z(k.labelMaxH/ga)),q>k.labels.step&&(k.labels.step=q));Na=0<k.labels.step?k.labels.step:1;L&&(Na=1);pa=this.getPVR();Ua=this._isZoomed();ta=this._getVisibleConfig();q=(Ka=k.labels.rotation)?k.labelMaxH:k.labelMaxW;R=Ka?k.labelMaxW:k.labelMaxH;!k.drawLabelOnBothSide&&
k.drawLabelsOpposit&&(P=!P,ua=t);ja&&ja[0]&&"auto"!==k.xAxisLabelMode&&(ya=ja[0].font,W=ja[0].fontsize,Q=ja[0].fontcolor);ya={fontFamily:H(ya,Z.fontFamily),fontSize:H(W,Z.fontSize),fontWeight:H(Z.fontWeight),fontStyle:H(Z.fontStyle)};ya.lineHeight=a(ya);J.css(ya);ja=this._manageReuseableElement(this.components.categoryLabel,"text",J);J=Ja;for(ga=0;J<=La;J+=Na)if(W=Ha[J],!(!W||L&&W.stepSkipped||(d=this._getCategoryValue(W,J),0===u(W.showlabel,k.showLabels,1)||Ua&&(d<ta.minValue||d>ta.maxValue)||!("auto"!==
k.xAxisLabelMode&&"mixed"!==k.xAxisLabelMode||0!==k.showZeroPlane&&0!==k.showZeroPlaneValue||0!==d)||!k.labels.drawNormalVal&&(!k.labels.drawLimitVal||J!==Ja&&J!==La)||!k.labels.drawNormalVal&&J!==Ja&&J!==La||!(k.labels.drawLimitVal||J!==Ja&&J!==La)))){c=H(W.font,W.labelfont);g=H(W.fontsize,W.labelfontsize);l=H(W.fontbold,W.labelfontbold)?u(W.fontbold,W.labelfontbold,0)?"bold":"normal":void 0;Da=H(W.fontitalic,W.labelfontitalic)?u(W.fontitalic,W.labelfontitalic,0)?"italic":"normal":void 0;f=M(H(W.fontcolor,
W.labelfontcolor,Q,Z.color),u(W.labelalpha,k.rawAttr.labelFontAlpha,w.singleseries?void 0:W.alpha,100));c||g||l||Da?(b={},c&&(b.fontFamily=c),g&&(b.fontSize=g),l&&(b.fontWeight=l),Da&&(b.fontStyle=Da),b.lineHeight=g?a(b):ya.lineHeight):b=void 0;if(b||ya)c=(b||ya).lineHeight,-1!==c.indexOf("px")&&(Ea=c.replace(/px/i,""),Ea=parseFloat(Ea));!1===W.appliedSmartLabel&&(F.setStyle(W._ovrStyle||ya),c=F.getSmartText(W.oriLabel||W.label,q,R),W.oriLabel=W.oriLabel||W.label,W.label=c.text,W.appliedSmartLabel=
!0);Da=this.getPixel(d);X?(g=W.label||"",l=Number(W.labelPadding)||0,c={fill:f,"line-height":Ea,opacity:1,"text-anchor":P?e:T,text:g,cursor:!w.singleseries&&W.link||W.labellink||Z.labelLink?"pointer":"",x:P?(ua||N)+O:(ua||A)-O,y:l?Da+l:Da},ia&&(Ga={fill:f,"line-height":Ea,opacity:1,"text-anchor":P?T:e,text:g,cursor:!w.singleseries&&W.link||W.labellink||Z.labelLink?"pointer":"",x:P?(t||A)-O:(t||N)+O,y:l?Da+l:Da})):(g=W.label||"",l=Number(W.labelPadding)||0,c={fill:f,"line-height":Ea,opacity:1,text:g,
cursor:!w.singleseries&&W.link||W.labellink||Z.labelLink?"pointer":"",x:Da,y:P?(ua||m)-O:(ua||C)+O},ia&&(Ga={fill:f,"line-height":Ea,opacity:1,text:g,cursor:!w.singleseries&&W.link||W.labellink||Z.labelLink?"pointer":"",y:P?(t||C)+O:(t||m)-O}),Ka?(c["text-anchor"]=P?e:T,c["vertical-align"]="center",ia&&(Ga["text-anchor"]=P?T:e,Ga["vertical-align"]="center")):(c["text-anchor"]=B,c["vertical-align"]=P?p:V,ia&&(Ga["vertical-align"]=P?V:p,Ga["text-anchor"]=B)),l&&(c.y=P?c.y-l:c.y+l,ia&&(Ga.y=P?Ga.y+l:
Ga.y-l)));v.shiftX&&(c.x+=v.shiftX,ia&&(Ga.x+=v.shiftX));v.shiftY&&(c.y+=v.shiftY,ia&&(Ga.y+=v.shiftY));c.transform=U.getSuggestiveRotation(Ka,c.x,c.y);ia&&(Ga.transform=U.getSuggestiveRotation(Ka,Ga.x,Ga.y));xa[ga]||(xa[ga]={},xa[ga].graphics={},xa[ga].config={});f=xa[ga].graphics.label=ja.getElement("p"+d,c);f._applyAllAttr&&f.attr(c);b&&f._firstTimeDraw?(f.css(b),f._appliedCss=!0):f._applyAllAttr&&!f._firstTimeDraw&&b?(f.css({fontFamily:b&&b.fontFamily?b.fontFamily:ya.fontFamily,fontSize:b&&b.fontSize?
b.fontSize:ya.fontSize,fontWeight:b&&b.fontWeight?b.fontWeight:ya.fontWeight,fontStyle:b&&b.fontStyle?b.fontStyle:ya.fontStyle}),f._appliedCss=!0):f._appliedCss&&!b&&(f.removeCSS(),delete f._appliedCss);f._firstTimeDraw||(f._applyAllAttr?(g=c,g.visibility=K):g={x:c.x,y:c.y,"text-anchor":c["text-anchor"],"vertical-align":c["vertical-align"],text:g,transform:c.transform,visibility:K},Ca&&la&&!W.animate?f.animateWith(Sa,Pa,g,Ca,ab):f.attr(g));k.showTooltip&&W.labelTooltext?(f.tooltip(W.labelTooltext),
f.trackTooltip(!0)):f.trackTooltip(!1);ia&&(Fa=xa[ga].graphics.secondLabel=ja.getElement("s"+d,Ga),Fa.css(b),Fa._firstTimeDraw||(Fa._applyAllAttr?(g=Ga,g.visibility=K):g={x:Ga.x,y:Ga.y,transform:c.transform,visibility:K},Ca&&la&&!W.animate?Fa.animateWith(Sa,Pa,g,Ca,ab):Fa.attr(g)),k.showTooltip&&W.labelTooltext?(Fa.tooltip(W.labelTooltext),Fa.trackTooltip(!0)):Fa.trackTooltip(!1));f._firstTimeDraw&&f.click(ea("dataLabelClick")).hover(ea("dataLabelRollOver"),ea("dataLabelRollOut"));b=n?J:ga;f.data("eventArgs",
{link:!w.singleseries&&W.link||W.labellink||Z.labelLink,text:c.text,index:b});ia&&(Fa._firstTimeDraw&&Fa.click(ea("dataLabelClick")).hover(ea("dataLabelRollOver"),ea("dataLabelRollOut")),xa[ga].graphics.secondLabel.data("eventArgs",{link:!w.singleseries&&W.link||W.labellink||Z.labelLink,text:c.text,index:ga}));W.animate&&!X&&(b={x:c.x-W.leftShift*pa},W["delete"]&&(b.opacity=0),b.transform=U.getSuggestiveRotation(Ka,b.x,c.y),xa[ga].graphics.label.animateWith(Sa,Pa,b,Ca,ab),ia&&(b={x:Ga.x-W.leftShift*
pa},W["delete"]&&(b.opacity=0),b.transform=U.getSuggestiveRotation(Ka,b.x,Ga.y),xa[ga].graphics.secondLabel.animateWith(Sa,Pa,b,Ca,ab)));if(f._applyAllAttr||f._firstTimeDraw)u(W.borderthickness,W.labelborderthickness)&&u(W.borderthickness,W.labelborderthickness,1),b=W.bordercolor||W.labelbordercolor?M(W.bordercolor||W.labelbordercolor,u(W.borderalpha,W.labelborderalpha,W.alpha,W.labelalpha,100)):"",d=u(W.borderthickness,W.labelborderthickness),f=u(W.borderpadding,W.labelborderpadding),c=u(W.borderradius,
W.labelborderradius),g=W.bgcolor||W.labelbgcolor?M(W.bgcolor||W.labelbgcolor,u(W.bgalpha,W.labelbgalpha,W.alpha,W.labelalpha,k.rawAttr.labelFontAlpha,100)):"",l=u(W.borderdashed,W.labelborderdashed,0)?E(u(W.borderdashlen,W.labelborderdashlen,4),u(W.borderdashgap,W.labelborderdashgap,2),u(W.borderthickness,W.labelborderthickness,1)):0===u(W.borderdashed,W.labelborderdashed)?"none":Z.borderDash,W.label?(xa[ga].graphics.label.attr({"text-bound":[H(g,Z.backgroundColor),H(b,Z.borderColor),H(d,Z.borderThickness),
H(f,Z.borderPadding),H(c,Z.borderRadius),H(l,Z.borderDash)]}),ia&&xa[ga].graphics.secondLabel.attr({"text-bound":[H(g,Z.backgroundColor),H(b,Z.borderColor),H(d,Z.borderThickness),H(f,Z.borderPadding),H(c,Z.borderRadius),H(l,Z.borderDash)]})):(xa[ga].graphics.label.attr({"text-bound":[]}),ia&&xa[J].graphics.secondLabel.attr({"text-bound":[]}));ga+=1}this.components.categoryLabel=xa;ja.freeUnusedElement()}else if(xa[ga])for(J=ga;J<xa.length;J++)xa[J].graphics.label.attr({text:"","text-bound":[]})},
_getCategoryValue:function(a,b){return this.chart.usesXYinCategory?u(a.x,a.y,b):b},_drawCategoryLine:function(a,b,e){var c=this.config,g=c.canvas,l=this.chart,k=l.config,t=l.components,p=c.isVertical,m=g.canvasBottom||k.canvasBottom,w=g.canvasLeft||k.canvasLeft,z=g.canvasRight||k.canvasRight,g=g.canvasTop||k.canvasTop,k=c.axisPlotLineContainer,r=c.showCanvasBorder,n=c.xAxisLabelMode,F=t.paper,t=t.colorManager,B=this.components.categoryLabelLine||[],q=l.jsonData.categories,K,R,L,P,v,Z,S=0,T=c.animateAxis,
V,C,A,N,J,W,O,U;a||(a=c.isCategoryAnimate&&c.animateCategories?c.animateCategories:c.categories.category);b=b||0;e=e||a?a.length-1:0;if(c.drawPlotlines){S=l.get("config","animationObj");W=S.animObj;O=S.dummyObj;l=S.transposeAnimDuration;U=S.animType;this.getPVR();J=this._isZoomed();C=this._getVisibleConfig();q&&q[0]&&(K=q[0].verticallinecolor,R=q[0].verticallinealpha,L=q[0].verticallinethickness,P=q[0].verticallinedashed,v=q[0].verticallinedashlen,Z=q[0].verticallinedashgap);q=b;for(S=0;q<=e;q+=1)(V=
a[q])&&(!r||"auto"!==n&&"mixed"!==n||q!==e&&q!==b)&&(N=this._getCategoryValue(V,q),1!==Number(V.showverticalline)||J&&(N<C.minValue||N>C.maxValue)||(A=this.getPixel(N),N={stroke:M(H(V.linecolor,K,c.divLineColor,t.getColor("divLineColor")),H(V.linealpha,R,t.getColor("divLineAlpha"))),"stroke-width":u(V.linethickness,L,1)},N["stroke-dasharray"]=u(V.linedashed,P,0)?E(u(V.linedashLen,v,4),u(V.linedashgap,Z,2),N["stroke-width"]):"none",A=p?X(["M",w,A,"L",z,A],N["stroke-width"]):X(["M",A,g,"L",A,m],N["stroke-width"]),
N.path=A.path,N["shape-rendering"]=A.isCrisped?"crisp":void 0,B[S]?(A=B[S].graphics.line,A.attr(N),l&&T&&!V.animate?A.animateWith(O,W,N,l,U):A.attr(N)):(A=F.path(N,k),B[S]={},B[S].graphics={},B[S].config={},B[S].graphics.line=A),S+=1));this.components.categoryLabelLine=B}if(B[S])for(q=S;q<B.length;q++)B[q].graphics.line.attr({path:["M",0,0]})},_drawCategoryVline:function(){var a=this.config,b=a.axisRange,f=b.min,b=b.max,c=a.canvas,g=this.chart,l=g.config,k=l.style||{},t=g.components.paper,m=c.canvasBottom||
l.canvasBottom,w=c.canvasLeft||l.canvasLeft,z=c.canvasRight||l.canvasRight,r=c.canvasTop||l.canvasTop,n=c.canvasHeight||l.canvasHeight,c=c.canvasWidth||l.canvasWidth,F=a.categories.category,q=a.isVertical,K=g.linkedItems.smartLabel,R=a.axisPlotLineContainerTop,L=a.axisPlotLineContainer,P=a.vlineLabelContainer,v=a.isRelativeAxisInverse,Z={fontFamily:l.style.inCanfontFamily,fontSize:l.style.inCanfontSize,color:l.style.inCancolor,lineHeight:l.style.inCanLineHeight},C=this.components.categoryVline||[],
A=this.components.categoryVlineLabel||[],N=0,O=0,ua=a.animateAxis,ia,xa,ja,ya,W,Q,ea,ga,la,Ca,Ha,pa,La,Ja,Fa,ta,Ka,Ea,Da,Ga,Na,Ua,Pa,Sa,ab,Xa,Za,bb,eb,Va,Ya,$a;xa=a.isCategoryVlineAnimate&&a.animateCategoriesVline?a.animateCategoriesVline:a.categories.vline;ia=g.get("config","animationObj");bb=ia.animObj;eb=ia.dummyObj;g=ia.transposeAnimDuration;ia=ia.animType;ya=xa.length;ja=this.getPVR();Va=this._isZoomed();Ya=this._getVisibleConfig();for(ea=0;ea<ya;ea++)W=xa[ea],Q=U(W.label),ga=!!u(W.showlabelborder,
a.showVLineLabelBorder,1),la=!!u(W.showlabelbackground,1),Ca=H(W.labelhalign,q?e:B),"center"==Ca?Ca=B:"left"==Ca?Ca=e:"right"==Ca&&(Ca=T),Ha=H(W.labelvalign,q?B:p).toLowerCase(),Ha==B?Ha="center":Ha==V?Ha=p:Ha==p&&(Ha=V),pa=u(W.labelposition,0),La=u(W.lineposition,.5),Ja=u(W.showvlines,a.showVLines,1),Fa=u(W.alpha,a.vLineAlpha,80),ta=H(W.color,a.vLineColor).replace(/^#?/,"#"),la=la?H(W.labelbgcolor,a.vLineLabelBgColor,"333333").replace(/^#?/,"#"):J,Ua=H(W.labelcolor,a.vLineLabelColor,W.color,k.inCancolor,
a.vLineColor).replace(/^#?/,"#"),Ka=u(W.thickness,a.vLineThickness,1),Ea=!!Number(H(W.dashed,0)),Da=u(W.dashlen,5),Na=u(W.dashgap,2),Ga=Z.fontSize,parseInt(Ga.replace(/px/i,""),10),Ga=u(W.rotatelabel,a.rotateVLineLabels)?270:0,La=0>La||1<La?.5:La,pa=0>pa||1<pa?0:pa,K.useEllipsesOnOverflow(l.useEllipsesWhenOverflow),K.setStyle(Z),K.getOriSize(Q),ta=M(ta,Ja?Fa:"0"),Fa=1===Number(W.showontop)||1===a.showVLinesOnTop?R:L,Xa=!1,$a=W.animate&&!q?W.startIndex+1:W.startIndex,Pa=F[$a],Sa=F[$a+1],Pa?Sa||(ab=
F[0]&&F[0].x?b:a.oriCatLen,Xa=!0):(ab=F[0]&&F[0].x?f:-1,Xa=!0),Xa||(ab=u(Pa.x,Pa.y,$a),La*=ab-u(Sa.x,Sa.y,$a+1)),La=ab+S(La),Va&&(La<Ya.minValue||La>Ya.maxValue)||!W.animate&&(La<f||La>b)||W.animate&&(La<f||La>b+Za)||(La=this.getPixel(La),Da={opacity:1,stroke:ta,"stroke-width":Ka,"stroke-dasharray":Ea?E(Da,Na,Ka):"none"},Ea={opacity:1,text:Q,"text-anchor":Ca,"vertical-align":Ha,"text-bound":[]},Ua={fill:Ja?Ua:ta,fontSize:Z.fontSize,fontFamily:Z.fontFamily,lineHeight:Z.lineHeight,backgroundColor:la},
q?(Na=X(["M",w,La,"L",z,La],Ka),Da.path=Na.path,Ea.x=w+c*(v?1-pa:pa),Ea.y=La):(Na=X(["M",La,r,"L",La,m],Ka),Da.path=Na.path,Ea.x=La,Ea.y=r+n*(v?1-pa:pa)),Da["shape-rendering"]=Na.isCrisped?"crisp":void 0,Ca==e?Ea.x+=2:Ca==T&&(Ea.x-=2),Ha==V?Ea.Y+=2:Ha==p&&(Ea.Y-=2),C[N]?(Ca=C[N].graphics.drawing,Fa.appendChild(Ca),g&&ua&&!W.animate?Ca.animateWith(eb,bb,Da,g):Ca.attr(Da)):(Ca=t.path(Da,Fa),C[N]={},C[N].graphics={},C[N].config={},C[N].graphics.drawing=Ca),Q&&(Ea.transform=t.getSuggestiveRotation(Ga,
Ea.x,Ea.y),A[O]?(Ca=A[O].graphics.label,Ca.css(Ua),g&&ua&&!W.animate?Ca.animateWith(eb,bb,Ea,g,ia):Ca.attr(Ea)):(Ca=t.text(Ea,Ua,P).css(Ua),A[O]={},A[O].graphics={},A[O].config={},A[O].graphics.label=Ca)),W.animate&&!q&&(Za=W.leftShift*ja,Ca={x:Ea.x-Za},Na=X(["M",La-Za,r,"L",La-Za,m],Ka),Ka={path:Na.path,"shape-rendering":Na.isCrisped?"crisp":void 0},W["delete"]&&(Ca.opacity=0,Ca["text-bound"]=[],Ka.opacity=0),Q&&A[O].graphics.label.animateWith(eb,bb,Ca,g,ia),C[N].graphics.drawing.animateWith(eb,
bb,Ka,g,ia)),Q&&(A[O].graphics.label.attr({"text-bound":[la,Ja&&ga?ta:J,Ja&&ga?1:0,2,void 0,Ja&&ga?"solid":J]}),O++),N++);if(C[N])for(ea=N;ea<C.length;ea++)C[ea].graphics.drawing.attr({path:["M",0,0]});if(A[O])for(ea=O;ea<A.length;ea++)A[ea].graphics.label.attr({text:"","text-bound":[]});this.components.categoryVline=C;this.components.categoryVlineLabel=A},_drawCategoryPlotLine:function(){var a=this.config,b=a.isVertical,e=a.axisRange,c=e.max,g=e.min,l=a.canvas,k=this.chart,t=k.config,p=a.categories.category,
m=p.length,e=l.canvasBottom||t.canvasBottom,w=l.canvasLeft||t.canvasLeft,z=l.canvasRight||t.canvasRight,l=l.canvasTop||t.canvasTop,t=a.axisPlotLineContainer,r=k.components.paper,n=this.graphics.line||[],B=0,F=M(a.divLineColor,a.divLineAlpha),q=a.divLineThickness,K=a.divLineIsDashed?E(a.divLineDashLen,a.divLineDashGap,q):"none",u=a.animateAxis,L,P,F={stroke:F,"stroke-width":q,"stroke-dasharray":K};if(p[0]&&(void 0!==p[0].x||void 0!==p[0].y)){if(n[B]&&"categories"===a.xAxisLabelMode)for(c=B;c<n.length;c++)n[c].attr({path:[]})}else if(a.lines.isDraw&&
a.categoryNumDivLines){B=k.get("config","animationObj");p=B.animObj;K=B.dummyObj;k=B.transposeAnimDuration;P=B.animType;a.categoryDivLinesFromZero&&(g=0,c=m-1);m=S(c-g)/(a.categoryNumDivLines+1);m=0===m?1:m;L=this._getVisibleConfig();B=g+m*R((L.minValue-3*m-g)/m);L=g+m*R((L.maxValue+3*m-g)/m);B=(B<g?g:B)+m;L=(L>c?c:L)-m;c=B;for(B=0;c<=L;c+=m)g=a.hasBreakPoints?this._getRealBreakValue(c):c,g=b?X(["M",w,this.getPixel(g),"L",z,this.getPixel(g)],q):X(["M",this.getPixel(g),l,"L",this.getPixel(g),e],q),
F.path=g.path,F["shape-rendering"]=g.isCrisped?"crisp":void 0,n[B]?(g=n[B],k&&u?g.animateWith(K,p,F,k,P):g.attr(F)):(g=r.path(F,t),n[B]=g),B+=1;if(n[B])for(c=B;c<n.length;c++)n[c].attr({path:[]});this.graphics.line=n}else if(n[B])for(c=B;c<n.length;c++)n[c].attr({path:[]})},_drawCategoryPlotBand:function(){var a=this.config,b=a.axisRange,e=b.max,c=b.min,g=a.canvas,l=this.chart,k=l.config,p=a.categories.category,m=p.length,b=g.canvasLeft||k.canvasLeft,w=g.canvasRight||k.canvasRight,z=g.canvasTop||
k.canvasTop,r=g.canvasHeight||k.canvasHeight,g=g.canvasWidth||k.canvasWidth,k=a.isVertical,n=a.axisBandContainer,B=l.components.paper,F=this.graphics.band||[],K=0,u=a.showAlternateGridColor,L=a.alternateGridColor,P=a.alternateGridAlpha,v=a.categoryDivLinesFromZero,Z=a.animateAxis,T,V,E;if(p[0]&&(void 0!==p[0].x||void 0!==p[0].y)){if(F[K])for(P=K;P<F.length;P++)F[P].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0})}else if(u&&a.band.isDraw&&a.categoryNumDivLines){K=l.get("config","animationObj");
p=K.animObj;u=K.dummyObj;l=K.transposeAnimDuration;E=K.animType;v&&(c=0,e=m-1);a=S(e-c)/(a.categoryNumDivLines+1);a=0===a?1:a;K=this._getVisibleConfig();m=c+a*R((K.minValue-3*a-c)/a);v=c+a*R((K.maxValue+3*a-c)/a);m=m<c?c:m;v=v>e?e:v;c=t((m-c)/a);m+=a;L={fill:q(M(L,P)),"stroke-width":0};V=this.getPVR();P=m;for(K=0;P-a<v;c+=1,P+=a)0===c%2&&(T=P===m?a+S(this.getValue(0))+1:P===v?a+S(this.getValue(w-b)-e):a,k?(L.x=b,L.y=P===v?this.getPixel(P-S(a)):this.getPixel(P-S(T)),L.width=g,L.height=S(T*V)):(L.x=
P===v?this.getPixel(P-S(a)):this.getPixel(P-S(T)),L.y=z,L.width=S(T*V),L.height=r),F[K]?(T=F[K],l&&Z?T.animateWith(u,p,L,l,E):T.attr(L)):(T=B.rect(L,n),F[K]=T),K+=1);if(F[K])for(P=K;P<F.length;P++)F[P].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0});this.graphics.band=F}else if(F[K])for(P=K;P<F.length;P++)F[P].attr({x:0,y:0,width:0,height:0,fill:null,"stroke-width":0})},resetNumericAxisComponents:function(){var a=this.graphics.line,b=this.graphics.labels,e;if(a&&a[0])for(e=0;e<a.length;e+=
1)a[e].attr({path:[]});if(b&&b[0])for(e=0,a=b.length;e<a;e+=1)b[e].attr({text:""})},resetCategoryAxisComponents:function(){var a=this.graphics.line,b=this.components.categoryVline,e=this.components.categoryLabel,c=this.components.categoryLabelLine,g;if(a&&a[0])for(g=0;g<a.length;g+=1)a[g].attr({path:[]});if(e&&e[0])for(g=0,a=e.length;g<a;g+=1)e[g].graphics.label.attr({text:"","text-bound":[]}),e[g].graphics.secondLabel&&e[g].graphics.secondLabel.attr({text:"","text-bound":[]});if(c&&c[0])for(g=0,
a=c.length;g<a;g+=1)c[g].graphics.line.attr({path:["M",0,0]});if(b&&b[0])for(g=0,a=b.length;g<a;g+=1)b[g].graphics.drawing.attr({path:["M",0,0]}),b[g].graphics.label.attr({text:"","text-bound":[]})},placeAxis:function(a){return this.config.isVertical?this._placeVerticalAxis(a):this._placeHorizontalAxis(a)},_placeVerticalAxis:function(a){var b=this.config,e=this.chart,c=e.config,g=e.components,l=e.linkedItems.smartLabel,k=b.axisRange,t=b.minLabelWidthPercent,p=b.name,m=b.isOpposit,w=g.numberFormatter,
z=c.canvasHeight,r=b.labelPadding=u(b.rawAttr.axisValuePadding,4),n=u(b.rawAttr.axisNamePadding,5),B=b.useEllipsesWhenOverflow,F=b.name.style,q=b.trend.trendStyle,K=b.axisName,R=b.trendLines,L=b.drawLabelsOpposit,v=b.drawAxisNameOpposit,S=b.drawLabelOnBothSide,T=0,V=0,E=0,X=0,C=0,A={left:0,right:0},N="",J="",M=0,O;O=-1;var ea,ga,la,Q,Ha;t&&(O=t/100*c.width);c.viewPortConfig&&1!==c.viewPortConfig.scaleY&&(b._setRangeAgain=!0);b._setRangeAgain&&this._setTickIntervalAfterZoom();b.oriCanvasHeight=z;0>
r&&(b.labelPadding=2);M=b.drawTick&&b.tickLength?b.axisLineThickness+b.tickLength:b.axisLineThickness;b.showAxisLine?(b.labelPadding=u(r,2)+M,0>b.labelPadding&&(b.labelPadding=(0>b.axisLineThickness?0:M)+2),a-=b.axisLineThickness):(b.labelPadding=u(r,2),0>b.labelPadding&&(b.labelPadding=2));r=k.max;k=k.min;b.name.rotation=0;b.labels.step=b.labelStep;b.labels.isDraw=1;b.lines.isDraw=1;b.band.isDraw=1;b.labels.drawNormalVal=b.showDivLineValues;b.labels.drawLimitVal=b.showLimits;M=F.lineHeight;M=Number(M.replace(/px/i,
""));M<a&&(a-=M);1!==b.showLimits&&1!==b.showDivLineValues&&(b.labels.isDraw=0);t=b.drawLabels?this._getVMaxLabelDimention(S?a-2*b.labelPadding/2:a-b.labelPadding):{width:0,height:0};if(t.width+b.labelPadding>a&&!b.hasCategory||0===t.width)b.labels.isDraw=0;b.labels.isDraw&&(b.labelMaxW=t.width>O?t.width:O,b.labelMaxH=t.height,T=b.labelMaxW+b.labelPadding,V=S?2*T:T);if(b.drawTrendLines&&b.drawTrendLabels&&R){O=b.isPercent?g.numberFormatter.percentValue:b.isVertical?g.numberFormatter.yAxis:g.numberFormatter.xAxis;
l.useEllipsesOnOverflow(c.useEllipsesWhenOverflow);l.setStyle({fontSize:q.fontSize,fontFamily:q.fontFamily,lineHeight:q.lineHeight,fontWeight:q.fontWeight});c=0;for(q=R.length;c<q;c+=1)for(t=0,ga=R[c].line&&R[c].line.length;t<ga;t+=1)la=R[c].line[t],Q=w.getCleanValue(H(la.startvalue,la.value,0)),Ha=u(la.endvalue,Q),Q<=r&&Q>=k&&Ha<=r&&Ha>=k&&(b.isOpposit&&(la.valueonright=1),Q=u(la.valueonright,0),X=1===Q?la.endvalue||la.startvalue:la.startvalue||la.endvalue,ea=U(la.origText||la.displayvalue||X||""),
ea===X&&(ea=""+O.call(g.numberFormatter,ea)),Q?ea.length>J.length&&(J=ea):ea.length>N.length&&(N=ea));t=l.getOriSize(J);C=t.width+b.labelPadding;t=l.getOriSize(N);X=t.width+b.labelPadding;m?(C>V&&C>a&&(C=a),V=P(V,C+b.labelPadding),X>a-V&&(X=Z(X,a-V))):(X>V&&X>a&&(X=a),V=P(V,X+b.labelPadding),C>a-V&&(C=Z(C,a-V)));c=0;for(q=R.length;c<q;c+=1)for(t=0,ga=R[c].line&&R[c].line.length;t<ga;t+=1){la=R[c].line[t];Q=w.getCleanValue(H(la.startvalue,la.value,0));Ha=u(la.endvalue,Q);ea=1===Number(la.valueonright)?
la.origText||la.displayvalue||""+Ha||"":la.origText||la.displayvalue||""+Q||"";ea=U(""+ea);if(Number(ea)===Ha||Number(ea)===Q)ea=""+O.call(g.numberFormatter,ea);la.origText=ea;N=(Q=u(la.valueonright,0))?l.getSmartText(ea,C,e.canvasHeight,B):l.getSmartText(ea,V,e.canvasHeight,B);la.displayvalue=N.text;N.tooltext?la.valueToolText=N.tooltext:delete la.valueToolText}}a+=M;!b.drawAxisName||0>=a-V-C||""===K?(p.isDraw=!1,p.value=""):(l.setStyle({fontSize:F.fontSize,fontFamily:F.fontFamily,lineHeight:F.lineHeight,
fontWeight:F.fontWeight}),p.isDraw=!0,b.rotateAxisName?(b.name.rotation=m?90:270,e=l.getSmartText(K,z,a-V-C),p.value=K,b.nameMaxW=Z(e.height)):(e=l.getSmartText(K,a-V-C,z),p.value=K,b.nameMaxW=Z(e.width,a-V),b.nameMaxH=e.height,0<=b.axisNameWidth&&(b.nameMaxW=Z(b.nameMaxW,b.axisNameWidth))),E=b.nameMaxW+n);m?(S?(A.left+=P(T,X),A.right+=P(T,C)):L?(A.left+=P(T,X),A.right+=C):(A.left+=X,A.right+=P(T,C)),v?(b.axisNamePadding=A.left+n,A.left+=E):(b.axisNamePadding=A.right+n,A.right+=E)):(S?(A.left+=P(T,
X),A.right+=P(T,C)):L?(A.left+=X,A.right+=P(T,C)):(A.left+=P(T,X),A.right+=C),v?(b.axisNamePadding=A.right+n,A.right+=E):(b.axisNamePadding=A.left+n,A.left+=E));p.isDraw&&b.axisNamePadding+b.nameMaxW>a&&(b.axisNamePadding=a-b.nameMaxW);return A},_placeHorizontalAxis:function(a){var b=this.config,e=this.chart,c=e.config,g=e.components,l=e.linkedItems.smartLabel,k=b.axisRange,t=b.name,p=b.isOpposit,m=g.numberFormatter,w=b.drawLabelsOpposit,z=b.drawAxisNameOpposit,r=b.drawLabelOnBothSide,n=0,B=c.canvasWidth,
F=b.labelPadding=u(b.rawAttr.axisValuePadding,4),q=u(b.rawAttr.axisNamePadding,5),K=b.useEllipsesWhenOverflow,R=b.name.style,L=b.trend.trendStyle,v=b.axisName,Z=b.vTrendLines,S,T,V=0,E=0,X={top:0,bottom:0},A=0,C=0,N,J,M,O,ga,la;c.viewPortConfig&&1!==c.viewPortConfig.scaleX&&(b._setRangeAgain=!0);b._setRangeAgain&&this._setTickIntervalAfterZoom();0>F&&(b.labelPadding=2);C=b.drawTick&&b.tickLength?b.axisLineThickness+b.tickLength:b.axisLineThickness;b.showAxisLine?(b.labelPadding=u(F,2)+C,0>b.labelPadding&&
(b.labelPadding=(0>b.axisLineThickness?0:C)+2),a-=b.axisLineThickness):(b.labelPadding=u(F,2),0>b.labelPadding&&(b.labelPadding=2));F=k.max;k=k.min;b.labels.rotation=0;b.labels.step=b.labelStep;b.labels.isDraw=1;b.lines.isDraw=1;b.band.isDraw=1;b.labels.drawNormalVal=b.showDivLineValues;b.labels.drawLimitVal=b.showLimits;C=R.lineHeight;C=Number(C.replace(/px/i,""));C<a&&(a-=C);b.rotateLabels&&"stagger"!==b.labelDisplay&&"none"!==b.labelDisplay&&(b.labelDisplay="rotate");1!==b.showLimits&&1!==b.showDivLineValues&&
(b.labels.isDraw=0);O=b.drawLabels?this._getHMaxLabelDimention(r?(a-2*b.labelPadding)/2:a-b.labelPadding):{width:0,height:0};b.labels.rotation?O.width+b.labelPadding>a&&!b.hasCategory&&(b.labels.isDraw=0):O.height+b.labelPadding>a&&!b.hasCategory&&(b.labels.isDraw=0);b.labels.isDraw&&(b.labels.rotation?(b.labelMaxW=O.height,b.labelMaxH=O.width,n=O.width+b.labelPadding):(b.labelMaxW=O.width,b.labelMaxH=O.height,n=O.height+b.labelPadding),V=r?2*n:n);V=P(V,b.labelPadding);O=V<=a?a-V:a;if(b.drawTrendLines&&
b.drawTrendLabels&&Z&&b.isActive)for(la=b.isPercent?g.numberFormatter.percentValue:b.isVertical?g.numberFormatter.yAxis:g.numberFormatter.xAxis,l.useEllipsesOnOverflow(c.useEllipsesWhenOverflow),l.setStyle({fontSize:L.fontSize,fontFamily:L.fontFamily,lineHeight:L.lineHeight,fontWeight:L.fontWeight}),c=0,T=Z.length;c<T;c+=1)for(N=0,M=Z[c].line&&Z[c].line.length;N<M;N+=1)ga=Z[c].line[N],S=m.getCleanValue(H(ga.startvalue,ga.value,0)),J=u(ga.endvalue,S),S<=F&&S>=k&&J<=F&&J>=k&&(S=u(ga.valueonright,0),
S=1===S?ga.endvalue||ga.startvalue:ga.startvalue||ga.endvalue,J=U(ga.origText||ga.displayvalue||S||""),J===S&&(J=""+la.call(g.numberFormatter,J)),ga.origText=J,S=l.getSmartText(J,e.canvasWidth,L.lineHeight,K),J=S.height+2,0>O-J?ga.displayvalue="":(ga.displayvalue=S.text,A=A<S.height?S.height:A),S.tooltext?ga.valueToolText=S.tooltext:delete ga.valueToolText);V+=A;O=O-A+C;a+=C;!b.drawAxisName||0>=O||""===v?(t.isDraw=!1,t.value=""):(l.setStyle({fontSize:R.fontSize,fontFamily:R.fontFamily,lineHeight:R.lineHeight,
fontWeight:R.fontWeight}),t.isDraw=!0,e=l.getSmartText(v,B,O),t.value=v,b.nameMaxW=B,b.nameMaxH=e.height,E=e.height+q,b.axisNamePadding=q+V,b.axisNamePadding+e.height>a&&(b.axisNamePadding=a-e.height,E=e.height+b.axisNamePadding-V));p?(r?(X.bottom+=n+A,X.top+=n):w?X.bottom+=n+A:(X.top+=n,X.bottom+=A),b.trendBottomPadding=X.bottom-A+2,z?X.bottom+=E:X.top+=E):(r?(X.bottom+=n+A,X.top+=n):w?(X.top+=n,X.bottom+=A):X.bottom+=n+A,b.trendBottomPadding=X.bottom-A+2,z?X.top+=E:X.bottom+=E);return X},_getHMaxLabelDimention:function(b){function d(a,
c){switch(c.toLowerCase()){case "left":return Math.abs(e._getCustomPixel(a));case "right":return Math.abs(l.width-e._getCustomPixel(a))}}var e=this,c=e.config,g=e.chart,l=g.config,k=g.components,t=g.linkedItems.smartLabel,p=c.axisRange,m=c.labels,w=c.labelDisplay,z=c.slantLabel,n=m.style,r=c.maxLabelHeight,F=p.tickInterval,B=c.staggerLines,q=c.labelStep,K=l.canvasLeft,R=l.canvasRight,L=B-2,v,Z,V,T=p.max,X=p.min,q=0,E=c.categories&&c.categories.category,H=E&&E.length,N=g.distributedColumns,J=0,M,O,
U,ea={text:void 0,width:0,style:void 0},g=0,ga,la,Q,Ha,pa=function(){},La=pa,Ja=pa,Fa=pa,ta,Ka=function(a){for(var c=0,b=a.length;c<b;c++)if(a[c].label||a[c].orilabel)return c},Ea={},Da,Ga,Na=0,Ua=!1,Pa=0,Sa,ab,Xa=!1,Za,bb=parseInt(n.lineHeight.replace(/(\d+)px/,"$1"),10),eb=Number.POSITIVE_INFINITY,Va,Ya,$a=Number.POSITIVE_INFINITY;if(N)for(J=e.getPixel(p.min),p=0;p<H;p++)N=2*(e.getPixel(E[p].x)-J),E[p].plotWidth=N,J+=N;if(c.hasCategory&&(!E||0===E.length))return{width:0,height:0};"rotate"===w&&
(c.rotateLabels=1);c.hasCategory||(c.irregularCatAxis=!1);Z=0===L?1:1===L?1.5:L;t.useEllipsesOnOverflow(l.useEllipsesWhenOverflow);t.setStyle({fontSize:n.fontSize,fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight});if(c.irregularCatAxis){E.sort(function(a,c){return a.x-c.x});p=0;for(J=E.length;p<J;p++){M=E[p];if(void 0!==Sa){$a=Math.abs(M.x-Sa);L=S(e._getCustomPixel(X)-e._getCustomPixel(X+$a));t.setStyle(M.style||{});H=t.getOriSize("W");H=H.width;if(L<1.2*H){M.label="";$a=eb;
continue}Za._individualIWR=L;M._individualIWL=L;eb=$a}Za=M;Sa=M.x}$a===Number.POSITIVE_INFINITY&&($a=Math.floor(Math.min(M.x,T-M.x)),$a=Math.max($a,4));p=0;for(J=E.length;p<J;p++)M=E[p],p||(M._individualIWL=Infinity),p===J-1&&(M._individualIWR=Infinity),M.individualIW=Math.min(M._individualIWL,M._individualIWR);U=S(e._getCustomPixel(X)-e._getCustomPixel(X+$a));U=Math.min(2*d(E[0].x,"left"),2*d(E[J-1].x,"right"),U)}else U=S(e._getCustomPixel(X)-e._getCustomPixel(X+F));b<bb&&(b=bb);b=r?r:b;Ea.__root__=
{getHeight:function(a){return parseInt(E[a]._ovrStyle.lineHeight.replace(/(\d+)px/,"$1"),10)},getWidth:function(){return b},getCalculatedLabelStep:function(b){var d=0,h=b.length,g=Number.NEGATIVE_INFINITY,l={},k,p,m,w=0,z;if(c.irregularCatAxis)return c.labelStep;for(;d<h;d++)if(k=b[d])k.label||(k.label=""),p=k.oriLabel||k.label,O={fontSize:n.fontSize,fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight},w++,k.style=k.style||{},C(O,k.style),k=O.fontSize+O.fontFamily+O.lineHeight+
O.fontWeight,l[k]?p.length>l[k].label.length&&(l[k].label=p):l[k]={label:p,style:O};for(m in l)l.hasOwnProperty(m)&&(b=l[m].style,d=l[m].label,b.lineHeight=a(b),t.setStyle(b),c.rotateLabels&&(z=parseInt(b.lineHeight.replace(/(\d+)px/,"$1"),10)),ga=t.getSmartText(d,void 0,z),b=0===c.rotateLabels?60<ga.width?60:ga.width:ga.height,g=Math.max(b,g));g=Math.floor(S(e._getCustomPixel(T)-e._getCustomPixel(X))/g);l=Math.max(Math.ceil(w/g),c.labelStep);U=S(e._getCustomPixel(X)-e._getCustomPixel(X+l));return w<=
g?c.labelStep:l}};Ea._inProp={};Ea.getCopyById=function(a){var c=this.__root__,b=this._inProp.copyStore,d,b=b||{};if(d=b[a])return d;C(d=b[a]={},c);return d};if(c.hasCategory){switch(w){case "rotate":m.rotation=z?300:270;Ha=Ea.getCopyById("rotate");break;case "stagger":Ha=Ea.getCopyById("stagger");Ha.getHeight=function(a){var b;b=(a=c.categories.category[a])&&a.style||(a.style={});O={fontSize:n.fontSize,fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight};C(O,b);t.setStyle(O);
return t.getOriSize(a.label).height};Ha.getWidth=function(a){return a.individualIW?a.individualIW:2*U*Z-4};Fa=function(a){var c,d=a.length,e=0,f,g,l;t.setStyle(n);c=t.getOriSize("WWW").height;if(Math.floor(a[d-1]._cumulativeSum)<=Math.ceil(d*(c+2)))g=Math.floor(b/c),B=0>g-B?g:B;else{g=Math.floor(b/(c+4));do for(e=0,l=g,f=l-1,d=a.length;f<d;){d-f<g&&(f=d-1);c=a[f];e=c._cumulativeSum-e;if(~~e>-~b){Ua=!0;break}else Ua=!1;e=c._cumulativeSum;f+=l}while(g--&&Ua);g++;B=Math.min(B,g)}};La=function(a){var c,
b,d,e,f=0;e=0;for(d=a.length;e<d;e++)c=a[e],c.stepSkipped||(b=c&&c.style||{},(b=b.lineHeight)||(b=n.lineHeight),(V=f++%B)?c.labelPadding=b.replace(/px/i,"")*V:c.labelPadding=0)};break;case "none":Ha=Ea.getCopyById("none");Ha.getHeight=pa;Ja=Ha.getWidth=pa;c.rotateLabels&&(m.rotation=z?300:270,ab=b);Ha.getCalculatedLabelStep=function(){return c.labelStep};break;default:Ha=Ea.getCopyById("auto"),Ha.getHeight=function(){return b},Ha.getWidth=function(a){return a.individualIW?a.individualIW:U-8},Ja=function(a,
b){var d,e,f,h;if(!c.irregularCatAxis&&(t.setStyle(a),d=t.getOriSize("WWW"),d=d.width,d>=U&&0!==c.rotateLabels)){m.rotation=z?300:270;m.forceRotate=!0;Ha=Ea.getCopyById("rotate");la=Ha.getWidth;Q=Ha.getHeight;d=ea.width=0;for(e=b.length;d<e;d++)(f=b[d])&&(f.label||f.oriLabel)&&0!==u(f.showlabel,c.showLabels,1)&&!0!==f.stepSkipped&&(h=f._ovrStyle,t.setStyle({fontSize:h.fontSize,fontFamily:h.fontFamily,lineHeight:h.lineHeight,fontWeight:h.fontWeight}),ga=t.getSmartText(f.oriLabel,la(f),Q(d)),f.label=
ga.text,f.labelTooltext=ga.tooltext,f._sLabel=ga,ea.width<ga.width&&(ea.text=ga.text,ea.width=ga.width,ea.height=ga.height,ea.style=h));Da=ea.text}}}la=Ha.getWidth;Q=Ha.getHeight;q=c.labels.step=c.labelStep=Ha.getCalculatedLabelStep(E);p=ta=Ka(E);J=E.length;for(ta=0;p<J;p++,ta++)(M=E[p])&&(M.label||M.oriLabel||M.orilabel)&&0!==u(M.showlabel,c.showLabels,1)&&(Xa=!0,O={fontSize:n.fontSize,fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight},C(O,M.style),O.lineHeight=a(O),v=O.fontSize+
O.fontFamily+O.lineHeight+O.fontWeight,v!==Ga&&(t.setStyle(O),Ga=v),ta%q?(M.stepSkipped=!0,M.appliedSmartLabel=!1,Pa++):(M.stepSkipped=!1,M.appliedSmartLabel=!0,M._ovrStyle=O,v=E[p].plotWidth?P("rotate"===w?E[p].plotWidth-3:0,Q(p)):P("rotate"===w?e.getPixel(1)-e.getPixel(0)-3:0,Q(p)),r&&"rotate"!==w&&(v=Math.min(r,v)),ga=t.getSmartText(M.oriLabel||M.label,la(M),v),Na+=M._nLineHeight=ga.height+2,M._cumulativeSum=Na,M.oriLabel=M.oriLabel||M.label,M.label=ga.text,M.labelTooltext=ga.tooltext,M._sLabel=
ga,ea.width<ga.oriTextWidth&&(C(ea,ga),ea.style=O),g<ga.height&&(g=ga.height)));if(!Xa)return{height:0,width:0};Fa(E,Pa);La(E,Pa);Ja(ea.style,E);Da=ea.text||"";if("mixed"===c.xAxisLabelMode)for(r=c.isPercent?k.numberFormatter.percentValue:k.numberFormatter.xAxis,q=Da.length,p=X;p<=T;p+=F)Ga=c.hasBreakPoints?e._getRealBreakValue(p):p,Ga=""+r.call(k.numberFormatter,Ga,c.axisIndex),Ga.length>q&&(Da=Ga,q=Ga.length);ea.height=Math.max(g,ea.height||0);k=E.length;p=0;for(J=E.length;p<J&&(Va=E[p],!Va._sLabel);p++);
J=E.length;for(p=J-1;0<=p&&(Ya=E[p],!Ya._sLabel);p--);F=e._isZoomed();m.rotation||F||!Va._sLabel?(c.axisEndLabelDisplaySpace.left=0,c.axisEndLabelDisplaySpace.right=0):(c.axisEndLabelDisplaySpace.left=Math.max(K-(e._getCustomPixel(Va.x||0)-Va._sLabel.width/2),0),c.axisEndLabelDisplaySpace.right=Math.max(e._getCustomPixel(Ya.x||k-1)+Ya._sLabel.width/2-R,0));K=ea}else{r=c.numberFormatterFn?k.numberFormatter[c.numberFormatterFn]:c.isPercent?k.numberFormatter.percentValue:k.numberFormatter.xAxis;for(p=
X;p<=T;p+=F)Ga=c.hasBreakPoints?A(e._getRealBreakValue(p),10):A(p,10),Ga=""+r.call(k.numberFormatter,Ga,c.axisIndex),p===X&&(ta=Ga),p===T&&(v=Ga),Ga.length>q&&(Da=Ga,q=Ga.length);t.setStyle({fontSize:n.fontSize,fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight});K=t.getOriSize(Da||"");"rotate"===w&&(m.rotation=270);c.rotateLabels&&(m.rotation=z?300:270);m.rotation||(ta=t.getOriSize(ta||""),v=t.getOriSize(v||""),c.axisEndLabelDisplaySpace.left=ta.width/2+2,c.axisEndLabelDisplaySpace.right=
v.width/2+2)}c.hasCategory&&"stagger"===w&&(K.height=B*ea.height);K.width=ab?Math.min(ab,K.width):K.width;return K},_getVMaxLabelDimention:function(b){var d,e,c,g,l=this.config,k=this.chart,t=k.components,p=k.config,m=k.linkedItems.smartLabel,w=l.axisRange,z=l.labels.style,n=w.tickInterval,r=l.useEllipsesWhenOverflow;c=l.maxLabelWidthPercent;e=l.minLabelWidthPercent;var B=w.max;g=w.min;var w=0,F=k.jsonData.categories,k={height:0,width:0},q,K;m.useEllipsesOnOverflow(p.useEllipsesWhenOverflow);m.setStyle({fontSize:z.fontSize,
fontFamily:z.fontFamily,lineHeight:z.lineHeight,fontWeight:z.fontWeight});if(l.hasCategory){F&&(q=F[0].font,K=F[0].fontsize);c&&(t=c/100*p.width,t<b&&(b=t));e&&(p=e/100*p.width,p>b&&(b=p));t=l.categories.category;p=0;for(n=t.length;p<n;p++)B=t[p],0!==u(B.showlabel,l.showLabels)&&(d=H(B.font,B.labelfont,q,z.fontFamily),e=H(B.fontsize,B.labelfontsize,K,z.fontSize).replace(/px/i,"")+"px",c="normal"==z.fontWeight?u(B.fontbold,B.labelfontbold,0)?"bold":"normal":z.fontWeight,g="normal"==z.fontStyle?u(B.fontitalic,
B.labelfontitalic,0)?"italic":"normal":z.fontStyle,d={fontFamily:H(d,q,z.fontFamily),fontSize:H(e,K,z.fontSize),fontWeight:H(c,z.fontWeight),fontStyle:H(g,z.fontStyle)},d.lineHeight=a(d),m.setStyle(d),d=m.getSmartText(B.oriLabel||B.label,b,z.lineHeight,r),B.oriLabel=B.oriLabel||B.label,B.label=d.text,B.labelTooltext=d.tooltext,d.width>w&&(k=d,w=d.width));return k}b=l.numberFormatterFn?t.numberFormatter[l.numberFormatterFn]:l.isPercent?t.numberFormatter.percentValue:t.numberFormatter.yAxis;for(p=g;p<=
B;p+=n)z=l.hasBreakPoints?A(this._getRealBreakValue(p),10):A(p,10),z=""+b.call(t.numberFormatter,z,l.axisIndex),z.length>w&&(d=z,w=z.length);return m.getOriSize(d)},getLogAxisLimits:function(a,b,e,c,g,l){var k=function(a){return null===a||void 0===a||""===a||isNaN(a)?!1:!0},t=0,p=[],m,n,r,B,q,K,u,L;a===b&&(b-=b/100);k(e)&&Number(e)>=a?a=Number(e):(e=1<g?z(F(a)/F(g)):R(F(a)/F(g)),a=w(g,e),n=e);n||(n=1<g?z(F(a)/F(g)):R(F(a)/F(g)));k(c)&&Number(c)<=b?b=Number(c):(e=1<g?R(F(b)/F(g)):z(F(b)/F(g)),b=w(g,
e),m=e);m||(m=1<g?R(F(b)/F(g)):z(F(b)/F(g)));c=Number(String(F(g)/F(10)));l=Number(l)||(R(c)==c?8:4);1<g?(r=n,B=m):0<g&&1>g&&(r=m,B=n);c=n;for(m=r;m>=B;--m)if(r=w(g,c),b<=r&&a>=r&&(p[t++]={value:r,ismajor:!0}),m!=B){n=1<g?-1:1;r=w(g,c)-w(g,c+n);e=r/(l+1);for(k=1;k<=l;++k)r=w(g,c+n)+e*k,b<=r&&a>=r&&(p[t++]={value:r,ismajor:!1});1<g?c--:c++}for(u in p)for(L in p[u])"value"==L&&(q||(q=p[u][L]==b&&(p[u].isextreme=p[u].isMin=!0)),K||(K=p[u][L]==a&&(p[u].isextreme=p[u].isMax=!0)));q||(p[t++]={value:b,ismajor:!0,
isMin:!0,isextreme:!0});K||(p[t]={value:a,ismajor:!0,isMax:!0,isextreme:!0});return{Max:a,Min:b,divArr:p}},getCategoryLen:function(){return this.config.categories?this.config.categories.category.length:0},getCleanValue:function(a,b){var e=this.chart;return(this.components.numberFormatter||e.components.numberFormatter).getCleanValue(a,b)},dataLabels:function(a){var b=this.chart;return(this.components.numberFormatter||b.components.numberFormatter).dataLabels(a,this.config.axisIndex)},setNumberFormatter:function(a){this.components.numberFormatter=
a}},void 0,{setAdaptiveMin:0,adjustDiv:1,axisNameWidth:void 0,rotateAxisName:0,useEllipsesWhenOverflow:1,divLineColor:void 0,divLineAlpha:void 0,divLineThickness:void 0,divLineIsDashed:void 0,divLineDashLen:void 0,divLineDashGap:void 0,showAlternateGridColor:void 0,alternateGridColor:void 0,alternateGridAlpha:void 0,showZeroPlane:1,zeroPlaneAlpha:80,showZeroPlaneValue:1,showZeroPlaneOnTop:0,showAxisLine:void 0,axisLineThickness:void 0,axisLineAlpha:void 0,tickLength:void 0,trendlineToolText:void 0,
trendlineColor:"333333",trendlineThickness:1,trendlineAlpha:void 0,showTrendlinesOnTop:0,trendlinesAreDashed:0,trendlinesDashLen:5,trendlinesDashGap:2,isTrendZone:void 0,showTrendlines:1,showTrendlineLabels:1,showLabels:1,maxLabelHeight:void 0,rotateLabels:void 0,slantLabel:0,showAxisValues:1,showTooltip:1}])}]);Q.register("module",["private","modules.renderer.js-axis-log",function(){var b=this.hcLib,v=b.pluck,J=b.toPrecision,C=b.pluckNumber,H=b.graphics.convertColor,A=b.getDashStyle,b=b.preDefStr,
u=b.POSITION_START,a=b.POSITION_TOP,O=b.POSITION_BOTTOM,q=b.POSITION_END,b=Math,M=b.abs,U=b.log;Q.register("component",["axis","log",{configure:function(){var a=this.config,b=a.rawAttr,r=this.chart.components,k=r.numberFormatter,r=r.colorManager;Q.register("component",["axis","cartesian"]).prototype.configure.call(this);a.minorDivlinecolor=H(v(b.minorDivlinecolor,r.getColor("divLineColor")),C(b.minorDivLineAlpha,r.getColor("divLineAlpha")/2));a.axisMinValue=k.getCleanValue(b.axisMinValue);a.axisMaxValue=
k.getCleanValue(b.axisMaxValue);0>=a.axisMinValue&&(a.axisMinValue=void 0);0>=a.axisMaxValue&&(a.axisMaxValue=void 0);a.minorDivLineThickness=C(b.minorDivLineThickness,1)},setDataLimit:function(a,b){var r=this.config,k=r.axisRange,m=this.getLogAxisLimits,n=r.axisMaxValue,q=r.axisMinValue,r=m(C(a,n),C(b,q),n,q,r.base,r.numMinorDivLines);k.min=Number(J(r.Min,10));k.max=Number(J(r.Max,10));k.divArr=r.divArr||{}},_setTickIntervalAfterZoom:function(){var a=this.config,b=this.chart.config.viewPortConfig,
r=a.isVertical,k=a.axisRange,m=this.getLogAxisLimits,n=a.rawAttr,q,g;a.hasCategory||(r=r?b.scaleY:b.scaleX,b=C(n.axisrange?n.axisrange.max:k.max),g=C(n.axisrange?n.axisrange.min:k.min),n=1===r?a.axisMaxValue:k.max,q=1===r?a.axisMinValue:k.min,C(1===r?a.adjustDiv:0),a=m(b,g,n,q,a.base,a.numMinorDivLines),k.min=Number(J(a.Min,10)),k.max=Number(J(a.Max,10)),k.divArr=a.divArr||{})},getValue:function(a){var b,r,k=this.config,m=k.axisRange,n=k.isVertical;b=k.canvas;r=k.axisDimention||{};var q=this.chart.config,
g=q.viewPortConfig,l=r.axisLength||b.canvasWidth||q.canvasWidth,B=m.max,m=m.min,q=a/(r.axisLength||b.canvasHeight||q.canvasHeight);b=Math.log(m);r=Math.log(B);n?(a=k.isReverse?b-q*(r-b):r-q*(r-b),a=Math.pow(Math.E,a)):(n=l*g.scaleX/(B-m),a=k.isReverse?B-(g.x*g.scaleX+Number(a))/n:m+(g.x*g.scaleX+Number(a))/n);return a},getPixel:function(a){var b=this.config,r=this.chart.config,k=b.axisRange,m=r.viewPortConfig,n=r.canvasHeight,q=r.canvasWidth,g=r.canvasTop,l=r.canvasLeft,B=r.canvasBottom,r=r.canvasRight,
e=k.max,k=k.min,u=b.base,p=U(e)/u,v=U(k)/u;a=U(a)/u-v;m||(m={x:l,y:g,scaleX:1,scaleY:1});b.isVertical?(q=-n*m.scaleY/(p-v),b=b.isReverse?B-(a*q+(n*m.scaleY-m.y*m.scaleY)):g+(a*q+(n*m.scaleY-m.y*m.scaleY))):(q=q*m.scaleX/(U(e-k)/u),b=b.isReverse?r-(a*q-m.x*m.scaleX):l+(a*q-m.x*m.scaleX));return b},_drawPlotLine:function(){var a=this.config,b=a.axisRange,r=a.isVertical,k=this.chart,m=k.config,n=m.canvasLeft,q=m.canvasRight,g=m.canvasTop,m=m.canvasBottom,l=a.showCanvasBorder,B=b.max,e=b.min,u=a.axisPlotLineContainer,
p=k.components.paper,v=this.graphics.line||[],K=0,t=H(a.divLineColor,a.divLineAlpha),Z=a.divLineThickness,P=a.divLineIsDashed?A(a.divLineDashLen,a.divLineDashGap,Z):"none",S=H(a.zeroPlaneColor,a.zeroPlaneAlpha),z=a.zeroPlaneThickness,R=a.animateAxis,w,F,X,h,d,f,c,D,G;h={stroke:t,"stroke-width":Z,"stroke-dasharray":P};P={stroke:a.minorDivlinecolor,"stroke-width":a.minorDivLineThickness,"stroke-dasharray":P};if(a.lines.isDraw){w=k.get("config","animationObj");D=w.animObj;G=w.dummyObj;k=w.transposeAnimDuration;
w=w.animType;this._getVisibleConfig();d=b.divArr;f=d.length;for(b=0;b<f;b++)if(X=d[b],c=X.value,F=this.getPixel(c),X=X.ismajor?h:P,!l||c!==e&&c!==B)if(0!==a.showZeroPlaneValue||0!==a.showZeroPlane||0!==c)0===c&&1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(X.stroke=S,X["stroke-width"]=z),X.path=r?"M"+n+" "+F+"L"+q+" "+F:"M"+F+" "+g+"L"+F+" "+m,v[K]?(F=v[K],k&&R?F.animateWith(G,D,X,k,w):F.attr(X)):(F=p.path(X,u),v[K]=F),0===c&&1===a.showZeroPlane&&1===a.showZeroPlaneValue&&(X.stroke=t,X["stroke-width"]=
Z),K+=1;if(v[K])for(b=K;b<v.length;b++)v[b].attr({path:[]});this.graphics.line=v}else if(v[K])for(b=K;b<v.length;b++)v[b].attr({path:[]})},_drawLabel:function(){var b=this.config,v=this.chart,r=v.config,k=v.components,m=b.axisRange,n=b.isOpposit,L,g=b.labels,l=g.style,B=b.isVertical,e=m.max,V=m.min,p=r.canvasBottom,T=r.canvasLeft,K=r.canvasRight,r=r.canvasTop,t=b.axisContainer,Z=b.labelPadding,P=k.paper,S=b.labelMaxH,z=b.labelMaxW,R=b.axisStartPosition,w=this.graphics.labels||[],F=0,X=b.animateAxis,
h,d,f,c,D,G,A,C={fontFamily:l.fontFamily,fontSize:l.fontSize,fontWeight:l.fontWeight,fontStyle:l.fontStyle,lineHeight:l.lineHeight},H,J,wa,ca;l.lineHeight&&(G=l.lineHeight,-1!==G.indexOf("px")&&(G=G.replace("px",""),parseFloat(G)));if(b.labels.isDraw){h=v.get("config","animationObj");v=h.animObj;G=h.dummyObj;wa=h.animType;h=h.transposeAnimDuration;M(this.getPixel(V)-this.getPixel(V+m.tickInterval));ca=this._isZoomed();b.labels.step?L=m.tickInterval*b.labels.step:L=m.tickInterval;D=b.labels.rotation;
c=this._getVisibleConfig();l={fill:l.color,"font-size":l.fontSize};t.css(C);C=m.divArr;H=C.length;for(m=0;m<H;m++)if(J=C[m],A=J.value,d=this.getPixel(A),!(!J.ismajor&&!b.showMinorDivLineValues||f&&d>f-b.labelMaxH&&d<f+b.labelMaxH||ca&&(A<c.minValue||A>c.maxValue)||!b.labels.drawNormalVal&&(!b.labels.drawLimitVal||A!==V&&A!==e)||!b.labels.drawNormalVal&&A!==V&&A!==e||!(b.labels.drawLimitVal||A!==V&&A!==e)||0===b.showZeroPlaneValue&&0===b.showZeroPlane&&0===A)){if(1===b.showZeroPlane&&1===b.showZeroPlaneValue&&
(0>A&&0<A+L||0<A&&0>A-L))if(B){if(d+S>=this.getPixel(0)&&this.getPixel(0)>=d-S)continue}else if(d+z>=this.getPixel(0)&&this.getPixel(0)>=d-z)continue;B?(f=b.numberFormatterFn?k.numberFormatter[b.numberFormatterFn]:b.isPercent?k.numberFormatter.percentValue:k.numberFormatter.yAxis,f=""+f.call(k.numberFormatter,A),A=b.hasCategory?b.categories.category[m].labelPadding||0:0,l["text-anchor"]=n?u:q,l.text=f,l.x=n?(R||K)+Z:(R||T)-Z,l.y=A?d+A:d,f=l.y):(f=b.numberFormatterFn?k.numberFormatter[b.numberFormatterFn]:
b.isPercent?k.numberFormatter.percentValue:k.numberFormatter.xAxis,f=""+f.call(k.numberFormatter,A),A=b.hasCategory?Number(b.categories.category[m].labelPadding)||0:0,l.text=f,l.x=d,l.y=n?(R||r)-Z:(R||p)+Z,A&&(l.y+=A),D?(l["text-anchor"]=n?u:q,l["vertical-align"]="center"):l["vertical-align"]=n?O:a,f=l.x);g.shiftX&&(l.x+=g.shiftX);g.shiftY&&(l.y+=g.shiftY);l.transform=P.getSuggestiveRotation(D,l.x,l.y);w[F]?(d=w[F],h&&X?d.animateWith(G,v,l,h,wa):d.attr(l)):w[F]=P.text(l,t);F+=1}if(w[F])for(m=F;m<
w.length;m++)w[m].attr({text:""});this.graphics.labels=w}else if(w[F])for(m=F;m<w.length;m++)w[m].attr({text:""})},_drawPlotBand:function(){},_getVMaxLabelDimention:function(){var a=this.config,b=this.chart,r=b.components,k=b.linkedItems.smartLabel,m=a.labels.style,n=0,q=a.axisRange.divArr,g=q.length,l;k.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);k.setStyle({fontSize:m.fontSize,fontFamily:m.fontFamily,lineHeight:m.lineHeight,fontWeight:m.fontWeight});b=a.isPercent?r.numberFormatter.percentValue:
r.numberFormatter.xAxis;for(a=0;a<g;a++)m=q[a],m=""+b.call(r.numberFormatter,m.value),m.length>n&&(l=m,n=m.length);return k.getOriSize(l)},_getHMaxLabelDimention:function(){var a=this.config,b=this.chart,r=b.components,k=b.linkedItems.smartLabel,m=a.labels.style,n=0,q=a.axisRange.divArr,g=q.length,l;k.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);k.setStyle({fontSize:m.fontSize,fontFamily:m.fontFamily,lineHeight:m.lineHeight,fontWeight:m.fontWeight});b=a.isPercent?r.numberFormatter.percentValue:
r.numberFormatter.xAxis;for(a=0;a<g;a++)m=q[a],m=""+b.call(r.numberFormatter,m.value),m.length>n&&(l=m,n=m.length);return k.getOriSize(l)},getCleanValue:function(a){var b=null,r=this.chart.components.numberFormatter;a=M(a);0<a&&(b=r.getCleanValue(a));return b}},"cartesian",{base:10,showMinorDivLineValues:1,numMinorDivLines:void 0}])}]);Q.register("module",["private","modules.renderer.js-axis-polarcartesan",function(){var b=this.hcLib,v=b.graphics.convertColor,J=b.getDashStyle,C=Math.floor;Q.register("component",
["axis","polarcartesan",{_drawComponents:function(){var b=this.config;b.drawLabels&&this._drawLabel();b.drawPlotlines&&this._drawPlotLine()},_drawPlotLine:function(){var b=this.config,A=b.axisRange,u=A.tickInterval,a=this.chart,O=A.max,A=A.min,q=b.axisPlotLineContainer,M=a.components.paper,U=this.graphics.line||[],N=0,E=v(b.divLineColor,b.divLineAlpha),r=b.divLineThickness,k=b.divLineIsDashed?J(b.divLineDashLen,b.divLineDashGap,r):"none",m=v(b.zeroPlaneColor,b.zeroPlaneAlpha),n=b.zeroPlaneThickness,
L=b.animateAxis,g,l,B,e,V,p,T,K,t,k={stroke:E,"stroke-width":r,"stroke-dasharray":k};g=a.get("config","animationObj");K=g.animObj;t=g.dummyObj;a=g.transposeAnimDuration;g=g.animType;if(b.lines.isDraw){B=this._getVisibleConfig();N=A+u*C((B.minValue-3*u-A)/u);B=A+u*C((B.maxValue+3*u-A)/u);N=N<A?A:N;B=B>O?O:B;V=O=N;for(N=0;O<B;){if(O!==A&&(0!==b.showZeroPlane||0!==O)){0===O&&1===b.showZeroPlane&&(k.stroke=m,k["stroke-width"]=n);k.path=["M"];l=b.polarAxis;e=l.config.categories.category;p=e.length;for(e=
0;e<p;e++)T=l.getPixel(e,l.config.centerY-this.getPixel(O)),k.path.push(T.x,T.y,"L");k.path.pop();k.path.push("Z");U[N]?(l=U[N],a&&L?l.animateWith(t,K,k,a,g):l.attr(k)):(l=M.path(k,q),U[N]=l);0===O&&1===b.showZeroPlane&&(k.stroke=E,k["stroke-width"]=r);N+=1}b.showZeroPlane&&0>O&&0<O+u?(O=0,V+=u):O<V?O=V:(O+=u,V+=u)}if(U[N])for(O=N;O<U.length;O++)U[O].attr({path:[]});this.graphics.line=U}else if(U[N])for(O=N;O<U.length;O++)U[O].attr({path:[]})}},"cartesian"])}]);Q.register("module",["private","modules.renderer.js-axis-gauge",
function(){var b=this.hcLib,v=b.pluck,J=b.toPrecision,C=b.pluckNumber,H=b.graphics.convertColor,A=b.parseUnsafeString,u=b.preDefStr,a=u.POSITION_MIDDLE,O=u.POSITION_START,q=u.POSITION_TOP,M=u.POSITION_BOTTOM,U=u.POSITION_END,u=Math,N=u.round,E=u.min,r=u.max,k=u.abs,m=u.ceil,n=u.pow;Q.register("component",["axis","gauge",{configure:function(){var a=this.config,b=a.rawAttr,l=this.chart.components.colorManager;Q.register("component",["axis","cartesian"]).prototype.configure.call(this);a.majorTMColor=
H(v(b.majorTMColor,l.getColor("tickColor")),C(b.majorTMAlpha,100));a.tickValueStep=C(b.tickValueStep,1);a.tickValueStep=N(a.tickValueStep);0>=a.tickValueStep&&(a.tickValueStep=1);a.connectTickMarks=a.showTickMarks?C(b.connectTickMarks,1):0;a.showTickValues=C(b.showTickValues,a.showTickMarks);a.reverseScale=1==C(b.reverseScale,0);a.minorTMColor=H(v(b.minorTMColor,a.majorTMColor),C(b.minorTMAlpha,a.majorTMAlpha,100));a.minorTMHeight=a.showTickMarks?C(b.minorTMHeight,N(a.majorTMHeight/2)):0;a.tickValueDistance=
C(b.tickValueDistance,0)+2;a.upperLimitDisplay=A(b.upperLimitDisplay)||"";a.lowerLimitDisplay=A(b.lowerLimitDisplay)||"";a.drawTickMarkConnector=b.drawTickMarkConnector||0},setDataLimit:function(a,b){var l=this.config,k=l.axisRange,e=this.getGaugeAxisLimit,m=l.upperlimit,p=l.lowerlimit,n=l.setAdaptiveMin,r=l.majorTMNumber,l=l.adjustTM,t;t=!n;e=e.call(this,C(a,m),C(b,p),m,p,n,t,r,l);k.min=Number(J(e.min,10));k.max=Number(J(e.max,10));k.tickInterval=e.majorTickInt||1;k.numMajorTM=e.numMajorTM},_setTickIntervalAfterZoom:function(){},
_drawComponents:function(){var a=this.config;a.drawTick&&this._drawTick();a.drawLabels&&this._drawLabel();a.drawTrendLines&&this._drawTrendLine()},_drawTick:function(){var a=this.config,b=a.axisRange,l=b.tickInterval,k=a.isVertical,e=a.isOpposit,m=a.drawTick,p=a.drawTickMinor,n=a.canvas,r=this.chart,t=r.config,q=n.canvasBottom||t.canvasBottom,u=n.canvasLeft||t.canvasLeft,v=n.canvasRight||t.canvasRight,z=n.canvasTop||t.canvasTop,n=b.max,t=b.min,R=r.components.paper,w=this.graphics.tick||[],F=a.minorTMNumber,
b=b.numMajorTM||a.majorTMNumber,X=a.axisAxisLineContainer,h=0,d=a.animateAxis,f,c,D,G,A,E;D={stroke:a.majorTMColor,"stroke-width":a.majorTMThickness,"stroke-linecap":"round"};c={stroke:a.minorTMColor,"stroke-width":a.minorTMThickness,"stroke-linecap":"round"};if(a.lines.isDraw&&m){f=r.get("config","animationObj");r=f.animObj;A=f.dummyObj;m=f.transposeAnimDuration;f=f.animType;k?e?a.placeTicksInside?(e=v-a.tickMarkDistance,q=e-a.majorTMHeight,u=e-a.minorTMHeight):(e=v+a.tickMarkDistance,q=e+a.majorTMHeight,
u=e+a.minorTMHeight):a.placeTicksInside?(e=u+a.tickMarkDistance,q=e+a.majorTMHeight,u=e+a.minorTMHeight):(e=u-a.tickMarkDistance,q=e-a.majorTMHeight,u=e-a.minorTMHeight):e?a.placeTicksInside?(e=z+a.tickMarkDistance,q=e+a.majorTMHeight,u=e+a.minorTMHeight):(e=z-a.tickMarkDistance,q=e-a.majorTMHeight,u=e-a.minorTMHeight):a.placeTicksInside?(e=q-a.tickMarkDistance,q=e-a.majorTMHeight,u=e-a.minorTMHeight):(e=q+a.tickMarkDistance,q=e+a.majorTMHeight,u=e+a.minorTMHeight);a=a.drawTickMarkConnector?k?["M",
e,this.getPixel(t),"L",e,this.getPixel(n)]:["M",this.getPixel(t),e,"L",this.getPixel(n),e]:[];D.path=a;w[h]?(a=w[h],m&&d?a.animateWith(A,r,{path:D.path},m,f):a.attr({path:D.path})):(a=R.path(D,X),w[h]=a);h+=1;for(z=0;z<b;z+=1)if(E=z<b-1?J(Number(t+l*z),10):n,D.path=k?"M"+e+" "+this.getPixel(E)+"L"+q+" "+this.getPixel(E):"M"+this.getPixel(E)+" "+e+"L"+this.getPixel(E)+" "+q,w[h]?(a=w[h],m&&d?a.animateWith(A,r,D,m,f):a.attr(D)):(a=R.path(D,X),w[h]=a),h+=1,E!==n&&p)for(v=l/(F+1),G=1;G<=F&&!(E+v*G>=n);G+=
1)c.path=k?"M"+e+" "+this.getPixel(E+v*G)+"L"+u+" "+this.getPixel(E+v*G):"M"+this.getPixel(E+v*G)+" "+e+"L"+this.getPixel(E+v*G)+" "+u,w[h]?(a=w[h],m&&d?a.animateWith(A,r,c,m,f):a.attr(c)):(a=R.path(c,X),w[h]=a),h+=1;if(w[h])for(z=h;z<w.length;z++)w[z].attr({path:[]});this.graphics.tick=w}else if(w[h])for(z=h;z<w.length;z++)w[z].attr({path:[]})},_drawLabel:function(){var b=this.config,g=b.canvas,l=b.axisDimention||{},n=this.chart,e=n.config,r=n.components,p=n.linkedItems.smartLabel,u=b.axisRange,
K=b.isOpposit,t=b.isReverse,v=u.numMajorTM||b.majorTMNumber,P=b.labels,S=P.style,z=b.isVertical,R=u.max,w=u.min,F=g.canvasTop||e.canvasTop,X=g.canvasLeft||e.canvasLeft,h=g.canvasBottom||e.canvasBottom,g=g.canvasRight||e.canvasRight,d=b.axisLabelContainerTop,f=b.labelPadding,c=r.paper,D=b.labelMaxH,G=b.labelMaxW,l=z?l.x:l.y,E=this.graphics.labels||[],A=0,C=b.animateAxis,H,N,ca,ma,qa,va;va={fontFamily:S.fontFamily,fontSize:S.fontSize,fontWeight:S.fontWeight,fontStyle:S.fontStyle,lineHeight:S.lineHeight};
var ha,ra,ka,na;S.lineHeight&&(ma=S.lineHeight,-1!==ma.indexOf("px")&&(ma=ma.replace("px",""),ma=parseFloat(ma)));if(b.labels.isDraw){H=n.get("config","animationObj");ha=H.animObj;ra=H.dummyObj;n=H.transposeAnimDuration;H=H.animType;N=k(this.getPixel(w)-this.getPixel(w+u.tickInterval));z?(b.labelMaxH>N&&!b.hasCategory&&(qa=m(b.labelMaxH/N)),qa>b.labels.step&&(b.labels.step=qa)):(b.labelMaxW>N&&!b.hasCategory&&(qa=m(b.labelMaxW/N)),qa>b.labels.step&&(b.labels.step=qa),ka=X,na=e.width-g);qa=(z?G:N/
2)*b.labels.step;D=z?N/2:D;u=u.tickInterval;G=b.labels.step?b.labels.step:1;p.useEllipsesOnOverflow(e.useEllipsesWhenOverflow);p.setStyle({fontSize:S.fontSize,fontFamily:S.fontFamily,lineHeight:S.lineHeight,fontWeight:S.fontWeight});d.css(va);for(e=0;e<v;e+=G)if(N=e<v-G?J(Number(w+u*e),10):R,b.labels.drawNormalVal||b.labels.drawLimitVal&&(N===w||N===R))if(b.labels.drawNormalVal||N===w||N===R)if(b.labels.drawLimitVal||N!==w&&N!==R){va=r.numberFormatter.scale;if(N===w&&b.lowerLimitDisplay)va=p.getSmartText(b.lowerLimitDisplay,
qa,D+ma/2),ca=va.text;else if(N===R&&b.upperLimitDisplay)va=p.getSmartText(b.upperLimitDisplay,qa,D+ma/2),ca=va.text;else if(b.labels.drawNumericVal||N!==w&&N!==R)if(b.labels.drawNumericVal)ca=va.call(r.numberFormatter,N),va=p.getOriSize(""+ca);else continue;else if(va=p.getSmartText(va.call(r.numberFormatter,N),qa,D+ma/2),va.text===va.oriText)ca=va.text;else continue;z?(ca={fill:S.color,"line-height":ma,"text-anchor":K?O:U,text:ca,x:K?(l||g)+f:(l||X)-f,y:this.getPixel(N)},(!t&&N===w&&b.lowerLimitDisplay||
t&&N===R&&b.upperLimitDisplay)&&va.height>ma&&(ca["vertical-align"]=M),(!t&&N===R&&b.upperLimitDisplay||t&&N===w&&b.lowerLimitDisplay)&&va.height>ma&&(ca["vertical-align"]=q),b.placeValuesInside&&(ca["text-anchor"]=K?U:O)):(ca={fill:S.color,"line-height":ma,text:ca,"text-anchor":a,x:this.getPixel(N),y:K?(l||F)-f:(l||h)+f},(!t&&N===w||t&&N===R)&&va.width>2*ka&&(ca["text-anchor"]=O),(!t&&N===R||t&&N===w)&&va.width>2*na&&(ca["text-anchor"]=U),ca["vertical-align"]=b.placeValuesInside?K?q:M:K?M:q);P.shiftX&&
(ca.x+=P.shiftX);P.shiftY&&(ca.y+=P.shiftY);E[A]?(N=E[A],n&&C?N.animateWith(ra,ha,ca,n,H):N.attr(ca)):E[A]=N=c.text(ca,d);va&&va.tooltext?(N.tooltip(va.tooltext),N.trackTooltip(!0)):N.trackTooltip(!1);A+=1}if(E[A])for(e=A;e<E.length;e++)E[e].attr({text:""});this.graphics.labels=E}else if(E[A])for(e=A;e<E.length;e++)E[e].attr({text:""})},placeAxis:function(a){var b=this.chart,l=b.components,m=b.linkedItems.smartLabel,e=this.config,n=e.axisRange,p=e.isVertical,q=e.isOpposit,K=e.labels.style,t=n.tickInterval,
u=n.max,P=n.min,v,z=0,R=0,n="",w,F,X,h,d;w={left:0,right:0,top:0,bottom:0};if(0>=a)return w;e.labels.isDraw=!0;e.labels.drawNumericVal=!0;e.labels.drawNormalVal=e.showTickValues;e.labels.drawLimitVal=e.showLimits;e.lines.isDraw=!0;e.labels.step=e.tickValueStep;e.labelPadding=0;m.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);m.setStyle({fontSize:K.fontSize,fontFamily:K.fontFamily,lineHeight:K.lineHeight,fontWeight:K.fontWeight});e.drawTick&&e.showTickMarks&&e.lines.isDraw?(a-=e.tickMarkDistance,
R=r(e.minorTMHeight,e.majorTMHeight),e.placeTicksInside?(a+=e.tickMarkDistance,e.placeValuesInside&&(e.labelPadding=e.tickMarkDistance+R)):R>a?e.lines.isDraw=!1:(p?q?w.right+=R+e.tickMarkDistance:w.left+=R+e.tickMarkDistance:q?w.top+=R+e.tickMarkDistance:w.bottom+=R+e.tickMarkDistance,a-=R,e.placeValuesInside||(e.labelPadding=e.tickMarkDistance+R))):e.lines.isDraw=!1;a-=e.tickValueDistance;if(e.drawLabels&&(e.showTickValues||e.showLimits)){b=k(this._getCustomPixel(P)-this._getCustomPixel(P+t))/2;
e.labelPadding+=e.tickValueDistance;a-=e.tickValueDistance;v=l.numberFormatter.scale;for(F=P+t;F<u;F+=t)K=""+v.call(l.numberFormatter,J(F,10)),K.length>z&&(n=K,z=K.length);R=m.getOriSize(n);p?R.width>a&&(e.labels.drawNumericVal=!1,e.upperLimitDisplay||e.lowerLimitDisplay||(e.labels.isDraw=!1),n="",R=m.getOriSize(n)):R.height>a&&(e.labels.drawNumericVal=!1,e.upperLimitDisplay||e.lowerLimitDisplay||(e.labels.isDraw=!1),n="",R=m.getOriSize(n));z=p?a:b;K=p?b:a;e.showLimits?(F=v.call(l.numberFormatter,
u),h=v.call(l.numberFormatter,P),l=e.upperLimitDisplay||""+F,v=e.lowerLimitDisplay||""+h,d=m.getOriSize(l),d.width>R.width&&(X=m.getSmartText(l,z,K),l===F&&X.text===X.oriText||e.labels.drawNumericVal)&&(n=l,R=d),F=m.getOriSize(v),F.width>R.width&&(X=m.getSmartText(v,z,K),v===h&&X.text===X.oriText||e.labels.drawNumericVal)&&(n=v),""===n&&(n=m.getOriSize(e.upperLimitDisplay).width>m.getOriSize(e.lowerLimitDisplay).width?l:v,R=m.getOriSize(n))):e.labels.drawLimitVal=!1;if(p)m.getSmartText(n,z,K);else for(F=
P;F<=u;F+=t)if(P=m.getSmartText(n,z,K),""===P.text)z+=b;else break;P=m.getSmartText(n,z,K);e.labelMaxW=r(P.width,R.width);e.labelMaxH=r(P.height,R.height);!e.placeValuesInside&&e.labels.isDraw?p?(e.labelMaxW=E(e.labelMaxW,a),q?w.right+=e.labelMaxW+e.tickValueDistance:w.left+=e.labelMaxW+e.tickValueDistance):(e.labelMaxH=E(e.labelMaxH,a),q?w.top+=e.labelMaxH+e.tickValueDistance:w.bottom+=e.labelMaxH+e.tickValueDistance):e.labelPadding=-e.labelPadding}else e.labels.isDraw=!1;return e.spaceTaken=w},
getGaugeAxisLimit:function(a,b,l,k,e,m,p,r){var q=!0,t=!0,u=Number(l),v=Number(k),S,z;z={max:0,min:0,MajorTickInterval:1,numMajorTM:p};if(l&&k)u>a&&(a=u),v<b&&(b=v);else if(isNaN(a)&&(a=.9,t=!1),isNaN(b)&&(b=0,q=!1),a===b&&0===a&&(isNaN(u)||(a=u),isNaN(u)||0===u))a=.9;S=Math.max(Math.floor(Math.log(Math.abs(b))/Math.LN10),Math.floor(Math.log(Math.abs(a))/Math.LN10));p=n(10,S);2>Math.abs(a)/p&&2>Math.abs(b)/p&&(S--,p=n(10,S));S=n(10,Math.floor(Math.log(a-b)/Math.LN10));0<a-b&&10<=p/S&&(p=S);S=(Math.floor(a/
p)+1)*p;0>b?m=-1*(Math.floor(Math.abs(b/p))+1)*p:m?m=0:(m=Math.floor(Math.abs(b/p)-1)*p,m=0>m?0:m);e&&0>=a&&(S=0);z.max=!l||l&&u<a&&t?S:u;z.min=!k||k&&v>b&&q?m:v;z.min>z.max?z.min==v&&z.max==u?(k=z.min,z.min=z.max,z.max=k):z.min==v?z.max=z.min+1:z.max==u&&(z.min=z.max-1):z.min==z.max&&(z.max=z.min+1);z.range=Math.abs(z.max-z.min);z.MajorTickInterval=p;this.calcTickInterval(z,l,r);z.max>u&&u>=a&&(z.max=u,z.range=u-z.min,z.numMajorTM=Math.ceil(z.range/z.majorTickInt)+1);z.min<v&&v<=b&&(z.min=v,z.range=
z.max-v,z.numMajorTM=Math.ceil(z.range/z.majorTickInt)+1);return z},calcTickInterval:function(a,b,l){var k=0;-1!=a.numMajorTM&&2>a.numMajorTM&&(a.numMajorTM=2);b||b||-1===a.numMajorTM?(a.numMajorTM=-1==a.numMajorTM?5:a.numMajorTM,l&&(b=function(a,b){for(var g=0,l=1,k;;){k=a.numMajorTM+g*l;k=0===k?1:k;if(b.isRangeDivisible(a.range,k,a.MajorTickInterval))break;g=-1==l||g>a.numMajorTM?++g:g;if(25<g){k=a.numMajorTM;break}l=g<=a.numMajorTM?-1*l:1}a.numMajorTM=1<k?k:a.numMajorTM},l=a.numMajorTM,b(a,this),
2===a.numMajorTM&&(a.numMajorTM=l,1<a.range&&(a.range+=1,0>a.min?--a.min:a.max+=1),b(a,this),k=0))):(a.numMajorTM=-1==a.numMajorTM?5:a.numMajorTM,b=this.getDivisibleRange(a.min,a.max,a.range,a.numMajorTM,a.MajorTickInterval,!0),l=b-a.range,a.range=b,0<a.max?a.max+=l:a.min-=l);a.majorTickInt=(a.max-a.min+k)/(a.numMajorTM-1)},isRangeDivisible:function(a,g,l){a/=g-1;g=new b.MathExt;return g.numDecimals(a)>g.numDecimals(l)?!1:!0},getDivisibleRange:function(a,b,l,k,e,m){if(3>k)return l;a=Math.abs(b-a);
b=a/(k-1);this.isRangeDivisible(a,k,e)||(m&&Number(b)/Number(e)<(1<e?2:.5)&&(e/=10),b=(Math.floor(b/e)+1)*e,a=b*(k-1));return a}},"cartesian",{majorTMNumber:-1,majorTMHeight:6,showTickMarks:1,majorTMThickness:1,upperlimit:void 0,lowerlimit:void 0,adjustTM:1,minorTMNumber:4,minorTMThickness:1,tickMarkDistance:3,placeTicksInside:0,placeValuesInside:0}])}]);Q.register("module",["private","modules.renderer.js-axis-polarGauge",function(){var b=this.hcLib,v=b.pluck,J=b.toPrecision,C=b.pluckNumber,H=b.graphics.convertColor,
A=b.parseUnsafeString,u=b.getDashStyle,a=b.getValidValue,O=b.getFirstValue,b=b.preDefStr,q=b.POSITION_MIDDLE,M=b.POSITION_START,U=b.POSITION_TOP,N=b.POSITION_BOTTOM,E=b.POSITION_END,r=Math,k=r.sin,m=r.cos,n=r.abs,L=2*r.PI;Q.register("component",["axis","polarGauge",{configure:function(){var a=this.config,b=a.rawAttr;Q.register("component",["axis","gauge"]).prototype.configure.call(this);a.upperLimitDisplay=b.upperLimitDisplay||"";a.lowerLimitDisplay=b.lowerLimitDisplay||"";a.polarPadding=4},_drawComponents:function(){var a=
this.config;a.drawTick&&this._drawTick();a.drawLabels&&this._drawLabel();a.drawTrendLines&&this._drawTrendLine()},getAxisPosition:function(a,b){return this.getPixel(a,b)},getPixel:function(a,b){var n=this.config,e=n.axisRange,r=e.min,p=e.max-r,q=n.startAngle||L/2,K=n.totalAngle||L/2,t=n.centerX||0,e=n.centerY||0;b=C(b,n.radius,0);n=q+K/p*(a-r);r=t+b*m(n);e+=b*k(n);return{x:r,y:e,angle:n}},getAngle:function(a){var b=this.config,k=b.axisRange,e=k.min;return(b.startAngle||L/2)+(b.totalAngle||L/2)/(k.max-
e)*(a-e)},placeAxis:function(a){var b=this.config,k=this.chart,e=k.components,m=k.linkedItems.smartLabel,p=b.axisRange,r=b.labels.style,q=p.tickInterval,t=b.upperLimitDisplay,u=b.lowerLimitDisplay,v=p.max,S=p.min,z=0,R,p={left:0,right:0,top:0,bottom:0};m.useEllipsesOnOverflow(k.config.useEllipsesWhenOverflow);m.setStyle({fontSize:r.fontSize,fontFamily:r.fontFamily,lineHeight:r.lineHeight,fontWeight:r.fontWeight});b.labels.isDraw=1;b.labels.drawNormalVal=1;b.labels.drawLimitVal=1;b.lines.isDraw=1;
b.labels.step=b.tickValueStep;b.labelPadding=0;if(b.drawLabels&&b.showTickValues&&0<a){n(this.getPixel(S)-this.getPixel(S+q));b.labelPadding+=b.tickValueDistance;k=e.numberFormatter.scale;for(r=S;r<=v;r+=q)S=""+k.call(e.numberFormatter,J(r,10)),S.length>z&&(R=S,z=S.length);e=m.getOriSizeImprove(R,!0);if(e.width>a/2)return b.labels.isDraw=!1,p;if(b.showLimits){if(""!==t||""!==u)t=m.getOriSizeImprove(t,!0),t.width>e.width&&(e=t),t=m.getOriSizeImprove(u,!0),t.width>e.width&&(e=t)}else b.labels.drawLimitVal=
!1;b.labelMaxW=e.width;b.labelMaxW>a/2&&(b.labelMaxW=a/2);b.labelMaxH=e.height;b.placeValuesInside?b.labelPadding=-b.labelPadding:(p.right+=b.labelMaxW+b.tickValueDistance,p.left+=b.labelMaxW+b.tickValueDistance,p.top+=b.labelMaxH+b.tickValueDistance,p.bottom+=b.labelMaxH+b.tickValueDistance)}else b.labels.isDraw=!1;return p},_drawLabel:function(){var a=this.config,b=this.chart,k=b.components,e=a.axisRange,m=b.linkedItems.smartLabel,p,n=a.labels.style,r=a.labelPadding||0,t=!1,u=a.radius,v=C(a.gaugeOuterRadius,
u),u=C(a.gaugeInnerRadius,u),S=a.centerX,z=a.centerY,R=a.placeValuesInside,w=a.labelMaxH,F=a.labelMaxW,X=e.max,h=e.min,d=a.axisLabelContainerTop,f=k.paper,c=this.graphics.labels||[],D=0,G=a.animateAxis,L,A,H;L={fontFamily:n.fontFamily,fontSize:n.fontSize,fontWeight:n.fontWeight,fontStyle:n.fontStyle,lineHeight:n.lineHeight};var O,wa,ca;n.lineHeight&&(H=n.lineHeight,-1!==H.indexOf("px")&&(H=H.replace("px",""),H=parseFloat(H)));m.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);m.setStyle({fontSize:n.fontSize,
fontFamily:n.fontFamily,lineHeight:n.lineHeight,fontWeight:n.fontWeight});if(a.labels.isDraw){D=b.get("config","animationObj");O=D.animObj;wa=D.dummyObj;b=D.transposeAnimDuration;ca=D.animType;a.labels.step?p=e.tickInterval*a.labels.step:p=e.tickInterval;d.css(L);e=h;for(D=0;e<=X;e+=p)if(a.labels.drawNormalVal||a.labels.drawLimitVal&&(e===h||e===X))if(a.labels.drawNormalVal||e===h||e===X)if(a.labels.drawLimitVal||e!==h&&e!==X)if(0!==a.showZeroPlaneValue||0!==a.showZeroPlane||0!==e)L=k.numberFormatter.scale,
e===h&&a.lowerLimitDisplay?(L=m.getSmartText(a.lowerLimitDisplay,F,w),L=L.text):e===X&&a.upperLimitDisplay?(L=m.getSmartText(a.upperLimitDisplay,F,w),L=L.text):L=L.call(k.numberFormatter,J(e,10)),A=R?this.getPixel(e,u+r-a.polarPadding):this.getPixel(e,v+r+a.polarPadding),L={fill:n.color,"line-height":H,text:L,x:A.x,y:A.y},A.x>S-10&&A.x<S+10&&A.y<z?(L["text-anchor"]=q,L["text-valign"]=R?U:N):A.x>S-10&&A.x<S+10&&A.y<z?(L["text-anchor"]=q,L["text-valign"]=R?N:U):(L["text-anchor"]=A.x<S?R?M:E:R?E:M,L["text-valign"]=
"center"),c[D]?(A=c[D],b&&G?A.animateWith(wa,O,L,b,ca):A.attr(L)):c[D]=f.text(L,d),D+=1,!t&&e<X&&e+p>X&&(e=X-p,t=!0);if(c[D])for(e=D;e<c.length;e++)c[e].attr({text:""});this.graphics.labels=c}else if(c[D])for(e=D;e<c.length;e++)c[e].attr({text:""})},_drawTick:function(){var a=this.config,b=a.axisRange,k=b.tickInterval,e=a.drawTick,m=a.drawTickMinor,p=this.chart,n=p.components,q=b.max,t=b.min,u=a.radius,b=C(a.gaugeOuterRadius,u),u=C(a.gaugeInnerRadius,u),n=n.paper,v=this.graphics.tick||[],L=a.minorTMNumber,
z=0,R=a.animateAxis,w=!1,F,X,h,d,f,c,D,G,A,E;G=a.axisAxisLineContainer;d={stroke:a.majorTMColor,"stroke-width":a.majorTMThickness,"stroke-linecap":"round"};h={stroke:a.minorTMColor,"stroke-width":a.minorTMThickness,"stroke-linecap":"round"};if(a.lines.isDraw&&e){z=p.get("config","animationObj");p=z.animObj;A=z.dummyObj;e=z.transposeAnimDuration;E=z.animType;X=this._getVisibleConfig();z=t+k*r.floor((X.minValue-3*k-t)/k);X=t+k*r.floor((X.maxValue+3*k-t)/k);X=X>q?q:X;t=z<t?t:z;for(z=0;t<=X;t+=k){a.placeTicksInside?
(F=this.getPixel(t,u),f=this.getPixel(t,u+a.majorTMHeight)):(F=this.getPixel(t,b),f=this.getPixel(t,b-a.majorTMHeight));d.path="M"+F.x+" "+F.y+"L"+f.x+" "+f.y;v[z]?(F=v[z],e&&R?F.animateWith(A,p,d,e,E):F.attr(d)):(F=n.path(d,G),v[z]=F);z+=1;if(t<q&&m)for(f=k/(L+1),D=1;D<=L;D+=1)c=t+f*D,a.placeTicksInside?(F=this.getPixel(c,u),c=this.getPixel(c,u+a.minorTMHeight)):(F=this.getPixel(c,b),c=this.getPixel(c,b-a.minorTMHeight)),h.path="M"+F.x+" "+F.y+"L"+c.x+" "+c.y,v[z]?(F=v[z],e&&R?F.animateWith(A,p,
h,e,E):F.attr(h)):(F=n.path(h,G),v[z]=F),z+=1;!w&&t<q&&t+k>q&&(t=q-k,w=!0)}if(v[z])for(t=z;t<v.length;t++)v[t].attr({path:[]});this.graphics.tick=v}else if(v[z])for(t=z;t<v.length;t++)v[t].attr({path:[]})},_drawPlotBand:function(){},_drawPlotLine:function(){},_drawTrendLine:function(){var b,l,k,e,m,p,n,K,t,Z,P,L,z,R,w,F,X,h,d=this.config,f=d.axisRange,c=f.max,f=f.min,D=this.chart;L=D.config;var G=D.linkedItems.smartLabel,J=D.components,N=J.colorManager,Ia=d.scaleFactor,sa=d.centerX||0,wa=d.centerY||
0,ca=d.canvas.canvasWidth||L.canvasWidth,ma=d.trend.trendStyle,qa=d.axisTrendContainerTop,va=d.axisTrendContainerBottom,ha=d.axisTrendLabelContainer,ra=J.paper,ka=this.components.trendObj||[],na={fontFamily:ma.fontFamily,fontSize:ma.fontSize,lineHeight:ma.lineHeight,fontWeight:ma.fontWeight,fontStyle:ma.fontStyle},da=d.trendPoints,oa=r.PI/180,Y={},Q=d.animateAxis,fa,Aa,ua;fa=0;var ia;e={};K={};k={};m={};var xa={},ja,ya,W,Ma,ea,ga,la,Ca,Ha,pa,La,Ja;if(da){fa=D.get("config","animationObj");pa=fa.animObj;
La=fa.dummyObj;D=fa.transposeAnimDuration;Ja=fa.animType;G.useEllipsesOnOverflow(L.useEllipsesWhenOverflow);G.setStyle(na);fa=Aa=0;for(ua=da.point.length;Aa<ua;Aa+=1)ja=da.point[Aa],ya=C(ja.startvalue,ja.value),W=C(ja.endvalue,ya),ia=ya!==W,ya<=c&&ya>=f&&W<=c&&W>=f&&(b=ya,l=W,a(A(ja.markertooltext)),k=a(A(ja.displayvalue),ia?"":J.numberFormatter.scale(ya)),C(ja.showontop,d.ticksBelowGauge,d.ticksBelowGraph,1),e=v(ja.color,N.getColor("trendLightColor")),m=C(ja.alpha,99),p=C(ja.thickness,1),n=ja.dashed?
u(ja.dashlen||2,ja.dashgap||2,ja.thickness||1):"",K=C(ja.usemarker,0),t=H(v(ja.markercolor,ja.color,N.getColor("trendLightColor")),100),Z=H(v(ja.markerbordercolor,ja.bordercolor,N.getColor("trendDarkColor")),100),P=C(C(ja.markerradius)*Ia,5),L=O(ja.markertooltext),z=C(C(ja.trendvaluedistance,d.trendValueDistance)*Ia,d.polarPadding),R=C(ja.valueinside,d.placeValuesInside,0),w=C(ja.showborder,1),F=H(v(ja.bordercolor,ja.color,N.getColor("trendDarkColor")),C(ja.borderalpha,ja.alpha,100)),X=C(C(ja.radius)*
Ia),h=C(C(ja.innerradius)*Ia),Ma=Math.cos(89.99*oa),ea=-Ma,X=C(X,d.gaugeOuterRadius),h=C(h,ia?Math.max(d.gaugeInnerRadius-15,0):d.gaugeInnerRadius),ga=this.getPixel(ya,X),la=this.getPixel(ya,h),Ca=ga.x,ga=ga.y,Ha=la.x,la=la.y,W=this.getAngle(W),ya=this.getAngle(ya),ia?(ya>W&&(ya+=W,W=ya-W,ya-=W),e={fill:H(e,m),"stroke-width":w?p:0,stroke:F,"stroke-dasharray":n},m={ringpath:[sa,wa,X,h,ya,W]}):(e={"stroke-width":w?p:0,stroke:F,"stroke-linecap":"round","stroke-dasharray":n},m={path:["M",Ca,ga,"L",Ha,
la]}),K?(K={fill:t,"stroke-width":1,stroke:Z},xa={polypath:[3,Ca,ga,P,(-ya+Math.PI)/oa,0]}):K={},""!==k?(Y=(l+b)/2,W=this.getAngle(Y),b=Math.cos(W),l=Math.sin(W),P=G.getOriSize(k).width,R?(Y=h-2-z,z=b>Ma?E:b<ea?M:q):(Y=X+2+z,z=b>Ma?M:b<ea?E:q),Ca=sa+Y*b,ga=wa+Y*l,Y=G.getOriSize(k).height,Y=G.getSmartText(k,ca,Y),Ca=ca<Ca+P?ca-P/2:Ca<P?P/2:Ca,P>ca&&(Ca=ca/2),k={fill:ja.color||ma.color,text:Y.text,"text-anchor":z,"vertical-align":U,x:Ca,y:ga},ja=Y.height,ga=b>Ma||b<ea?ga+(-(ja/2)+.4*ja*l*(R?-1:1)):
R?ga+-(0>l?0:ja):ga+-(0<l?0:ja),k.y=ga):k={text:""},ka[fa]?(R=ka[fa].graphics.drawing,ia=ka[fa].graphics.label,Ma=ka[fa].graphics.marker,R.attr(e),Ma.attr(K),Ma.tooltip(L),ia.css(na).tooltip(Y.oriText),D&&Q?(R.animateWith(La,pa,m,D,Ja),Ma.animateWith(La,pa,xa,D,Ja),ia.animateWith(La,pa,k,D,Ja)):(R.attr(m),Ma.attr(xa),ia.attr(k)),d.showTooltip&&Y.oriText?ia.trackTooltip(!0):ia.trackTooltip(!1),Ma.trackTooltip(d.showTooltip&&""!==L)):(R=ia?ra.ringpath(sa,wa,X,h,ya,W,va):ra.path(qa),ia=ra.text(k,na,
ha),Ma=ra.polypath(qa),R.attr(e),R.attr(m),Ma.attr(K),Ma.attr(xa),Ma.tooltip(L),ia.tooltip(Y.oriText),d.showTooltip&&Y.oriText?ia.trackTooltip(!0):ia.trackTooltip(!1),Ma.trackTooltip(d.showTooltip&&""!==L),ka[fa]={},ka[fa].graphics={},ka[fa].graphics.drawing=R,ka[fa].graphics.label=ia,ka[fa].graphics.marker=Ma),fa+=1);this.components.trendObj=ka}if(ka[fa])for(Aa=fa;Aa<ka.length;Aa++)ka[Aa].graphics.drawing.attr({path:["M",0,0]}),ka[Aa].graphics.marker.attr({polypath:["M",0,0]}),ka[Aa].graphics.label.attr({text:"",
"text-bound":[]});for(Aa=0;Aa<fa;Aa++)ka[Aa].graphics.label.attr({"text-bound":[ma.backgroundColor,ma.borderColor,ma.borderThickness,ma.borderPadding,ma.borderRadius,ma.borderDash]})}},"gauge",{trendPoints:void 0,ticksBelowGauge:void 0,ticksBelowGraph:void 0,trendValueDistance:void 0}])}]);Q.register("module",["private","modules.renderer.js-axis-polar",function(){var b=this.hcLib,v=b.pluck,J=b.pluckNumber,C=b.setLineHeight,H=b.graphics.convertColor,A=b.getDashStyle,u=b.plotEventHandler,b=b.preDefStr,
a=b.POSITION_MIDDLE,O=b.POSITION_START,q=b.POSITION_TOP,M=b.POSITION_BOTTOM,U=b.POSITION_END,b=Math,N=b.sin,E=b.cos,r=b.min,k=b.PI,m=2*k;Q.register("component",["axis","polar",{configure:function(){var a=this.config,b=a.rawAttr,g=this.chart.components.colorManager;Q.register("component",["axis","cartesian"]).prototype.configure.call(this);a.gridLineColor=H(v(b.radarSpikeColor,g.getColor("divLineColor")),J(b.radarSpikeAlpha,b.radarInLineAlpha,g.getColor("divLineAlpha")));a.radarBorderColor=H(v(b.radarBorderColor,
g.getColor("divLineColor")),J(b.radarBorderAlpha,100));a.radarFillColor=H(v(b.radarFillColor,g.getColor("altHGridColor")),J(b.radarFillAlpha,g.getColor("altHGridAlpha")))},_drawComponents:function(){var a=this.config;a.drawLabels&&a.hasCategory&&this._drawCategory()},getAxisPosition:function(a,b){return this.getPixel(a,b)},getPixel:function(a,b){var g=this.config,l=g.axisRange,k=l.min,e=l.max-k+1,r=g.startAngle||-(m/4),p=g.totalAngle||-m,q=g.centerX||0,l=g.centerY||0;b=J(b,g.radius,0);g=r+p/e*(a-
k);k=q+b*E(g);l+=b*N(g);return{x:k,y:l}},getAngle:function(a,b){var g=this.config;return(180/k*Math.atan2(b-(g.centerY||0),(g.centerX||0)-a)+450)%360},_drawCategory:function(){var b=this.config,k=this.chart,g=b.isOpposit,l=b.labels,m=l.style,e=b.axisContainer,r=b.axisPlotLineContainer,p=k.components.paper,E=this.components.categoryLabel||[],K=this.graphics.radarBorder||[],t=k.jsonData.categories,Z=b.categories.category,P=b.labelPadding,S,z,R,w,F,X,h=b.gridLineColor,d=b.gridLineWidth,f=function(a){return function(c){u.call(this,
k,c,a)}},c=0,D=b.centerX,G=b.centerY,aa=b.animateAxis,N,Ia,sa,wa,ca,ma,qa,va,ha,ra,ka;va=J(b.radius,0);sa=Z?Z.length-1:0;N=k.get("config","animationObj");ha=N.animObj;ra=N.dummyObj;Ia=N.transposeAnimDuration;ka=N.animType;w={stroke:b.radarBorderColor,fill:b.radarFillColor,"stroke-width":b.radarBorderThickness,path:["M"]};if(0!==b.showRadarBorder){for(c=N=0;N<=sa;N++)ma=this.getPixel(N,va),w.path.push(ma.x,ma.y,"L");w.path.pop();w.path.push("Z")}K[0]?Ia&&aa?K[0].animate(w,Ia):K[0].attr(w):K[0]=p.path(w,
r);this.graphics.radarBorder=K;if(b.labels.isDraw){t&&(S=t[0].font,z=t[0].fontsize,R=t[0].fontcolor);for(c=N=0;N<=sa;N++)if(K=Z[N],ma=J(K.x,K.y,N),b.labels.drawNormalVal||b.labels.drawLimitVal&&(0===N||ma===sa))if(b.labels.drawNormalVal||0===ma||ma===sa)if(b.labels.drawLimitVal||0!==ma&&ma!==sa){t=v(K.font,K.labelfont);w=v(K.fontsize,K.labelfontsize);F=J(K.fontbold,K.labelfontbold,0)?"bold":void 0;X=J(K.fontitalic,K.labelfontitalic,0)?"italic":void 0;ca=H(v(K.fontcolor,K.labelfontcolor,R,m.color),
J(K.labelalpha,b.rawAttr.labelFontAlpha,100));t={fontFamily:v(t,S,m.fontFamily),fontSize:v(w,z,m.fontSize),fontWeight:v(F,m.fontWeight),fontStyle:v(X,m.fontStyle)};t.lineHeight=C(t);t.lineHeight&&(wa=t.lineHeight,-1!==wa.indexOf("px")&&(wa=wa.replace(/px/i,""),wa=parseFloat(wa)));w=this.getPixel(ma,va+P);X=w.x;qa=w.y;w=K.label||"";if(0===J(K.showlabel,1)||0===b.showLabels)w="";F=Number(K.labelPadding)||0;ca={fill:ca,"line-height":wa,"font-size":m.fontSize,text:w,cursor:K.link?"pointer":"",x:X,y:qa};
F&&(ca.y+=F);ca["vertical-align"]=g?M:q;0===N?(ca["text-anchor"]=a,ca["vertical-align"]=M):N===(sa+1)/2?(ca["text-anchor"]=a,ca["vertical-align"]=q):(ca["text-anchor"]=N<(sa+1)/2?U:O,ca["vertical-align"]="center");ma=this.getPixel(ma,va);F={stroke:h,"stroke-width":d,"stroke-dasharray":"none",path:["M",D,G,"L",ma.x,ma.y]};l.shiftX&&(ca.x+=l.shiftX);l.shiftY&&(ca.y+=l.shiftY);E[c]?(ma=E[c].graphics.line,Ia&&aa?ma.animateWith(ra,ha,F,Ia,ka):ma.attr(F),F=E[c].graphics.label,Ia&&aa?F.animateWith(ra,ha,
ca,Ia,ka):F.attr(ca),F.css(t),b.showTooltip&&K.tooltext?(F.tooltip(K.tooltext),F.trackTooltip(!0)):F.trackTooltip(!1)):(ma=p.path(F,r),F=p.text(ca,t,e),b.showTooltip&&K.tooltext?(F.tooltip(K.tooltext),F.trackTooltip(!0)):F.trackTooltip(!1),F.click(f("datalabelclick")).hover(f("dataLabelRollOver"),f("dataLabelRollOut")),E[c]={},E[c].graphics={},E[c].config={},E[c].graphics.line=ma,E[c].graphics.label=F);E[c].config.labelBox={label:w,lineHeight:t.lineHeight,border:J(K.borderthickness,K.labelborderthickness)?
J(K.borderthickness,K.labelborderthickness,1)+"px solid":"",borderColor:K.bordercolor||K.labelbordercolor?H(K.bordercolor||K.labelbordercolor,J(K.borderalpha,K.labelborderalpha,K.alpha,K.labelalpha,100)):"",borderThickness:J(K.borderthickness,K.labelborderthickness),borderPadding:J(K.borderpadding,K.labelborderpadding),borderRadius:J(K.borderradius,K.labelborderradius),backgroundColor:K.bgcolor||K.labelbgcolor?H(K.bgcolor||K.labelbgcolor,J(K.bgalpha,K.labelbgalpha,K.alpha,K.labelalpha,100)):"",borderDash:J(K.borderdashed,
K.labelborderdashed,0)?A(J(K.borderdashlen,K.labelborderdashlen,4),J(K.borderdashgap,K.labelborderdashgap,2),J(K.borderthickness,K.labelborderthickness,1)):0===J(K.borderdashed,K.labelborderdashed)?"none":m.borderDash};E[c].graphics.label.data("eventArgs",{link:K.link||K.labellink||m.labelLink,text:ca.text,index:c});c+=1}if(E[c])for(N=c;N<E.length;N++)E[N].graphics.line.attr({path:["M",0,0]}),E[N].graphics.label.attr({text:"","text-bound":[]});this.components.categoryLabel=E}else if(E[c])for(N=c;N<
E.length;N++)E[N].graphics.line.attr({path:["M",0,0]}),E[N].graphics.label.attr({text:"","text-bound":[]});for(N=0;N<c;N++)b=E[N].config.labelBox,b.label?E[N].graphics.label.attr({"text-bound":[v(b.backgroundColor,m.backgroundColor),v(b.borderColor,m.borderColor),v(b.borderThickness,m.borderThickness),v(b.borderPadding,m.borderPadding),v(b.borderRadius,m.borderRadius),v(b.borderDash,m.borderDash)]}):E[N].graphics.label.attr({"text-bound":[]})},placeAxis:function(a,b){var g,l,k,e,m,p,q=this.config,
u=this.chart,t=u.linkedItems.smartLabel,Z=q.labels.style,P=u.jsonData.categories,S=q.labelPadding=J(q.rawAttr.axisValuePadding,10),z=q.useEllipsesWhenOverflow,R=0,w=0,F=0,X=0,h=b/2,d=b/2,f=a/2,c=a/2,D,G;D=q.categories.category;q.labels.isDraw=1;q.labels.drawNormalVal=1;q.labels.drawLimitVal=1;if(q.showLabels)for(P&&(m=P[0].font,p=P[0].fontsize),q=0,P=D.length;q<P;q++)G=D[q],g=G.font,l=G.fontsize,k=G.fontbold?"bold":"normal",e=G.fontitalic?"italic":"normal",g={fontFamily:v(g,m,Z.fontFamily),fontSize:v(l,
p,Z.fontSize),fontWeight:v(k,Z.fontWeight),fontStyle:v(e,Z.fontStyle)},l=C(g),t.useEllipsesOnOverflow(u.config.useEllipsesWhenOverflow),t.setStyle(g),0===q?(g=t.getSmartText(G.label,a,r(l,h),z),G.oriLabel=G.label,G.label=g.text,g.width+=S,g.height+=S,g.height>R&&(X=R=g.height)):q===P/2?(g=t.getSmartText(G.label,a,r(l,d),z),G.oriLabel=G.label,G.label=g.text,g.width+=S,g.height+=S,g.height>X&&(X=g.height)):q<P/2?(g=t.getSmartText(G.label,c,l,z),G.oriLabel=G.label,G.label=g.text,g.width+=S,g.height+=
S,g.width>w&&(w=g.width)):(g=t.getSmartText(G.label,f,l,z),G.oriLabel=G.label,G.label=g.text,g.width+=S,g.height+=S,g.width>F&&(F=g.width));return{top:R,left:w,right:F,bottom:X}}},"cartesian",{axisValuePadding:10,gridLineWidth:1,showRadarBorder:1,radarBorderThickness:2}])}]);Q.register("module",["private","modules.renderer.js-dataset-column",function(){var b=this.window,v=this.hcLib,J=v.parseConfiguration,C="rgba(192,192,192,"+(/msie/i.test(b.navigator.userAgent)&&!b.opera?.002:1E-6)+")",b=v.TOUCH_THRESHOLD_PIXELS,
H=v.CLICK_THRESHOLD_PIXELS,A=v.extend2,u=v.pluck,a=v.pluckNumber,O=v.toRaphaelColor,q=v.graphics.convertColor,M=v.HUNDREDSTRING,U=v.plotEventHandler,N=v.hasTouch?b:H,E=v.getValidValue,r=v.getFirstValue,k=v.parseTooltext,m=v.regex.dropHypeash,n=v.HASHSTRING,b=v.preDefStr,L=b.DEFAULT,g=b.showHoverEffectStr,l=b.visibleStr,B=b.setRolloverAttrStr,e=b.setRolloutAttrStr,b=Math,V=b.min,p=b.max,T=b.abs,K=b.ceil,t=b.floor,Z=v.getFirstColor,P=v.graphics.getLightColor,S=v.schedular,z=v.toolTip;Q.register("component",
["dataset","Column",{type:"column",pIndex:2,customConfigFn:"_createDatasets",configure:function(){var b=this.chart,e=this.config,g=this.JSONData,l=b.singleseries,h=b.config.isdual,d=b.config,f=b.jsonData.chart,c=b.components,k=c.colorManager,t=e.plotColor=k.getPlotColor(this.index||this.positionIndex),m=a(g.dashed,f.plotborderdashed),z=a(f.useplotgradientcolor,1),r,n,q=v.getDashStyle;n=b.isBar;var B=b.is3D,K;this.__setDefaultConfig();J(g,e,d,{data:!0});e.showplotborder=a(f.showplotborder,B?0:1);r=
d.plotborderdashlen;d=d.plotborderdashgap;e.plotfillangle=a(360-f.plotfillangle,n?180:90);e.plotfillalpha=n=u(g.alpha,f.plotfillalpha,M);e.plotColor=u(g.color,t);e.legendSymbolColor=e.plotColor;e.plotgradientcolor=v.getDefinedColor(f.plotgradientcolor,k.getColor("plotGradientColor"));!z&&(e.plotgradientcolor="");e.plotborderalpha=u(f.plotborderalpha,n,M);e.plotbordercolor=u(f.plotbordercolor,B&&!l?"#ffffff":k.getColor("plotBorderColor"));e.plotborderdashstyle=m?q(r,d,void 0):"none";e.showShadow=B?
a(f.showshadow,1):a(f.showshadow,k.getColor("showShadow"));e.definedGroupPadding=p(a(f.plotspacepercent),0);e.parentYAxis=h?K="s"===u(g.parentyaxis&&g.parentyaxis.toLowerCase(),"p")?1:0:K=0;this.yAxis=c.yAxis[K];this.visible=1===a(g.visible,!Number(g.initiallyhidden),1);!0===this.visible?this._conatinerHidden=!1:this._containerHidden=!0;this._setConfigure();this._realTimeConfigure&&this._realTimeConfigure();!1!==b.hasLegend&&this._addLegend()},_setConfigure:function(b,e){var g=this.chart,l=g.config,
h=this.config,d=this.JSONData,f=b||d.data,c=g.singleseries,k=g.components,t=k.xAxis[0],m=t.getCategoryLen(),m=b?b.data.length:m,z=g.jsonData.chart,k=k.colorManager,n=h.showplotborder,B=h.plotColor,K=l.showtooltip,Z=v.parseUnsafeString,L=l.yaxisname,S=l.xaxisname,A=l.tooltipsepchar,C=l.seriesnameintooltip,T=v.parseTooltext,H,J,M,U,Y,Q,fa=l.plotborderdashlen,Aa=l.plotborderdashgap,ua=l.plotborderthickness,ia=l.useroundedges,xa=l.plothovereffect,ja=h.plotfillangle,ya,W,Ma,ea=h.plotborderdashstyle,ga,
la,Ca,Ha,pa,La,Ja,Fa,ta,Ka=v.getDashStyle,Ea=this.components.data,Da=g.isBar,Ga=g.is3D,Na,Ua=-Infinity,Pa=Infinity,Sa=this.yAxis,ab=l.use3dlighting,Xa=l.usedataplotcolorforlabels,Za;l.dragTolerance=l.isDrag?(n&&5<ua?ua/2+1:5)+N:0;Ea||(Ea=this.components.data=[]);this.visible=1===a(this.visible,this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);for(Na=0;Na<m;Na++){b?(Q=b&&b.data[Na]||{},Za=void 0!==e?e+Na:Ea.length-m+Na,J=Ea[Za]):(J=Ea[Na],Q=f&&f[Na]||{});g=J&&J.config;J||(J=Ea[Na]={});
J.config||(g=Ea[Na].config={});g.showValue=a(Q.showvalue,h.showvalues);g.setValue=J=Sa.getCleanValue(Q.value,l.stack100percent);g.setLink=u(Q.link);g.toolTipValue=B=Sa.dataLabels(J);g.setDisplayValue=U=Z(Q.displayvalue);g.displayValue=u(U,B);B=a(Q.dashed);U=a(Q.dashlen,fa);H=Aa=a(Q.dashgap,Aa);null!==J&&(Ua=p(Ua,J),Pa=V(Pa,J));g.plotBorderDashStyle=U=1===B?Ka(U,H,ua):0===B?"none":ea;c?(B=k.getPlotColor(a(Za-m,Na)),B=u(Q.color,B),Xa&&t.updateCategory(Na,{labelfontcolor:q(B)}),Ma=u(Q.alpha,Q.borderalpha,
h.plotborderalpha,ya).toString()):(B=u(Q.color,h.plotColor),Ma=u(Q.alpha,h.plotborderalpha,ya).toString());W=u(Q.ratio,h.ratio);ya=u(Q.alpha,h.plotfillalpha);g.shadow={opacity:h.showShadow?ya/100:0};0>J&&!ia&&(Y=h.plotfillangle,ja=Da?180-ja:360-ja);g.colorArr=H=v.graphics.getColumnColor(B+","+h.plotgradientcolor,ya,W,ja,ia,h.plotbordercolor,Ma,Da?1:0,Ga?!0:!1);g.originalPlotColor=B;ga=t.getLabel(a(Za-m,Na));g.origLabel=J=E(Z(ga.label));J=g.label=E(Z(ga.tooltext))||J;if(0!==xa){ga=u(Q.hovercolor,d.hovercolor,
z.plotfillhovercolor,z.columnhovercolor,B);la=u(Q.hoveralpha,d.hoveralpha,z.plotfillhoveralpha,z.columnhoveralpha,ya);Ca=u(Q.hovergradientcolor,d.hovergradientcolor,z.plothovergradientcolor,h.plotgradientcolor);!Ca&&(Ca="");W=u(Q.hoverratio,d.hoverratio,z.plothoverratio,W);Ha=a(360-Q.hoverangle,360-d.hoverangle,360-z.plothoverangle,ja);pa=u(Q.borderhovercolor,d.borderhovercolor,z.plotborderhovercolor,h.plotbordercolor);La=u(Q.borderhoveralpha,d.borderhoveralpha,z.plotborderhoveralpha,z.plotfillhoveralpha,
z.columnhoveralpha,Ma,ya);Ma=a(Q.borderhoverthickness,d.borderhoverthickness,z.plotborderhoverthickness,h.showplotborder&&ua);Ja=Q.borderhoverdashed||d.borderhoverdashed||z.plotborderhoverdashed;Fa=a(Q.borderhoverdashgap,d.borderhoverdashgap,z.plotborderhoverdashgap,fa);ta=a(Q.borderhoverdashlen,d.borderhoverdashlen,z.plotborderhoverdashlen,Aa);Ja=void 0!==Ja?Number(Ja)?Ka(ta,Fa,Ma):"":U;if(l.drawTrendRegion||1==xa&&ga===B)ga=P(ga,70);B=v.graphics.getColumnColor(ga+","+Ca,la,W,Ha,ia,pa,La.toString(),
Da?1:0,Ga?!0:!1);g.setRolloutAttr={fill:Ga?[O(H[0]),!ab]:O(H[0]),stroke:n&&O(H[1]),"stroke-width":ua,"stroke-dasharray":U};g.setRolloverAttr={fill:Ga?[O(B[0]),!ab]:O(B[0]),stroke:O(B[1]),"stroke-width":Ma,"stroke-dasharray":Ja}}H=g.toolTipValue;g.origToolText=B=E(Z(u(Q.tooltext,d.plottooltext,z.plottooltext)));K?null===H?Q=!1:void 0!==B?(U=[1,2,3,4,5,6,7],J={yaxisName:L,xaxisName:S,formattedValue:H,label:J},Q=T(B,U,J,Q,z,d)):(C&&(M=r(d&&d.seriesname)),Q=M?M+A:"",Q+=J?J+A:""):Q=!1;g.toolText=Q;g.setTooltext=
Q;Y&&(ja=Y);Za++}h.maxValue=Ua;h.minValue=Pa},init:function(a){var b=this.chart;if(!a)return!1;this.JSONData=a;this.chartGraphics=b.chartGraphics;this.components={};this.graphics={};this.configure()},_addLegend:function(){var b=this.chart,e=b.isBar,g=b.jsonData.chart,l,h;h=this.config;var d=Z(h.legendSymbolColor),b=b.components.legend;l=a(g.use3dlighting,g.useplotgradientcolor,1);g=P(d,60).replace(m,n);l?(l=P(d,40),e={FCcolor:{color:d+","+d+","+l+","+d+","+d,ratio:"0,30,30,30,10",angle:e?0:270,alpha:"100,100,100,100,100"}}):
e={FCcolor:{color:d,angle:e?0:270,ratio:"0",alpha:"100"}};h={enabled:h.includeinlegend,type:this.type,fillColor:O(e),strokeColor:O(g),rawFillColor:d,rawStrokeColor:d,label:r(this.JSONData.seriesname)};this.legendItemId=b.addItems(this,this.legendInteractivity,h)},legendInteractivity:function(a,b){var e=this.config,g=a.visible,h=b.config,d=b.graphics,f=e.itemHiddenStyle.color,e=e.itemStyle.color,c=h.fillColor,l,h=h.strokeColor;g?a.hide():a.show();g={legendItemSymbol:{fill:g?f:c,stroke:g?f:h},legendItemText:{fill:g?
f:e},legendItemLine:{stroke:g?f:h}};for(l in d)(f=d[l])&&g[l]&&f.attr(g[l])},_checkPointerOverColumn:function(a,b,e){var g=this.chart.config,h=g.plotborderthickness,d=g.showplotborder,f=this.components,f=f.dataRT||f.data,c,l,k,t,p,m=g.viewPortConfig,z=m.x,m=m.scaleX;c=this.config.plotsPerBin||1;var n=f&&f.length,r=0,q=0;a=(K(a/c)-1)*c+1;c=a+c-1;g=g.dragTolerance||0;for(n=c<n?c:n;n>=a;n--){c=f[n];if(!c)break;c._height<N&&(r=N);c._width<N&&(q=N);if(c._xPos||c._yPos)if(l=c.config.setValue,d&&void 0!==
h?p=h/2:h=p=0,null!==l&&(k=b-(c._xPos-z*m)+p,t=e-c._yPos+p+(0<=l?g:0),c=k>=-q/2&&k<=(q||c._width)+h&&t>=-r/2&&t<=(r||c._height)+h+(0>l?2*g:g)))return{pointIndex:n,hovered:c,pointObj:f[n]}}},_getHoveredPlot:function(a,b){var e=this.chart,g=e.config,h=e.components.canvas.config,h=Math.max(h.canvasPaddingLeft,h.canvasPadding),d=g.canvasLeft,g=g.canvasTop,e=e.components.xAxis[0].getValue(e.isBar?b-g-h:a-d-h),g=Math.round(e);return 0<g-e?this._checkPointerOverColumn(g,a,b)||this._checkPointerOverColumn(g-
1,a,b):this._checkPointerOverColumn(g+1,a,b)||this._checkPointerOverColumn(g,a,b)},_rolloverResponseSetter:function(a,b,e,g){var h=(b=(b=b.graphics)&&b.element)&&b.getData();!0!==h.draged&&(b&&0!==h.showHoverEffect&&b.attr(b.getData().setRolloverAttr),!g&&b&&U.call(b,a,e,"DataPlotRollOver"))},_rolloutResponseSetter:function(a,b,e,g){var h=(b=(b=b.graphics)&&b.element)&&b.getData();!0!==h.draged&&(b&&0!==h.showHoverEffect&&b.attr(b.getData().setRolloutAttr),!g&&b&&U.call(b,a,e,"DataPlotRollOut"))},
_decideTooltipType:function(a,b,e){var g=this.groupManager,h=this.chart,d=h.config.drawTrendRegion,f=h.components.paper,c=this.components,l=(c.dataRT||c.data)[a],c=l&&(l.config.finalTooltext||l.config.toolText),l=l&&(l.graphics.element||this.graphics.sharedAnchor.element);e=e.originalEvent;d&&l?g._drawTooltip(a,b,e):c&&!d&&z.customDraw(c,f,e,void 0,void 0,h.chartInstance.id)},_firePlotEvent:function(a,b,e,g){var h=this.chart,d=this.components,d=(d.dataRT||d.data)[b],f=d.graphics.element,c=v.toolTip,
l=e.originalEvent,k=h.components.paper.canvas.style,t;if(f)switch(t=d.config,t=t.setLink,a){case "mouseover":this._decideTooltipType(b,g,e);this._rolloverResponseSetter(h,d,l);t&&(k.cursor="pointer");break;case "mouseout":c.hide(h.chartInstance.id);this._rolloutResponseSetter(h,d,l);t&&(k.cursor=L);break;case "click":U.call(f,h,l);break;case "mousemove":this._decideTooltipType(b,g,e)}},draw:function(){var b=this,l=b.JSONData,k=b.chart.jsonData.chart,p=b.config,h=p.legendInteractivity,d=b.groupManager,
f=b.index,c,m,z=b.visible,n=b.chart,r=n.getJobList(),q=n.config,K=q.isDrag,P=q.plothovereffect,Z=n.components,L=Z.paper,E=Z.xAxis[0],A=E.getCategoryLen(),H=b.yAxis,J=n.graphics.columnGroup,M=q.isstacked,U,da,Q,Y=n.graphics.sumLabelsLayer,za=v.parseUnsafeString,fa=v.getValidValue,Aa=v.Raphael,ua=q.showtooltip,ia=n.get("config","animationObj"),xa=ia.animObj,ja=ia.dummyObj,ya=ia.duration,W=ia.animType,Ma=E.getAxisPosition(0),ea=E.getAxisPosition(1),ga=d.config,la=ga.groupMaxWidth=p.groupMaxWidth=ea-
Ma,Ca=q.definedgrouppadding,Ha=q.plotspacepercent/200,pa=d.getDataSetPosition(b),La=d.stackSumValue[b.positionIndex],Ja=q.maxcolwidth,Fa=(1-.01*Ca)*la||V(la*(1-2*Ha),1*Ja),ta=a(pa.columnWidth,Fa/1),Ka,Ea=pa.xPosOffset||0,Da=pa.height,Ga,Na,Ua=b.components,Pa=Ua.data,Sa,ab,Xa,Za,bb,eb,Va,Ya=b.drawn,$a=Ua.removeDataArr,Ta=$a&&$a.length,kb=Ua.addDataArr,hb=kb&&kb.length,ib,ob=H.getLimit(),ba=ob.min,Ba=0<ob.max&&0>ba,Oa,Qa=H.getAxisBase(),I=H.yBasePos=H.getAxisPosition(Qa),cb,vb,sb=q.plotborderthickness,
pb=q.useroundedges,gb=b.graphics,qb=gb.container,mb=gb.dataLabelContainer,nb=gb.shadowContainer,Fb=Ua.pool,Bb,Wb=1,Hb,wb,Nb=E.getAxisPosition(A-1)+Ea,xb=E.getAxisPosition(0)+Ea,yb,Cb=!0,Ib,Jb=b.startPosition,ub=n.isInverse,jb,tb=p.isSkippedData,Wa,Kb,zb,Gb=void 0!==q.scrollMinVal?q.scrollMinVal:0,Sb=void 0!==q.scrollMaxVal?q.scrollMaxVal:A,fb=function(){!1!==b.visible||!1!==b._conatinerHidden&&void 0!==b._conatinerHidden||(qb.hide(),nb.hide(),mb&&mb.hide(),b._conatinerHidden=!0);this.show()},Tb=function(){Y.show()},
Lb=function(){return Jb?function(a,c){a.x=xb-la*(hb-c);a.y=da;a.height=Ga}:!1===Jb?function(a){a.x=Nb+la*Wb++;a.y=da;a.height=Ga}:function(a){a.width=0}},Mb,Ob=n.config.viewPortConfig,Pb=Ob.x,rb=Ob.scaleX,db=q.showplotborder;Ya&&(Lb=Lb());qb||(qb=b.graphics.container=L.group("columns",J),z?qb.show():qb.hide());nb||(nb=b.graphics.shadowContainer=L.group("shadow",J).toBack(),z||nb.hide());z&&(qb.show(),nb.show());if(!(Gb>=Sb)){for(m=Gb;m<Sb;m++)if(Wa=(Va=(Sa=Pa[m])&&Sa.config)&&Va.isSkipped,bb=Va&&
Va.setValue,void 0===Sa||void 0===bb||null===bb||!0===Wa)(Hb=Sa&&Sa.graphics)&&Hb.element&&Hb.element.hide(),Va&&delete Va.isSkipped;else if(zb=Sa.graphics&&Sa.graphics.element,!1===tb||!Ya||M||K||!h||!(!z&&!zb||z&&zb&&0!==Sa._width&&0!==Sa._height)){Ib=Sa.trackerConfig={};Oa=0<=bb;Za=Va.setLink;Bb=Va.colorArr;Sa.graphics||(Pa[m].graphics={});eb=Va.displayValue;cb=Oa?Va.previousPositiveY:Va.previousNegativeY;ab=fa(za(u(Va.origToolText,l.plottooltext,k.plottooltext)));M&&(cb=b._parseValues(m,cb,La[m],
ab),bb=Va.value);vb=H.getAxisPosition(cb||Qa);U=E.getAxisPosition(m)+Ea+Pb*rb;0!==Da?(da=H.getAxisPosition(bb+(cb||0)),Ga=T(vb-da)):(Ga=0,da=vb);da=V(da,vb);!1===tb&&d.isCrisp?(Q=Aa.crispBound(U,da,ta,Ga,sb),U=Q.x,jb=t(Ga)===Q.height,wb=t(da)!==Q.y,da=Q.y,Ka=Q.width,Ga=Q.height):Ka=ta;z&&0<sb&&(0===sb%2&&(ub&&Ba?Oa?!wb&&(Ga+=1):!jb&&--da:Oa?wb&&--da:jb&&(Ga+=1)),ib=Math.floor(sb/2),ub&&Ba?Oa?Ga-=ib:da+=ib:Oa?da+=ib:Ga-=ib);Mb=Va.shadow;Na=Va.finalTooltext=!1!==Va.toolText?Va.toolText+(ab?"":Va.toolTipValue):
"";yb=Va.plotBorderDashStyle;Ib.eventArgs={index:m,link:Za,value:bb,displayValue:eb,categoryLabel:Va.origLabel,toolText:Na,id:"",datasetIndex:f,datasetName:l.seriesname,visible:z};Sa._xPos=U;Sa._yPos=da;Sa._height=Ga;Sa._width=Ka;Sa._index=m;if(!(Xa=Sa.graphics.element)){c={x:U,y:I,width:Ka,height:1,r:pb,ishot:!ua,fill:O(Bb[0]),stroke:O(Bb[1]),"stroke-width":db?sb:0,"stroke-dasharray":yb,"stroke-linejoin":"miter",visibility:z,cursor:Za?"pointer":""};Ya&&(Lb(c,m),Fb&&Fb.element[0]&&(Xa=Sa.graphics.element=
Fb.element[0],Xa.attr(c),Fb.element.splice(0,1)),Sa._newXPos=c.x);if(Xa)Va.elemCreated=!1;else{if(ga.skipZeroPlots&&0===bb)continue;Xa=Sa.graphics.element=L.rect(c,qb);Va.elemCreated=!0}Ya||(Xa.animateWith(ja,xa,{y:da,height:Ga||1},ya,W,Cb&&Tb),Cb=!1)}(Xa=Sa.graphics.element)&&Ya&&(Va.elemCreated=!1,c={x:U,y:da,width:Ka,height:Ga||1,r:pb},M||!1!==b.visible||0===Da||(delete c.y,delete c.height),h||Xa.attr({fill:O(Bb[0]),stroke:O(Bb[1]),"stroke-width":db?sb:0,"stroke-linejoin":"miter","stroke-dasharray":yb,
ishot:!ua,visibility:z,cursor:Za?"pointer":""}),Xa.animateWith(ja,xa,c,ya,W,Cb&&fb),Cb=!1);Xa.shadow(Mb,nb).data("BBox",Q);if(Za||ua)Ga<N&&(da-=(N-Ga)/2,Ga=N,Kb=!0),Ib.attr={x:U,y:da,width:Ka,height:Ga,r:pb,cursor:Za?"pointer":"",stroke:C,"stroke-width":db?sb:0,fill:C,ishot:!0,visibility:z};n.config.enablemousetracking&&Xa.data("eventArgs",Ib.eventArgs).data(g,P).data(B,Va.setRolloverAttr||{}).data(e,Va.setRolloutAttr||{})}Kb&&(q.toleranceBottom=N);Ya?b.drawLabel(Gb,Sb):r.labelDrawID.push(S.addJob(function(){b.drawLabel(Gb,
Sb)},v.priorityList.label));!Ya&&Y.hide();d.drawSumValueFlag&&d.drawSumValueFlag&&d.drawSumValue();b.drawn=!0;Ta&&b.remove()}},show:function(){var a=this.graphics&&this.graphics.container,b=this.graphics&&this.graphics.dataLabelContainer,e=this.graphics&&this.graphics.shadowContainer,g=this.chart.is3D,h=this.components.data,d=this.chart.config.categories,f=this.yAxis,c=this.chart,k=c.components.xAxis[0],d=V(this.JSONData.data&&this.JSONData.data.length,d&&d.length);this.config.legendInteractivity=
!0;c._chartAnimation();this.visible=!0;this._conatinerHidden=!1;if(g)for(a=0;a<d;a++)h[a]&&h[a].graphics&&h[a].graphics.element&&h[a].graphics.element.attr({visibility:l}),h[a]&&h[a].graphics&&h[a].graphics.hotElement&&h[a].graphics.hotElement.attr({visibility:l});else a.show();e.show();b&&b.show();c.config.transposeAxis&&(c._setAxisLimits(),f.draw());c.isRealTime&&k.draw();c._drawDataset();this.config.legendInteractivity=!1;c.chartInstance.__state._rtPaused&&c._setRTdata()},hide:function(){var a=
this.yAxis,b=this.chart,e=b.components.xAxis[0];b._chartAnimation();this.visible=!1;this.config.legendInteractivity=!0;b.config.transposeAxis&&(b._setAxisLimits(),a.draw());b.isRealTime&&e.draw();b._drawDataset();this.config.legendInteractivity=!1;b.chartInstance.__state._rtPaused&&b._setRTdata()},drawLabel:function(b,e){var g=this.chart,k=g.config,h=g.graphics,d=g.components,f=g.get("config","animationObj"),c=f.dummyObj,t=f.animObj,m=f.animType,f=f.duration,p=d.paper,z=g.linkedItems.smartLabel,n=
g.config.dataLabelStyle,r=this.config.legendInteractivity,q=d.xAxis[0].getCategoryLen(),B=this.components,d=B.data,B=B.pool,u=this.visible,K,v,k=k.rotatevalues?270:0,P,Z,L,S,E,C,V,T=this.graphics.dataLabelContainer,H=this.labelDrawn;K=a(b,0);q=a(e,q);h=h.datalabelsGroup;T||(T=this.graphics.dataLabelContainer=p.group("datalabel",h));u?T.show():T.hide();z.useEllipsesOnOverflow(g.config.useEllipsesWhenOverflow);z.setStyle(n);if(u){if(K>=q)return;for(h=K;h<q;h++)if(Z=(E=(K=d[h])&&K.config)&&E.setValue,
void 0===K||void 0===Z||null===Z||!0===E.labelSkip)E&&delete E.labelSkip,(V=K&&K.graphics)&&V.label&&V.label.hide();else if(u=K.graphics)L=K._yPos,S=K._xPos,v=E.displayValue,(P=E.showValue)&&null!==Z?(r&&E._state||(P=z.getOriSize(v),E._state=k?{labelWidth:P.height,labelHeight:P.width}:{labelWidth:P.width,labelHeight:P.height}),Z=this._getValuePosition({labelWidth:E._state.labelWidth,labelHeight:E._state.labelHeight,width:K._width,height:K._height,yPos:L,xPos:S,value:Z}),L=Z.textX,Z=Z.textY,v={x:L,
y:Z,text:v},r||(v=A(v,{visibility:l,"line-height":n.lineHeight,fill:n.color,"text-bound":[n.backgroundColor,n.borderColor,n.borderThickness,n.borderPadding,n.borderRadius,n.borderDash]})),!u.label&&H&&g.isRealTime&&(E=A({},v),E.x=v.x-S+(K._newXPos||0),E.transform=p.getSuggestiveRotation(k,E.x,Z),B&&B.label[0]?(u.label=B.label[0].attr(E),B.label.splice(0,1)):u.label=p.text(E,T)),v.transform=p.getSuggestiveRotation(k,L,Z),(K=u.label)||(B&&B.label[0]?(K=u.label=B.label[0].attr(v),B.label.splice(0,1)):
K=u.label=p.text(v,T),C=!0),K.show(),H&&!C&&K.animateWith(c,t,v,f,m)):u.label&&(u.label.attr({"text-bound":[]}),u.label.hide())}this.labelDrawn=!0},_getValuePosition:function(a){var b=this.chart,e=b.components,g=b.config,h=e.canvas.config,d=e.yAxis[0],e=h.xDepth,h=h.yDepth,f=g.canvasTop,c=g.canvasHeight+h,l,k,t,m=a.yPos,z=b.is3D,b=b.config.isstacked,n=g.valuepadding+2,r=a.height;l=a.width;g=g.placevaluesinside;t=a.labelHeight;var q=d.getAxisConfig("isReverse"),B=d.getAxisConfig("axisRange"),K=B.min,
d=a.value,B=0<B.max&&0>K;a=a.xPos;q&&B&&(k=0>d?!1:!0);k=u(k,0>d);t=q=t+n;n=.5*q+n;l=a+.5*l;a=k?f+c-(m+r+h):m-f;b?(c=V(f+c-.5*t,m+.5*r+(h||0)),c=p(f+.5*t,c),l-=e):g?r>=t?(c=m+(k?r-n:n),z&&(l-=e,c+=h)):a>=t?(c=m+(k?r+n:-n),z&&k&&(l-=e,c+=h)):(c=m+(k?r-n:n),z&&(l-=e,c+=h)):a>=t?(c=m+(k?r+n:-n),z&&(k?(l-=e,c+=h):l-=e/2)):(c=m+(k?r-n:n),z&&(l-=e,c+=h));return{textX:l,textY:c}},_parseValues:function(a,b,e,g){var h=this.chart.config;a=this.components.data[a].config;var d=h.showpercentvalues,f=h.showpercentintooltip,
c=a.setValue,h=h.stack100percent,l=this.chart.components.numberFormatter,t=this.yAxis,m=a.setDisplayValue,c=(this.visible?c||0:0)/e*100,l=l.percentValue(c);h&&(a.value=c,b=(b||0)/e*100);f&&(a.toolTipValue=l);d&&!m&&(a.displayValue=l);g&&(a.toolText=k(a.setTooltext,[14,24,25,112],{percentValue:l,sum:t.dataLabels(e),unformattedSum:e}));return b},getDataLimits:function(){return{max:this.config.maxValue,min:this.config.minValue}},addData:function(a,b,e){var g=this.components,h=this.chart.components.numberFormatter,
d=g.data,f=a.data,c=f.length,l=this.config,k=l.maxValue,l=l.minValue,t=this.maxminFlag,m;g.addDataArr=a.data;if(0===b)this.startPosition=!0;else if(b+c===d.length||void 0===b)this.startPosition=!1;for(m=0;m<c;m++)if(void 0!==b?d.splice(b+m,0,{config:{}}):d.push({config:{}}),!t&&(g=h.getCleanValue(f[m].value),g>k||g<l))t=this.maxminFlag=!0;this._setConfigure(a,b);t&&this.setMaxMin();e&&this.draw()},hideElements:function(a){a.hide()},removeData:function(a,b,e){var g=this.components,h=g.data,d=g.removeDataArr||
(g.removeDataArr=[]),f=this.config,c=this.groupManager,l=this.maxminFlag;void 0===b&&(b=1);a=a||0;if(a+b===h.length)this.endPosition=!0;else if(0===a||void 0===a)this.endPosition=!1;g.removeDataArr=d=d.concat(h.splice(a,b));c&&c.removeSumLabels&&c.removeSumLabels(a,b,this.positionIndex);g=d.length;for(a=0;a<g;a++)if(d[a]){b=d[a].config;if(b.setValue===f.maxValue||b.setValue===f.minValue)l=this.maxminFlag=!0;if(l)break}l&&this.setMaxMin();e&&this.draw()},updateData:function(a,b,e){var g=this.config,
h=g.maxValue,d=g.prevMin,f=this.chart,c=this.groupManager||this,l=f.components,k=l.xAxis||l.yAxis,t=k&&l.xAxis[0],l=k&&l.yAxis[0];this._setConfigure(a,b);this.setMaxMin();if(g.maxValue!==h||g.minValue!==d)this.maxminFlag=!0;e&&(f._setAxisLimits(),k&&t.draw(),k&&l.draw(),c.draw())},setMaxMin:function(){var a=this.components.data,b=this.config,e,g,h=a.length,d=-Infinity,f=Infinity;for(e=0;e<h;e++)a[e]&&(g=a[e].config,g=g.setValue,void 0!==g&&(d=p(d,g),f=V(f,g)));b.maxValue=d;b.minValue=f},hidingPosition:function(){var a=
this.components.removeDataArr.length,b=this.config.groupMaxWidth;return!1===this.endPosition?function(e){return{x:e._xPos-b*a,y:e._yPos}}:!0===this.endPosition?function(e){return{x:e._xPos+b*a||0,y:e._yPos}}:function(){return{width:0}}},remove:function(){var a=this.components,b=a.removeDataArr,e=a.pool||(a.pool={element:[],label:[]}),g=this.chart,h=g.get("config","animationObj"),d=h.duration,f=h.dummyObj,c=h.animObj,h=h.animType,l=this.maxminFlag,k,t,m,p,z=g.components.paper,n=g.config.rotatevalues,
r=this.chart.config.realTimeConfig&&this.chart.config.realTimeConfig.clear,q=this.hidingPosition(),B=function(){this.hide()};for(m=b.length-1;0<=m;m--)if(g=b[m],b.splice(m,1),g&&g.graphics){t=g.graphics;for(k in t)"label"===k&&void 0===this.startPosition&&void 0===this.endPosition&&t[k].hide(),p=q(g),"label"===k&&(p.transform=z.getSuggestiveRotation(n,p.x,p.y)),r&&t[k].hide(),t[k].animateWith(f,c,p,d,h,B);g.graphics.element&&(e.element=e.element.concat(g.graphics.element));g.graphics.label&&(e.label=
e.label.concat(g.graphics.label))}a.pool=e;l&&this.setMaxMin()},getAxisValuePadding:function(){return{left:.5,right:.5}},manageSpace:function(){var b=this.config||(this.config={}),e=this.chart,g=e.config.rotatevalues,l=e.components.xAxis[0],h=e.components.yAxis[0],d=e.config.dataLabelStyle,f=(this.components||{}).data||[],c=b.leftMostData||f[0],f=b.rightMostData||f[f.length-1],k,t,m={};k={};var z=0,n=0,r,q=l.getPixel(0),m=e.linkedItems.smartLabel,B={paddingLeft:0,paddingRight:0};k=0;var u=this.groupManager,
u="column"===this.type&&u.getDataSetPosition(this),K=this.getAxisValuePadding(),v=b.topMostData,b=b.bottomMostData;c&&(c=c.config,r=c.showValue,t=c&&c.anchorProps||{},r&&(k=c.displayValue,m.useEllipsesOnOverflow(e.config.useEllipsesWhenOverflow),m.setStyle(d),k=m.getOriSize(k),k=g?k.height:k.width),null!==c.setValue&&(z=a(t.radius,0)+a(t.borderThickness,0)/2,n=(k||0)/2-(l.getPixel(K.left)-q)-(u&&u.xPosOffset+u.columnWidth/2||0),0>n&&(n=0)),B.paddingLeft=p(z,n));f&&(c=f.config,r=c.showValue,t=c&&c.anchorProps||
{},r&&!g&&(k=c.displayValue,m.setStyle(d),m=m.getOriSize(k),k=g?m.height:m.width),null!==c.setValue&&(z=a(t.radius,0)+a(t.borderThickness,0)/2,n=(k||0)/2-(l.getPixel(K.right)-q)+(u&&u.xPosOffset+u.columnWidth/2||0),0>n&&(n=0)),B.paddingRight=p(z,n));v&&(t=(c=v.config)&&c.anchorProps||{},null!==c.setValue&&(z=a(t.radius,0)+a(t.borderThickness,0)/2,n=Math.max(z-(h.getPixel(c.setValue.y)-h.getPixel(h.getLimit().max)),0)),B.paddingTop=n);b&&(t=(c=b.config)&&c.anchorProps||{},null!==c.setValue&&(z=a(t.radius,
0)+a(t.borderThickness,0)/2,n=Math.max(z-(h.getPixel(h.getLimit().min)-h.getPixel(c.setValue.y)),0)),B.paddingBottom=n);return B},getPlotClickFn:function(a){return function(b){U.call(this,a,b)}},getEventArgs:function(){return{datasetName:(this.JSONData||{}).seriesname,datasetIndex:this.index,id:(this.config||{}).userID,visible:this.visible}},rolloverResponseSetter:function(a,b){var e=b.jsonData.chart;return function(g){var h=this.data("hoverEnabled"),d=this.data("draged"),f=this.data("dataset");!0!==
d&&(f._hoverFunc(a,"DataPlotRollOver",h,e),U.call(this,b,g,"DataPlotRollOver"))}},rolloutResponseSetter:function(a,b){var e=b.jsonData.chart;return function(g){var h=this.data("hoverEnabled"),d=this.data("draged"),f=this.data("dataset");!0!==d&&(f._hoverFunc(a,"DataPlotRollOut",h,e),U.call(this,b,g,"DataPlotRollOut"))}}},void 0,{showvalues:void 0,includeinlegend:1,plotfillalpha:void 0,plotfillangle:void 0,ratio:void 0}])}]);Q.register("module",["private","modules.renderer.js-dataset-realtimecolumn",
function(){Q.register("component",["dataset","realtimecolumn",{_realTimeConfigure:function(b){var v=this.chart,J=this.components.data,C=[],H=v.config.realTimeConfig.numDisplaySets;b=b?0:v.components.xAxis[0].getCategoryLen();b<H?(C.length=H-b,this.components.data=C.concat(J)):b>H&&this.components.data.splice(H,b-H)}},"Column"])}]);Q.register("module",["private","modules.renderer.js-dataset-scrollcolumn2d",function(){Q.register("component",["dataset","scrollcolumn2d",{},"Column"])}]);Q.register("module",
["private","modules.renderer.js-dataset-column3d",function(){var b=this.window,v=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,J=v.BLANKSTRING,C="rgba(192,192,192,"+(b?.002:1E-6)+")",b=v.TOUCH_THRESHOLD_PIXELS,H=v.CLICK_THRESHOLD_PIXELS,A=v.pluck,u=v.pluckNumber,a=v.toRaphaelColor,O=v.hasTouch?b:H,b=v.preDefStr,q=b.noneStr,M=b.configStr,U=b.animationObjStr,N=b.showHoverEffectStr,E=b.columnStr,r=b.shadowStr,k=b.visibleStr,m=b.hiddenStr,n=b.negativeValueStr,L=b.positiveValueStr,g=b.zeroPlaneStr,
l=b.categoryPlotsStr,B=b.setRolloverAttrStr,e=b.setRolloutAttrStr,V=b.strokeWidthStr,p=b.strokeDashStr,T=v.graphics.getCubePathOutline,b=Math,K=b.min,t=b.abs,Z=b.round,P=v.schedular;Q.register("component",["dataset","Column3D",{draw:function(){var b=this,z=b.JSONData,R=b.chart.jsonData.chart,w=b.config,F=b.groupManager,Z=b.index,h=b.chart.config.categories,d,f,c=b.chart,D=c.getJobList(),G=c.config,H=c.components.paper,Ra=c.components.xAxis[0],Ia=b.yAxis,sa=c.graphics.columnGroup,wa=c.config.isstacked,
ca,ma,qa=v.parseUnsafeString,va=v.getValidValue,Q=G.showtooltip,ra=c.get(M,U),ka=ra.animType,na=ra.animObj,da=ra.dummyObj,ra=ra.duration,oa=Ra.getAxisPosition(0),Y=Ra.getAxisPosition(1),Y=w.groupMaxWidth=Y-oa,za=w.definedGroupPadding,fa=G.plotspacepercent/200,Aa=F.getDataSetPosition(b),oa=F.stackSumValue[b.positionIndex],ua=G.maxcolwidth,Y=(1-.01*za)*Y||K(Y*(1-2*fa),1*ua),Y=u(Aa.columnWidth,Y/1),ia,za=Aa.xPosOffset||0,Aa=Aa.height,xa,fa=b.components.data,ja,ya,W,Ma,ea,ga,la;W={};ea={};ua=Ia.getLimit();
ya=ua.max;var Ca=ua.min,ua=Ia.getAxisBase(),Ha=Ia.yBasePos=Ia.getAxisPosition(ua),pa=0,La=G.plotborderthickness;ga=b.graphics.container;var Ja=b.graphics.dataLabelContainer,Fa=b.graphics.shadowContainer,ta,Ka,Ea,Da,Ga,Na=w.use3dlighting,Ua,Pa,Sa,ab,Xa=!0,Za=!1,bb=b.visible,eb=(b.components.removeDataArr||[]).length,Va=b.components.pool||[],Ya=G.showplotborder,$a=G.plothovereffect,Ta,kb,hb,ib=function(){var a,c;if(!1===b.visible&&(!1===b._conatinerHidden||void 0===b._conatinerHidden)){a=b.components.data;
for(c=0;c<d;c++)a[c]&&a[c].graphics&&a[c].graphics.element&&a[c].graphics.element.attr("visibility",m),a[c]&&a[c].graphics&&a[c].graphics.hotElement&&a[c].graphics.hotElement.attr("visibility",m);Fa.hide();Ja&&Ja.hide();b._conatinerHidden=!0}},ob=function(){F.drawSumValueFlag&&F.drawSumValue()};ga||(ga=b.graphics.container=c.datasetLayers=c.datasetLayers||H.group(E,sa));Fa||(Fa=b.graphics.shadowContainer=H.group(r,sa).toBack());c._cacheObj||(c._cacheObj={});!c._cacheObj.elemAttr&&(c._cacheObj.elemAttr=
{});Ta=c._cacheObj.elemAttr;!c._cacheObj.zeroplaneAttr&&(c._cacheObj.zeroplaneAttr={});la=c._cacheObj.zeroplaneAttr;!c._cacheObj.cubepathObj&&(c._cacheObj.cubepathObj={});kb=c._cacheObj.cubepathObj;d=Ra.getCategoryLen();if(bb)for(f=0;f<d;f++)fa[f].graphics&&fa[f].graphics.element&&fa[f].graphics.element.attr("visibility",k),fa[f].graphics&&fa[f].graphics.hotElement&&fa[f].graphics.hotElement.attr("visibility",k);sa=ga.negative=ga.negative||H.group(n,ga);Ka=ga.column=ga.column||H.group(L,ga);0>Ca&&
0<=ya?(f=ga.zeroPlane,la.fill=[G.zeroPlaneColor,!Na],la.stroke=G.zeroPlaneBorderColor||"none",la[V]=G.zeroPlaneShowBorder?1:0,f?(f=[c.config.canvasLeft-10,Ha+10,c.config.canvasWidth,1,10,10,f],F.graphics.zeroplane.show(),F.graphics.zeroplane._.cubetop.show(),F.graphics.zeroplane._.cubeside.show(),kb.cubepath=f,F.graphics.zeroplane.animateWith(da,na,kb,ra,ka),F.graphics.zeroplane.attr(la)):(f=ga.zeroPlane=H.group(g,ga).insertBefore(Ka),!F.graphics&&(F.graphics={}),F.graphics.zeroplane=H.cubepath(c.config.canvasLeft-
10,Ha+10,c.config.canvasWidth,1,10,10,f).attr(la))):F.graphics&&F.graphics.zeroplane&&F.graphics.zeroplane.hide()&&F.graphics.zeroplane._.cubetop.hide()&&F.graphics.zeroplane._.cubeside.hide();(Ea=sa.data(l))||(sa.data(l,Array(d)),Ea=sa.data(l));(Da=Ka.data(l))||(Ka.data(l,Array(d)),Da=Ka.data(l));for(f=0;f<d;f++)if(ga=f,W=(la=(G=fa[f])&&G.config)&&la.setValue,void 0!==G&&void 0!==W&&null!==W){hb=G.trackerConfig={};!G||void 0!==W&&null!==W||(G.graphics&&G.graphics.element&&(G.graphics.element.hide(),
G.graphics.element._.cubeside.hide(),G.graphics.element._.cubetop.hide()),G.graphics&&G.graphics.hotElement&&G.graphics.hotElement.hide());Ea[f]=Ea[f]||H.group(sa);Da[f]=Da[f]||H.group(Ka);G.graphics||(fa[f].graphics={});ya=la.setLink;Ca=la.colorArr;ea=la.displayValue;ca=0<=W?la.previousPositiveY:la.previousNegativeY;xa=va(qa(A(la.origToolText,z.plottooltext,R.plottooltext)));wa&&(ca=b._parseValues(f,ca,oa[f],xa),W=la.value);ia=Ia.getAxisPosition(ca||ua);c=Ra.getAxisPosition(f)+za;0!==Aa?(ma=Ia.getAxisPosition(W+
(ca||0)),ca=t(ia-ma)):(ca=0,ma=ia);ma=K(ma,ia);ia=Y;ta=(hb.isNegative=Ga=0>W)?Ea:Da;xa=la.finalTooltext=!1!==la.toolText&&la.toolText+(xa?"":la.toolTipValue);hb.eventArgs={index:f,link:ya,value:W,displayValue:ea,categoryLabel:h[f].label,toolText:xa?xa:"",id:J,datasetIndex:Z,datasetName:z.seriesname,visible:bb};Ma=hb.eventArgs;W=la.setRolloutAttr;ea=la.setRolloverAttr;ra||(Ha=ma,pa=ca);Ua=c;Pa=ma;Sa=ia;ab=ca;c-=10;ma+=10;G.graphics.element?(Za=!0,ja=G.graphics.element,ta[f].appendChild(ja._.cubetop),
ta[f].appendChild(ja._.cubeside),ta[f].appendChild(ja),kb.cubepath=[c,!0===b.visible||0===Aa||wa?ma:ja.attrs.cubepath[1],ia,!0===b.visible||0===Aa||wa?ca:ja.attrs.cubepath[3],10,10],ja.animateWith(da,na,kb,ra,ka,Xa&&ib),Ta.fill=[a(Ca[0]),!Na],Ta.ishot=!0,Ta.stroke=Ya&&a(Ca[1]),Ta[V]=Ya?La:0,Ta[p]=la.plotBorderDashStyle,Ta.cursor=ya?"pointer":J,Ta.visibility&&delete Ta.visibility,Ta.cubepath&&delete Ta.cubepath,ja.attr(Ta),la.elemCreated=!1):(Va.element&&Va.element.length?(ja=G.graphics.element=Va.element.shift(),
ta[f].appendChild(ja._.cubetop),ta[f].appendChild(ja._.cubeside),ta[f].appendChild(ja),ja.show()):ja=G.graphics.element=H.cubepath(ta[f]),Ta.cubepath=[c,ra?Ha+10:ma,ia,ra?0:pa,10,10],Ta.fill=[a(Ca[0]),!Na],Ta.ishot=!0,Ta.stroke=Ya&&a(Ca[1]),Ta[V]=Ya?La:0,Ta[p]=la.plotBorderDashStyle,Ta.cursor=ya?"pointer":J,Ta.visibility=bb?k:m,ja.attr(Ta),kb.cubepath=[c,ma,ia,ca,10,10],ja.animateWith(da,na,kb,ra,ka,Xa&&ob),Xa=!1,G._newXPos=c,la.elemCreated=!0);ja.shadow(la.shadow,Fa).data("BBox",{height:pa,width:ia,
x:c,y:ma});if(ya||Q)ca<O&&(ma-=(O-ca)/2,ca=O),hb.attr={path:T([c,ma,ia,ca,10,10]),cursor:ya?"pointer":J,stroke:La&&C||q,"stroke-width":Ya?w.plotBorderThickness:0,fill:C,ishot:!0};wa&&Ga&&ja.toBack();G._xPos=Ua;G._yPos=Pa;G._height=ab;G._width=Sa;ja.data("eventArgs",Ma).data("groupId",ga).data(N,$a).data(B,ea).data(e,W).tooltip(xa);ja._.cubetop.data("eventArgs",Ma).data("groupId",ga).data(N,$a).data(B,ea).data(e,W).tooltip(xa);ja._.cubeside.data("eventArgs",Ma).data("groupId",ga).data(N,$a).data(B,
ea).data(e,W).tooltip(xa)}b.drawn?b.drawLabel():D.labelDrawID.push(P.addJob(function(){b.drawLabel()},v.priorityList.label));b.drawn=!0;F.drawSumValueFlag&&Za&&F.drawSumValueFlag&&F.drawSumValue();eb&&b.remove();b.chart.config.canvasBottom+=10},_checkPointerOverColumn:function(a,b,e){var g=this.chart.config,l=g.plotborderthickness,k=g.showplotborder,h=this.components.data,d=h[a],f,c,t;if(d&&(f=d.config.setValue,!g.isstacked||!(0>f&&this.valueLook||0<f&&!this.valueLook))&&(l=k?l:0,t=l/2,t=0===t%2?
t+1:Z(t),null!==f&&(f=d._xPos-10,k=d._width+10,g=d._yPos,d=d._height+10,c=b-f+t,t=e-g+t,l=(l=0<=c&&c<=k+l&&0<=t&&t<=d+l?0<b+e-(f+g)-10:!1)?0>b+e-(f+g+k+d)+10:!1)))return{pointIndex:a,hovered:l,pointObj:h[a]}},_getHoveredPlot:function(a,b){var e=this.chart,g=e.config,l=e.components.canvas.config,l=Math.max(l.canvasPaddingLeft,l.canvasPadding),k=g.canvasLeft,g=g.canvasTop,e=e.components.xAxis[0].getValue(e.isBar?b-g-l:a-k-l),g=Math.round(e);return 0<g-e?this._checkPointerOverColumn(g,a,b)||this._checkPointerOverColumn(g-
1,a,b):this._checkPointerOverColumn(g+1,a,b)||this._checkPointerOverColumn(g,a,b)},remove:function(){var a=this,b=a.components,e=b.removeDataArr,g=b.pool||(b.pool={element:[],hotElement:[],label:[]}),l=e.length,k=a.config.groupMaxWidth,h,d=a.maxminFlag,f,c,t;(function(){return!1===a.endPosition?function(){return{x:h._xPos-k*l}}:!0===a.endPosition?function(){return{x:h._xPos+k*l||0}}:function(){return{width:0}}})();for(t=0;t<l;t++)if(h=e[0],e.splice(0,1),h&&h.graphics){c=h.graphics;for(f in c)c[f].hide();
h.graphics.element&&(g.element=g.element.concat(h.graphics.element));h.graphics.hotElement&&(g.hotElement=g.hotElement.concat(h.graphics.hotElement));h.graphics.label&&(g.label=g.label.concat(h.graphics.label))}b.pool=g;d&&a.setMaxMin()}},"Column",{use3dlighting:void 0}])}]);Q.register("module",["private","modules.renderer.js-dataset-waterfall2d",function(){var b=this.window,v=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,J=v.BLANKSTRING,C="rgba(192,192,192,"+(b?.002:1E-6)+")",b=v.TOUCH_THRESHOLD_PIXELS,
H=v.CLICK_THRESHOLD_PIXELS,A=v.pluck,u=v.pluckNumber,a=v.toRaphaelColor,O=v.graphics.convertColor,q=v.parseUnsafeString,M=v.getDefinedColor,U=v.HUNDREDSTRING,N=v.hasTouch?b:H,E=v.getCrispValues,r=v.getValidValue,k=v.getFirstValue,b=v.preDefStr,m=b.showHoverEffectStr,n=b.setRolloverAttrStr,L=b.setRolloutAttrStr,g=b.elementStr,l=b.hotElementStr,b=Math,B=b.round,e=b.min,V=b.max,p=b.abs,T=v.graphics.getLightColor;Q.register("component",["dataset","Waterfall2D",{configure:function(){var b,g,l=this.chart,
m=l.components;b=this.config;g=this.JSONData;var p=g.data,z=l.config.categories,z=e(z&&z.length,p&&p.length),n=l.jsonData.chart,w=m.colorManager,q,B=w.getPlotColor(this.index||this.positionIndex),h=u(g.dashed,n.plotborderdashed),d=u(n.useplotgradientcolor,1),f=u(n.showtooltip,1),c=v.parseUnsafeString,D=c(n.yaxisname),G=c(n.xaxisname),L=c(A(n.tooltipsepchar,", ")),E=v.parseTooltext,C,H,N,ca,ma,Q,va,ha,ra,ka,na,da,oa,Y,za,fa,Aa,ua,ia,xa,ja,ya,W,Ma,ea,ga,la,Ca=v.getDashStyle,Ha=this.components.data,
pa=m.numberFormatter,La;q={};q=q.dataObj||(q.dataObj={});La=q.chart||(q.chart={});Aa=A(n.connectorthickness,1);var Ja,Fa=-Infinity,ta=Infinity,Ka=0,Ea=0,Da=0,Ga,Na,Ua,Pa;this.visible=1===u(this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);q=b.showplotborder=u(n.showplotborder,1);b.plotBorderThickness=ma=q?u(n.plotborderthickness,1):0;b.isRoundEdges=Q=u(n.useroundedges,0);b.plotBorderAlpha=na=q?A(n.plotborderalpha,N,U):0;b.plotBorderColor=da=A(n.plotbordercolor,w.getColor("plotBorderColor").split(",")[0]);
b.plotgradientcolor=ka=d?M(n.plotgradientcolor,w.getColor("plotGradientColor")):J;b.plotDashLen=d=u(n.plotborderdashlen,6);b.plotDashGap=ca=u(n.plotborderdashgap,3);b.use3DLighting=u(n.use3dlighting,1);b.showSum=Ja=u(n.showsumatend,1);b.plotColor=A(g.color,B);b.plotfillAngle=ha=u(360-n.plotfillangle,90);b.showShadow=Q?u(n.showshadow,1):u(n.showshadow,w.getColor("showShadow"));b.showHoverEffect=va=u(n.plothovereffect,n.showhovereffect,void 0);b.plotFillAlpha=A(g.alpha,n.plotfillalpha,U);b.plotRadius=
u(n.useRoundEdges,b.isRoundEdges?1:0);b.plotFillRatio=ra=A(g.ratio,n.plotfillratio);b.plotBorderDashStyle=oa=h?Ca(d,ca,ma):"none";b.showValues=u(g.showvalues,n.showvalues,1);b.valuePadding=u(n.valuepadding,2);b.enableAnimation=B=u(n.animation,n.defaultanimation,1);b.animation=B?{duration:1E3*u(n.animationduration,1)}:!1;La.transposeAnimation=b.transposeAnimation=u(n.transposeanimation,La.transposeAnimation,B);b.transposeAnimDuration=1E3*u(n.transposeanimduration,.2);b.showTooltip=u(n.showtooltip,
1);b.stack100Percent=u(l.stack100percent,n.stack100percent,0);b.definedGroupPadding=V(u(n.plotspacepercent),0);b.plotSpacePercent=V(u(n.plotspacepercent,20)%100,0);b.maxColWidth=u(n.maxcolwidth,50);b.showPercentValues=u(n.showpercentvalues,0);b.showPercentInToolTip=u(n.showpercentintooltip,0);b.plotPaddingPercent=u(n.plotpaddingpercent);b.rotateValues=u(n.rotatevalues)?270:0;b.placeValuesInside=u(n.placevaluesinside,0);b.parentYAxis=La="s"===A(g.parentyaxis&&g.parentyaxis.toLowerCase(),"p")?1:0;Ha||
(Ha=this.components.data=[]);b.zLine=Na={step:!0,data:[],dashStyle:"1"===n.connectordashed?Ca(u(n.connectordashlen,2),u(n.connectordashgap,2),Aa):"none",useForwardSteps:!0,color:O(A(n.connectorcolor,"000000"),A(n.connectoralpha,100)),lineWidth:Aa};for(l=0;l<z;l+=1)Y=p[l],fa=pa.getCleanValue(Y.value),H=u(Y.issum,0),Y.vline||H?delete Y._value:(Ka+=fa,Y._value=fa);Ga=pa.dataLabels(Ka);Ja&&(Ja=!0,z+=1,Ua={label:k(n.sumlabel,"Total"),_value:Ka,value:Ka,issum:1,cumulative:1});for(Pa=l=0;l<z;l+=1)Y=p[l],
Aa=(fa=Ha[l])&&fa.config,fa||(fa=Ha[l]={graphics:{}}),fa.config||(Aa=Ha[l].config={}),!Y&&Ja&&(Y=p[l]=Ua),B=A(Y.color,w.getPlotColor(l)),fa.vline||(fa=Y._value,delete Y._value,Aa.issum=H=u(Y.issum,0),N=Aa.isCumulative=u(Y.cumulative,1),H?(fa=N?Ea:Ea===Da?Ea:Ea-Da,Aa.lastComTotal=Da,Da=Ea,Na.data.push({y:null,x:Pa-.5})):Ea+=fa,Fa=V(Fa,Ea),ta=e(ta,Ea),Aa.total=Ea,H=Aa.showLabel=u(Y.showlabel,n.showlabels,1),H=Aa.dataLabel=c(H?k(Y.label,Y.name):J),0<fa?(ua=A(Y.color,n.positivecolor,B),0!==va&&(ia=A(Y.positivehovercolor,
n.positivehovercolor,n.plotfillhovercolor,n.columnhovercolor,ua))):(ua=A(Y.color,n.negativecolor,B),0!==va&&(ia=A(Y.negativehovercolor,n.negativehovercolor,n.plotfillhovercolor,n.columnhovercolor,ua))),N=A(Y.alpha,b.plotFillAlpha),C=u(Y.dashed,h),xa=u(Y.dashlen,d),ja=ca=u(Y.dashgap,ca),Aa.showValue=u(Y.showvalue,b.showValues),Aa.setValue=za=fa,Aa.setLink=A(Y.link),Aa.toolTipValue=za=pa.dataLabels(za,La),Aa.setDisplayValue=ya=r(c(Y.displayvalue)),Aa.displayValue=A(ya,za),Aa.plotBorderDashStyle=C=1===
C?Ca(xa,ja,ma):0===C?"none":oa,Aa.colorArr=ua=v.graphics.getColumnColor(ua+","+ka.replace(/,+?$/,""),N,ra,ha,Q,da,na.toString(),0,!1),0!==va&&(xa=A(Y.alpha,Y.hoveralpha,g.hoveralpha,n.plotfillhoveralpha,n.columnhoveralpha,N),ja=A(Y.hovergradientcolor,g.hovergradientcolor,n.plothovergradientcolor,ka),!ja&&(ja=""),za=A(Y.hoverratio,g.hoverratio,Y.ratio,n.plothoverratio,ra),ya=u(360-Y.hoverangle,360-g.hoverangle,360-n.plothoverangle,ha),W=A(Y.borderhovercolor,g.borderhovercolor,n.plotborderhovercolor,
da),Ma=A(Y.borderhoveralpha,g.borderhoveralpha,n.plotborderhoveralpha,na,N),N=u(Y.borderhoverthickness,g.borderhoverthickness,n.plotborderhoverthickness,ma),ea=u(Y.borderhoverdashed,g.borderhoverdashed,n.plotborderhoverdashed),ga=u(Y.borderhoverdashgap,g.borderhoverdashgap,n.plotborderhoverdashgap,d),la=u(Y.borderhoverdashlen,g.borderhoverdashlen,n.plotborderhoverdashlen,ca),ea=ea?Ca(la,ga,N):C,1===va&&ia===B&&(ia=T(ia,70)),B=v.graphics.getColumnColor(ia+","+ja,xa,za,ya,Q,W,Ma.toString(),0,!1),Aa.setRolloutAttr=
{fill:a(ua[0]),stroke:q&&a(ua[1]),"stroke-width":ma,"stroke-dasharray":C},Aa.setRolloverAttr={fill:a(B[0]),stroke:q&&a(B[1]),"stroke-width":N,"stroke-dasharray":ea}),C=Aa.toolTipValue,B=r(c(A(Y.tooltext,g.plottooltext,n.plottooltext))),f?void 0!==B?(N=[1,2,3,5,6,7,20,21,24,25],H={formattedValue:C,label:H,yaxisName:D,xaxisName:G,cumulativeValue:Ea,cumulativeDataValue:pa.dataLabels(Ea),sum:Ga,unformattedSum:Ka},B=E(B,N,H,Y,n,g)):B=null===C?!1:H!==J?H+L+C:C:B=!1,Na.data.push({y:null===fa?null:Ea,x:Pa}),
Pa+=1,Aa.toolText=B,Aa.setTooltext=B);b.maxValue=Fa;b.minValue=ta;b.connectNullData=u(n.connectnulldata,0);b.showConnectors=u(n.showconnectors,1);b=g.catData;for(l=0;l<b.length;l+=1)g=b[l],p.splice(g.index,0,g.data);m.xAxis[0].setCategory(p);this.maxminFlag=!1},draw:function(){var b,g,l,k=this,E=k.chart,z=k.chart.jsonData.chart,R=E.config.canvasBottom;l=E.graphics.datasetGroup;var w=k.JSONData,F=k.config,V=k.groupManager,h=k.positionIndex,d=k.chart.config.categories,f=w.data,c=d&&d.length,D=f&&f.length,
G,f=k.visible,T=E.components,H=T.paper,J=T.xAxis[0],M=T.yAxis[0],O=k.components,ca,U,Q,va=E.graphics,ha=v.Raphael,ra=F.showTooltip,ka=J.getAxisPosition(0),ka=J.getAxisPosition(1)-ka,na=F.definedGroupPadding,da=F.plotSpacePercent/200,oa=V.getDataSetPosition(k),Y=F.maxColWidth,ka=(1-.01*na)*ka||e(ka*(1-2*da),1*Y),ka=u(oa.columnWidth,ka/1),za,na=oa.xPosOffset||0,oa=oa.height,fa,Aa,O=O.data,ua,ia,da=M.getAxisBase(),Y=M.yBasePos=M.getAxisPosition(da),xa=0,ja=F.showShadow,ya=F.plotBorderThickness,W=F.plotRadius,
Ma=k.graphics.container,ea=k.graphics.trackerContainer,ga=k.graphics.dataLabelContainer,la=k.graphics.shadowContainer;ua=va.trackerGroup;var Ca,va=!0,Ha=!1,pa=k.pool||(k.pool={}),La=function(){!1!==k.visible||!1!==k._conatinerHidden&&void 0!==k._conatinerHidden||(Ma.hide(),ea.hide(),la.hide(),ga&&ga.hide(),k._conatinerHidden=!0)},Ja=function(){k.drawLabel()},Fa=E.get("config","animationObj"),ta=Fa.duration||0,Ka=Fa.dummyObj,Ea=Fa.animObj,Fa=Fa.animType,Da,T=T.canvas.config.clip["clip-canvas"].slice(0);
Ma||(Ma=k.graphics.container=H.group("columns",l),f||Ma.hide());Ma.attr("clip-rect",T);ea||(ea=k.graphics.trackerContainer=H.group("col-hot",ua),f||ea.hide());la||(la=k.graphics.shadowContainer=H.group("shadow",l).toBack(),f||la.hide());F.showConnectors&&k.drawLine();F=e(c,D);for(c=0;c<F;c++)if(Da=(D=O[c])&&(D.trackerConfig={}),ia=D&&D.config,T=(l=D&&D.graphics)&&l.element,ia)(G=ia.setValue,ca=0<=G,null===G)?T&&T.hide():(ua=ia.setLink,g=ia.colorArr,D.graphics||(O[c].graphics={}),b=ia.displayValue,
r(q(A(ia.origToolText,w.plottooltext,z.plottooltext))),U=ca?ia.previousPositiveY:ia.previousNegativeY,ia.issum?ia.isCumulative||(U=ia.lastComTotal):U=O[c-1]&&O[c-1].config.total,za=M.getAxisPosition(U||da),ca=J.getAxisPosition(c)+na,0!==oa?(U=M.getAxisPosition(G+(U||0)),fa=p(za-U)):(fa=0,U=za),U=e(U,za),B(U+fa)>=R&&(fa+=ya/2),V.isCrisp?(Q=ha.crispBound(ca,U,ka,fa,ya),ca=Q.x,U=Q.y,za=Q.width,fa=Q.height):za=ka,Aa=ia.finalTooltext=ia.toolText,Ca=ia.plotBorderDashStyle,Da.eventArgs={index:c,link:ua,
value:G,displayValue:b,categoryLabel:d[c].label,toolText:Aa,id:"",datasetIndex:h,datasetName:w.seriesname,visible:f,setRolloutAttr:ia.setRolloutAttr,setRolloverAttr:ia.setRolloverAttr},ta||(Y=U,xa=fa),G={ishot:!ra,fill:a(g[0]),stroke:a(g[1]),"stroke-width":ya,"stroke-linejoin":"miter",visibility:f},g={x:ca,y:Y,width:za,height:xa||1,r:W,"stroke-dasharray":Ca},D._xPos=ca,D._yPos=U,D._height=fa,D._width=za,b=!1,T?(Ha=!0,g.y=U,g.height=fa||1,T.attr(G).animateWith(Ka,Ea,g,ta,Fa,va&&La)):(pa.element&&pa.element.length?
T=l.element=pa.element.shift():(T=l.element=H.rect(Ma),b=!0),T.show().attr(G).attr(g),ta?(T.animateWith(Ka,Ea,{y:U,height:fa||1},ta,Fa,va&&Ja),va=!1):Ha=!0),T.shadow({opacity:ja},la).data("BBox",Q),ua||ra?(fa<N&&(U-=(N-fa)/2,fa=N),Da.attr={x:ca,y:U,width:za,height:fa,r:W,cursor:ua?"pointer":"",stroke:C,"stroke-width":ya,fill:C,ishot:!0,visibility:f}):b&&k.attachCallBack.call(T,k,E,D),E.config.enablemousetracking&&T.data("eventArgs",Da.eventArgs).data(m,!0).data(n,ia.setRolloverAttr||{}).data(L,ia.setRolloutAttr||
{}));Ha&&k.drawLabel()},attachCallBack:function(a,b,e){this.click(a.getPlotClickFn(b)).hover(a.rolloverResponseSetter(e,b),a.rolloutResponseSetter(e,b))},drawLine:function(){var a=this.chart,b=a.components,g=a.graphics,l=this.config,k=b.paper,m,p,n=b.xAxis[0],b=b.yAxis[0],r=b.getAxisBase();m=b.getAxisPosition(r);var r=this.graphics.lineContainer,q=l.definedGroupPadding,h=l.plotSpacePercent/200,d=n.getAxisPosition(0),d=n.getAxisPosition(1)-d,f=l.maxColWidth,q=((1-.01*q)*d||e(d*(1-2*h),1*f))/2,c=l.zLine,
l=l.connectNullData,h=c.data,d=h.length,f=this.graphics,B=c.dashStyle,v=c.color,c=c.lineWidth,L,A=f.zLine,C=null,V=[],T=[],H=a.get("config","animationObj"),a=H.duration||0,J=H.dummyObj,N=H.animObj,H=H.animType,g=g.datalabelsGroup;p=f.dataLabelContainer;p||(p=this.graphics.dataLabelContainer=k.group("datalabel",g));r||(r=f.lineContainer=k.group("line-connector",p));b.yBasePos=m;for(g=0;g<d;g+=1)p=h[g],m=p.y,null===m?(T.length=0,0===l&&(C=null)):(p=u(p.x,g),m=b.getAxisPosition(m),p=n.getAxisPosition(p),
p=E(p,c,c).position,m=E(m,c,c).position,null!==C?(T.length&&(V=V.concat(T),T.length=0),V.push("M",L,C,"m",-q,0,"H",p,"h",q,"m",0,m-C)):T.push("M",p,m),L=p,C=m);A||(A=f.zLine=k.path(r).attr({path:V,"stroke-linecap":"round","stroke-opacity":0}));A.animateWith(J,N,{path:V,"stroke-opacity":1,"stroke-dasharray":B,stroke:v,"stroke-linejoin":2<=c?"round":"miter","stroke-width":c},a,H)},hidingPosition:function(){return function(){return{width:0}}},_hoverFunc:function(a,b,e){var k=a.graphics[l]||a.graphics[g];
b="DataPlotRollOver"===b?k.data(n):k.data(L);e&&a.graphics[g].attr(b)}},"Column"])}]);Q.register("module",["private","modules.renderer.js-dataset-bar2d",function(){var b=this.window,v=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,J=v.BLANKSTRING,C="rgba(192,192,192,"+(b?.002:1E-6)+")",b=v.TOUCH_THRESHOLD_PIXELS,H=v.CLICK_THRESHOLD_PIXELS,A=v.pluck,u=v.pluckNumber,a=v.toRaphaelColor,O=v.hasTouch?b:H,b=v.preDefStr,q=b.configStr,M=b.animationObjStr,U=b.showHoverEffectStr,N=b.barStr,E=b.shadowStr,
r=b.visibleStr,k=b.setRolloverAttrStr,m=b.setRolloutAttrStr,n=b.dataLabelStr,L=b.miterStr,g=b.POSITION_MIDDLE,l=b.POSITION_START,B=b.POSITION_END,b=Math,e=b.min,V=b.max,p=v.schedular;Q.register("component",["dataset","Bar2D",{type:"bar2d",draw:function(){var b=this,g=b.JSONData,l=b.chart.jsonData.chart,n=b.config,B=n.legendInteractivity,V=b.groupManager,z=b.index,R=g.data,w=b.chart.config.categories,F,H,h,d,f=b.chart,c=f.getJobList(),D=f.config,G=f.components.paper,aa=f.components.xAxis[0],Q=f.components.yAxis[0];
F=f.graphics.columnGroup;var Ia=f.config.isstacked,sa,wa,ca,ma=v.parseUnsafeString,qa=v.getValidValue,va=v.Raphael,ha=D.showtooltip,ra=aa.getAxisPosition(0),ka=aa.getAxisPosition(1),na=V.config.groupMaxWidth=n.groupMaxWidth=ka-ra,da=n.definedGroupPadding,oa=D.plotspacepercent/200,Y=V.getDataSetPosition(b),ra=V.stackSumValue[b.positionIndex],za=D.maxcolwidth,fa=f.get(q,M),ka=fa.animType,Aa=fa.animObj,ua=fa.dummyObj,fa=fa.duration,na=(1-.01*da)*na||e(na*(1-2*oa),1*za),na=u(Y.columnWidth,na/1),ia,da=
Y.xPosOffset||0,Y=Y.height,xa,oa=b.components.data,ja,ya,W,Ma,ea,za=Q.getLimit(),ga=za.min,za=0<za.max&&0>ga,ga=Q.getAxisBase(),la=Q.yBasePos=Q.getAxisPosition(ga),Ca,Ha=0,pa=D.plotborderthickness,La=pa/2,Ja=D.useroundedges,Fa=b.graphics.container,ta=b.graphics.dataLabelContainer,Ka=b.graphics.shadowContainer,Ea,Da=b.visible,Ga=!0,Na=!1,Ua=(b.components.removeDataArr||[]).length,Pa=b.components.pool||[],Sa=D.showplotborder,ab=D.plothovereffect,Xa,n=n.isSkippedData,Za,bb,eb=b.drawn,Va=function(){!1!==
b.visible||!1!==b._conatinerHidden&&void 0!==b._conatinerHidden||(Fa.hide(),Ka.hide(),ta&&ta.hide(),b._conatinerHidden=!0)},Ya=function(){V.drawSumValueFlag&&V.drawSumValue()};Fa||(Fa=b.graphics.container=G.group(N,F),Da||Fa.hide());Ka||(Ka=b.graphics.shadowContainer=G.group(E,F).toBack(),Da||Ka.hide());Da&&(Fa.show(),Ka.show());F=aa.getCategoryLen();for(d=0;d<F;d++)if(H=R&&R[d],h=(ea=(ja=oa[d])&&ja.config)&&ea.setValue,W=ea&&ea.isSkipped,void 0===ja||void 0===h||null===h||!0===W)(bb=ja&&ja.graphics)&&
bb.element&&bb.element.hide(),ea&&delete ea.isSkipped;else if(W=ja.graphics&&ja.graphics.element,!(eb&&!1!==n&&B&&(!Da&&!W||Da&&W&&0!==ja._width&&0!==ja._height))){Xa=ja.trackerConfig={};!ja||void 0!==h&&null!==h||ja.graphics&&ja.graphics.hotElement&&ja.graphics.hotElement.hide();W=ea.setLink;Ea=ea.colorArr;xa=0<=h;ja.graphics||(oa[d].graphics={});Ma=ea.displayValue;ia=xa?ea.previousPositiveY:ea.previousNegativeY;ya=qa(ma(A(H.tooltext,g.plottooltext,l.plottooltext)));Ia&&(ia=b._parseValues(d,ia,ra[d],
ya),h=ea.value);Ca=Q.getAxisPosition(ia||ga);H=aa.getAxisPosition(d)+da;0!==Y?(wa=Q.getAxisPosition(h+(ia||0)),sa=Math.abs(Ca-wa)):(sa=0,wa=Ca);wa=Math.min(wa,Ca);0<sa-pa&&0<pa&&(za?Ia?(wa+=La,xa||ia)?xa&&(sa=sa-pa+1,ia&&(wa=wa-pa+1)&&(sa=sa+pa-1)):sa-=pa:(wa+=La,sa-=pa):xa&&(wa-=La));V.isCrisp?(ca=va.crispBound(H,wa,na,sa,pa),H=ca.x,wa=ca.y,ia=ca.width,sa=ca.height):ia=na;xa=ea.finalTooltext=!1!==ea.toolText?ea.toolText+(ya?"":ea.toolTipValue):"";ya=ea.plotBorderDashStyle;Xa.eventArgs={index:d,link:W,
value:h,displayValue:Ma,categoryLabel:w[d].label,toolText:xa?xa:"",id:J,datasetIndex:z,datasetName:g.seriesname,visible:Da};fa||(la=wa,Ha=sa);h={x:la,y:H,width:Ha||1,height:ia,r:Ja,ishot:!ha,fill:a(Ea[0]),stroke:a(Ea[1]),"stroke-width":Sa?pa:0,"stroke-dasharray":ya,"stroke-linejoin":L,visibility:r};ja._xPos=wa;ja._yPos=H;ja._height=ia;ja._width=sa;if(ja.graphics.element){Na=!0;ja=ja.graphics.element;h={x:wa,y:H,height:ia};if(!0===b.visible||0===Y||Ia)h.width=sa;ja.animateWith(ua,Aa,h,fa,ka,Ga&&Va);
ja.attr({ishot:!ha,fill:a(Ea[0]),stroke:a(Ea[1]),"stroke-width":Sa?pa:0,"stroke-dasharray":ya,"stroke-linejoin":L,visibility:r});ea.elemCreated=!1}else Pa.element&&Pa.element.length?(ja=ja.graphics.element=Pa.element.shift(),ja.show()):ja=ja.graphics.element=G.rect(Fa),ja.attr(h),ja.animateWith(ua,Aa,{x:wa,width:sa||1},fa,ka,Ga&&Ya),ea.elemCreated=!0,Ga=!1;ja.shadow(ea.shadow,Ka).data("BBox",ca);if(W||ha)sa<O&&(wa-=(O-sa)/2,sa=O,Za=!0),Xa.attr={x:wa,y:H,width:sa,height:ia,r:Ja,cursor:W?"pointer":
J,stroke:C,"stroke-width":Sa?pa:0,fill:C,ishot:!0,visibility:Da},f.config.enablemousetracking&&ja.data("eventArgs",Xa.eventArgs).data(U,ab).data(k,ea.setRolloverAttr||{}).data(m,ea.setRolloutAttr||{})}Za&&(D.toleranceLeft=5);b.drawn?b.drawLabel():c.labelDrawID.push(p.addJob(function(){b.drawLabel()},v.priorityList.label));b.drawn=!0;V.drawSumValueFlag&&Na&&V.drawSumValueFlag&&V.drawSumValue();Ua&&b.remove()},drawLabel:function(){var a=this.chart,b=a.graphics,k=a.config,m=a.components.canvas.config,
p=a.config.dataLabelStyle,v=this.JSONData.data,z=a.config.categories,L=a.is3D,w=a.config.isstacked,F=z&&z.length,E=v.length,z=this.components.data,h=a.components.paper,d=a.linkedItems.smartLabel,f,c,D=m.yDepth,m=m.xDepth,G=a.components.numberFormatter,A=J,C,H=k.placevaluesinside,N=k.canvasWidth,O=k.canvasLeft,ca,k=k.valuepadding+2,U,Q,va,ha=a.get(q,M),a=ha.duration,ra=ha.animType,ka=ha.dummyObj,ha=ha.animObj,na=this.graphics.dataLabelContainer,da,oa,Y,za=this.components.pool||{};va=this.visible;b=
b.datalabelsGroup;na||(na=this.graphics.dataLabelContainer=h.group(n,b),va||na.hide());va&&na.show();d.setStyle(p);b=F<E?F:E;if(va)for(F=0;F<b;F++)if(Q=(c=(f=z[F])&&f.config)&&c.setValue,void 0===f||void 0===Q||null===Q||!0===c.labelSkip)(Y=f&&f.graphics)&&Y.label&&Y.label.hide(),c&&delete c.labelSkip;else if(E=f.graphics)if(C=v[F],U=f._yPos,va=f._xPos,Q=G.getCleanValue(C.value),C=0>u(Q),ca=f._height,f=f._width,da=w?g:C?H?l:B:H?B:l,A=c.displayValue,oa=E.label,c.showValue&&void 0!==A&&null!==A&&A!==
J&&null!==Q){c={text:A,fill:p.color,"text-bound":[p.backgroundColor,p.borderColor,p.borderThickness,p.borderPadding,p.borderRadius,p.borderDash],"line-height":p.lineHeight,visibility:r};A=d.getOriSize(A);A=A.width;A+=k;oa=k;U+=.5*ca;ca=va+(C?0:f);Q=C?va-O:O+N-(va+f);w?(ca+=.5*(C?f:-f),ca=V(O+.5*A,ca),ca=e(O+N-.5*A,ca),ca-=L?m:0,U+=L?D:0):H?f>=A?(ca+=C?oa:-oa,L&&(U+=D,ca-=m)):A<Q?(ca+=C?-oa:oa,da=C?B:l,L&&C&&(ca-=m)):(C?(ca=va+f+V(A-va-f+O,0)-oa,da=B):(ca=va-V(A-(O+N-va),0)+oa,da=l),L&&(ca-=m,U+=D)):
Q>=A?(ca+=C?-oa:oa,L&&C&&(ca-=m,U+=m)):(ca+=C?oa+A:-(oa+A),L&&(ca-=m,U+=D));if(ca>O+N||ca<O)ca=O+4,da=l;c["text-anchor"]=da;(oa=E.label||za.label&&za.label.shift())?oa.show().animateWith(ka,ha,{x:ca,y:U},a,ra).attr(c):(c.x=ca,c.y=U,E.label=h.text(c,na))}else oa&&oa.hide()},remove:function(){var a=this.components,b=a.removeDataArr,e=a.pool||(a.pool={element:[],hotElement:[],label:[]}),g=b.length,l,k=this.maxminFlag,m,p,n;for(n=0;n<g;n++)if(l=b[0],b.splice(0,1),l&&l.graphics){p=l.graphics;for(m in p)p[m].hide();
l.graphics.element&&(e.element=e.element.concat(l.graphics.element));l.graphics.hotElement&&(e.hotElement=e.hotElement.concat(l.graphics.hotElement));l.graphics.label&&(e.label=e.label.concat(l.graphics.label))}a.pool=e;k&&this.setMaxMin()}},"Column"])}]);Q.register("module",["private","modules.renderer.js-dataset-bar3d",function(){var b=this.window,v=this.hcLib,b=/msie/i.test(b.navigator.userAgent)&&!b.opera,J=v.BLANKSTRING,C="rgba(192,192,192,"+(b?.002:1E-6)+")",b=v.TOUCH_THRESHOLD_PIXELS,H=v.CLICK_THRESHOLD_PIXELS,
A=v.pluck,u=v.pluckNumber,a=v.toRaphaelColor,O=v.hasTouch?b:H,b=v.preDefStr,q=b.noneStr,M=b.configStr,U=b.animationObjStr,N=b.showHoverEffectStr,E=b.shadowStr,r=b.visibleStr,k=b.barStr,m=b.hiddenStr,n=b.negativeValueStr,L=b.positiveValueStr,g=b.zeroPlaneStr,l=b.categoryPlotsStr,B=b.setRolloverAttrStr,e=b.setRolloutAttrStr,V=v.graphics.getCubePathOutline,b=Math,p=b.min,T=b.abs,K=v.schedular;Q.register("component",["dataset","Bar3D",{draw:function(){var b=this,Z=b.JSONData,P=b.chart.jsonData.chart,
S=b.config,z=b.groupManager,R=b.index,w=Z.data,F=b.chart.config.categories,H,h,d,f,c=b.chart,D=c.getJobList(),G=c.config,aa=G.plothovereffect,Q=c.components.paper,Ia=c.components.xAxis[0],sa=c.components.yAxis[0];f=c.graphics.columnGroup;var wa=G.isstacked,ca,ma,qa=v.parseUnsafeString,va=v.getValidValue,ha=G.showtooltip,ra=Ia.getAxisPosition(0),ka=Ia.getAxisPosition(1),na=S.groupMaxWidth=T(ka-ra),da=S.definedGroupPadding,oa=G.plotspacepercent/200,Y=z.getDataSetPosition(b),S=z.stackSumValue[b.positionIndex],
za=G.maxcolwidth,fa=c.get(M,U),ra=fa.animType,ka=fa.animObj,Aa=fa.dummyObj,fa=fa.duration,na=(1-.01*da)*na||p(na*(1-2*oa),1*za),na=u(Y.columnWidth,na/1),ua,da=Y.xPosOffset||0,Y=Y.height,ia,oa=b.components.data,xa,ja,ya,W,Ma,ea,ga,la;W={};ea={};var za=sa.getLimit(),Ca=za.max;la=za.min;var za=sa.getAxisBase(),Ha=sa.yBasePos=sa.getAxisPosition(za),pa=0,La=G.plotborderthickness;ga=b.graphics.container;var Ja=b.graphics.dataLabelContainer,Fa=b.graphics.shadowContainer,ta,Ka,Ea,Da,Ga,Na,Ua,Pa=G.use3dlighting,
Sa=!0,ab=!1,Xa=b.visible,Za=(b.components.removeDataArr||[]).length,bb=b.components.pool||[],eb=G.showplotborder,Va,Ya=function(){var a,c;if(!1===b.visible&&(!1===b._conatinerHidden||void 0===b._conatinerHidden)){Ja&&Ja.hide();a=b.components.data;for(c=0;c<H;c++)a[c]&&a[c].graphics&&a[c].graphics.element&&a[c].graphics.element.attr("visibility",m),a[c]&&a[c].graphics&&a[c].graphics.hotElement&&a[c].graphics.hotElement.attr("visibility",m);Fa.hide();b._conatinerHidden=!0}},$a=function(){var c=b.components.data,
d;for(d=0;d<H;d++)c[d]&&c[d].graphics&&c[d].graphics.element&&c[d].graphics.element.attr("fill",[a(c[d].config.colorArr[0]),!Pa]);z.drawSumValueFlag&&z.drawSumValue()};ga||(ga=b.graphics.container=c.datasetLayers=c.datasetLayers||Q.group(k,f));Fa||(Fa=b.graphics.shadowContainer=Q.group(E,f).toBack());H=Ia.getCategoryLen();if(Xa)for(f=0;f<H;f++)oa[f].graphics&&oa[f].graphics.element&&oa[f].graphics.element.attr("visibility",r),oa[f].graphics&&oa[f].graphics.hotElement&&oa[f].graphics.hotElement.attr("visibility",
r);xa=ga.negative=ga.negative||Q.group(n,ga);ya=ga.column=ga.column||Q.group(L,ga);0>la&&0<=Ca?(f=ga.zeroPlane)?(f=[Ha-5,c.config.canvasTop+5,1,c.config.canvasHeight,5,5,f],z.graphics.zeroplane.show(),z.graphics.zeroplane._.cubetop.show(),z.graphics.zeroplane._.cubeside.show(),z.graphics.zeroplane.animateWith(Aa,ka,{cubepath:f},fa,ra),z.graphics.zeroplane.attr({fill:[G.zeroPlaneColor,!Pa],stroke:G.zeroPlaneBorderColor||"none","stroke-width":G.zeroPlaneShowBorder?1:0})):(f=ga.zeroPlane=Q.group(g,ga).insertBefore(ya),
!z.graphics&&(z.graphics={}),z.graphics.zeroplane=Q.cubepath(Ha-5,c.config.canvasTop+5,1,c.config.canvasHeight,5,5,f).attr({fill:[G.zeroPlaneColor,!Pa],stroke:G.zeroPlaneBorderColor||"none","stroke-width":G.zeroPlaneShowBorder?1:0})):z.graphics&&z.graphics.zeroplane&&z.graphics.zeroplane.hide()&&z.graphics.zeroplane._.cubetop.hide()&&z.graphics.zeroplane._.cubeside.hide();(c=xa.data(l))||(xa.data(l,Array(H)),c=xa.data(l));(Ca=ya.data(l))||(ya.data(l,Array(H)),Ca=ya.data(l));for(f=0;f<H;f+=1)c[f]=
c[f]||Q.group(xa),Ca[f]=Ca[f]||Q.group(ya);f=0;for(Ka=H-1;f<H;f++,Ka--)if(ga=f,h=w&&w[f],W=(la=(xa=oa[f])&&xa.config)&&la.setValue,void 0!==xa&&void 0!==W&&null!==W){Va=xa.trackerConfig={};!xa||void 0!==W&&null!==W||(xa.graphics&&xa.graphics.element&&(xa.graphics.element.hide(),xa.graphics.element._.cubeside.hide(),xa.graphics.element._.cubetop.hide()),xa.graphics&&xa.graphics.hotElement&&xa.graphics.hotElement.hide());ya=la.setLink;ta=la.colorArr;xa.graphics||(oa[f].graphics={});ea=la.displayValue;
ca=0<=W?la.previousPositiveY:la.previousNegativeY;ia=va(qa(A(h.tooltext,Z.plottooltext,P.plottooltext)));wa&&(ca=b._parseValues(f,ca,S[f],ia),W=la.value);ua=sa.getAxisPosition(ca||za);h=Ia.getAxisPosition(f)+da;0!==Y?(ma=sa.getAxisPosition(W+(ca||0)),ca=Math.abs(ua-ma)):(ca=0,ma=ua);ma=Math.min(ma,ua);ua=na;d=(Va.isNegative=Ea=0>W)?c:Ca;Va.targetGroupTracker=void 0;ia=la.finalTooltext=!1!==la.toolText&&la.toolText+(ia?"":la.toolTipValue);Va.eventArgs={index:f,link:ya,value:W,displayValue:ea,categoryLabel:F[f].label,
toolText:ia?ia:"",id:J,datasetIndex:R,datasetName:Z.seriesname,visible:Xa};Ma=Va.eventArgs;W=la.setRolloutAttr;ea=la.setRolloverAttr;fa||(Ha=ma,pa=ca);Da=h;Ga=ma;Na=ua;Ua=ca;h+=5;ma-=5;xa.graphics.element?(ab=!0,ja=xa.graphics.element,d[Ka].appendChild(ja._.cubetop),d[Ka].appendChild(ja._.cubeside),d[Ka].appendChild(ja),d={cubepath:[ma,h,!0===b.visible||0===Y||wa?ca:ja.attrs.cubepath[2],ua,5,5]},ja.animateWith(Aa,ka,d,fa,ra,Sa&&Ya),ja.attr({fill:[a(ta[0]),!Pa],ishot:!0,stroke:eb&&a(ta[1]),"stroke-width":eb?
G.plotborderthickness:0,"stroke-dasharray":la.plotBorderDashStyle,cursor:ya?"pointer":J}),la.elemCreated=!1):(bb.element&&bb.element.length?(ja=xa.graphics.element=bb.element.shift(),d[Ka].appendChild(ja._.cubetop),d[Ka].appendChild(ja._.cubeside),d[Ka].appendChild(ja),ja.show()):ja=xa.graphics.element=Q.cubepath(d[Ka]),ja.attr({cubepath:[fa?Ha-5:ma,h,fa?0:pa,ua,5,5],fill:[a(ta[0]),!Pa],ishot:!0,stroke:eb&&a(ta[1]),"stroke-width":eb?G.plotborderthickness:0,"stroke-dasharray":la.plotBorderDashStyle,
cursor:ya?"pointer":J,visibility:Xa?r:m}),ja.animateWith(Aa,ka,{cubepath:[ma,h,ca,ua,5,5]},fa,ra,Sa&&$a),Sa=!1,xa._newXPos=h,la.elemCreated=!0);ja.shadow(la.shadow,Fa).data("BBox",{height:ua,width:pa,x:ma,y:h});if(ya||ha)ca<O&&(ma-=(O-ca)/2,ca=O),Va.attr={path:V([ma,h,ca,ua,5,5]),cursor:ya?"pointer":J,stroke:La&&C||q,"stroke-width":eb?G.plotborderthickness:0,fill:C,ishot:!0};wa&&!Ea||ja.toBack();xa._xPos=Ga;xa._yPos=Da;xa._height=Na;xa._width=Ua;ja.data("eventArgs",Ma).data("groupId",ga).data(N,!0).data(B,
ea).data(e,W).tooltip(ia);ja._.cubetop.data("eventArgs",Ma).data("groupId",ga).data(N,aa).data(B,ea).data(e,W).tooltip(ia);ja._.cubeside.data("eventArgs",Ma).data("groupId",ga).data(N,aa).data(B,ea).data(e,W).tooltip(ia)}b.drawn?b.drawLabel():D.labelDrawID.push(K.addJob(function(){b.drawLabel()},v.priorityList.label));b.drawn=!0;z.drawSumValueFlag&&ab&&z.drawSumValueFlag&&z.drawSumValue();Za&&b.remove();G.toleranceLeft=7;G.toleranceBottom=7},_checkPointerOverColumn:function(a,b,e){var g=this.chart.config,
l=g.plotborderthickness,k=g.showplotborder,m=this.components.data,p=m[a],n,h,d;if(p&&(n=p.config.setValue,!g.isstacked||!(0>n&&this.valueLook||0<n&&!this.valueLook))&&(l=k?l:0,null!==n&&(k=p._yPos,n=p._height+5,g=p._xPos-5,p=p._width+5,h=b-g,d=e-k,l=(l=0<=h&&h<=p+l&&0<=d&&d<=n+l?0<b+e-(g+k)-5:!1)?0>b+e-(g+k+p+n)+5:!1)))return{pointIndex:a,hovered:l,pointObj:m[a]}},_getHoveredPlot:function(a,b){var e=this.chart,g=e.config,l=e.components.canvas.config,l=Math.max(l.canvasPaddingLeft,l.canvasPadding),
k=g.canvasLeft,g=g.canvasTop,e=e.components.xAxis[0].getValue(e.isBar?b-g-l:a-k-l),e=Math.round(e);return this._checkPointerOverColumn(e-1,a,b)||this._checkPointerOverColumn(e,a,b)},remove:function(){var a=this,b=a.components,e=b.removeDataArr,g=b.pool||(b.pool={element:[],hotElement:[],label:[]}),l=e.length,k=a.config.groupMaxWidth,m,p=a.maxminFlag,n,h,d;(function(){return!1===a.endPosition?function(){return{x:m._xPos-k*l}}:!0===a.endPosition?function(){return{x:m._xPos+k*l||0}}:function(){return{width:0}}})();
for(d=0;d<l;d++)if(m=e[0],e.splice(0,1),m&&m.graphics){h=m.graphics;for(n in h)h[n].hide();m.graphics.element&&(g.element=g.element.concat(m.graphics.element));m.graphics.hotElement&&(g.hotElement=g.hotElement.concat(m.graphics.hotElement));m.graphics.label&&(g.label=g.label.concat(m.graphics.label))}b.pool=g;p&&a.setMaxMin()}},"Bar2D"])}]);Q.register("module",["private","modules.renderer.js-dataset-area",function(){var b=this.hcLib,v=b.parseConfiguration,J=this.window.Image,C="VML"===b.Raphael.type,
H=b.BLANKSTRING,A=b.TOUCH_THRESHOLD_PIXELS,u=b.CLICK_THRESHOLD_PIXELS,a=b.extend2,O=b.pluck,q=b.pluckNumber,M=b.toRaphaelColor,U=b.getFirstAlpha,N=b.HUNDREDSTRING,E=b.plotEventHandler,r=b.hasTouch?A:u,k=b.getCrispValues,m=b.getValidValue,A=b.preDefStr,n=A.DEFAULT,L=A.visibleStr,g=A.hiddenStr,l=A.setRolloverAttrStr,B=A.setRolloutAttrStr,A=Math,e=A.min,V=A.max,p=A.ceil,T=b.getFirstColor,K=b.schedular;Q.register("component",["dataset","area",{type:"area",_getHoveredPlot:function(a,b){var e=this.chart,
g=e.components.canvas.config,l=e.components.xAxis[0],k=this.components,k=k.dataRT||k.data,m,n=k.length,r;m=this.config.plotsPerBin||1;var h=this.config,g=a-e.config.canvasLeft-Math.max(g.canvasPaddingLeft,g.canvasPadding||0),h=h&&h.radius||0,e=Math.floor(Math.max(l.getValue(g-h),0)),l=Math.ceil(Math.min(l.getValue(g+h),n-1));1<m&&(e=p(e/m),l=p(l/m),e=(e-1)*m+1,l*=m);for(;l>=e;l--)if(m=k[l])if(r=this.isWithinShape(m,l,a,b))break;return r},isWithinShape:function(a,b,e,g,l){if(a&&((l=a.config.setValue)||
0===l)){var k=a.config.anchorProps,m=k&&k.borderThickness,p=this.chart.config.viewPortConfig;l=this.components;l=l.dataRT||l.data;var n=q(a.config.dragTolerance,0),h,p=a._xPos-(p?p.x*p.scaleX:0);h=a._yPos;if(null!==h)return a=a.config.hoverEffects,(a=Math.max(k&&k.radius,a&&a.anchorRadius||0,r)+m/2)||(a=0),e=Math.sqrt(Math.pow(e-p,2)+Math.pow(g-h,2)),e<=a||e<=n?{pointIndex:b,hovered:!0,pointObj:l[b]}:!1}},_parseShadowOptions:function(){var a=this.chart,b=this.config,e=a.jsonData.chart,a=q(a.defaultPlotShadow,
a.components.colorManager.getColor("showShadow"));return{opacity:q(e.showshadow,a)?b.alpha/100:0}},_firePlotEvent:function(a,e,g,l){var k=this.chart,m=this.components,m=(m.dataRT||m.data)[e],p=this.graphics.sharedAnchor,p=m.graphics.element||void 0!==m.config.setValue&&p&&p.element,r=b.toolTip,q=g.originalEvent,h=k.components.paper.canvas.style,d,f;if(p)switch(d=m.config,f=d.setLink,d=d.eventArgs,a){case "mouseover":this._decideTooltipType(e,l,g);this._rolloverResponseSetter(k,m,q);f&&(h.cursor="pointer");
break;case "mouseout":r.hide(k.chartInstance.id);this._rolloutResponseSetter(k,m,q);f&&(h.cursor=n);break;case "click":E.call(p,k,q,"dataplotclick",d);break;case "mousemove":this._decideTooltipType(e,l,g)}},_rolloverResponseSetter:function(a,b,e,g){var l=b.graphics,k=(l=l&&(l.element||this.getAnchor(a,b)))&&l.getData(),m=k.hoverEnabled;!0!==k.draged&&(this._hoverFunc(b,"DataPlotRollOver",m,a.jsonData.chart),!g&&l&&E.call(l,a,e,"DataPlotRollOver"))},_rolloutResponseSetter:function(a,b,e,g){var l=b.graphics,
k=(l=l&&(l.element||this.getAnchor(a,b,!0)))&&l.getData(),m=k.hoverEnabled,p=this.type,n=b.config,h=n.anchorProps,h=h.radius&&h.anchorAlpha;!0!==k.draged&&(this._hoverFunc(b,"DataPlotRollOut",m,a.jsonData.chart),!g&&l&&E.call(l,a,e,"DataPlotRollOut"));n.isAnchorsDrawn&&!h&&"area"===p&&l&&l.hide()},getAnchor:function(a,b,e){var g=this.graphics,g=g.sharedAnchor||(g.sharedAnchor={}),k=g.element,m=this.graphics.container,p=a.components.paper,n=b&&b.config,r=n&&n.anchorProps,h,d,f,c,q,u;if(r)return h=
n&&n.eventArgs,d=n&&n.setRolloutAttr,f=n&&n.setRolloverAttr,c=n&&n.hoverEffects,q=r&&r.radius,u=r&&r.shadow,a=a.config.prevAnchorHovered,r=r&&r.anchorAlpha,c.anchorAnimation=0,k||(k=g.element=p.polypath(m.anchorGroup)),b._index!==a&&(k.shadow(u,m.anchorShadowGroup).data("anchorRadius",q).data("anchorHoverRadius",c.anchorRadius).data("hoverEnabled",c.enabled).data("eventArgs",h),c.enabled&&k&&k.data(l,f).data(B,d)),e?k.hide():r&&k.show(),n.prevAnchorHovered=b._index,k},configure:function(){var a=this.chart,
e=a.components,g=a.config,l=this.config,k=this.JSONData,p=a.jsonData.chart,n=a.singleseries,r=e.colorManager,B=q(this.index,this.stackIndex),h=q(k.showplotborder,p.showplotborder||1),B=!n||m(p.palettecolors)?r.getPlotColor(B):r.getColor("plotFillColor").split(/\s*\,\s*/)[0],d,f=g.isdual,c=g.haslineset;this.__setDefaultConfig();v(k,l,a.config,{data:!0});l.plotColor=B;l.parentYAxis=f?c?d=1:d="s"===O(k.parentyaxis&&k.parentyaxis.toLowerCase(),"p")?1:0:d=0;this.yAxis=e.yAxis[d];l.valueposition=l.valueposition.toLowerCase();
l.plotfillcolor=O(k.color,p.plotfillcolor,B);l.plotgradientcolor=0!==g.useplotgradientcolor?b.getDefinedColor(p.plotgradientcolor,r.getColor("plotGradientColor")):"";l.plotfillalpha=O(k.alpha,g.plotfillalpha);l.fillColor={color:l.plotfillcolor+(l.plotgradientcolor?","+l.plotgradientcolor:""),alpha:l.plotfillalpha,angle:l.plotfillangle};l.plotborderalpha=h?O(k.plotborderalpha,p.plotborderalpha,k.alpha,p.plotfillalpha,"95"):0;l.plotbordercolor=O(k.plotbordercolor,p.plotbordercolor,p.areabordercolor,
n?m(p.palettecolors)?r.getPlotColor(0):r.getColor("plotBorderColor").split(/\s*\,\s*/)[0]:"666666");l.plotborderdashstyle=l.dashed?b.getDashStyle(l.plotborderdashlen,l.plotborderdashgap,l.plotborderthickness):"none";l.linecolor=O(k.color,p.linecolor,l.plotColor);l.legendSymbolColor="line"===this.type?l.linecolor:l.plotfillcolor;e=b.getDashStyle(l.linedashlen,l.linedashgap,l.linethickness);l.lineDashStyle=l.dashed?e:"none";l.shadow=this._parseShadowOptions();l.drawanchors=q(k.drawanchors,k.showanchors,
p.showanchors,p.drawanchors);l.anchorbgcolor=O(k.anchorbgcolor,g.anchorbgcolor,r.getColor("anchorBgColor"));l.anchorbordercolor=O(k.anchorbordercolor,g.anchorbordercolor,l.linecolor,l.plotColor);this.components.data=this.components.data||(this.components.data=[]);this.visible=1===q(k.visible,!Number(k.initiallyhidden),1);this._setConfigure();this._realTimeConfigure&&this._realTimeConfigure();!1!==a.hasLegend&&this._addLegend()},_setConfigure:function(a,g){var l=this.chart,k=b.parseUnsafeString,p=
this.config,n=l.config,w=this.JSONData,B=l.jsonData.chart,u=a||w.data||[],h,d=l.components.xAxis[0],f=a?a.data.length:d.getCategoryLen(),c,K=n.isDrag,v,L,E,A,C,H=-Infinity,T=Infinity,J=k(n.yaxisname),N=k(n.xaxisname),M=this.yAxis,U=n.tooltipsepchar,Q=p.dashed,ka,na,da;p.imageCount=0;c=this.components.data;c||(c=this.components.data=[]);p.maxRadius=-Infinity;n.dragTolerance=n.dragTolerance||-Infinity;for(L=0;L<f;L++)a?(l=a&&a.data[L]||{},ka=void 0!==g?g+L:c.length-f+L,h=c[ka]):(h=c[L],l=u&&u[L]||{}),
v=h&&h.config,h||(h=c[L]={}),h.config||(v=c[L].config={}),h.graphics||(h.graphics={}),A=q(ka-f,L),v.setValue=E=M.getCleanValue(l.value,p.stack100percent),v.setLink=O(l.link),v.anchorProps=this._parseAnchorProperties(A),p.maxRadius=V(v.anchorProps.radius+v.anchorProps.borderThickness/2,p.maxRadius),da=v.anchorProps.radius+v.anchorProps.borderThickness/2,v.dragTolerance=K?(6>da?5.5:da+.5)+r:0,A=d.getLabel(A),v.label=m(k(A.tooltext||A.label)),v.showValue=q(l.showvalue,p.showvalues),v.dashed=q(l.dashed,
Q),v.dashStyle=v.dashed?b.getDashStyle(p.linedashlen,p.linedashgap,p.linethickness):"none",v.color=O(l.color,p.linecolor),v.setColor=l.color,v.setAlpha=l.alpha,v.setDashed=l.dashed,v.alpha=O(l.alpha,l.linealpha,p.linealpha),v.setColor&&(na=!0),null!==E&&(H=V(H,E),T=e(T,E)),v.setTooltext=k(l.toolText),v.toolTipValue=E=M.dataLabels(E),v.setDisplayValue=A=k(l.displayvalue),v.displayValue=O(A,E),v.formatedVal=A=v.toolTipValue,v.setTooltext=b.getValidValue(k(O(l.tooltext,w.plottooltext,B.plottooltext))),
v.valuePosition=O(l.valueposition,p.valueposition),v.valuePosition&&(v.valuePosition=v.valuePosition.toLowerCase()),n.showtooltip?null===A?E=!1:void 0!==v.setTooltext?(E=[1,2,3,4,5,6,7],A={yaxisName:J,xaxisName:N,formattedValue:A,label:v.label},E=b.parseTooltext(v.setTooltext,E,A,l,B,w)):(n.seriesnameintooltip&&(C=b.getFirstValue(w&&w.seriesname)),E=C?C+U:"",E+=v.label?v.label+U:""):E=!1,v.toolText=E,v.setLevelTooltext=v.setTooltext,v.setTooltext=E,v.hoverEffects=this._parseHoverEffectOptions(h,l),
v.anchorProps.isAnchorHoverRadius=v.hoverEffects.anchorRadius,n.dragTolerance=V(n.dragTolerance,p.maxRadius,v.hoverEffects.anchorRadius);n.dragTolerance=K?(5<n.dragTolerance?n.dragTolerance:5.5)+r:0;p.maxValue=H;p.minValue=T;this.ErrorValueConfigure&&this.ErrorValueConfigure();p.hasSetColor=na},init:function(a){this.JSONData=a;this.components={};this.graphics={};this.configure()},draw:function(){var e=this,p=e.chart,n=p.jsonData,r=e.graphics,z=p.graphics,q=p.config,w=p.getJobList(),u=p.components,
v=e.JSONData,h=n.chart,d=e.config,f=d.legendInteractivity,c=p.config.isstacked,D=e.groupManager.stackSumValue[0],G=e.stackIndex,E,L=u.paper,A=u.xAxis[0],C=e.yAxis,H,T,N,U=q.showtooltip,Q,ha=e.components.data,ra=e.components.removeDataArr||[],ka=ra.length,na,da,oa,Y,za,fa,Aa,ua,ia=z.areaGroup,xa=C.getAxisBase(),ja,ya,W=d.plotbordercolor,Ma=d.plotborderalpha,ea=d.plotborderdashstyle,ga=d.plotborderthickness,la=r.container,Ca,Ha=b.parseUnsafeString,pa=d.fillColor,La=p.is3D,Ja=r.shadowContainer,Fa=r.dataLabelContainer,
ta=function(){!1!==e.visible||!1!==e._conatinerHidden&&void 0!==e._conatinerHidden||(la.areaGroup.hide(),Ja.hide(),la.anchorShadowGroup.hide(),la.anchorGroup.hide(),Fa&&Fa.hide(),e._conatinerHidden=!0)},Ka=function(){!1!==e.visible&&(la.anchorShadowGroup.show(),la.anchorGroup.show(),Fa.show(),Ja.show());ia.area.attr({"clip-rect":null});ia.area.node&&ia.area.node.removeAttribute("clip-path");p._animCallBack()},Ea=d.shadow,Da,Ga=e.visible,Na,Ua,Pa={},Sa=z.datalabelsGroup,ab=A.getPVR(),Xa,Za=La?10:0,
bb,eb=La?10:0,Va=p.components.scrollBar,Ya=p.components.canvas.config.clip,$a=a([],Ya["clip-canvas"]),Ta=a([],Ya["clip-canvas-init"]),kb=q.height,hb=!q.drawfullareaborder,ib=r.connector,ob=e.components.pool||{},ba=0,Ba=e.drawn,Oa=!0!==Ba,Qa,I,cb,vb=e.startPosition,sb={},pb={},gb=p.get("config","animationObj")||{},qb=gb.duration,mb=gb.dummyObj,nb=gb.animObj,Fb=gb.animType,Bb=d.lastPath||{},Wb,Hb=!0,wb,Nb,xb,yb,Cb,Ib=p.config.viewPortConfig,Jb=Ib.x,ub=Ib.scaleX,jb,tb,Wa,Kb,zb,Gb,Sb=e.chart.config.realTimeConfig&&
e.chart.config.realTimeConfig.clear,fb=0,Tb=!Oa&&qb,Lb=0,Mb,Ob,Pb,rb,db=d.isSkippedData,Ab=p.config.canvasTop,Vb=p.config.canvasBottom,Db=r.sharedAnchor,Qb=Db&&Db.element,Eb=p.isRealTime,lb=0,Ub=A.getCategoryLen(),Zb=void 0!==q.scrollMinVal?q.scrollMinVal:0,Rb=void 0!==q.scrollMaxVal?q.scrollMaxVal:Ub,Xb=q.startPathIndex,Yb=q.endPathIndex,$b;if(Xb||Yb)$b={begin:Xb-1,end:Yb+1};d.imagesLoaded=0;e.noOfNewDataAtEnd=0;la||(la=r.container={anchorShadowGroup:L.group("anchor-shadow",ia.areaConnector),areaGroup:L.group("area",
ia.area),anchorGroup:L.group("anchors",ia.areaConnector)},Ga||(la.anchorShadowGroup.hide(),la.areaGroup.hide(),la.anchorGroup.hide()));Ja||(Ja=r.shadowContainer=L.group("shadows",ia.shadows),Ga||Ja.hide());Fa||(Fa=r.dataLabelContainer=r.dataLabelContainer||L.group("datalabel",Sa),Ga||Fa.hide());Ga&&(la.anchorShadowGroup.show(),la.areaGroup.show(),la.anchorGroup.show(),Ja.show(),Fa.show(),e._conatinerHidden=!1);d.groupMaxWidth=A.getAxisPosition(1)-A.getAxisPosition(0);Xa=ab*Ub;if(Sb)for(E=0,Ub=ra.length;E<
Ub;E++)e._removeDataVisuals(ra.shift());else e._shiftOffRemovedPoints();sb=d.removePath;Eb&&($a[1]=0,$a[3]=kb,la.areaGroup.attr({"clip-rect":$a}),Fa.attr({"clip-rect":$a}),la.anchorGroup.attr({"clip-rect":$a}),la.anchorShadowGroup.attr({"clip-rect":$a}),Ja.attr({"clip-rect":$a}));if(!(Zb>=Rb)){for(E=Zb;E<Rb;E++)Q=(na=ha[E])&&na.config,na&&void 0!==Q.setValue&&(na.graphics||(na.graphics={}),oa=na.graphics.element,jb=na.graphics.image,Qa=A.getLabel(E).label,za=Q.setValue,Pb=Q&&Q.isSkipped,void 0===
za||!0===Pb||!1!==db&&!Oa&&f&&(!Ga&&!oa||Ga&&oa&&!na._xPos&&!na._yPos)?(oa&&oa.hide(),jb&&jb.hide(),Q&&(Q.isSkipped=!0)):(Y=Q.setLink,Pa=Q.anchorProps||{},Ua=Pa.shadow,H=m(Ha(O(Q.setLevelTooltext,v.plottooltext,h.plottooltext))),Q&&(ja=0<=za?Q.previousPositiveY:Q.previousNegativeY),c&&za&&(ja=e._parseValues(E,ja,D[E],H),za=Q.value),null!==za&&(ya=C.getAxisPosition(ja||xa)+eb,N=e.visible?C.getAxisPosition(za+(ja||0))+eb:ya,T=A.getAxisPosition(E)-Za+Jb*ub,T=k(T,ga,ga).position,N=k(N,ga,ga).position,
tb=Pa.symbol,Wa=Pa.radius,Kb=Pa.startAngle,wb=Pa.bgColor,Cb=Pa.bgAlpha,Nb=Pa.borderColor,yb=Pa.borderAlpha,xb=Pa.borderThickness,Da=Q.hoverEffects,Mb=N-Wa-xb/2,Ob=N+Wa+xb/2,Mb<Ab&&(q.toleranceTop=V(q.toleranceTop||0,Ab-Mb)),Ob>Vb&&(q.toleranceBottom=V(q.toleranceBottom||0,Ob-Vb)),da=U?Q.toolText+(H?"":Q.toolTipValue):"",Q.finalTooltext=da,fa=Q.eventArgs=Q.eventArgs||{},fa.index=E,fa.link=Y,fa.value=za,fa.displayValue=Q.displayValue,fa.categoryLabel=Qa,fa.toolText=da,fa.id=e.userID,fa.datasetIndex=
G||0,fa.datasetName=v.seriesname,fa.visible=Ga,Da.enabled&&(Q.setRolloverAttr={polypath:[Da.anchorSides||2,T,N,Da.anchorRadius,Da.startAngle,Da.dip],fill:M({color:Da.anchorColor,alpha:Da.anchorBgAlpha}),stroke:M({color:Da.anchorBorderColor,alpha:Da.anchorBorderAlpha}),"stroke-width":Da.anchorBorderThickness},Q.setRolloutAttr={polypath:[Pa.symbol[1]||2,T,N,Pa.radius,Pa.startAngle,0],fill:M({color:Pa.bgColor,alpha:Pa.bgAlpha}),stroke:M({color:Pa.borderColor,alpha:Pa.borderAlpha}),"stroke-width":Pa.borderThickness},
ua=Q.setRolloverAttr,Aa=Q.setRolloutAttr),Gb={polypath:[tb[1]||2,T,N,Wa,Kb,0]},zb=!1,!oa&&Tb&&!0!==vb&&(cb=Ub+ba,I=A.getPixel(cb),na._baseXPos=na._xPos=I,na._yPos=N,na._baseYPos=ya,Bb=this.getLinePath([na],Bb),ba++),rb=Wa&&Pa.anchorAlpha,Q.isAnchorsDrawn||d.drawanchors||rb?Pa.imageUrl?(Q.anchorImageLoaded=!1,Na=new J,Na.onload=e._onAnchorImageLoad(e,E,fa,T,N,na),Na.onerror=e._onErrorSetter(e,E),Na.src=Pa.imageUrl,fb++):(jb&&jb.hide(),oa||(ob.element&&ob.element.length?(oa=na.graphics.element=ob.element.shift(),
oa.show().attr({transform:""})):(oa=na.graphics.element=L.polypath(la.anchorGroup),oa.attr(Gb),zb=!0,Q.isAnchorsDrawn=!0,lb++),Tb&&Eb&&oa.attr({polypath:[Pa.symbol[1]||2,I,N,Pa.radius,Pa.startAngle,0]})),!Ba||zb&&!Eb||oa.show().animateWith(mb,nb,Gb,qb,Fb,Hb&&ta),oa.attr({fill:M({color:wb,alpha:Cb}),stroke:M({color:Nb,alpha:yb}),"stroke-width":xb,visibility:Wa?Ga:g}).shadow(Ua,la.anchorShadowGroup).data("anchorRadius",Wa).data("anchorHoverRadius",Da.anchorRadius).data("hoverEnabled",Da.enabled).data("eventArgs",
fa),Hb=!1,jb&&jb.hide(),Da.enabled&&oa&&oa.data("anchorRadius",Pa.radius).data("anchorHoverRadius",Da.anchorRadius).data("hoverEnabled",Da.enabled).data("eventArgs",fa).data(l,ua).data(B,Aa)):oa&&!rb&&oa.hide()),na._xPos=T,na._yPos=N,na._baseXPos=T,na._baseYPos=ya,na._polyPath=Gb,na._index=E,Lb++));E===lb||d.drawanchors?Qb&&Qb.hide():Db&&Qb?Qb.hide():e.getAnchor(p,na,!0);d.noOfImages=fb;d.totalImages=fb;0===fb&&(!0===Ba?e.drawLabel():w.labelDrawID.push(K.addJob(function(){e.drawLabel()},b.priorityList.label)));
pb=this.getLinePath(ha,{},$b);ka&&Eb?(sb=this.getLinePath(ha,sb),Wb=sb.getPathArr()):Wb=pb.getPathArr();d.lastPath=pb;Va&&(bb=Va.conf.startPercent,$a[2]=Xa+Ta[0],1===bb&&(Ta[0]=$a[2],$a[0]=0));$a[3]+=eb;(Ca=e.graphics.lineElement)?qb&&Eb&&Ca.attr({path:Bb.getPathArr()}):(Ca=e.graphics.lineElement=L.path(la.areaGroup),Ca.attr({path:pb.getPathArr()}),qb&&Ga&&(la.anchorGroup.hide(),la.anchorShadowGroup.hide(),Ja.hide(),Fa.hide(),ia.area.attr({"clip-rect":Ta}).animate({"clip-rect":$a},qb,Fb,Ka)));Sb?
Ca.hide():Ba&&Ca.show().animateWith(mb,nb,{path:Wb},qb,Fb,Hb&&ta);Hb=!1;Ca.attr({stroke:M({color:W,alpha:Ma}),"stroke-width":hb?0:ga,fill:M(pa),"stroke-linecap":"round","stroke-linejoin":2<ga?"round":"miter","stroke-dasharray":ea}).shadow(Ea,Ja);hb?(ib=e.graphics.connector,ib||(ib=e.graphics.connector=L.path({path:pb.pathArr,stroke:M({color:W,alpha:Ma}),"stroke-width":ga,"stroke-linecap":"round","stroke-linejoin":2<ga?"round":"miter","stroke-dasharray":ea},la.areaGroup)),ib.show().animateWith(mb,
nb,{path:pb.pathArr},qb,Fb)):ib&&ib.hide();e.drawn=!0}},getPathArr:function(){var a=this.pathArr,b=this.path2Arr;return a.length||b.length?a.concat(b):[]},_getPathString:function(a){var b=a.length,e="",g;for(g=0;g<b;g+=1)e+=" "+a[g];return e},getLinePath:function(a,b,e){var g=this.chart,l=g.config,k=l.connectnulldata,p=b||{};b=p.lastValidValue||!1;var m=p.temp||[],n=p.temp2||[],h=p.pathArr||[],d=p.path2Arr||[],g=g.components.xAxis[0],f=this.yAxis,c,r,q,B,u,K=a.length,p=p.pointsJoined||0,v,E;c=e&&
e.begin||0;e=e&&e.end||K;for(var K=f.getPixel(0),L=l.viewPortConfig,l=L.x,L=L.scaleX,A="area"===this.type;c<e;c++)if(v=a[c])r=v.config,E=r.setValue,q=v._xPos||g.getPixel(c)+l*L,B=v._yPos||f.getPixel(E),void 0===E||r&&!0===r.isSkipped?r&&delete r.isSkipped:(r=v._baseXPos||(A?q:void 0),u=v._baseYPos||(A?K:void 0),null===E?k||(0<p&&("Z"!==d[d.length-1]&&void 0!==u&&d.push("Z"),h=h.concat(d),d=[]),m=[],n=[],b=!1):b?(m.length&&(h=h.concat(m),void 0!==r&&(d=n,n=[]),m=[],p++),h.push(q,",",B),void 0!==u&&
d.unshift(q,",",u)):(m.push("M",q,",",B,"L"),void 0!==u&&n.push(r,",",u),p=0,b=!0));"Z"!==d[d.length-1]&&0<p&&void 0!==u&&d.push("Z");return{pathArr:h,path2Arr:d,lastValidValue:b,pointsJoined:p,temp:m,temp2:n,getPathArr:this.getPathArr}},_shiftOffRemovedPoints:function(){var a=this,b=a.chart,e=a.config,g=a.components.removeDataArr,l,k=b.components.xAxis[0].getPVR();l=b.get("config","animationObj");var b=l.duration,p=a.drawn&&b,m=l.dummyObj,n=l.animObj,h=l.animType,d,f,c,r,q,B={},u,K,v=a.components.removeElementsArr=
a.components.removeElementsArr||(a.components.removeElementsArr=[]),E=e.hideAnimFlag=!1,L=function(){var c=a.components.removeElementsArr,b=c.length,d;for(d=0;d<b;d++)a._removeDataVisuals(c.shift())},A,C;if(g){l=g.length;for(u=0;u<l;u++){if(C=g[0])if(v.push(C),p){d=C.config.setValue;f=C._xPos;if(void 0==f){g.splice(0,1);continue}c=C.graphics.element;r=C.graphics.label;q=C.graphics.image;K=C.graphics.connector;null!==d&&(d=l*k,A="T,"+-d+",0",C._xPos=f-d,f=C._xPos,C._baseXPos=f,c&&c.animateWith(m,n,
{transform:A},b,h,!E&&L),e.hideAnimFlag=!0,r&&r.animateWith(m,n,{transform:A},b,h),q&&q.animateWith(m,n,{transform:A},b,h),K&&K.hide());B=a.getLinePath([C],B)}else L();g.splice(0,1)}e.removePath=B}},_removeDataVisuals:function(a){var b=this.components.pool||(this.components.pool={}),e,g,l;if(a)for(e in g=a.graphics,g)a=b[e]||(b[e]=[]),l=g[e],l.hide&&"function"===typeof l.hide&&(l.attr({"text-bound":[]}),l.hide(),l.shadow&&l.shadow(!1)),a.push(g[e])},_parseAnchorProperties:function(a,e){var g=this.config,
l=this.type,k=this.chart,p=k.config.anchoralpha,p="area"===(!k.config.anchoralpha&&l)?0:1,m=this.JSONData,n=this.chart.jsonData.chart,k=(e||m.data||[])[a]||{},l={},r=b.graphics.mapSymbolName,h,d;h=void 0!==O(k.anchorstartangle,m.anchorstartangle,n.anchorstartangle,k.anchorimagealpha,m.anchorimagealpha,n.anchorimagealpha,k.anchorimagescale,m.anchorimagescale,n.anchorimagescale,k.anchorimagepadding,m.anchorimagepadding,n.anchorimagepadding,k.anchorimageurl,m.anchorimageurl,n.anchorimageurl,k.anchorradius,
m.anchorradius,n.anchorradius,k.anchorbgcolor,m.anchorbgcolor,n.anchorbgcolor,k.anchorbordercolor,m.anchorbordercolor,n.anchorbordercolor,k.anchoralpha,m.anchoralpha,n.anchoralpha,k.anchorsides,m.anchorsides,n.anchorsides,k.anchorborderthickness,m.anchorborderthickness,n.anchorborderthickness,void 0);d=q(k.drawanchors,g.drawanchors);l.enabled=h?q(d,h):q(d,p);l.startAngle=q(k.anchorstartangle,g.anchorstartangle);l.imageAlpha=q(k.anchorimagealpha,g.anchorimagealpha);l.imageScale=q(k.anchorimagescale,
g.anchorimagescale);l.imagePadding=q(k.anchorimagepadding,g.anchorimagepadding);0>l.imagePadding&&(l.imagePadding=0);l.imageUrl=O(k.anchorimageurl,g.anchorimageurl);l.imageUrl&&g.imageCount++;l.radius=q(k.anchorradius,g.anchorradius);l.isAnchorRadius=O(k.anchorradius,m.anchorradius,n.anchorradius);l.bgColor=O(k.anchorbgcolor,g.anchorbgcolor);p=l.enabled?U(O(k.anchoralpha,g.anchoralpha,l.enabled?N:"0")):0;l.anchorAlpha=p;l.bgAlpha=U(O(k.anchorbgalpha,g.anchorbgalpha,p))*p/100;l.imageAlpha=l.imageAlpha*
p/100;l.borderColor=O(k.anchorbordercolor,g.anchorbordercolor);l.borderAlpha=p;l.sides=O(k.anchorsides,g.anchorsides);l.borderThickness=O(k.anchorborderthickness,g.anchorborderthickness);l.symbol=r(l.sides).split("_");g=q(k.anchorshadow,g.anchorshadow)&&1<=l.radius;l.shadow={opacity:g?p/100:0};return l},_onErrorSetter:function(a){return function(){var e=a.config,g=a.chart.getJobList();e.imagesLoaded++;e.imagesLoaded===e.imageCount&&(!0===a.drawn?a.drawLabel():g.labelDrawID.push(K.addJob(function(){a.drawLabel()},
b.priorityList.label)))}},_onAnchorImageLoad:function(k,p,m,n,r,q){return function(){var w=k.chart,u=w.getJobList(),v=k.config,h=w.config,d=w.components.paper,f=k.components.data,c=void 0!==q?q:f[p],D=c.config,G=c.graphics,E=D.anchorProps,A=k.graphics.container,H=A.anchorGroup,T=A.anchorShadowGroup,J=w.get("config","animationObj"),A=J.dummyObj,N=J.animObj,O=J.animType,J=J.duration,U=E.imageUrl,Q=w.components.xAxis[0],ha=f.length,f=D.hoverEffects,ra=E.imageScale,ka=E.imageAlpha,na=f.imageHoverAlpha,
da=f.imageHoverScale,oa=this.height*ra*.01,Y=this.width*ra*.01,za=this.width*da*.01,fa=this.height*da*.01,Aa=h.showtooltip,ua=k.startPosition,ia=k.noOfNewDataAtEnd,xa=k.allImagesDrawn&&J,ja=D.setLink,ya,W,Ma,ea,ga,la,Ca,Ha,pa,La,Ja,Fa,w=w.isRealTime,ta=k.config.animFlag,Ka=v.noOfImages;W=v.noOfImagesDrawn=v.noOfImagesDrawn||(v.noOfImagesDrawn=0);var Ea=k.components.pool||{};D.isRemoving||(C?(Ca={x:n-this.width*ra*.005,y:r-this.height*ra*.005,width:Y,height:oa,alpha:ka},pa={x:n-this.width*da*.005,
y:r-this.height*da*.005,width:za,height:this.height*da*.01,alpha:na},(na=G.element)&&"image"!==na.type&&(na.remove(),na=G.element=null),na||(G.element=na=d.image(U,H),D.isAnchorsDrawn=!0),h.dragTolerance=h.dragTolerance<oa?oa+.5:h.dragTolerance,na.css({opacity:.01*ka}).data("alwaysInvisible",!ra).data("setRolloverProperties",f).data(l,pa).data(B,Ca).data("imgRef",this).data("anchorRadius",ra).data("anchorHoverRadius",da),na.animateWith(A,N,Ca,J,O)):(ya=E.symbol[1],la=f.isAnchorHoverRadius,W=E.isAnchorRadius,
W=E.radius=W?E.radius:e(Y,oa)/2,Ma=E.shadow,Ca=E.imagePadding,f.radius=la?f.anchorRadius:W+1,ga=f.radius-Ca-.5*f.anchorBorderThickness,la=W-Ca-.5*E.borderThickness,pa=Ca={},Ha=[ya||2,n,r,W,E.startAngle,void 0],E.markerRadius=W,h.dragTolerance=h.dragTolerance<W?W+.5:h.dragTolerance,h={fill:M({color:E.bgColor,alpha:E.bgAlpha}),"stroke-width":E.borderThickness,stroke:M({color:E.borderColor,alpha:E.borderAlpha})},Ca=a({polypath:Ha},h),f&&(pa={polypath:[f.anchorSides||2,n,r,f.radius,f.startAngle,f.dip],
fill:M({color:f.anchorColor,alpha:f.anchorBgAlpha}),"stroke-width":f.anchorBorderThickness,stroke:M({color:f.anchorBorderColor,alpha:f.anchorBorderAlpha})},Ha=V(f.anchorAlpha,f.anchorBorderAlpha),na>Ha&&(na=Ha)),E.bgAlpha&&E.borderAlpha&&(Ha=V(E.bgAlpha,E.borderAlpha),ka>Ha&&(ka=Ha)),La=G.element,Ha={polypath:Ca.polypath},La||(Ea.element&&Ea.element.length?(La=G.element=Ea.element.shift())&&La.attr({transform:""}):(La=G.element=d.polypath(H),La.attr(Ha),ea=D.isAnchorsDrawn=!0),xa&&w&&!0!==ua&&(Ja=
Q.getPixel(ha+ia),k.noOfNewDataAtEnd+=1,Q=[ya||2,Ja,r,W,E.startAngle,void 0],La.attr({transform:"",polypath:Q}))),!k.allImagesDrawn||ea&&!w||La.show().animateWith(A,N,Ha,J,O,ta&&void 0).attr(h),ta=k.config.animFlag=!1,La.attr({fill:M({color:E.bgColor,alpha:E.bgAlpha}),ishot:!Aa,"stroke-width":E.borderThickness,stroke:M({color:E.borderColor,alpha:E.borderAlpha}),cursor:ja?"pointer":"",visibility:W?L:g}).data("alwaysInvisible",!W).data("setRolloverProperties",f).data("hoverEnabled",f.enabled).data(l,
pa).data(B,Ca).data("anchorRadius",W).data("anchorHoverRadius",f&&f.radius).data("eventArgs",m).shadow(Ma,T),ea=d.polypath(ya||2,n,r,0<la?la:0,E.startAngle,void 0,H).attr({visibility:g}),Q=k._getPathString(ea.attrs.path),ea.remove(),ea=d.polypath(ya||2,n,r,0<ga?ga:0,f.startAngle,f.dip,H).attr({visibility:g}),T=k._getPathString(ea.attrs.path),ea.remove(),E.imgRefWidth=this.width,E.imgRefHeight=this.height,E.imgRefScale=ra,E.rolloutClipRadius=la,Ca={x:n-this.width*ra*.005,y:r-this.height*ra*.005,width:Y,
height:oa,alpha:ka,"clip-path":Q},pa={x:n-this.width*da*.005,y:r-this.height*da*.005,width:za,height:fa,alpha:na,"clip-path":T},na=G.image,na||(Ea.image&&Ea.image.length?(na=G.image=Ea.image.shift(),na.show().attr({transform:""})):(G.image=na=d.image(U,H),na.attr({x:Ca.x,y:Ca.y,width:Ca.width,height:Ca.height,"clip-path":Ca["clip-path"]}),Fa=D.isAnchorsDrawn=!0),xa&&w&&(ea=d.polypath(ya||2,Ja,r,0<la?la:0,E.startAngle,void 0).attr({visibility:g}),d=k._getPathString(ea.attrs.path),ea.remove(),Ja={x:Ja-
this.width*ra*.005,y:r-this.height*ra*.005,width:Y,height:oa,alpha:ka,"clip-path":d},na.attr(Ja))),na.attr({src:U}).toFront(),na.attr({visibility:W?L:g}).css({opacity:.01*ka}).data("alwaysInvisible",!ra).data("setRolloverProperties",f).data(l,pa).data(B,Ca).data("anchorRadius",ra).data("imgRef",this).data("anchorHoverRadius",da),!k.allImagesDrawn||Fa&&!w||na.animateWith(A,N,{x:Ca.x,y:Ca.y,width:Ca.width,height:Ca.height,"clip-path":Ca["clip-path"]},J,O,ta&&void 0),na.attr({alpha:Ca.alpha}),W=V(W,
f&&f.anchorRadius||0,2)),c._xPos=n,c._yPos=r,v.imagesLoaded++,D.anchorImageLoaded=!0,v.imagesLoaded===v.totalImages&&(!0===k.drawn?k.drawLabel():u.labelDrawID.push(K.addJob(function(){k.drawLabel()},b.priorityList.label))),W=v.noOfImagesDrawn+=1,W===Ka&&(k.allImagesDrawn=!0))}},_hideGraphics:function(a){var b,e;for(e in a)a.hasOwnProperty(e)&&(b=a[e])&&(b.hide?b.hide():this._hideGraphics(b))},getPlotClickFn:function(a){return function(b){E.call(this,a,b)}},show:function(){var a=this.chart,b=a.components.xAxis[0],
e=this.yAxis;this.config.legendInteractivity=!0;a._chartAnimation();this.visible=!0;this._conatinerHidden=!1;a.config.transposeAxis&&(a._setAxisLimits(),e.draw());a.isRealTime&&b.draw();a._drawDataset();a.chartInstance.__state._rtPaused&&a._setRTdata()},hide:function(){var a=this.chart,b=this.yAxis,e=a.components.xAxis[0];a._chartAnimation();this.config.legendInteractivity=!0;this.visible=!1;a.config.transposeAxis&&(a._setAxisLimits(),b.draw());a.isRealTime&&e.draw();a._drawDataset();a.chartInstance.__state._rtPaused&&
a._setRTdata()},_parseHoverEffectOptions:function(a,b){var e=this.JSONData,g=this.chart,l=g.jsonData.chart,g=g.config,k=a.config.anchorProps||{},p=g.plothovereffect,m=this.config.drawanchors,n={enabled:!1};b=b||{};0!==p&&0!==m&&(n.enabled=void 0!==O(b.hovercolor,b.anchorhovercolor,b.hovercolor,e.hovercolor,b.anchorbghovercolor,e.anchorbghovercolor,l.anchorbghovercolor,e.anchorhovercolor,l.anchorhovercolor,b.hoveralpha,b.anchorhoveralpha,e.anchorhoveralpha,l.anchorhoveralpha,b.bghoveralpha,b.anchorbghoveralpha,
e.anchorbghoveralpha,l.anchorbghoveralpha,b.anchorborderhovercolor,b.borderhovercolor,e.anchorborderhovercolor,l.anchorborderhovercolor,b.anchorborderhoverthickness,b.borderhoverthickness,e.anchorborderhoverthickness,l.anchorborderhoverthickness,b.anchorborderhoveralpha,b.borderhoveralpha,e.anchorborderhoveralpha,l.anchorborderhoveralpha,b.hoverdip,b.anchorhoverdip,e.anchorhoverdip,l.anchorhoverdip,b.anchorhoverstartangle,e.anchorhoverstartangle,l.anchorhoverstartangle,b.hoversides,b.anchorhoversides,
e.anchorhoversides,l.anchorhoversides,b.hoverradius,b.anchorhoverradius,e.anchorhoverradius,l.anchorhoverradius,e.plotfillhovercolor,l.plotfillhovercolor,g.plothovereffect,void 0),n.startAngle=q(b.anchorhoverstartangle,e.anchorhoverstartangle,l.anchorhoverstartangle,k.startAngle),n.anchorSides=q(b.hoversides,b.anchorhoversides,e.anchorhoversides,l.anchorhoversides,k.sides),n.anchorRadius=q(b.anchorhoverradius,e.anchorhoverradius,l.anchorhoverradius),n.isAnchorHoverRadius=n.anchorRadius,n.anchorRadius=
q(n.anchorRadius,k.radius+(p?2:0)),n.anchorScale=O(b.hoverscale,e.anchorscale,l.anchorscale),n.imageHoverScale=q(b.anchorimagehoverScale,e.anchorimagehoverscale,l.anchorimagehoverscale,110),n.imageHoverAlpha=q(b.anchorimagehoveralpha,e.anchorimaghoverealpha,l.anchorimagehoveralpha),n.anchorAlpha=O(b.anchorhoveralpha,b.hoveralpha,e.anchorhoveralpha,l.anchorhoveralpha,k.anchorAlpha),n.anchorColor=T(O(b.hovercolor,b.anchorhovercolor,b.hoverColor,b.anchorbghovercolor,e.anchorbghovercolor,e.anchorhovercolor,
e.hovercolor,l.anchorbghovercolor,l.anchorhovercolor,l.plotfillhovercolor,k.bgColor)),n.anchorBgAlpha=O(b.bghoveralpha,b.anchorbghoveralpha,e.anchorbghoveralpha,l.anchorbghoveralpha,l.plotfillhoveralpha,k.bgAlpha),n.anchorBgAlpha=n.anchorBgAlpha*n.anchorAlpha/100,n.anchorBorderColor=O(b.borderhovercolor,b.anchorborderhovercolor,e.anchorborderhovercolor,l.anchorborderhovercolor,k.borderColor),n.anchorBorderAlpha=O(b.borderhoveralpha,b.anchorborderhoveralpha,e.anchorborderhoveralpha,l.anchorborderhoveralpha,
n.anchorAlpha,k.borderAlpha),n.anchorBorderThickness=q(b.borderhoverthickness,b.anchorborderhoverthickness,e.anchorborderhoverthickness,l.anchorborderhoverthickness,l.anchorBorderThickness,k.borderThickness),n.dip=O(b.hoverdip,b.anchorhoverdip,e.anchorhoverdip,l.anchorhoverdip,k.dip),n.anchorAnimation=q(b.anchorhoveranimation,e.anchorhoveranimation,l.anchorhoveranimation,1));return n},_hoverPlotAnchor:function(a,b){var e=this.graphics.sharedAnchor,k=a.graphics.element||e&&e.element,p=a.graphics.label,
m=a.config||{},n=m.anchorProps.anchorAlpha,m=m&&m.anchorProps.imageUrl,r=C&&m?a.graphics.element:a.graphics.image,q=k.data(l),h=k.data(B),d="DataPlotRollOver"===b?k.data(l):k.data(B),m="image"===k.type,f=k.data("anchorRadius"),c=k.data("anchorHoverRadius"),u=p&&(p.data("isBelow")?1:-1)*(m?.5*(q.height-h.height):c-f),K=a.config.hoverEffects,v,E={polypath:d.polypath},d={fill:d.fill,"stroke-width":d["stroke-width"],stroke:d.stroke},A=p&&p.data("rotation")||"",u={transform:"T0,"+("DataPlotRollOver"===
b?u:0)+A},q=!(/,0\)$/.test(q.fill)&&/,0\)$/.test(h.fill))&&k.data("anchorHoverRadius")-k.data("anchorRadius")&&K.anchorAnimation&&50;r&&(v=r.data(l),h=r.data(B),v="DataPlotRollOver"==b?v:h);if("DataPlotRollOver"==b&&0!==c||"DataPlotRollOut"==b&&0!==f)k.attr({visibility:L}),r&&r.attr({visibility:L});r&&r.css({opacity:.01*v.alpha});m?k.css({opacity:.01*E.alpha}):k.attr(d);k.stop();k.animate(E,q,"easeOut",function(){("DataPlotRollOver"==b&&!c||"DataPlotRollOut"==b&&!f)&&k.attr({visibility:g})});r&&r.animate(v,
q,"easeOut",function(){("DataPlotRollOver"==b&&!c||"DataPlotRollOut"==b&&!f)&&r.attr({visibility:g})});p&&p.stop();(q||e&&e.element&&n)&&p&&p.animate(u,50,"easeOut")},drawLabel:function(a){var b=this.chart,e=b.config,g=b.linkedItems.smartLabel,l=b.config.dataLabelStyle,k=this.components.data,p=b.components.paper,m=b.get("config","animationObj"),n=m.duration,h=!0===this.drawn&&n,d=e.stack100percent,f=m.dummyObj,c=m.animObj,r="",m=m.animType,q=e.rotatevalues?270:0,B=e.canvasTop,u=e.canvasHeight,K=b.config.isstacked,
v,E=this.graphics.dataLabelContainer,L=b.components.xAxis[0],A=0,C=L.getCategoryLen(),V=this.startPosition,T=this.components.pool||{},J,N,M,O,U,Y,Q,fa,Aa,ua,ia,xa;fa=this.visible;void 0!==a?(ia=a,a=ia+1):(ia=0,a=k.length);void 0!==e.scrollMinVal&&(ia=e.scrollMinVal);void 0!==e.scrollMaxVal&&(a=e.scrollMaxVal);if(!(ia>=a)&&(J={"font-weight":l.fontWeight,"font-style":l.fontStyle,"font-family":l.fontFamily,"font-size":l.fontSize,"line-height":l.lineHeight},g.setStyle(J),fa))for(;ia<a;ia++)if(J=(fa=(O=
k[ia])&&O.config)&&fa.setValue,void 0===O||void 0===J||null===J||!0===fa.labelSkip)fa&&delete fa.labelSkip,(xa=O&&O.graphics)&&xa.label&&xa.label.hide();else{U=fa.anchorProps;J=O.graphics;M=O._yPos;O=O._xPos;U=J.element?J.image&&.5*J.element.attr("height")||U.radius-3:0;v=e.valuepadding+2+U;U=fa.valuePosition;switch(U){case "above":Y=0;break;case "below":Y=1;break;default:U=k[ia-1]&&k[ia-1].config||{},Aa=k[ia+1]&&k[ia+1].config||{},K&&d?(U=U.value,ua=Aa.value,Aa=fa.value):(U=U.setValue,ua=Aa.setValue,
Aa=fa.setValue),Y=ia?U>Aa?1:(null==ua&&ua)>Aa?1:0:0}r=fa.displayValue;ua=fa.showValue;U=J.label;void 0!==r&&null!==r&&r!==H&&null!==Aa&&ua?(ua={text:r,fill:l.color,"text-bound":[l.backgroundColor,l.borderColor,l.borderThickness,l.borderPadding,l.borderRadius,l.borderDash]},r=g.getOriSize(r),q?(fa._state={labelWidth:r.height,labelHeight:r.width},fa._rotated=!0):(fa._state={labelWidth:r.width,labelHeight:r.height},fa._rotated=!1),r=N=fa._state.labelHeight,r+=v,v=.5*N+v,N=M-B,Q=B+u-M,r+=4,Y?Q>r?(M+=
v,fa._valueBelowPoint=1):N>r&&(M-=v,fa._valueBelowPoint=0):N>r?(M-=v,fa._valueBelowPoint=0):Q>r&&(M+=v,fa._valueBelowPoint=1),v=Y=!1,U||(T.label&&T.label.length?(J.label=U=T.label.shift(),J.label.show()):(ua.x=O,ua.y=M,ua.transform=p.getSuggestiveRotation(q,O,M),J.label=U=p.text(ua,E),v=!0),h&&b.isRealTime&&!0!==V&&(J=C+A,J=L.getPixel(J),J instanceof Object&&(J=J.x),U.attr({x:J,y:M,transform:p.getSuggestiveRotation(q,J,M)}),A++,Y=!0)),v||U.attr(ua),v&&!Y||U.show().animateWith(f,c,{x:O,y:M,transform:p.getSuggestiveRotation(q,
O,M)},n,m),U.data("isBelow",fa._valueBelowPoint),U.data("rotation",p.getSuggestiveRotation(q,O,M))):U&&U.hide()}},getAxisValuePadding:function(){var a=(this.chart||{}).hasScroll;return{left:a?.5:0,right:a?.5:0}},hidingPosition:function(){return function(){return{polypath:[[2,0,0,0,0,0]],text:""}}},_hoverFunc:function(a,b,e,g){if(e)return this._hoverPlotAnchor(a,b,g)}},"column",{valueposition:void 0,plotborderdashlen:void 0,plotborderdashgap:void 0,plotborderdashstyle:void 0,plotborderthickness:void 0,
linethickness:void 0,linedashlen:void 0,linedashgap:void 0,dashed:void 0,linedashstyle:void 0,linecolor:void 0,linealpha:void 0,anchorbgcolor:void 0,anchorbordercolor:void 0,anchorradius:void 0,anchoralpha:void 0,anchorimageurl:void 0,anchorsides:void 0,anchorbgalpha:void 0,anchorborderthickness:void 0,anchorshadow:void 0,anchorstartangle:void 0,anchorimagealpha:void 0,anchorimagescale:void 0,anchorimagepadding:void 0,alpha:void 0,parentyaxis:void 0}])}]);Q.register("module",["private","modules.renderer.js-dataset-scrollarea2d",
function(){Q.register("component",["dataset","scrollarea2d",{},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-realtimearea",function(){Q.register("component",["dataset","realtimearea",{_realTimeConfigure:Q.get("component",["dataset","realtimecolumn"]).prototype._realTimeConfigure},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-radar",function(){var b=this.hcLib,v=this.window.Image,J=b.TOUCH_THRESHOLD_PIXELS,C=b.CLICK_THRESHOLD_PIXELS,H=b.pluck,A=b.pluckNumber,
u=b.toRaphaelColor,a=b.hasTouch?J:C,O=b.getValidValue,q=b.getFirstValue,M=b.regex.dropHypeash,U=b.HASHSTRING,J=b.preDefStr,N=J.hiddenStr,E=J.setRolloverAttrStr,r=J.setRolloutAttrStr,k=Math.max,m=b.graphics.getLightColor,n=b.schedular;Q.register("component",["dataset","radar",{type:"radar",configure:function(){var a=this.config,b=this.chart,l=b.jsonData.chart,k=this.JSONData,b=b.components.colorManager.getPlotColor(this.index);this.__base__.configure.call(this);a.plotfillcolor=H(k.color,l.plotfillcolor,
b);a.plotbordercolor=H(k.plotbordercolor,l.plotbordercolor,l.areabordercolor,b).split(",")[0];a.fillColor.color=a.plotfillcolor;a.legendSymbolColor=a.plotfillcolor},_addLegend:function(){var a=this.chart,b=a.jsonData.chart,l,k;k=this.config;var a=a.components.legend,e=k.legendSymbolColor;l=A(b.use3dlighting,b.useplotgradientcolor,1);b=m(e,60).replace(M,U);l?(l=m(e,40),l={FCcolor:{color:e+","+e+","+l+","+e+","+e,ratio:"0,70,30",angle:270,alpha:"100,100,100,100,100"}}):l={FCcolor:{color:e,angle:0,ratio:"0",
alpha:"100"}};k={enabled:k.includeInLegend,type:this.type,fillColor:u(l),strokeColor:u(b),rawFillColor:e,label:q(this.JSONData.seriesname)};this.legendItemId=a.addItems(this,this.legendInteractivity,k)},_getHoveredPlot:function(a,b){var l=this.chart.components.xAxis[0],k=this.components.data,e,m=k.length,p,n=this.config,r=360/m;e=Math.floor(Math.max(l.getAngle(a-n.maxRadius,b)/r-1,0));for(m=Math.ceil(Math.min(l.getAngle(a+n.maxRadius,b)/r,m-1));m>=e;m--)if(l=k[m])if(p=this.isWithinShape(l,m,a,b))break;
return p},draw:function(){var m=this,g=m.chart,l=g.getJobList(),q=g.graphics,e=g.config,A=g.components,p=m.JSONData,C=g.jsonData.chart,K=m.config,t=m.index,J=p.data||[],P,S,z,R=A.paper,w=A.xAxis[0],F=m.yAxis,X,h,d,f=e.showtooltip,c,D=m.components.data,G,M,U,Q,sa,wa,ca=F.getAxisBase(),ma,A=K.plotbordercolor,qa=K.plotborderalpha,va=K.plotBorderDashStyle,ha=K.plotborderthickness,ra=m.graphics.container,ka=[],na,da,oa=b.parseUnsafeString,Y=!1,za=K.fillColor,fa=g.is3D,Aa=q.areaGroup,ua=g.get("config",
"animationObj"),ia=ua.duration,xa=ua.dummyObj,ja=ua.animObj,ua=ua.animType,ya=ra&&ra.shadowContainer,W=m.graphics.dataLabelContainer,Ma=function(){!1===m.visible&&(ra.areaGroup.hide(),ya.hide(),ra.lineShadowGroup.hide(),ra.anchorShadowGroup.hide(),ra.anchorGroup.hide(),W&&W.hide(),m._conatinerHidden=!0)},ea=function(){ra.areaGroup.attr({"clip-rect":null});!1!==m.visible&&(ra.lineShadowGroup.show(),ra.anchorShadowGroup.show(),ra.anchorGroup.show(),W.show());g._animCallBack()},ga=K.shadow,la,Ca=m.visible,
Ha,pa={};na=q.datalabelsGroup;var La=fa?10:0,q=m.components.removeDataArr||[],fa=q.length,Ja=m.components.pool||{},Fa=!0,ta=0,Ka,Ea,Da=0;K.imagesLoaded=0;ra||(ra=m.graphics.container={lineShadowGroup:R.group("connector-shadow",Aa.areaConnector),anchorShadowGroup:R.group("anchor-shadow",Aa.areaConnector),areaGroup:R.group("area",Aa.area),anchorGroup:R.group("anchors",Aa.areaConnector)},Ca||(ra.lineShadowGroup.hide(),ra.anchorShadowGroup.hide(),ra.areaGroup.hide(),ra.anchorGroup.hide()));ya||(ya=m.graphics.shadowContainer=
Aa.shadows||(Aa.shadows=R.group("shadows",ra.areaGroup).toBack()),Ca||ya.hide());D||(D=m.components.data);W||(W=m.graphics.dataLabelContainer=m.graphics.dataLabelContainer||R.group("datalabel",na),Ca||W.hide());Ca&&(ra.lineShadowGroup.show(),ra.anchorShadowGroup.show(),ra.areaGroup.show(),ra.anchorGroup.show(),W.show());P=w.getCategoryLen();na=w.config.centerX;da=w.config.centerY;for(z=0;z<P;z++)S=J[z]||{},c=(G=D[z])&&G.config,Ka=w.getLabel(z).label,Q=c.setValue,U=c.setLink,pa=c.anchorProps,Ha=pa.shadow,
X=O(oa(H(S.tooltext,p.plottooltext,C.plottooltext))),G.graphics||(G.graphics={}),c&&(ma=0<=Q?c.previousPositiveY:c.previousNegativeY),h=G.graphics,S=h.element,Ea=h.image,null===Q?(!1!==Y?ka.push("L",na,",",da):ka.push("M",na,",",da),Y=!1,S&&S.hide()):(h=F.getAxisPosition(ma||ca)+La,d=m.visible?F.getAxisPosition(Q+(ma||0))+La:h,h=w.getAxisPosition(z,e.canvasTop+e.canvasHeight/2-d),d=h.y,h=h.x,la=c.hoverEffects,M=f?c.toolText+(X?"":c.toolTipValue):"",c.finalTooltext=M,X=c.eventArgs||(c.eventArgs={}),
X.index=z,X.link=U,X.value=Q,X.displayValue=c.displayValue,X.categoryLabel=Ka,X.toolText=M,X.id=m.userID,X.datasetIndex=t||0,X.datasetName=p.seriesname,X.visible=Ca,la.enabled&&(c.setRolloverAttr={polypath:[la.anchorSides||2,h,d,la.anchorRadius,la.startAngle,la.dip],fill:u({color:la.anchorColor,alpha:la.anchorBgAlpha}),stroke:u({color:la.anchorBorderColor,alpha:la.anchorBorderAlpha}),"stroke-width":la.anchorBorderThickness},c.setRolloutAttr={polypath:[pa.symbol[1]||2,h,d,pa.radius,pa.startAngle,0],
fill:u({color:pa.bgColor,alpha:pa.bgAlpha}),stroke:u({color:pa.borderColor,alpha:pa.borderAlpha}),"stroke-width":pa.borderThickness},wa=c.setRolloverAttr,sa=c.setRolloutAttr),pa.imageUrl?(c.anchorImageLoaded=!1,c=new v,c.onload=m._onAnchorImageLoad(m,z,X,h,d),c.onerror=m._onErrorSetter(m,z),c.src=pa.imageUrl,Da++):(Ea&&Ea.hide(),S||(Ja.element&&Ja.element.length?S=G.graphics.element=Ja.element.shift():(S=G.graphics.element=R.polypath(ra.anchorGroup),S.attr({polypath:[pa.symbol[1]||2,h,d,pa.radius,
pa.startAngle,0]}))),S.show().animateWith(xa,ja,{polypath:[pa.symbol[1]||2,h,d,pa.radius,pa.startAngle,0]},ia,ua,Fa&&Ma),Fa=!1,S.attr({fill:u({color:pa.bgColor,alpha:pa.bgAlpha}),stroke:u({color:pa.borderColor,alpha:pa.borderAlpha}),"stroke-width":pa.borderThickness,visibility:pa.radius?Ca:N}).shadow(Ha,ra.anchorShadowGroup).data("anchorRadius",pa.radius).data("anchorHoverRadius",la.anchorRadius).data("hoverEnabled",la.enabled).data("eventArgs",X),la.enabled&&S&&S.data("anchorRadius",pa.radius).data("anchorHoverRadius",
la.anchorRadius).data("hoverEnabled",la.enabled).data(E,wa).data(r,sa).data("eventArgs",X),c.trackerConfig||(c.trackerConfig={}),c.trackerConfig.trackerRadius=k(pa.radius,la&&!0&&la.anchorRadius||0,a)+(pa.borderThickness||0)/2),G._xPos=h,G._yPos=d,G._index=z,Y?(ka.push("L",h,",",d),ta++):(0===z?ka.push("M",h,",",d):ka.push("L",h,",",d),Y=!0));ka.push("Z");K.noOfImages=K.totalImages=Da;0===Da&&l.labelDrawID.push(n.addJob(function(){m.drawLabel()},b.priorityList.label));e=ka.concat([]);l=m.graphics.lineElement;
l||(l=m.graphics.lineElement=R.path(ra.areaGroup),l.attr({path:ka}),ia&&Ca&&(ra.anchorGroup.hide(),ra.anchorShadowGroup.hide(),W.hide(),Aa.scale(.01,.01,na,da).animateWith(xa,ja,{transform:"s1,1"},ia,ua,ea)));l.show().animateWith(xa,ja,{path:e},ia,ua,Fa&&Ma).attr({stroke:u({color:A,alpha:qa}),"stroke-width":ha,fill:u(za),"stroke-linecap":"round","stroke-linejoin":2<ha?"round":"miter","stroke-dasharray":va}).shadow(ga,ya);m.drawn=!0;for(z=0;z<fa;z++)m._removeDataVisuals(q.shift())}},"area"])}]);Q.register("module",
["private","modules.renderer.js-dataset-line",function(){var b=this.hcLib,v=b.Raphael,J=this.window.Image,C=b.pluck,H=b.pluckNumber,A=b.toRaphaelColor,u=b.getCrispValues,a=b.getFirstValue,O=b.preDefStr,q=O.hiddenStr,M=O.setRolloverAttrStr,U=O.setRolloutAttrStr,O=Math,N=O.max,E=O.pow,r=b.schedular;Q.register("component",["dataset","Line",{type:"line",_addLegend:function(){var b=this.config,m=this.chart.components.legend,n=H(b.drawanchors,1),b={enabled:b.includeinlegend,type:this.type,drawLine:C(b.drawLine,
!0),fillColor:A({color:b.anchorbgcolor,alpha:b.anchorbgalpha}),strokeColor:A({color:b.anchorbordercolor,alpha:"100"}),rawFillColor:b.anchorbgcolor,rawStrokeColor:b.anchorbordercolor,anchorSide:n?b.anchorsides:0,strokeWidth:b.anchorborderthickness,label:a(this.JSONData.seriesname),lineWidth:b.linethickness};this.legendItemId=m.addItems(this,this.legendInteractivity,b)},draw:function(){var a,m,n=this,E=n.JSONData,g=n.chart,l=g.getJobList(),B=g.components,e=B.canvas.config.clip,V=n.config,p=V.legendInteractivity,
H=n.index,K=g.config,t=n.components,Z=n.graphics,P=t.data,S=P.length,z=B.paper,R=B.xAxis[0],w=n.yAxis,F=t.removeDataArr||[],X=g.graphics,h=X.datalabelsGroup,d,f,c,D=V.linethickness,G=Z.container,O=K.showtooltip,Q=X.lineGroup,Ia,sa=V.shadow,wa,ca=Z.dataLabelContainer,ma={},qa,va,ha,ra=g.is3D,ka=K.use3dlineshift,na=n.graphics.errorGroupContainer,da=n.graphics.errorShadowContainer,oa=function(){!1!==n.visible||!1!==n._conatinerHidden&&void 0!==n._conatinerHidden||(G.lineGroup.hide(),G.lineShadowGroup.hide(),
G.anchorShadowGroup.hide(),G.anchorGroup.hide(),ca&&ca.hide(),na&&na.hide(),da&&da.hide(),n._conatinerHidden=!0)},Y=function(){Q.lineConnector.attr({"clip-rect":null});Q.lineConnector.node&&Q.lineConnector.node.removeAttribute("clip-path");!1!==n.visible&&(G.lineShadowGroup.show(),G.anchorShadowGroup.show(),G.anchorGroup.show(),ca&&ca.show())},za=!0,fa,Aa,ua,ia=w.getAxisBase(),xa=w.yBasePos=w.getAxisPosition(ia),ja=R.getPVR(),ya,W=ra?10:0,Ma=ra&&ka?10:0,ea=e["clip-canvas"].slice(0),ga=e["clip-canvas-init"].slice(0),
la=B.scrollBar,Ca=g.hasScroll||!1,Ha,pa=V.lineDashStyle,La={color:V.linecolor,alpha:V.alpha},Ja=[A(La),pa].join(":"),Fa,ta,Ka,Ea,Da,Ga=Z.lineElement,Na=n.visible,Ua,Pa,Sa=0,ab=n.drawn,Xa=!0!==ab,Za=n.components.pool||{},bb,eb,Va=n.startPosition,Ya={},$a=S,Ta,kb={},hb=V.lastPath||{},ib,ob,ba=0,Ba=g.config.viewPortConfig,Oa=Ba.x,Qa=Ba.scaleX,I,cb,vb,sb,pb,gb,qb,mb,nb,Fb,Bb,Ab,Hb,wb,Nb,xb,yb,Cb,Ib=V.noOfImages=0,Jb,ub=g.get("config","animationObj"),jb=ub.duration,tb=ub.dummyObj,Wa=ub.animObj,Kb=ub.animType,
zb=!Xa&&jb,Gb,Sb=K.height,fb=K.realTimeConfig&&K.realTimeConfig.clear,Tb=$a,Lb,Mb,Ob,Pb,rb=V.isSkippedData,db=K.canvasTop,Rb=K.canvasBottom,Vb=b.plotEventHandler,Db=Z.sharedAnchor,Qb=Db&&Db.element,Eb=0,lb=g.isRealTime,Ub=function(a){Vb.call(this,g,a)},Zb=function(a){Vb.call(this,g,a,"DataPlotRollOver")},cc=function(a){Vb.call(this,g,a,"DataPlotRollOut")},Xb=void 0!==K.scrollMinVal?K.scrollMinVal:0,Yb=void 0!==K.scrollMaxVal?Math.min(K.scrollMaxVal,Tb):Tb,$b=K.startPathIndex,bc=K.endPathIndex;if($b||
bc)ba=$b-1,xb=bc+1,V.hasSetColor&&(Xb=ba,Yb=xb);if(!(Xb>=Yb)){n.noOfNewDataAtEnd=0;V.hideAnimFlag=!1;V.imagesLoaded=0;Q.lineConnector=Q.lineConnector||z.group("line-connector",Q);G||(G=n.graphics.container={lineShadowGroup:z.group("connector-shadow",Q.lineConnector),anchorShadowGroup:z.group("anchor-shadow",Q.lineConnector),lineGroup:z.group("line",Q.lineConnector),anchorGroup:z.group("anchors",Q.lineConnector)},Na||(G.lineShadowGroup.hide(),G.anchorShadowGroup.hide(),G.lineGroup.hide(),G.anchorGroup.hide()));
P||(P=n.components.data=[]);ca||(ca=n.graphics.dataLabelContainer=n.graphics.dataLabelContainer||z.group("datalabel",h),Na||ca.hide());Na&&(G.lineShadowGroup&&G.lineShadowGroup.show(),G.lineGroup&&G.lineGroup.show(),G.anchorGroup&&G.anchorGroup.show(),n._conatinerHidden=!1,ca.show(),V.attachEvents&&G.anchorGroup.trackTooltip(!0));ya=ja*$a;lb&&(ea[1]=0,ea[3]=Sb,ca.attr({"clip-rect":ea}),G.anchorGroup.attr({"clip-rect":ea}),G.anchorShadowGroup.attr({"clip-rect":ea}),G.lineGroup.attr({"clip-rect":ea}),
G.lineShadowGroup.attr({"clip-rect":ea}));if(fb)for(Ta=0,$a=F.length;Ta<$a;Ta++)n._removeDataVisuals(F.shift());else n._shiftOffRemovedPoints();Ya=V.removePath||{};Nb=G.anchorShadowGroup;for(Ta=Xb;Ta<Yb;Ta++)if(d=P[Ta])ha=d.config||{},pb=ha.setValue,d.graphics&&(cb=d.graphics.element,yb=d.graphics.image),Ob=ha&&ha.isSkipped,void 0===pb||!0===Ob||!1!==rb&&!Xa&&p&&(!Na&&!cb||Na&&cb&&!d._xPos&&!d._yPos)?(cb&&cb.hide(),yb&&yb.hide(),ha&&(ha.isSkipped=!0)):(vb=d.graphics,sb=ha.setLink,Ua=ha.x||Ta,fa=ha.setLevelTooltext,
ma=ha.anchorProps,va=ma.symbol,mb=ma.radius,wa=ma.shadow,nb=ma.startAngle,Fb=ma.bgColor,Bb=ma.bgAlpha,Ab=ma.borderColor,Hb=ma.borderAlpha,wb=ma.borderThickness,qb=ha.displayValue,Pa=ha.dip||0,d||(d=P[Ta]={graphics:{}}),a=ha.setColor,m=ha.setAlpha,ua=ha.dashStyle,Ea=ha.xPos||R.getAxisPosition(Ua)-W+Oa*Qa,Da=!n.visible&&jb?xa:w.getAxisPosition(pb)+Ma,Ea=u(Ea,V.linethickness,V.linethickness).position,Da=u(Da,V.linethickness,V.linethickness).position,Ia=ha.hoverEffects,ma.isAnchorHoverRadius=Ia.anchorRadius,
Lb=Da-mb-wb/2,Mb=Da+mb+wb/2,Lb<db&&(K.toleranceTop=N(K.toleranceTop||0,db-Lb)),Mb>Rb&&(K.toleranceBottom=N(K.toleranceBottom||0,Mb-Rb)),ib=R.getLabel(Ta)||{},I=O?ha.toolText+(fa?"":ha.toolTipValue):"",ha.finalTooltext=I,gb=ha.eventArgs=ha.eventArgs||{},gb.index=Ta,gb.link=sb,gb.value=pb,gb.displayValue=qb,gb.categoryLabel=ib.label,gb.toolText=I,gb.id=V.userID,gb.datasetIndex=H||0,gb.datasetName=E.seriesname,gb.visible=Na,Cb=!1,cb=d.graphics.element,yb=d.graphics.image,Ia.enabled&&(c=ha.setRolloverAttr=
{polypath:[Ia.anchorSides||2,Ea,Da,Ia.anchorRadius,Ia.startAngle,Ia.dip],fill:A({color:Ia.anchorColor,alpha:Ia.anchorBgAlpha}),stroke:A({color:Ia.anchorBorderColor,alpha:Ia.anchorBorderAlpha}),"stroke-width":Ia.anchorBorderThickness},f=ha.setRolloutAttr={polypath:[ma.sides,Ea,Da,ma.radius,ma.startAngle,Pa],fill:A({color:ma.bgColor,alpha:ma.bgAlpha}),stroke:A({color:ma.borderColor,alpha:ma.borderAlpha}),"stroke-width":ma.borderThickness}),null!==pb?(Jb={polypath:[va[1]||2,Ea,Da,mb,nb,ha.dip||0]},!cb&&
zb&&!0!==Va&&(eb=$a+Sa,bb=R.getPixel(eb),d._xPos=bb,d._yPos=Da,hb=n.getLinePath([d],hb),Sa++),Pb=mb&&ma.anchorAlpha,ha.isAnchorsDrawn||V.drawanchors||Pb?ma.imageUrl?(qa=new J,ha.anchorImageLoaded=!1,qa.onload=n._onAnchorImageLoad(n,Ta,gb,Ea,Da,d),qa.onerror=n._onErrorSetter(n,Ta),qa.src=ma.imageUrl,Ib++):(yb&&yb.hide(),cb||(Za.element&&Za.element.length?(cb=vb.element=Za.element.shift(),cb.show().attr({transform:""})):(cb=vb.element=z.polypath(G.anchorGroup),cb.attr(Jb),Cb=!0,ha.isAnchorsDrawn=!0,
Eb++),zb&&lb&&cb.attr({polypath:[va[1]||2,bb,Da,mb,nb,0]})),!ab||Cb&&!lb||cb.show().animateWith(tb,Wa,Jb,jb,Kb,za&&oa),jb||za&&oa(),za=!1,cb.attr({fill:A({color:Fb,alpha:Bb}),stroke:A({color:Ab,alpha:Hb}),"stroke-width":wb,visibility:mb?Na:q}).shadow(wa,Nb).data("anchorRadius",mb).data("anchorHoverRadius",Ia.anchorRadius).data("hoverEnabled",Ia.enabled).data("eventArgs",gb),Ia.enabled&&cb&&cb.data("anchorRadius",ma.radius).data("anchorHoverRadius",Ia.anchorRadius).data(M,c).data(U,f).data("hoverEnabled",
Ia.enabled).data("eventArgs",gb)):cb&&!Pb&&cb.hide(),V.attachEvents&&(Cb&&(cb.tooltip(ha.finalTooltext),cb.click(Ub).hover(Zb,cc)),Cb=!1)):(cb&&cb.hide(),yb&&yb.hide()),d._xPos=Ea,d._yPos=Da,d._polyPath=Jb,d._index=Ta,Ta===Eb||V.drawanchors?Qb&&Qb.hide():Db&&Qb?Qb.hide():n.getAnchor(g,d,!0),Ka=Ja!==[A({color:C(a,La.color),alpha:C(m,La.alpha)}),ua||pa].join(":"),Aa=d.graphics.connector,ob=[],Ka&&(xb=Ta,kb=n.getLinePath(P,{},{begin:ba,end:xb+1}),ha.connStartIndex=ba,ha.connEndIndex=xb,ob=kb.getPathArr(),
ob.length&&(Gb=v.animation({path:ob},jb,Kb,za&&oa),Aa||(Za.connector&&Za.connector.length?Aa=d.graphics.connector=Za.connector.shift():(Aa=d.graphics.connector=z.path(G.lineGroup),Aa.attr({path:ob}))),ab&&Aa.show().animateWith(tb,Wa,Gb),Aa.attr({"stroke-dasharray":ta,"stroke-width":D,stroke:Fa,"stroke-linecap":"round","stroke-linejoin":2<D?"round":"miter"}).shadow(sa,G.lineShadowGroup),ba=Ta,kb={}),xb=null),Ka||ob.length||Aa&&Aa.hide(),null!==pb&&(Fa=A({color:C(a,La.color),alpha:C(m,La.alpha)}),ta=
ua||pa),Ja=[Fa,ta].join(":"));0===Ib&&(!0===ab?n.drawLabel():l.labelDrawID.push(r.addJob(function(){n.drawLabel()},b.priorityList.label)));V.pathStartIndex=ba;V.pathEndIndex=xb;V.noOfImages=V.totalImages=Ib;kb=n.getLinePath(P,{},{begin:ba,end:xb});F&&lb&&(Ya=n.getLinePath(P,Ya));lb&&(V.lastPath=kb);Ga?jb&&lb&&Ga.attr({path:hb.getPathArr()}):Ga=Z.lineElement=z.path({path:kb.getPathArr()},G.lineGroup);fb?Ga.hide():ab&&Ga.show().animateWith(tb,Wa,{path:Ya.getPathArr&&lb?Ya.getPathArr():kb.getPathArr()},
jb,Kb,za&&oa);Ga.attr({"stroke-width":D,"stroke-dasharray":ta,stroke:Fa,"stroke-linecap":"round","stroke-linejoin":2<=D?"round":"miter"}).shadow(sa,G.lineShadowGroup);Ca&&(Ha=la.conf.startPercent,ea[2]=ya+ga[0],1===Ha&&(ga[0]=ea[2],ea[0]=0));ea[3]+=Ma;n._drawTracker&&n._drawTracker();jb&&Na&&!ab&&(G.anchorGroup.hide(),G.anchorShadowGroup.hide(),ca.hide(),Q.lineConnector.attr({"clip-rect":ga}).animateWith(tb,Wa,{"clip-rect":ea},jb,Kb,Y));n.drawn=!0;n.drawErrorValue&&n.drawErrorValue()}},getDataLimits:function(){var a=
this.config,b=a.maxValue,a=a.minValue,n=this.chart.config.transposeAxis;!1===this.visible&&n&&(b=-Infinity,a=Infinity);return{max:b,min:a}},pointValueWatcher:function(a,b,n){var r=n.obj||(n.obj={}),g=n.objX||(n.objX={});null!==b&&(r.max=r.max>b?r.max:b,r.min=r.min<b?r.min:b);null!==a&&(g.max=g.max>a?g.max:a,g.min=g.min<a?g.min:a);n.isRegression&&(a=a||0,b=b||0,n.sumX+=a,n.sumY+=b,n.sumXY+=a*b,n.sumXsqure+=E(a,2),n.xValues.push(a),n.sumYsqure+=E(b,2),n.yValues.push(b))}},"area"])}]);Q.register("module",
["private","modules.renderer.js-dataset-realtimeline",function(){Q.register("component",["dataset","Realtimeline",{_realTimeConfigure:Q.get("component",["dataset","realtimecolumn"]).prototype._realTimeConfigure},"line"])}]);Q.register("module",["private","modules.renderer.js-quadrant",function(){var b=this.hcLib,v=b.pluck,J=b.pluckNumber,C=b.setLineHeight,H=b.graphics.convertColor,A=b.HUNDREDSTRING,u=b.getDashStyle,a=b.getValidValue,O=b.getFirstValue,b=b.preDefStr,q=b.POSITION_START,M=b.POSITION_TOP,
U=b.POSITION_BOTTOM,N=b.POSITION_END;Q.register("component",["quadrant","cartesian",{pIndex:1,init:function(){var a=this.chart.components,b=a.xAxis[0];this.yAxis=a.yAxis[0];this.xAxis=b;this.components={};this.conf={};this.graphics={};this.configure()},configure:function(){var b,r,k,m,n,q,g,l,B,e,V=this.conf;B=this.chart;q=B.config;var p=B.jsonData.chart;r=B.components.canvas.config;var T=q.dataLabelStyle;b=B.linkedItems.smartLabel;if(V.enabled=J(p.drawquadrant,0))B=J(p.quadrantxval),e=J(p.quadrantyval),
l=H(v(p.quadrantlinecolor,r.canvasBorderColor),v(p.quadrantlinealpha,p.quadrantlinealpha,A)),r=J(p.quadrantlinethickness,r.canvasBorderThickness),m=J(p.quadrantlinedashed,p.quadrantlineisdashed,0),k=J(p.quadrantlinedashlen,4),n=J(p.quadrantlinedashgap,2),k=m?u(k,n,r):"none",V.xVal=B,V.yVal=e,V.quadrantLineColor=l,V.quadrantLineThickness=r,V.dashStyle=k,r=a(p.quadrantlabeltl,""),l=a(p.quadrantlabeltr,""),B=a(p.quadrantlabelbl,""),e=a(p.quadrantlabelbr,""),V.quadrantLabelPadding=J(p.quadrantlabelpadding,
3),b.useEllipsesOnOverflow(q.useEllipsesWhenOverflow),b.setStyle(T),""!==r&&(b=O(p.quadrantlabeltlbordercolor,p.quadrantlabelbordercolor,""),m=v(p.quadrantlabeltlbgcolor,p.quadrantlabelbgcolor),q=J(p.quadrantlabeltlborderthickness,p.quadrantlabelborderthickness,1),b=b?H(b,J(p.quadrantlabeltlborderalpha,p.quadrantlabelborderalpha,p.quadrantlabeltlalpha,p.quadrantlabelalpha,100)):"",g=V.tlConfig,g||(g=V.tlConfig={enabled:!0,styleObj:{}}),g.label=r,g.styleObj.fontSize=v(J(p.quadrantlabeltlfontsize,p.quadrantlabelfontsize),
parseInt(T.fontSize,10))+"px",g.styleObj.lineHeight=T.lineHeight,g.styleObj.fontFamily=v(p.quadrantlabeltlfont,p.quadrantlabelfont,T.fontFamily),g.styleObj.color=H(v(p.quadrantlabeltlfontcolor,p.quadrantlabelfontcolor,T.color),J(p.quadrantlabeltlfontalpha,p.quadrantlabelfontalpha,100)),g.styleObj.fontWeight=J(p.quadrantlabeltlfontbold,p.quadrantlabelfontbold)?"bold":"normal",g.styleObj.fontStyle=J(p.quadrantlabeltlfontitalic,p.quadrantlabelfontitalic)?"italic":"normal",C(g.styleObj),r=J(p.quadrantlabeltlborderpadding,
p.quadrantlabelborderpadding,2),k=J(p.quadrantlabeltlborderradius,p.quadrantlabelborderradius,0),m=m?H(m,J(p.quadrantlabeltlbgalpha,p.quadrantlabelbgalpha,p.quadrantlabeltlalpha,p.quadrantlabelalpha,100)):"",n=J(p.quadrantlabeltlborderdashed,p.quadrantlabelborderdashed,0)?u(J(p.quadrantlabeltlborderdashlen,p.quadrantlabelborderdashlen,4),J(p.quadrantlabeltlborderdashgap,p.quadrantlabelborderdashgap,2),q):"none",g["text-bound"]=[m,b,q,r,k,n]),""!==l&&(b=O(p.quadrantlabeltrbordercolor,p.quadrantlabelbordercolor,
""),m=v(p.quadrantlabeltrbgcolor,p.quadrantlabelbgcolor),q=J(p.quadrantlabeltrborderthickness,p.quadrantlabelborderthickness,1),b=b?H(b,J(p.quadrantlabeltrborderalpha,p.quadrantlabelborderalpha,p.quadrantlabeltralpha,p.quadrantlabelalpha,100)):"",l=V.trConfig,l||(l=V.trConfig={enabled:!0,styleObj:{}}),l.label=a(p.quadrantlabeltr,""),l.styleObj.fontSize=v(J(p.quadrantlabeltrfontsize,p.quadrantlabelfontsize),parseInt(T.fontSize,10))+"px",l.styleObj.lineHeight=T.lineHeight,l.styleObj.fontFamily=v(p.quadrantlabeltrfont,
p.quadrantlabelfont,T.fontFamily),l.styleObj.color=H(v(p.quadrantlabeltrfontcolor,p.quadrantlabelfontcolor,T.color),J(p.quadrantlabeltrfontalpha,p.quadrantrabelfontalpha,100)),l.styleObj.fontWeight=J(p.quadrantlabeltrfontbold,p.quadrantlabelfontbold)?"bold":"normal",l.styleObj.fontStyle=J(p.quadrantlabeltrfontitalic,p.quadrantlabelfontitalic)?"italic":"normal",C(l.styleObj),r=J(p.quadrantlabeltrborderpadding,p.quadrantlabelborderpadding,2),k=J(p.quadrantlabeltrborderradius,p.quadrantlabelborderradius,
0),m=m?H(m,J(p.quadrantlabeltrbgalpha,p.quadrantlabelbgalpha,p.quadrantlabeltralpha,p.quadrantlabelalpha,100)):"",n=J(p.quadrantlabeltrborderdashed,p.quadrantlabelborderdashed,0)?u(J(p.quadrantlabeltrborderdashlen,p.quadrantlabelborderdashlen,4),J(p.quadrantlabeltrborderdashgap,p.quadrantlabelborderdashgap,2),q):"none",l["text-bound"]=[m,b,q,r,k,n]),""!==B&&(b=O(p.quadrantlabelblbordercolor,p.quadrantlabelbordercolor,""),m=v(p.quadrantlabelblbgcolor,p.quadrantlabelbgcolor),q=J(p.quadrantlabelblborderthickness,
p.quadrantlabelborderthickness,1),b=b?H(b,J(p.quadrantlabelblborderalpha,p.quadrantlabelborderalpha,p.quadrantlabelblalpha,p.quadrantlabelalpha,100)):"",l=V.blConfig,l||(l=V.blConfig={enabled:!0,styleObj:{}}),l.label=B,l.styleObj.fontSize=v(J(p.quadrantlabelblfontsize,p.quadrantlabelfontsize),parseInt(T.fontSize,10))+"px",l.styleObj.lineHeight=T.lineHeight,l.styleObj.fontFamily=v(p.quadrantlabelblfont,p.quadrantlabelfont,T.fontFamily),l.styleObj.color=H(v(p.quadrantlabelblfontcolor,p.quadrantlabelfontcolor,
T.color),J(p.quadrantlabelblfontalpha,p.quadrantlabelfontalpha,100)),l.styleObj.fontWeight=J(p.quadrantlabelblfontbold,p.quadrantlabelfontbold)?"bold":"normal",l.styleObj.fontStyle=J(p.quadrantlabelblfontitalic,p.quadrantlabelfontitalic)?"italic":"normal",C(l.styleObj),r=J(p.quadrantlabelblborderpadding,p.quadrantlabelborderpadding,2),k=J(p.quadrantlabelblborderradius,p.quadrantlabelborderradius,0),m=m?H(m,J(p.quadrantlabelblbgalpha,p.quadrantlabelbgalpha,p.quadrantlabelblalpha,p.quadrantlabelalpha,
100)):"",n=J(p.quadrantlabelblborderdashed,p.quadrantlabelborderdashed,0)?u(J(p.quadrantlabelblborderdashlen,p.quadrantlabelborderdashlen,4),J(p.quadrantlabelblborderdashgap,p.quadrantlabelborderdashgap,2),q):"none",l["text-bound"]=[m,b,q,r,k,n]),""!==e&&(b=O(p.quadrantlabelbrbordercolor,p.quadrantlabelbordercolor,""),m=v(p.quadrantlabelbrbgcolor,p.quadrantlabelbgcolor),q=J(p.quadrantlabelbrborderthickness,p.quadrantlabelborderthickness,1),b=b?H(b,J(p.quadrantlabelbrborderalpha,p.quadrantlabelborderalpha,
p.quadrantlabelbralpha,p.quadrantlabelalpha,100)):"",B=V.brConfig,B||(B=V.brConfig={enabled:!0,styleObj:{}}),B.label=a(p.quadrantlabelbr,""),B.styleObj.fontSize=v(J(p.quadrantlabelbrfontsize,p.quadrantlabelfontsize),parseInt(T.fontSize,10))+"px",B.styleObj.lineHeight=T.lineHeight,B.styleObj.fontFamily=v(p.quadrantlabelbrfont,p.quadrantlabelfont,T.fontFamily),B.styleObj.color=H(v(p.quadrantlabelbrfontcolor,p.quadrantlabelfontcolor,T.color),J(p.quadrantlabelbrfontalpha,p.quadrantrabelfontalpha,100)),
B.styleObj.fontWeight=J(p.quadrantlabelbrfontbold,p.quadrantlabelfontbold)?"bold":"normal",B.styleObj.fontStyle=J(p.quadrantlabelbrfontitalic,p.quadrantlabelfontitalic)?"italic":"normal",C(B.styleObj),m=m?H(m,J(p.quadrantlabelbrbgalpha,p.quadrantlabelbgalpha,p.quadrantlabelbralpha,p.quadrantlabelalpha,100)):"",r=J(p.quadrantlabelbrborderpadding,p.quadrantlabelborderpadding,2),k=J(p.quadrantlabelbrborderradius,p.quadrantlabelborderradius,0),n=J(p.quadrantlabelbrborderdashed,p.quadrantlabelborderdashed,
0)?u(J(p.quadrantlabelbrborderdashlen,p.quadrantlabelborderdashlen,4),J(p.quadrantlabelbrborderdashgap,p.quadrantlabelborderdashgap,2),q):"none",B["text-bound"]=[m,b,q,r,k,n])},_preDraw:function(){var a,b,k,m,n,q;k=this.conf;var g=this.chart;m=g.components;q=m.yAxis[0];n=m.xAxis[0].getLimit();var l=q.getLimit();m=n.max;q=l.max;var B=n.min;n=l.min;var g=g.config,e=g.canvasWidth,u=g.canvasHeight,g=k.quadrantLabelPadding,l=k.tlConfig,p=k.trConfig,v=k.blConfig,K=k.brConfig;a=k.xVal||(k.xVal=(B+m)/2);
b=k.yVal||(k.yVal=(n+q)/2);if(b>=n&&b<=q&&a>=B&&a<=m){k=e/(m-B)*(a-B);m=e-k;q=u/(q-n)*(b-n);k-=g;n=u-q-g;q-=g;if(0>n||0>k)l.enabled=!1;if(0>n||0>m-g)p.enabled=!1;if(0>q||0>k)v.enabled=!1;if(0>q||0>k)K.enabled=!1}else k.enabled=!1;return this},draw:function(){var a=this._preDraw(),b=a.conf,k=a.chart,m=k.graphics,n=k.config,u=n.reverseXAxis,g=k.components,l=k.linkedItems.smartLabel,a=a.graphics,B=a.tlLabel,e=a.trLabel,v=a.blLabel,p=a.brLabel,A=n.textDirection,K=g.xAxis[0],t=g.yAxis[0],g=g.paper,C=a.container,
P=b.tlConfig||{},H=b.trConfig||{},z=b.blConfig||{},R=b.brConfig||{},P=P.enabled&&P.label,H=H.enabled&&H.label,z=z.enabled&&z.label,R=R.enabled&&R.label,w=n.canvasLeft,F=n.canvasTop,J=b.quadrantLabelPadding,h=K.getLimit(),d=t.getLimit(),f=u?h.min:h.max,c=d.max,d=d.min,u=K.getPixel(u?h.max:h.min)+J,f=K.getPixel(f)-J,d=t.getPixel(d)-J,J=t.getPixel(c)+J,K=K.getPixel(b.xVal),D=t.getPixel(b.yVal),t=K-u,c=f-K,h=D-J,G=d-D,O=a.horizontalQuadLine,Q=a.verticalQuadLine,Ia=k.get("config","animationObj"),k=Ia.duration||
0,sa=Ia.dummyObj,Ia=Ia.animObj,wa=!1;b.enabled?(C||(wa=!0,C=a.container=g.group("quadrant").insertBefore(m.datasetGroup)),C.animateWith(sa,Ia,{"clip-rect":n.canvasLeft+","+n.canvasTop+","+n.canvasWidth+","+n.canvasHeight},wa?0:k),O||(O=a.horizontalQuadLine=g.path(C)),O.animateWith(sa,Ia,{path:"M"+w+" "+D+"h"+n.canvasWidth},k).attr({stroke:b.quadrantLineColor,"stroke-dasharray":b.dashStyle,"stroke-width":b.quadrantLineThickness,"stroke-linecap":"butt"}),Q||(Q=a.verticalQuadLine=g.path(C)),Q.animateWith(sa,
Ia,{path:"M"+K+" "+F+"v"+n.canvasHeight},k).attr({stroke:b.quadrantLineColor,"stroke-width":b.quadrantLineThickness,"stroke-dasharray":b.dashStyle,"stroke-linecap":"butt"}),P?(B||(B=a.tlLabel=g.text(C).attr({"text-anchor":q,"vertical-align":M}).css(b.tlConfig.styleObj)),l.useEllipsesOnOverflow(n.useEllipsesWhenOverflow),l.setStyle(b.tlConfig.styleObj),m=l.getSmartText(P,t,h),P&&B.animateWith(sa,Ia,{x:u,y:J},wa?0:k).attr({text:m.text,direction:A,"text-bound":b.tlConfig["text-bound"]}).show()):B&&B.hide(),
H?(e||(e=a.trLabel=g.text(C).attr({"text-anchor":N,"vertical-align":M,direction:A}).css(b.trConfig.styleObj)),l.setStyle(b.trConfig.styleObj),m=l.getSmartText(H,c,h),H&&e.animateWith(sa,Ia,{x:f,y:J},wa?0:k).attr({text:m.text,"text-bound":b.trConfig["text-bound"]}).show()):e&&e.hide(),z?(v||(v=a.blLabel=g.text(C).attr({"text-anchor":q,"vertical-align":U,direction:A}).css(b.blConfig.styleObj)),l.setStyle(b.blConfig.styleObj),m=l.getSmartText(z,t,G),z&&v.animateWith(sa,Ia,{x:u,y:d},wa?0:k).attr({text:m.text,
"text-bound":b.blConfig["text-bound"]}).show()):v&&v.hide(),R?(p||(p=a.brLabel=g.text(C).attr({"text-anchor":N,"vertical-align":U,direction:A}).css(b.brConfig.styleObj)),l.setStyle(b.brConfig.styleObj),m=l.getSmartText(R,c,G),R&&p.animateWith(sa,Ia,{x:f,y:d},wa?0:k).attr({text:m.text,"text-bound":b.brConfig["text-bound"]}).show()):p&&p.hide()):C&&C.hide()}}])}]);Q.register("module",["private","modules.renderer.js-dataset-scatter",function(){var b=this.hcLib,v=this.window.Image,J=b.BLANKSTRING,C=b.BGRATIOSTRING,
H=b.extend2,A=b.pluck,u=b.pluckNumber,a=b.toRaphaelColor,O=b.graphics.getDarkColor,q=b.getFirstAlpha,M=b.HUNDREDSTRING,U=b.getFirstValue,N=b.parseTooltext,E=b.preDefStr,r=E.hiddenStr,k=E.setRolloverAttrStr,m=E.setRolloutAttrStr,E=Math,n=E.max,L=E.pow,g=b.getFirstColor,l=b.graphics.getLightColor,B=b.schedular;Q.register("component",["dataset","Scatter",{type:"scatter",configure:function(){var e,l,k,m=this.chart,n=m.components,t=b.parseUnsafeString,r=this.config,B=this.JSONData,v=m.areaAlpha,z=m.jsonData.chart,
E=n.colorManager;e=u(B.showplotborder,z.showplotborder||1);var w=E.getPlotColor(this.index),F=r.lineDashed=u(B.linedashed,B.dashed,z.linedashed,0),C=this.isLineSet;r.plotColor=w;k=u(m.defaultPlotShadow,E.getColor("showShadow"));r.xAxisLabelMode=A(z.xaxislabelmode,"categories");r.toolTipSepChar=A(z.tooltipsepchar,", ");r.parentYAxis=C?l=1:l="s"===A(B.parentyaxis&&B.parentyaxis.toLowerCase(),"p")?1:0;this.yAxis=n.yAxis[l];r.connectNullData=u(z.connectnulldata,0);r.includeInLegend=u(B.includeinlegend,
1);r.enableAnimation=l=u(z.animation,z.defaultanimation,1);r.animation=l?{duration:1E3*u(z.animationduration,1)}:!1;r.transposeanimation=u(z.transposeanimation,l);r.transposeanimduration=1E3*u(z.transposeanimduration,.2);r.showValues=u(B.showvalues,z.showvalues);r.valuePadding=u(z.valuepadding,2);r.valuePosition=A(B.valueposition,z.valueposition,"auto");r.showTooltip=u(z.showtooltip,1);r.seriesNameInTooltip=u(z.seriesnameintooltip,1);r.showRegressionLine=u(B.showregressionline,z.showregressionline,
0);r.plotFillColor=A(B.color,z.plotfillcolor,w);r.plotFillAngle=A(z.plotfillangle,270);r.plotFillAlpha=A(B.alpha,z.plotfillalpha,v,"70");v=u(z.useplotgradientcolor,1);r.plotGradientColor=0!==v?b.getDefinedColor(z.plotgradientcolor,E.getColor("plotGradientColor")):"";r.fillColor={color:r.plotFillColor+(r.plotGradientColor?","+r.plotGradientColor:J),alpha:r.plotFillAlpha,angle:r.plotFillAngle};r.plotBorderAlpha=e?A(B.plotborderalpha,z.plotborderalpha,B.alpha,"95"):0;r.plotBorderColor=A(B.plotbordercolor,
z.plotbordercolor,z.areabordercolor,"666666");r.dashed=e=u(B.dashed,z.plotborderdashed);r.plotBorderDashLen=A(B.plotborderdashlen,z.plotborderdashlen,5);r.plotBorderDashGap=A(B.plotborderdashgap,z.plotborderdashgap,4);r.plotBorderThickness=u(B.plotborderthickness,z.plotborderthickness,1);r.plotBorderDashStyle=e?b.getDashStyle(r.plotBorderDashLen,r.plotBorderDashGap,r.plotBorderThickness):"none";r.showHoverEffect=u(z.plothovereffect,z.anchorhovereffect,z.showhovereffect,void 0);r.rotateValues=u(z.rotatevalues)?
270:0;r.drawLine=u(B.drawline,z.drawlines,0);r.lineThickness=u(B.linethickness,z.linethickness,2);r.lineDashLen=u(B.linedashlen,z.linedashlen,5);r.lineDashGap=u(B.linedashgap,z.linedashgap,4);r.lineAlpha=u(B.linealpha,z.linealpha,B.alpha,M);r.lineColor=A(B.linecolor,z.linecolor,B.color,r.plotColor);r.lineDashStyle=b.getDashStyle(r.lineDashLen,r.lineDashGap,r.lineThickness);r.lineDashStyle=F?r.lineDashStyle:"none";r.shadow={opacity:u(z.showshadow,k)?r.lineAlpha/100:0};r.drawanchors=u(B.drawanchors,
B.showanchors,z.drawanchors,z.showanchors);r.anchorbgcolor=g(A(B.anchorbgcolor,z.anchorbgcolor,E.getColor("anchorBgColor")));r.anchorbordercolor=g(A(B.anchorbordercolor,B.color,z.anchorbordercolor,r.lineColor));r.anchorradius=u(B.anchorradius,z.anchorradius,3);r.anchoralpha=A(B.anchoralpha,B.alpha,z.anchoralpha,M);r.anchorbgalpha=A(B.anchorbgalpha,B.alpha,z.anchorbgalpha,M);r.anchorborderthickness=A(B.anchorborderthickness,z.anchorborderthickness,1);r.anchorsides=u(B.anchorsides,z.anchorsides,this.index+
3);r.anchorimageurl=A(B.anchorimageurl,z.anchorimageurl);r.anchorimagealpha=u(B.anchorimagealpha,z.anchorimagealpha,100);r.anchorimagescale=u(B.anchorimagescale,z.anchorimagescale,100);r.anchorimagepadding=u(B.anchorimagepadding,z.anchorimagepadding,1);r.anchorstartangle=u(B.anchorstartangle,z.anchorstartangle,90);r.anchorshadow=u(B.anchorshadow,z.anchorshadow,0);r.plotToolText=b.getValidValue(t(A(B.plottooltext,z.plottooltext)));r.showRegressionLine&&(r.regressionObj={isRegression:!0,sumX:0,sumY:0,
sumXY:0,sumXsqure:0,sumYsqure:0,xValues:[],yValues:[]},r.showYOnX=u(B.showyonx,z.showyonx,1),r.regressionLineColor=g(A(B.regressionlinecolor,z.regressionlinecolor,r.anchorbordercolor)),r.regressionLineThickness=u(B.regressionlinethickness,z.regressionlinethickness,r.anchorborderthickness),r.regressionLineAlpha=q(u(B.regressionlinealpha,z.regressionlinealpha,r.anchoralpha)),r.regLineColor=a({color:r.regressionLineColor,alpha:r.regressionLineAlpha}));r.seriesNameInTooltip&&(r.seriesname=b.getFirstValue(B&&
B.seriesname));this.visible=1===u(B.visible,!Number(B.initiallyhidden),1);this._setConfigure();!1!==m.hasLegend&&this._addLegend()},_setConfigure:function(){var a,g,l,k,m,t,n,r,q,B=-Infinity,v=Infinity,w=Infinity,F=-Infinity,E=this.components.data||(this.components.data=[]);a=this.chart;var h=b.parseUnsafeString,d=this.config,f=this.JSONData,c=a.jsonData.chart,D=f.data||[],G=D.length,C=a.components.numberFormatter,L=h(c.yaxisname),H=h(c.xaxisname),M=d.lineDashed,O=d.lineDashStyle,U=d.parentYAxis,
Q=d.toolTipSepChar,qa=d.seriesname;for(a=d.imageCount=0;a<G;a+=1)k=D[a],l=E[a]||(E[a]={}),g=l.config||(l.config={}),g.setValue=m={x:C.getCleanValue(k.x),y:C.getCleanValue(k.y)},null!==m.x&&null!==m.y&&(m.x>F&&(F=m.x,d.rightMostData=l),m.x<w&&(w=m.x,d.leftMostData=l),m.y>B&&(B=m.y,d.topMostData=l),m.y<v&&(v=m.y,d.bottomMostData=l)),d.showRegressionLine&&this.pointValueWatcher(m.x,m.y,d.regressionObj),g.setLink=A(k.link),g.anchorProps=this._parseAnchorProperties(a),g.showValue=u(k.showvalue,d.showValues),
g.dashed=u(k.dashed,M),g.color=A(k.color,d.lineColor),g.alpha=A(k.alpha,d.lineAlpha),g.dashStyle=g.dashed?O:"none",g.toolTipValue=t=C.dataLabels(m.y,U),g.setDisplayValue=q=h(k.displayvalue),r=g.formatedVal=A(k.toolTipValue,C.dataLabels(m.y,U)),n=C.xAxis(m.x),g.displayValue=A(q,t),g.setTooltext=b.getValidValue(h(A(k.tooltext,d.plotToolText))),d.showTooltip?void 0!==g.setTooltext?(m=[4,5,6,7,8,9,10,11],n={yaxisName:L,xaxisName:H,yDataValue:r,xDataValue:n},k=N(g.setTooltext,m,n,k,c,f)):null===r?k=!1:
(k=qa?qa+Q:J,k+=m.x?n+Q:J,k+=t):k=!1,g.toolText=k,l?l.graphics||(E[a].graphics={}):l=E[a]={graphics:{}},g.hoverEffects=this._parseHoverEffectOptions(l),g.anchorProps.isAnchorHoverRadius=g.hoverEffects.anchorRadius;d.xMax=F;d.xMin=w;d.yMin=v;d.yMax=B;d.showRegressionLine&&(d.regressionData=this.getRegressionLineSeries(d.regressionObj,d.showYOnX,G));this.ErrorValueConfigure&&this.ErrorValueConfigure()},sortFN:function(a,b){return a-b},_getHoveredPlot:function(a,b){var g=this.dataTree.getNeighbour({x:a,
y:b},!0);if(g)return{pointIndex:g.index||g.i,hovered:!0,pointObj:g.data}},manageSpace:function(){var a=this.config||(this.config={}),b=this.chart,g=b.config.rotatevalues,l=b.components.xAxis[0],k=b.components.yAxis[0],m=l.config.isReverse,r=b.config.dataLabelStyle,q=(this.components||{}).data||[],B=a.leftMostData||q[0],z=a.rightMostData||q[q.length-1],q=a.topMostData,a=a.bottomMostData,v,w,F,E=l.config.axisRange,h=E.max,d=k.config.axisRange,f=d.min,d=d.max,E=l.getPixel(E.min),c=l.getPixel(h),D={};
F={};var G=0,A=0,C,D=b.linkedItems.smartLabel,h={paddingLeft:0,paddingRight:0};F=0;m&&(B=z=B);if(B){v=B.config;B=v.anchorProps.radius;if(C=v.showValue)F=v.displayValue,D.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow),D.setStyle(r),F=D.getOriSize(F),F=g?F.height:F.width;null!==v.setValue&&(b=l.getPixel(v.setValue.x),A=m?c-(b-.5*F):E-(b-.5*F),G=!m&&b-B<=E||m&&b-B<=c?m?c-(b-B):E-(b-B):0);h.paddingLeft=n(A,G)}z&&(v=z.config,C=v.showValue,B=v.anchorProps.radius,C&&(F=v.displayValue,D.setStyle(r),
D=D.getOriSize(F),F=g?D.height:D.width),null!==v.setValue&&(b=l.getPixel(v.setValue.x),g=b-E+.5*F,A=g-c+E,m&&(A=g),G=!m&&b+B>=c||m&&b+B>=E?m?b+B-E:b+B-c:0),h.paddingRight=n(A,G));q&&(m=(v=q.config)&&v.anchorProps||{},B=v.anchorProps.radius||0,d=k.getPixel(d),null!==v.setValue&&(w=k.getPixel(v.setValue.y),G=u(B,0)+u(m.borderThickness,0)/2),h.paddingTop=0<d-(w-G)?d-(w-G):0);a&&(m=(v=a.config)&&v.anchorProps||{},B=v.anchorProps.radius||0,f=k.getPixel(f),null!==v.setValue&&(w=k.getPixel(v.setValue.y),
G=u(B,0)+u(m.borderThickness,0)/2),h.paddingBottom=0<w+G-f?w+G-f:0);return h},getRegressionLineSeries:function(a,b,g){var l,k,m,n;n=a.sumXY;var r=a.sumX,q=a.sumY;k=a.xValues;m=a.sumXsqure;l=a.yValues;a=a.sumYsqure;b?(k.sort(this.sortFN),l=k[0],k=k[k.length-1],n=(g*n-r*q)/(g*m-L(r,2)),m=!isNaN(n)&&isFinite(n)?n*(l-r/g)+q/g:q/g,g=!isNaN(n)&&isFinite(n)?n*(k-r/g)+q/g:q/g,g=[{x:l,y:m},{x:k,y:g}]):(l.sort(this.sortFN),m=l[0],l=l[l.length-1],n=(g*n-r*q)/(g*a-L(q,2)),k=isNaN(n)?r/g:n*(m-q/g)+r/g,g=isNaN(n)?
r/g:n*(l-q/g)+r/g,g=[{x:k,y:m},{x:g,y:l}]);return g},draw:function(){var e,g,l,q,u,t,E,C,L,z,H,w,F,J,h,d,f,c,D,G=this,N=G.JSONData,M=G.chart,O=M.getJobList(),U=M.components,Q=G.components.removeDataArr,Q=Q&&Q.length,ca=M.jsonData.chart,ma=G.config,qa=G.index,va=N.data||[],ha=M.config,ra=U.paper,ka=U.xAxis[0],U=U.yAxis[0],na=b.parseUnsafeString,da=b.getValidValue,oa=G.components.data,Y=oa.length;f={};g={};var za=ma.lineThickness;g=M.graphics;t=g.datalabelsGroup;var fa=G.graphics.container,Aa=G.graphics.trackerContainer;
J=g.trackerGroup;var ua=G.pool||(G.pool={}),ia=ma.connectNullData,xa=ma.showTooltip;g=g.datasetGroup;var ja=ma.shadow,ya=G.graphics.dataLabelContainer,W=G.visible;u={};var Ma=this.searchDataArr=[],ea=[n(0,ha.canvasLeft),n(0,ha.canvasTop),n(1,ha.canvasWidth),n(1,ha.canvasHeight)],ha=[n(0,ha.canvasLeft),n(0,ha.canvasTop),1,n(1,ha.canvasHeight)],ga=ma.lineDashStyle,la={color:ma.lineColor,alpha:ma.lineAlpha},Ca=[],Ha=[],pa=null,La=[],Ja=!1,Fa=G.graphics.lineElement;u=G.graphics.regressionLineElement;
var ta=M.get("config","animationObj"),M=ta.duration||0,Ka=ta.dummyObj,Ea=ta.animObj,ta=ta.animType,Da=0;ma.imagesLoaded=0;g.line=g.line||ra.group("line",g);g.lineConnector=g.lineConnector||ra.group("line-connector",g);fa||(fa=G.graphics.container={lineShadowGroup:ra.group("connector-shadow",g.lineConnector),anchorShadowGroup:ra.group("anchor-shadow",g.lineConnector),lineGroup:ra.group("connector",g.lineConnector),anchorGroup:ra.group("anchors",g.lineConnector)});Aa||(Aa=G.graphics.trackerContainer=
ra.group("line-hot"));oa||(oa=G.components.data=[]);J&&J.appendChild(Aa);ya||(ya=G.graphics.dataLabelContainer=ra.group("datalabel",t).attr("class","fusioncharts-datalabels"));ma.showRegressionLine&&W?(t=ma.regressionData[0],J=ma.regressionData[1],(g=ma._regressionAttr)||(ma._regressionAttr=g={}),g.stroke=ma.regLineColor,g["stroke-width"]=ma.regressionLineThickness,g["stroke-linecap"]="round",g["stroke-linejoin"]=2<ma.regressionLineThickness?"round":"miter",g.path="M "+ka.getAxisPosition(t.x)+","+
U.getAxisPosition(t.y)+" L "+ka.getAxisPosition(J.x)+","+U.getAxisPosition(J.y),u?u.animateWith(Ka,Ea,g,M,ta):u=G.graphics.regressionLineElement=ra.path(g,fa.regLineGroup),u.show()):u&&u.hide();for(t=0;t<Y;t+=1)if(u=va[t],J=oa[t],c=J.config,l=c.trackerConfig={},g=J.graphics,w=c.setValue,H=c.setLink,da(na(A(u.tooltext,N.plottooltext,ca.plottooltext))),u=c.anchorProps,f=u.symbol,h=u.shadow,F=c.displayValue,J||(J=oa[t]={graphics:{}}),q=w.y,e=w.x,L=c.finalTooltext=c.toolText,null!==q&&null!==e){d=c.hoverEffects;
E=ka.getAxisPosition(e);C=U.getAxisPosition(q);c.eventArgs={index:t,link:H,x:e,y:q,value:w,displayValue:F,toolText:L,id:ma.userID,datasetIndex:qa||0,datasetName:N.seriesname,visible:W};if(u.imageUrl)c.anchorImageLoaded=!1,l=new v,c.anchorImageLoaded=!1,W||g.image&&g.image.animateWith(Ka,Ea,{opacity:0},M,ta),l.onload=this._onAnchorImageLoad(G,t,void 0,E,C),l.onerror=this._onErrorSetter(G,t),l.src=u.imageUrl,Da++;else if(z=g.element,(w=g.image)&&w.hide(),z||(z=ua.element&&ua.element.length?g.element=
ua.element.shift():g.element=ra.polypath(fa.anchorGroup),Ja=!0,M&&Ja&&z.attr({polypath:[f[1]||2,E,C,u.radius,u.startAngle,0],opacity:0,"fill-opacity":0,"stroke-opacity":0})),z.attr({fill:a({color:u.bgColor,alpha:u.bgAlpha}),stroke:a({color:u.borderColor,alpha:u.borderAlpha}),"stroke-width":u.borderThickness,cursor:H?"pointer":"",visibility:u.radius?W:r}).shadow(h,fa.anchorShadowGroup).animateWith(Ka,Ea,{polypath:[f[1]||2,E,C,u.radius,u.startAngle,0],opacity:W?u.bgAlpha/100:0,"fill-opacity":W?u.bgAlpha/
100:0,"stroke-opacity":W?u.borderAlpha/100:0},M,ta),H||xa||d)g=n(u.radius,d.anchorRadius||0),l.trackerRadius=g;d.enabled&&(g={polypath:[d.anchorSides||2,E,C,d.anchorRadius,d.startAngle,d.dip],fill:a({color:d.anchorColor,alpha:d.anchorBgAlpha}),stroke:a({color:d.anchorBorderColor,alpha:d.anchorBorderAlpha}),"stroke-width":d.anchorBorderThickness},f={polypath:[f[1]||2,E,C,u.radius,u.startAngle,0],fill:a({color:u.bgColor,alpha:u.bgAlpha}),stroke:a({color:u.borderColor,alpha:u.borderAlpha}),"stroke-width":u.borderThickness},
z&&z.data("hoverEnabled",d.enabled).data("anchorRadius",u.radius).data("anchorHoverRadius",d.anchorRadius).data(k,g).data(m,f));u.isAnchorHoverRadius=d.anchorRadius;null!==pa?(La.length&&(Ca=Ca.concat(La),La.length=0),Ca.join("")||Ca.push("M",D,pa),Ca.push("L",E,C)):La.push("M",E,C);D=E;pa=C;J._xPos=E;J._yPos=C;z&&z.data("eventArgs",c&&c.eventArgs);Ma.push({x:E,y:C,index:t,data:J,r:u.radius||0})}else La.length=0,ia||(pa=null);this.dataTree=(new b.KdTree).buildKdTree(Ma);Ca.length&&(Ha=Ha.concat(Ca));
ma.drawLine&&Ha.join("")?(Fa||(Fa=G.graphics.lineElement=ra.path({path:Ha},fa.lineGroup),Ja=!0),W&&Fa.attr({"stroke-dasharray":ga,"stroke-width":za,stroke:a(la),"stroke-linecap":"round","stroke-linejoin":2<=za?"round":"miter"}),W?Fa.animateWith(Ka,Ea,{path:Ha,"stroke-opacity":1},M,ta,function(){this.shadow(ja,fa.lineShadowGroup)}):Fa.animateWith(Ka,Ea,{path:Ha,"stroke-opacity":0},Ja?0:M,ta).shadow(!1)):Fa&&Fa.animateWith(Ka,Ea,{"stroke-opacity":0},M,ta).shadow(!1);ma.totalImages=ma.noOfImages=Da;
0===Da&&(G.drawn?G.drawLabel():O.labelDrawID.push(B.addJob(function(){G.drawLabel()},b.priorityList.label)));fa.lineShadowGroup.hide();fa.anchorShadowGroup.hide();ya.hide();Ja&&fa.lineGroup.attr({"clip-rect":ha});fa.lineGroup.animateWith(Ka,Ea,{"clip-rect":ea},M,ta,function(){fa.lineGroup.attr({"clip-rect":null});W?(fa.lineShadowGroup.show(),fa.anchorShadowGroup.show(),fa.anchorGroup.show(),Aa.show(),ya&&ya.show()):(fa.lineShadowGroup.hide(),fa.anchorShadowGroup.hide(),fa.anchorGroup.hide(),Aa.hide(),
ya&&ya.hide())});Q&&G.remove();G.drawErrorValue&&G.drawErrorValue();G.drawn=!0},getDataLimits:function(){var a=this.config,b=a.yMax,g=a.yMin,l=a.xMax,a=a.xMin,k=this.chart.config.transposeAxis;!1===this.visible&&k&&(b=-Infinity,g=Infinity,l=-Infinity,a=Infinity);return{max:b,min:g,xMax:l,xMin:a}},getAxisValuePadding:function(){return{left:0,right:0}},_addLegend:function(){var b,g=this.config,l=this.chart.components.legend,k=u(g.drawanchors,1);b=this.getPointColor(g.anchorbgcolor,M);var m={FCcolor:{color:g.anchorbordercolor,
alpha:g.anchoralpha}};l.config.symbol3DLighting?b&&b.FCcolor?(b=H({},b),b.FCcolor.alpha="100"):b=A(b):b={FCcolor:{color:A(b&&(b.FCcolor&&b.FCcolor.color.split(",")[0]||b)),angle:0,ratio:"0",alpha:"100"}};this.legendItemId=l.addItems(this,this.legendInteractivity,{enabled:g.includeInLegend,type:this.type,drawLine:A(g.drawLine,!0),fillColor:a(b),strokeColor:a(A(m&&(m.FCcolor&&m.FCcolor.color.split(",")[0]||m))),rawFillColor:g.anchorbgcolor,rawStrokeColor:g.anchorbordercolor,anchorSide:k?g.anchorsides:
0,strokeWidth:g.anchorborderthickness,label:U(this.JSONData.seriesname)})},getPointColor:function(a,b){var k,m;a=g(a);b=q(b);k=l(a,70);m=O(a,50);return{FCcolor:{gradientUnits:"objectBoundingBox",cx:.4,cy:.4,r:"100%",color:k+","+m,alpha:b+","+b,ratio:C,radialGradient:!0}}}},"Line"])}]);Q.register("module",["private","modules.renderer.js-dataset-pareto",function(){var b=this.hcLib,v=b.extend2,J=b.pluck,C=b.pluckNumber,H=b.toRaphaelColor,A=b.graphics.convertColor,u=b.HUNDREDSTRING,a=b.getValidValue,
O=Math,q=O.min,M=O.max,U=O.abs,N=b.getFirstColor,E=b.graphics.getLightColor;Q.register("component",["dataset","Pareto",{configure:function(){var r=this.chart,k=this.config,m=r.components,n=m.xAxis[0],L=this.JSONData,g=L.data,l=g&&g.length,B=r.jsonData.chart,e=m.colorManager,V,p=e.getPlotColor(this.index||this.positionIndex),T=C(L.dashed,B.plotborderdashed),K=C(B.useplotgradientcolor,1),t=C(B.showtooltip,1),Z=b.parseUnsafeString,P=Z(B.yaxisname),S=Z(B.xaxisname),z=b.parseTooltext,R,w,F,X,h,d,f,c,D,
G,O,Q,Ia,sa,wa,ca=b.getDashStyle,ma=this.components.data,m=m.numberFormatter,qa,va=r.is3D,ha,ra,ka,na,da,oa,Y,za,fa=-Infinity,Aa=Infinity,ua=this.type.toLowerCase(),ia,xa,ja=0,ya=[],W=0,Ma,ea=k.tootipSepChar=J(B.tooltipsepchar,", ");k.enableAnimation=f=C(B.animation,B.defaultanimation,1);k.animation=f?{duration:1E3*C(B.animationduration,1)}:!1;k.showTooltip=C(B.showtooltip,1);k.valuePadding=C(B.valuepadding,2);k.rotateValues=C(B.rotatevalues)?270:0;k.showHoverEffect=f=C(B.plothovereffect,B.showhovereffect,
void 0);k.showShadow=d||va?C(B.showshadow,1):C(B.showshadow,e.getColor("showShadow"));k.useDataPlotColorForLabels=Ma=C(B.usedataplotcolorforlabels,0);k.use3dlineshift=C(B.use3dlineshift,r.use3dlineshift);/column/.test(ua)&&(V=k.showplotborder=C(B.showplotborder,va?0:1),k.plotDashLen=F=C(B.plotborderdashlen,5),k.plotDashGap=X=C(B.plotborderdashgap,4),k.plotfillangle=c=C(360-B.plotfillangle,90),k.plotfillalpha=D=J(B.plotfillalpha,u),k.plotColor=p,k.isRoundEdges=d=C(B.useroundedges,0),k.plotRadius=C(B.useRoundEdges,
k.isRoundEdges?1:0),k.plotfillratio=G=J(B.plotfillratio),k.plotgradientcolor=O=b.getDefinedColor(B.plotgradientcolor,e.getColor("plotGradientColor")),!K&&(O=""),k.plotborderalpha=Q=V&&!va?J(B.plotborderalpha,D,u):0,k.plotbordercolor=Ia=J(B.plotbordercolor,va?"#ffffff":e.getColor("plotBorderColor")),k.plotborderthickness=h=C(B.plotborderthickness,1),k.plotBorderDashStyle=sa=T?ca(F,X,h):"none",k.showValues=C(B.showvalues,1),k.definedGroupPadding=M(C(B.plotspacepercent),0),k.plotSpacePercent=M(C(B.plotspacepercent,
20)%100,0),k.maxcolwidth=C(B.maxcolwidth,50),k.plotpaddingpercent=C(B.plotpaddingpercent),k.placevaluesinside=C(B.placevaluesinside,0),k.use3dlighting=C(B.use3dlighting,1),k.parentYAxis=0);"line"===ua&&(k.linecolor=N(J(B.linecolor,e.getColor("plotBorderColor"))),k.linethickness=C(B.linethickness,2),k.linealpha=J(B.linealpha,u),k.linedashed=C(B.linedashed,0),k.linedashlen=C(L.linedashlen,B.linedashlen,5),k.linedashgap=C(L.linedashgap,B.linedashgap,4),T=b.getDashStyle(k.linedashlen,k.linedashgap,k.linethickness),
k.lineDashStyle=k.linedashed?T:"none",k.drawanchors=C(B.drawanchors,B.showanchors),k.anchorbgcolor=J(B.anchorbgcolor,e.getColor("anchorBgColor")),k.anchorbordercolor=J(B.anchorbordercolor,k.linecolor),k.anchorradius=C(B.anchorradius,3),k.anchoralpha=J(B.anchoralpha),k.anchorbgalpha=J(B.anchorbgalpha,100),k.anchorborderthickness=J(B.anchorborderthickness,1),k.anchorsides=J(B.anchorsides,0),k.anchorimageurl=J(B.anchorimageurl),k.anchorimagealpha=C(B.anchorimagealpha,100),k.anchorimagescale=C(B.anchorimagescale,
100),k.anchorimagepadding=C(B.anchorimagepadding,1),k.anchorstartangle=C(B.anchorstartangle,90),k.parentYAxis=1,k.valuePosition=J(B.valueposition,"auto"),k.showValues=C(B.showlinevalues,B.showvalues,1),k.showShadow&&(k.shadow={opacity:k.lineAlpha/100}),k.showCumulativeLine=C(B.showcumulativeline,1),k.maxRadius=-Infinity);ma||(ma=this.components.data=[]);for(T=0;T<l;T++)K=U(m.getCleanValue(g[T].value)),ja+=K,ya[T]=v({},g[T]),ya[T].value=K;ya.sort(function(a,c){return c.value-a.value});for(T=k.imageCount=
0;T<l;T++)K=ya[T],(p=ma[T])||(p=ma[T]={graphics:{}}),p.config||(g=ma[T].config={}),r=U(m.getCleanValue(K.value)),null!==r&&(g=p&&p.config,qa=n.getLabel(T),g.label=a(Z(J(qa.label))),g.showValue=C(K.showvalue,k.showValues),g.setValue=r,g.setLink=J(K.link),g.setDisplayValue=qa=Z(K.displayvalue),W+=g.setValue,ia=m.dataLabels(r),/column/.test(ua)?(p=C(K.dashed),R=C(K.dashlen,F),wa=X=C(K.dashgap,X),g.plotBorderDashStyle=R=1===p?ca(R,wa,h):0===p?"none":sa,p=e.getPlotColor(T),p=J(K.color,p),G=J(K.ratio,k.plotfillratio),
D=J(K.alpha,k.plotfillalpha),Q=J(K.alpha,k.plotborderalpha),0>r&&!d&&(w=c,c=360-c),g.colorArr=wa=b.graphics.getColumnColor(p+","+O,D,G,c,d,Ia,Q.toString(),0,va?!0:!1),0!==f&&(ha=J(K.hovercolor,B.plotfillhovercolor,B.columnhovercolor,p),ra=J(K.hoveralpha,B.plotfillhoveralpha,B.columnhoveralpha,D),ka=J(K.hovergradientcolor,B.plothovergradientcolor,O),!ka&&(ka=""),G=J(K.hoverratio,B.plothoverratio,G),na=C(360-K.hoverangle,360-L.hoverangle,360-B.plothoverangle,c),da=J(K.borderhovercolor,B.plotborderhovercolor,
Ia),Q=J(K.borderhoveralpha,L.borderhoveralpha,B.plotborderhoveralpha,B.plotfillhoveralpha,Q,D),D=C(K.borderhoverthickness,L.borderhoverthickness,B.plotborderhoverthickness,h),oa=C(K.borderhoverdashed,B.plotborderhoverdashed),Y=C(K.borderhoverdashgap,B.plotborderhoverdashgap,F),za=C(K.borderhoverdashlen,B.plotborderhoverdashlen,X),oa=oa?ca(za,Y,D):R,1==f&&ha===p&&(ha=E(ha,70)),ha=b.graphics.getColumnColor(ha+","+ka,ra,G,na,d,da,Q.toString(),0,va?!0:!1),g.setRolloutAttr={fill:va?[H(wa[0]),!k.use3dlighting]:
H(wa[0]),stroke:V&&H(wa[1]),"stroke-width":h,"stroke-dasharray":R},g.setRolloverAttr={fill:va?[H(ha[0]),!k.use3dlighting]:H(ha[0]),stroke:V&&H(ha[1]),"stroke-width":D,"stroke-dasharray":oa}),Ma&&n.updateCategory(T,{labelfontcolor:A(p)}),g.displayValue=J(qa,ia),R=g.setTooltext=g.origToolText=a(Z(J(K.tooltext,B.plottooltext))),g.toolTipValue=m.dataLabels(r,k.parentYAxis)):(r=g.setValue=W/ja*100,xa=m.percentValue(r),g.toolTipValue=xa,g.displayValue=xa,g.valuePosition=J(K.valueposition,k.valuePosition),
g.anchorProps=this._parseAnchorProperties(T,ya),g.hoverEffects=this._parseHoverEffectOptions(p),p=g.anchorProps,k.maxRadius=Math.max(k.maxRadius,p.radius+p.borderThickness/2)),p=g.toolTipValue,fa=M(fa,r),Aa=q(Aa,r),t?(k.showTooltip?void 0!==R?(r={formattedValue:p,label:g.label,yaxisName:P,xaxisName:S,cumulativeValue:W,cumulativeDataValue:m.dataLabels(W),cumulativePercentValue:xa,sum:m.dataLabels(ja),unformattedSum:ja},p=[1,2,3,5,6,7,20,21,22,23,24,25],K=z(R,p,r,K,B)):K=g.label?g.label+ea:"":K=!1,
g.toolText=K):K=!1,g.toolText=K,g.tooltext=R,g.setTooltext=K,w&&(c=w));k.maxValue=fa;k.minValue=Aa},init:function(a,b,m){var n=a.chart.components;a.JSONData={data:b};a.type=m;a.yAxis="line"===m?n.yAxis[1]:n.yAxis[0];a.components={};a.graphics={};a.visible=!0;this.configure.call(a)}}])}]);Q.register("module",["private","modules.renderer.js-dataset-mssplinearea",function(){var b=this.hcLib,v=this.window.Image,J=b.TOUCH_THRESHOLD_PIXELS,C=b.CLICK_THRESHOLD_PIXELS,H=b.toRaphaelColor,A=b.hasTouch?J:C,
J=b.preDefStr,u=J.hiddenStr,a=J.setRolloverAttrStr,O=J.setRolloutAttrStr,J=Math,q=J.sqrt,M=J.min,U=J.max,N=J.abs,E=b.schedular;Q.register("component",["dataset","MSSplineArea",{configure:function(){Q.get("component",["dataset","area"]).prototype.configure.call(this);this._calculateMaxMin()},_calculateMaxMin:function(){var a=this.config,b=this.chart,m=b.config,n=b.origRenderWidth,q=m.connectnulldata,g=this.components.data,l=Number.MIN_VALUE,B=Number.MAX_VALUE;0===m.minimizetendency&&(b=b.getSplineExtremities(g,
n,q),a.maxValue=U(a.maxValue,b.max),a.minValue=M(a.minValue,b.min),a.maxValue===l&&(a.maxValue=0),a.minValue===B&&(a.minValue=0))},getSplinePath:function(a,b,m,n){var u=function(a,c,b,d){c=(d-c)/q((b-a)*(b-a)+(d-c)*(d-c));c=N(.5*c);return a*c+b*(1-c)},g=function(a,c,b,d){var e=a.length,f=a[e-1],g=f.length,h=f[0],f=f[g-2];3>g||("R"!==h&&"C"!==h||3!==g||(a[e-1][0]="L"),c&&a.push(["L",f,d,b,d,"Z"]))},l=/area/ig.test(this.defaultDatasetType),B=[null],e=[],v=[],p=b.getAxisBase();b=b.getAxisPosition(p);
var E,K,t,A,C,H,z,J,w,F,M,h,d,f,c,D;c=0;for(D=a.length;c<D;c+=1)if(w=a[c],t=a[c-1]||{},A=a[c+1]||{},C=w.x,p=w.y,E=t.x,t=t.y,H=A.x,A=A.y,z=w.lastYPos,J=w.lastXPos,M=e.length,w=v.length,n)if(null!==z)if(K=d,c===a.length-1){z=B[c-h-1];w=H=(C+E)/2;M=(w-E)*z+t;if(t>p&&M<p||t<p&&M>p)M=p,w=(M-t)/z+E;d.push(w,M,H,(p+t)/2,C,p);e.push(d);v.push(d);l&&g(e,!0,f,b);l&&g(v,!1)}else{z=B[c-h-1];if(t>p&&A>=p||t<p&&A<=p)if(F=0,H=u(E,t,C,p),A=p,1!==c-h){w=H;M=(w-E)*z+t;if(t>p&&M<p||t<p&&M>p)M=p,w=(M-t)/z+E;d.push(w,
M,H,A,C,p)}else d.push((C+E)/2,(p+t)/2,H,A,C,p);else if(t===p)F=0,d.push(E,t,C,p,C,p);else if(t>p&&p>A||t<p&&p<A){F=(A-t)/(H-E);H=u(E,t,C,p);A=(H-C)*F+p;if(t>p&&A>t||t<p&&A<t)A=t,H=(A-p)/F+C;if(1!==c-h){w=H;M=(w-E)*z+t;if(t>p&&M<p||t<p&&M>p)M=p,w=(M-t)/z+E;d.push(w,M,H,A,C,p)}else d.push((C+E)/2,(p+t)/2,H,A,C,p)}B.push(F)}else null===z&&0!==c?(K||(K=[]),"C"===K[0]&&(e.push(d),v.push(d),l&&g(e,!0,f,b),l&&g(v,!1)),e.push(["M",C,p]),v.push(["M",C,p]),f=C,d=["C"],h=c,B=[null]):(e.push(["M",C,p]),v.push(["M",
C,p]),f=C,d=["C"],h=c);else null!==z?2<=M?("M"===e[M-1][0]&&e.push(["R"]),"M"===v[w-1][0]&&v.push(["R"]),M=e.length,w=v.length,K=e[M-1],E=K.length,e[M-1].push(C),e[M-1].push(p),v[w-1].push(C),v[w-1].push(p),c===m-1&&"R"===K[0]&&(g(e,!0,f,b),g(v,!1))):(e.push(["M",J,z]),e.push(["R",C,p]),v.push(["M",J,z]),v.push(["R",C,p]),f=J):null===z&&2<=M&&(K=e[M-1],"R"===K[0]&&(g(e,!0,f,b),g(v,!1)),e.push(["M",C,p]),v.push(["M",C,p]),f=C);K=e[e.length-1];l&&K&&(E=K.length,"Z"===K[E-1]||"R"!==K[0]&&"C"!==K[0]||
(g(e,!0,f,b),g(v,!1)));l||(e=n?e:v,2<=e.length&&g(e,!1));return{closedPath:e,openPath:v}},draw:function(){var r=this,k=r.config,m=r.chart,n=m.getJobList(),q=r.JSONData,g=m.config,l=m.components,B=l.canvas.config,e=r.index,C,p,J=l.paper,l=l.xAxis[0],K=r.yAxis,t,N,P,M,z=null,R=[],w=[],F=m.graphics,X=g.showtooltip,h,d=r.components.data,f,c,D,G,aa,Q=g.connectnulldata,Ia,sa,wa=g.minimizetendency,ca=K.getAxisBase(),ma,qa=k.plotbordercolor,va=k.plotborderalpha,ha=k.plotBorderDashStyle,ra=k.plotborderthickness,
ka=r.graphics.container,na=[],da,oa=k.fillColor,Y=F.areaGroup,za=m.get("config","animationObj"),fa=za.duration,Aa=za.animType,ua=r.components.removeDataArr||[],ia=ua.length,xa=ka&&ka.shadowContainer,ja=r.graphics.dataLabelContainer,ya=function(){!1!==r.visible||!1!==r._conatinerHidden&&void 0!==r._conatinerHidden||(ka.areaGroup.hide(),xa.hide(),ka.lineShadowGroup.hide(),ka.anchorShadowGroup.hide(),ka.anchorGroup.hide(),ja&&ja.hide(),r._conatinerHidden=!0)},W=function(){Y.area.attr({"clip-rect":null});
Y.area.node&&Y.area.node.removeAttribute("clip-path");!1!==r.visible&&(ka.lineShadowGroup.show(),ka.anchorShadowGroup.show(),ka.anchorGroup.show(),ja.show(),xa.show())},Ma=k.shadow,ea,ga=r.visible,la,na={},na=F.datalabelsGroup,F=B.clip["clip-canvas"].slice(0),B=B.clip["clip-canvas-init"].slice(0),g=!g.drawfullareaborder,Ca=!0,Ha=r.components.pool||[],pa=za.dummyObj,za=za.animObj,La=r.graphics.connector,Ja=0,Fa;k.imagesLoaded=0;ka||(ka=r.graphics.container={lineShadowGroup:J.group("connector-shadow",
Y.areaConnector),anchorShadowGroup:J.group("anchor-shadow",Y.areaConnector),areaGroup:J.group("area",Y.area),anchorGroup:J.group("anchors",Y.areaConnector)},ga||(ka.lineShadowGroup.hide(),ka.anchorShadowGroup.hide(),ka.areaGroup.hide(),ka.anchorGroup.hide()));xa||(xa=r.graphics.shadowContainer=J.group("shadows",Y.shadows),ga||xa.hide());d||(d=r.components.data);ja||(ja=r.graphics.dataLabelContainer=r.graphics.dataLabelContainer||J.group("datalabel",na),ga||ja.hide());ga&&(ka.lineShadowGroup.show(),
ka.anchorShadowGroup.show(),ka.areaGroup.show(),ka.anchorGroup.show(),ja.show(),xa.show());C=l.getCategoryLen();da=r.graphics.splineElement;for(p=0;p<C;p++)if(f=d[p])h=f&&f.config,aa=h.setValue,G=h.setLink,na=h.anchorProps,la=na.shadow,t=h.setLevelTooltext,h&&(ma=0<=aa?h.previousPositiveY:h.previousNegativeY),D=f.graphics.element,N=f.graphics.hotElement,Fa=f.graphics.image,null===aa?(D&&D.hide(),N&&N.hide(),Fa&&Fa.hide(),Q||(z=null)):(K.getAxisPosition(ma||ca),P=K.getAxisPosition(aa+(ma||0)),N=l.getAxisPosition(p),
!1===ga&&fa&&(P=K.getPixel(K.getAxisBase())),ea=h.hoverEffects,c=X?h.toolText+(t?"":h.toolTipValue):"",h.finalTooltext=c,t=h.eventArgs=h.eventArgs||{},t.index=p,t.link=G,t.value=aa,t.displayValue=h.displayValue,t.categoryLabel=l.getLabel(p).label,t.toolText=c,t.id=r.userID,t.datasetIndex=e||0,t.datasetName=q.seriesname,t.visible=ga,ea.enabled&&(h.setRolloverAttr={polypath:[ea.anchorSides||2,N,P,ea.anchorRadius,ea.startAngle,ea.dip],fill:H({color:ea.anchorColor,alpha:ea.anchorBgAlpha}),stroke:H({color:ea.anchorBorderColor,
alpha:ea.anchorBorderAlpha}),"stroke-width":ea.anchorBorderThickness},h.setRolloutAttr={polypath:[na.symbol[1]||2,N,P,na.radius,na.startAngle,0],fill:H({color:na.bgColor,alpha:na.bgAlpha}),stroke:H({color:na.borderColor,alpha:na.borderAlpha}),"stroke-width":na.borderThickness},sa=h.setRolloverAttr,Ia=h.setRolloutAttr),G=[na.symbol[1]||2,N,P,na.radius,na.startAngle,0],na.imageUrl?(h.anchorImageLoaded=!1,Ja++,h=new v,h.onload=r._onAnchorImageLoad(r,p,t,N,P),h.onerror=r._onErrorSetter(r,p),h.src=na.imageUrl):
(Fa&&Fa.hide(),D||(Ha.element&&Ha.element.length?D=f.graphics.element=Ha.element.shift():(D=f.graphics.element=J.polypath(ka.anchorGroup),D.attr({polypath:G}))),Fa&&Fa.hide(),D.show().animateWith(pa,za,{polypath:G},fa,Aa,Ca&&void 0).attr({fill:H({color:na.bgColor,alpha:na.bgAlpha}),stroke:H({color:na.borderColor,alpha:na.borderAlpha}),"stroke-width":na.borderThickness,visibility:na.radius?ga:u}).shadow(la,ka.anchorShadowGroup).data("anchorRadius",na.radius).data("anchorHoverRadius",ea.anchorRadius).data("eventArgs",
t),ea.enabled&&D&&D.data("anchorRadius",na.radius).data("anchorHoverRadius",ea.anchorRadius).data("hoverEnabled",ea.enabled).data(a,sa).data(O,Ia),h.trackerConfig||(h.trackerConfig={}),h.trackerConfig.trackerRadius=U(na.radius,ea&&ea.anchorRadius||0,A)+(na.borderThickness||0)/2),f._xPos=N,f._yPos=P,w.push({x:N,y:P,lastXPos:M,lastYPos:z}),M=N,z=P);k.noOfImages=k.totalImages=Ja;0===Ja&&n.labelDrawID.push(E.addJob(function(){r.drawLabel()},b.priorityList.label));na=this.getSplinePath.call(m,w,K,C,wa).closedPath;
na=na.join();da||(da=r.graphics.splineElement=J.path(ka.areaGroup),da.attr({path:na}),fa&&ga&&(ka.anchorGroup.hide(),ka.anchorShadowGroup.hide(),ja.hide(),xa.hide(),Y.area.attr({"clip-rect":B}).animateWith(pa,za,{"clip-rect":F},fa,Aa,W)));""===na?da.hide():da.show().animateWith(pa,za,{path:na},fa,Aa,Ca&&ya);Ca=!1;da.attr({stroke:H({color:qa,alpha:va}),"stroke-width":g?0:ra,fill:H(oa),"stroke-linecap":"round","stroke-linejoin":2<ra?"round":"miter","stroke-dasharray":ha}).shadow(Ma,xa);g&&(La||(La=
r.graphics.connector=J.path(ka.areaGroup)),La.animateWith(pa,za,{path:R},fa,Aa),La.attr({stroke:H({color:qa,alpha:va}),"stroke-width":ra,"stroke-linecap":"round","stroke-linejoin":2<ra?"round":"miter","stroke-dasharray":ha}));for(p=0;p<ia;p++)r._removeDataVisuals(ua.shift())}},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-msspline",function(){var b=this.hcLib,v=this.window.Image,J=b.TOUCH_THRESHOLD_PIXELS,C=b.CLICK_THRESHOLD_PIXELS,H=b.pluck,A=b.toRaphaelColor,u=b.hasTouch?
J:C,J=b.preDefStr,a=J.hiddenStr,O=J.setRolloverAttrStr,q=J.setRolloutAttrStr,J=Math,M=J.sqrt,U=J.max,N=J.abs,E=b.schedular;Q.register("component",["dataset","MSSpline",{type:"spline",configure:function(){var a=Q.get("component",["dataset","line"]),b=Q.get("component",["dataset","MSSplineArea"]);a.prototype.configure.call(this);b.prototype._calculateMaxMin.call(this)},getSplinePath:function(a,b,m){var n=function(a,c,b,d){c=(d-c)/M((b-a)*(b-a)+(d-c)*(d-c));c=N(.5*c);return a*c+b*(1-c)},q=function(a,
c,b,d){var e=a.length,f=a[e-1],g=f.length,h=f[0],f=f[g-2];3>g||("R"!==h&&"C"!==h||3!==g||(a[e-1][0]="L"),c&&a.push(["L",f,d,b,d,"Z"]))},g=this.chart,l=/area/ig.test(g.defaultDatasetType);b=b.getAxisPosition(b.getAxisBase());var g=g.config.minimizetendency,B=[null],e=[],u=[],p,v,K,t,E,A,C,z,H,w,F,J,h,d,f,c,D;c=0;for(D=a.length;c<D;c+=1)if(w=a[c],t=a[c-1]||{},E=a[c+1]||{},A=w.x,K=w.y,p=t.x,t=t.y,C=E.x,E=E.y,z=w.lastYPos,H=w.lastXPos,J=e.length,w=u.length,g)if(null!==z)if(v=d,c===a.length-1){z=B[c-h-
1];w=C=(A+p)/2;J=(w-p)*z+t;if(t>K&&J<K||t<K&&J>K)J=K,w=(J-t)/z+p;d.push(w,J,C,(K+t)/2,A,K);e.push(d);u.push(d);l&&q(e,!0,f,b);l&&q(u,!1)}else{z=B[c-h-1];if(t>K&&E>=K||t<K&&E<=K)if(F=0,C=n(p,t,A,K),E=K,1!==c-h){w=C;J=(w-p)*z+t;if(t>K&&J<K||t<K&&J>K)J=K,w=(J-t)/z+p;d.push(w,J,C,E,A,K)}else d.push((A+p)/2,(K+t)/2,C,E,A,K);else if(t===K)F=0,d.push(p,t,A,K,A,K);else if(t>K&&K>E||t<K&&K<E){F=(E-t)/(C-p);C=n(p,t,A,K);E=(C-A)*F+K;if(t>K&&E>t||t<K&&E<t)E=t,C=(E-K)/F+A;if(1!==c-h){w=C;J=(w-p)*z+t;if(t>K&&J<
K||t<K&&J>K)J=K,w=(J-t)/z+p;d.push(w,J,C,E,A,K)}else d.push((A+p)/2,(K+t)/2,C,E,A,K)}B.push(F)}else null===z&&0!==c?(v||(v=[]),"C"===v[0]&&(e.push(d),u.push(d),l&&q(e,!0,f,b),l&&q(u,!1)),e.push(["M",A,K]),u.push(["M",A,K]),f=A,d=["C"],h=c,B=[null]):(e.push(["M",A,K]),u.push(["M",A,K]),f=A,d=["C"],h=c);else null!==z?2<=J?("M"===e[J-1][0]&&e.push(["R"]),"M"===u[w-1][0]&&u.push(["R"]),J=e.length,w=u.length,v=e[J-1],p=v.length,e[J-1].push(A),e[J-1].push(K),u[w-1].push(A),u[w-1].push(K),c===m-1&&"R"===
v[0]&&(q(e,!0,f,b),q(u,!1))):(e.push(["M",H,z]),e.push(["R",A,K]),u.push(["M",H,z]),u.push(["R",A,K]),f=H):null===z&&2<=J&&(v=e[J-1],"R"===v[0]&&(q(e,!0,f,b),q(u,!1)),e.push(["M",A,K]),u.push(["M",A,K]),f=A);v=e[e.length-1];l&&v&&(p=v.length,"Z"===v[p-1]||"R"!==v[0]&&"C"!==v[0]||(q(e,!0,f,b),q(u,!1)));l||(e=g?e:u,2<=e.length&&q(e,!1));return{closedPath:e,openPath:u}},draw:function(){var r=this,k=r.JSONData,m=[],n=[],C=r.chart,n=C.getJobList(),g=C.components,l=g.canvas.config,B=r.config,e=C.config,
J=r.index||r.positionIndex,p=e.categories,N=g.paper,K=g.xAxis[0],t=r.yAxis,M,P,S=C.graphics,z=S.datalabelsGroup,R=b.parseUnsafeString,w=b.getValidValue,F,X,h,d,f,c,D=r.components.data,G,g=B.linethickness,aa=r.graphics.container,Q=e.connectnulldata,e=e.showtooltip,Ia=S.datasetGroup,sa,S=B.shadow,wa=r.graphics.dataLabelContainer,ca={},ma,qa,ca=C.get("config","animationObj"),C=ca.duration,va=ca.animType,ha=r.components.removeDataArr||[],ra=ha.length,ka=r.components.pool||[],na=function(){!1!==r.visible||
!1!==r._conatinerHidden&&void 0!==r._conatinerHidden||(aa.lineGroup.hide(),aa.lineShadowGroup.hide(),aa.anchorShadowGroup.hide(),aa.anchorGroup.hide(),wa&&wa.hide())},da=function(){Ia.lineConnector.attr({"clip-rect":null});Ia.lineConnector.node&&Ia.lineConnector.node.removeAttribute("clip-path");!1!==r.visible&&(aa.lineShadowGroup.show(),aa.anchorShadowGroup.show(),aa.anchorGroup.show(),wa&&wa.show())},oa=r.config.animFlag=r.config.animFlag||(r.config.animFlag=!0),Y=l.clip["clip-canvas"].slice(0),
l=l.clip["clip-canvas-init"].slice(0),za=null,fa,Aa=!1,ua=B.lineDashStyle,ia={color:B.linecolor,alpha:B.alpha},xa,ja,ya,W=ca.dummyObj,Ma=ca.animObj,ea=0,ca=r.graphics.SplineElement,ga=r.visible;B.imagesLoaded=0;Ia.lineConnector=Ia.lineConnector||N.group("line-connector",Ia);aa||(aa=r.graphics.container={lineShadowGroup:N.group("connector-shadow",Ia.lineConnector),anchorShadowGroup:N.group("anchor-shadow",Ia.lineConnector),lineGroup:N.group("spline",Ia.lineConnector),anchorGroup:N.group("anchors",
Ia.lineConnector)},ga||(aa.lineShadowGroup.hide(),aa.anchorShadowGroup.hide(),aa.lineGroup.hide(),aa.anchorGroup.hide()));D||(D=r.components.data=[]);wa||(wa=r.graphics.dataLabelContainer=r.graphics.dataLabelContainer||N.group("datalabel",z),ga||wa.hide());ga&&(aa.lineShadowGroup.show(),aa.anchorShadowGroup.show(),aa.lineGroup.show(),aa.anchorGroup.show(),wa.show());ja=K.getCategoryLen();for(xa=0;xa<ja;xa++)if(z=D[xa])qa=z.config,d=qa.setValue,h=qa.setLink,f=qa.setLevelTooltext,ca=qa.anchorProps,
ma=ca.symbol,G=ca.shadow,c=qa.displayValue,z||(z=D[xa]={graphics:{}}),X=z.graphics.element,ya=z.graphics.image,P=z.graphics.label,M=z.graphics.hotElement,null===d?(X&&X.hide(),P&&P.hide(),M&&M.hide(),ya&&ya.hide(),Q||(za=null)):(M=K.getAxisPosition(xa),P=t.getAxisPosition(d),sa=qa.hoverEffects,ca.isAnchorHoverRadius=sa.anchorRadius,!1===ga&&C&&(P=t.getPixel(t.getAxisBase())),w(R(H(p[xa].tooltext,p[xa].label))),F=e?qa.toolText+(f?"":qa.toolTipValue):"",qa.finalTooltext=F,f=qa.eventArgs||(qa.eventArgs=
{}),f.index=xa,f.link=h,f.value=d,f.displayValue=c,f.categoryLabel=K.getLabel(xa).label,f.toolText=F,f.id=B.userID,f.datasetIndex=J||0,f.datasetName=k.seriesname,f.visible=ga,ca.imageUrl?(qa.anchorImageLoaded=!1,X=new v,X.onload=r._onAnchorImageLoad(r,xa,f,M,P),X.onerror=r._onErrorSetter(r,xa),X.src=ca.imageUrl,ea++):(ya&&ya.hide(),h=[ma[1]||2,M,P,ca.radius,ca.startAngle,0],X||(ka.element&&ka.element.length?X=z.graphics.element=ka.element.shift():(X=z.graphics.element=N.polypath(aa.anchorGroup),X.attr({polypath:h}))),
X.show().animateWith(W,Ma,{polypath:h},C,va,oa&&na),X.attr({fill:A({color:ca.bgColor,alpha:ca.bgAlpha}),stroke:A({color:ca.borderColor,alpha:ca.borderAlpha}),"stroke-width":ca.borderThickness,visibility:ca.radius?ga:a}).shadow(G,aa.anchorShadowGroup).data("eventArgs",f),oa=!1,sa.enabled&&(h={polypath:[sa.anchorSides||2,M,P,sa.anchorRadius,sa.startAngle,sa.dip],fill:A({color:sa.anchorColor,alpha:sa.anchorBgAlpha}),stroke:A({color:sa.anchorBorderColor,alpha:sa.anchorBorderAlpha}),"stroke-width":sa.anchorBorderThickness},
G={polypath:[ca.sides,M,P,ca.radius,ca.startAngle,0],fill:A({color:ca.bgColor,alpha:ca.bgAlpha}),stroke:A({color:ca.borderColor,alpha:ca.borderAlpha}),"stroke-width":ca.borderThickness},X&&X.data("anchorRadius",ca.radius).data("anchorHoverRadius",sa.anchorRadius).data("hoverEnabled",sa.enabled).data(O,h).data(q,G)),qa.trackerConfig||(qa.trackerConfig={}),qa.trackerConfig.trackerRadius=U(ca.radius,sa&&sa.anchorRadius||0,u)+(ca.borderThickness||0)/2),m.push({x:M,y:P,lastXPos:fa,lastYPos:za}),fa=M,za=
P,z._xPos=M,z._yPos=P,!ca.imageUrl&&this.drawLabel(xa));B.noOfImages=B.totalImages=ea;0===ea&&n.labelDrawID.push(E.addJob(function(){r.drawLabel()},b.priorityList.label));n=r.getSplinePath(m,t).closedPath;ca=r.graphics.SplineElement;2<=n.length?(ca||(ca=r.graphics.SplineElement=N.path(n,aa.lineGroup),Aa=!0),ca.show().animateWith(W,Ma,{path:n},C,va,oa&&na),ca.attr({"stroke-dasharray":ua,"stroke-width":g,stroke:A(ia),"stroke-linecap":"round"}).shadow(S,aa.lineShadowGroup),oa=!1):ca&&ca.hide();C&&ga&&
Aa&&(aa.anchorGroup.hide(),aa.lineShadowGroup.hide(),aa.anchorShadowGroup.hide(),wa.hide(),Ia.lineConnector.attr({"clip-rect":l}).animateWith(W,Ma,{"clip-rect":Y},C,va,da));r.drawn=!0;for(xa=0;xa<ra;xa++)r._removeDataVisuals(ha.shift())}},"Line"])}]);Q.register("module",["private","modules.renderer.js-dataset-bubble",function(){var b=this.hcLib,v=b.BLANKSTRING,J=b.TOUCH_THRESHOLD_PIXELS,C=b.CLICK_THRESHOLD_PIXELS,H=b.pluck,A=b.pluckNumber,u=b.toRaphaelColor,a=b.graphics.convertColor,O=b.getFirstAlpha,
q=b.hasTouch?J:C,M=b.getValidValue,J=b.preDefStr,U=J.visibleStr,N=J.setRolloverAttrStr,E=J.setRolloutAttrStr,r=Math,k=r.round,m=r.min,n=r.max,L=r.sqrt,g=b.getFirstColor,l=b.graphics.getLightColor,B=b.schedular;Q.register("component",["dataset","Bubble",{type:"bubble",configure:function(){var e=this.chart,k=e.config,p=e.components,e=e.jsonData.chart,r=this.JSONData,q=this.config,t=r.data||[],B,v=k.zMax||-Infinity,E,z,C,w;B=p.colorManager;E=this.index;var p=p.numberFormatter,F,L=b.parseUnsafeString,
h=H(L(e.tooltipsepchar),", "),d,f,c,D,G,J,N=-Infinity,U=Infinity,Q=-Infinity,wa=Infinity,ca=-Infinity,ma=Infinity,qa,va=b.graphics.getPointColor;q.includeInLegend=A(r.includeinlegend,1);q.seriesname=L(r.seriesname);q.anchorBgColor=H(r.color,r.plotfillcolor,e.plotfillcolor,B.getPlotColor(E));q.showPlotBorder=A(r.showplotborder,e.showplotborder,1);q.anchorBorderThickness=q.showPlotBorder?A(r.plotborderthickness,e.plotborderthickness,1):0;q.anchorBorderColor=g(H(r.plotbordercolor,e.plotbordercolor,"666666"));
q.plotFillAlpha=H(r.plotfillalpha,r.bubblefillalpha,e.plotfillalpha,"100");q.plotBorderAlpha=H(r.plotborderalpha,e.plotborderalpha,"95");q.negativeColor=H(e.negativecolor,"FF0000");q.is3d=0!==A(e.use3dlighting,r.is3d,e.is3d);q.bubbleScale=A(e.bubblescale,1);q.minBubbleRadius=A(e.minbubbleradius);q.clipBubbles=A(e.clipbubbles,1);q.showRegressionLine=A(r.showregressionline,e.showregressionline,0);q.enableAnimation=B=A(e.animation,e.defaultanimation,1);q.animation=B?{duration:1E3*A(e.animationduration,
1)}:!1;q.showTooltip=A(e.showtooltip,1);q.transposeAnimation=A(e.transposeanimation,B);q.transposeAnimDuration=1E3*A(e.transposeanimduration,.2);q.seriesNameInTooltip=A(e.seriesnameintooltip,1);q.rotateValues=A(e.rotatevalues)?270:0;q.showHoverEffect=A(e.plothovereffect,e.showhovereffect,void 0);q.showValues=A(r.showvalues,e.showvalues,0);C=this.components.data=this.components.data||(this.components.data=[]);B=t.length;q.showRegressionLine&&(this.events={hide:this.hideRLine,show:this.showRLine},F=
{sumX:0,sumY:0,sumXY:0,sumXsqure:0,sumYsqure:0,xValues:[],yValues:[],isRegression:!0},q.showYOnX=A(r.showyonx,e.showyonx,1),q.regressionLineColor=g(H(r.regressionlinecolor,e.regressionlinecolor,q.anchorBgColor)),q.regressionLineThickness=A(r.regressionlinethickness,e.regressionlinethickness,1),q.regressionLineAlpha=O(A(r.regressionlinealpha,e.regressionlinealpha,100)),q.regLineColor=a(q.regressionLineColor,q.regressionLineAlpha));q.fillColor=q.is3d?u(va(q.anchorBgColor,q.plotFillAlpha)):u({color:q.anchorBgColor,
alpha:q.plotFillAlpha});q.strokeColor=u({color:q.anchorBorderColor,alpha:q.plotFillAlpha});for(E=0;E<B;E++)if(f=t[E],z=C[E]=C[E]||(C[E]={}),!z.graphics&&(z.graphics={}),c=z.config={},c.x=p.getCleanValue(f.x),c.y=p.getCleanValue(f.y),c.z=p.getCleanValue(f.z,!0),c.showValue=A(f.showvalue,q.showValues),c.anchorProps={},J=c.label=c.x,c.setLink=M(f.link),q.max=ca=n(ca,c.z||0),q.min=ma=m(ma,c.z||0),c.is3d=0!==A(f.is3d,q.is3d),N=n(N,c.x),U=m(U,c.x),Q=n(Q,c.y),wa=m(wa,c.y),z=c.color=g(H(f.color,0>f.z?q.negativeColor:
q.anchorBgColor)),w=c.alpha=H(f.alpha,q.plotFillAlpha),c.colorObj=qa=c.is3d?va(z,w):{color:z,alpha:w},c.setDisplayValue=D=L(H(f.displayvalue,f.name,f.label)),d=c.formatedVal=null===c.y?c.y:p.dataLabels(c.y),c.displayValue=H(D,c.formatedVal),c.setTooltext=b.getValidValue(L(H(f.tooltext,r.plottooltext,e.plottooltext))),v<c.z&&(v=c.z),q.showTooltip?null===d?D=!1:void 0!==c.setTooltext?(D=[4,5,6,7,8,9,10,11,12,13,118],d={yDataValue:d,xDataValue:p.xAxis(J),yaxisName:L(e.yaxisname),xaxisName:L(e.xaxisname),
zDataValue:p.dataLabels(c.z)},D=b.parseTooltext(c.setTooltext,D,d,f,e,r)):(q.seriesNameInTooltip&&(G=b.getFirstValue(r&&r.seriesname)),D=G?G+h:"",D+=J?p.xAxis(J)+h:"",D+=d,D+=f.z?h+p.dataLabels(f.z):""):D=!1,c.toolText=D,this.pointValueWatcher(c.x,c.y,q.showRegressionLine&&F),d=c.hoverEffects={},0!==q.showHoverEffect){J=d.enabled=void 0!==H(f.hoveralpha,r.hoveralpha,e.bubblehoveralpha,f.hovercolor,r.hovercolor,r.bubblehovercolor,e.bubblehovercolor,f.borderhovercolor,r.borderhovercolor,e.plotborderhovercolor,
f.borderhoveralpha,r.borderhoveralpha,e.plotborderhoveralpha,f.hoverscale,r.bubblehoverscale,e.bubblehoverscale,f.borderhovercolor,r.borderhovercolor,e.plotborderhovercolor,f.borderhoverthickness,r.borderhoverthickness,e.plotborderhoverthickness,f.negativehovercolor,r.negativeColor,e.negativecolor,f.is3donhover,e.plotfillhovercolor,r.is3donhover,e.is3donhover,void 0);d.negativeColor=H(f.negativehovercolor,r.negativehovercolor,e.negativehovercolor,q.negativeColor);d.is3d=A(f.is3donhover,r.is3donhover,
e.is3donhover,c.is3d);d.color=H(f.hovercolor,r.hovercolor,r.bubblehovercolor,e.plotfillhovercolor,e.bubblehovercolor,c.is3d?qa.FCcolor.color:z);d.color=d.negativeColor&&0>f.z?d.negativeColor:d.color;d.scale=H(f.hoverscale,r.hoverscale,r.bubblehoverscale,e.bubblehoverscale,1);d.color=g(d.color);d.alpha=H(f.hoveralpha,r.hoveralpha,e.plotfillhoveralpha,e.bubblehoveralpha,w);d.borderColor=H(f.borderhovercolor,r.borderhovercolor,e.plotborderhovercolor,q.anchorBorderColor);d.borderAlpha=H(f.borderhoveralpha,
r.borderhoveralpha,e.plotborderhoveralpha,d.alpha,q.plotBorderAlpha);d.borderThickness=A(f.borderhoverthickness,r.borderhoverthickness,e.plotborderhoverthickness,q.anchorBorderThickness);d.color=d.is3d?va(d.color,d.alpha):{FCcolor:{color:d.color,alpha:d.alpha}};f=J&&q.showHoverEffect?0:q.showHoverEffect;if(1===f){c=(f="string"==typeof d.color)?d.color.split(/\s{0,},\s{0,}/):d.color.FCcolor.color.split(/\s{0,},\s{0,}/);w=c.length;for(z=0;z<w;z++)c[z]=l(c[z],70);f?d.color=c.join(","):d.color.FCcolor.color=
c.join(",")}!1===J&&(d.enabled=!!q.showHoverEffect)}else d.enabled=!1;q.xMax=N;q.xMin=U;q.yMin=wa;q.yMax=Q;k.zMax=v;q.regressionData=q.showRegressionLine&&this.getRegressionLineSeries(F,q.showYOnX,B);this.visible=1===A(r.visible,!Number(r.initiallyhidden),1);this._addLegend()},init:function(a){this.yAxis=this.chart.components.yAxis[0];this.components={};this.graphics={};this.JSONData=a;this.configure()},_getHoveredPlot:function(a,b){var g=this.dataTree.getNeighbour({x:a,y:b},!0,"circle");if(g)return{pointIndex:g.index||
g.i,hovered:!0,pointObj:g.data}},_addLegend:function(){var a=this.config;this.legendItemId=this.chart.components.legend.addItems(this,this.legendInteractivity,{enabled:a.includeInLegend,fillColor:a.fillColor,strokeColor:a.strokeColor,rawFillColor:a.anchorBgColor,rawStrokeColor:a.anchorBorderColor,anchorSide:1,type:this.type,label:a.seriesname})},draw:function(){var a=this,g=a.JSONData,l=r.sqrt,v=a.chart,K=v.getJobList(),t=v.components,C=t.canvas.config,L=t.paper,H=v.config,z=v.graphics,H=m(H.canvasHeight,
H.canvasWidth)/8,J=z.datasetGroup,w,F,M=a.yAxis,t=t.xAxis[0],h=a.config;w=h._regressionAttr;var d,f,c,D;d=C.clip["clip-canvas"].slice(0);var G=C.clip["clip-canvas-init"].slice(0),O,C=a.components.data,U=a.components.removeDataArr||[],Q=U.length,sa=a.graphics.container,wa=a.graphics.dataLabelContainer,ca=function(){!1===a.visible&&(sa.bubbleGroup.hide(),sa.regLineGroup.hide(),wa.hide(),a._containerHidden=!0)};O=function(){a.visible&&(wa.attr({"clip-rect":null}),sa.regLineGroup.attr({"clip-rect":null}))};
var ma=h.minBubbleRadius,qa=h.bubbleScale,va=v.getDataLimits().zMax||0,va=l(va);D=h.clipBubbles;var ha=v.get("config","animationObj"),v=ha.duration;f=a.graphics.regressionLineElement;c=h.showRegressionLine;var ra=a.visible,ka=h.showTooltip,na=z.datalabelsGroup,da,oa,Y;da={};var za,fa,z=!0,Aa=ha.dummyObj,ua=ha.animObj,ha=ha.animType,ia=a.components.pool||{},xa=h.anchorBorderThickness;da=a.drawn;var ja=[];sa||(sa=a.graphics.container={bubbleGroup:L.group("bubble",J),regLineGroup:L.group("regLine",J)},
ra||(sa.bubbleGroup.hide(),sa.regLineGroup.hide()));wa||(wa=a.graphics.dataLabelContainer=L.group("datalabel",na),wa.attr({"clip-rect":G}).animateWith(Aa,ua,{"clip-rect":d},v,ha,O),ra||wa.hide());D?da?sa.bubbleGroup.animateWith(Aa,ua,{"clip-rect":d},v,ha):sa.bubbleGroup.attr({"clip-rect":d}):(sa.bubbleGroup.attr({"clip-rect":null}),sa.bubbleGroup.node&&sa.bubbleGroup.node.removeAttribute&&sa.bubbleGroup.node.removeAttribute("clip-path"));ra&&(sa.bubbleGroup.show(),sa.regLineGroup.show(),wa.show());
c?(da=h.regressionData[0],J=h.regressionData[1],w||(h._regressionAttr=w={}),w.stroke=u({color:h.regressionLineColor,alpha:h.regressionLineAlpha}),w["stroke-width"]=h.regressionLineThickness,w["stroke-linecap"]="round",w["stroke-linejoin"]=2<h.regressionLineThickness?"round":"miter",w.path="M "+t.getAxisPosition(da.x)+","+M.getAxisPosition(da.y)+" L "+t.getAxisPosition(J.x)+","+M.getAxisPosition(J.y),f?f.animateWith(Aa,ua,w,v,ha):(f=a.graphics.regressionLineElement=L.path(w,sa.regLineGroup),sa.regLineGroup.attr({"clip-rect":G}),
sa.regLineGroup.animateWith(Aa,ua,{"clip-rect":d},v,ha,O))):f&&f.hide();J=0;for(G=C.length;J<G;J+=1)d=C[J],O=d.config,D=A(O.x,J),na=O.y,f=O.z,w=d.graphics.element,oa=O.setLink,Y=O.displayValue,c=O.toolText,O.finalTooltext=O.toolText,da=O.hoverEffects,w=d.graphics.element,F=d.graphics.hotElement,fa=d.graphics.label,null!==na?(F=O.eventArgs||(O.eventArgs={}),F.index=J,F.link=oa,F.value=na,F.y=na,F.x=D,F.z=f,F.displayValue=Y,F.toolText=c,F.id=a.userID,F.datasetIndex=a.index||0,F.datasetName=g.seriesname,
F.visible=ra,c=M.getAxisPosition(na),D=t.getAxisPosition(D),f=l(f),f=k(f*H/va)*qa||0,ja.push({x:D,y:c,r:f}),ma&&(f=n(f,ma)),na=O.setRolloutAttr={fill:u(O.colorObj),"stroke-width":h.anchorBorderThickness,stroke:u({color:h.anchorBorderColor,alpha:h.plotBorderAlpha}),r:f},!1!==da.enabled&&(za=O.setRolloverAttr={fill:u(da.color),"stroke-width":da.borderThickness,stroke:u({color:da.borderColor,alpha:da.borderAlpha}),r:f*da.scale}),a.visible||(f=0),w||(ia.element&&ia.element.length?w=d.graphics.element=
ia.element.shift():(w=d.graphics.element=L.circle(sa.bubbleGroup),w.attr({cx:D,cy:c,r:v?0:f}))),w.show().animateWith(Aa,ua,{cx:D,cy:c,r:f||0},v,ha,z&&ca).attr({fill:u(O.colorObj),ishot:!ka,"stroke-width":h.anchorBorderThickness,stroke:na.stroke,visibility:ra}),z=!1,O.trackerConfig||(O.trackerConfig={}),O.trackerConfig.trackerRadius=n(f+(xa||0),q),w.data("hoverEnabled",da.enabled).data(N,za).data(E,na),d._xPos=D,d._yPos=c,w&&w.data("eventArgs",O&&O.eventArgs)):(w&&w.hide(),F&&F.hide(),fa&&fa.hide());
this.dataTree=(new b.KdTree).buildKdTree(ja);a.drawn?a.drawLabel():K.labelDrawID.push(B.addJob(function(){a.drawLabel()},b.priorityList.label));a.drawn=!0;for(J=0;J<Q;J++)a._removeDataVisuals(U.shift())},manageSpace:function(){var a=this.config||(this.config={}),b=this.chart,g=b.config,l=b.config.rotatevalues,n=b.components.xAxis[0],t=n.config.isReverse,r=b.config.dataLabelStyle,q=(this.components||{}).data||[],B=q.length,u=a.leftMostData||q[0],v=a.rightMostData||q[q.length-1],w=m(g.canvasHeight,
g.canvasWidth)/8,F,E=1,h=1,d,f;F=g.zMax;var c,D=a.bubbleScale,G,A,C,a=n.config.axisRange,g=a.max,a=n.getPixel(a.min),g=n.getPixel(g),H=n.getValue(0),J={};f={};var J=b.linkedItems.smartLabel,N={paddingLeft:0,paddingRight:0};f=0;F=L(F);w/=F;for(G=0;G<B;G++)d=q[G].config,F=u.config,f=v.config,c=L(d.z),c=k(c*w)*D||0,c=n.getValue(c)-H,d=d.x-c/2,1===E&&(c=L(F.z),c=k(c*w)*D||0,c=n.getValue(c)-H,A=F.x-c/2),1===h&&(c=L(f.z),c=k(c*w)*D||0,c=n.getValue(c)-H,C=f.x-c/2),h=E=0,A>d&&(u=q[G],E=1),C<d&&(v=q[G],h=
1);t&&(u=v=u,a=g=a);J.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);J.setStyle(r);u&&u.config.showValue&&(b=u.config,t=b.displayValue,f=J.getOriSize(t),f=l?f.height:f.width,b=n.getPixel(b.x)-.5*f,a>b&&(N.paddingLeft=a-b));v&&v.config.showValue&&(b=v.config,t=b.displayValue,J=J.getOriSize(t),f=l?J.height:J.width,l=n.getPixel(b.x)+.5*f,g<l&&(N.paddingRight=l-g));return N},show:function(){var a=this.chart,b=this.graphics.container,g=this.graphics.dataLabelContainer;this.visible=!0;b.bubbleGroup.show();
b.regLineGroup&&b.regLineGroup.show();g.show();a._setAxisLimits();a._drawAxis();a._drawDataset()},hide:function(){var a=this.chart;this.visible=!1;a._setAxisLimits();a._drawAxis();a._drawDataset()},getDataLimits:function(){var a=this.config,b=a.yMax,g=a.yMin,l=this.chart.config.transposeAxis,k=a.xMin,m=a.xMax,n=a.max,a=a.min;!1===this.visible&&l&&(b=-Infinity,k=g=Infinity,m=-Infinity);return{max:b,min:g,xMin:k,xMax:m,zMax:n,zMin:a}},drawLabel:function(){var a=this.chart,b=a.config.dataLabelStyle,
g=this.components.data,l=a.components.paper,k;k="";var m=this.config,n=a.get("config","animationObj"),a=n.duration,r=n.animType,q=n.animObj,n=n.dummyObj,m=m.rotateValues,B,u=this.graphics.dataLabelContainer,w,F,E,h,d,f,c,D,G=this.components.pool||{};f=0;for(c=g.length;f<c;f++)if(k=g[f])w=k.config,B=k.graphics,E=k._yPos,F=k._xPos,k=w.displayValue,d=B.label,D=w.showValue,void 0!==k&&null!==k&&k!==v&&null!==w.z&&D?(k={text:k,fill:b.color,"text-bound":[b.backgroundColor,b.borderColor,b.borderThickness,
b.borderPadding,b.borderRadius,b.borderDash],"line-height":b.lineHeight,visibility:U},d||(G.label&&G.label.length?d=B.label=G.label.shift():(k.x=F,k.y=E,k.transform=l.getSuggestiveRotation(m,F,E),d=B.label=l.text(k,u),h=!0)),h||(d.show().animateWith(n,q,{x:F,y:E,transform:l.getSuggestiveRotation(m,F,E)},a,r),d.attr(k))):d&&d.hide()},_hoverFunc:function(a,b,g){a=a.graphics.element;b="DataPlotRollOut"===b?a.data(E):a.data(N);g&&a.attr(b)}},"scatter"])}]);Q.register("module",["private","modules.renderer.js-dataset-pie2d",
function(){var b=this.hcLib,v=b.parseConfiguration,J="VML"===b.Raphael.type,C=b.getPosition,H=b.COMMASPACE,A=b.ZEROSTRING,u=b.hasSVG,a=b.pluck,O=b.parsexAxisStyles,q=b.pluckNumber,M=b.toRaphaelColor,U=b.graphics.convertColor,N=b.parseUnsafeString,E=b.graphics.getDarkColor,r=b.ONESTRING,k=b.getFirstAlpha,m=b.HUNDREDSTRING,n=b.getDashStyle,L=b.getValidValue,g=b.parseTooltext,l=b.preDefStr.visibleStr,B=8===this.window.document.documentMode?l:"",l=Math,e=l.sin,V=l.cos,p=l.max,T=l.abs,K=l.PI,t=2*K,Z=b.getFirstColor,
P=b.graphics.getLightColor,S=b.schedular;Q.register("component",["dataset","Pie2D",{type:"pie2d",configure:function(){var e=this.chart,g=e.config,l=g.dataLabelStyle,k=this.config,m=this.JSONData,h=e.jsonData.chart,d=b.parseUnsafeString,f=e.is3D,c,p;this.__setDefaultConfig();v({},this.config,e&&e.config);p=k.enableAnimation=q(h.animation,h.defaultanimation,1);k.animation=p?{duration:1E3*q(h.animationduration,h.moveduration,1)}:!1;k.transposeAnim=p||q(k.transposeanimation,1)?{duration:1E3*q(h.transposeanimduration,
.2)}:!1;k.showPlotBorder=q(h.showplotborder,1);k.showHoverEffect=q(h.plothovereffect,h.showhovereffect,void 0);k.showTooltip=q(h.showtooltip,1);k.toolText=L(d(a(m.plottooltext,h.plottooltext)));p=k.enableMultiSlicing=q(h.enablemultislicing,1);c=k.use3DLighting=q(h.use3dlighting,1);k.radius3D=c?q(h.radius3d,90):100;k.showZeroPies=q(h.showzeropies,1);k.showPercentInToolTip=q(h.showpercentintooltip,1);k.showLabels=q(h.showlabels,1);k.showValues=q(m.showvalues,h.showvalues,1);k.showPercentValues=q(h.showpercentvalues,
h.showpercentagevalues,0);c=k.toolTipSepChar=a(h.tooltipsepchar,h.hovercapsepchar,H);k.labelSepChar=a(h.labelsepchar,c);k.pieBorderColor=a(h.plotbordercolor,h.piebordercolor);k.pieBorderAlpha=q(h.plotborderalpha,h.pieborderalpha);k.pieBorderThickness=k.showPlotBorder?q(h.plotborderthickness,h.pieborderthickness,g.plotborderthickness,1):0;k.plotDashLen=q(h.plotborderdashlen,5);k.plotDashGap=q(h.plotborderdashgap,4);k.showValueInLegend=q(h.showvalueinlegend,0);k.showLabelInLegend=q(h.showlabelinlegend,
1);k.valueBeforeLabelInLegend=q(h.valuebeforelabelinlegend,0);k.showValueAsPercentInLegend=q(h.showvalueaspercentinlegend,1);k.legendSepChar=a(h.legendsepchar,", ");k.showvalues=q(h.showvalues,1);k.chartPosition=C(e.linkedItems.container,void 0,e);k.timerThreshold=30;k.centerLabelConfig={label:d(a(h.defaultcenterlabel,"")),font:a(h.centerlabelfont,l.fontFamily),fontSize:q(h.centerlabelfontsize,parseInt(l.fontSize,10)),color:Z(a(h.centerlabelcolor,h.valuefontcolor,g.style.inCanvasStyle.color,"555555")),
alpha:q(h.centerlabelalpha,100),bold:q(h.centerlabelbold,l.fontWeight),italic:q(h.centerlabelitalic,l.style),bgColor:a(h.centerlabelbgcolor,""),bgAlpha:q(h.centerlabelbgalpha,100),borderColor:a(h.centerlabelbordercolor,l.borderColor),borderAlpha:q(h.centerlabelborderalpha,100),borderThickness:q(h.centerlabelborderthickness,l.borderThickness),borderRadius:q(h.centerlabelborderradius,l.borderRadius),textPadding:q(h.centerlabeltextpadding,l.borderPadding),padding:q(h.centerlabelpadding,2),bgOval:q(h.centerlabelbgoval,
0),shadow:q(h.showcenterlabelshadow,0),hoverColor:h.centerlabelhovercolor&&Z(a(h.centerlabelhovercolor)),hoverAlpha:q(h.centerlabelhoveralpha),toolText:d(a(h.centerlabeltooltext,""))};k.showLegend=q(h.showlegend,0);k.reverselegend=!q(h.reverselegend,0);e.is3D=f;k.pieYScale=q(h.pieyscale,40);1>k.pieYScale&&(k.pieYScale=1);100<=k.pieYScale&&(k.pieYScale=80);k.pieYScale/=100;k.pieSliceDepth=q(h.pieslicedepth,15);1>k.pieSliceDepth&&(k.pieSliceDepth=1);k.managedPieSliceDepth=k.pieSliceDepth;k.enableMultiSlicing=
!!p;k.startAngle=q(h.startingangle,0)*-(K/180);k.usePerPointLabelColor=h.colorlabelsfromplot==r;k.reversePlotOrder=q(h.reverseplotorder,0);k.animateClockWise=q(h.animateclockwise,k.reversePlotOrder);k.showShadow=q(h.showshadow,1);k.singletonCase=1===m.data.length;k.valueTotal=0;this._setConfigure();this._addLegend()},_parseDisplayProperties:function(b,e){var l,k,m="",h,d,f,c,p,n,t;l=this.chart;var r=l.components.numberFormatter,B=l.jsonData.chart;c=this.config;d=q(e.y,r.getCleanValue(b.value,!0));
var u=c.valueTotal;f=c.showLabels;var v=N(a(e.seriesName,b.label,b.name,""));n=c.showPercentValues;h=c.showPercentInToolTip;var E=c.labelSepChar,K=c.toolTipSepChar,A=c.showTooltip;l=L(N(a(b.tooltext,c.toolText)));k=e.pValue=r.percentValue(d/u*100);d=e.value=r.dataLabels(d)||"";f=1===q(b.showlabel,f)?v:"";c=1===(t=q(b.showvalue,c.showValues))?1===n?k:d:"";h=h?k:d;p=L(N(b.displayvalue));n=a(p,v+E+(n?k:d),"");c=void 0!==p&&t?p:""!==c&&""!==f?f+E+c:a(f,c);A&&(void 0!==l?m=g(l,[1,2,3,5,6,7,14,24,25],{formattedValue:d,
label:v,yaxisName:N(B.yaxisname),xaxisName:N(B.xaxisname),percentValue:k,sum:r.dataLabels(u),unformattedSum:u},b,B):(m=v,m=""!=m?m+K+h:h));e.displayValue=c;e.displayValueArgs=n;e.toolText=m;e.seriesName=v;e.categoryLabel=f},foldingFn:function(a){a=a.data("plotItem");return{ringpath:[a.center[0],a.center[1],a.radius,a.innerDiameter/2,a.angle,a.angle]}},_isStyled:function(a){if(this.chart.config.usedataplotcolorforlabels||a.labelbordercolor||a.labelbgcolor||a.labelborderthickness||a.labelborderalpha||
a.labelalpha||a.labelfont||a.labelfontsize||a.labelfontcolor||a.labelfontalpha||a.labelalpha||a.labelfontbold||a.labelfontitalic||a.labelborderpadding||a.labelborderradius||a.labelbgalpha||a.labelborderdashed||a.labelborderdashlen||a.labelborderdashgap)return!0},_setConfigure:function(b,e){var g,l,k,h,d,f,c,t,B,u,v,E,K,C,H,J,P,M;d=this.chart;var V=d.jsonData.chart,T=d.components;h=T.legend;var S=d.config,Q=this.config,da=this.JSONData;l=(u=(b||da).data)&&u.length;E=Q.showZeroPies;var da=Q.valueTotal||
0,oa=[],Y=q(V.plotborderdashed,0),za=this.components.data||(this.components.data=[]),fa=T.numberFormatter,T=T.colorManager,Aa=Q.labelInLeg,ua=Q.valInLeg,ia=Q.centerLabelConfig,xa=Q.pieBorderThickness,ja=Q.reversePlotOrder,ya=Q.radius3D,W=Q.enableMultiSlicing,Ma=Q.lastSlicedid||0,ea=q(V.plotBorderDashed,5),ga=q(V.plotborderdashgap,4),la=q(V.valuebeforelabelinlegend,0),Ca=q(V.showvalueaspercentinlegend,1);M=0;var Ha=a(V.legendsepchar,", ");d=d.get("config","animationObj");B=d.duration||0;f=d.dummyObj;
t=d.animObj;v=d.animType;S.dataLabelStyle=O({},{},V,S.dataLabelStyle,c);for(d=0;d<l;d+=1)c=u[d],k=fa.getCleanValue(c.value,!0),null===k||!E&&0===k?M+=1:(oa.push(c),da+=k);if(M&&za.length>l-M)for(h&&h.emptyItems(za.length-M),d=za.length-1;0<M;--d,--M)if(za[d]){c=za[d];l=c.config;k=c.graphics;for(g in k)h=k[g],h.animateWith(f,t,this.foldingFn.call(this,h),B,v,this.hideFn.call(this,k,g,this));l.y=null;c.legendItemId=void 0}0===da&&(oa=[]);Q.valueTotal=da;Q.dataLabelCounter=0;S.allPlotSliceEnabled=S.enableslicing;
for(d=(l=oa.length)-1;0<=d;--d){k=d;b?(M=oa[d],k=void 0!==e?e+d:za.length-l+d,c=za[k]):(c=za[d]||(za[d]={graphics:{},config:{}}),M=oa[d]);g=c&&c.config;g||(g=za[k].config={});c.graphics||(za[k].graphics={});g.y=k=fa.getCleanValue(M.value,!0);g.seriesName=f=N(a(M.label,M.name,""));c=a(M.color,T.getPlotColor(d));h=a(M.alpha,V.plotfillalpha,m);t=g.borderConfig=this._parseBorderConfig(c,h,M);B=t.setPlotBorderColor;t=t.setPlotBorderAlpha;u={opacity:p(h,t)/100};if(E=!!q(M.issliced,V.issliced,0))W||(-1!==
Ma&&(za[za.length-Ma-1].sliced=!1),Q.lastSlicedid=d),Q.preSliced=E;C=(v=q(M.dashed,Y))?n(a(M.dashlen,ea),a(M.dashgap,ga),xa):"none";this._parseDisplayProperties(M,g);v=Aa?f:"";ua&&(k=Ca?fa.legendPercentValue(k/da*100):fa.legendValue(k),v=la?k+(v&&Ha+v):(v&&v+Ha)+k);(k=g.displayValue)&&(Q.dataLabelCounter+=1);J=g.value;H=g.pValue;k={label:a((K=M.centerlabel||V.centerlabel)&&this.replaceMacros(K,["\\$value","\\$percentValue","\\$displayValue","\\$label"],[J,H,void 0===k?"":k,f]),""),font:ia.font,fontSize:q(M.centerlabelfontsize,
ia.fontSize),color:Z(a(M.centerlabelcolor,ia.color)),alpha:q(M.centerlabelalpha,ia.alpha),bold:q(M.centerlabelbold,ia.bold),italic:q(M.centerlabelitalic,ia.italic),bgColor:a(M.centerlabelbgcolor,ia.bgColor),bgAlpha:q(M.centerlabelbgalpha,ia.bgAlpha),borderColor:a(M.centerlabelbordercolor,ia.borderColor),borderAlpha:q(M.centerlabelborderalpha,ia.borderAlpha),borderThickness:ia.borderThickness,borderRadius:ia.borderRadius,textPadding:ia.textPadding,padding:ia.padding,bgOval:ia.bgOval,shadow:ia.shadow,
hoverColor:(P=a(M.centerlabelhovercolor,ia.hoverColor))&&Z(P),hoverAlpha:q(M.centerlabelhoveralpha,ia.hoverAlpha),toolText:a(M.centerlabeltooltext,"")};this._isStyled(M)?g.style=O(M,{},V,S.dataLabelStyle,c):g.style&&delete g.style;g.showInLegend=""!==v;g.isVisible=!0;g.name=v;g.shadow=u;g.setColor=c;g.color=this._getPointColor(c,h,ya);g._3dAlpha=h;g.borderColor=U(B,t);g.borderWidth=xa;g.link=L(M.link);g.sliced=E;g.dashStyle=C;(g.doNotSlice=a(M.enableslicing,S.enableslicing)!=r)||S.allPlotSliceEnabled!==
A||(S.allPlotSliceEnabled=r);this._parseHoverEffectOptions(d);g.centerLabelConfig=k;g.radius3D=ya}ja&&za&&za.reverse();Q.dataArr=oa;Q.enableRotation=1<za.length?q(V.enablerotation,1):0},_parseHoverEffectOptions:function(b){var e,g,l,k,h,d,f,c,m;d=this.chart.jsonData.chart;g=this.config;var p=this.components.data[b].config;f=this.JSONData;c=f.data[b];l=p.setColor;k=p._3dAlpha;b=g.radius3D;m=p.borderConfig;h=m.setPlotBorderAlpha;var n=m.setPlotBorderColor;m=g.setBorderWidth;g=q(p.hovereffect,g.showHoverEffect);
p=p.hoverEffects={enabled:g};void 0===g&&(g=p.enabled=void 0!==a(c.hovercolor,f.hovercolor,d.plotfillhovercolor,c.hoveralpha,f.hoveralpha,d.plotfillhoveralpha,c.borderhovercolor,f.borderhovercolor,d.plotborderhovercolor,c.borderhoveralpha,f.borderhoveralpha,d.plotborderhoveralpha,d.plotfillhoveralpha,c.borderhoverthickness,f.borderhoverthickness,d.plotborderhoverthickness,void 0));if(g){e=q(c.highlightonhover,f.highlight,d.highlight,1);(g=a(c.hovercolor,f.hovercolor,d.plotfillhovercolor))&&e&&(e=
0);g=a(g,l);l=a(c.hoveralpha,f.hoveralpha,d.plotfillhoveralpha,k);k=a(c.borderhovercolor,f.borderhovercolor,d.plotborderhovercolor,n);h=a(c.borderhoveralpha,f.borderhoveralpha,d.plotborderhoveralpha,d.plotfillhoveralpha,h);d=q(c.borderhoverthickness,f.borderhoverthickness,d.plotborderhoverthickness,m);g.replace(/,+?$/,"");if(1===e){c=(f="string"==typeof g)?g.split(/\s{0,},\s{0,}/):g.color.split(/\s{0,},\s{0,}/);m=c.length;for(e=0;e<m;e++)c[e]=P(c[e],70);f?g=c.join(","):g.color=c.join(",")}this._setHoverColor(p,
g,l,b);p.borderColor=U(k,h);p.borderWidth=d}else p.enabled=!1},_setHoverColor:function(a,b,e,g){a.color=this._getPointColor(b,e,g)},replaceMacros:function(a,b,e){for(var g=b.length||0,l;g--;)l=new RegExp(b[g],"gi"),a=a.replace(l,e[g]);return a},containsMacro:function(a,b){for(var e=b.length||0,g;e--;)if(g=new RegExp(b[e],"gi"),g=a.match(g))return!0;return!1},updateData:function(a,b){this.config.valueTotal-=this.components.data[b].config.y;this.__base__.updateData.apply(this,arguments)},_parsePiePlotOptions:function(){var a=
this.config;return{size:a.pieMinRadius,slicedOffset:a.slicingDistance}},_parseDataLabelOptions:function(){return{style:this.chart.config.dataLabelStyle}},_addLegend:function(){var a,b,e,g=this.chart.components.legend,l=this.components.data;for(a=0;a<l.length;a+=1)e=l[a],b=e.config,null!==b.y&&(e.legendItemId=g.addItems(this,this.legendInteractivity,{index:a,fillColor:M(b.setColor),strokeColor:M(b.borderColor),type:this.type,label:b.seriesName,enabled:q(b.includeInLegend,1),legendItemId:e.legendItemId}))},
_parseBorderConfig:function(b,e,g){var l=this.chart.jsonData.chart,k=a(g.bordercolor,this.config.pieBorderColor);g=a(g.borderalpha,l.plotborderalpha,l.pieborderalpha);k=a(k,P(b,25)).split(",")[0];g=l.showplotborder==A?A:a(g,e,"80");return{setPlotBorderColor:k,setPlotBorderAlpha:g}},_getPointColor:function(a,b,e){var g,l;a=Z(a);b=k(b);100>e&&u?(g=Math.floor(85*(100-.35*e))/100,g=E(a,g),l=Math.floor(50*(100+e))/100,a=P(a,l),b={color:a+","+g,alpha:b+","+b,ratio:e+","+(100-e),radialGradient:!0,gradientUnits:"userSpaceOnUse"}):
b={color:a+","+a,alpha:b+","+b,ratio:"0,100"};return b},hideElements:function(){var a=this.data&&this.data("plotItem").chart,b=0,e=this._&&this._.shadows||[];if(a&&a.components.dataset[0])for(this.hide();b<e.length;b+=1)e[b].hide()},hideFn:function(a,b){return function(){a[b].hide()}},singleFillColor:function(a){return M({color:Z(a.color),alpha:k(a.alpha)})},draw:function(){var a,g,l=this.chart,k=l.getJobList(),m=l.graphics,h=l.config,d=h.dataLabelStyle,f=l.graphics,c=this.config,p=c.showShadow,n=
l.components.paper,r=this.components,q=r.data,u=r.removeDataArr||[],v,E,K,A,C;v=h.style;var L=m.datasetGroup.trackTooltip(!0),H=this.graphics,N=this.pool;v=H.container;var P=this.visible,O=H.shadowContainer;E=m.datalabelsGroup;var Z=H.dataLabelContainer,U,Q,za,fa,Aa,ua,ia,xa,ja,ya=r.data||[],W=ya.length,r=h.canvasLeft+.5*h.canvasWidth,m=h.canvasTop+.5*h.canvasHeight,Ma=f.datasetGroup;A=h.alphaanimation;var ea=!1,f=l.get("config","animationObj"),ga=f.duration||0,la=f.dummyObj,Ca=f.animObj,Ha=f.animType,
f=function(){ea||(ea=!0,Z.show(),Ma.animateWith(la,Ca,{opacity:1},ga,Ha))},pa=function(){var a,c;if(g)for(a=0;a<W;a+=1)c=ya[a],c.graphics.element&&c.graphics.element.attr({fill:M(c.config.color)})};U=function(){var a=c.pieCenter||[],b={cx:a[0],cy:a[1],r:(c.piePlotOptions||[]).size,r2:.5*(c.innerSize||0)};return function(a){var c,d=!1;for(c in a)if(5<T(a[c]-b[c])){d=!0;break}return d}}();Q=function(){ea||pa()};var La=l._plotDragMove,Ja=l._plotDragStart,Fa=l._plotDragEnd,ta=l._plotRollOver,Ka=l._plotRollOut,
Ea=!!c.enableRotation,Da=c.piePlotOptions=this._parsePiePlotOptions(),h=h.textDirection,Ga=c.dataLabelOptions,Na=Da.slicedOffset,Ua,Da=Da.size,Pa=.5*(c.innerSize||0),Sa=(c.startAngle||0)%t,ab,Xa,Za,bb=Sa-t,eb=c.animateClockWise,Va,Ya;v?(Za=!0,ga&&(ab=Q),g=U({cx:r,cy:m,r:Da,r2:Pa})):(L.pie=n.group("pie",L),L.pieLabels=n.group("pie",L),v=H.container={lineShadowGroup:n.group("connector-shadow",L.pieLabels),anchorShadowGroup:n.group("anchor-shadow",L.pieLabels),pieGroup:H.pieContainer=n.group("pie",L.pie),
dataLabel:n.group("dataLabel",L.pie)},O=H.shadowContainer=L.shadows||(L.shadows=n.group("shadows",v.pieGroup).toBack()),Z=H.dataLabelContainer=this.graphics.dataLabelContainer||n.group("datalabel",E).trackTooltip(!0),ga&&(ab=f,Z.hide()));Z.css(d);L=c.valueTotal;P&&0!==L?0!==L&&(v.lineShadowGroup.show(),v.anchorShadowGroup.show(),v.pieGroup.show(),v.dataLabel.show(),O.show(),Z.show()):(v.lineShadowGroup.hide(),v.anchorShadowGroup.hide(),v.pieGroup.hide(),v.dataLabel.hide(),O.hide(),Z.hide());A&&Ma.attr({opacity:0});
u.length&&this.remove();P=0!==L?t/L:0;c.pieCenter=[r,m];U=u=Sa;0!==L&&k.labelDrawID.push(c.labelDrawID=S.addJob(function(){l.placeDataLabels(!1,q,c)},b.priorityList.label));for(k=0;k<W;k+=1)if(v=ya[k],C=v.graphics,Q=v.config,(Va=Q._textAttrs)||(Va=Q._textAttrs={}),za=Q.y,fa=Q.displayValue,Aa=Q.sliced,E=Q.toolText,A=!!Q.link,v=Q.style,ua=A||Ea||!Q.doNotSlice,null!==za&&void 0!==za&&!1!==Q.isVisible){U=Q.color;U.r=Da;U.cx=r;U.cy=m;U=u;u-=c.singletonCase?t:za*P;ia=.5*(u+U);K=C.element;xa=C.label;Ua=
C.connector;if(!K){K=N&&N.element.length?C.element=N.element.splice(0,1)[0].show():C.element=n.ringpath(H.pieContainer).attr({"stroke-linejoin":"round",ishot:ua}).drag(La,Ja,Fa).hover(ta,Ka);if(Za){if(k<W)for(Xa=void 0,a=k+1;a<W&&void 0===Xa;a+=1)Xa=ya[a].config.endAngle;void 0===Xa&&(Xa=bb)}else Xa=eb?bb:Sa;K.attr({ringpath:[r,m,Da,Pa,Xa,Xa]})}void 0!==fa?(v?((Ya=Q._textCss)||(Ya=Q._textCss={}),Ya.fontFamily=v.fontFamily,Ya.fontSize=v.fontSize,Ya.lineHeight=v.lineHeight,Ya.fontWeight=v.fontWeight,
Ya.fontStyle=v.fontStyle):Q._textCss&&(xa&&xa.removeCSS(),delete Q._textCss,Ya=void 0),Q.style=v||(v=d),Va.text=fa,Va.fill=v.color||"#000000",Va["text-bound"]=[v.backgroundColor,v.borderColor,v.borderThickness,v.borderPadding,v.borderRadius,v.borderDash],Va.direction=h,Va.lineHeight=v.lineHeight,xa?(Ya&&(xa.css(Ya),delete Ya.fontFamily,delete Ya.fontSize,delete Ya.lineHeight,delete Ya.fontWeight,delete Ya.fontStyle,Ya=void 0),delete Va.ishot):N&&N.label.length?xa=C.label=N.label.splice(0,1)[0]:Va.ishot=
ua,0<Ga.distance&&(ja=Ga.connectorWidth)&&Ga.enableSmartLabels?(Ua||(Ua=N&&N.connector.length?C.connector=N.connector.splice(0,1)[0]:C.connector=n.path("M 0 0 l 0 0",Z).attr({visibility:B,ishot:!0}).drag(La,Ja,Fa).hover(ta,Ka)),Ua.attr({"stroke-width":ja,stroke:Ga.connectorColor||"#606060"}).show()):Ua&&Ua.hide()):(Va.visibility="hidden",xa&&xa.hide(),Ua&&Ua.hide());0===L?(xa&&xa.hide(),Ua&&Ua.hide()):(xa&&xa.show(),Ua&&Ua.show());v=Q.plotItem={chart:l,index:k,seriesData:c,value:za,angle:Q.angle=
ia,angle1:Q.startAngle=u,angle2:Q.endAngle=U,slicedX:V(ia)*Na,slicedY:e(ia)*Na,sliced:Aa,labelText:fa,toolText:E,name:Q.name,link:Q.link,percentage:L?za*L/100:0,originalIndex:W-k-1,style:Q.style,color:M(Q.color),borderColor:Q.borderColor,borderWidth:Q.borderWidth,rolloverProperties:Q.hoverEffects,radius:Da,center:[r,m],innerDiameter:2*Pa,centerLabelConfig:Q.centerLabelConfig,graphic:K,isVisible:Q.isVisible,label:xa,connector:Ua,transX:Q.transX=V(ia)*Na,transY:Q.transY=e(ia)*Na,slicedTranslation:Q.slicedTranslation=
"t"+V(ia)*Na+","+e(ia)*Na};C={index:c.reversePlotOrder?W-1-k:k,link:Q.link,value:Q.y,displayValue:Q.displayValueArgs,categoryLabel:Q.categoryLabel,isSliced:Aa,toolText:E};K.animateWith(la,Ca,{ringpath:[r,m,Da,Pa,u,U]},ga,Ha,ab);K.attr({"stroke-width":Q.borderWidth,stroke:Q.borderColor,fill:J||Za&&g?this.singleFillColor(Q.color):M(Q.color),"stroke-dasharray":Q.dashStyle,redrawDataLabels:Sa,cursor:A?"pointer":"",transform:v.sliced?v.slicedTranslation:""}).show().shadow(p&&Q.shadow,O).tooltip(E).data("plotItem",
v).data("eventArgs",C);Va.plotItem=v;Va.eventArgs=C;Ua&&Ua.data("plotItem",v).data("eventArgs",C)}ga?Za&&l.placeDataLabels(!1,q,c):(pa(),f())},remove:function(){var a=this.components.removeDataArr||[],b=this.pool=this.pool={},e=a.length,g=this.config,l,h=g.pieCenter,d,f=h[0],h=h[1],c=this.hideElements,k=g.pieMinRadius,m=.5*(g.innerSize||0),p,g=g.startAngle-t;p=this.chart.get("config","animationObj");var n=p.duration||0,r=p.dummyObj,q=p.animObj,B=p.animType;for(p=0;p<e;p++){l=a[0];l=l.graphics;for(d in l)l[d].data("plotItem"),
l[d].animateWith(r,q,{ringpath:[f,h,k,m,g,g+.01]},n,B,c),b[d]||(b[d]=[]),b[d].push(l[d].hide());a.splice(0,1)}},legendInteractivity:function(a,b){a.chart._plotGraphicClick.call(a.components.data[b.configuration.index].graphics.element)},init:function(a){var b=this.chart;if(!a)return!1;this.JSONData=a;this.chartGraphics=b.chartGraphics;this.components={};this.graphics={};this.visible=1===q(this.JSONData.visible,!Number(this.JSONData.initiallyhidden),1);this.configure()},_getInnerSize:function(){var a,
b=this.config,e=this.chart.jsonData.chart;a=q(e.doughnutradius,0);var e=q(e.use3dlighting,1)?q(e.radius3d,e["3dradius"],50):100,g,l,h;g=b.pieMinRadius;100<e&&(e=100);0>e&&(e=0);a=0>=a||a>=g?g/2:a;b.innerRadius=a;if(0<e&&u&&(b=parseInt(a/g*100,10),g=(100-b)/2,e=parseInt(g*e/100,10),e=b+","+e+","+2*(g-e)+","+e,this&&(h=this.components.data)))for(b=0,g=h.length;b<g;b+=1)l=h[b],l=l.config,l.color&&(l.color.ratio=e,l.hoverEffects&&l.hoverEffects.color&&(l.hoverEffects.color.ratio=e));return 2*a},getEventArgs:function(a){a=
a.configuration.index;var b=this.components.data[a].config||{};return{datasetName:b.seriesName,datasetIndex:a,id:b.userID,visible:b.isVisible,label:b.seriesName,value:b.value,percentValue:b.pValue,tooltext:b.toolText,link:b.link,sliced:b.sliced}}},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-pie3d",function(){var b=this.hcLib,v=b.BLANKSTRING,J=b.ZEROSTRING,C=b.pluck,H=b.toRaphaelColor,A=b.getFirstAlpha,u=b.preDefStr.elementStr,a=Math,O=a.sin,q=a.cos,M=2*a.PI,U=b.getFirstColor,
N=b.graphics.getLightColor;Q.register("component",["dataset","Pie3D",{type:"pie3d",_parsePie3DOptions:function(){var a=this.config;return{size:2*a.pieMinRadius,slicedOffset:a.slicingDistance,allowPointSelect:!0,cursor:"pointer",innerSize:"pie3d"===this.type?0:this._getInnerSize()}},_parseBorderConfig:function(a,b,k){var m=this.chart.jsonData.chart,n=C(k.bordercolor,this.config.pieBorderColor);k=C(k.borderalpha,m.plotborderalpha,m.pieborderalpha);n=C(n,N(a,90)).split(",")[0];k=m.showplotborder==J?
J:C(k,b,"80");return{setPlotBorderColor:n,setPlotBorderAlpha:k}},_setHoverColor:function(a,b,k){a.color=b;a.alpha=k},draw:function(){var a,b,k=this.pool||(this.pool={}),m=this.components,n=this.config,u=this.chart,g=u.get("config","animationObj"),l=g.duration||0,B=g.dummyObj,e=g.animObj,A=g.animType,p=u.config;a=u.graphics;var C=m.data,g=n.dataLabelOptions,K=g.style,t=u.components.paper,J=p.tooltip||{},J=J&&!1!==J.enabled,N=n.slicingDistance,S=n.slicedOffsetY||(n.slicedOffsetY=N*n.pieYScale),z=u._plotDragMove,
R=u._plotDragStart,w=u._plotDragEnd,F=u._plotRollOver,Q=u._plotRollOut,h=!!n.enableRotation,d=n.showBorderEffect,f=C.length,c=n.usePerPointLabelColor,D=p.textDirection,G,U,Ra,Ia,sa,wa,ca,ma,qa,va,ha,ra,ka;b=m.removeDataArr||[];var na;ha=this.visible;var da,oa,Y=!1,za=this.graphics.dataLabelContainer,fa=(n.startAngle||0)%M,Aa,ua,ia,xa=fa-M,ja=n.animateClockWise,ya,W,Ma,ea=a.datasetGroup;da=p.alphaanimation;var ga=function(){0!==n.valueTotal&&(za.show(),u.placeDataLabels(!1))},la=function(){Y||(Y=p.fireInitialAnimation=
!0,ea.animateWith(B,e,{opacity:1},l,A,ga))};W=function(){var a,c;if(!Y)for(la(),a=0;a<f;a+=1)c=C[a],c.graphics.element&&c.graphics.element.attr({fill:H(c.config.color)})};var Ca=p.dataLabelStyle;if(za){if(ia=!0,l||!p.fireInitialAnimation)ma=l,Aa=W,p.fireInitialAnimation=!1}else za=this.graphics.dataLabelContainer=t.group("datalabel",a.datalabelsGroup).trackTooltip(!0),l&&(Aa=la,ma=l,za.hide(),da&&ea.attr({opacity:0}));za.css(Ca);ha||za.hide();b.length&&this.remove();u._preDrawCalculate();a=n.center;
b=n.pieYScale;m=m.Pie3DManager;C&&f||(C=[]);for(da=-1;++da<f;)if(K=C[da],ha=K.config,(W=ha._textAttrs)||(W=ha._textAttrs={}),ra=K.graphics,G=ha.y,U=ha.displayValue,Ia=ha.sliced,qa=ha.shapeArgs,wa=ha.centerAngle,va=ha.toolText,Ra=!!ha.link,K=ha.style,sa=Ra||h||!ha.doNotSlice,null!==G&&void 0!==G){ya=ra.element;ka=ra.label;na=ra.connector;if(!ya){ya=ra.element=m.useSliceFromPool();if(ia){if(da<f)for(ua=void 0,oa=da+1;oa<f&&void 0===ua;oa+=1)ua=C[oa].config.shapeArgs.end;void 0===ua&&(ua=fa)}else ua=
ja?fa:xa;ya||(ya=ra.element=m.createSlice().drag(z,R,w).mouseover(F).mouseout(Q).attr({ishot:sa}));ya.attr({start:-ua,end:-ua,cx:a[0],cy:a[1],r:a[2],innerR:a[3],radiusYFactor:b})}void 0!==U?(K?((Ma=ha._textCss)||(Ma=ha._textCss={}),Ma.fontFamily=K.fontFamily,Ma.fontSize=K.fontSize,Ma.lineHeight=K.lineHeight,Ma.fontWeight=K.fontWeight,Ma.fontStyle=K.fontStyle):ha._textCss&&(ka&&ka.removeCSS(),delete ha._textCss,Ma=void 0),ha.style=K||(K=Ca),W.text=U,W.fill=(c?H(ha.color):K.color)||"#000000",W["text-bound"]=
[K.backgroundColor,K.borderColor,K.borderThickness,K.borderPadding,K.borderRadius,K.borderDash],W.direction=D,W.lineHeight=K.lineHeight,ka?(Ma&&(ka.css(Ma),delete Ma.fontFamily,delete Ma.fontSize,delete Ma.lineHeight,delete Ma.fontWeight,delete Ma.fontStyle,Ma=void 0),delete W.ishot):k&&k.graphics&&k.graphics.label&&k.graphics.label.length?ka=ra.label=k.graphics.label.splice(0,1):W.ishot=sa,0<g.distance&&(ca=g.connectorWidth)&&g.enableSmartLabels?(na||(na=k&&k.graphics&&k.graphics.connector&&k.graphics.connector.length?
ra.connector=k.graphics.connector.splice(0,1):ra.connector=t.path("M 0 0 l 0 0",za).attr({visibility:"hidden",ishot:sa}).drag(z,R,w).hover(F,Q)),na.attr({"stroke-width":ca,stroke:g.connectorColor||"#606060",cursor:Ra?"pointer":""}).show()):na&&na.hide()):(ka&&ka.hide(),na&&na.hide());G={chart:u,index:da,seriesData:n,value:G,angle:ha.angle=wa,link:ha.link,shapeArgs:qa,slicedX:Ia&&!n.singletonCase?q(wa)*N:0,slicedY:Ia&&!n.singletonCase?O(wa)*S:0,sliced:Ia,labelText:U,name:ha.name,percentage:ha.percentage,
toolText:va,originalIndex:f-da-1,style:ha.style,graphic:ya,transX:ha.transX=q(wa)*N,transY:ha.transY=O(wa)*S,slicedTranslation:ha.slicedTranslation="t"+ha.transX+","+ha.transY,label:ka,connector:na};K={index:n.reversePlotOrder?da:f-1-da,link:ha.link,value:ha.y,displayValue:ha.displayValueArgs,categoryLabel:ha.categoryLabel,isSliced:ha.sliced,toolText:ha.toolText};ya.attr({transform:"t"+G.slicedX+","+G.slicedY,cursor:Ra?"pointer":"",color:ha.color.color.split(",")[0],alpha:ha._3dAlpha,borderWidth:ha.borderWidth,
borderColor:ha.borderColor,showBorderEffect:d}).animateWith(B,e,{start:qa.start,end:qa.end,r:a[2],innerR:a[3],cx:a[0],cy:a[1],radiusYFactor:b},ma,A,Aa).tooltip(J?va:v).data("groupId",da).data("plotItem",G).data("eventArgs",K);W.plotItem=G;W.eventArgs=K;na&&na.data("plotItem",G).data("eventArgs",K)}!l&&ga();0===n.valueTotal?(za.hide(),m.slicingWallsBackGroup.hide(),m.slicingWallsFrontGroup.hide(),m.topGroup.hide(),m.bottomBorderGroup.hide()):(za.show(),m.slicingWallsBackGroup.show(),m.slicingWallsFrontGroup.show(),
m.topGroup.show(),m.bottomBorderGroup.show())},hideFn:function(a,b,k){var m=k&&k.components||{};return function(){b===u?(m.Pie3DManager.removeSlice(a.element),delete a.element):a[b].hide()}},remove:function(){var a=this.chart,b=this.config,k=this.components.removeDataArr||[],m=this.pool=this.pool=[],n=k.length,q,g,l,B,e=this.hideFn,b=b.startAngle;l=a.get("config","animationObj");var a=l.duration||0,v=l.dummyObj,p=l.animObj,A=l.animType;for(l=0;l<n;l++){q=k[0];q=q.graphics;for(g in q)B=q[g],m[g]||
(m[g]=[]),g===u?B.animateWith(v,p,{start:-b,end:-b+.01},a,A,e(q,g,this)):m[g].push(B.hide());k.splice(0,1)}},foldingFn:function(){var a=this.config.startAngle;return{start:-a,end:-a+.01}},_getPointColor:function(a,b){a=U(a);b=A(b);return{color:a+","+a,alpha:b+","+b,ratio:"0,100"}}},"pie2D",{setBorderWidth:void 0,showBorderEffect:void 0}])}]);Q.register("module",["private","modules.renderer.js-dataset-doughnut2d",function(){var b=this.hcLib,v=b.hasSVG,J=b.toRaphaelColor,C=b.graphics.getDarkColor,H=
b.getFirstAlpha,A=Math.floor,u=b.getFirstColor,a=b.graphics.getLightColor;Q.register("component",["dataset","Doughnut2D",{type:"doughnut2d",_getPointColor:function(b,q,J){var Q;b=u(b);q=H(q);100>J&&v?(Q=C(b,A(100*(85-.2*(100-J)))/100),b=a(b,A(100*(100-.5*J))/100),q={color:Q+","+b+","+b+","+Q,alpha:q+","+q+","+q+","+q,radialGradient:!0,gradientUnits:"userSpaceOnUse",r:J}):q={color:b+","+b,alpha:q+","+q,ratio:"0,100"};return q},_parsePiePlotOptions:function(){var a=this.__base__._parsePiePlotOptions.call(this);
a.innerSize=this._getInnerSize();return a},draw:function(){var a=this.chart,b=a.config,u=this.config,v=b.canvasLeft+.5*b.canvasWidth,b=b.canvasTop+.5*b.canvasHeight,A,E=u.centerLabelConfig,r=E.label;A=.5*((u.innerSize=this._getInnerSize())||0);this.__base__.draw.call(this);r&&A&&a.drawDoughnutCenterLabel(r,v,b,2*A,2*A,E,!0);u.lastCenterLabelConfig=E},singleFillColor:function(a){return J({color:u(a.color,1),alpha:H(a.alpha,1)})}},"Pie2D"])}]);Q.register("module",["private","modules.renderer.js-dataset-doughnut3D",
function(){Q.register("component",["dataset","Doughnut3D",{type:"doughnut3d"},"Pie3D"])}]);Q.register("module",["private","modules.renderer.js-dataset-marimekko",function(){var b=this.hcLib,v="VML"===b.Raphael.type,J=b.pluck,C=b.pluckNumber,H=b.toRaphaelColor,A=b.getFirstValue,u=b.regex.dropHypeash,a=b.HASHSTRING,O=b.preDefStr,q=O.showHoverEffectStr,M=O.setRolloverAttrStr,U=O.setRolloutAttrStr,O=Math,N=O.round,E=O.min,r=O.abs,k=b.graphics.getLightColor,m=b.schedular;Q.register("component",["dataset",
"marimekko",{type:"marimekko",configure:function(){b.each(this.JSONData.data,function(a){a&&(a.value=r(a.value))});this.__base__.configure.call(this)},_addLegend:function(){var b=this.chart,m=b.jsonData.chart,g,l;l=this.config;var b=b.components.legend,r=l.legendSymbolColor;g=C(m.us3dlighting,m.useplotgradientcolor,1);m=k(r,60).replace(u,a);g?(g=k(r,40),g={FCcolor:{color:r+","+r+","+g+","+r+","+r,ratio:"0,70,30",angle:270,alpha:"100,100,100,100,100"}}):g={FCcolor:{color:r,angle:0,ratio:"0",alpha:"100"}};
l={enabled:l.includeInLegend,type:this.type,fillColor:H(g),strokeColor:H(m),rawFillColor:r,label:A(this.JSONData.seriesname)};this.legendItemId=b.addItems(this,this.legendInteractivity,l)},searchIndex:function(a,b){for(var g=this.chart.components.xAxis[0],l=0,k=b.length-1,e,m;l<=k;)if(e=Math.round((l+k)/2)||0,m=g.getAxisPosition(b[e].x)+b[e].columnWidth/2,m<a)l=e+1;else if(m>a)k=e-1;else return e;return l},_getHoveredPlot:function(a,b){var g=this.groupManager,l=g.stackConf,k=this.chart.config,g=g.config,
e=k.plotborderthickness,m=l.length-1,p,e=k.showplotborder?e:0,k=e/2,k=0===k%2?k+1:Math.round(k),l=p&&g.datasetIndex||this.searchIndex(a+k,l);g.datasetIndex||(g.datasetIndex=l);(p=this._checkPointerOverColumn(l,a,b))?delete g.datasetIndex:this.index===m&&delete g.datasetIndex;return p},draw:function(){var a=this,k=a.JSONData,g=a.chart,l=g.jsonData.chart,u=g.config,e=g.getJobList(),A=a.config,p=a.groupManager,T=a.index,K,t,Z=a.visible,P=g.components;t=P.canvas.config.clip;var S=P.paper,P=P.xAxis[0],
z=P.getCategoryLen(),R=a.yAxis,w=g.graphics.datasetGroup,F=g.config.isstacked,O,h,d,f=b.parseUnsafeString,c=b.getValidValue,D=b.Raphael,G=u.showtooltip,Q=g.get("config","animationObj"),Ra=Q.duration,Ia=Q.dummyObj,sa=Q.animObj,Q=Q.animType,wa=P.getAxisPosition(0),ca=P.getAxisPosition(1),ma=A.groupMaxWidth=ca-wa,wa=p.stackSumValue[a.positionIndex],ca=u.maxcolwidth,ca=(1-.01*A.definedgrouppadding)*ma||E(1*ma,1*ca),qa,va,ha,ra=a.components,ka=ra.data,na,da,oa,Y,za,fa=a.drawn,Aa=ra.removeDataArr,Aa=Aa&&
Aa.length,ua=(ra=ra.addDataArr)&&ra.length,ia,ra=R.getAxisBase(),xa=R.yBasePos=R.getAxisPosition(ra),ja,ya=0,A=A.showshadow,W=u.plotborderthickness,Ma=u.useroundedges,ea=a.graphics,ga=ea.container,la=ea.dataLabelContainer,Ca=ea.shadowContainer,ea=ea.pool,Ha=1,pa=P.getAxisPosition(z-1)+0,La=P.getAxisPosition(0)+0,Ja=!0,Fa=a.startPosition,ta=p.stackConf,Ka=u.showplotborder,Ea=function(){!1!==a.visible||!1!==a._conatinerHidden&&void 0!==a._conatinerHidden||(ga.hide(),Ca.hide(),la&&la.hide(),a._conatinerHidden=
!0)},Da=function(){Ja&&Ea();this.show()},Ga=function(){return Fa?function(a,b){a.x=La-ma*(ua-b);a.y=h;a.height=va}:!1===Fa?function(a){a.x=pa+ma*Ha++;a.y=h;a.height=va}:function(a){a.width=0}},Na=g.components.canvas.config;za=Na.oriCanvasBorderThickness;var Na=0<Na.canvasBorderWidth,Ua=u.canvasRight,Pa=u.canvasTop,u=u.canvasLeft;fa&&(Ga=Ga());ga||(ga=a.graphics.container=S.group("columns",w),Z||ga.hide());Ca||(Ca=a.graphics.shadowContainer=S.group("shadow",w).toBack(),Z||Ca.hide());t=t["clip-canvas"];
Na||(t[3]+=za/2,v&&(t[2]+=2*za));fa?(ga.animateWith(Ia,sa,{"clip-rect":t},Ra,Q),Ca.animateWith(Ia,sa,{"clip-rect":t},Ra,Q)):(ga.attr({"clip-rect":t}),Ca.attr({"clip-rect":t}));for(t=0;t<z;t++)K=(za=(w=ka[t])&&w.config)&&za.setValue,void 0!==w&&null!==K&&(ia=p.getDataSetPosition(a,t),qa=C(ia.columnWidth,ca/1),oa=ia.height,da=za.setLink,ia=za.colorArr,w.graphics||(ka[t].graphics={}),Y=za.displayValue,ja=za.previousPositiveY,na=c(f(J(za.origToolText,k.plottooltext,l.plottooltext))),F&&(ja=a._parseValues(t,
ja,wa[t],na),K=za.value),O=ta[t].x,ha=R.getAxisPosition(ja||ra),O=P.getAxisPosition(O)-qa/2,0!==oa?(h=R.getAxisPosition(K+(ja||0)),va=r(ha-h)):(va=0,h=ha),h=E(h,ha),parseInt(h)<=Pa&&(va-=Pa-h-+Na,h=Pa-+Na),1>=W&&(N(O)<=u&&(qa+=O,O=u-W/2+ +!!W-+Na,qa-=O),N(O+qa)>=Ua&&(qa=Ua-O+W/2-+!!W+ +Na)),p.isCrisp&&(d=D.crispBound(O,h,qa,va,W),O=d.x,h=d.y,qa=d.width,va=d.height),ja=w.trackerConfig||(w.trackerConfig={}),(ha=!1!==za.toolText&&za.toolText+(na?"":za.toolTipValue))&&(za.finalTooltext=ha),na=za.plotBorderDashStyle,
oa=ja.eventArgs||(ja.eventArgs={}),oa.index=t,oa.link=da,oa.value=K,oa.displayValue=Y,oa.categoryLabel=za.label,oa.toolText=ha,oa.id="",oa.datasetIndex=T||0,oa.datasetName=k.seriesname,oa.visible=Z,Ra||(xa=h,ya=va),K={x:O,y:xa,width:qa,height:ya||1,r:Ma,ishot:!G,fill:H(ia[0]),stroke:H(ia[1]),"stroke-width":Ka?W:0,"stroke-dasharray":na,"stroke-linejoin":"miter",visibility:Z},w._xPos=O,w._yPos=h,w._height=va,w._width=qa,w._index=t,!w.graphics.element&&fa&&(Ga(K,t),ea&&ea[0].graphics.element?(da=ea[0].graphics.element,
da.attr(K)):da=w.graphics.element=S.rect(K,ga),ea&&ea[0].graphics.hotElement&&(w.graphics.hotElement=ea[0].graphics.hotElement),ea&&ea.splice(0,1)),w.graphics.element?(K={x:O,y:h,width:qa,height:va||1},Ra?da=w.graphics.element.animateWith(Ia,sa,K,Ra,Q,Da):(da=w.graphics.element.attr(K),Ja&&Ea())):(da=w.graphics.element=S.rect(K,ga),Ra&&(da.animateWith(Ia,sa,{y:h,height:va||1},Ra,Q),Ja=!1)),da.attr({r:Ma,ishot:!G,fill:H(ia[0]),stroke:H(ia[1]),"stroke-width":Ka?W:0,"stroke-dasharray":na,"stroke-linejoin":"miter"}).shadow({opacity:A},
Ca).data("BBox",d),g.config.enablemousetracking&&da.data("eventArgs",ja.eventArgs).data(q,!0).data(M,za.setRolloverAttr||{}).data(U,za.setRolloutAttr||{}));a.drawn?a.drawLabel():e.labelDrawID.push(m.addJob(function(){a.drawLabel()},b.priorityList.label));a.drawn=!0;Aa&&a.remove()},getDataLimits:function(){var a=this.conf;return{max:a.yMax,min:a.yMin,xMax:100,xMin:0}}},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-column",function(){var b=this.window,v=this.hcLib,
J=v.pluck,C=v.pluckNumber,H=v.plotEventHandler,A=v.hashify,u=v.preDefStr,a=u.visibleStr,O=u.customTooltipStr1='<span style="color :',q=u.customTooltipStr2='; font-size : 12px">&#9632 </span>',M=u.customTooltipStr3=' <span style="color :',U=u.closeSpan="</span> ",N=u.closeTag='">',E=u.breakLineStr="</br>",u=Math,r=u.min,k=u.max,m=u.abs,n=u.ceil,L=v.toolTip;Q.register("component",["datasetGroup","Column",{init:function(){this.positionStackArr=[];this.stackSumValue=[];this.stackConfig=[];this.drawSumValueFlag=
!0},addDataSet:function(a,b,k){var e=this.positionStackArr[b];a.groupManager=this;a.positionIndex=b;a.stackIndex=k;e||(e=this.positionStackArr[b]=[]);e[k]={dataSet:a}},removeDataSet:function(a,b,k){var e=this.positionStackArr[a];e&&e[b]&&e.splice(b,k);0===e.length&&this.positionStackArr.splice(a,1)},_decideSkipping:function(a,b,k){a=a&&a.length;b=n(k/b);b=a/b;return 1<b?n(b):!1},_decidePlotableData:function(a,b,k,e){var m=this.stackSumValue&&this.stackSumValue[0],p,r,q,t,u=this.chart.config,v,A,z=
(a&&a.length)-b,E,w,C=n(1/u.binSize*u.labelBinSize),H,h;this.lastPlot||(this.lastPlot={positvePlot:[],negativePlot:[]});for(E=r=p=q=0;q<z&&k;q+=b,p++,r++){w=E%C;E++;for(t=q+b;t>=q+1;t--)A=a[t].config,v=m&&m[t]||A.setValue,u.labelBinSize&&(A.labelSkip=!0),A.isSkipped=!0,0<=v?(this.lastPlot.positvePlot[p]||(this.lastPlot.positvePlot[p]=v,0===w&&delete A.labelSkip,H=t,delete A.isSkipped),this.lastPlot.positvePlot[p]<v&&(this.lastPlot.positvePlot[p]=v,H=t,delete A.isSkipped)):(this.lastPlot.negativePlot[r]||
(this.lastPlot.negativePlot[r]=v,0===w&&delete A.labelSkip,h=t,delete A.isSkipped),this.lastPlot.negativePlot[r]>v&&(this.lastPlot.negativePlot[r]=v,h=t,delete A.isSkipped));0===w&&(a[H]&&delete a[H].config.labelSkip,a[h]&&delete a[h].config.labelSkip)}e&&delete this.lastPlot},skipOverlapPlot:function(){var a=this.positionStackArr,b,k,e,m,p,n;b=this.chart;var r=this.config,t=b.config,q=t.canvasWidth,u=t.canvasHeight,v=t.binSize,z,A,w=b.isBar;for(b=a.length-1;0<=b;b--)for(e=a[b],m=e.length,k=0;k<m;k++)p=
e[k].dataSet,z=p.visible,n=p.components,n=n.data,(A=this._decideSkipping(n,v,w?u:q))||(p.config.isSkippedData=!1),(p.config.plotsPerBin=A)&&this._decidePlotableData(n,A,z,!b);r.skipZeroPlots=t.skipZeroPlots&&3>r.groupNetWidth},draw:function(){var a=this.positionStackArr,b=a.length,k,e,m,p,n=this.chart,r=n.config;k=r.viewPortConfig.scaleX||1;e=n.graphics.columnGroup;p=n.graphics;m=n.components.canvas.config.clip["clip-canvas"].slice(0);p=p.datalabelsGroup;var t=n.get("config","animationObj"),n=t.animType,
q=t.animObj,u=t.dummyObj,v=m[2],t=t.duration;m[2]*=k;e.attrs["clip-rect"]||e.attr({"clip-rect":m});p.attrs["clip-rect"]||p.attr({"clip-rect":[m[0],0,v,m[3]+m[1]]});e.animateWith(u,q,{"clip-rect":m},t,n);p.animateWith(u,q,{"clip-rect":[m[0],0,v,m[3]+m[1]]},t,n);this.preDrawCalculate();this.drawSumValueFlag=!0;for(k=0;k<b;k++)for(e=a[k],m=e.length,this.manageClip=!0,e=0;e<m;e++)p=a[k][e].dataSet,p.draw();r.drawTrendRegion&&this.drawTrendRegion()},_moveTrendRegion:function(a,b,k){var e=this.chart,m=
e.isBar,p=e.graphics.trendRegion.columnTrendRegion,n=e.config.plotcolorintooltip,r=e.config.rolloverbandanimationduration,t=e.config.rolloverbandanimation?r:0,r=this.config,u=e.components.xAxis[0].getAxisPosition(a),C=e.components.dataset,L=C.length,z=C[0].components.data.length,N=r.prevIndexHovered;k=void 0===k?!0:k;var w,F,M,h,d,f=r.toolText||(r.toolText=""),c=v.toolTip;b=b&&b.originalEvent;var D,G;if(!(0>a||a>=z)){if(r.customHighlightFlag&&!r.groupHighlightFlag||N!==a){f="";for(w=0;w<L;w++)M=C[w],
F=M.components.data,z=F[a],h=F[N],d=z&&z.config,F=M.graphics.sharedAnchor,D=h&&h.config.setValue,G=z&&z.config.setValue,k&&h&&(h.graphics&&h.graphics.element||F&&F.element)&&(D||0===D)&&M._rolloutResponseSetter(e,h,b,!0),z&&(G||0===G)&&(z.graphics&&z.graphics.element||F&&F.element)&&M.visible&&(void 0!==a&&(k&&M._rolloverResponseSetter(e,z,b,!0),n?(h=d&&J(d.originalPlotColor,d.color),r.toolText=f+=O+A(h)+q+z.config.finalTooltext+E):r.toolText=f+=z.config.finalTooltext+E),M.config.hidSharedAnchor||
void 0!==a||F&&F.element.hide());r.groupHighlightFlag=!0}f&&r.customHighlightFlag&&this._drawTooltip(a,void 0,b);N!==a&&(void 0===N&&(t=0),z=C[0].components.data,void 0!==a?(t?m?p.animate({transform:"t0,"+u},t):p.animate({transform:"t"+u+",0"},t):m?p.transform("t0,"+u):p.transform("t"+u+",0"),p.show(),k&&(m=void 0!==N&&z[N].config,void 0!==N&&H.call(p,e,b,"trendRegionRollOut",{index:N,categoryLabel:m.origLabel||m.label}),H.call(p,e,b,"trendRegionRollOver",{index:a,categoryLabel:z[a].config.origLabel||
z[a].config.label}))):(p.hide(),m=z[N].config,k&&H.call(p,e,b,"trendRegionRollOut",{index:N,categoryLabel:m.origLabel||m.label})),void 0!==a&&f||(r.toolText="",c.hide(e.chartInstance.id)),this.config.prevIndexHovered=a)}},_drawTooltip:function(a,l,k){var e=this.config,m=e.toolText,p=this.chart,n=p.config,r=p.isBar||0,t=p.components,u=n.datasetOrder||t.dataset,v,C=t.paper,z=u.length,H,t=t.yAxis[0],w=p.linkedItems.container,F=this.sumValues[0],Q=n.plotcolorintooltip,n=n.tooltipgrayoutcolor,h,d,f,c,
D,G;if(void 0!==l)for(m="",G=0;G<z;G++)v=u[G],H=v.components.data,d=(H=H[a])&&H.config,f=H.config.displayValue||0,h=d.color,h=d&&J(d.originalPlotColor,h),(f=void 0!==a&&f)&&v.visible&&(v=l===G?void 0:n,Q?(f=l===G?h:n,e.toolText=m+=O+A(f)+q+M+A(v)+N+H.config.finalTooltext+U+E):e.toolText=m+=M+A(v)+N+H.config.finalTooltext+U+E);k||(H=u[0].components.data[a],l=w.getBoundingClientRect(),e=b.document.documentElement,c=H._xPos+(r&&H._width)+l.left+(b.pageXOffset||e.scrollLeft)-e.clientLeft-L.pointeroffset,
D=l.top+(b.pageYOffset||e.scrollTop)-e.clientTop+(F?t.getPixel(F[a].positive):H._yPos)-L.pointeroffset);L.customDraw(m,C,k,c,D,p.chartInstance.id)},_notifyGroup:function(a,b){var k=this.chart,e=k.components.dataset,m=e.length,p,n,r,t,q=this.config;p=q.customHighlightFlag;var u=this.config.prevIndexHovered,v=b.originalEvent;!a&&(q.customHighlightFlag=!0);if(a&&p){for(p=0;p<m;p++)t=e[p],n=(r=t.components.data[u])&&r.config.setValue,r&&(n||0===n)&&(r.graphics||t.graphics.sharedAnchor)&&t._rolloutResponseSetter(k,
r,v,!0);q.customHighlightFlag=!1;q.groupHighlightFlag=!1}},_getHoveredRegion:function(a,b,k){var e=this.chart,m=e.config,p=e.components.xAxis[0],n=e.components.canvas.config,r=Math.max(n.canvasPaddingLeft,n.canvasPadding),n=m.canvasLeft,t=m.canvasRight,q=m.canvasTop,m=m.canvasBottom,e=p.getValue(e.isBar?b-q-r:a-n-r),e=Math.round(e);0>e||e>=p.getCategoryLen()||a<=n||a>=t||b<=q||b>=m?this._moveTrendRegion(void 0,k):this._moveTrendRegion(e,k)},drawTrendRegion:function(){var a=this.chart,b=a.isBar,k=
a.config,e=a.graphics,m=e.trendRegion||(e.trendRegion={}),p=m.columnTrendRegion,n=e.columnTrendGroup,r=k.trendRegionColor,t=k.trendRegionStroke,a=a.components.paper,q=this.stackConfig[0].xPosOffset,u=this.config.groupNetWidth,v=this.config.groupMaxWidth||(this.config.groupMaxWidth=1),z=k.prevTrendRegionOverPlot,A=k.drawCrossLineOnTop,b="M"+(b?k.canvasLeft:0)+", "+(b?0:k.canvasTop)+", "+(b?"H"+(k.canvasWidth+k.canvasLeft):"V"+(k.canvasHeight+k.canvasTop));this.config.trendRegionOffset=q-(v-u)/2;r=
{path:b,fill:r,stroke:t,"stroke-width":v,"stroke-linecap":"butt"};z!==A&&(A?n.insertAfter(e.datasetGroup):n.insertBefore(e.datasetGroup),p&&p.remove(),delete m.columnTrendRegion,p=void 0);k.prevTrendRegionOverPlot=A;p?p.attr(r):(p=m.columnTrendRegion=a.path(r,n),p.hide())},getDataSetPosition:function(a){var b=this.numVisiblePositions,k=this.stackConfig[a.positionIndex||0];a=a.visible;var e;if(k){if(!a&&k.visible||0===b)e=0;return{xPosOffset:k.xPosOffset,columnWidth:k.columnWidth,height:e}}},preDrawCalculate:function(){var a=
this.chart,b=a.config.transposeAxis,n=this.stackConfig,e=this.stackSumValue,q=this.positionStackArr,p=this.sumValues=[],u=this.dataLimits=[],v=this.config,t=!1,A=a.config,E=A.isstacked,H=q.length,z,J,w,F,L,h,d,f,c,D,G,N,M,O,Q,U,ca,ma=a.isBar,qa=a.jsonData.chart,va=a.components.xAxis[0],ha=C(ma?qa.overlapbars:qa.overlapcolumns,a.is3D?0:1),ra=va.getAxisPosition(0),ka=va.getAxisPosition(1),na=m(ka-ra),da=k(C(qa.plotspacepercent),0),oa=C(qa.plotpaddingpercent),ra=k(C(qa.plotspacepercent,20)%100,0),Y=
v.groupPadding=ra/200,za,ka=!0,fa,Aa,ua;for(d=this.numVisiblePositions=0;d<H;d++){f=q[d].length;U=n[d]||(n[d]={});U.visible=!1;U.previousVisibleCount=this.numVisiblePositions;Aa=[];for(ca=0;ca<f;ca++)if(ua=Infinity,F=q[d][ca],fa=F.dataSet.yAxis,F&&!1!==F.dataSet.visible&&(U.visible=!0),E){h=q[d][ca+1];c=ca;for(t=!1;0<=c&&!t;)t=(z=q[d][--c])&&z.dataSet.visible;L=F&&F.dataSet.components.data;Q=h&&h.dataSet.components.data;D=F.dataSet.components.data;G=z&&z.dataSet.components.data;D||(D=F.dataSet.components.data=
[]);N=L&&L.length;for(h=0;h<N;h++){(M=D[h])||(M=D[h]={config:{}});O=G&&G[h];if(!O)for(;0<=c&&!O;)if(t=(z=q[d][--c])&&z.dataSet.visible)O=(G=z&&z.dataSet.components.data)&&G[h];M=M.config;M.value=t=fa.getCleanValue(L[h].config.setValue);w=(O=O&&O.config)&&O.value;!Aa[h]&&(Aa[h]=(w||0===w)&&!0);J=(O&&O.previousPositiveY||0)+(O&&(0<w?w:0)||0);w=(O&&O.previousNegativeY||0)+(O&&(0>w?w:0)||0);M.previousPositiveY=J;M.previousNegativeY=w;ua=r(ua,(w||J)+M.setValue);Q&&Q[h]&&Q[h].config.setValue||(e[d]||(e[d]=
[],e[d].parentYAxis=F.dataSet.config.parentYAxis),e[d][h]=J+(F.dataSet.visible&&m(t))+m(w),!e[d][h]&&(e[d][h]=1),p&&(p[d]||(p[d]=[]),p[d][h]=p[d][h]||{},null!==t&&(M=F.dataSet.visible,p[d][h].visible=Aa[h]||M&&!0,p[d][h].positive=J+(0<=t?M&&t:0),p[d][h].negative=w+(0>t?M&&t:0))))}h=q[d][ca+1];c=ca;if(!b)for(z=q[d][ca-1],L=F&&F.dataSet.components.data,Q=h&&h.dataSet.components.data,D=F.dataSet.components.data,G=z&&z.dataSet.components.data,N=L&&L.length,h=0;h<N;h++){M=D[h];O=G&&G[h];if(!O)for(;0<=
c&&!O;)O=(G=(z=q[d][--c])&&z.dataSet.components.data)&&G[h];M=M.config;M.value=t=fa.getCleanValue(L[h].config.setValue);O=O&&O.config;ua=r(ua,(w||J)+M.setValue);za=(O&&O.previousPositiveDataLimit||0)+(O&&(0<O.value?O.value:0)||0);O=(O&&O.previousNegativeDataLimit||0)+(O&&(0>O.value?O.value:0)||0);M.previousPositiveDataLimit=za;M.previousNegativeDataLimit=O;Q&&Q[h]&&Q[h].config.setValue||!u||(u[d]||(u[d]=[],u[d].parentYAxis=F.dataSet.config.parentYAxis),u[d][h]=u[d][h]||{},null!==t&&(u[d][h].positive=
za+(0<=t?t:0),u[d][h].negative=O+(0>t?t:0)))}ua&&(F.dataSet.config.minValue=ua)}U.visible&&(this.numVisiblePositions+=1)}b&&(this.dataLimits=this.sumValues);b=this.numVisiblePositions;d=m(C(ma?qa.maxbarheight:qa.maxcolwidth,a.maxColWidth||50));a=v.groupNetWidth=(1-.01*da)*na||r(na*(1-2*Y),d*(b||1));void 0===qa.plotspacepercent&&a>=A.canvasWidth/2&&(v.groupNetWidth=a=na-d/2);v=a/2;A=0===b?a:a/b;ha=r(A-1,1<b?ha||void 0!==oa?0<oa?A*oa/100:0:4:0);for(d=0;d<H;d++)oa=this.stackConfig[d],qa=oa.previousVisibleCount,
oa.xPosOffset=qa*A-v+ha/2,A-=ha,oa.columnWidth=oa.visible||0===b?A:0,A+=ha;H=va.getAxisPosition(0)-v;4>va.getAxisPosition(1)-v-(H+a)&&(ka=!1);"0"==ra&&(ka=!0);this.isCrisp=ka},getMaxSumValueSpace:function(){var a=this.stackSumValue,b=this.chart,m={},e=a.length,n=b.components.numberFormatter,p,r=0,q=0,t,u,v,A=b.linkedItems.smartLabel;t=b.config.dataLabelStyle;A.useEllipsesOnOverflow(b.config.useEllipsesWhenOverflow);A.setStyle(t);for(b=0;b<e;b++)for(t=a[b],v=t.length,u=0;u<v;u++)m=t[u],m=n.dataLabels(m),
m=A.getOriSize(m),p=m.width,m=m.height,q=k(q,p),r=k(r,m);return{maxWidth:q,maxHeight:r}},drawSumValue:function(){var b=this.chart,l=b.components,k=l.paper,e=this.positionStackArr,n=this.stackConfig,p=b.linkedItems.smartLabel,r=b.config,q,t=b.config.rotatevalues?270:0,l=l.xAxis[0],u,v=b.config.isstacked,A,z=r.dataLabelStyle,E,w,F,H,h,d,f,c,D,G,J=this.sumValuesDrawn,L,N,M,O,Q=l.getPVR(),U,qa=this.pool,va=!1,ha=!1,ra=b.get("config","animationObj"),ka=ra.duration,na=ra.dummyObj,da=ra.animObj,ra=ra.animType,
oa=b.config.stack100percent,Y;F=r.showsum;var za=1,fa=!1,Aa=this.sumValues,ua=b.config.canvasTop,ia=b.components.canvas.config.clip["clip-canvas"].slice(0),xa,ja=b.graphics.sumLabelsLayer;ia[1]=0;ia[3]+=ua;this.drawSumValueFlag=!1;if(v)if(F){ja.css(z);p.setStyle(z);ja.show();!this.graphics&&(this.graphics={});q=this.graphics.sumLabels;v=this.graphics.sumLabelContainer;q||(q=this.graphics.sumLabels=[]);v||(v=this.graphics.sumLabelContainer=[]);fa=q.length;F=Aa.length;if(fa>F)for(;F<fa;F++){ua=q[F].length;
for(H=0;H<ua;H++)u=q[F][H]||{},(G=u.element)&&G.hide();(ua=v[F])&&ua.hide();q.pop();v.pop()}ua=e.length;for(F=0;F<ua;F++){(q=v[F])||(q=v[F]=this.graphics.sumLabelContainer[F]||k.group("sumlabels",ja));b.isRealTime&&q.attr({"clip-rect":ia});H=e[F][0].dataSet;u=H.yAxis;A=Aa[F];d=C(r.scrollMaxVal,l.getCategoryLen());h=this.graphics.sumLabels[F]=this.graphics.sumLabels[F]||[];D=r.scrollMinVal||0;n[F].visible||(ha=!0);Y=n[F].xPosOffset;U=n[F].columnWidth;M=l.getPixel(d-1)+Y;L=H.addDataArr&&H.addDataArr.length;
va=H.startPosition;N=this.removedSumLabels&&this.removedSumLabels[F]&&this.removedSumLabels[F].length;for(H=r.scrollMinVal||0;H<d;H++,D++)if(fa=!1,q.show(),f=A[H]||{},G=f.positive,c=f.negative,!h[D]&&(h[D]={}),void 0!==G||void 0!==c)if(w=G+c,w=u.dataLabels(w),O=m(c)>G?c:G,G=h[D].element,!f.visible)G&&G.hide();else if(w||""===w)f=z.backgroundColor,c=z.borderColor,xa=p.getOriSize(w),E=this.getSumValueConfig({xValue:H,columnWidth:U,sumValue:O,xPosOffset:Y,stack100percent:oa,yAxis:u}),O=this.getSumValuePosition(xa,
{stack100percent:oa,rotateValues:t,xPos:E.xPos,yPos:E.yPos,sumValue:O}),E=O.x,w={text:w,fill:z.color,"text-bound":[f,c,z.borderThickness,z.borderPadding,z.borderRadius,z.borderDash],"line-height":z.lineHeight,visibility:a},O.transform=k.getSuggestiveRotation(t,E,O.y),G||(qa&&qa.sumLabels[F]&&qa.sumLabels[F][0]?(h[D].element=G=qa.sumLabels[F][0],qa.sumLabels[F].shift()):(w.x=E,w.y=O.y,w.transform=O.transform,O["text-anchor"]&&(w["text-anchor"]=O["text-anchor"]),h[D].element=G=k.text(w,q),fa=!0),J&&
ka&&(f=va,f=!0===f?NaN-Q*(L-F):!1===f?M+Q*za++:E,G.attr({x:f,y:O.y,transform:k.getSuggestiveRotation(t,f,O.y)}))),fa||(G.show().animateWith(na,da,O,ka,ra),G.attr(w));N&&this.removeGraphics(F);ha&&(q.hide(),ha=!1)}}else ja.hide();this.sumValuesDrawn=!0},getSumValueConfig:function(a){var b=this.chart,k=a.columnWidth,e=a.yAxis,m=b.config.viewPortConfig,p=m.x,n=m.scaleX,m=a.stack100percent,r=a.sumValue,t=a.xPosOffset;a=b.components.xAxis[0].getAxisPosition(a.xValue)+t+p*n;e=e.getAxisPosition(m?100:r);
return{xPos:a+.5*k,yPos:e}},getSumValuePosition:function(a,b){var k=this.chart,e=k.config,m=e.canvasBottom,p=e.canvasTop,n=k.is3D,r=b.stack100percent,t=e.yDepth,e=e.xDepth,q=b.yPos,u,v=b.xPos,z=k.components.canvas.config.canvasBorderWidth,A=b.sumValue;u=k=b.rotateValues?a.width:a.height;u=u/2+2;r?q=p<=k?u:p-u-z:(0<=A&&(p=q-p,q=p<k?q+u-p:q-u),0>A&&(q=m-q<k?q-u:q+u,n&&(v-=e,q+=t)));return{x:v,y:q}},removeGraphics:function(a){var b=this.removedSumLabels||[],k=this.positionStackArr[a][0].dataSet,e=k.endPosition,
m=k.config.rotateValues,p=this.chart,k=(p.config.realTimeConfig||{}).clear,n=p.components.paper,r=b[a]&&b[a].length||0,t=p.components.xAxis[0],q=this.pool||(this.pool={sumLabels:[]}),u=t.getPVR(),v=p.get("config","animationObj"),z,p=function(){this.hide()},t=v.dummyObj,A=v.animObj,w=v.transposeAnimDuration,E=v.animType,C;C=function(){return!1===e?function(a){var b=a.attr("x")-u*r;a=a.attr("y");return{x:b,transform:n.getSuggestiveRotation(m,b,a)}}:function(a){var b=a.attr("x")+u*r||0;a=a.attr("y");
return{x:b,transform:n.getSuggestiveRotation(m,b,a)}}}();q.sumLabels||(q.sumLabels=[]);for(v=0;v<r;v++)z=b[a][0]&&b[a][0].element,b[a].splice(0,1),z&&(void 0===e||k?z&&z.hide().attr({"text-bound":[]}):w?z.animateWith(t,A,C(z),w,E,p):(z.stop(),z.hide()),q.sumLabels[a]||(q.sumLabels[a]=[]),q.sumLabels[a]=q.sumLabels[a].concat(z))},removeSumLabels:function(a,b,k){var e=this.chart,m=(this.graphics||{}).sumLabels||[],p;if(m.length){this.removedSumLabels||(this.removedSumLabels=[]);this.removedSumLabels[k]||
(this.removedSumLabels[k]=[]);if(!this.removedSumLabels[k].length||!e.config._sumValuesUpdated||e.config._dataUpdated){for(p=a;p<a+b;p++)m[k].push({});this.removedSumLabels[k]=this.removedSumLabels[k].concat(m[k].splice(a,b))}e.config._sumValuesUpdated=!0}},getDataLimits:function(){var a=this.chart,b=this.positionStackArr,m,e,n,p,q,u=-Infinity,t=Infinity,v,A,E;m=a.config.isstacked;var a=a.config.transposeAxis,z=-Infinity,C=Infinity;n=q=Infinity;var w;this.preDrawCalculate();p=this.dataLimits;if(m){m=
0;for(A=p.length;m<A;m++)for(v=p[m].length,w=p[m].parentYAxis,e=0;e<v;e++)E=p[m][e],void 0!==E.positive&&void 0!==E.negative&&(1===w?(u=k(u,E.positive),t=r(t,E.negative),n=r(n,u)):(z=k(z,E.positive),C=r(C,E.negative),q=r(q,z)));0===C&&(C=q);0===t&&(t=n)}p=b.length;for(m=0;m<p;m++)for(e=b[m],q=e.length,e=0;e<q;e++)n=b[m][e].dataSet,!1===n.visible&&a||(n=n.config,1===n.parentYAxis?(u=k(u,n.maxValue),t=r(t,n.minValue)):(z=k(z,n.maxValue),C=r(C,n.minValue)));this.maxValue=z;this.minValue=C;return{max:z,
min:C,sYMax:u,sYMin:t}},manageSpace:function(){var a=this.positionStackArr,b,m,e,n,p=a.length,r={paddingLeft:-Infinity,paddingRight:-Infinity};for(b=0;b<p;b++)for(e=a[b].length,n=0;n<e;n++)m=a[b][n].dataSet,m=m.manageSpace&&m.manageSpace()||{},r.paddingLeft=k(m.paddingLeft,r.paddingLeft),r.paddingRight=k(m.paddingRight,r.paddingRight);return r}}])}]);Q.register("module",["private","modules.renderer.js-dataset-group-realtimecolumn",function(){Q.register("component",["datasetGroup","realtimecolumn",
{},"Column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-waterfall2d",function(){Q.register("component",["datasetGroup","Waterfall2D",{},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-column3d",function(){Q.register("component",["datasetGroup","Column3d",{},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-bar2d",function(){var b=this.hcLib.preDefStr,v=b.POSITION_MIDDLE,J=b.POSITION_START;Q.register("component",
["datasetGroup","bar2d",{getSumValueConfig:function(b){var v=this.chart,A=b.columnWidth,u=b.yAxis,a=v.config.viewPortConfig,J=a.x,q=a.scaleX,a=b.stack100percent,M=b.sumValue,Q=b.xPosOffset;b=v.components.xAxis[0].getAxisPosition(b.xValue)+Q+J*q;u=u.getAxisPosition(a?100:M);return{xPos:u,yPos:b+.5*A}},getSumValuePosition:function(b,H){var A=this.chart,u=A.config,a=u.canvasLeft,O=u.canvasWidth,q=A.is3D,M=H.stack100percent,Q=u.yDepth,u=u.xDepth,N,E={},r=H.sumValue,k=H.xPos,m=H.yPos,n=A.components.canvas.config.canvasBorderWidth,
A=N=H.rotateValues?b.height:b.width,A=A/2+2;M?(k+=n,E["text-anchor"]=J):(0<=r?(a=a+O-k,a<N?(k=k-A+a,q&&(k-=u,m+=Q)):k+=A):(a=k-a,a<N?(k=k+A-a-(q?u:0),m+=q?Q:0):(k-=A,q&&(k-=u,m+=Q))),E["text-anchor"]=v);E.x=k;E.y=m;return E}},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-bar3d",function(){Q.register("component",["datasetGroup","bar3d",{},"bar2d"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-scrollcolumn2d",function(){Q.register("component",
["datasetGroup","scrollcolumn2d",{},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-area",function(){var b=this.hcLib.pluckNumber,v=Math.ceil;Q.register("component",["datasetGroup","Area",{_decidePlotableData:function(b,C,H){var A=this.chart.config,u,a,O,q,M,Q,N,E,r,k,m=(b&&b.length)-C,n,L,g=v(1/A.binSize*A.labelBinSize);for(n=a=u=O=0;O<m&&H;O+=C,u++,a++){L=n%g;n++;N=E=r=k=void 0;for(q=O+C;q>=O+1;q--)Q=b[q].config,M=Q.setValue,Q.isSkipped=!0,A.labelBinSize&&(Q.labelSkip=
!0),r?r<M&&(N=q,r=M):(N=q,r=M),k?k>M&&(E=q,k=M):(E=q,k=M);delete b[E].config.isSkipped;delete b[N].config.isSkipped;0===L&&(delete b[E].config.labelSkip,delete b[N].config.labelSkip)}},draw:function(){var v=this.chart,C=v.config,H=v.graphics,A=this.positionStackArr,u,a=A.length;u=H.areaGroup;var H=H.columnGroup,O=v.components.paper,v=b(v.jsonData.chart.areaovercolumns,1);u.area=u.area||O.group("area",u);u.areaConnector=u.areaConnector||O.group("area-connector",u);u.shadows||(u.shadows=O.group("shadow",
u).toBack());v?H&&u.insertAfter(H):u.toBack();this.preDrawCalculate();for(u=0;u<a;u++)for(v=A[u],v=v.length,H=0;H<v;H++)O=A[u][H].dataSet,O.draw();C.drawTrendRegion&&this.drawTrendRegion()}},"column"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-line",function(){Q.register("component",["datasetGroup","line",{},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-scrollarea2d",function(){Q.register("component",["datasetGroup","scrollarea2d",{},"Area"])}]);
Q.register("module",["private","modules.renderer.js-dataset-group-realtimearea",function(){Q.register("component",["datasetGroup","realtimearea",{},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-radar",function(){Q.register("component",["datasetGroup","radar",{},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-mssplinearea",function(){Q.register("component",["datasetGroup","MSSplineArea",{},"area"])}]);Q.register("module",["private","modules.renderer.js-dataset-group-marimekko",
function(){var b=this.hcLib,v=b.pluck,J=b.pluckNumber,C=b.preDefStr.visibleStr,H=Math,A=H.min,u=H.max,a=H.abs,O=b.schedular;Q.register("component",["datasetGroup","marimekko",{init:function(){this.__base__.init.call(this);this.stackConf=[]},getDataSetPosition:function(a,b){var u=this.numVisiblePositions,v=this.stackConfig[a.positionIndex||0],A=this.stackConf[b],r;if(!a.visible&&v.visible||0===u)r=0;return{columnWidth:A.columnWidth,height:r,x:A.x}},draw:function(){var a=this,u=a.positionStackArr,v=
u.length,A=a.chart.getJobList(),E,r,k,m;a.preDrawCalculate();a.drawLabel();a.drawSumValueFlag=!0;for(E=0;E<v;E++)for(r=u[E],k=r.length,a.manageClip=!0,r=0;r<k;r++)m=u[E][r].dataSet,m.draw();a.drawn?a.drawSumValue():A.labelDrawID.push(O.addJob(function(){a.drawSumValue()},b.priorityList.label));a.drawn=!0},preDrawCalculate:function(){var b=this.chart,v=this.stackSumValue,C,H=b.isBar,E=b.jsonData.chart,r=b.components.xAxis[0];C=J(H?E.overlapbars:E.overlapcolumns,b.is3D?0:1);var k=r.getAxisPosition(0),
m=r.getAxisPosition(1),n=a(m-k),L=u(J(E.plotspacepercent),0),g=J(E.plotpaddingpercent),l,k=b.config.canvasWidth,B,e=m=0,O=r.config.axisRange.min,r=r.config.axisRange.max-O,p=b.config.categories,T;B=0;var K=b.components.numberFormatter;this.__base__.preDrawCalculate.call(this);b=O;l=this.numVisiblePositions;H=J(H?E.maxbarheight:E.maxcolwidth,Infinity);H=(1-.01*L)*n||A(1*n,H*(l||1));H=0===l?H:H/l;A(H-1,1<l?C||void 0!==g?0<g?H*g/100:0:4:0);C=0;for(g=v[0].length;C<g;C++)m+=v[0][C];this.totalSumValue=
m;for(C=0;C<p.length;C++)H=p[C],H.widthpercent&&(B+=K.getCleanValue(H.widthpercent));100===B&&(T=this.setUserWidth=1);C=0;for(g=v[0].length;C<g;C++)H=p[C],this.stackConf[C]||(this.stackConf[C]={}),B=this.stackConf[C],H=T?K.getCleanValue(H.widthpercent)/100:v[0][C]/m,B.columnWidth=H*k,e+=H,H=H*r/2+b,b=e*r+O,B.x=H;this.isCrisp=!0},getStackSumPercent:function(){var a=this.stackSumValue,b=this.totalSumValue,u,v=this.chart.components.numberFormatter,A=this.chart.config.categories,r=this.setUserWidth,k=
[];for(u=0;u<a[0].length;u++)k[u]=r?v.getCleanValue(A[u].widthpercent):a[0][u]/b*100;return k},drawLabel:function(){var a=this.chart,b=a.components,u=a.linkedItems.smartLabel,A=this.getStackSumPercent(),E=this.stackConf,r,k,m,n=a.graphics.datalabelsGroup,H=b.numberFormatter,g=0,l,B,e=b.paper,O=a.config.canvasBottom,p=b.xAxis[0];r=a.config.style;var T=a.config.dataLabelStyle,K=A.length,t,Q=this.sumValues[0],P,S,z,R=a.jsonData.chart;S=b.canvas.config.clip["clip-canvas"];n=this.labelContainer=this.labelContainer||
e.group("labelGroup",n);k=J(R.showxaxispercentvalues,1);var R=this.xLabels=this.xLabels||[],w=a.get("config","animationObj"),a=w.duration,b=w.animType,F=w.dummyObj,w=w.animObj;n.attr({"clip-rect":S});u.setStyle(T);if(k)for(S=v(T.backgroundColor,"#ffffff"),P=v(""===T.borderColor?"#"+r.inCancolor:T.borderColor,"#000000"),z=v(T.borderThickness,1),m=0;m<K-1;m++)g+=A[m],l=H.percentValue(g),r=p.getAxisPosition(E[m].x)+E[m].columnWidth/2,k=O,t=R[m],Q[m].positive===Q[m].negative?t&&t.hide():(B={text:l,fill:T.color,
"text-bound":[S,P,z,T.borderPadding,T.borderRadius,T.borderDash],"line-height":T.lineHeight,visibility:C},l=u.getOriSize(l),k=k-l.height/2-z,t?(t.show().animateWith(F,w,{x:r,y:k},a,b),t.attr(B)):(B.x=r,B.y=k,R[m]=e.text(B,n)))},getSumValueConfig:function(a){var b=a.yAxis,u=a.stack100percent,v=a.sumValue;a=this.chart.components.xAxis[0].getAxisPosition(this.stackConf[a.xValue].x);b=b.getAxisPosition(u?100:v);return{xPos:a,yPos:b}}},"column"])}]);Q.register("module",["private","modules.renderer.js-interface",
function(){var b=this,v=b.hcLib,J=b.renderer.getRenderer("javascript"),C=v.hasModule,H=v.loadModule,A=v.getMetaSentence,u=v.moduleCmdQueue,a=v.executeWaitingCommands,O=v.injectModuleDependency,q=v.moduleDependencies,M=v.getDependentModuleName,Q,N;Q=function(q){var r,k,m,n={},u;q=A(q);for(r in b.core.items)r=b.core.items[r],k=r.chartType(),m=r.options.chartTypeSourcePath+k,(k=r.jsVars)&&k.waitingModule&&r.__state.rendering&&v.needsModule(q.predicate,m)&&(k.waitingModuleError=!0,k=M(m).concat(k.userModules),
k.length&&(k=k[k.length-1],n[k]=v.moduleCmdQueue[k]));for(u in n)a(n[u]);b.raiseError(b.core,"11171116151","run","HC-interface~renderer.load","Unable to load required modules and resources: "+q.key)};N=function(a,r,k){var m=a.args,n=a.options;a._chartMessageImageStyle={imageHAlign:m.typeNotSupportedMessageImageHAlign||n.baseChartMessageImageHAlign,imageVAlign:m.typeNotSupportedMessageImageVAlign||n.baseChartMessageImageVAlign,imageAlpha:m.typeNotSupportedMessageImageAlpha||n.baseChartMessageImageAlpha,
imageScale:m.typeNotSupportedMessageImageScale||n.baseChartMessageImageScale};a._chartMessageStyle={color:m.typeNotSupportedMessageColor||n.baseChartMessageColor,fontFamily:m.typeNotSupportedMessageFont||n.baseChartMessageFont,fontSize:m.typeNotSupportedMessageFontSize||n.baseChartMessageFontSize};b.hcLib.createChart(a,r,"base",k,n.typeNotSupportedMessage)};v.eventList=b.extend(b.legacyEventList,{loaded:"FC_Loaded",dataloaded:"FC_DataLoaded",rendered:"FC_Rendered",drawcomplete:"FC_DrawComplete",dataxmlinvalid:"FC_DataXMLInvalid",
nodatatodisplay:"FC_NoDataToDisplay",exported:"FC_Exported"});v.raiseEvent=b.raiseEventWithLegacy;q.charts=b.extend(q.charts||{},{column2d:0,column3d:0,bar2d:0,bar3d:0,pie2d:0,pie3d:0,line:0,area2d:0,doughnut2d:0,doughnut3d:0,pareto2d:0,pareto3d:0,mscolumn2d:0,mscolumn3d:0,msline:0,msarea:0,msbar2d:0,msbar3d:0,stackedcolumn2d:0,marimekko:0,stackedcolumn3d:0,stackedarea2d:0,stackedcolumn2dline:0,stackedcolumn3dline:0,stackedbar2d:0,stackedbar3d:0,msstackedcolumn2d:0,mscombi2d:0,mscombi3d:0,mscolumnline3d:0,
mscombidy2d:0,mscolumn3dlinedy:0,stackedcolumn3dlinedy:0,msstackedcolumn2dlinedy:0,scatter:0,bubble:0,ssgrid:0,scrollcolumn2d:0,scrollcolumn3d:0,scrollline2d:0,scrollarea2d:0,scrollstackedcolumn2d:0,scrollcombi2d:0,scrollcombidy2d:0,zoomline:0,zoomlinedy:0,zoomscatter:0});q.powercharts=b.extend(q.powercharts||{},{spline:0,splinearea:0,msspline:0,mssplinearea:0,mssplinedy:0,multiaxisline:0,multilevelpie:0,waterfall2d:0,msstepline:0,inversemsline:0,inversemscolumn2d:0,inversemsarea:0,errorbar2d:0,errorscatter:0,
errorline:0,logmsline:0,logmscolumn2d:0,logstackedcolumn2d:0,radar:0,dragnode:0,candlestick:0,selectscatter:0,dragcolumn2d:0,dragline:0,dragarea:0,boxandwhisker2d:0,kagi:0,heatmap:0,treemap:0});q.widgets=b.extend(q.widgets||{},{angulargauge:0,bulb:0,cylinder:0,drawingpad:0,funnel:0,hbullet:0,hled:0,hlineargauge:0,vlineargauge:0,pyramid:0,realtimearea:0,realtimecolumn:0,realtimeline:0,realtimelinedy:0,realtimestackedarea:0,realtimestackedcolumn:0,sparkcolumn:0,sparkline:0,sparkwinloss:0,thermometer:0,
vbullet:0,gantt:0,vled:0});q.maps=b.extend(q.maps||{},{});b.extend(J,{render:function(a,r){var k=this.chartType(),m=this.options.chartTypeSourcePath+k,n=this.jsVars,q=this.__state,g=v.chartAPI,l=this.options,B=this.args,e=this.options.showChartLoadingMessage,A,p;A=M(m).concat(n.userModules);n.isResizing&&(n.isResizing=clearTimeout(n.isResizing));n.hcObj&&n.hcObj.destroy&&n.hcObj.destroy();if(g[k]){if(g[q.lastRenderedType]&&q.lastRenderedType!==k)for(p in b.raiseEvent("chartTypeChanged",{previousType:q.lastRenderedType,
newType:k},this),g[q.lastRenderedType].eiMethods)delete this[p];q.lastRenderedType=k;q.lastRenderedSrc=this.src;!n.waitingModuleError&&v.raiseEvent("internal.loaded",{type:k,triggeredModuleLoad:n.drLoadAttempted||n.waitingModule},this,[this.id]);delete n.waitingModule;delete n.waitingModuleError;delete n.drLoadAttempted;b.hcLib.createChart(this,a,k,r)}else{if(k&&C(A)){if(n.drLoadAttempted){b.raiseError(this,11112822001,"run","HC-interface~renderer.render","Chart runtimes not loaded even when resource is present");
N(this,a,r);return}O(m)&&(A=M(m).concat(n.userModules));n.drLoadAttempted=!0}else{if(!A.length){N(this,a,r);return}if(n.waitingModuleError){N(this,a,r);delete n.waitingModule;delete n.waitingModuleError;return}}(k=u[A[A.length-1]])?(k.push({cmd:"render",obj:this,args:arguments}),n.waitingModule||(n=e?l.PBarLoadingText||l.loadMessage:"",this._chartMessageImageStyle={imageHAlign:B.loadMessageImageHAlign||l.baseChartMessageImageHAlign,imageVAlign:B.loadMessageImageVAlign||l.baseChartMessageImageVAlign,
imageAlpha:B.loadMessageImageAlpha||l.baseChartMessageImageAlpha,imageScale:B.loadMessageImageScale||l.baseChartMessageImageScale},this._chartMessageStyle={color:B.loadMessageColor||l.baseChartMessageColor,fontFamily:B.loadMessageFont||l.baseChartMessageFont,fontSize:B.loadMessageFontSize||l.baseChartMessageFontSize},b.hcLib.createChart(this,a,"base",void 0,n),J.load.call(this,a,r))):(b.raiseError(this,12080515551,"run","HC-interface~renderer.render","Unregistered module in dependentModule definition."),
this._chartMessageImageStyle={imageHAlign:B.renderErrorMessageImageHAlign||l.baseChartMessageImageHAlign,imageVAlign:B.renderErrorMessageImageVAlign||l.baseChartMessageImageVAlign,imageAlpha:B.renderErrorMessageImageAlpha||l.baseChartMessageImageAlpha,imageScale:B.renderErrorMessageImageScale||l.baseChartMessageImageScale},this._chartMessageStyle={color:B.renderErrorMessageColor||l.baseChartMessageColor,fontFamily:B.renderErrorMessageFont||l.baseChartMessageFont,fontSize:B.renderErrorMessageFontSize||
l.baseChartMessageFontSize},b.hcLib.createChart(this,a,"base",void 0,l.renderErrorMessage))}},update:function(a){var r=this.ref,k=this.jsVars,m,n=k&&k.fcObj,n=k.container||n&&n.options&&n.options.containerElement&&n.options.containerElement.childNodes[0];k.hcObj&&k.hcObj.destroy&&k.hcObj.destroy();k.isResizing&&(k.isResizing=clearTimeout(k.isResizing));void 0===a.error?(delete k.stallLoad,delete k.loadError,!this.__state.firstRenderNotified&&this.jsVars.secondTimeRender&&(this.__state.firstRenderNotified=
!0,m=b.renderer.notifyRender),this.isActive()?this.src!==this.__state.lastRenderedSrc?this.render():b.hcLib.createChart(this,n,void 0,m):this.__state.rendering&&!k.waitingModule&&b.hcLib.createChart(this,n,void 0,m)):(this.isActive()&&"function"===typeof r.showChartMessage&&r.showChartMessage("InvalidXMLText"),delete k.loadError)},resize:function(a){var r=this.ref,k,m=this.jsVars;r&&r.resize&&(m.isResizing&&(m.isResizing=clearTimeout(m.isResizing)),m.isResizing=setTimeout(function(){k=b.normalizeCSSDimension(a.width,
a.height,r);void 0!==a.width&&(r.style.width=k.width);void 0!==a.height&&(r.style.height=k.height);r.resize();delete m.isResizing},0))},dispose:function(){var a,r=this.jsVars;r.isResizing&&(r.isResizing=clearTimeout(r.isResizing));this.apiInstance&&(this.apiInstance.dispose(),delete r.instanceAPI);if(a=this.ref)b.purgeDOM(a),a.parentNode&&a.parentNode.removeChild(a);r.container=null;v.cleanupWaitingCommands(this)},load:function(q,r){var k=this.jsVars,m=this.chartType(),n=b.hcLib.chartAPI[m],m=M(m).concat(k.userModules),
u=m[m.length-1];n||!m||m&&0===m.length?(delete k.waitingModule,q&&N(this,q||this.ref,r)):k.waitingModule||(k.waitingModule=!0,delete k.waitingModuleError,H(m,function(){delete k.waitingModule;a(v.moduleCmdQueue[u])},Q,this))}})}]);Q.register("module",["private","modules.api.dynamicchartattributes",function(){var b=this;b.extend(b.core,{setChartAttribute:function(v,J){var C,H,A,u;if("string"===typeof v)C=v,v={},v[C]=J;else if(null===v||"object"!==typeof v)return;u=0;if(A=(C=this.getChartData(b.dataFormats.JSON))&&
(C.chart||C.graph||C.map)){for(H in v)u+=1,null===v[H]?delete A[H.toLowerCase()]:A[H.toLowerCase()]=v[H];0<u&&("undefined"===typeof A.animation&&(A.animation="0"),this.setChartData(C,b.dataFormats.JSON))}else b.raiseError(this,"2105141421","run","#setChartAttribute()","Could not retrieve attribute list. Is data ready?")},getChartAttribute:function(v){var J=this.getChartData(b.dataFormats.JSON),J=J&&(J.chart||J.graph||J.map),C,H;if(0===arguments.length||void 0===v||void 0===J)return J;if("string"===
typeof v)C=J[v.toString().toLowerCase()];else if(v instanceof Array)for(C={},H=0;H<v.length;H+=1)C[v[H]]=J[v[H].toString().toLowerCase()];else b.raiseError(this,"25081429","param","~getChartAttribute()",'Unexpected value of "attribute"');return C}},!0)}]);Q.register("module",["private","api.linkmanager",function(){var b=this,v=b.FusionChartsDOMInsertModes,J={},C=function(u,a){this.items={};this.root=u;this.parent=a;a instanceof b.core?this.level=this.parent.link.level+1:(J[u.id]=[{}],this.level=0)},
H=function(b,a){return(b.options.containerElement===a.options.containerElement||b.options.containerElementId===a.options.containerElementId)&&b.options.insertMode===v.REPLACE},A=function(u){var a;u.sender.link instanceof C&&!u.sender.link.root.disposed?u.sender.link.parent instanceof b.core&&(a=u.sender.link.parent.link.items,!a[u.sender.id]&&(a[u.sender.id]=u.sender)):u.sender.link=new C(u.sender)};b.policies.link=["link",void 0];C.prototype.configuration=function(){return J[this.root.id][this.level]||
(J[this.root.id][this.level]={})};b.extend(b.core,{configureLink:function(u,a){var v;if(u instanceof Array){for(v=0;v<u.length;v+=1)"object"!==typeof J[this.link.root.id][v]&&(J[this.link.root.id][v]={}),b.extend(J[this.link.root.id][v],u[v]);J[this.link.root.id].splice(u.length)}else"object"===typeof u?("number"!==typeof a&&(a=this.link.level),void 0===J[this.link.root.id][a]&&(J[this.link.root.id][a]={}),b.extend(J[this.link.root.id][a],u)):b.raiseError(this,"25081731","param","~configureLink()",
"Unable to update link configuration from set parameters")}},!0);b.addEventListener("beforeRender",function(b){A(b)});b.addEventListener("beforeInitialize",function(b){A(b)});b.addEventListener("linkedChartInvoked",function(u,a){var v=u.sender,q=v.clone({dataSource:a.data,dataFormat:a.linkType,asyncRender:0,link:new C(v.link.root,v)},!0),A=a.alias,J;A&&(!q.typeSource&&q.swfUrl&&(q.typeSource=q.swfUrl.replace(/(.*?)?[^\/]*\.swf.*?/ig,"$1")),q.type=A);v.args&&0!==parseInt(v.args.animate,10)&&delete q.animate;
b.extend(q,v.link.configuration());b.raiseEvent("beforeLinkedItemOpen",{level:v.link.level},v.link.root,void 0,function(){b.core.items[q.id]instanceof b.core&&b.core.items[q.id].dispose();J=new b.core(q);H(J,v)||v.options.overlayButton&&v.options.overlayButton.message||("object"!==typeof v.options.overlayButton&&(v.options.overlayButton={}),v.options.overlayButton.message="Close");J.render();b.raiseEvent("linkedItemOpened",{level:v.link.level,item:J},v.link.root)})});b.addEventListener("overlayButtonClick",
function(u,a){if("LinkManager"===a.id){var v=u.sender,q=v.link.level-1,A=v.link.parent,C=v.link.root;b.raiseEvent("beforeLinkedItemClose",{level:q,item:v},C,v,function(){setTimeout(function(){b.core.items[v.id]&&v.dispose();b.raiseEvent("linkedItemClosed",{level:q},C)},0);A.disposed||A.isActive()||!H(v,A)||A.render()})}});b.addEventListener("DrawComplete",function(u){u=u.sender;var a;u&&void 0!==u.link&&u.link.root!==u&&u.link.parent instanceof b.core&&(u.ref&&"function"===typeof u.ref.drawOverlayButton?
(a=b.extend({show:!0,id:"LinkManager"},u.link.parent.options.overlayButton),b.extend(a,u.link.parent.link.configuration().overlayButton||{}),u.ref.drawOverlayButton(a)):b.raiseWarning(u,"04091602","run","::LinkManager^Loaded","Unable to draw overlay button on object. -"+u.id))});b.addEventListener("beforeDispose",function(u){var a=u.sender;a&&a.link instanceof C&&(a&&a.link&&a.link.parent instanceof b.core&&a.link.parent.link&&a.link.parent.link.items&&delete a.link.parent.link.items[u.sender.id],
delete J[a.id])})}]);Q.register("module",["private","modules.renderer.js-thememanager",function(){var b=this,v,J,C,H=/\s+!important$/,A=/\\!important$/,u=function(a,b){for(var m=b.length,n=-1;m--;)if(a===b[m]){n=m;break}return n},a=function(b,k,m,n,q){var g,l,v,e;q?(n.push(b),q.push(k)):(n=[b],q=[k]);if(k instanceof Array)for(g=0;g<k.length;g+=1){try{l=b[g],v=k[g]}catch(A){continue}if("object"!==typeof v)m&&void 0===v||(b[g]=v);else{if(null===l||"object"!==typeof l)l=b[g]=v instanceof Array?[]:{};
e=u(v,q);-1!==e?l=b[g]=n[e]:a(l,v,m,n,q)}}else for(g in k){try{l=b[g],v=k[g]}catch(A){continue}if(null!==v&&"object"===typeof v)if(e=Object.prototype.toString.call(v),"[object Object]"===e){if(null===l||"object"!==typeof l)l=b[g]={};e=u(v,q);-1!==e?l=b[g]=n[e]:a(l,v,m,n,q)}else"[object Array]"===e?(null!==l&&l instanceof Array||(l=b[g]=[]),e=u(v,q),-1!==e?l=b[g]=n[e]:a(l,v,m,n,q)):b[g]=v;else b[g]=v}return b},O=function(b,k,m){if("object"!==typeof b&&"object"!==typeof k)return null;if("object"!==
typeof k||null===k)return b;"object"!==typeof b&&(b=k instanceof Array?[]:{});a(b,k,m);return b},q=function(a){var b={important:!1,str:""};if(!a)return b;a=a.toString();H.test(a)?(a=a.replace(H,""),b.important=!0):(a=a.replace(A,"!imporant"),b.important=!1);b.str=a;return b},M=function(a,b){var m,n,q,g,l,u,e=0,v=0;for(m in a)if(n=a[m],n instanceof Array)for(u=n.length,l=0;l<u;l+=1){if(g=n[l],"object"===typeof g)if("category"===m)if("true"===g.vline){if(q=b.component("vline",e,g))Q(g,q),e+=1}else{if(q=
b.component("category",v,g,u))Q(g,q),v+=1}else if(q=b.component(m,l,g,u))Q(g,q),M(g,q)}else"object"===typeof n&&(q=b.component(m,null,n))&&(Q(n,q),M(n,q))},Q=function(a,b){var m=b.getAll(),n,u;for(n in m)u=m[n].toString(),u=q(u),u.important?a[n.toLowerCase()]=u.str:void 0===a[n.toLowerCase()]&&(a[n.toLowerCase()]=u.str)},N=function(a,b){"geo"===b.defaultSeriesType&&E.call(this,a,b)},E=function(a,k){var m=a.sender,n=m.getChartData(b.dataFormats.JSON,!0),q;n.error||((q=n.data.chart.theme)?C.themify(q,
m,m.chartType(),n.data,"geo"===k.defaultSeriesType&&"geo"):m.jsVars&&m.jsVars.themeObject&&m.jsVars.themeObject.dispose())};v=function(){this.themeStore={}};v.prototype={constructor:v,add:function(a){for(var b=0,m=a.length,n;b<m;b+=1)(n=a[b].name)&&(this.themeStore[n]=a[b])},themify:function(a,k,m,n,q){var g=k.jsVars,l=a.split(","),u=[],e=l.length,v,p;if(e){for(p=0;p<e;p+=1){v=this.themeStore;var A;A=l[p];A=A.replace(/^\s\s*/,"");for(var C=/\s/,t=A.length;C.test(A.charAt(--t)););A=A.slice(0,t+1);
(v=v[A])&&u.push(this.evaluateThemeJSON(v.theme,k,m,q))}u.length?(g.themeObject=new J(u,k,!1,n),this.applyTheme(k),k.addEventListener("chartTypeChanged",E),k.addEventListener("internal.drawstart",N)):b.raiseWarning(k,"14051100501","run","api.themes~themify()",'The theme "'+a+'" requested has not been registered.')}},evaluateThemeJSON:function(a,b,m,n){var q={},g=b.jsVars,l=function(a){var b,g;for(b in a)g=a[b],q[b]=g instanceof Array?O(q[b]||[],g):"object"===typeof g?O(q[b]||{},g):g};m=m||b.chartType();
g.themeObject&&a!==g.themeObject&&(g.themeObject.dispose(),delete g.themeObject);l(a.base);n&&a[n]&&l(a[n]);m&&a[m]&&l(a[m]);return q},applyTheme:function(a){a=a.jsVars.themeObject;var b=a.getThemedJSONData().data;b&&M(b,a)}};J=function(a,b,m,n){this.themeArray=a;this.themeComponents={};this.base={};this.chartInstance=b;this.isChildInstance=!!m;this.themedData=m?null:O({},n);this.length=a.length;b=0;for(m=a.length;b<m;b+=1)this.parse(a[b])};J.prototype={constructor:J,pushTheme:function(a){a&&(this.themeArray.push(a),
this.parse(a),this.length+=1)},popTheme:function(){},parse:function(a){var b=this.themeComponents,m=this.chartInstance,n=this.base,u,g,l;for(g in a)if("string"===typeof a[g]||"number"===typeof a[g])if(n[g]){if(u=q(a[g]),l=q(n[g]),u.important||!l.important)n[g]=a[g]}else n[g]=a[g];else b[g]||(b[g]=[]),u=b[g],a[g]instanceof Array?u.push(O([],a[g])):"object"===typeof a[g]?u.push(new J([a[g]],m,!0)):"function"===typeof a[g]&&u.push(a[g])},merge:function(a){var b=this.base,m=a.base,n=this.themeComponents,
u=a.themeComponents,g,l,v;for(v in m)if(g=q(b[v]),l=q(m[v]),!g.important||l.important)b[v]=m[v];for(v in u)n[v]=n[v]?n[v].concat(u[v]):[].concat(u[v]);this.length+=a.length},get:function(a){return this.base[a]},getAll:function(){return O({},this.base)},component:function(a,b,m,n){var q=this.themeComponents,g=this.chartInstance,l=new J([],g,!0),u,e,v;e=q[a];if(!e)return null;a=0;for(q=e.length;a<q;a+=1)v=e[a],"function"===typeof v?(b=b||0,l.pushTheme(v.call(g,b,m,n))):v instanceof Array?(b=b||0,u=
v.length,b%=u,u=v[b],u instanceof J?l.merge(u):"function"===typeof u?l.pushTheme(u.call(g,b,m,n)):l.pushTheme(u)):v instanceof J?l.merge(v):l.pushTheme(v);return l},getThemedJSONData:function(){return{data:this.themedData}},dispose:function(){var a=this.themeComponents,b=this.chartInstance,m,n;for(m in a)if(n=a[m].length){for(;n--;)a[m][n].dispose&&a[m][n].dispose();delete a[m]}this.isChildInstance||(b.removeEventListener("chartTypeChanged",E),b.removeEventListener("internal.drawstart",N));this.dataWithoutTheme=
this.isChildInstance=this.themeArray=this.base=this.chartInstance=this.themeComponents=null}};C=new v;b.registrars.theme=b.registerTheme=function(a){a&&("[object Array]"!==Object.prototype.toString.call(a)&&(a=[a]),C.add(a))};b.addEventListener("beforeDataUpdate",function(a,k){var m=a.sender,n=b.core.transcodeData(k.data,k.format,b.dataFormats.JSON),q=n.chart&&n.chart.theme;q?C.themify(q,m,m.args.type,n):m.jsVars&&m.jsVars.themeObject&&(m.jsVars&&m.jsVars.themeObject.dispose(),m.jsVars&&delete m.jsVars.themeObject)})}]);
Q.register("theme",{name:"default",theme:{base:{chart:{labelDisplay:"stagger !important",caption:"Theme Caption \\!important",canvasBgColor:"#56EF22",borderThickness:"5 !important",borderColor:"#E60539",baseFontColor:"#781129"},categories:[{fontColor:"#0F4F40",fontSize:15,category:function(b){return{showLabel:b%2?0:1}},vline:{color:"#000000",thickness:2}}],dataset:[{color:"#8C3146",data:function(b,v){8==b&&(v.value="");return{color:32E3>Number(v.value)?"#8C3146":"#FF0000",alpha:"100"}}}],trendlines:[{line:function(b){return b?
{color:"#ff0000",thickness:3}:{color:"#ffff00",thickness:3}}}]},pie2d:{chart:{bgColor:"#FF0000"}},msline:{chart:{canvasBgColor:"#ff0000"}},geo:{chart:{canvasBgColor:"#0000ff"}},world:{chart:{canvasBgColor:"#00ff00"}}}});Q.register("module",["private","modules.renderer.js-kdtree",function(){function b(a){function b(a,e,g,l){var m={},p;p=l?"y":"x";if(e===g)return m.point=a[e],m;if(1===g-e)return a[e][p]>a[g][p]?(m.point=a[e],m.left={point:a[g]}):(m.point=a[g],m.left={point:a[e]}),m;p=e+g>>1;l?k(a,p,
e,g):q(a,p,e,g);m.point=a[p];m.left=b(a,e,p-1,!l);m.right=b(a,p+1,g,!l);return m}function q(a,b,k,n){for(var u,z,C,w,E;n>k;){600<n-k&&(u=n-k+1,z=b-k+1,C=A(u),w=.5*p(2*C/3),E=.5*v(C*w*(u-w)/u)*(0>z-u/2?-1:1),C=g(k,l(b-z*w/u+E)),u=e(n,l(b+(u-z)*w/u+E)),q(a,b,C,u));u=a[b];z=k;w=n;m(a,k,b);for(a[n].x>u.x&&m(a,k,n);z<w;){m(a,z,w);z++;for(w--;a[z].x<u.x;)z++;for(;a[w].x>u.x;)w--}a[k].x===u.x?m(a,k,w):(w++,m(a,w,n));w<=b&&(k=w+1);b<=w&&(n=w-1)}}function k(a,b,n,q){for(var r,u,C,w,E;q>n;){600<q-n&&(r=q-n+
1,u=b-n+1,C=A(r),w=.5*p(2*C/3),E=.5*v(C*w*(r-w)/r)*(0>u-r/2?-1:1),C=g(n,l(b-u*w/r+E)),r=e(q,l(b+(r-u)*w/r+E)),k(a,b,C,r));r=a[b];u=n;w=q;m(a,n,b);for(a[q].y>r.y&&m(a,n,q);u<w;){m(a,u,w);u++;for(w--;a[u].y<r.y;)u++;for(;a[w].y>r.y;)w--}a[n].y===r.y?m(a,n,w):(w++,m(a,w,q));w<=b&&(n=w+1);b<=w&&(q=w-1)}}function m(a,b,e){var g=a[b];a[b]=a[e];a[e]=g}var n=a&&a[0]&&a[0].r||5,u,g=Math.max,l=Math.floor,v=Math.sqrt,e=Math.min,A=Math.log,p=Math.exp,C=Math.pow;a=a||[];for(u=a.length;u--;)a[u].r>n&&(n=a[u].r),
a[u].i=u,a[u].x=+a[u].x,a[u].y=+a[u].y;return{tree:0===a.length?{}:b(a,0,a.length-1,!1),search:function(a,b,e){function g(c,l){return"circle"===e?v(C(c-a,2)+C(l-b,2))<=r:c>=r&&c<=h&&l>=d&&l<=f}function l(d){var e=a>=d.x1&&a<=d.x2&&b>=d.y1&&b<=d.y2,f;f=d.point.y;f=v(C(a-d.point.x,2)+C(b-f,2));q?e?c?d.point.i>q.point.i&&(q=d,c=e,u=f):(q=d,c=e,u=f):!c&&f<u&&(q=d,c=e,u=f):(q=d,c=e,u=f)}function k(c){"circle"===e?r=c:(r=a-c||0,h=a+c||0,d=b-c||0,f=b+c||0)}function m(a){a&&a.point&&(k(a.point.r),g(a.point.x,
a.point.y)&&l(a),r<=a.point.x&&p(a.left),h>=a.point.x&&p(a.right))}function p(a){a&&a.point&&(k(a.point.r),g(a.point.x,a.point.y)&&l(a),d<=a.point.y&&m(a.left),f>=a.point.y&&m(a.right))}var q,r=a-n,h=a+n,d=b-n,f=b+n,c=!1,u=0;m(this.tree);return q&&q.point||q}}}function v(a){this.configure(a)}var J=this.hcLib,C=function(a,b,q,k,m){return Math.pow(q-a,2)+Math.pow(k-b,2)<=Math.pow(m,2)},H=Math.PI,A=Math.cos,u=Math.sin,a=Math.max,O=Math.min,q=H/180,M=function(b,q,r,k,m,n){return r<=a(b,m)&&r>=O(b,m)&&
k<=a(q,n)&&k>=O(q,n)?!0:!1},Q=function(a,b,q,k,m,n){b=(k-b)*(m-q);a=(q-a)*(n-k);isNaN(b)&&(b=0);isNaN(a)&&(a=0);a=b-a;return 0===a?0:0<a?1:2};v.prototype={configure:function(a){this.validatorFn=a?this.shapeValidator():this.defaultValidator()},defaultValidator:function(){var a=this;return function(b){var q=a.mousePoint;return b&&1>=Math.pow((b.x-q.x)/a.xLimit,2)+Math.pow((b.y-q.y)/a.yLimit,2)?!0:!1}},shapeValidator:function(){var a=this;return function(b){var r=a.mousePoint,k=b&&b.shapeInfo,m=!1,n,
v=r.x,r=r.y,g;switch(k&&k.type){case "circle":n=k.radius;m=C(v,r,b.x,b.y,n);break;case "arc":m=k.innerradius;n=k.radius;m=!C(v,r,b.x,b.y,m)&&C(v,r,b.x,b.y,n);break;case "polygon":n=k.radius;g=k.startAngle;k=k.sides;a:{m=b.x;b=b.y;var l,B=0,e,J,p,O,K;l=!1;if(C(v,r,m,b,n)&&3<=k){l=void 0===g?.5*H:g%360*q;K=2*H/k;e=m+n*A(-l);O=b+n*u(-l);for(g=0;g<k;g++){l+=K;J=m+n*A(-l);p=b+n*u(-l);var t=e,Z=O,P=J,S=p,z=v,R=r,w=r,F=Q(t,Z,P,S,z,R),X=Q(t,Z,P,S,Infinity,w),h=Q(z,R,Infinity,w,t,Z),d=Q(z,R,Infinity,w,P,S);
if(F!==X&&h!==d||0===F&&M(t,Z,z,R,P,S)||0===X&&M(t,Z,Infinity,w,P,S)||0===h&&M(z,R,t,Z,Infinity,w)||0===d&&M(z,R,P,S,Infinity,w)){if(0===Q(e,O,v,r,J,p)){m=M(e,O,v,r,J,p);break a}B++}e=J;O=p}l=0!==B%2}m=l}break;case "rect":m=b.x;n=b.y;b=m+(k.width||0);k=n+(k.height||0);m=v>=m&&v<=b&&r>=n&&r<=k;break;case "default":m=!1}return m}},buildKdTree:function(a){this.kdTree=b(a);this.tree=this.kdTree.tree;return this},getNeighbour:function(a,b,q){var k=this.tree,m={x1:a.x-this.xLimit,x2:a.x+this.xLimit,y1:a.y-
this.yLimit,y2:a.y+this.yLimit},n=this.validatorFn;this.mousePoint=a;if(b)return this.kdTree&&this.kdTree.search(a.x,a.y,q);if(k)return this._searchBtwnLimit(m,k,!0,n)},_compair2closest:function(a,b){return!a||a&&b&&b.i>a.i?b:a},_searchBtwnLimit:function(a,b,q,k){var m,n,u=q?a.x1:a.y1,g=q?a.x2:a.y2;m=b&&b.point&&b.point[q?"x":"y"];if(void 0!==m)return k(b.point)&&(n=b.point),m>=u&&b.left&&(n=this._compair2closest(n,this._searchBtwnLimit(a,b.left,!q,k))),m<=g&&b.right&&(n=this._compair2closest(n,this._searchBtwnLimit(a,
b.right,!q,k))),n},_setSearchLimit:function(a,b){this.xLimit=a;this.yLimit=b}};v.prototype.constructor=v;J.KdTree=v}]);Q.register("module",["private","modules.renderer.js-highlightmanager",function(){var b=this,v=b.hcLib,J=v.extend2,C=v.pluckNumber,H=v.toRaphaelColor,A=/^#?[0-9a-f]{6}/i,u=/FFFFFF/i,a=/255,255,255/,O=v.getFirstAlpha,q=function(a){a=a.replace("rgba(","").split(",");return"#"+("000000"+(a[0]<<16|a[1]<<8|a[2]).toString(16)).slice(-6)},M=v.pluck,U=function(a){if(/rgb/.test(a))return a=
a.match(/[\d\.]+\)/g),parseFloat(a&&a[0]);if(a.FCcolor)return O(a.FCcolor.alpha)},N=function(a){a=a.split(",");var b,e,g,k={},m;b=0;for(e=a.length;b<e;b++)g=a[b].split("="),m=g[0],g=g[1],k[m]=g;return k},E=function(a,b,e){var g,k=b.color;if(/rgb/.test(a))b=M(b.alpha,100*U(a)),/rgb/.test(k)&&(k=q(k)),g=e?H({color:M(k,q(a)),alpha:b}):a;else if(a.FCcolor){if(e){a=a.FCcolor;var m;e={};var n;for(m in a)if("alpha"===m){k=m;if(b.alpha){g=a[m];var t=b.alpha,r=void 0,u=void 0,v=[];if("number"===typeof g)g=
t;else{u=g.split&&g.split(",");for(r=0;r<u.length;r++)v.push(t);g=v.join()}}else g=a[m];e[k]=g}else"color"===m?(-1!==a[m].indexOf(",")&&b.color&&(n=b.color+","+a[m].substring(a[m].indexOf(",")+1)),e[m]=M(n||b.color,a[m])):e[m]=a[m];b=H(e)}else b=H(a.FCcolor);g=b}else A.test(a.color||a)&&(g=e?H({color:M(b.color,a.color,a),alpha:M(b.alpha,a.alpha)}):H({color:a.color||a,alpha:a.alpha}));return g},r=function(a,b,e){var g,k,m,n=a.chart;g=n.config;n=n.config.dataLabelStyle;a=a.components.data;var q,r,u,
v,z,A;q=0;for(r=a.length;q<r;q++)if(g=a[q])for(v in u=g.graphics,g=g.config,m=g.anchorProps,k=m.enabled,g={FCcolor:{alpha:e&&k?M(b.anchorbgalpha,b.alpha,m.bgAlpha):m.bgAlpha,color:e&&k?M(b.anchorbgcolor,b.color,m.bgColor):m.bgColor}},k={FCcolor:{alpha:e&&k?M(b.borderalpha,b.alpha,m.borderAlpha):m.borderAlpha,color:e&&k?M(b.anchorbordercolor,b.color,m.borderColor):m.borderColor}},m=e?b.alpha:m.imageAlpha,e||U(n.color),u)switch(A=(z=u[v])&&z.type,A){case "path":z.attr({fill:H(g),stroke:H(k)});break;
case "image":z.attr({opacity:m/100});break;case "text":L(z,b,n,e)}},k=function(b,g,e,k){var m=g.symbolAttr||{},n=m.fill,m=m.stroke,r=g.textAttr||{},r=k?M(e.color,q(r.fill)):q(r.fill),t=b.legendItemText,v=b.legendItemSymbol;b=b.legendItemLine;g=(g.lineAttr||{}).stroke;b&&g&&(A.test(g)?b.attr({stroke:k?H({color:M(e.color,g),alpha:e.alpha}):g}):(g=E(g,e,k),b.attr({stroke:g})));v&&(n&&(n=n.match(A)?k&&!u.test(n)?H({color:e.color||n,alpha:e.alpha}):n:a.test(n)?n:E(n,e,k)),m&&(m=A.test(m)?k&&!u.test(m)?
H({color:e.color||m,alpha:e.alpha}):m:k&&!a.test(m)?e.color?H({color:e.color,alpha:e.alpha}):m:m),v.attr({fill:n||"none",stroke:m||"none"}));t&&t.attr({fill:H({color:r,alpha:k?e.alpha:100})})},m={area:function(a,b,e){var g=this.chart,m=g.config,n=g.components.legend.components.items,q,t=this.legendItemId,u=n.length;a=N(a);var v=this.graphics||{},g=v.legendGraphics,A=m.dataLabelStyle,z=v.dataLabelContainer,C=this.config,w,m=0<(C.shadow||{}).opacity;if(!e&&!0===this.visible){a.alpha=a.alpha||30;for(e=
0;e<u&&(q=n[e]||{},q.legendItemId!==t);e++);z&&z.attr({opacity:b?a.alpha/100:U(A.color)});e=C.plotbordercolor;n=C.plotborderalpha;t=C.plotfillalpha;u=C.plotgradientcolor;v=M(v.lineElement,v.splineElement);e=b?M(a.bordercolor,a.color,e):e;a.color&&(w=a.color+(u?","+u:""));u=C.fillColor.color;w=b?M(w,u):u;C=C.plotfillangle;t=b?a.alpha:t;n=b?M(a.borderalpha,a.alpha):n;m=m?b?a.alpha/100:t/100:!1;v.attr({fill:H({color:w,alpha:t,angle:C}),stroke:H({color:e,alpha:n})}).shadow(m);g&&k(g,q.config,a,b);r(this,
a,b)}},bubble:function(a,b,e){var g=this.chart,m=g.components.legend.components.items||[],n,q=m.length,t=this.legendItemId,g=g.config.dataLabelStyle,r=this.graphics,u=r.legendGraphics,A=v.graphics.getPointColor,z=r.dataLabelContainer;a=N(a);if(!1===e&&!0===this.visible){a.alpha||(a.alpha=30);r=this.components.data||[];for(e=0;e<q&&(n=m[e]||{},n.legendItemId!==t);e++);k(u,n.config,a,b);z&&z.attr({opacity:b?a.alpha/100:U(g.color)});e=0;for(q=r.length;e<q;e++)if(m=r[e])t=m.graphics,n=m.config,m=n.colorObj,
u=n.is3d,n=t.element,t=t.label,u?(u=b?A(M(a.color,m.FCcolor.color),M(a.alpha,O(m.alpha))):m,u=H(u)):(u=b?M(a.color,m.color):m.color,m=b?a.alpha:m.alpha,u=H({color:u,alpha:m})),n&&n.attr({fill:u}),t&&L(t,a,g,b)}},pie:function(a,b,e,g){var m=g.chart,n;g=g._getPointColor;var q=this,t,r,u,v;u={};var q=this.legendItemId,z;r=m.components.legend.getItems()||[];a=N(a);if(!1===e){a.alpha||(a.alpha=30);e=this.graphics.element;t=this.config;v=0;for(m=r.length;v<m&&(n=r[v],z=n.legendItemId,z!==q);v++);q=n.graphics;
k(q,n.config,a,b);r=t.color.color;q=e.data("plotItem");m=q.chart;n=q.style;m=m.is3D;if(v=q.center)u=v[0],v=v[1],q=q.radius,u={cx:u,cy:v,r:q};r=b?g(M(a.color,r),a.alpha,90):t.color;g=b?a.alpha:r.alpha;r=J(r,u);m?e&&e.attr({color:r.color.split(",")[0],alpha:g}):e&&e.attr({fill:H(r)});g=this.graphics.label;e=this.graphics.connector;g&&L(g,a,n,b);e&&e.attr({opacity:b?a.alpha/100:U(n.color)})}},line:function(a,b,e){var g=this.chart,m=g.components.legend.components.items||[],n=m.length,q,t=this.legendItemId,
u=g.config.dataLabelStyle;a=N(a);var v=this.graphics||{},g=v.legendGraphics,A=v.dataLabelContainer,z=v.errorGroupContainer,C=this.config,w=C.linecolor,F=C.alpha,E=0<(C.shadow||{}).opacity;if(!e&&!0===this.visible){a.alpha||(a.alpha=30);for(e=0;e<n&&(q=m[e]||{},q.legendItemId!==t);e++);z&&(m=U(C.errorBarColor),m=b?M(a.alpha/100,m):m,z.attr({opacity:m}));A&&A.attr({opacity:b?a.alpha/100:U(u.color)});u=M(v.lineElement,v.SplineElement);w=b?M(a.color,w):w;F=b?M(a.alpha,F):F;E=E?b?a.alpha/100:F/100:!1;
u&&u.attr({stroke:H({color:w,alpha:F})}).shadow(E);g&&k(g,q.config,a,b);r(this,a,b)}},boxandwhisker2d:function(a,b,e){var g=this.config.isRoundEdges,m=this.graphics,n=m.legendGraphics,r=m.lowerWhiskerContainer,t=m.upperWhiskerContainer,u=m.dataLabelContainer,A=this.legendItemId,C=this.chart.components.legend.components.items||[],m=C.length,z;a=N(a);if(!1===e&&!0===this.visible){a.alpha||(a.alpha=30);for(e=0;e<m&&(z=C[e]||{},z.legendItemId!==A);e++);k(n,z.config,a,b);r&&r.attr({opacity:b?a.alpha/100:
1});t&&t.attr({opacity:b?a.alpha/100:1});u&&u.attr({opacity:b?a.alpha/100:1});n=this.components.data;e=0;for(m=n.length;e<m;e++){r=n[e];t=r.config;r=r.graphics;z=a;var u=b,A=g,J={},w={},F=J=w=void 0,L=C=void 0,h=void 0,d=void 0,f=void 0;u?(w=v.graphics.getColumnColor(z.color||t.upperColorArr[0].FCcolor.color,z.alpha.toString(),t.upperColorArr[0].FCcolor.ratio,t.upperColorArr[0].FCcolor.angle,A,z.bordercolor||q(t.upperBoxBorder.color),z.borderalpha&&z.borderalpha.toString()||(100*U(t.lowerBoxBorder.color)).toString()),
w=H(w[0]),J=v.graphics.getColumnColor(z.color||t.lowerColorArr[0].FCcolor.color,z.alpha.toString(),t.lowerColorArr[0].FCcolor.ratio,t.lowerColorArr[0].FCcolor.angle,A,z.bordercolor||q(t.lowerBoxBorder.color),z.borderalpha&&z.borderalpha.toString()||(100*U(t.lowerBoxBorder.color)).toString()),J=H(J[0]),F=E(t.median.color,z,u),h=E(t.lowerQuartile.color,z,u),d=E(t.upperQuartile.color,z,u)):(w=H(t.upperColorArr[0]),J=H(t.lowerColorArr[0]),F=t.median.color,C=t.upperBoxBorder.color,L=t.lowerBoxBorder.color,
d=t.upperQuartile.color,h=t.lowerQuartile.color);f=r.upperBoxElem;f.attr({fill:w,"drop-shadow":f.attrs["drop-shadow"]&&"none"!==f.attrs["drop-shadow"]?[1,1,3,"rgba(64,64,64,"+U(w)+")",f.attrs[4],f.attrs["drop-shadow"][5]]:"none"});f=r.lowerBoxElem;f.attr({fill:J,"drop-shadow":f.attrs["drop-shadow"]&&"none"!==f.attrs["drop-shadow"]?[1,1,3,"rgba(64,64,64,"+U(J)+")",f.attrs[4],f.attrs["drop-shadow"][5]]:"none"});f=r.lowerBoxBorderEle;f.attr({stroke:L});r.upperBoxBorderEle&&r.upperBoxBorderEle.attr({stroke:C});
r.lowerQuartileEle&&r.lowerQuartileEle.attr({stroke:h});r.upperQuartileEle&&r.upperQuartileEle.attr({stroke:d});r.midLineElem&&r.midLineElem.attr({stroke:F})}}},heatmap:function(a,b,e,g){var m=g.chart,n=m.config;g=n.dataLabelStyle;var n=m.components.legend,r,t,m=this.legendItemId,u,v;a=N(a);var A=n.getItems()||[];if(!e&&this.config.visible){a.alpha||(a.alpha=30);n=this.config;u=0;for(e=A.length;u<e&&(r=A[u],v=r.legendItemId,v!==m);u++);m=r.graphics;k(m,r.config,a,b);r=q(n.color);n=U(n.color);r=b?
M(a.color,r):r;n=b?a.alpha:100*n;e=this.graphics;m=e.element;m.attr({fill:H({color:r,alpha:n})});b||U(g.color);for(t in e)m=e[t],"text"===m.type&&L(m,a,g,b)}},funnelpyramid:function(a,b,e,g){g=g.chart.components.legend;var m,n,r,t,u;a=N(a);g=g.getItems()||[];n=this.legendItemId;if(!1===e){a.alpha||(a.alpha=30);r=0;for(e=g.length;r<e&&(m=g[r],t=m.legendItemId,t!==n);r++);e=m.graphics;k(e,m.config,a,b);m=this.style;g=this.color;e=q(g);g=U(g);e=b?M(a.color,e):e;r=b?a.alpha:100*g;n=this.plot.graphic;
t=this.plot.dataLabel;u=this.plot.connector;g=this.plot.point.style;n&&n.attr({fill:H({color:e,alpha:r})});t&&L(t,a,g,b);u&&u.attr({opacity:b?a.alpha/100:U(m.color)})}},"default":function(a,b,e){var g=this.config,m=this.chart,n=m.config,q=n.dataLabelStyle,r=n.useroundedges,u=m.is3D,A,E,z;a=N(a);var J=this.graphics,w=J.legendGraphics,F=J.dataLabelContainer;z=J.errorGroupContainer;var Q,h,n="",n=this.legendItemId,d=m.components.legend.components.items||[];Q=d.length;m=g.showShadow;J=v.graphics.getColumnColor;
if(!1===e&&!0===this.visible){a.alpha||(a.alpha="30");e=this.components.data||[];for(A=0;A<Q&&(E=d[A]||{},E.legendItemId!==n);A++);w&&k(w,E.config,a,b);F&&F.attr({opacity:b?a.alpha/100:U(q.color)});z&&(Q=U(g.errorBarColor),Q=b?M(a.alpha/100,Q):Q,z.attr({opacity:Q}));A=0;for(Q=e.length;A<Q;A++)if((g=e[A])&&g.graphics){n=g.config;z=n.colorArr[0];E=n.colorArr[1];w=E.FCcolor.alpha;n=z.FCcolor.color;n=-1!==(h=n.indexOf(","))&&a.color?a.color+n.substring(h):M(a.color,n);F=u?w:M(a.borderalpha,a.alpha,w);
0===C(w)&&(F="0");w=b?J(n,a.alpha,z.FCcolor.ratio,z.FCcolor.angle,r,M(a.bordercolor,E.FCcolor.color),F,!1,u):[z,E];if(z=g.graphics.element)n=H(w[0]),E=H(w[1]),z.attr({stroke:E,fill:n}).shadow({opacity:m?O(w[0].alpha)/100:0});g=g.graphics.label;L(g,a,q,b)}}}},n=function(){this.effectStore={};this.eventHandlers={}},L=function(a,b,e,g){var k,m,n,r,u;k=q(e.color);n=100*U(e.color);m=g?M(b.valuefontcolor,k):k;r=g?M(b.valuefontalpha,b.alpha,n):n;k=""===e.backgroundColor?"":q(e.backgroundColor);n=""===e.backgroundColor?
0:100*U(e.backgroundColor);isNaN(n)&&(n=0);u=g?M(b.valuebgcolor,k):k;n=g?M(b.valuebgalpha,b.alpha,n):n;u=H({color:u,alpha:n});k=""===e.borderColor?"":q(e.borderColor);n=""===e.borderColor?"":100*U(e.borderColor);isNaN(n)&&(n=0);k=g?M(b.valuebordercolor,k):k;b=g?M(b.valueborderalpha,b.alpha,n):n;b=H({color:k,alpha:b});a&&a.attr({fill:H({color:m,alpha:r}),"text-bound":[u,b,e.borderThickness,e.borderPadding,e.borderRadius,e.borderDash]})},g=new n;n.prototype.add=function(a){this.effectStore[a.name]=
a};n.prototype.attachEventHandlers=function(a,g){this.eventHandlers[a]||(this.eventHandlers[a]={},this.eventHandlers[a].listenerFn=b.addEventListener(a,g))};n.prototype.applyEffect=function(a,b,e){var g=this.effectStore,k=a.jsonData.chart,m=a.defaultDatasetType,n=k.plothighlighteffect&&k.plothighlighteffect.toLowerCase(),k=a.components.dataset;a=a.isSingleSeries?k[0].components.data:k;b=M(b.itemId,b.legendItemId,b.legendItemIndex);var q,r,u,v="",z;n&&(n=n.replace(/\s+/g,"").split("|"),z=n[0],v=n[1]||
"");if(z&&g[z])for(r=0,u=a.length;r<u;r++)n=a[r],m=n.type||m,m=m.toLowerCase(),q=M(n.itemId,n.legendItemId),void 0!==q&&(q=q===b,g[z][m]?g[z][m].call(n,v,e,q,k[0]):g[z]["default"].call(n,v,e,q,k[0]))};b.registrars.highlighteffect=function(a){a&&g.add(a)};g.attachEventHandlers("legenditemrollover",function(a,b){var e=a.sender.jsVars.instanceAPI;!1!==e.hasInteractiveLegend&&!1!==e.highlightEnabled&&g.applyEffect(e,b,!0)});g.attachEventHandlers("legenditemrollout",function(a,b){var e=a.sender.jsVars.instanceAPI;
!1!==e.hasInteractiveLegend&&!1!==e.highlightEnabled&&g.applyEffect(e,b,!1)});g.attachEventHandlers("legenditemclicked",function(a,b){var e=a.sender.jsVars.instanceAPI;!1!==e.hasInteractiveLegend&&!1!==e.highlightEnabled&&g.applyEffect(e,b,!0)});Q.register("highlightEffect",{name:"fadeout",area:m.area,radar:m.area,bubble:m.bubble,pie2d:m.pie,line:m.line,spline:m.line,areaspline:m.area,pie3d:m.pie,zoomline:m.line,funnel:m.funnelpyramid,pyramid:m.funnelpyramid,scatter:m.line,doughnut2d:m.pie,doughnut3d:m.pie,
heatmap:m.heatmap,boxandwhisker2d:m.boxandwhisker2d,multiaxisline:m.line,"default":m["default"]})}]);Rb&&(Ab.FusionCharts=Q);return Q});


;/*
 FusionCharts JavaScript Library
 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>
*/
(function(B){"object"===typeof module&&"undefined"!==typeof module.exports?module.exports=B:B(FusionCharts)})(function(B){B.register("module",["private","modules.renderer.js-charts",function(){B.register("module",["private","modules.renderer.js-column2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("column2d",{standaloneInit:!0,friendlyName:"Column Chart",creditLabel:b,defaultDatasetType:"column",applicableDSList:{column:!0},singleseries:!0},a.sscartesian,
{enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-column3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("column3d",{friendlyName:"3D Column Chart",defaultDatasetType:"column3d",applicableDSList:{column3d:!0},defaultPlotShadow:1,creditLabel:b,is3D:!0,standaloneInit:!0,hasLegend:!1,singleseries:!0,fireGroupEvent:!0,defaultZeroPlaneHighlighted:!1},a.sscartesian3d,{showplotborder:0,enablemousetracking:!0})}]);B.register("module",
["private","modules.renderer.js-bar2d",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("bar2d",{friendlyName:"Bar Chart",isBar:!0,standaloneInit:!0,defaultDatasetType:"bar2d",creditLabel:a,applicableDSList:{bar2d:!0},singleseries:!0,spaceManager:b.barbase},b.ssbarcartesian,{enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-bar3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;
a("bar3d",{friendlyName:"3D Bar Chart",defaultDatasetType:"bar3d",applicableDSList:{bar3d:!0},defaultPlotShadow:1,fireGroupEvent:!0,standaloneInit:!0,creditLabel:b,is3D:!0,isBar:!0,singleseries:!0,defaultZeroPlaneHighlighted:!1},a.ssbarcartesian3d,{showplotborder:0,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-area2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("area2d",{friendlyName:"Area Chart",standaloneInit:!0,
creditLabel:b,defaultDatasetType:"area",singleseries:!0,defaultPlotShadow:0},a.sscartesian,{enablemousetracking:!0},a.areabase)}]);B.register("module",["private","modules.renderer.js-line",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("line",{friendlyName:"Line Chart",standaloneInit:!0,creditLabel:a,defaultPlotShadow:1,singleseries:!0,axisPaddingLeft:0,axisPaddingRight:0,defaultDatasetType:"line"},b.sscartesian,{zeroplanethickness:1,enablemousetracking:!0,
zeroplanealpha:40,showzeroplaneontop:0},b.areabase)}]);B.register("module",["private","modules.renderer.js-pareto2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI,C=a.pluck,p=a.pluckNumber,K=a.componentDispose;m("pareto2d",{defaultDatasetType:"column2d",singleseries:!0,creditLabel:b,_createDatasets:function(){var a=this.components,b=this.jsonData,h=this.is3D,x=a.numberFormatter,l=b.data||b.dataset&&b.dataset[0]&&b.dataset[0].data,f=l&&l.length,q=b.chart,
y=this.defaultDatasetType,b=new (B.get("component",["dataset","Pareto"])),G=p(q.showcumulativeline,1),L=[],k,t;if(l){for(q=0;q<f;q++)k=l[q],t=x.getCleanValue(k.value),null!==t&&"true"!==k.vline&&!0!==k.vline&&1!==k.vline&&"1"!==k.vline&&L.push(k);this.config.categories=L;x=a.dataset||(a.dataset=[]);(l=C(y))&&l.toLowerCase();l=B.register("component",["datasetGroup","column"]);l=a[void 0]=new l;l.chart=this;l.init();if(f=h?B.get("component",["dataset","Column3d"]):B.get("component",["dataset","Column"]))(h=
x[0])?(y=L.length,l=h.components.data.length,y<l&&h.removeData(y,l-y),h.JSONData={data:L},b.configure.call(h)):(h=new f,x.push(h),h.chart=this,h.index=q,l&&l.addDataSet(h,0,0),b.init(h,L,y));a=a.yAxis[1];if(G)a&&a.setAxisConfig({drawLabels:!0,drawPlotLines:!0,drawAxisName:!0,drawAxisLine:!0,drawPlotBands:!0,drawTrendLines:!0,drawTrendLabels:!0}),a.show(),f=B.get("component",["dataset","line"]),(h=x[1])?(y=L.length,l=h.components.data.length,y<l&&h.removeData(y,l-y),h.JSONData={data:L},b.configure.call(h)):
(h=new f,x.push(h),h.chart=this,h.index=q,b.init(h,L,"line"));else{if(h=x[1])K.call(h),x.pop();a&&(a.setAxisConfig({drawLabels:!1,drawPlotLines:!1,drawAxisName:!1,drawAxisLine:!1,drawPlotBands:!1,drawTrendLines:!1,drawTrendLabels:!1}),a.hide())}}else this.setChartMessage()},_setCategories:function(){var a=this.components,b=this.jsonData,h=b.dataset,x=a.numberFormatter,a=a.xAxis,b=b.data||h&&h[0].data||[],h=[],l,f=b.length,q,y={},G=0,L;for(q=0;q<f;q++){l=b[q];L=x.getCleanValue(l.value,!0);if("true"===
l.vline||"1"===l.vline||1===l.vline||!0===l.vline)y[G]=l;else if(null===L)continue;else l.value=L,h.push(l);G++}h.sort(function(a,f){return f.value-a.value});for(q in y)h.splice(q,0,y[q]);a[0].setCategory(h)},standaloneInit:!0,hasLegend:!1,isPercentage:!0},m.msdybasecartesian,{enablemousetracking:!0,plotfillalpha:a.preDefStr.NINETYSTRING})}]);B.register("module",["private","modules.renderer.js-pareto3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI;
m("pareto3d",{standaloneInit:!0,is3D:!0,friendlyName:"3D Pareto Chart",creditLabel:b,fireGroupEvent:!0,defaultPlotShadow:1,singleseries:!0,hasLegend:!1,defaultDatasetType:"column3d",_createDatasets:m.pareto2d,_setCategories:m.pareto2d,isPercentage:!0},m.msdybasecartesian3d,{plotfillalpha:a.preDefStr.NINETYSTRING,use3dlineshift:1,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-pie2d",function(){var a=this,b=a.hcLib,m=b.hasTouch,C=a.window,p=C.document,K=b.BLANKSTRING,
N=b.pluck,Q=b.pluckNumber,h=b.toRaphaelColor,x="createTouch"in p,l=x&&!(C.navigator.maxTouchPoints||C.navigator.msMaxTouchPoints),f=b.each,q=b.plotEventHandler,y=b.schedular,G=b.priorityList,L=8===C.document.documentMode?"visible":"",k=Math,t=k.sin,E=k.cos,v=k.round,z=k.atan2,Y=k.min,ka=k.max,ea=k.abs,B=k.PI,ia=k.ceil,ra=k.floor,sa=B/180,na=180/B,ma=Math.PI,U=ma/2,ba=2*ma,Aa=ma+U,ua=b.graphics.convertColor,P=b.POSITION_BOTTOM,fa=b.POSITION_RIGHT,B=b.chartAPI,qa=b.COMMASTRING,wa=b.ZEROSTRING,ta=b.ONESTRING,
b=!b.CREDIT_REGEX.test(C.location.hostname),xa=function(a,r,e,c,d){return z((r-e[1]-c.top)/d,a-e[0]-c.left)};B("pie2d",{friendlyName:"Pie Chart",standaloneInit:!0,defaultSeriesType:"pie",defaultPlotShadow:1,reverseLegend:1,alignCaptionWithCanvas:0,sliceOnLegendClick:!0,isSingleSeries:!0,dontShowLegendByDefault:!0,defaultDatasetType:"Pie2D",applicableDSList:{Pie2D:!0},defaultZeroPlaneHighlighted:!1,creditLabel:b,_plotDragMove:function(f,r){var e=r[0],c=r[1],d=r[2],n=r[3],g=this.data("plotItem"),ga=
g.chart,g=g.seriesData,T=ga.components.dataset[0].config;isNaN(e)||isNaN(c)||!T.enableRotation||g.singletonCase||g.isRightClicked||(e=xa.call(f,d,n,g.pieCenter,g.chartPosition,1),g.isRotating||(g.dragStartAngle!==e&&(g.isRotating=!0),a.raiseEvent("RotationStart",{startingAngle:g._rotationalStartAngle=ga._startingAngle()},ga.chartInstance)),T.startAngle+=e-g.dragStartAngle,g.dragStartAngle=e,g.moveDuration=0,T.updateInited||(T.updateInited=!0,setTimeout(ga._batchRotate||(ga._batchRotate=function(){ga._rotate();
T.updateInited=!1}),50)))},_plotDragStart:function(a,r){var e=r[0],c=r[1],d=this.data("plotItem"),n=d.chart,d=d.seriesData,g=n.components.dataset[0].config,ga=-g.startAngle;d.isRightClicked=m||0===a.button||1===a.button?!1:!0;if(g.enableRotation&&!d.isRightClicked){d.isRotating=!1;g=n.linkedItems.container;n={left:0,top:0};if(g.getBoundingClientRect)g=g.getBoundingClientRect(),n.top=g.top+(C.pageYOffset||p.scrollTop||0)-(p.clientTop||0),n.left=g.left+(C.pageXOffset||p.scrollLeft||0)-(p.clientLeft||
0);else for(;g;)n.left+=g.offsetLeft||0,n.top+=g.offsetTop||0,g!==p.body&&g!==p.documentElement&&(n.left-=g.scrollLeft||0,n.top-=g.scrollTop||0),g=g.offsetParent;d.chartPosition=n;e=xa.call(a,e,c,d.pieCenter,d.chartPosition,1);d.dragStartAngle=e;d.startingAngleOnDragStart=ga}},_plotDragEnd:function(f){var r,e=this.data("plotItem"),c=e.chart,d=c.config,n=d.linkedChartOpened,g=e.seriesData;g.isRightClicked||(d.clicked=!0,c.disposed||n||c._rotate(),!g.isRotating&&c._plotGraphicClick.call(e.graphic,f),
delete d.clicked,g.isRotating&&(setTimeout(function(){g.isRotating=!1},0),a.raiseEvent("RotationEnd",{startingAngle:r=c._startingAngle(),changeInAngle:r-g._rotationalStartAngle},c.chartInstance)))},_plotRollOver:function(a){var r=this.plotItem||this.data("plotItem"),e=r.chart,c=e.components.dataset[0].config,d,n;c.isRotating||(q.call(this,e,a,"DataPlotRollOver"),e.onPlotHover(this,!0));c.isHovered=!0;(a=r.innerDiameter)&&(d=r.centerLabelConfig)&&(n=d.label)&&e.drawDoughnutCenterLabel(n,r.center[0],
r.center[1],a,a,d,!1)},onPlotHover:function(a,r){var e=a.data("plotItem"),c=e.center,d=e.rolloverProperties||{},n=r?d.color:e.color,g=r?d.borderWidth:e.borderWidth,ga=r?d.borderColor:e.borderColor;n&&(r&&(n.cx=c[0],n.cy=c[1],n.r=e.radius),d.enabled&&e.graphic.attr({fill:h(n),"stroke-width":g,stroke:ga}))},_plotRollOut:function(a){var r=this.plotItem||this.data("plotItem"),e=r.chart,c=e.components.dataset[0].config,d,n;c.isRotating||(q.call(this,e,a,"DataPlotRollOut"),e.onPlotHover(this,!1));c.isHovered=
!1;(a=r.innerDiameter)&&(d=c.centerLabelConfig)&&((n=d.label)||!n)&&e.drawDoughnutCenterLabel(n,r.center[0],r.center[1],a,a,d,!1)},_rotate:function(){var a,r,e=this.components.dataset[0],c=e.config,d=e.components.data,n=this.config,g=c.slicingDistance,e=e.config,ga=ba/e.valueTotal,T=n.canvasLeft+.5*n.canvasWidth,n=n.canvasTop+.5*n.canvasHeight,w=c.pieMinRadius,V=.5*(c.piePlotOptions.innerSize||0),S,ca,F,f,u;S=(c.startAngle||0)%ba;for(u=0;u<d.length;u+=1)F=d[u].config,f=d[u].graphics,a=F.y,null!==
a&&void 0!==a&&(ca=S,S-=e.singletonCase?ba:a*ga,a=.5*(S+ca),F.angle=a,F.transX=E(a)*g,F.transY=t(a)*g,F.slicedTranslation="t"+E(a)*g+qa+t(a)*g,(r=F._rotateAttrs)||(r=F._rotateAttrs={ringpath:[],transform:K}),a=r.ringpath,a[0]=T,a[1]=n,a[2]=w,a[3]=V,a[4]=S,a[5]=ca,r.transform=F.sliced?F.slicedTranslation:K,f.element.attr(r));this.placeDataLabels(!0,d,c)},getPlotData:function(a,r){var e=this.components.dataset[0],c=e.components.data[a].config,e=e.config.userData||(e.config.userData=[]),d,n;if(e[a])e=
e[a];else{e=e[a]={};for(n in c)"object"!==typeof(d=c[n])&&"function"!==typeof d&&0!==n.indexOf("_")&&(e[n]=d);e.value=e.y;e.categoryLabel=e.label=e.seriesName;delete e.y;delete e.total;delete e.doNotSlice;delete e.name;delete e.seriesName;delete e.centerAngle;delete e.showInLegend;delete e.angle;delete e.endAngle;delete e.isVisible;delete e.setColor;delete e.slicedTranslation;delete e.startAngle;delete e.transX;delete e.transY;delete e.pValue}e.sliced=r;return e},_plotGraphicClick:function(f){var r,
e=this.element||this,c=e.plotItem||e.data("plotItem"),d=e.data("eventArgs")||{},n=c.chart,g=c.index,ga=n.components.dataset[0],T=n.config,w=ga.config,V=w.enableMultiSlicing,S=ga.components.data[g],ca=ga.config.labelDrawID,F=S.graphics,S=S.config,b=S.doNotSlice,u;r=S.slicedTranslation;var k=n.get("config","animationObj"),ga=k.duration||200,G=k.dummyObj,L=k.animObj,k=k.animType,A=e.data("eventArgs").link,A=A&&A.split(/\s*[\-\:]\s*/)[0].toLowerCase();!w.isRotating&&f&&q.call(e,n,f);if(!(w.isRotating||
w.singletonCase||b))if("newchart"===A||"newmap"===A)T.linkedChartOpened=!0,ca&&y.removeJob(ca);else if(T.linkedChartOpened=!1,f=!V&&n.sliceInOtherPies(g),!(u=S.sliced)||!f){if(x&&!l){f=(new Date).getTime();if(c.lastSliceTimeStamp&&400>f-c.lastSliceTimeStamp)return;c.lastSliceTimeStamp=f}T=F.element;c=F.connector;w=F.label||F.dataLabel;r="object"===typeof r?"t"+r:r;V=S.connectorPath;F=(u?-1:1)*S.transX;f=(u?-1:1)*S.transY;e=T.data("eventArgs")||T.data("eventArgs",{});a.raiseEvent("slicingStart",{slicedState:u,
dataIndex:"index"in d&&d.index,data:n.getPlotData(g,u)},n.chartInstance);T.animateWith(G,L,{transform:u?"t0,0":r},ga,k,function(){a.raiseEvent("slicingEnd",{slicedState:u,dataIndex:"index"in d&&d.index,data:n.getPlotData(g,u)},n.chartInstance)});w&&w.x&&((r=w.data("textPos"))||(r=w.data("textPos",{x:w.x,y:w.y})),w.animateWith(G,L,{x:w.x+(u?0:F)},ga,k),r.x=w.x+(u?0:F));V&&(r=V.slice(0),r[1]+=F,r[2]+=f,r[4]+=F,r[6]+=F,c.animateWith(G,L,{path:r},ga,k),S.connectorPath=r);return e.isSliced=u=S.sliced=
!u}},sliceInOtherPies:function(a){var r=this.components.dataset[0],e=r.components.data,c=e.length,d=0,n;for(r.enableMultiSlicing=!0;c--;)c!==a&&(n=e[c]).config.sliced&&++d&&this._plotGraphicClick.call(n.graphics);r.enableMultiSlicing=!1;return!!d},placeDataLabels:function(){var a=function(e,c){return e.point.value-c.point.value},r=function(e,c){return e.angle-c.angle},e=["start","start","end","end"],c=[-1,1,1,-1],d=[1,1,-1,-1];return function(n,g,ga,T){var w=this.config,V=this.components,S=V.dataset[0],
ca=V.legend.config,F=ca.symbolWidth,q=ca.align,ca=ca.borderWidth,u=S.graphics,b=S.config,G=w.canvasLeft,y=w.canvasTop,S=w.canvasWidth,A=G+.5*w.canvasWidth,l=y+.5*w.canvasHeight,Ba=this.linkedItems.smartLabel,ya=b.dataLabelOptions,v=ya.style,h=Q(ia(parseFloat(v.lineHeight)),12),N=1===g.length?w.singletonPlaceValue:!1,x=ya.skipOverlapLabels,R=ya.manageLabelOverflow,D=ya.connectorPadding,J;J=T&&T.metrics||[A,l,2*b.pieMinRadius,b.innerSize||0];var M=J[1],z=J[0];T=.5*J[2];var b=[[],[],[],[]],A=ga.labelsRadius=
T+ya.distance,Z=l=parseInt(v.fontSize,10),W=Z/2,D=[D,D,-D,-D];ga=ga.labelsMaxInQuadrant=ra(A/Z);var ya=ya.isSmartLineSlanted,H=J[3]/2,X,O,K,p,C,m,B,P,ha,Ea,I,oa,la,va,fa;J=Number.POSITIVE_INFINITY;var ja,pa;O=[];K=[];O=this.get("config","animationObj");var na=n?0:O.duration||0,qa=O.dummyObj,sa=O.animObj,ua=O.animType,ta=this._plotDragMove,Sa=this._plotDragStart,Ka=this._plotDragEnd,za=this._plotRollOver,aa=this._plotRollOut,wa=V.paper,xa=u.dataLabelContainer,da,Ga;Ba.useEllipsesOnOverflow(w.useEllipsesWhenOverflow);
n||Ba.setStyle(v);if(1==g.length&&!H&&N)O=g[0],(da=O.config._textAttrs).text&&(pa=O.graphics,ja=O.config,I=pa.label,O.slicedTranslation=[G,y],da["text-anchor"]="middle",da.x=0,da.y=0,da.transform=["t",z,M],I?I.animateWith(qa,sa,da,na,ua):I=pa.label=wa.text(da,Ga,xa).drag(ta,Sa,Ka).hover(za,aa),I.x=z,I.data("textPos",{x:z,y:M}).data("plotItem",da.plotItem).data("eventArgs",da.eventArgs),null!==ja.y&&void 0!==ja.y&&I.show(),pa.connector&&pa.connector.attr({path:[]}));else if(N)fa=H+(T-H)/2,f(g,function(e){ja=
e.config;(da=ja._textAttrs).text&&(pa=e.graphics,I=pa.label,null!==ja.y&&void 0!==ja.y&&((Ea=pa.connector)&&Ea.show(),I&&I.show()),da.transform="t0,0",ha=ja.angle,P=M+fa*t(ha),p=z+fa*E(ha),da._x=p,da._y=P,e.sliced&&(va=e.slicedTranslation,oa=va[0]-G,la=va[1]-y,p+=oa,P+=la),da["text-anchor"]="middle",da.x=0,da.y=0,da.transform=["t",p,P],I?I.animateWith(qa,sa,da,na,ua):I=pa.label=wa.text(da,Ga,xa).drag(ta,Sa,Ka).hover(za,aa),I.x=da._x,I.x=da._x,I.y=da._y,I.data("plotItem",da.plotItem).data("eventArgs",
da.eventArgs),da.visibility===L&&I.show())});else{for(n=g.length-1;0<=n;n--)if(O=g[n],ja=O.config,da=ja._textAttrs,da.text=ja.displayValue)pa=O.graphics,null!==ja.y&&void 0!==ja.y&&(I=pa.label,(Ea=pa.connector)&&Ea.show(),I&&I.show()),da.text=ja.displayValue,da.transform="t0,0",ha=ja.angle%ba,0>ha&&(ha=ba+ha),V=0<=ha&&ha<U?1:ha<ma?2:ha<Aa?3:0,b[V].push({point:O,angle:ha});for(n=g=4;n--;){if(x&&(V=b[n].length-ga,0<V))for(b[n].sort(a),u=b[n].splice(0,V),V=0,N=u.length;V<N;V+=1)O=u[V].point,da=O.config._textAttrs,
pa=O.graphics,pa.label&&pa.label.attr("visibility","hidden"),pa.connector&&pa.connector.attr({visibility:"hidden"});b[n].sort(r)}n=ka(b[0].length,b[1].length,b[2].length,b[3].length);V=ka(Y(n,ga)*Z,A+Z);K=b[0].concat(b[1]);O=b[2].concat(b[3]);for(n=K.length-1;0<=n;n--)u=K[n].point.config,delete u.clearance,delete u.clearanceShift,H=ea(V*t(u.angle)),Math.abs(J-H)<2*h&&(u.clearance=0,K[n+1].point.clearanceShift=h/2),J=H;J=Number.POSITIVE_INFINITY;n=0;for(N=O.length;n<N;n++)u=O[n].point.config,delete u.clearance,
delete u.clearanceShift,H=ea(V*t(u.angle)),Math.abs(J-H)<2*h&&(u.clearance=0,O[n-1].point.clearanceShift=h/2),J=H;b[1].reverse();for(b[3].reverse();g--;){u=b[g];N=u.length;x||(Z=N>ga?V/N:l,W=Z/2);h=N*Z;J=V;for(n=0;n<N;n+=1,h-=Z)H=ea(V*t(u[n].angle)),J<H?H=J:H<h&&(H=h),J=(u[n].oriY=H)-Z;v=e[g];N=V-(N-1)*Z;J=0;for(n=u.length-1;0<=n;--n,N+=Z)if(O=u[n].point,ha=u[n].angle,ja=O.config,da=ja._textAttrs,da.text&&(Ga=ja._textCss,pa=O.graphics,O=ja.sliced,I=pa.label,H=ea(V*t(ha)),H<J?H=J:H>N&&(H=N),J=H+Z,
h=void 0===ja.clearance?2*ia(Q(parseFloat(ja.style.border),12),12):2*ia(Q(parseFloat(ja.style.border),ja.clearance)),m=(H+u[n].oriY)/2,H=z+d[g]*A*E(k.asin(m/V)),m*=c[g],m+=M,B=M+T*t(ha),K=z+T*E(ha),(2>g&&H<K||1<g&&H>K)&&(H=K),p=H+D[g],P=m-W-2,C=p+D[g],da._x=C,R&&(X=1<g?C-w.canvasLeft:w.canvasLeft+S-C,Ba.setStyle(ja.style),h=Q(ia(parseFloat(ja.style.lineHeight)),12)+h,"right"===q&&0<ja.transX&&(X-=F+2*ca),h=Ba.getSmartText(ja.displayValue,X,h),void 0===ja.clearance&&h.height>Z&&(m+=Z),"right"!==q&&
0<ja.transY&&(m-=Z),da.text=h.text,da.tooltip=h.tooltext),da._y=P,O&&(oa=ja.transX,la=ja.transY,p+=oa,H+=oa,K+=oa,B+=la,C+=oa),da["text-anchor"]=v,da.vAlign="middle",da.x=C,da.y=m,(h=I&&I.data("textPos"))?I.attr({x:h.x,y:h.y}).animateWith(qa,sa,da,na):I=pa.label=wa.text(da,Ga,xa).drag(ta,Sa,Ka).hover(za,aa),I.x=da._x,I._x=da._x,I.y=da._y,da.tooltip&&(I.tooltip(da.tooltip),delete da.tooltip),da.visibility===L&&I.show(),I.data("textPos",{x:C,y:m}).data("plotItem",da.plotItem).data("eventArgs",da.eventArgs),
Ea=pa.connector))ja.connectorPath=h=["M",K,B,"L",ya?H:K,m,p,m],(O=Ea.data("connectorPath"))?w.clicked||Ea.attr({path:O.path}).animateWith(qa,sa,{path:h},na):Ea.attr({path:h}),Ea.data("connectorPath",{path:h})}}}}(),_spaceManager:function(){var a=this.config,r=this.components,e=r.dataset[0],c=e.components.data,d=e.config,n=r.legend,g=r.colorManager,ga=this.linkedItems.smartLabel,T=d.dataLabelCounter,w=0,f=this.jsonData.chart,r=Q(f.managelabeloverflow,0),S=Q(f.slicingdistance),ca=d.preSliced||a.allPlotSliceEnabled!==
wa||f.showlegend===ta&&f.interactivelegend!==wa?ea(Q(S,20)):0,F=Q(f.pieradius,0),b=(S=Q(f.enablesmartlabels,f.enablesmartlabel,1))?Q(f.skipoverlaplabels,f.skipoverlaplabel,1):0,u=Q(f.issmartlineslanted,1),q=T?Q(f.labeldistance,f.nametbdistance,5):ca,k=Q(f.smartlabelclearance,5),G=a.width,A=a.height,y=(this._manageActionBarSpace(.225*A)||{}).bottom,G=G-(a.marginRight+a.marginLeft),A=A-(a.marginTop+a.marginBottom)-(y?y+a.marginBottom:0),y=Y(A,G),L=N(f.smartlinecolor,g.getColor("plotFillColor")),t=Q(f.smartlinealpha,
100),E=Q(f.smartlinethickness,.7),e=d.dataLabelOptions=e._parseDataLabelOptions(),g=e.style,g=T?Q(parseInt(g.lineHeight,10),12):0,h=0===F?.15*y:F,l=2*h,v={bottom:0,right:0},R=d.pieYScale,y=d.pieSliceDepth;e.connectorWidth=E;e.connectorPadding=Q(f.connectorpadding,5);e.connectorColor=ua(L,t);T&&(S&&(q=k),q+=ca);k=l+2*(g+q);k=this._manageChartMenuBar(k<A?A-k:A/2);A-=(k.top||0)+(k.bottom||0);d.showLegend&&(this.hasLegend=!0,N(f.legendposition,P).toLowerCase()!==fa?(v=n._manageLegendPosition(A/2),A-=
v.bottom):(v=n._manageLegendPosition(A/2),G-=v.right));this._allocateSpace(v);ga.useEllipsesOnOverflow(a.useEllipsesWhenOverflow);if(1!==T)for(;T--;)ga.setStyle(c[T].config.style||a.dataLabelStyle),n=ga.getOriSize(c[T].config.displayValue),w=ka(w,n.width);0===F?h=this._stubRadius(G,w,A,q,ca,g,h):(d.slicingDistance=ca,d.pieMinRadius=h,e.distance=q);a=A-2*(h*R+g);d.managedPieSliceDepth=y>a?y-a:d.pieSliceDepth;e.isSmartLineSlanted=u;e.enableSmartLabels=S;e.skipOverlapLabels=b;e.manageLabelOverflow=r},
_stubRadius:function(a,r,e,c,d,n,g){var ga=this.components.dataset[0],f=ga.config,w=Q(this.jsonData.chart.slicingdistance),ga=f.dataLabelOptions||(f.dataLabelOptions=ga._parseDataLabelOptions()),V=0,V=Y(a/2-r-d,e/2-n)-c;V>=g?g=V:w||(d=c=ka(Y(c-(g-V),d),10));f.slicingDistance=d;f.pieMinRadius=g;ga.distance=c;return g},getDataSet:function(a){return this.components.dataset[a]},_startingAngle:function(a,r){var e,c=this.components.dataset[0].config,d=(e=c.startAngle)*-na+(0>-1*e?360:0);isNaN(a)||(c.singletonCase||
c.isRotating?d=c.startAngle:(a+=r?d:0,c.startAngle=-a*sa,this._rotate(a),d=a));return v(100*((d%=360)+(0>d?360:0)))/100},eiMethods:{isPlotItemSliced:function(a){var r,e,c,d=this.apiInstance;return d&&d.components.dataset&&(c=d.components.dataset[0])&&(r=c.components.data)&&r.length&&r[a]&&(e=r[a].config)&&e.sliced},addData:function(){var a,r=this.apiInstance;return r&&r.components.dataset&&(a=r.components.dataset[0])&&a.addData.apply(a,arguments)},removeData:function(){var a,r=this.apiInstance;return r&&
r.components.dataset&&(a=r.components.dataset[0])&&a.removeData.apply(a,arguments)},updateData:function(){var a,r=this.apiInstance;return r&&r.components.dataset&&(a=r.components.dataset[0])&&a.updateData.apply(a,arguments)},slicePlotItem:function(a,r,e){var c,d,n,g,ga,f=!!r,w=this.apiInstance,V=w.chartInstance.args.asyncRender,S=w.getJobList();if(e||V)S.eiMethods.push(y.addJob(function(){ga=w&&w.components.dataset&&(c=w.components.dataset[0])&&(d=c.components.data)&&(g=d.length)&&d[a=c.config.reversePlotOrder?
g-a-1:a]&&(n=d[a].config)&&((f!==n.sliced||void 0===r)&&w._plotGraphicClick.call(d[a].graphics.element)||n.sliced);"function"===typeof e&&e(ga)},G.postRender));else return w&&w.components.dataset&&(c=w.components.dataset[0])&&(d=c.components.data)&&(g=d.length)&&d[a=c.config.reversePlotOrder?g-a-1:a]&&(n=d[a].config)&&((f!==n.sliced||void 0===r)&&w._plotGraphicClick.call(d[a].graphics.element)||n.sliced)},centerLabel:function(a,r){var e=this.apiInstance,c=e.getJobList(),d=function(){var c=e.components.dataset[0],
d=c.config,ga=d.piePlotOptions.innerSize,f=d.pieCenter,w=f[0],f=f[1],d=d.centerLabelConfig,V;if("object"!==typeof r)r=d;else for(V in d)void 0===r[V]&&(r[V]=d[V]);r.label=a;c.centerLabelConfig=r;ga&&e.drawDoughnutCenterLabel(a||"",w,f,ga,ga,r,!0)};e.chartInstance.args.asyncRender?c.eiMethods.push(y.addJob(d,G.postRender)):d()},startingAngle:function(a,r,e){var c=this.apiInstance,d=c.chartInstance.args.asyncRender,n=c.getJobList(),g;if(e||d)n.eiMethods.push(y.addJob(function(){g=c._startingAngle(a,
r);"function"===typeof e&&e(g)},G.postRender));else return c._startingAngle(a,r)}}},B.guageBase,{plotborderthickness:1,alphaanimation:0,singletonPlaceValue:!0,usedataplotcolorforlabels:0,enableslicing:ta})}]);B.register("module",["private","modules.renderer.js-pie3d",function(){function a(r){this.config={};this.linkedItems={chart:r}}var b=this,m=b.hcLib,C=m.Raphael,p=m.hasTouch,K=b.window,N=m.getPosition,Q=m.pluck,h=m.pluckNumber,x=m.each,l=m.plotEventHandler,f=8===K.document.documentMode?"visible":
"",q=Math,y=q.sin,G=q.cos,L=q.round,k=q.atan2,t=q.min,E=q.max,v=q.abs,z=q.PI,B=q.ceil,ka=q.floor,ea=Math.PI,va=ea/2,ia=2*ea,ra=ea+va,sa=m.chartAPI,na=!m.CREDIT_REGEX.test(K.location.hostname),ma=function(r,e,c,d,n){return k((e-c[1]-d.top)/n,r-c[0]-d.left)},U=m.graphics.getDarkColor,ba=m.graphics.getLightColor,Aa=m.getFirstValue,ua=m.graphics.convertColor,P=m.COMMASTRING,fa=m.toRaphaelColor,qa=m.hasSVG,wa=function(r,e){for(var c=[],d=0,n=r.length;d<n;d++)c[d]=e.call(r[d],r[d],d,r);return c},ta=function(r,
e){var c=e?360:ia;r=(r||0)%c;return 0>r?c+r:r},xa={},Fa={};sa("pie3d",{defaultDatasetType:"Pie3D",applicableDSList:{Pie3D:!0},is3D:!0,friendlyName:"3D Pie Chart",fireGroupEvent:!0,creditLabel:na,getPointColor:function(r){return r},_configureManager:function(){var r=this.components.dataset[0],e=r.config,c=r.components,r=c.Pie3DManager,c=c.data;r&&r.configure(e.pieSliceDepth,1===c.length,e.use3DLighting,!1)},defaultPlotShadow:0,_preDrawCalculate:function(){var r,e,c=this.config,d=0,n=this.components.dataset[0],
g=n.config;r=n.components;e=g.dataLabelOptions;var ga=g.pie3DOptions=n._parsePie3DOptions(),f=Q(g.startAngle,0)%ia,w=g.managedPieSliceDepth,V=g.slicedOffset=ga.slicedOffset,S=c.canvasWidth,ca=c.canvasHeight,F=[c.canvasLeft+.5*S,c.canvasTop+.5*ca-.5*w],b,u,c=r.data,k,E=t(S,ca),l,A=e.distance;b=g.pieYScale;var v=g.slicedOffsetY||(g.slicedOffsetY=V*g.pieYScale);k=r.Pie3DManager;F.push(2*g.pieMinRadius,ga.innerSize||0);F=wa(F,function(e,c){return(l=/%$/.test(e))?[S,ca-w,E,E][c]*parseInt(e,10)/100:e});
F[2]/=2;F[3]/=2;F.push(F[2]*b);F.push((F[2]+F[3])/2);F.push(F[5]*b);n.getX=function(e,c){u=q.asin((e-F[1])/(F[2]+A));return F[0]+(c?-1:1)*G(u)*(F[2]+A)};g.center=F;x(c,function(e){d+=e.config.y});g.labelsRadius=F[2]+A;g.labelsRadiusY=g.labelsRadius*b;g.quadrantHeight=(ca-w)/2;g.quadrantWidth=S/2;n=L(1E3*f)/1E3;ga=n+ia;f=h(parseInt(e.style.fontSize,10),10)+4;g.maxLabels=ka(g.quadrantHeight/f);g.labelFontSize=f;g.connectorPadding=h(e.connectorPadding,5);g.isSmartLineSlanted=Q(e.isSmartLineSlanted,!0);
g.connectorWidth=h(e.connectorWidth,1);g.enableSmartLabels=e.enableSmartLabels;k||(k=r.Pie3DManager=new a(this),this.get("graphics","datasetGroup").trackTooltip(!0));this._configureManager();for(r=c.length-1;0<=r;--r)e=c[r],e=e.config,f=n,k=d?e.y/d:0,n=L(1E3*(n+k*ia))/1E3,n>ga&&(n=ga),b=n,e.shapeArgs={start:L(1E3*f)/1E3,end:L(1E3*b)/1E3},e.centerAngle=u=(b+f)/2%ia,e.slicedTranslation=[L(G(u)*V),L(y(u)*v)],f=G(u)*F[2],g.radiusY=b=y(u)*F[4],e.tooltipPos=[F[0]+.7*f,F[1]+b],e.percentage=100*k,e.total=
d},placeDataLabels:function(){var r=function(e,c){return e.point.value-c.point.value},e=function(e,c){return e.angle-c.angle},c=["start","start","end","end"],d=[-1,1,1,-1],n=[1,1,-1,-1];return function(g){var a,T,w=this.config,V=this.components,S=V.dataset[0],ca=S.config,F=S.components.data,b=ca.piePlotOptions,u=w.canvasLeft,k=w.canvasTop,l=w.canvasWidth,N=u+.5*w.canvasWidth,A=k+.5*w.canvasHeight,K=this.linkedItems.smartLabel,Ba=ca.dataLabelOptions,ya=Ba.style;a=h(B(parseFloat(ya.lineHeight)),12);
a=Aa(Ba.placeInside,!1);var z=Ba.skipOverlapLabels,m=Ba.manageLabelOverflow,p=Ba.connectorPadding,C=Ba.distance,R=Ba.connectorWidth,D=[[],[],[],[]],J=parseInt(ya.fontSize,10),M=J,Q=M/2,p=[p,p,-p,-p],Z=Ba.isSmartLineSlanted,W,H,X,O,ka,P,Da,Ra,fa,U,ha,Ea,I,oa,la,C=0<C,ba=ca.center||(ca.center=[N,A,b.size,b.innerSize||0]),na=ba[1],ja=ba[0],b=ba[2],N=ba[4],A=ca.labelsRadius,pa=L(100*ca.labelsRadiusY)/100,qa=ca.maxLabels,sa=ca.enableSmartLabels,ma=ca.pieSliceDepth/2;H=this.get("config","animationObj");
var ua=g?0:H.duration,ta=H.dummyObj,wa=H.animObj,xa=H.animType,za,aa,Ta=this._plotDragMove,Fa=this._plotDragStart,da=this._plotDragEnd,Ga=this._plotRollOver,La=this._plotRollOut,Ma=V.paper,Ua=S.graphics.dataLabelContainer;K.useEllipsesOnOverflow(w.useEllipsesWhenOverflow);if(ca.dataLabelCounter)if(g||K.setStyle(ya),1==F.length)H=F[0],oa=H.graphics,I=H.config,aa=I._textAttrs,za=I._textCss,ha=oa.label,la=oa.connector,I.slicedTranslation=[u,k],null!==I.y&&void 0!==I.y&&(aa.visibility=f,aa["text-anchor"]=
"middle",aa.x=ja,aa.y=na+Q-2,aa._x=ja),ha?ha.animateWith(ta,wa,aa,ua,xa):ha=oa.label=Ma.text(aa,za,Ua).drag(Ta,Fa,da).hover(Ga,La),aa._x&&(ha.x=aa._x,delete aa.x),ha.data("plotItem",aa.plotItem).data("eventArgs",aa.eventArgs),aa.visibility===f&&ha.show(),la&&la.hide();else if(a)x(F,function(e){oa=e.graphics;I=e.config;aa=I._textAttrs;ha=oa.label;if(null!==I.y&&void 0!==I.y){U=I.angle;fa=na+ba[6]*y(U)+Q-2;ka=ja+ba[5]*G(U);aa._x=ka;aa._y=fa;if(I.sliced){e=e.slicedTranslation;var c=e[1]-k;ka+=e[0]-u;
fa+=c}aa.visibility=f;aa.align="middle";aa.x=ka;aa.y=fa}ha?ha.animateWith(ta,wa,aa,ua,xa):ha=oa.label=Ma.text(aa,za,Ua).drag(Ta,Fa,da).hover(Ga,La);ha.data("plotItem",aa.plotItem).data("eventArgs",aa.eventArgs);aa.visibility===f&&ha.show();ha.x=aa._x;ha._x=aa._x;ha._y=aa._y});else{x(F,function(e){oa=e.graphics;I=e.config;za=I._textCss;aa=I._textAttrs;if(aa.text=I.displayValue)oa=e.graphics,null!==I.y&&void 0!==I.y&&(ha=oa.label,(la=oa.connector)&&la.show(),ha&&ha.show()),ha=oa.label,U=I.angle,0>U&&
(U=ia+U),Ea=0<=U&&U<va?1:U<ea?2:U<ra?3:0,D[Ea].push({point:e,angle:U})});for(V=w=4;V--;){if(z&&(S=D[V].length-qa,0<S))for(D[V].sort(r),ca=D[V].splice(0,S),S=0,a=ca.length;S<a;S+=1)H=ca[S].point,oa=H.graphics,oa.label&&oa.label.attr("visibility","hidden"),oa.connector&&oa.connector.attr({visibility:"hidden"});D[V].sort(e)}V=E(D[0].length,D[1].length,D[2].length,D[3].length);pa=E(t(V,qa)*M,pa+M);D[1].reverse();D[3].reverse();for(K.setStyle(ya);w--;){S=D[w];a=S.length;z||(M=a>qa?pa/a:J,Q=M/2);ca=a*M;
ya=pa;for(V=0;V<a;V+=1,ca-=M)H=v(pa*y(S[V].angle)),ya<H?H=ya:H<ca&&(H=ca),ya=(S[V].oriY=H)-M;ca=c[w];F=pa-(a-1)*M;ya=0;for(V=S.length-1;0<=V;--V,F+=M)H=S[V].point,oa=H.graphics,I=H.config,aa=I._textAttrs,za=I._textCss,null!==I.y&&aa.text&&(U=S[V].angle,X=I.sliced,ha=oa.label,H=v(pa*y(U)),H<ya?H=ya:H>F&&(H=F),ya=H+M,Da=(H+S[V].oriY)/2,H=ja+n[w]*A*G(q.asin(Da/pa)),Da*=d[w],Da+=na,Ra=na+N*y(U),O=ja+b*G(U),(2>w&&H<O||1<w&&H>O)&&(H=O),ka=H+p[w],fa=Da+Q-2,P=ka+p[w],aa._x=P,m&&(W=1<w?P-u:u+l-P,K.setStyle(I.style),
a=h(B(parseFloat(I.style.lineHeight)),12)+(2*B(parseFloat(I.style.border),12)||0),a=K.getSmartText(I.displayValue,W,a),aa.text=a.text,aa.tooltip=a.tooltext),U<ea&&(Da+=ma,Ra+=ma,fa+=ma),aa._y=fa,X&&(a=I.transX,X=I.transY,ka+=a,H+=a,O+=a,Ra+=X,P+=a),aa.visibility=f,aa["text-anchor"]=ca,(a=ha&&ha.data("textPos"))&&ha.attr({x:a.x,y:a.y}),aa.x=P,aa.y=Da,!g&&a?ha.animateWith(ta,wa,aa,ua,xa):ha?aa&&ha.attr(aa):ha=oa.label=Ma.text(aa,za,Ua).drag(Ta,Fa,da).hover(Ga,La),ha.data("textPos",{x:P,y:Da}).data("plotItem",
aa.plotItem).data("eventArgs",aa.eventArgs),ha.x=aa._x,ha._x=aa._x,ha.y=aa._y,aa.tooltip&&(ha.tooltip(aa.tooltip),delete aa.tooltip),C&&R&&sa&&(la=oa.connector,I.connectorPath||(T=!0),I.connectorPath=a=["M",O,Ra,"L",Z?H:O,Da,ka,Da],a={path:a,"stroke-width":R,stroke:Ba.connectorColor||"#606060",visibility:f},la&&(g||T?la.attr(a):la.animateWith(ta,wa,a,ua,xa))))}}}}(),animate:function(){var r,e,c,d,n=this,a=n.components.dataset[0],f=a.components.data;r=n.graphics.datasetGroup;var T=f.length;e=a.config.alphaAnimation;
c=function(){n.disposed||n.disposing||n.placeDataLabels(!1)};var w=n.get("config","animationObj"),a=w.duration||0,V=w.dummyObj,S=w.animObj,w=w.animType;if(e)r.attr({opacity:0}),r.animateWith(V,S,{opacity:1},a,w,c);else for(r=0;r<T;r++)if(e=f[r],c=e.graphics,e=e.config,d=e.shapeArgs,e=2*z,c=c.element)c.attr({start:e,end:e}),c=d.start,d=d.end,(void 0).animateWith(V,S,{cx:c-e,cy:d-e},a,w)},_rotate:function(a){var e=this.components.dataset[0],c=e.config,e=e.components,d=e.data,n=c.slicedOffset,g=c.slicedOffsetY,
f=c.startAngle,T;a=isNaN(a)?-c._lastAngle:a;T=(a-f)%360;c.startAngle=h(a,c.startAngle)%360;T=-(T*z)/180;e.Pie3DManager&&e.Pie3DManager.rotate(T);x(d,function(e){var c=[],d=e.config;e=e.graphics.element;var c=d.shapeArgs,a=c.start+=T,c=c.end+=T,r=d.angle=ta((a+c)/2),a=d.sliced,c=G(r),r=y(r),c=d.slicedTranslation=[L(c*n),L(r*g)];d.transX=c[0];d.transY=c[1];d.slicedX=a?G(T)*n:0;d.slicedY=a?y(T)*g:0;e&&a&&e.attr({transform:"t"+c[0]+","+c[1]})});this.placeDataLabels(!0,d)},_plotRollOver:function(a){var e=
this.data("plotItem"),c=e.chart,d=c.config,n=c.components.dataset[0],g=n.components.data[e.index],e=g.graphics.element,g=g.config.hoverEffects;n.config.isRotating||(l.call(e,c,a,"DataPlotRollOver"),g.enabled&&e.attr(g));d.isHovered=!0},_plotRollOut:function(a){var e=this.data("plotItem"),c=e.chart,d=c.config,n=c.components.dataset[0],g=n.components.data[e.index],e=g.config,g=g.graphics.element;n.config.isRotating||(l.call(g,c,a,"DataPlotRollOut"),g.attr({color:e.color.color.split(",")[0],alpha:e._3dAlpha,
borderWidth:e.borderWidth,borderColor:e.borderColor}));d.isHovered=!1},_plotDragStart:function(a,e){var c=this.data("plotItem"),d=e[0],n=e[1],g=c.chart,c=g.components.dataset[0].config;c.isRightClicked=p||0===a.button||1===a.button?!1:!0;c.enableRotation&&!c.isRightClicked&&(c.isRotating=!1,d=ma.call(a,d,n,c.center,c.chartPosition=N(g.linkedItems.container),c.pieYScale),c.dragStartAngle=d,c._lastAngle=-c.startAngle,c.startingAngleOnDragStart=c.startAngle)},_plotDragEnd:function(a){var e=this.data("plotItem"),
c=e.index,e=e.chart,d=e.config,n=e.components.dataset[0],g=n.config,n=n.components.Pie3DManager,f=g.startAngle;g.isRightClicked||(g.isRotating?(setTimeout(function(){g.isRotating=!1},0),b.raiseEvent("rotationEnd",{startingAngle:ta(f,!0),changeInAngle:f-g.startingAngleOnDragStart},e.chartInstance),!d.isHovered&&n.colorObjs[c]&&n.onPlotHover(c,!1)):e._plotGraphicClick.call(this,a))},_plotDragMove:function(a,e){var c=this.data("plotItem"),d=e[1],n=e[2],g=e[3],f=c.chart,c=f.components.dataset[0].config;
isNaN(e[0])||isNaN(d)||!c.enableRotation||c.singletonCase||c.isRightClicked||(d=ma.call(a,n,g,c.center,c.chartPosition,c.pieYScale),c.isRotating||(c.dragStartAngle!==d&&(c.isRotating=!0),b.raiseEvent("rotationStart",{startingAngle:ta(c.startAngle,!0)},f.chartInstance)),n=d-c.dragStartAngle,c.dragStartAngle=d,c.moveDuration=0,c._lastAngle+=180*n/z,d=(new Date).getTime(),c._lastTime&&!(c._lastTime+c.timerThreshold<d))||(c._lastTime||f._rotate(),c.timerId=setTimeout(function(){f.disposed&&f.disposing||
f._rotate()},c.timerThreshold),c._lastTime=d)},_stubRadius:function(a,e,c,d,n,g,f){var T=this.components.dataset[0],w=T.config,b=h(T.config.slicingdistance),T=w.dataLabelOptions||(w.dataLabelOptions=T._parseDataLabelOptions()),S=0,S=w.pieYScale;c-=w.pieSliceDepth;S=t(a/2-e-n,(c/2-g)/S)-d;S>=f?f=S:b||(n=d=E(t(d-(f-S),n),10));w.slicingDistance=n;w.pieMinRadius=f;T.distance=d;return f},_startingAngle:function(a,e){var c,d=this.components.dataset[0].config,n=(c=d.startAngle)+(0>c?360:0);isNaN(a)||d.singletonCase||
d.isRotating||(a+=e?n:0,this._rotate(a),n=a);return L(100*((n%=360)+(0>n?360:0)))/100}},sa.pie2d,{plotborderthickness:.1,alphaanimation:1});C._availableAnimAttrs&&C._availableAnimAttrs.cx&&(C._availableAnimAttrs.innerR=C._availableAnimAttrs.depth=C._availableAnimAttrs.radiusYFactor=C._availableAnimAttrs.start=C._availableAnimAttrs.end=C._availableAnimAttrs.cx);a.prototype={configure:function(a,e,c,d){var n=this.linkedItems.chart,g=n.get("components","paper"),n=n.get("graphics","datasetGroup");"object"===
typeof a&&(a=a.depth,e=a.hasOnePoint,c=a.use3DLighting,d=a.isDoughnut);this.renderer||(this.renderer=g);this.hasOnePoint=e;this.use3DLighting=c;this.isDoughnut=d;this.depth=a;!this.bottomBorderGroup&&(this.bottomBorderGroup=g.group("bottom-border",n));this.bottomBorderGroup.attr({transform:"t0,"+a});!this.slicingWallsBackGroup&&(this.slicingWallsBackGroup=g.group("slicingWalls-back-Side",n));!this.slicingWallsFrontGroup&&(this.slicingWallsFrontGroup=g.group("slicingWalls-front-Side",n));!this.topGroup&&
(this.topGroup=g.group("top-Side",n));!this.pointElemStore&&(this.pointElemStore=[]);!this.slicingWallsArr&&(this.slicingWallsArr=[]);this.moveCmdArr=["M"];this.lineCmdArr=["L"];this.closeCmdArr=["Z"];this.colorObjs=[]},getArcPath:function(a,e,c,d,n,g,f,T,w,b){return c==n&&d==g?[]:["A",f,T,0,b,w,n,g]},_parseSliceColor:function(a,e,c){var d,n,g,f,T,w,b,S,ca,F,q,u,k,G,y;y=3;var A=(d=this.use3DLighting)?xa:Fa,L=c.radiusYFactor,E=c.cx,t=c.cy,h=c.r,l=h*L,v=c.innerR||0,N=E+h,K=E-h,D=E+v,J=E-v;e=e||100;
c=e/2;A[a]&&A[a][e]?A=A[a][e]:(A[a]||(A[a]={}),A[a][e]||(A[a][e]={}),A=A[a][e],d?(d=U(a,80),n=U(a,75),w=ba(a,85),b=ba(a,70),S=ba(a,40),ca=ba(a,50),ba(a,30),F=ba(a,65),U(a,85),g=U(a,69),f=U(a,75),T=U(a,95)):(y=10,d=U(a,90),n=U(a,87),w=ba(a,93),b=ba(a,87),S=ba(a,80),F=ca=ba(a,85),ba(a,80),T=U(a,85),g=U(a,75),f=U(a,80)),q=n+P+w+P+b+P+w+P+n,k=e+P+e+P+e+P+e+P+e,u=n+P+a+P+w+P+a+P+n,G=c+P+c+P+c+P+c+P+c,S=n+P+a+P+S+P+a+P+n,g=f+P+w+P+ca+P+w+P+g,f="FFFFFF"+P+"FFFFFF"+P+"FFFFFF"+P+"FFFFFF"+P+"FFFFFF",y=0+P+
c/y+P+e/y+P+c/y+P+0,A.top=qa?{FCcolor:{gradientUnits:"userSpaceOnUse",radialGradient:!0,color:F+P+T,alpha:e+P+e,ratio:"0,100"}}:{FCcolor:{gradientUnits:"objectBoundingBox",color:b+P+b+P+w+P+n,alpha:e+P+e+P+e+P+e,angle:-72,ratio:"0,8,15,77"}},A.frontOuter={FCcolor:{gradientUnits:"userSpaceOnUse",y1:0,y2:0,color:g,alpha:k,angle:0,ratio:"0,20,15,15,50"}},A.backOuter={FCcolor:{gradientUnits:"userSpaceOnUse",y1:0,y2:0,color:S,alpha:G,angle:0,ratio:"0,62,8,8,22"}},A.frontInner={FCcolor:{gradientUnits:"userSpaceOnUse",
y1:0,y2:0,color:u,alpha:G,angle:0,ratio:"0,25,5,5,65"}},A.backInner={FCcolor:{gradientUnits:"userSpaceOnUse",y1:0,y2:0,color:q,alpha:k,angle:0,ratio:"0,62,8,8,22"}},A.topBorder={FCcolor:{gradientUnits:"userSpaceOnUse",y1:0,y2:0,color:f,alpha:y,angle:0,ratio:"0,20,15,15,50"}},A.topInnerBorder={FCcolor:{gradientUnits:"userSpaceOnUse",y1:0,y2:0,color:f,alpha:y,angle:0,ratio:"0,50,15,15,20"}},A.bottom=fa(ua(a,c)),A.startSlice=fa(ua(d,e)),A.endSlice=fa(ua(d,e)));if(A.cx!==E||A.cy!==t||A.rx!==h||A.radiusYFactor!==
L||A.innerRx!==v)qa&&(A.top.FCcolor.cx=E,A.top.FCcolor.cy=t,A.top.FCcolor.r=h,A.top.FCcolor.fx=E-.3*h,A.top.FCcolor.fy=t+1.2*l),A.topBorder.FCcolor.x1=A.backOuter.FCcolor.x1=A.frontOuter.FCcolor.x1=K,A.topBorder.FCcolor.x2=A.backOuter.FCcolor.x2=A.frontOuter.FCcolor.x2=N,A.topInnerBorder.FCcolor.x1=A.backInner.FCcolor.x1=A.frontInner.FCcolor.x1=J,A.topInnerBorder.FCcolor.x2=A.backInner.FCcolor.x2=A.frontInner.FCcolor.x2=D,A.cx=E,A.cy=t,A.rx=h,A.radiusYFactor=L,A.innerRx=v;return A},rotate:function(a){var e=
this.pointElemStore,c=0,d=e.length,n;if(!this.hasOnePoint){for(;c<d;c+=1)n=e[c],n=n._confObject,n.start+=a,n.end+=a,this._setSliceShape(n);this.refreshDrawing()}},removeSlice:function(a){var e=this.pointElemStore,c=a._confObject.elements,d=this.slicingWallsArr,n;n=e.length;var g;for(--n;0<=n;--n)g=e[n],g===a&&e.splice(n,1);n=d.length;for(--n;0<=n;--n)e=d[n],e!==c.startSlice&&e!==c.frontOuter1&&e!==c.frontOuter&&e!==c.backInner&&e!==c.endSlice||d.splice(n,1);a.hide&&a.hide();this._slicePool||(this._slicePool=
[]);this._slicePool.push(a);this.refreshDrawing()},useSliceFromPool:function(){var a=this._slicePool||(this._slicePool=[]),e=this.slicingWallsArr,c=!1;a.length&&(c=a.shift(),this.pointElemStore.push(c),c.show(),a=c._confObject.elements,e.push(a.startSlice,a.frontOuter1,a.frontOuter),a.backInner&&e.push(a.backInner),e.push(a.endSlice));return c},refreshDrawing:function(){var a=function(e,c){return e._conf.index-c._conf.index||e._conf.cIndex-c._conf.cIndex||e._conf.isStart-c._conf.isStart||e._conf.si-
c._conf.si};return function(){var e=this.slicingWallsArr,c=0,d,n=e.length,g,f,T,w,b=this.slicingWallsFrontGroup,S=this.slicingWallsBackGroup;e.sort(a);a:{var ca=e[0]&&e[0]._conf.index,F,k;w=ca<=ea;g=1;for(d=e.length;g<d;g+=1)if(k=e[g]._conf.index,F=k<=ea,F!=w||k<ca)break a;g=0}for(;c<n;c+=1,g+=1)g===n&&(g=0),d=e[g],w=d._conf.index,w<va?b.appendChild(d):w<=ea?(f?d.insertBefore(f):b.appendChild(d),f=d):w<=ra?(T?d.insertBefore(T):S.appendChild(d),T=d):S.appendChild(d)}}(),_setSliceShape:function(a,e){var c=
this.getArcPath,d=a.start,n=a.end,g=ta(d),f=ta(n),T,w,b,S,ca,F,k,u,q,L,E,A,t,h,l,v,N,K=this.isDoughnut,p=a.radiusYFactor,R=a.cx,D=a.cy,J=a.r,M=J*p,z=J+(qa?-1:2),Z=M+(qa?-1:2),W=a.innerR||0,H=W*p,X=this.depth,O=X+D,m=R+J,x=R-J,C=R+W,Q=R-W,ka=D-M,B=["M",Q,ka,"L",Q,O+M,"Z"],p=a.elements,P,Y,I,U,fa,ba="path",na=(g+f)/2,ja=g>f;w=G(g);b=y(g);S=G(f);ca=y(f);F=R+J*w;k=D+M*b;u=R+z*w;q=D+Z*b;P=k+X;Y=R+J*S;I=D+M*ca;L=R+z*S;E=D+Z*ca;U=I+X;K?(A=R+W*w,t=D+H*b,v=t+X,h=R+W*S,l=D+H*ca,N=l+X,a.startSlice=["M",F,k,
"L",F,P,A,v,A,t,"Z"],a.endSlice=["M",Y,I,"L",Y,U,h,N,h,l,"Z"]):(a.startSlice=["M",F,k,"L",F,P,R,O,R,D,"Z"],a.endSlice=["M",Y,I,"L",Y,U,R,O,R,D,"Z"]);qa?(T=(g>f?ia:0)+f-g,a.clipTopPath=K?[["M",F,k,"A",J,M,0,T>ea?1:0,1,Y,I,"L",h,l,"A",W,H,0,T>ea?1:0,0,A,t,"Z"]]:[["M",F,k,"A",J,M,0,T>ea?1:0,1,Y,I,"L",R,D,"Z"]],a.clipOuterFrontPath1=[B],a.clipTopBorderPath=[["M",u,q,"A",z,Z,0,T>ea?1:0,1,L,E,"L",Y,I,Y,I+1,"A",J,M,0,T>ea?1:0,0,F,k+1,"L",F,k,"Z"]],d!=n?g>f?g<ea?(a.clipOuterFrontPath=[["M",m,D,"A",J,M,0,
0,1,Y,I,"v",X,"A",J,M,0,0,0,m,D+X,"Z"]],a.clipOuterFrontPath1=[["M",x,D,"A",J,M,0,0,0,F,k,"v",X,"A",J,M,0,0,1,x,D+X,"Z"]],a.clipOuterBackPath=[["M",m,D,"A",J,M,0,1,0,x,D,"v",X,"A",J,M,0,1,1,m,D+X,"Z"]],K&&(a.clipInnerBackPath=[["M",C,D,"A",W,H,0,1,0,Q,D,"v",X,"A",W,H,0,1,1,C,D+X,"Z"]],a.clipInnerFrontPath=[["M",C,D,"A",W,H,0,0,1,h,l,"v",X,"A",W,H,0,0,0,C,D+X,"Z","M",Q,D,"A",W,H,0,0,0,A,t,"v",X,"A",W,H,0,0,1,Q,D+X,"Z"]])):f>ea?(a.clipOuterFrontPath=[["M",m,D,"A",J,M,0,1,1,x,D,"v",X,"A",J,M,0,1,0,m,
D+X,"Z"]],a.clipOuterBackPath=[["M",x,D,"A",J,M,0,0,1,Y,I,"v",X,"A",J,M,0,0,0,x,D+X,"Z","M",m,D,"A",J,M,0,0,0,F,k,"v",X,"A",J,M,0,0,1,m,D+X,"Z"]],K&&(a.clipInnerFrontPath=[["M",C,D,"A",W,H,0,1,1,Q,D,"v",X,"A",W,H,0,1,0,C,D+X,"Z"]],a.clipInnerBackPath=[["M",Q,D,"A",W,H,0,0,1,h,l,"v",X,"A",W,H,0,0,0,Q,D+X,"Z","M",C,D,"A",W,H,0,0,0,A,t,"v",X,"A",W,H,0,0,1,C,D+X,"Z"]])):(a.clipOuterFrontPath=[["M",m,D,"A",J,M,0,0,1,Y,I,"v",X,"A",J,M,0,0,0,m,D+X,"Z"]],a.clipOuterBackPath=[["M",F,k,"A",J,M,0,0,1,m,D,"v",
X,"A",J,M,0,0,0,F,P,"Z"]],K&&(a.clipInnerFrontPath=[["M",C,D,"A",W,H,0,0,1,h,l,"v",X,"A",W,H,0,0,0,C,D+X,"Z"]],a.clipInnerBackPath=[["M",A,t,"A",W,H,0,0,1,C,D,"v",X,"A",W,H,0,0,0,A,v,"Z"]])):g<ea?f>ea?(a.clipOuterFrontPath=[["M",F,k,"A",J,M,0,0,1,x,D,"v",X,"A",J,M,0,0,0,F,P,"Z"]],a.clipOuterBackPath=[["M",x,D,"A",J,M,0,0,1,Y,I,"v",X,"A",J,M,0,0,0,x,D+X,"Z"]],K&&(a.clipInnerFrontPath=[["M",A,t,"A",W,H,0,0,1,Q,D,"v",X,"A",W,H,0,0,0,A,v,"Z"]],a.clipInnerBackPath=[["M",Q,D,"A",W,H,0,0,1,h,l,"v",X,"A",
W,H,0,0,0,Q,D+X,"Z"]])):(a.clipOuterFrontPath=[["M",F,k,"A",J,M,0,0,1,Y,I,"v",X,"A",J,M,0,0,0,F,P,"Z"]],a.clipOuterBackPath=[B],K&&(a.clipInnerFrontPath=[["M",A,t,"A",W,H,0,0,1,h,l,"v",X,"A",W,H,0,0,0,A,v,"Z"]],a.clipInnerBackPath=[B])):(a.clipOuterFrontPath=[B],a.clipOuterBackPath=[["M",F,k,"A",J,M,0,0,1,Y,I,"v",X,"A",J,M,0,0,0,F,P,"Z"]],K&&(a.clipInnerFrontPath=[B],a.clipInnerBackPath=[["M",A,t,"A",W,H,0,0,1,h,l,"v",X,"A",W,H,0,0,0,A,v,"Z"]])):a.clipOuterFrontPath=a.clipOuterBackPath=a.clipInnerBackPath=
a.clipInnerFrontPath=[B],ba="litepath",a.clipBottomBorderPath=a.clipTopPath,a.startSlice=[a.startSlice],a.endSlice=[a.endSlice]):(z=this.moveCmdArr,Z=this.lineCmdArr,w=this.closeCmdArr,X=[R,D],b=[x,D],ka=[R,ka],S=[m,D],ca=[R,D+M],B=[x,O],fa=[m,O],u=[Q,D],q=[C,D],L=[Q,O],E=[C,O],a.clipOuterFrontPath1=[],d!=n?(g>f?g<ea?(d=c(R,D,F,k,x,D,J,M,1,0),n=c(R,D,x,D,m,D,J,M,1,0),I=c(R,D,m,D,Y,I,J,M,1,0),a.clipOuterBackPath=z.concat(b,n,Z,fa,c(R,O,m,O,x,O,J,M,0,0),w),a.clipOuterFrontPath1=z.concat([F,k],d,Z,B,
c(R,O,x,O,F,P,J,M,0,0),w),a.clipOuterFrontPath=z.concat(S,I,Z,[Y,U],c(R,O,Y,U,m,O,J,M,0,0),w),a.clipTopBorderPath=z.concat([F,k],d,n,I),K?(J=c(R,D,h,l,C,D,W,H,0,0),M=c(R,D,C,D,Q,D,W,H,0,0),t=c(R,D,Q,D,A,t,W,H,0,0),a.clipInnerBackPath=z.concat(q,M,Z,L,c(R,O,Q,O,C,O,W,H,1,0),w),a.clipInnerFrontPath=z.concat(u,t,Z,[A,v],c(R,O,A,v,Q,O,W,H,1,0),w,z,[h,l],J,Z,E,c(R,O,C,O,h,N,W,H,1,0),w),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,M,t,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(z,[h,l],J,M,
t)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)):f>ea?(d=c(R,D,F,k,m,D,J,M,1,0),n=c(R,D,m,D,x,D,J,M,1,0),I=c(R,D,x,D,Y,I,J,M,1,0),a.clipOuterFrontPath=z.concat(S,n,Z,B,c(R,O,x,O,m,O,J,M,0,0),w),a.clipOuterBackPath=z.concat([F,k],d,Z,fa,c(R,O,m,O,F,P,J,M,0,0),w,z,b,I,Z,[Y,U],c(R,O,Y,U,x,O,J,M,0,0),w),a.clipTopBorderPath=z.concat([F,k],d,n,I),K?(J=c(R,D,h,l,Q,D,W,H,0,0),M=c(R,D,Q,D,C,D,W,H,0,0),t=c(R,D,C,D,A,t,W,H,0,0),a.clipInnerFrontPath=z.concat(u,M,Z,E,c(R,O,C,O,Q,O,W,H,1,0),w),a.clipInnerBackPath=
z.concat(q,t,Z,[A,v],c(R,O,A,v,C,O,W,H,1,0),w,z,[h,l],J,Z,L,c(R,O,Q,O,h,N,W,H,1,0),w),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,M,t,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(z,[h,l],J,M,t)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)):(d=c(R,D,F,k,m,D,J,M,1,0),n=c(R,D,m,D,Y,I,J,M,1,0),a.clipOuterFrontPath=z.concat(S,n,Z,[Y,U],c(R,O,Y,U,m,O,J,M,0,0),w),a.clipOuterBackPath=z.concat([F,k],d,Z,fa,c(R,O,m,O,F,P,J,M,0,0),w),a.clipTopBorderPath=z.concat([F,k],d,n),K?(J=c(R,D,h,l,C,D,
W,H,0,0),M=c(R,D,C,D,A,t,W,H,0,0),a.clipInnerFrontPath=z.concat([h,l],J,Z,E,c(R,O,C,O,h,N,W,H,1,0),w),a.clipInnerBackPath=z.concat(q,M,Z,[A,v],c(R,O,A,v,C,O,W,H,1,0),w),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,M,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(z,[h,l],J,M)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)):g<ea?f>ea?(d=c(R,D,F,k,x,D,J,M,1,0),n=c(R,D,x,D,Y,I,J,M,1,0),a.clipOuterBackPath=z.concat(b,n,Z,[Y,U],c(R,O,Y,U,x,O,J,M,0,0),w),a.clipOuterFrontPath=z.concat([F,k],d,
Z,B,c(R,O,x,O,F,P,J,M,0,0),w),a.clipTopBorderPath=z.concat([F,k],d,n),K?(J=c(R,D,h,l,Q,D,W,H,0,0),M=c(R,D,Q,D,A,t,W,H,0,0),a.clipInnerBackPath=z.concat([h,l],J,Z,L,c(R,O,Q,O,h,N,W,H,1,0),w),a.clipInnerFrontPath=z.concat(u,M,Z,[A,v],c(R,O,A,v,Q,O,W,H,1,0),w),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,M,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(z,[h,l],J,M)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)):(d=c(R,D,F,k,Y,I,J,M,1,0),a.clipOuterBackPath=z.concat([F,k]),a.clipTopBorderPath=
a.clipOuterBackPath.concat(d),a.clipOuterFrontPath=a.clipTopBorderPath.concat(Z,[Y,U],c(R,O,Y,U,F,P,J,M,0,0),w),K?(J=c(R,D,h,l,A,t,W,H,0,0),a.clipInnerBackPath=z.concat([h,l]),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(z,[h,l],J),a.clipInnerFrontPath=a.clipInnerBackPath.concat(J,Z,[A,v],c(R,O,A,v,h,N,W,H,1,0),w)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)):(d=c(R,D,F,k,Y,I,J,M,1,0),a.clipOuterFrontPath=z.concat([F,k]),a.clipTopBorderPath=
a.clipOuterFrontPath.concat(d),a.clipOuterBackPath=a.clipTopBorderPath.concat(Z,[Y,U],c(R,O,Y,U,F,P,J,M,0,0),w),K?(J=c(R,D,h,l,A,t,W,H,0,0),a.clipInnerFrontPath=z.concat([h,l]),a.clipTopPath=a.clipTopBorderPath.concat(Z,[h,l],J,w),a.clipTopBorderPath=a.clipTopBorderPath.concat(a.clipInnerFrontPath,J),a.clipInnerBackPath=a.clipInnerFrontPath.concat(J,Z,[A,v],c(R,O,A,v,h,N,W,H,1,0),w)):a.clipTopPath=a.clipTopBorderPath.concat(Z,X,w)),d=z.concat(b,Z,S),J=z.concat(ka,Z,ca),a.clipTopPath=a.clipTopPath.concat(d,
J),a.clipOuterFrontPath=a.clipOuterFrontPath.concat(d),a.clipOuterFrontPath1=a.clipOuterFrontPath1.concat(d),a.clipOuterBackPath=a.clipOuterBackPath.concat(d),K&&(J=z.concat(u,Z,q),a.clipInnerFrontPath=a.clipInnerFrontPath.concat(J),a.clipInnerBackPath=a.clipInnerBackPath.concat(J))):(a.clipTopPath=a.clipOuterFrontPath=a.clipOuterBackPath=[],K&&(a.clipInnerFrontPath=a.clipInnerBackPath=[])),a.clipBottomBorderPath=a.clipTopBorderPath);e||(p.startSlice._conf.index=g,p.endSlice._conf.index=f,p.backOuter._conf.index=
A=ja&&(g<=ra||f>ra)||g<=ra&&f>ra?ra:g>ea?g:f,p.frontOuter._conf.index=c=f<=va?f:g>f||g<=va?va:g,p.frontOuter1._conf.index=g,p.frontOuter1._conf.cIndex=ea,g>f?(p.backOuter._conf.cIndex=g<ra?ra:ia,p.startSlice._conf.cIndex=g<ea?(g+ea)/2:(g+ia)/2,p.endSlice._conf.cIndex=p.frontOuter._conf.cIndex=0):p.backOuter._conf.cIndex=p.startSlice._conf.cIndex=p.endSlice._conf.cIndex=p.frontOuter._conf.cIndex=na,T>ea?p.frontOuter1.show().attr(ba,a.clipOuterFrontPath1):p.frontOuter1.hide(),a.thisElement._attr(ba,
a.clipTopPath),p.bottom.attr(ba,a.clipTopPath),p.bottomBorder.attr(ba,a.clipBottomBorderPath),p.topBorder&&p.topBorder.attr(ba,a.clipTopBorderPath),p.frontOuter.attr(ba,a.clipOuterFrontPath),p.backOuter.attr(ba,a.clipOuterBackPath),K&&(p.backInner.attr(ba,a.clipInnerBackPath),p.frontInner.attr(ba,a.clipInnerFrontPath),p.backInner._conf.index=A,p.frontInner._conf.index=c,g>f?(p.backInner._conf.cIndex=ia,p.frontInner._conf.cIndex=0):p.backInner._conf.cIndex=p.frontInner._conf.cIndex=na),this.hasOnePoint?
(p.startSlice.hide(),p.endSlice.hide()):(p.startSlice.attr(ba,a.startSlice).show(),p.endSlice.attr(ba,a.endSlice).show()))},_setSliceCosmetics:function(a){var e=a.thisElement,c=a.showBorderEffect,d=a.elements,n=ua(a.borderColor,h(a.borderAlpha,a.alpha)),g=a.borderWidth,f;a.color&&(a=this._parseSliceColor(a.color,a.alpha,a),qa?(f={fill:fa(a.top),"stroke-width":0},c?d.topBorder.show().attr({fill:fa(a.topBorder),"stroke-width":0}):(d.topBorder.hide(),f.stroke=n,f["stroke-width"]=g),e._attr(f)):(e._attr({fill:fa(a.top),
"stroke-width":0}),d.topBorder.attr({stroke:n,"stroke-width":g})),d.bottom.attr({fill:fa(a.bottom)}),d.bottomBorder.attr({stroke:n,"stroke-width":g}),d.frontOuter.attr({fill:fa(a.frontOuter)}),d.frontOuter1.attr({fill:fa(a.frontOuter)}),d.backOuter.attr({fill:fa(a.backOuter)}),d.startSlice.attr({fill:fa(a.startSlice),stroke:n,"stroke-width":g}),d.endSlice.attr({fill:fa(a.endSlice),stroke:n,"stroke-width":g}),this.isDoughnut&&(d.frontInner.attr({fill:fa(a.frontInner)}),d.backInner.attr({fill:fa(a.backInner)})))},
createSlice:function(){var a={stroke:!0,strokeWidth:!0,"stroke-width":!0,dashstyle:!0,"stroke-dasharray":!0,translateX:!0,translateY:!0,"stroke-opacity":!0,fill:!0,opacity:!0,transform:!0,ishot:!0,cursor:!0,start:!0,end:!0,color:!0,alpha:!0,borderColor:!0,borderAlpha:!0,borderWidth:!0,rolloverProps:!0,showBorderEffect:!0,positionIndex:!0,cx:!0,cy:!0,radiusYFactor:!0,r:!0,innerR:!0},e=function(e,c){var d,n,g=this,f=g._confObject,w={},k=f.elements,b,T,q,ga=f.Pie3DManager,G;"string"===typeof e&&void 0!==
c&&null!==c&&(d=e,e={},e[d]=c);if(e&&"string"!==typeof e){for(d in e)if(n=e[d],a[d])if(f[d]=n,"ishot"===d||"cursor"===d||"transform"===d)w[d]=n,G=!0;else if("start"===d||"end"===d||"cx"===d||"cy"===d||"radiusYFactor"===d||"r"===d||"innerR"===d)T=!0;else{if("color"===d||"alpha"===d||"borderColor"===d||"borderAlpha"===d||"borderWidth"===d)q=!0}else g._attr(d,n);T&&(ga._setSliceShape(f),ga.refreshDrawing());(q||T)&&ga._setSliceCosmetics(f);if(G){for(b in k)k[b].attr(w);g._attr(w)}}else g=a[e]?f[e]:g._attr(e);
return g},c=function(a,e){var c=this._confObject.elements,d;for(d in c)c[d].on(a,e);return this._on(a,e)},d=function(a,e,c){var d,n=this._confObject.elements,g=-1<K.navigator.userAgent.toLowerCase().indexOf("android");for(d in n)g?"topBorder"!==d&&"frontOuter"!==d&&"startSlice"!==d&&"endSlice"!==d||n[d].drag(a,e,c):n[d].drag(a,e,c);return this._drag(a,e,c)},n=function(){var a=this._confObject.elements,e;for(e in a)a[e].hide();return this._hide()},g=function(){var a=this._confObject.elements,e;for(e in a)a[e].show();
return this._show()},f=function(){var a=this._confObject,e=a.elements,c;for(c in e)e[c].destroy();qa&&(a.clipTop.destroy(),a.clipOuterFront.destroy(),a.clipOuterBack.destroy(),a.clipOuterFront1&&a.clipOuterFront1.destroy(),a.clipInnerFront&&a.clipInnerFront.destroy(),a.clipInnerBack&&a.clipInnerBack.destroy());return this._destroy()},b=function(a){var e=this._confObject.elements,c;for(c in e)e[c].tooltip(a);return this._tooltip(a)},w=function(a,e){var c=this._confObject.elements,d;if(void 0===e)return this._data(a);
for(d in c)c[d].data(a,e);return this._data(a,e)},k=0;return function(){var a=this.renderer,q,F={elements:{},Pie3DManager:this},G=this.slicingWallsArr,u=F.elements,h=qa?"litepath":"path";q=a[h](this.topGroup);q._confObject=F;F.thisElement=q;q._destroy=q.destroy;q.destroy=f;q._show=q.show;q.show=g;q._hide=q.hide;q.hide=n;q._on=q.on;q.on=c;q._drag=q.drag;q.drag=d;q._attr=q.attr;q.attr=e;q._tooltip=q.tooltip;q.tooltip=b;q._data=q.data;q.data=w;this.pointElemStore.push(q);u.topBorder=a[h](this.topGroup);
u.bottom=a[h](this.bottomBorderGroup).attr({"stroke-width":0});u.bottomBorder=a[h](this.bottomBorderGroup);u.frontOuter=a[h](this.slicingWallsFrontGroup).attr({"stroke-width":0});u.backOuter=a[h](this.slicingWallsFrontGroup).attr({"stroke-width":0});u.startSlice=a[h](this.slicingWallsFrontGroup);u.endSlice=a[h](this.slicingWallsFrontGroup);u.frontOuter1=a[h](this.slicingWallsFrontGroup).attr({"stroke-width":0});u.frontOuter._conf={si:k,isStart:.5};u.frontOuter1._conf={si:k,isStart:.5};u.startSlice._conf=
{si:k,isStart:0};u.endSlice._conf={si:k,isStart:1};u.backOuter._conf={si:k,isStart:.4};G.push(u.startSlice,u.frontOuter1,u.frontOuter,u.backOuter,u.endSlice);this.isDoughnut&&(u.frontInner=a[h](this.slicingWallsFrontGroup).attr({"stroke-width":0}),u.backInner=a[h](this.slicingWallsFrontGroup).attr({"stroke-width":0}),u.backInner._conf={si:k,isStart:.5},u.frontInner._conf={si:k,isStart:.4},G.push(u.frontInner,u.backInner));k+=1;return q}}()};a.prototype.constructor=a}]);B.register("module",["private",
"modules.renderer.js-doughnut2d",function(){var a=this,b=a.hcLib,m=a.window,C=!b.CREDIT_REGEX.test(m.location.hostname),p=b.chartAPI,K=b.getFirstColor,N=b.getFirstAlpha,Q=b.hasSVG,h=b.toRaphaelColor,x=b.hashify,l=8===m.document.documentMode?"visible":"",f=b.graphics.getLightColor,q=Math.floor,y=b.graphics.getDarkColor;p("doughnut2d",{friendlyName:"Doughnut Chart",defaultDatasetType:"Doughnut2D",creditLabel:C,applicableDSList:{Doughnut2D:!0},getPointColor:function(a,b,k){var h;a=K(a);b=N(b);100>k&&
Q?(h=y(a,q(100*(85-.2*(100-k)))/100),a=f(a,q(100*(100-.5*k))/100),b={FCcolor:{color:h+","+a+","+a+","+h,alpha:b+","+b+","+b+","+b,radialGradient:!0,gradientUnits:"userSpaceOnUse",r:k}}):b={FCcolor:{color:a+","+a,alpha:b+","+b,ratio:"0,100"}};return b},drawDoughnutCenterLabel:function(a,f,b,q,y,v,z){var p=this.components,K=p.dataset[0].config;v=v||K.lastCenterLabelConfig;var p=p.paper,N=this.linkedItems.smartLabel,m=this.graphics,C=m.datasetGroup,Q=v.padding,B=2*v.textPadding,na={fontFamily:v.font,
fontSize:v.fontSize+"px",lineHeight:1.2*v.fontSize+"px",fontWeight:v.bold?"bold":"",fontStyle:v.italic?"italic":""},ma=1.414*(.5*q-Q)-B;y=1.414*(.5*y-Q)-B;var U;N.setStyle(na);N.useEllipsesOnOverflow(this.config.useEllipsesWhenOverflow);N=N.getSmartText(a,ma,y);(y=m.doughnutCenterLabel)?(y.attr("text")!==a&&this.centerLabelChange(a),U=m.centerLabelOvalBg):(v.bgOval&&(m.centerLabelOvalBg=U=p.circle(f,b,.5*q-Q,C)),y=m.doughnutCenterLabel=p.text(C).hover(this.centerLabelRollover,this.centerLabelRollout).click(this.centerLabelClick),
y.chart=this);a?(y.css(na).attr({x:f,y:b,text:N.text,visibility:l,direction:K.textDirection,fill:h({FCcolor:{color:v.color,alpha:v.alpha}}),"text-bound":v.bgOval?"none":[h({FCcolor:{color:v.bgColor,alpha:v.bgAlpha}}),h({FCcolor:{color:v.borderColor,alpha:v.borderAlpha}}),v.borderThickness,v.textPadding,v.borderRadius]}).tooltip(v.toolText||N.tooltext),v.bgOval&&U&&U.attr({visibility:l,fill:x(v.bgColor),"fill-opacity":v.bgAlpha/100,stroke:x(v.borderColor),"stroke-width":v.borderThickness,"stroke-opacity":v.borderAlpha/
100})):(y.attr("visibility","hidden"),U&&U.attr("visibility","hidden"));z&&(K.lastCenterLabelConfig=v,K.centerLabelConfig=v)},centerLabelRollover:function(){var f=this.chart,b=f.config,k=f.chartInstance,q=k.ref,h=f.components.dataset[0].config.lastCenterLabelConfig,b={height:b.height,width:b.width,pixelHeight:q.offsetHeight,pixelWidth:q.offsetWidth,id:k.id,renderer:k.args.renderer,container:f.linkedItems.container,centerLabelText:h&&h.label};this.attr("text")&&a.raiseEvent("centerLabelRollover",b,
k,this,f.hoverOnCenterLabel)},centerLabelRollout:function(){var f=this.chart,b=f.config,q=f.chartInstance,h=q.ref,y=f.components.dataset[0].config.lastCenterLabelConfig,b={height:b.height,width:b.width,pixelHeight:h.offsetHeight,pixelWidth:h.offsetWidth,id:q.id,renderer:q.args.renderer,container:f.linkedItems.container,centerLabelText:y&&y.label};this.attr("text")&&a.raiseEvent("centerLabelRollout",b,q,this,f.hoverOffCenterLabel)},centerLabelClick:function(){var f=this.chart,b=f.config,q=f.chartInstance,
h=q.ref,y=f.components.dataset[0].config.lastCenterLabelConfig,f={height:b.height,width:b.width,pixelHeight:h.offsetHeight,pixelWidth:h.offsetWidth,id:q.id,renderer:q.args.renderer,container:f.linkedItems.container,centerLabelText:y&&y.label};this.attr("text")&&a.raiseEvent("centerLabelClick",f,q)},centerLabelChange:function(f){var b=this.config,q=this.chartInstance,h=q.ref;a.raiseEvent("centerLabelChanged",{height:b.height,width:b.width,pixelHeight:h.offsetHeight,pixelWidth:h.offsetWidth,id:q.id,
renderer:q.args.renderer,container:this.linkedItems.container,centerLabelText:f},q)},hoverOnCenterLabel:function(){var a=this.chart.components.dataset[0].config.lastCenterLabelConfig;(a.hoverColor||a.hoverAlpha)&&this.attr({fill:h({FCcolor:{color:a.hoverColor||a.color,alpha:a.hoverAlpha||a.alpha}})})},hoverOffCenterLabel:function(){var a=this.chart.components.dataset[0].config.lastCenterLabelConfig;(a.hoverColor||a.hoverAlpha)&&this.attr({fill:h({FCcolor:{color:a.color,alpha:a.alpha}})})}},p.pie2d,
{singletonPlaceValue:!1})}]);B.register("module",["private","modules.renderer.js-doughnut3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("doughnut3d",{friendlyName:"3D Doughnut Chart",defaultDatasetType:"Doughnut3D",creditLabel:b,applicableDSList:{Doughnut3D:!0},_configureManager:function(){var a=this.components.dataset[0],b=a.config,p=a.components,a=p.Pie3DManager,p=p.data;a&&a.configure(b.pieSliceDepth,1===p.length,b.use3DLighting,!0)}},a.pie3d)}]);
B.register("module",["private","modules.renderer.js-mscolumn2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("mscolumn2d",{standaloneInit:!0,friendlyName:"Multi-series Column Chart",creditLabel:b,defaultDatasetType:"column",applicableDSList:{column:!0},eiMethods:{}},a.mscartesian,{enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-mscolumn3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),
a=a.chartAPI;a("mscolumn3d",{standaloneInit:!0,defaultDatasetType:"column3d",friendlyName:"Multi-series 3D Column Chart",applicableDSList:{column3d:!0},defaultPlotShadow:1,fireGroupEvent:!0,is3D:!0,creditLabel:b,defaultZeroPlaneHighlighted:!1},a.mscartesian3d,{showplotborder:0,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-msbar2d",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("msbar2d",{standaloneInit:!0,friendlyName:"Multi-series Bar Chart",
isBar:!0,hasLegend:!0,creditLabel:a,defaultDatasetType:"bar2d",applicableDSList:{bar2d:!0}},b.msbarcartesian,{enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-msbar3d",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("msbar3d",{standaloneInit:!0,defaultSeriesType:"bar3d",friendlyName:"Multi-series 3D Bar Chart",fireGroupEvent:!0,defaultPlotShadow:1,is3D:!0,isBar:!0,hasLegend:!0,creditLabel:a,defaultZeroPlaneHighlighted:!1,
defaultDatasetType:"bar3d",applicableDSList:{bar3d:!0}},b.msbarcartesian3d,{showplotborder:0,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-msarea",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("msarea",{standaloneInit:!0,friendlyName:"Multi-series Area Chart",creditLabel:b,defaultDatasetType:"area",defaultPlotShadow:0,applicableDSList:{area:!0}},a.areabase,{enablemousetracking:!0})}]);B.register("module",["private",
"modules.renderer.js-msline",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("msline",{standaloneInit:!0,friendlyName:"Multi-series Line Chart",creditLabel:a,defaultDatasetType:"line",defaultPlotShadow:1,axisPaddingLeft:0,axisPaddingRight:0,applicableDSList:{line:!0}},b.areabase,{zeroplanethickness:1,zeroplanealpha:40,showzeroplaneontop:0,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-stackedarea2d",function(){var a=
this.hcLib,b=a.chartAPI,m=!a.CREDIT_REGEX.test(this.window.location.hostname);b("stackedarea2d",{friendlyName:"Stacked Area Chart",showsum:0,creditLabel:m},b.msarea,{plotfillalpha:a.preDefStr.HUNDREDSTRING,isstacked:1})}]);B.register("module",["private","modules.renderer.js-stackedcolumn2d",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("stackedcolumn2d",{friendlyName:"Stacked Column Chart",creditLabel:a},b.mscolumn2d,{isstacked:!0})}]);B.register("module",
["private","modules.renderer.js-stackedcolumn3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI;m("stackedcolumn3d",{friendlyName:"3D Stacked Column Chart",creditLabel:b,_mouseEvtHandler:function(b){var p=b.data.mouseTracker,K=this.config,N=K.canvasLeft,m=K.canvasRight,h=K.canvasBottom,x=K.canvasTop,l=K.datasetOrder||this.components.dataset,f=a.getMouseCoordinate(this.linkedItems.container,b.originalEvent,this),q=f.chartX,f=f.chartY,y,G=this.components,
L="datasetGroup_"+l[0].type,k,t=!1,E=l.length,v,z=p._lastDatasetIndex,B=p._lastPointIndex;if(q>N&&q<m&&f>x&&f<h||this.config.plotOverFlow){for(;E--&&!t;)y=l[E],y.valueLook=!0,y&&y.visible&&(k=y._getHoveredPlot&&y._getHoveredPlot(q,f))&&k.hovered&&(t=!0,k.datasetIndex=E,v=p._getMouseEvents(b,k.datasetIndex,k.pointIndex));for(E=0;E<l.length&&!t;)y=l[E],y.valueLook=!1,y&&y.visible&&(k=y._getHoveredPlot&&y._getHoveredPlot(q,f))&&k.hovered&&(t=!0,k.datasetIndex=E,v=p._getMouseEvents(b,k.datasetIndex,k.pointIndex)),
E++}(!t||v&&v.fireOut)&&void 0!==z&&(delete p._lastDatasetIndex,delete p._lastPointIndex,l[z]&&l[z]._firePlotEvent&&l[z]._firePlotEvent("mouseout",B,b));if(t)for(N=v.events&&v.events.length,p._lastDatasetIndex=k.datasetIndex,B=p._lastPointIndex=k.pointIndex,K.drawTrendRegion&&G[L]._notifyGroup(!0,b),p=0;p<N;p+=1)y&&y._firePlotEvent&&y._firePlotEvent(v.events[p],B,b,k.datasetIndex);else K.drawTrendRegion&&G[L]._notifyGroup(!1,b);K.drawTrendRegion&&G[L]._getHoveredRegion(q,f,b)}},m.mscolumn3d,{showplotborder:0,
enablemousetracking:!0},m.stackedcolumn2d)}]);B.register("module",["private","modules.renderer.js-stackedbar2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("stackedbar2d",{friendlyName:"Stacked Bar Chart",creditLabel:b},a.msbar2d,{maxbarheight:50,enablemousetracking:!0},a.stackedcolumn2d)}]);B.register("module",["private","modules.renderer.js-stackedbar3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI;
m("stackedbar3d",{friendlyName:"3D Stacked Bar Chart",creditLabel:b,_mouseEvtHandler:function(b){var p=b.data.mouseTracker,K=this.config,N=K.canvasLeft,m=K.canvasRight,h=K.canvasBottom,x=K.canvasTop,l=K.datasetOrder||this.components.dataset,f=a.getMouseCoordinate(this.linkedItems.container,b.originalEvent,this),q=f.chartX,f=f.chartY,y,G=this.components,L="datasetGroup_"+l[0].type,k,t=!1,E=l.length,v,z=p._lastDatasetIndex,B=p._lastPointIndex;if(q>N&&q<m&&f>x&&f<h||this.config.plotOverFlow){for(E=l.length;E--&&
!t;)if(y=l[E],y.valueLook=!0,y&&y.visible){if((k=y._getHoveredPlot&&y._getHoveredPlot(q,f))&&k.hovered)for(N=0;N<=E;++N)if(E!==N&&k&&(m=l[N],(h=m._getHoveredPlot&&m._getHoveredPlot(q,f))&&h.pointIndex===k.pointIndex-1)){k=h;E=N;y=m;y.valueLook=!0;break}k&&k.hovered&&(t=!0,k.datasetIndex=E,v=p._getMouseEvents(b,k.datasetIndex,k.pointIndex))}for(E=0;E<l.length&&!t;){y=l[E];y.valueLook=!1;if(y&&y.visible){if((k=y._getHoveredPlot&&y._getHoveredPlot(q,f))&&k.hovered)for(N=0;N<=E;++N)if(E!==N&&k&&(m=l[N],
(h=m._getHoveredPlot&&m._getHoveredPlot(q,f))&&h.pointIndex===k.pointIndex-1)){k=h;E=N;y=m;y.valueLook=!1;break}k&&k.hovered&&(t=!0,k.datasetIndex=E,v=p._getMouseEvents(b,k.datasetIndex,k.pointIndex))}E++}}(!t||v&&v.fireOut)&&void 0!==z&&(delete p._lastDatasetIndex,delete p._lastPointIndex,l[z]&&l[z]._firePlotEvent&&l[z]._firePlotEvent("mouseout",B,b));if(t)for(l=v.events&&v.events.length,p._lastDatasetIndex=k.datasetIndex,B=p._lastPointIndex=k.pointIndex,K.drawTrendRegion&&G[L]._notifyGroup(!0,b),
p=0;p<l;p+=1)y&&y._firePlotEvent&&y._firePlotEvent(v.events[p],B,b,k.datasetIndex);else K.drawTrendRegion&&G[L]._notifyGroup(!1,b);K.drawTrendRegion&&G[L]._getHoveredRegion(q,f,b)}},m.msbar3d,{showplotborder:0,enablemousetracking:!0},m.stackedcolumn2d)}]);B.register("module",["private","modules.renderer.js-marimekko",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname),m=Math,B=m.min,p=m.max;b("marimekko",{standaloneInit:!0,friendlyName:"Marimekko Chart",
isValueAbs:!0,usesXYinCategory:!0,distributedColumns:!0,stack100percent:!0,defaultDatasetType:"marimekko",applicableDSList:{marimekko:!0},isStacked:!0,showsum:1,creditLabel:a,_setAxisLimits:function(){var a=this.components,b=a.dataset,m=a.yAxis,a=a.xAxis,h,x=b.length,l,f=-Infinity,q=Infinity,y=Infinity,G=-Infinity,L,k,t={};L=this.config.categories;var E=[],v=function(a){f=p(f,a.max);q=B(q,a.min);G=p(G,a.xMax||-Infinity);y=B(y,a.xMin||Infinity)};for(l=0;l<x;l++)h=b[l],(k=h.groupManager)?t[h.type]=
k:E.push(h);for(k in t)b=t[k].getDataLimits(),v(b);x=E.length;for(l=0;l<x;l++)b=E[l].getDataLimits(),v(b);-Infinity===f&&(f=0);Infinity===q&&(q=0);m[0].setAxisConfig({isPercent:this.config.isstacked?this.config.stack100percent:0});m[0].setDataLimit(f,q);if(-Infinity!==G||Infinity!==y)a[0].config.xaxisrange={max:G,min:y},a[0].setDataLimit(G,y);m=t[k].getStackSumPercent();l=m.length;k=a[0].getCategoryLen();k>l&&L.splice(l,k-l);this._setCategories();l=a[0].getLimit();y=l.min;G=l.max;L=y;k=G-y;for(l=
0;l<m.length;l++)b=m[l],x=k*b/100,b=L+x/2,a[0].updateCategory(l,{x:b}),L+=x}},b.mscartesian,{isstacked:!0,showpercentvalues:0,usepercentdistribution:1,showsum:1,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-msstackedcolumn2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI,C=a.pluck,p=a.componentDispose;m("msstackedcolumn2d",{standaloneInit:!0,defaultDatasetType:"column",applicableDSList:{column:!0},friendlyName:"Multi-series Stacked Column Chart",
_createDatasets:function(){var a=this.components,b=this.jsonData,m=b.dataset,h=m&&m.length||0,x,l,f,q=this.defaultDatasetType,y=this.applicableDSList,G,L,k,t,E,v,z=b.lineset||[],Y=this.config,ka=Y.dataSetMap,ea=Y.lineSetMap,va=ka&&ka.length,ia=a.legend,ra=[],sa=[],na=0;k=0;var ma,U=-1,ba,Aa=this.config.catLen,ua=a.xAxis[0],P,fa,qa=a.dataset;if(m||0!==z.length){this.config.categories=b.categories&&b.categories[0].category;l=a.dataset=[];for(b=0;b<h;b++){E=m[b];U++;if(E.dataset)for(fa=!0,v=E.dataset&&
E.dataset.length||0,ra[b]=[],x=0;x<v;x++){if(k=E.dataset[x],G=(G=C(k.renderas,q))&&G.toLowerCase(),y[G]||(G=q),f=B.get("component",["dataset",G]))t="datasetGroup_"+G,L=B.register("component",["datasetGroup",G]),G=a[t],L&&!G?(G=a[t]=new L,G.chart=this,G.init()):G&&ka&&0!==ka.length&&!ma&&(G.init(),ma=!0),ka&&ka[b]&&ka[b][x]?(f=ka[b][x],f.index=na,t=f.JSONData,L=t.data&&t.data.length||0,t=k.data&&k.data.length||0,ba=ua.getCategoryLen(),P=Aa-ba,L-=t,L=this._getDiff(L,t,P,ba),t=L.diff,L=L.startIndex,
0<t&&f.removeData(L,t,!1),f.JSONData=k,f.configure()):(f=new f,f.chart=this,f.index=na,f.init(k)),na++,ra[b].push(f),l.push(f),G&&G.addDataSet(f,U,x)}else v=x=0,U--;E=ka&&ka[b]&&ka[b].length;if(E>v)for(k=x,E=E-v+x;k<E;k++)G=ka[b][k],ia.removeItem(G.legendItemId),p.call(G)}if(va>h)for(k=b,E=va-h+b;k<E;k++)for(v=ka[k].length,x=0;x<v;x++)G=ka[k][x],ia.removeItem(G.legendItemId),p.call(G);Y.dataSetMap=ra;if(this.lineset){b=0;for(h=z.length;b<h;b++)m=z[b],f=B.get("component",["dataset","line"]),f=new f,
ea&&ea[b]?(f=ea[b],f.index=na,t=f.JSONData,L=t.data.length,t=m.data&&m.data.length||0,L>t&&f.removeData(t,L-t,!1),f.JSONData=m,f.configure()):(f.chart=this,f.index=na,f.init(m)),sa.push(f),l.push(f),na++;z=ea&&ea.length;if(z>h)for(k=b,E=z-h+b;k<E;k++)G=ea[k],ia.removeItem(G.legendItemId),p.call(G);Y.lineSetMap=sa}fa?this.config.catLen=ua.getCategoryLen():(a.dataset=qa,this.setChartMessage())}else this.setChartMessage()},creditLabel:b},m.mscartesian,{isstacked:!0,enablemousetracking:!0})}]);B.register("module",
["private","modules.renderer.js-mscombi2d",function(){var a=this.hcLib,b=a.chartAPI,m=!a.CREDIT_REGEX.test(this.window.location.hostname),C=a.pluck,p=a.componentDispose;b("mscombi2d",{friendlyName:"Multi-series Combination Chart",standaloneInit:!0,creditLabel:m,defaultDatasetType:"column",applicableDSList:{line:!0,area:!0,column:!0},_createDatasets:function(){var a=this.components,b=this.jsonData,m=b.dataset,h=m&&m.length,x,l,f=this.defaultDatasetType,q=this.applicableDSList;x=this.components.legend;
var y=a.xAxis[0],G,L,k,t,E,v=this.config.isstacked,z,Y,ka=[],ea={},va=this.config,ia=this.config.catLen,ra=va.datasetMap||(va.datasetMap={line:[],area:[],column:[],column3d:[],scrollcolumn2d:[]}),sa={line:[],area:[],column:[],column3d:[],scrollcolumn2d:[]};m||this.setChartMessage();this.config.categories=b.categories&&b.categories[0].category;b=a.dataset=[];x&&x.emptyItems();for(x=0;x<h;x++)if(E=m[x],t=E.parentyaxis||"",L=(L=this.config.isdual&&"s"===t.toLowerCase()?"line"===this.defaultSecondaryDataset?
this.sDefaultDatasetType:C(E.renderas,this.sDefaultDatasetType):C(E.renderas,f))&&L.toLowerCase(),q[L]||(L=f),k=B.get("component",["dataset",L]))void 0===ea[L]?ea[L]=0:ea[L]++,l="datasetGroup_"+L,t=B.register("component",["datasetGroup",L]),(G=a[l])&&ka.push(G),t&&!G&&(G=a[l]=new t,G.chart=this,G.init()),t=ra[L],(l=t[0])?(delete l.legendItemId,G=y.getCategoryLen(),k=ia-G,Y=l.JSONData,z=Y.data&&Y.data.length,Y=E.data&&E.data.length||0,z-=Y,k=this._getDiff(z,Y,k,G),G=k.diff,k=k.startIndex,0<G&&l.removeData(k,
G,!1),l.index=x,l.JSONData=E,l.configure(),t.splice(0,1)):(l=new k,l.chart=this,l.index=x,G&&(v?G.addDataSet(l,0,ea[L]):G.addDataSet(l,ea[L],0)),l.init(E)),sa[L].push(l),b.push(l);this._setDatasetOrder();for(m in ra)if(t=ra[m],f=t[0]&&t[0].groupManager,h=t.length,q=void 0===ea[m]?0:ea[m]+1,h)for(v&&f&&f.removeDataSet(0,q,h),a=0;a<h;a++)f&&!v&&f.removeDataSet(q,0,1),"column"===t[a].type&&!0===this.is3D?(t[a].visible=!1,t[a].draw()):p.call(t[a]);va.datasetMap=sa;this.config.catLen=y.getCategoryLen()}},
b.areabase,{enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-mscombi3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("mscombi3d",{standaloneInit:!0,friendlyName:"Multi-series 3D Combination Chart",defaultDatasetType:"column3d",is3D:!0,creditLabel:b,defaultPlotShadow:1,applicableDSList:{column3d:!0,line:!0,area:!0},_createDatasets:a.mscombi2d},a.mscartesian3d,{showplotborder:0,enablemousetracking:!0},a.areabase)}]);
B.register("module",["private","modules.renderer.js-mscolumnline3d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("mscolumnline3d",{friendlyName:"Multi-series Column and Line Chart",is3D:!0,creditLabel:b,defaultPlotShadow:1,applicableDSList:{column3d:!0,line:!0}},a.mscombi3d,{use3dlineshift:1,showplotborder:0,enablemousetracking:!0},a.msarea)}]);B.register("module",["private","modules.renderer.js-stackedcolumn2dline",function(){var a=this.hcLib,b=
a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("stackedcolumn2dline",{friendlyName:"Stacked Column and Line Chart",defaultDatasetType:"column",creditLabel:a,applicableDSList:{line:!0,column:!0}},b.mscombi2d,{isstacked:!0,stack100percent:0,enablemousetracking:!0},b.msarea)}]);B.register("module",["private","modules.renderer.js-stackedcolumn3dline",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("stackedcolumn3dline",{friendlyName:"Stacked 3D Column and Line Chart",
is3D:!0,creditLabel:b,_mouseEvtHandler:a.stackedcolumn3d._mouseEvtHandler,applicableDSList:{column3d:!0,line:!0}},a.mscombi3d,{use3dlineshift:1,isstacked:!0,stack100percent:0,showplotborder:0,enablemousetracking:!0},a.msarea)}]);B.register("module",["private","modules.renderer.js-mscombidy2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("mscombidy2d",{standaloneInit:!0,friendlyName:"Multi-series Dual Y-Axis Combination Chart",defaultDatasetType:"column",
sDefaultDatasetType:"line",_createDatasets:a.mscombi2d,creditLabel:b,applicableDSList:{column:!0,line:!0,area:!0}},a.msdybasecartesian,{isdual:1,enablemousetracking:!0},a.msarea)}]);B.register("module",["private","modules.renderer.js-mscolumn3dlinedy",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("mscolumn3dlinedy",{standaloneInit:!0,friendlyName:"Multi-series 3D Column and Line Chart",defaultDatasetType:"column3d",sDefaultDatasetType:"line",is3D:!0,
creditLabel:b,_createDatasets:a.mscombi2d,defaultPlotShadow:1,applicableDSList:{column3d:!0,line:!0}},a.msdybasecartesian3d,{use3dlineshift:1,isdual:!0,showplotborder:0,enablemousetracking:!0},a.msarea)}]);B.register("module",["private","modules.renderer.js-stackedcolumn3dlinedy",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("stackedcolumn3dlinedy",{standaloneInit:!0,friendlyName:"Stacked 3D Column and Line Chart",is3D:!0,defaultDatasetType:"column3d",
creditLabel:a,sDefaultDatasetType:"line",defaultSecondaryDataset:"line",_createDatasets:b.mscombi2d,_mouseEvtHandler:b.stackedcolumn3d._mouseEvtHandler,applicableDSList:{column3d:!0,line:!0}},b.msdybasecartesian3d,{use3dlineshift:1,isdual:!0,isstacked:!0,showplotborder:0,enablemousetracking:!0},b.msarea)}]);B.register("module",["private","modules.renderer.js-msstackedcolumn2dlinedy",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("msstackedcolumn2dlinedy",
{standaloneInit:!0,friendlyName:"Multi-series Dual Y-Axis Stacked Column and Line Chart",stack100percent:0,defaultDatasetType:"column",sDefaultDatasetType:"line",hasLineSet:!0,creditLabel:b,applicableDSList:{column:!0},lineset:!0,_createDatasets:a.msstackedcolumn2d},a.msdybasecartesian,{isdual:!0,haslineset:!0,isstacked:!0,enablemousetracking:!0},a.msarea)}]);B.register("module",["private","modules.renderer.js-scrollcolumn2d",function(){var a=this,b=a.hcLib,m=b.chartAPI,B=!b.CREDIT_REGEX.test(a.window.location.hostname),
p=Math,K=p.min,N=p.max,Q=p.floor,h=p.round,x=b.pluckNumber,l=b.Raphael;m("scrollcolumn2d",{standaloneInit:!0,friendlyName:"Scrollable Multi-series Column Chart",tooltipConstraint:"plot",canvasborderthickness:1,creditLabel:B,defaultDatasetType:"scrollcolumn2d",applicableDSList:{scrollcolumn2d:!0},avgScrollPointWidth:40,hasScroll:!0,defaultPlotShadow:1,binSize:0,_swipeX:function(f,b){var h=this.config,l=this.components,m=l.scrollBar.conf,k=m.scrollRatio,t=m.width-1,E=m.height-1,v=h.scrollToEnd,m=h.lastScrollPosition;
x(l.canvas.config.canvasBorderWidth,l.xAxis[0].config.lineStartExtension);var l=this.touchCurrPos,p=this.swipeStart,B=f.type,E=h.scrollShowButtons?K(E,.5*t):0,C=this.config.mousedown,m=void 0!==m?m:v;switch(B){case "touchstart":case "mousedown":this.config.mousedown=!0;this.prevScrollPosition=m;this.touchCurrPos=b;break;case "touchmove":case "mousemove":if(C)return p||a.raiseEvent("scrollStart",{scrollPosition:m},this.chartInstance),h=t-2*E-(t*k-2*E*k),h=K(N(m+(l-b)/h,0),1),this.updateManager(h),
this.swipeStart=!0,this.touchCurrPos=b,f.originalEvent.preventDefault?f.originalEvent.preventDefault():f.originalEvent.returnValue=!1,!0;break;case "touchend":case "mouseup":C&&(this.swipeStart&&(a.raiseEvent("scrollEnd",{prevScrollPosition:this.prevScrollPosition,scrollPosition:h.lastScrollPosition},this.chartInstance),this.swipeStart=!1),h.mousedown=!1)}},eiMethods:{scrollTo:m.mscartesian._scrollTo},_manageScrollerPosition:function(){var a=this.config,b;b=this._scrollBar.get;var h=this.components.scrollBar,
l;b=b()[0];h.setConfiguaration(b.conf);b=a.scrollEnabled;l=h.getLogicalSpace();this._allocateSpace({bottom:a.shift=!1===b?0:l.height+h.conf.padding})},_resetViewPortConfig:function(){this.config.viewPortConfig={scaleX:1,scaleY:1,x:0,y:0}},_setInitialDrawingIndex:function(){var a=this.config,b=this.components,h=b.xAxis[0],l=h._getVisibleConfig(),h=h.getCategoryLen(),m=b.dataset,k,t,E,v=m.length,p;a.showsum&&a.isstacked&&this._createSumLabelPool();this._createDataPool();for(p=0;p<v;p++)k=m[p],E=k.components,
E.removeDataArr=[],t=E.pool,k.drawn&&t&&(k=E.data.slice(a.scrollMinVal,a.scrollMaxVal),t.element&&t.element.push.apply(t.element,k.filter(this._filterDataFn).map(this._datasetModifyFn)),t.label&&t.label.push.apply(t.label,k.filter(this._filterLabelFn).map(this._labelModifyFn)),t.image&&t.image.push.apply(t.image,k.filter(this._filterImageFn).map(this._imageModifyFn)));(t=(b=b.datasetGroup_scrollcolumn2d)&&b.pool)&&a.isstacked&&(t=t.sumLabels[0])&&t.push.apply(t,b.graphics.sumLabels[0].slice(a.scrollMinVal,
a.scrollMaxVal).filter(this._filterSumFn).map(this._sumValModifyFn));a.visibleAxisMinVal=l.minValue;a.visibleAxisMaxVal=l.maxValue;a.startPathIndex=a.scrollMinVal=Math.max(Math.round(l.minValue),0);a.endPathIndex=a.scrollMaxVal=Math.min(Math.round(l.maxValue)+1,h)},updateManager:function(a){var b=this.config,l=this.config.viewPortConfig,m=l.scaleX,p=this.graphics.datasetGroup,k=this.graphics.datalabelsGroup,t=this.graphics.trackerGroup,E=b.canvasWidth*(m-1)*a,v=this.components,z=v.xAxis[0],x=this.graphics.sumLabelsLayer;
l.x=E/m;l="t"+-h(E)+",0";b.lastScrollPosition=a;void 0!==a&&v.scrollBar.node&&v.scrollBar.node.attr({"scroll-position":a});this._manageScroll();p.attr({transform:l});k.attr({transform:l});t.attr({transform:l});x&&x.attr({transform:l});a=z.getAxisConfig("animateAxis");b=z.getAxisConfig("drawAxisName");z.setAxisConfig({animateAxis:!1,drawAxisName:!1});z.draw();z.setAxisConfig({animateAxis:a,drawAxisName:b})},_filterLabelFn:function(a){if(a.graphics&&a.graphics.label)return a},_filterDataFn:function(a){a._xPos=
void 0;a._yPos=void 0;a._baseXPos=void 0;a._baseYPos=void 0;if(a.graphics&&a.graphics.element)return a},_filterImageFn:function(a){if(a.graphics&&a.graphics.image)return a},_filterSumFn:function(a){if(a.graphics&&a.element)return a},_datasetModifyFn:function(a){var b=a.graphics.element;a.graphics.element=void 0;return b.hide()},_imageModifyFn:function(a){var b=a.graphics.image;a.graphics.image=void 0;return b.hide()},_labelModifyFn:function(a){var b=a.graphics.label;a.graphics.label=void 0;return b.hide()},
_sumValModifyFn:function(a){var b=a.element;a.element=void 0;return b.hide()},_createSumLabelPool:function(){var a=this.components,b,h=a.paper,l;b=a.datasetGroup_scrollcolumn2d;a=b.pool;l=b.graphics&&b.graphics.sumLabelContainer;if(!a&&l)for(a=b.pool={sumLabels:[[]]},b=0;2>b;b++)a.sumLabels[0].push(h.text(l[0]))},_createDataPool:function(){var a=this.components,b,h=a.dataset,l=h.length,m,k,t,p,v=a.paper;for(m=0;m<l;m++){a=h[m];if(!a.drawn)break;b=a.components;k=a.graphics;t=k.container.anchorGroup||
k.container;p=k.dataLabelContainer;k=b.pool;if(!k)for(k=b.pool={element:[],label:[],image:[]},b=0;2>b;b++)k.element.push("column"===a.type?v.rect(t):v.polypath(t)),k.label.push(v.text(p))}},_manageScroll:function(){var a=this.config,b=this.components,l;l=b.xAxis[0]._getVisibleConfig();var m=b.dataset,p=m.length,k,t,E,v=a.scrollMinVal,z=a.scrollMaxVal,x=h(l.minValue),B=h(l.maxValue+1);k=a.visibleAxisMinVal;var K=B-x,C,N;.5<=l.maxValue-a.visibleAxisMaxVal?(N=B-z>K,a.scrollMinVal=N?B-K:z,a.scrollMaxVal=
B,a.visibleAxisMaxVal=l.maxValue,a.visibleAxisMinVal=l.minValue,a.startPathIndex=B-K,a.endPathIndex=B,E=!0):.5<=k-l.minValue&&(N=v-x>K,a.scrollMinVal=x,a.scrollMaxVal=N?x+K:v,a.visibleAxisMaxVal=l.maxValue,a.visibleAxisMinVal=l.minValue,a.startPathIndex=x,a.endPathIndex=x+K,t=!0);if(t||E){a.showsum&&a.isstacked&&(b=b.datasetGroup_scrollcolumn2d,b.drawSumValueFlag=!0,this._createSumLabelPool(),l=b.pool,E?C=b.graphics.sumLabels[0].slice(v,N?v+K:x):t&&(C=b.graphics.sumLabels[0].slice(N?z-K:B,z)),l.sumLabels[0].push.apply(l.sumLabels[0],
C.filter(this._filterSumFn).map(this._sumValModifyFn)));for(b=0;b<p;b++)k=m[b],l=k.components,this._createDataPool(),l=l.pool,E?C=k.components.data.slice(v,N?v+K:x):t&&(C=k.components.data.slice(N?z-K:B,z)),l.element.push.apply(l.element,C.filter(this._filterDataFn).map(this._datasetModifyFn)),l.label.push.apply(l.label,C.filter(this._filterLabelFn).map(this._labelModifyFn)),k.config.imageCount&&l.image.push.apply(l.image,C.filter(this._filterImageFn).map(this._imageModifyFn)),k.draw();a.scrollMinVal=
x;a.scrollMaxVal=B}},_createToolBox:function(){var b=this.components,h=this._scrollBar,l=h.get,p=h.add,x,k,t=b.scrollBar;m.mscartesian._createToolBox.call(this);x=b.tb;k=(b.toolBoxAPI||x.getAPIInstances(x.ALIGNMENT_HORIZONTAL)).Scroller;h.clear();p({isHorizontal:!0},{scroll:function(b){return function(){var f=arguments&&arguments[0],h=b.components.scrollBar.conf,k=h.scrollTo;b.config.scrollCurrPosition=f;k||a.raiseEvent("onScroll",{scrollPosition:f},b.chartInstance);h.scrollTo=!1;b.updateManager.apply(b,
arguments)}}(this)});h=l()[0];t||(b.scrollBar=(new k(h.conf,x.idCount,x.pId)).attachEventHandlers(h.handler))},_setAxisScale:function(){var a=this.config,b=this.components.xAxis[0].getCategoryLen(),h=this.jsonData,l=a.scrollOptions||(a.scrollOptions={}),m=this.components.dataset,k=m.length,t,p,v=0,z;z=a.canvasWidth;var B=a.scrollToEnd,K=a.lastScrollPosition,h=x(h.chart.numvisibleplot,Q(a.width/this.avgScrollPointWidth));for(p=0;p<k;p++)t=m[p],"column"===t.type&&v++;this.config.isstacked&&(v=1);b*=
v||1;2<=h&&h<b?(a.viewPortConfig.scaleX=b/=h,z=z*(b-1)*(void 0!==K?K:B?1:0),a.viewPortConfig.x=z/b,l.vxLength=h/k,a.scrollEnabled=!0):a.scrollEnabled=!1},drawScrollBar:function(){var b=this,h=b.config,m=h.viewPortConfig,p=b.components,B=b.graphics,k=p.paper,t=p.xAxis[0],E=t.config,v=t.config.axisRange,z=h.scrollOptions||(h.scrollOptions={}),K=v.max,C=v.min,N=z.vxLength,Q=p.scrollBar,v=Q.node,ia=h.scrollToEnd,ra=h.lastScrollPosition,sa=m.scaleX,na,ma,U,ba,Aa;ba=void 0!==ra?ra:ia?1:0;m=h.canvasLeft;
ia=h.canvasTop;ra=h.canvasHeight;na=h.canvasWidth;p=p.canvas.config;ma=p.canvasBorderWidth;U=E.showAxisLine?E.axisLineThickness||0:0;Aa=x(ma,E.lineStartExtension);E=x(ma,E.lineEndExtension);z.viewPortMin=C;z.viewPortMax=K;sa=z.scrollRatio=1/sa;N=z.windowedCanvasWidth=t.getAxisPosition(N);t=z.fullCanvasWidth=t.getAxisPosition(K-C)-N;z=B.scrollBarParentGroup;z||(z=B.scrollBarParentGroup=k.group("scrollBarParentGroup",B.parentGroup).insertBefore(B.datalabelsGroup));!1!==h.scrollEnabled?(Q.draw(m-Aa,
ia+ra+ma+U-2,{width:na+Aa+E,scrollRatio:sa,roundEdges:p.isRoundEdges,fullCanvasWidth:t,windowedCanvasWidth:N,scrollPosition:ba,parentLayer:z}),!v&&function(){var h;l.eve.on("raphael.scroll.start."+Q.node.id,function(k){h=k;a.raiseEvent("scrollstart",{scrollPosition:k},b.chartInstance)});l.eve.on("raphael.scroll.end."+Q.node.id,function(k){a.raiseEvent("scrollend",{prevScrollPosition:h,scrollPosition:k},b.chartInstance)})}()):Q&&Q.node&&Q.node.hide()},_drawDataset:function(){this._setClipping();m.mscartesian._drawDataset.call(this)},
_setClipping:function(){var a=this.config,b=this.graphics.datasetGroup,h=this.graphics.datalabelsGroup,l=this.graphics.trackerGroup,m=a.viewPortConfig,k=this.graphics.sumLabelsLayer,p=m.scaleX,x=this.get("config","animationObj"),v=x.duration,B=x.dummyObj,K=x.animObj,x=x.animType,m=m.x,a=a.height,C=this.components.canvas.config.clip["clip-canvas"],C=C&&C.slice(0)||[];this.config.clipSet?(b.animateWith(B,K,{"clip-rect":C},v,x),h.animateWith(B,K,{"clip-rect":C},v,x),l.attr({"clip-rect":C}),C[3]=a,C[1]=
0,k&&k.animateWith(B,K,{"clip-rect":C},v,x)):(b.attr({"clip-rect":C}),h.attr({"clip-rect":C}),l.attr({"clip-rect":C}),C[3]=a,C[1]=0,k&&k.attr({"clip-rect":C}));b.attr({transform:"T"+-(m*p)+",0"});h.attr({transform:"T"+-(m*p)+",0"});l.attr({transform:"T"+-(m*p)+",0"});k&&k.attr({transform:"T"+-(m*p)+",0"});this.config.clipSet=!0},configure:function(){var a=this.jsonData.chart,b;m.mscolumn2d.configure.call(this);b=this.config;b.scrollToEnd=x(a.scrolltoend,0);b.lastScrollPosition=void 0}},m.scrollbase)}]);
B.register("module",["private","modules.renderer.js-scrollarea2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),m=a.chartAPI,B=a.pluckNumber,p=Math.floor;m("scrollarea2d",{friendlyName:"Scrollable Multi-series Area Chart",tooltipConstraint:"plot",canvasborderthickness:1,creditLabel:b,hasScroll:!0,defaultDatasetType:"scrollarea2d",applicableDSList:{scrollarea2d:!0},avgScrollPointWidth:75,defaultPlotShadow:0,binSize:0,_setAxisScale:function(){var a=this.config,b=
this.components.xAxis[0].getCategoryLen(),m=this.jsonData,h=a.scrollOptions||(a.scrollOptions={}),x;x=a.lastScrollPosition;var l=a.scrollToEnd,f=a.canvasWidth,m=B(m.chart.numvisibleplot,p(a.width/this.avgScrollPointWidth));2<=m&&m<b?(a.viewPortConfig.scaleX=b/=m,x=f*(b-1)*(void 0!==x?x:l?1:0),a.viewPortConfig.x=x/b,h.vxLength=m,a.scrollEnabled=!0):a.scrollEnabled=!1}},m.scrollcolumn2d,{enablemousetracking:!0},m.areabase)}]);B.register("module",["private","modules.renderer.js-scrollline2d",function(){var a=
this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("scrollline2d",{friendlyName:"Scrollable Multi-series Line Chart",tooltipConstraint:"plot",canvasborderthickness:1,defaultDatasetType:"line",creditLabel:a,avgScrollPointWidth:75,defaultPlotShadow:1,binSize:0},b.scrollarea2d,{zeroplanethickness:1,zeroplanealpha:40,showzeroplaneontop:0,enablemousetracking:!0},b.areabase)}]);B.register("module",["private","modules.renderer.js-scrollstackedcolumn2d",function(){var a=this.hcLib,
b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("scrollstackedcolumn2d",{friendlyName:"Scrollable Stacked Column Chart",canvasborderthickness:1,tooltipConstraint:"plot",avgScrollPointWidth:75,creditLabel:b},a.scrollcolumn2d,{},a.stackedcolumn2d)}]);B.register("module",["private","modules.renderer.js-scrollcombi2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("scrollcombi2d",{friendlyName:"Scrollable Combination Chart",tooltipConstraint:"plot",
hasScroll:!0,canvasborderthickness:1,avgScrollPointWidth:40,applicableDSList:{area:!0,line:!0,column:!0},creditLabel:b,_createDatasets:a.mscombi2d},a.scrollcolumn2d,{},a.msarea)}]);B.register("module",["private","modules.renderer.js-scrollcombidy2d",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI;a("scrollcombidy2d",{friendlyName:"Scrollable Dual Y-Axis Combination Chart",tooltipConstraint:"plot",canvasborderthickness:1,avgScrollPointWidth:40,hasScroll:!0,
_swipeX:a.scrollcolumn2d,_drawDataset:a.scrollcolumn2d,updateManager:a.scrollcolumn2d,_setAxisScale:a.scrollcolumn2d,_createToolBox:a.scrollcolumn2d,_scrollBar:a.scrollcolumn2d,_manageScrollerPosition:a.scrollcolumn2d,drawScrollBar:a.scrollcolumn2d,_setClipping:a.scrollcolumn2d,_setInitialDrawingIndex:a.scrollcolumn2d,_filterLabelFn:a.scrollcolumn2d,_filterDataFn:a.scrollcolumn2d,_filterSumFn:a.scrollcolumn2d,_datasetModifyFn:a.scrollcolumn2d,_labelModifyFn:a.scrollcolumn2d,_sumValModifyFn:a.scrollcolumn2d,
_manageScroll:a.scrollcolumn2d,_createSumLabelPool:a.scrollcolumn2d,_createDataPool:a.scrollcolumn2d,_imageModifyFn:a.scrollcolumn2d,_filterImageFn:a.scrollcolumn2d,creditLabel:b,configure:a.scrollcolumn2d,eiMethods:{scrollTo:a.mscartesian._scrollTo}},a.mscombidy2d,{enablemousetracking:!0,isdual:!0},a.areabase)}]);B.register("module",["private","modules.renderer.js-scatter",function(){var a=this.hcLib,b=a.chartAPI,a=!a.CREDIT_REGEX.test(this.window.location.hostname);b("scatter",{friendlyName:"Scatter Chart",
isXY:!0,usesXYinCategory:!0,standaloneInit:!0,hasLegend:!0,defaultZeroPlaneHighlighted:!1,creditLabel:a,defaultDatasetType:"Scatter",applicableDSList:{Scatter:!0},drawTracker:!0},b.scatterBase,{allowreversexaxis:!0,enablemousetracking:!0})}]);B.register("module",["private","modules.renderer.js-bubble",function(){var a=this.hcLib,b=!a.CREDIT_REGEX.test(this.window.location.hostname),a=a.chartAPI,m=Math,B=m.max,p=m.min;a("bubble",{friendlyName:"Bubble Chart",standaloneInit:!0,defaultDatasetType:"bubble",
creditLabel:b,applicableDSList:{bubble:!0},getDataLimits:function(){var a=this.components.dataset,b,m,h,x=-Infinity,l=Infinity;b=0;for(h=a.length;b<h;b++)m=a[b],m=m.getDataLimits(),x=B(x,m.zMax||-Infinity),l=p(l,m.zMin||Infinity);x=-Infinity===x?0:x;l=Infinity===l?0:l;return{zMax:x,zMin:l}}},a.scatter,{enablemousetracking:!0})}])},[3,2,2,"sr4"]]);B.register("module",["private","modules.renderer.js-zoomline",function(){var a=this,b=a.hcLib,m=b.hashify,C=a.window,p=C.document,K=C.Image,N=C.MouseEvent,
Q=/msie/i.test(C.navigator.userAgent)&&!C.opera,h=b.chartAPI,x=b.extend2,l=b.addEvent,f=b.pluck,q=b.pluckNumber,y=b.getFirstColor,G=b.graphics.convertColor,L=b.bindSelectionEvent,k=b.parseUnsafeString,t=b.componentDispose,E=b.Raphael,v=b.toRaphaelColor,z=b.hasTouch,Y=b.plotEventHandler,ka=b.getMouseCoordinate,ea=!b.CREDIT_REGEX.test(C.location.hostname),va=b.TOUCH_THRESHOLD_PIXELS,ia=b.CLICK_THRESHOLD_PIXELS,ra=z?va:ia,sa=b.preDefStr.DEFAULT,na="rgba(192,192,192,"+(Q?.002:1E-6)+")",ma=b.schedular,
U=b.priorityList,ba=Math,Aa=ba.ceil,ua=ba.floor,P=ba.round,fa=ba.max,qa=ba.min,wa=ba.cos,ta=ba.sin,xa=C.parseFloat,Fa=C.parseInt,r;x(b.eventList,{zoomed:"FC_Zoomed",pinned:"FC_Pinned",resetzoomchart:"FC_ResetZoomChart"});h("zoomline",{standaloneInit:!0,canvasborderthickness:1,defaultDatasetType:"zoomline",applicableDSList:{zoomline:!0},friendlyName:"Zoomable and Panable Multi-series Line Chart",creditLabel:ea,_drawAxis:function(){var a=this.components.yAxis||[],c,d;c=0;for(d=a.length;c<d;c++)a[c].draw()},
_setCategories:function(){var a=this.config,c=this.jsonData,d=this.components.xAxis,n,b,h;b=a.cdmchar;var f=c.categories&&c.categories[0].category||[];if((a.cdm||"string"===typeof f)&&f.split){a=f.split(b);n=[];b=0;for(h=a.length;b<h;b+=1)n.push({label:a[b]});this.config.categories=c.categories[0].category=n}d[0].setAxisPadding(0,0);d[0].setCategory(n||f)},_createDatasets:function(){var a,c,d,b,g,h,k,w,l;g={};var m=this.config;a=this.components;w=this.jsonData;var q=w.dataset,F=q&&q.length,p=m.cdmchar,
u=m.cdm,r=this.defaultDatasetType,v=this.applicableDSList,m=this.components.legend.components.items||[];w=w.categories&&w.categories[0].category;q&&w||this.setChartMessage();this.config.categories=w;w=a.dataset||(a.dataset=[]);l=w.length;for(a=0;a<F;a++){k=q[a];if(u&&k.data&&k.data.split){h=k.data.split(p);b=[];c=0;for(d=h.length;c<d;c++)b.push({value:h[c]});k.data=b}c=k.parentyaxis||"";c=(c=this.isDual&&"s"===c.toLowerCase()?f(k.renderas,this.sDefaultDatasetType):f(k.renderas,r))&&c.toLowerCase();
v[c]||(c=r);if(d=B.get("component",["dataset",c]))void 0===g[c]?g[c]=0:g[c]++,(c=w[a])?(d=(c.JSONData.data||[]).length,b=(k.data||[]).length,d>b&&c.removeData(b,d-b,!1),w[a].JSONData=k,w[a].configure(),w[a]._deleteGridImages&&w[a]._deleteGridImages()):(c=new d,w.push(c),c.chart=this,c.index=a,c.init(k))}if(l>F){g=l-F;c=a;for(F=g+a;c<F;c++)t.call(w[c]);w.splice(a,g);m.splice(a,g)}},isWithinCanvas:function(a,c){var d=c.get("config"),n=b.getMouseCoordinate(c.get("linkedItems","container"),a,c),g=n.chartX,
h=n.chartY,f=d.canvasLeft,w=d.canvasTop,k=d.canvasLeft+d.canvasWidth,d=d.canvasHeight+d.canvasTop;n.insideCanvas=!1;n.originalEvent=a;g>f&&g<k&&h>w&&h<d&&(n.insideCanvas=!0);return n},highlightPoint:function(a,c,d,n,g,h){var f=this,k=f.config,l=f.components,m=f.graphics,q=l.paper,F=m.tracker,p=(l=l.dataset[g])&&l.config;g=l&&p.zoomedRadius||0;var u=l&&p.hoverCosmetics,l=u&&u.fill,p=u&&u.borderColor,u=u&&u.borderThickness,r={},r=function(a){b.plotEventHandler.call(this,f,a)},t=function(a){b.plotEventHandler.call(this,
f,a,"dataplotRollover")},v=function(a){b.plotEventHandler.call(this,f,a,"dataplotRollout")};F||(F=m.tracker=q.circle(0,0,0,m.trackerGroup).attr({"clip-rect":k.canvasLeft+","+k.canvasTop+","+k.canvasWidth+","+k.canvasHeight}).click(r).trackTooltip(!0).hover(t,v));n&&F.data("eventArgs",{x:n.x,y:n.y,tooltip:n.tooltip,link:n.link});k.lastHoveredPoint=n;r=Number(a)?{r:g,fill:l,stroke:p,"stroke-width":u}:{r:g,fill:na,stroke:na,"stroke-width":0};F.attr(r).tooltip(h).transform("t"+(c+k.canvasLeft)+","+(d+
k.canvasTop));n&&f.fireMouseEvent("mouseover",F&&F.node,k.lastMouseEvent)},fireMouseEvent:function(a,c,d){var b;c&&a&&(d||(d={}),d.originalEvent&&(d=d.originalEvent),d.touches&&(d=d.touches[0]),c.dispatchEvent?(N?b=new N(a,{bubbles:!!d.bubbles,cancelable:!!d.cancelable,clientX:d.clientX||d.pageX&&d.pageX-p.body.scrollLeft-p.documentElement.scrollLeft||0,clientY:d.clientY||d.pageY&&d.pageY-p.body.scrollTop-p.documentElement.scrollTop||0,screenX:d.screenX||0,screenY:d.screenY||0,pageX:d.pageX||0,pageY:d.pageY||
0}):p.createEvent&&(b=p.createEvent("HTMLEvents"),b.initEvent(a,!!d.bubbles,!!d.cancelable)),b.eventName=a,b&&c.dispatchEvent(b)):p.createEventObject&&c.fireEvent&&(b=p.createEventObject(),b.eventType=a,b.eventName=a,c.fireEvent("on"+a,b)))},configure:function(){var a,c=this.jsonData.chart||{},d=this.components.colorManager,b=d.getColor("canvasBorderColor"),g;c.animation=0;c.showvalues=0;h.msline.configure.call(this);g=this.config;a=g.style;x(g,{useRoundEdges:q(c.useroundedges,0),animation:!1,zoomType:"x",
canvasPadding:q(c.canvaspadding,0),scrollColor:y(f(c.scrollcolor,d.getColor("altHGridColor"))),scrollShowButtons:!!q(c.scrollshowbuttons,1),scrollHeight:q(c.scrollheight,16)||16,scrollBarFlat:q(c.flatscrollbars,0),allowPinMode:q(c.allowpinmode,1),skipOverlapPoints:q(c.skipoverlappoints,1),showToolBarButtonTooltext:q(c.showtoolbarbuttontooltext,1),btnResetChartTooltext:f(c.btnresetcharttooltext,"Reset Chart"),btnZoomOutTooltext:f(c.btnzoomouttooltext,"Zoom out one level"),btnSwitchToZoomModeTooltext:f(c.btnswitchtozoommodetooltext,
"<strong>Switch to Zoom Mode</strong><br/>Select a subset of data to zoom into it for detailed view"),btnSwitchToPinModeTooltext:f(c.btnswitchtopinmodetooltext,"<strong>Switch to Pin Mode</strong><br/>Select a subset of data and compare with the rest of the view"),pinPaneFill:G(f(c.pinpanebgcolor,b),q(c.pinpanebgalpha,15)),zoomPaneFill:G(f(c.zoompanebgcolor,"#b9d5f1"),q(c.zoompanebgalpha,30)),zoomPaneStroke:G(f(c.zoompanebordercolor,"#3399ff"),q(c.zoompaneborderalpha,80)),showPeakData:q(c.showpeakdata,
0),maxPeakDataLimit:q(c.maxpeakdatalimit,c.maxpeaklimit,null),minPeakDataLimit:q(c.minpeakdatalimit,c.minpeaklimit,null),crossline:{enabled:q(c.showcrossline,1),line:{"stroke-width":q(c.crosslinethickness,1),stroke:y(f(c.crosslinecolor,"#000000")),"stroke-opacity":q(c.crosslinealpha,20)/100},labelEnabled:q(c.showcrosslinelabel,c.showcrossline,1),labelstyle:{fontSize:xa(c.crosslinelabelsize)?xa(c.crosslinelabelsize)+"px":a.outCanfontSize,fontFamily:f(c.crosslinelabelfont,a.outCanfontFamily)},valueEnabled:q(c.showcrosslinevalues,
c.showcrossline,1),valuestyle:{fontSize:xa(c.crosslinevaluesize)?xa(c.crosslinevaluesize)+"px":a.inCanfontSize,fontFamily:f(c.crosslinevaluefont,a.inCanvasStyle.fontFamily)}},useCrossline:q(c.usecrossline,1),tooltipSepChar:f(c.tooltipsepchar,", "),showTerminalValidData:q(c.showterminalvaliddata,0),cdmchar:f(c.dataseparator,"|"),cdm:q(c.compactdatamode,0)})},getValuePixel:function(a){var c=this.config.viewPortConfig;return c.ddsi+ua(a/c.ppp)},__toolbar:function(){var a,c,d,b,g=this,h=g.components,
f=h.tb=new (B.register("component",["toolbox","toolbox"])),k=f.getDefaultConfiguration(),l,m;f.init({iAPI:{chart:g},graphics:g.graphics,chart:g,components:h});a=h.toolBoxAPI||f.getAPIInstances(f.ALIGNMENT_HORIZONTAL);c=a.SymbolStore;d=a.ComponentGroup;b=a.Toolbar;l=a.Symbol;m=a.Scroller;f.graphics={};return{reInit:function(){f.init({iAPI:{chart:g},graphics:g.graphics,chart:g,components:h})},addSymbol:function(a,c,e,d){a=new l(a);e&&d.setConfiguaration({buttons:x(x({},k),e)});c.tooltext=e.tooltip;
c&&a.attachEventHandlers(c);d.addSymbol(a);return a},addScroll:function(a,c){var e=new m(a);c&&e.attachEventHandlers(c);return e},addComponentGroup:function(a,c){var e;e=new d;e.setConfiguaration({group:{fill:c?c.fill:G("EBEBEB",0),borderThickness:c?q(c.borderThickness,0):0}});return e},addToolBox:function(a){var c,e=new b;for(c=0;c<a.length;c+=1)e.addComponent(a[c]);return e},setDrawingArea:function(a,c){a.drawingArea=c;return a},draw:function(a){var c,e,d;for(c=0;c<a.length;c+=1)e=a[c],d=e.drawingArea,
e.draw(d.x,d.y)},registerSymbol:function(a,e){c.register(a,e)},getLogicalSpace:function(a){return a.getLogicalSpace()},getNode:function(a){return a.node}}},__preDraw:function(){var a,c,d,b,g,h,f,k,l,m=this,p=m.components,F=p.paper,t=m.graphics;c=t.imageContainer;var u=m.config,v=u.canvasLeft,B=u.canvasWidth;a=m.jsonData.chart;var y=u.cdm;d=p.xAxis[0];var A=u.viewPortConfig,z=m.components.canvas.config;g=fa(z.canvasPadding,z.canvasPaddingLeft,z.canvasPaddingRight);h=p.yAxis[0];l=t.datasetGroup;var z=
u.canvasHeight,C=u.canvasTop,G=m.jsonData.chart,G=u.borderWidth||(u.borderWidth=q(G.showborder,1)?q(G.borderthickness,1):0);f=u.allowPinMode;var K=u.crossline,A=d.getCategoryLen(),N=Fa(q(a.displaystartindex,1),10)-1,P=Fa(q(a.displayendindex,A||2),10)-1,Q=0,R=p.dataset,D=R.length,p=t.crossline;u.updateAnimDuration=500;c.transform("t"+v+","+C);c.attr({"clip-rect":v+","+C+","+B+","+z});u.status="zoom";u.maxZoomLimit=q(a.maxzoomlimit,1E3);u.viewPortHistory=[];1>(c=q(a.pixelsperpoint,15))&&(c=1);(d=q(a.pixelsperlabel,
a.xaxisminlabelwidth,d.getAxisConfig("labels").rotation?20:60))<c&&(d=c);(0>N||N>=(A-1||1))&&(N=0);(P<=N||P>(A-1||1))&&(P=A-1||1);A=u.viewPortConfig=x(u.viewPortConfig,{amrd:q(a.anchorminrenderdistance,20),nvl:q(a.numvisiblelabels,0),cdm:y,oppp:c,oppl:d,dsi:N,dei:P,vdl:P-N,clen:A,offset:0,step:1,llen:0,alen:0,ddsi:N,ddei:P,ppc:0});if(A.clen){for(;D--;)a=R[D].config,Q=fa(Q,a.drawanchors&&(a.anchorradius||0)+(Number(a.anchorborderthickness)||0)||0);u.overFlowingMarkerWidth=Q;g=u.canvasPadding=fa(Q,
g);u._prezoomed=A.dei-A.dsi<A.clen-1;a=u._visw=u.canvasWidth-2*g;b=u._visx=u.canvasLeft+g;u._visout=-(u.height+z+1E3);u._ypvr=h&&h.getPVR()||0;g=u._yminValue=h.getLimit().min;h=u._ymin=h.getPixel(g);l=l.attr("clip-rect",[b-Q,C,a+2*Q,z]);t.scroll||(t.scroll=F.group("scroll").insertAfter(t.datasetGroup));f&&(u.viewPortConfig.pinned=!1,f=E.crispBound(0,C-h,0,z,G),u["clip-pinrect"]=[f.x,C,f.width,f.height],k=(t.zoompin||(t.zoompin=F.group("zoompin"))).insertBefore(l).transform(u._pingrouptransform=["T",
b,h]).hide(),l={"stroke-width":0,stroke:"none",fill:u.pinPaneFill,"shape-rendering":"crisp",ishot:!0},t.pinrect?(l.x=0,l.y=C-h,l.width=a,l.height=z,t.pinrect.attr(l)):t.pinrect=F.rect(0,C-h,a,z,k).attr(l),l={transform:k.transform(),x:0,y:C-h,width:0,height:z,stroke:"none",fill:na,ishot:!0,cursor:E.svg&&"ew-resize"||"e-resize"},t.pintracker?t.pintracker.attr(l).hide():t.pintracker=F.rect(t.trackerGroup).attr(l).hide().drag(function(a,c){var e=c[0],d=b+e+this.__pindragdelta,g=this.__pinboundleft,h=
this.__pinboundright,f=this.data("cliprect").slice(0),l=u._ymin;d<g?d=g:d>h&&(d=h);k.transform(["T",d,l]);t.pintracker.transform(k.transform());E.svg||(f[0]=f[0]+d-b-this.__pindragdelta,k.attr("clip-rect",f));this.__pindragoffset=e},function(){var a=u["clip-pinrect"],c=u._visw;this.__pinboundleft=0-a[0]+u._visx+u.canvasLeft;this.__pinboundright=this.__pinboundleft+c-a[2];this.data("cliprect",k.attr("clip-rect"));k._.clipispath=!0},function(){k._.clipispath=!1;this.__pindragdelta+=this.__pindragoffset;
delete this.__pindragoffset;delete this.__pinboundleft;delete this.__pinboundright}));G++;f=E.crispBound(v-G,C+z+G,B+G+G,u.scrollHeight,G);G--;L(m,{attr:{stroke:u.zoomPaneStroke,fill:u.zoomPaneFill,strokeWidth:0},selectionStart:function(){},selectionEnd:function(a){var c=a.selectionLeft-v;a=c+a.selectionWidth;t.crossline&&t.crossline.hide();m[u.viewPortConfig.pinned?"pinRangePixels":"zoomRangePixels"](c,a)}});K&&0!==K.enabled&&1===u.useCrossline?(p||(p=t.crossline=new r),p.configure(m,K)):(K&&(K.enabled=
0),p&&p.hide())}},resetZoom:function(){var e=this.config.viewPortHistory,c=e[0];if(!e.length)return!1;e.length=0;this.zoomTo(c.dsi,c.dei,c)&&a.raiseEvent("zoomReset",this._zoomargs,this.chartInstance,[this.chartInstance.id]);return!0},eiMethods:{zoomOut:function(a){var c=this.apiInstance,d=c.chartInstance.args.asyncRender,b,g=c.getJobList();if(c)if(d)g.eiMethods.push(ma.addJob(function(){b=c.zoomOut&&c.zoomOut();"function"===typeof a&&a(b)},U.postRender));else return c.zoomOut&&c.zoomOut()},scrollTo:h.mscartesian._scrollTo,
zoomTo:function(a,c,d){var b=this.apiInstance,g=b.chartInstance.args.asyncRender,h,f=b.getJobList();if(b)if(g||d)f.eiMethods.push(ma.addJob(function(){h=b.zoomRange&&b.zoomRange(a,c);"function"===typeof d&&d(h)},U.postRender));else return b.zoomRange&&b.zoomRange(a,c)},resetChart:function(){var a=this.apiInstance,c=a.chartInstance.args.asyncRender,d=a.getJobList(),b=function(){a.pinRangePixels&&a.pinRangePixels();a.resetZoom&&a.resetZoom()};a&&(c?d.eiMethods.push(ma.addJob(b,U.postRender)):b())},
setZoomMode:function(a){var c=this.apiInstance,d=c.chartInstance.args.asyncRender,b=c.getJobList();c&&(d?b.eiMethods.push(ma.addJob(function(){c.activatePin&&c.activatePin(!a)},U.postRender)):c.activatePin&&c.activatePin(!a))},getViewStartIndex:function(a){var c=this.apiInstance,d=c.chartInstance.args.asyncRender,b,g=c.getJobList();if(a||d)g.eiMethods.push(ma.addJob(function(){"function"===typeof a&&c&&(b=c.config.viewPortConfig)&&a(b.ddsi)},U.postRender));else if(c&&(b=c.config.viewPortConfig))return b.ddsi},
getViewEndIndex:function(a){var c=this.apiInstance,d=c.chartInstance.args.asyncRender,b,g,h=c.getJobList();if(a||d)h.eiMethods.push(ma.addJob(function(){"function"===typeof a&&c&&(b=c.config.viewPortConfig)&&(g=b.ddei-1,a((g>=b.clen?b.clen:g)-1))},U.postRender));else if(c&&(b=c.config.viewPortConfig))return g=b.ddei-1,(g>=b.clen?b.clen:g)-1}},zoomOut:function(){var e,c,d=this.config;c=d.viewPortHistory;var b,g,h;e=c.pop();c=c[0]||d.viewPortConfig;e?(b=e.dsi,g=e.dei):d._prezoomed&&(b=0,g=c.clen-1);
(h=this.zoomTo(b,g,e))&&a.raiseEvent("zoomedout",h,this.chartInstance);return!0},zoomRangePixels:function(e,c){var d=this.config,b=d.viewPortHistory,d=d.viewPortConfig,g=d.ppp,h=d.ddsi,f;b.push(d);(f=this.zoomTo(h+ua(e/g),h+ua(c/g)))?a.raiseEvent("zoomedin",f,this.chartInstance):b.pop()},zoomRange:function(e,c){var d,b,g=this.config,h=g.viewPortConfig;b=this.components.xAxis[0];var f=g.viewPortHistory,k;f.push(h);d=b.getPixel(e);b=b.getPixel(c);h.x=d;h.scaleX=g.canvasWidth/(d-b);(k=this.zoomTo(+e,
+c))?a.raiseEvent("zoomedin",k,this.chartInstance):f.pop()},zoomTo:function(e,c,d){var b,g;b=this.config;var h=this.components,f=b.viewPortConfig,k=b.canvasHeight;g=b.canvasLeft;var l=b.canvasTop,m=b.canvasBottom,p=b.viewPortHistory,q=f.clen,r=this.components.xAxis[0];0>e&&(e=0);e>=q-1&&(e=q-1);c<=e&&(c=e+1);c>q-1&&(c=q-1);if(e===c||e===f.dsi&&c===f.dei)return!1;this.pinRangePixels();f=x({},f);f.dsi=e;f.dei=c;f=b.viewPortConfig=f;d?this.updateVisual(d.x,d.y,d.scaleX,d.scaleY):(d=r.getPixel(e),b=r.getPixel(c),
g=this.getOriginalPositions(d-g,l,b-g,m-l),this.zoomSelection(g[0],0,g[2],k));h.scrollBar.node.attr({"scroll-ratio":f.vdl/(q-!!q),"scroll-position":[f.dsi/(q-f.vdl-1),!0]});h={level:p.length+1,startIndex:e,startLabel:r.getLabel(e).label,endIndex:c,endLabel:r.getLabel(c).label};a.raiseEvent("zoomed",h,this.chartInstance,[this.chartInstance.id,e,c,h.startLabel,h.endLabel,h.level]);return h},activatePin:function(e){var c=this.config.viewPortConfig,d=this.components.tb.graphics.pinButton;if(c.pinned^
(e=!!e))return e||this.pinRangePixels(),a.raiseEvent("zoomModeChanged",{pinModeActive:e},this.chartInstance,[]),this.updateButtonVisual(d.node,e?"pressed":"enable"),c.pinned=e},updateButtonVisual:function(a,c){return a.attr({disable:{config:{hover:{fill:"#FFFFFF","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#E3E3E3",cursor:"default"},normal:{fill:"#FFFFFF","fill-symbol":"#FFFFFF",stroke:"#E3E3E3","stroke-width":1,cursor:"default"},disable:{fill:"#FFFFFF","fill-symbol":"#FFFFFF","stroke-width":1,
stroke:"#E3E3E3","stroke-opacity":1,cursor:"default"},pressed:{fill:"#FFFFFF","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#E3E3E3",cursor:"default"}},"button-disabled":!1,stroke:"#E3E3E3","stroke-opacity":1},enable:{config:{hover:{fill:"#FFFFFF","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#aaaaaa",cursor:"pointer"},normal:{fill:"#FFFFFF","fill-symbol":"#FFFFFF",stroke:"#C2C2C2","stroke-width":1,cursor:"pointer"},disable:{fill:"#FFFFFF","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#E3E3E3",
"stroke-opacity":1,cursor:"pointer"},pressed:{fill:"#EFEFEF","fill-symbol":"#EFEFEF","stroke-width":1,stroke:"#C2C2C2",cursor:"pointer"}},"button-disabled":!1,fill:["#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF",!0],stroke:"#C2C2C2","stroke-opacity":1},pressed:{config:{hover:{fill:"#dcdcdc","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#b7b7b7",cursor:"pointer"},normal:{fill:"#dcdcdc","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#b7b7b7",cursor:"pointer"},pressed:{fill:"#dcdcdc","fill-symbol":"#FFFFFF",
"stroke-width":1,stroke:"#b7b7b7",cursor:"pointer"}},fill:"#dcdcdc","fill-symbol":"#FFFFFF","stroke-width":1,stroke:"#b7b7b7",cursor:"pointer"}}[c])},pinRangePixels:function(a,c){var d,b=this.components,g=b.paper,h=this.graphics,f=this.config,k=f.canvasLeft,l=f.viewPortConfig,m=h.zoompin;d=h.pinrect;var q=f["clip-pinrect"],p=f._pingrouptransform,b=b.dataset,r=c-a,u,t,v,h=h.pintracker;if(l&&m&&d){if(a===c)return m.hide(),h.hide(),l.pinned=!1;for(v=b.length;v--;)u=b[v],d=u.graphics,t=d.pinline,t||(t=
d.pinline=g.path(m)),t.attr({path:d.lineElement.attrs.path,transform:["T",-f._visx,-f._ymin]}).attr(u.config.pin);q[0]=a+k;q[2]=r;m.attr({"clip-rect":q,transform:p}).show();h.__pindragdelta=0;h.show().attr({transform:p,x:a,width:r});this.getValuePixel(a);this.getValuePixel(c);return l.pinned=!0}},_createLayers:function(){var a,c=this.components.paper;h.scatter._createLayers.call(this);a=this.graphics;a.imageContainer=c.group("dataset-orphan",a.dataSetGroup);this.__preDraw()},getValue:function(a){var c=
this.config,d=this.components,b=c.viewPortConfig;a=this.getOriginalPositions(a.x,a.y,a.x,a.y);var g=d.xAxis[0].config.axisRange,d=d.yAxis[0].config.axisRange,h=g.min,f=d.max;return{x:h+(a[0]-c.canvasLeft)/(c.canvasWidth*b.scaleX/(g.max-h)),y:f-(a[1]-c.canvasTop)/(c.canvasHeight*b.scaleY/(f-d.min))}},getOriginalPositions:function(a,c,d,b){var g=this.config,h=g.viewPortConfig,f=h.scaleX,k=h.scaleY,l=h.x,h=h.y,m=qa(a,d);a=fa(a,d);d=qa(c,b);c=fa(c,b);a=a>g.canvasWidth?g.canvasWidth:a;c=c>g.canvasHeight?
g.canvasHeight:c;m=0>m?0:m;d=0>d?0:d;return[l+m/f,h+d/k,(a-m)/f,(c-d)/k]},zoomSelection:function(a,c,d,b){var g=this.config;d&&b&&(d=Math.abs(g.canvasWidth/d),b=Math.abs(g.canvasHeight/b),this.updateVisual(a,c,d,b))},updateVisual:function(a,c,b,n,g){var h=this.config,f=h.viewPortConfig,k=h.canvasWidth,l=h.canvasHeight,m=h.viewPortHistory.slice(-1)[0]||f,h=h.maxZoomLimit;f.x=isNaN(a)?a=m.x:a;f.y=isNaN(c)?c=m.y:c;f.scaleX=b||(b=m.scaleX);f.scaleY=n||(n=m.scaleY);b>h&&(f.x=qa(a,k-k/h),f.scaleX=h);n>
h&&(f.y=qa(c,l-l/h),f.scaleY=h);this.updateManager(g)},toogleDragPan:function(a){var c=this.config.viewPortConfig,b=c.status;a&&(c.status="zoom"===b?"pan":"zoom")},resize:function(){var a=this.config,c=this.graphics,b=this.components.canvas,h=b.graphics,g=h.canvasBorderElement,h=h.canvasElement,b=b.config.canvasBorderThickness,f=b/2,k=a.canvasHeight-=b,l=a.canvasWidth-=2*b,m=a.canvasLeft+=b;a.canvasBottom-=b;a.canvasRight-=b;h?h.attr({x:m,y:a.canvasTop,height:k,width:l}):this.drawCanvas();g&&g.attr({x:m-
f,y:a.canvasTop-f,height:k+b,width:l+b,"stroke-width":b});c.imageContainer.attr({"clip-rect":a.canvasLeft+","+a.canvasTop+","+a.canvasWidth+","+a.canvasHeight}).transform("t"+a.canvasLeft+","+a.canvasTop);c.trackerElem.attr({x:a.canvasLeft,y:a.canvasTop,width:a.canvasWidth,height:a.canvasHeight});c.tracker&&c.tracker.attr({"clip-rect":a.canvasLeft+","+a.canvasTop+","+a.canvasWidth+","+a.canvasHeight})},updateManager:function(a){var c,b;b=this.components;var h=b.dataset,g=h.length;c=this.config;var f=
c.allowPinMode,k=c.viewPortConfig,l=c._ypvr,m=c._visw,q=this.components.xAxis[0],p=function(){return q.getPixel.apply(q,arguments)},r=q.getAxisConfig("labels").style,t,u,v,x,z,A=this.updateButtonVisual,y=b.tb.graphics,G=y.zoomOutButton,E=y.resetButton,y=y.pinButton,K=c.viewPortHistory;if(c.legendClicked)for(a=0;a<g;a+=1)h[a].draw();else{!k&&(k=c.viewPortConfig);t=k.oppp;z=v=k.nvl;u=k.dsi;v=k.dei;u=k.vdl=v-u;v=k.ppl=z?m/z:k.oppl;m=k.step=(x=k.ppp=m/u)<t?Aa(t/x):1;r=k.lskip=Aa(fa(v,xa(r.lineHeight))/
x/m);void 0!==a?(t=(k.clen-u-1)*a,k.offset=(t-(t=Fa(t)))*x,u=t+u):(t=k.dsi,u=k.dei,k.offset=0);x=k.norm=t%m;k.ddsi=t-=x;k.ddei=u=u+2*m-x;k.pvr=l;k._ymin=c._ymin;k._yminValue=c._yminValue;k.x=(p(t)-p(q.getLimit().min)+k.offset)/k.scaleX;u-t>q.getCategoryLen()?k.scaleX=1:k.scaleX=q.getCategoryLen()/Math.abs(u-t-m-.9);void 0!==a&&b.scrollBar.node&&b.scrollBar.node.attr({"scroll-position":k._pos=a});b=q._getVisibleConfig();b=Math.ceil((b.maxValue-b.minValue+1)/z);c=c.viewPortConfig&&c.viewPortConfig.scaleX;
c=Math.max(Math.round(q.getAxisConfig("labelStep")/c),z?b:r*m);q.setLabelConfig({step:c});c=q.getAxisConfig("animateAxis");z=q.getAxisConfig("drawAxisName");a&&q.setAxisConfig({animateAxis:!1,drawAxisName:!1});q.draw();q.setAxisConfig({animateAxis:c,drawAxisName:z});for(a=0;a<g;a+=1)h[a].draw();A(G.node,k.vdl===k.clen-1?"disable":"enable");A(E.node,0<K.length?"enable":"disable");y&&A(y.node,f?"enable":"disable");C.FC_DEV_ENVIRONMENT&&C.jQuery&&(B["debugger"].enable()?(this.debug=this.debug||(C.jQuery("#fc-zoominfo").length||
C.jQuery("body").append('<pre id="fc-zoominfo">'),C.jQuery("#fc-zoominfo").css({position:"absolute",left:"10px",top:"0","pointer-events":"none",opacity:.7,width:"250px",zIndex:"999",border:"1px solid #cccccc","box-shadow":"1px 1px 3px #cccccc",background:"#ffffff"})),this.debug.text(JSON.stringify(k,0,2))):(this.debug&&C.jQuery("#fc-zoominfo").remove(),delete this.debug))}},_drawDataset:function(){h.zoomline.updateManager.call(this)},getParsedLabel:function(a){var c=this.xlabels;return c.parsed[a]||
(c.parsed[a]=k(c.data[a]||""))},_createToolBox:function(){var a,c,b,f,g,k,l,m=this,q=m.config;l=q.allowPinMode;f=m.components;var p=q.showToolBarButtonTooltext;a=f.chartMenuBar;c=f.actionBar;a&&a.drawn||c&&c.drawn||(h.scrollcolumn2d._createToolBox.call(m),a=f.tb,c=a.graphics||(a.graphics={}),b=f.toolBoxAPI||a.getAPIInstances(a.ALIGNMENT_HORIZONTAL),b=b.Symbol,f=(f.chartMenuBar||f.actionBar).componentGroups[0],g=c.zoomOutButton=(new b("zoomOutIcon",void 0,a.idCount++,a.pId)).attachEventHandlers({click:function(){m.zoomOut()},
tooltext:p&&q.btnZoomOutTooltext||""}),k=c.resetButton=(new b("resetIcon",void 0,a.idCount++,a.pId)).attachEventHandlers({click:function(){m.resetZoom()},tooltext:p&&q.btnResetChartTooltext||""}),l&&(l=c.pinButton=(new b("pinModeIcon",void 0,a.idCount++,a.pId)).attachEventHandlers({click:function(){m.activatePin(!q.viewPortConfig.pinned)},tooltext:p&&q.btnSwitchToPinModeTooltext||""}),f.addSymbol(l,!0)),f.addSymbol(k,!0),f.addSymbol(g,!0))},_scrollBar:h.scrollcolumn2d,_manageScrollerPosition:h.scrollcolumn2d,
draw:function(){var b,c,d,f,g,k,l,m,q,p,t=this,r=t.config,v=t.graphics||(t.graphics={});k=t.components;b=t.jsonData;f=b.dataset;var u=b.categories&&b.categories[0].category,x;h.msline.draw.call(t);l=r.canvasLeft;m=r.canvasTop;q=r.canvasHeight;p=r.canvasWidth;b=r.borderWidth;c=r.useRoundEdges;d=r.viewPortConfig;(x=v.toolboxParentGroup)||(x=v.toolboxParentGroup=k.paper.group("toolbarParentGroup",v.parentGroup));f&&u&&(b++,f=E.crispBound(l-b,m+q+b,p+b+b,r.scrollHeight,b),b--,k=(g=k.scrollBar)&&g.node,
g.draw(f.x+(c&&-1||b%2),f.y-(c&&4||2),{isHorizontal:!0,width:f.width-(!c&&2||0),height:f.height,showButtons:r.scrollShowButtons,scrollRatio:d.vdl/(d.clen-!!d.clen),scrollPosition:[d.dsi/(d.clen-d.vdl-1),!1],r:c&&2||0,parentLayer:x.insertBefore(v.datalabelsGroup)}),!k&&function(){var c;E.eve.on("raphael.scroll.start."+g.node.id,function(b){c=b;t.graphics.crossline&&t.graphics.crossline.disable(!0);a.raiseEvent("scrollstart",{scrollPosition:b},t.chartInstance)});E.eve.on("raphael.scroll.end."+g.node.id,
function(b){t.graphics.crossline&&t.graphics.crossline.disable(!1);a.raiseEvent("scrollend",{prevScrollPosition:c,scrollPosition:b},t.chartInstance)})}())}},h.msline,{showValues:0,zeroplanethickness:1,zeroplanealpha:40,showzeroplaneontop:0,enablemousetracking:!0});h("zoomlinedy",{standaloneInit:!0,defaultDatasetType:"zoomline",applicableDSList:{zoomline:!0},creditLabel:ea,friendlyName:"Zoomable and Panable Multi-series Dual-axis Line Chart",_spaceManager:h.msdybasecartesian._spaceManager,_setAxisLimits:h.msdybasecartesian._setAxisLimits,
_createAxes:h.msdybasecartesian._createAxes,_feedAxesRawData:h.msdybasecartesian._feedAxesRawData},h.zoomline,{isdual:!0});B.register("component",["dataset","zoomline",{_setConfigure:function(){var a=this.config,c=this.chart.jsonData.chart,b=this.JSONData;a.drawanchors=q(c.drawanchors,c.showanchors,1);a.anchorradius=q(b.anchorradius,c.anchorradius,a.linethickness+2);this.__base__._setConfigure.apply(this,arguments)},_firePlotEvent:function(a,c,d,f){var g=this.chart,h=this.components,h=(h.dataRT||
h.data)[c],k=h.graphics.element,l=b.toolTip,m=d.originalEvent,q=g.components.paper.canvas.style,t=!this.chart.config.useCrossline,p,r;if(k)switch(p=h.config,r=p.setLink,p=p.eventArgs,a){case "mouseover":t&&this._decideTooltipType(c,f,d);this._rolloverResponseSetter(g,h,m);r&&(q.cursor="pointer");break;case "mouseout":l.hide(g.chartInstance.id);this._rolloutResponseSetter(g,h,m);r&&(q.cursor=sa);break;case "click":Y.call(k,g,m,"dataplotclick",p);break;case "mousemove":t&&this._decideTooltipType(c,
f,d)}},configure:function(){var a,c,d={};a=this.chart.jsonData.chart;a.animation=0;a.showvalues=q(a.showvalues,0);this.__base__.configure.call(this);c=this.config;a=c.linethickness+q(a.pinlinethicknessdelta,1);d["stroke-width"]=0<a&&a||0;d["stroke-dasharray"]=[3,2];d.stroke=b.hashify(c.linecolor);d["stroke-opacity"]=c.alpha/100;d["stroke-linejoin"]=c["stroke-linejoin"]="round";d["stroke-linecap"]=c["stroke-linecap"]="round";c.pin=d;c.animation=!1;c.transposeanimduration=0},isWithinShape:function(a,
c,b,h){if(a){var g=a.config.anchorProps,f=g.borderThickness,k=this.components.data,l=q(a.config.dragTolerance,0),m,p;m=a._xPos;p=a._yPos;if(null!==p)return a=a.config.hoverEffects,g=Math.max(g.radius,a&&a.anchorRadius||0,ra)+f/2,b=Math.sqrt(Math.pow(b-m,2)+Math.pow(h-p,2)),b<=g||b<=l?{pointIndex:c,hovered:!0,pointObj:k[c]}:!1}},draw:function(){var a,c,d=!1,h=!1,g=this,k=g.JSONData,l=g.chart,m=l.components,p=g.config,t=g.index||g.positionIndex,r=l.config,x=l.jsonData.chart,z=g.components,u=z.data,
B=u.length,y,C=m.paper,A=m.xAxis[0],G=g.yAxis,E,L,N=l.graphics,P=N.datalabelsGroup,Q=b.parseUnsafeString,U=b.getValidValue,R,D,J,M,ba,Z,W,H,X,O=p.linethickness,Y=g.graphics.container,ea=g.graphics.trackerContainer,na=r.viewPortConfig,ma=N.datasetGroup,ia,ra=p.shadow,ha,sa=g.graphics.dataLabelContainer,I={},oa,la,ta=l.is3D,ua=p.use3dlineshift,ja,pa,va,wa=G.getAxisBase(),xa=G.yBasePos=G.getAxisPosition(wa),Aa=A.getAxisPosition(0),Fa=A.getAxisPosition(1)-Aa,Sa,Ka=ta?10:0,za=ta&&ua?10:0,aa=[fa(0,r.canvasLeft-
Ka),fa(0,r.canvasTop-za),fa(1,r.canvasWidth+2*Ka),fa(1,r.canvasHeight+za)],Ta=[fa(0,r.canvasLeft-Ka),fa(0,r.canvasTop-za),1,fa(1,r.canvasHeight+2*za)],qb={},da=l.hasScroll||!1,Ga,La=p.lineDashStyle,Ma={color:p.linecolor,alpha:p.alpha};[v(Ma),La].join(":");var Ua,gb,$a,Pa=g.graphics.lineElement,Va=g.visible,hb,ab,Ha=g.pool||(g.pool={element:[]}),ib={},bb={},jb={},kb,cb=[],lb,Ca,Wa,Xa,db,eb,rb=r.showTerminalValidData,Qa=r.viewPortConfig,sb=r.showPeakData,mb=r.maxPeakDataLimit,nb=r.minPeakDataLimit,
tb=q(r.useCrossline,0),Ia=Qa.step,fb=A.getPixel(Qa.step)-Aa<Qa.amrd,ob=function(a,c){var b=a.graphics;la=a.config;M=la.setValue;J=la.setLink;hb=la.x||c;pa=U(Q(f(la.setLevelTooltext,k.plottooltext,x.plottooltext)));la.toolTipValue=G.dataLabels(M);ja=la.showValue;I=la.anchorProps;ha=I.shadow;Z=la.displayValue;ab=la.dip||0;a||(a=u[c]={graphics:{}});$a={color:la.color,alpha:la.alpha};va=la.dashStyle;E=la.xPos||A.getAxisPosition(hb)-Ka;L=g.visible?G.getAxisPosition(M)+za:xa;ia=la.hoverEffects;I.isAnchorHoverRadius=
ia.anchorRadius;kb=A.getLabel(c);R=la.toolText+(pa?"":la.toolTipValue);la.finalTooltext=R;ba={index:c,link:J,value:M,displayValue:Z,categoryLabel:kb,toolText:R,id:p.userID,datasetIndex:t,datasetName:k.seriesname,visible:Va};null===la.setValue||fb||(I.imageUrl?(oa=new K,oa.onload=g._onAnchorImageLoad(g,c,ba,E,L),oa.onerror=g._onErrorSetter(E,L,c,g),oa.src=I.imageUrl):(D=b.element,D||(D=Ha.element&&Ha.element.length?b.element=Ha.element.shift():b.element=C.polypath(Y.anchorGroup)),D.attr({polypath:[I.symbol[1]||
2,E,L,I.radius,I.startAngle,ab],fill:v({color:I.bgColor,alpha:I.bgAlpha}),stroke:v({color:I.borderColor,alpha:I.borderAlpha}),"stroke-width":I.borderThickness,visibility:I.radius?Va:"hidden"}).shadow(ha,Y.anchorShadowGroup).data("anchorRadius",I.radius).data("anchorHoverRadius",ia.anchorRadius).data("hoverEnabled",ia.enabled).data("eventArgs",ba),ia.enabled&&(X={polypath:[ia.anchorSides||2,E,L,ia.anchorRadius,ia.startAngle,ia.dip],fill:v({color:ia.anchorColor,alpha:ia.anchorBgAlpha}),stroke:v({color:ia.anchorBorderColor,
alpha:ia.anchorBorderAlpha}),"stroke-width":ia.anchorBorderThickness},H={polypath:[I.sides,E,L,I.radius,I.startAngle,ab],fill:v({color:I.bgColor,alpha:I.bgAlpha}),stroke:v({color:I.borderColor,alpha:I.borderAlpha}),"stroke-width":I.borderThickness},D&&D.data("setRolloverAttr",X).data("setRolloutAttr",H)),D[M||0===M?"show":"hide"]()),fa(I.radius,ia&&ia.anchorRadius||0));a._xPos=E;a._yPos=L;[v($a||Ma),va||La].join(":");jb=g.getLinePath([a],jb);Ua=v($a||Ma);gb=va||La;f(la.setColor,la.setAlpha,la.setDashed);
[Ua,gb].join(":");ja&&!I.imageUrl&&g.drawLabel(c);cb.push(a)},ub=function(a,c){var b=a&&a.length,d=a.slice().sort(function(a,c){return a.config.setValue-c.config.setValue}),e=d&&d.pop().config.setValue,g=d.length&&d.shift().config.setValue||e,d=0;if(e>mb||g<nb)for(;d<b;){D=a[d];e=D.config.setValue;if(e>mb||e<nb)e=c+d,ob(D,e);d+=1}},Ya=function(c,b){--c;b+=1;var d;for(y=c;y<b;y+=1)for(d in a=u[y]&&u[y].graphics||{},u[y]&&(u[y].config.isRemoving=!0),a)Ha[d]||(Ha[d]=[]),a[d]&&(Ha[d].push(a[d].hide()),
a[d]=void 0)},Za=na.ddsi||0,Ja=na.ddei||B,Na=p._oldStartIndex,Oa=p._oldEndIndex,vb=p._oldStep,pb=z.removeDataArr,wb=pb&&pb.length;ma.line=ma.line||C.group("line",ma);ma.lineConnector=ma.lineConnector||C.group("line-connector",ma);Y||(Y=g.graphics.container={lineShadowGroup:C.group("connector-shadow",ma.line),anchorShadowGroup:C.group("anchor-shadow",ma.lineConnector),lineGroup:C.group("line",ma.line),anchorGroup:C.group("anchors",ma.lineConnector)},Y.lineGroup.trackTooltip(!0),Va||(Y.lineShadowGroup.hide(),
Y.anchorShadowGroup.hide(),Y.lineGroup.hide(),Y.anchorGroup.hide()));ea||(ea=g.graphics.trackerContainer=C.group("line-hot",N.trackerGroup).toBack(),Va||ea.hide());u||(u=g.components.data=[]);sa||(sa=g.graphics.dataLabelContainer=g.graphics.dataLabelContainer||C.group("datalabel",P),Va||sa.hide());Sa=Fa*B;fb&&!p._oldHideAnchors?Ya(Na,Oa):Ia!==vb?Ya(Na,Oa):(Za>Na&&Ya(Na,Za>Oa?Oa:Za),Ja<Oa&&Ya(Ja<Na?Na:Ja,Oa),(Za<Na||Ja>Oa)&&Ya(Na,Oa));p._oldHideAnchors=fb;p._oldEndIndex=Ja;p._oldStep=Ia;g.setVisibility(Va);
for(y=p._oldStartIndex=Za;y<=Ja;y+=Ia){W=u[y]||{};la=W.config||{};la.isRemoving=!1;M=la.setValue||null;Wa=y;if(rb)if(0===y&&null===M){lb=0;for(Ca=c=y;Ca<B;)if(null!==u[Ca].config.setValue||d?d=!0:Ca++,null===u[c].config.setValue&&!h&&c<=B?(c+=Ia,lb++):h=!0,d&&h){d=h=!1;break}0!==Ca%Ia&&(la=u[Ca].config,Wa=Ca)}else if(y>=B&&null===M){for(Ca=c=y;0<Ca&&(void 0!==u[Ca]||d?d=!0:Ca--,void 0===u[c]&&!h&&0<=c?c-=Ia:h=!0,!d||!h););0!==Ca%Ia&&(la=u[Ca].config,Wa=Ca)}if(W=u[Wa])ob(W,Wa),sb&&1<Ia&&(Xa=qa(y+1,
Ja),eb=qa(Xa+Ia,Ja),db=eb===Ja?u.slice(Xa):u.slice(Xa,eb),db.length&&ub(db,Xa))}bb=g.getLinePath(cb,{});ib=g.getLinePath(cb,ib);p.lastPath=bb;Pa||(Pa=Ha.lineElement&&Ha.lineElement.length?g.graphics.lineElement=Ha.lineElement.shift():g.graphics.lineElement=C.path(Y.lineGroup));tb||Pa.tooltipListenerAttached||(Pa.tooltipListenerAttached=!0,Pa.mousemove(function(a){Qa=r.viewPortConfig;var c=r._visx,b=Qa.step,d=Qa.ppp*b,c=ka(l.linkedItems.container,a,l).chartX-c,e;a=r.tooltipSepChar;c=(c+=d/2+Qa.offset)-
c%d;e=(e=l.getValuePixel(c))+e%b;b=A.getLabel(e).label+a+g.components.data[e].config.formatedVal;b=p.seriesname&&p.seriesname+a+b||b;Pa.tooltip(0===r.crossline.enabled?b:!1)}));Pa.attr({path:bb.getPathArr(),"stroke-dasharray":La,"stroke-width":O,stroke:v(Ma),"stroke-linecap":"round","stroke-linejoin":2<=O?"round":"miter"}).shadow(ra,Y.lineShadowGroup);da&&(Ga=qb.startPercent,aa[2]=Sa+Ta[0],1===Ga&&(Ta[0]=aa[2],aa[0]=0));aa[3]+=za;g.drawn=!0;wb&&g.remove()},setVisibility:function(a,c){var b=this.graphics,
h=b&&b.container,g=b&&b.trackerContainer,b=b&&b.dataLabelContainer,f=a?"show":"hide";h.lineGroup[f]();h.anchorGroup[f]();h.anchorShadowGroup[f]();h.lineShadowGroup[f]();g[f]();b[f]();c&&this.transposeLimits(a)},transposeLimits:function(a){var c=this.chart,b=c.config,h=this.yAxis;c._chartAnimation();this.visible=a;this._conatinerHidden=!a;c._setAxisLimits();h.draw();b.legendClicked=!0;c._drawDataset();delete b.legendClicked},hide:function(){this.setVisibility(!1,!0)},show:function(){this.setVisibility(!0,
!0)}},"Line"]);r=function(){};r.prototype.configure=function(a,c){var b,h,g,f={},k=this,p=a.components,q=p.numberFormatter,r=p.paper,t=a.config;b=a.graphics;h=this.left=t._visx;g=this.top=t.canvasTop;var v=this.height=t.canvasHeight,y=this._visout=t._visout,u=this.plots=a.components.dataset,B=b.datalabelsGroup,z,C,A=c.labelstyle,E=c.valuestyle,G=p.yAxis[0],K=G.getLimit(),L=p.yAxis[1],N=L&&L.getLimit();C=this.tracker;var p=this.labels,P=this.positionLabel;z=a.get("linkedItems");var Q=z.container,R=
z.eventListeners||(z.eventListeners=[]);k.width=t._visw;z=this.group;z||(z=this.group=r.group("crossline-labels",B),this.container=Q);z.attr({transform:["T",h,t._ymin]}).css(E);C||(C=k.tracker=Q,R.push(l(Q,"touchstart mousemove",function(c){var b=k.onMouseMove,d=k.onMouseOut;a.isWithinCanvas(c,a).insideCanvas?b.call(k,c):d.call(k,c)},k)),R.push(l(Q,"mousedown",function(){k.onMouseDown()},k)),R.push(l(Q,"mouseup",function(){k.onMouseUp()},k)),R.push(l(Q,"mouseout",function(){k.onMouseOut()},k)));C=
this.line;C||(C=this.line=r.path(B).toBack());C.attr(x({path:["M",h,g,"l",0,v]},c.line));p||(p=this.labels=c.valueEnabled&&r.set());c.labelEnabled?(f.x=y,f.y=g+v+(t.scrollHeight||0)+2.5,f["vertical-align"]="top",f.direction=t.textDirection,f.text="",P?(P.attr(f),P.css(A)):P=this.positionLabel=r.text(f,A,b.datalabelsGroup).insertBefore(b.datasetGroup)):(P&&P.remove(),delete this.positionLabel);this.hide();this.ppixelRatio=-G.getPVR();this.spixelRatio=L&&-L.getPVR();this.yminValue=t._yminValue;this.pyaxisminvalue=
K.min;this.pyaxismaxvalue=K.max;this.syaxisminvalue=N&&N.min;this.syaxismaxvalue=N&&N.max;this.positionLabels=t.xlabels||{data:[],parsed:[]};this.chart=a;this.getZoomInfo=function(){return t.viewPortConfig};this.getDataIndexFromPixel=function(c){return Math.round(a.components.xAxis[0].getValue(c))};this.getPositionLabel=function(c){return(c=a.components.xAxis[0].getLabel(c))&&c.label||""};if(c.valueEnabled){b=0;for(h=u.length;b<h;b+=1)g=u[b],g=m(g.config.linecolor),f.x=0,f.y=y,f.fill=g,f.direction=
t.textDirection,f.text="",f["text-bound"]=E["text-bound"],f.lineHeight=E.lineHeight,p[b]?p[b].attr(f):p[b]=p.items[b]=r.text(f,void 0,z);for(;b<p.items.length;b+=1)p[b].remove(),delete p[b],p.items.splice(b,1);this.numberFormatter=q}else if(p.items&&p.items.length){for(b=0;b<p.items.length;b+=1)p[b].remove(),delete p[b];p.length=0}};r.prototype.disable=function(a){void 0!==a&&(this.disabled=!!a)&&this.visible&&this.hide();return this.disabled};r.prototype.onMouseOut=function(){this.hide();this.position=
void 0};r.prototype.onMouseDown=function(){!z&&this.hide();this._mouseIsDown=!0};r.prototype.onMouseUp=function(){!z&&this.hide();delete this._mouseIsDown};r.prototype.onMouseMove=function(a){if(!(this.disabled||this._mouseIsDown&&!z)){var c,b=this.getZoomInfo(),h=this.line,g=this.left,b=b.step,f=this.chart,k=f.components.xAxis[0],l=f.get("config"),m=l.canvasLeft,p=k.getAxisConfig("axisDimention");a=ka(this.container,a,f).chartX-g;var g=k._getVisibleConfig(),p=p.x-m,q;q=(q=this.getDataIndexFromPixel(P(a)))+
((c=q%b)>b/2?b-c:-c);a=k.getPixel(q)-p-m;h.transform(["T",P(a),0]);this.hidden&&0!==l.crossline.enabled&&this.show();(q<g.minValue||q>g.maxValue)&&this.hide();if(q!==this.position||this.hidden)this.position=q,this.lineX=a,this.updateLabels()}};r.prototype.updateLabels=function(){var a=this,c=a.labels,b=a.plots,f=a.width,g=a.position,h=a.lineX,k=ua(h),l=a.ppixelRatio,m=a.spixelRatio,p=a.yminValue,q=a._visout,r=a.numberFormatter,t=a.pyaxisminvalue,u=a.pyaxismaxvalue,v=a.syaxisminvalue,y=a.syaxismaxvalue,
x=function(){function c(){this.y=0;this.lRef=void 0;this.__index=this.__shift=0}function b(a){for(var c=0;c<a;)this.push(c++);return this}function d(a){var c,b,e,g={},f=Number.POSITIVE_INFINITY;for(c=0;c<this.length;c++)b=this[c]-a,0>b?e=v.NEG:e=v.POS,b=t(b),b<=f&&(f=b,g.absValue=b,g.noScaleSide=e);return g}function g(a){this.holes=b.call([],a)}var f=-1*a.height,h=p*l,k=0,n,m={},r,t=Math.abs,u=Math.floor,v={};"function"!=typeof Object.create&&(Object.create=function(){function a(){}var c=Object.prototype.hasOwnProperty;
return function(b){var d,e,g;if("object"!=typeof b)throw new TypeError("Object prototype may only be an Object or null");a.prototype=b;g=new a;a.prototype=null;if(1<arguments.length)for(e in d=Object(arguments[1]),d)c.call(d,e)&&(g[e]=d[e]);return g}}());Array.prototype.indexOf||(Array.prototype.indexOf=function(a,c){var b,d,e;if(null==this)throw new TypeError('"this" is null or not defined');d=Object(this);e=d.length>>>0;if(0===e)return-1;b=+c||0;Infinity===Math.abs(b)&&(b=0);if(b>=e)return-1;for(b=
Math.max(0<=b?b:e-Math.abs(b),0);b<e;){if(b in d&&d[b]===a)return b;b++}return-1});Array.prototype.forEach||(Array.prototype.forEach=function(a,c){var b,d,e,g,f;if(null==this)throw new TypeError(" this is null or not defined");e=Object(this);g=e.length>>>0;if("function"!==typeof a)throw new TypeError(a+" is not a function");1<arguments.length&&(b=c);for(d=0;d<g;)d in e&&(f=e[d],a.call(b,f,d,e)),d++});c.prototype.constructor=c;c.prototype.applyShift=function(a){this.__shift=a;this.lRef.calcY=this.y+=
a*k};c.prototype.applyDirectIndex=function(a){this.__index=a;this.lRef.calcY=this.y=f-a*k*-1};try{Object.defineProperty(v,"POS",{enumerable:!1,configurable:!1,get:function(){return 1}}),Object.defineProperty(v,"NEG",{enumerable:!1,configurable:!1,get:function(){return-1}})}catch(x){v.POS=1,v.NEG=-1}g.prototype=Object.create(Array.prototype);g.prototype.constructor=g;g.prototype.repositionHoles=function(){var a,c=0,b;for(a=this.holes.length=0;a<this.length;a++)b=this[a],!b&&(this.holes[c++]=a)};g.prototype.attachShift=
function(a,b,e){var g,f=this.length;if(a===q)e.calcY=q;else if(f=b>f-1?f-1:b,g=this[f],b=new c,b.y=a,b.lRef=e,g){a=d.call(this.holes,f);e=f+a.absValue*a.noScaleSide;if(a.noScaleSide===v.POS)return b.applyDirectIndex(e),this.splice(e,1,b),this.holes.splice(this.holes.indexOf(e),1),e;if(a.noScaleSide===v.NEG){a=this.splice(e+1,this.length-1);this.pop();a.forEach(function(a){a&&a.applyShift(-1)});for([].push.apply(this,a);this[e];)e++;this.push(0);this.repositionHoles();a=d.call(this.holes,e);e+=a.absValue*
a.noScaleSide;b.applyDirectIndex(e);this.splice(e,1,b);this.repositionHoles();return this.length-1}}else b.applyDirectIndex(f),this.splice(f,1,b),this.holes.splice(this.holes.indexOf(f),1)};try{Object.defineProperty(m,"top",{enumerable:!1,configurable:!1,get:function(){return f}}),Object.defineProperty(m,"bottom",{enumerable:!1,configurable:!1,get:function(){return h}})}catch(x){m.top=f,m.bottom=h}m.init=function(a,c){var b;k=a+2;f+=k/2;r=u(t(f)/k);n=new g(r);for(b=0;b<r;b++)n.push(0)};m.occupy=function(a,
c){var b=u(t(f-a)/k);n&&n.attachShift(a,b,c)};return m}();c&&(c[0]&&c[0].attr({text:r.yAxis("0")}),c[0]&&x.init(c[0].getBBox().height,c.length),c.forEach(function(a,c){var e=b[c],f=e.components.data[g]&&e.components.data[g].config.setValue,h=e.config.parentYAxis;x.occupy(void 0===f||!e.visible||(h?f>y||f<v:f>u||f<t)?q:h?(f-v)*m:(f-t)*l,a)}));c&&c.forEach(function(a,c){var e=b[c],l,m;(e=r[e.config.parentYAxis?"sYAxis":"yAxis"](e.components.data[g]&&e.components.data[g].config.setValue))?(a.attr({text:e}),
e=(e=(e=(e=a.getBBox())&&e.width)&&.5*e)&&e+10,m=a.calcY,l=fa(0,qa(k,f)),void 0!==m&&void 0!==l&&a.attr({x:l,y:m,"text-anchor":h<=e&&"start"||h+e>=f&&"end"||"middle","text-bound":["rgba(255,255,255,0.8)","rgba(0,0,0,0.2)",1,2.5]})):a.attr({x:-f})});a.positionLabel&&a.positionLabel.attr({x:h+a.left,text:a.getPositionLabel(g),"text-bound":["rgba(255,255,255,1)","rgba(0,0,0,1)",1,2.5]})};r.prototype.show=function(){this.disabled||(this.hidden=!1,this.group.attr("visibility","visible"),this.line.attr("visibility",
"visible"),this.positionLabel&&this.positionLabel.attr("visibility","visible"))};r.prototype.hide=function(){this.hidden=!0;this.group.attr("visibility","hidden");this.line.attr("visibility","hidden");this.positionLabel&&this.positionLabel.attr("visibility","hidden")};r.prototype.dispose=function(){for(var a in this)this.hasOwnProperty(a)&&delete this[a]};E.addSymbol({pinModeIcon:function(a,c,b){var f=.5*b,g=a-b,h=a+b,k=a-f,l=a+f,m=a+.5,p=m+1,q=m+1.5,r=c-b,t=c+f,u=c-f,f=c+(b-f);return["M",g,r,"L",
k,u,k,f,g,t,a-.5,t,a,c+b+.5,m,t,h,t,l,f,l,u,h,r,q,r,q,u,q,f,p,f,p,u,q,u,q,r,"Z"]},zoomOutIcon:function(a,c,b){a-=.2*b;c-=.2*b;var f=.8*b,g=E.rad(43),h=E.rad(48),k=a+f*wa(g),g=c+f*ta(g),l=a+f*wa(h),h=c+f*ta(h),m=E.rad(45),p=k+b*wa(m),q=g+b*ta(m),r=l+b*wa(m);b=h+b*ta(m);return["M",k,g,"A",f,f,0,1,0,l,h,"Z","M",k+1,g+1,"L",p,q,r,b,l+1,h+1,"Z","M",a-2,c,"L",a+2,c,"Z"]},resetIcon:function(a,b,d){var f=a-d,g=(ba.PI/2+ba.PI)/2;a+=d*wa(g);var g=b+d*ta(g),h=2*d/3;return["M",f,b,"A",d,d,0,1,1,a,g,"L",a+h,g-
1,a+2,g+h-.5,a,g]}})}])});


;/*
 Fint Theme v0.0.4
 FusionCharts JavaScript Library

 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>
*/
(function(b){"object"===typeof module&&"undefined"!==typeof module.exports?module.exports=b:b(FusionCharts)})(function(b){b.register("theme",{name:"fint",theme:{base:{chart:{paletteColors:"#0075c2,#1aaf5d,#f2c500,#f45b00,#8e0000,#0e948c,#8cbb2c,#f3de00,#c02d00,#5b0101",labelDisplay:"auto",baseFontColor:"#333333",baseFont:"Helvetica Neue,Arial",captionFontSize:"14",subcaptionFontSize:"14",subcaptionFontBold:"0",showBorder:"0",bgColor:"#ffffff",showShadow:"0",canvasBgColor:"#ffffff",showCanvasBorder:"0",
useplotgradientcolor:"0",useRoundEdges:"0",showPlotBorder:"0",showAlternateHGridColor:"0",showAlternateVGridColor:"0",toolTipColor:"#ffffff",toolTipBorderThickness:"0",toolTipBgColor:"#000000",toolTipBgAlpha:"80",toolTipBorderRadius:"2",toolTipPadding:"5",legendBgAlpha:"0",legendBorderAlpha:"0",legendShadow:"0",legendItemFontSize:"10",legendItemFontColor:"#666666",legendCaptionFontSize:"9",divlineAlpha:"100",divlineColor:"#999999",divlineThickness:"1",divLineIsDashed:"1",divLineDashLen:"1",divLineGapLen:"1",
scrollheight:"10",flatScrollBars:"1",scrollShowButtons:"0",scrollColor:"#cccccc",showHoverEffect:"1",valueFontSize:"10",showXAxisLine:"1",xAxisLineThickness:"1",xAxisLineColor:"#999999"},dataset:[{}],trendlines:[{}]},geo:{chart:{showLabels:"0",fillColor:"#0075c2",showBorder:"1",borderColor:"#eeeeee",borderThickness:"1",borderAlpha:"50",entityFillhoverColor:"#0075c2",entityFillhoverAlpha:"80",connectorColor:"#cccccc",connectorThickness:"1.5",markerFillHoverAlpha:"90"}},pie2d:{chart:{placeValuesInside:"0",
use3dlighting:"0",valueFontColor:"#333333",captionPadding:"15"},data:function(b,a,c){a=window.Math;return{alpha:100-(50<c?a.round(100/a.ceil(c/10)):20)*a.floor(b/10)}}},doughnut2d:{chart:{placeValuesInside:"0",use3dlighting:"0",valueFontColor:"#333333",centerLabelFontSize:"12",centerLabelBold:"1",centerLabelFontColor:"#333333",captionPadding:"15"},data:function(b,a,c){a=window.Math;return{alpha:100-(50<c?a.round(100/a.ceil(c/10)):20)*a.floor(b/10)}}},line:{chart:{lineThickness:"2"}},spline:{chart:{lineThickness:"2"}},
column2d:{chart:{paletteColors:"#0075c2",valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},bar2d:{chart:{paletteColors:"#0075c2",valueFontColor:"#ffffff",placeValuesInside:"1"}},column3d:{chart:{paletteColors:"#0075c2",valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},bar3d:{chart:{paletteColors:"#0075c2",valueFontColor:"#ffffff",placeValuesInside:"1"}},area2d:{chart:{valueBgColor:"#ffffff",valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},splinearea:{chart:{valueBgColor:"#ffffff",
valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},mscolumn2d:{chart:{valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},mscolumn3d:{chart:{showValues:"0"}},msstackedcolumn2dlinedy:{chart:{showValues:"0"}},stackedcolumn2d:{chart:{showValues:"0"}},stackedarea2d:{chart:{valueBgColor:"#ffffff",valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},stackedbar2d:{chart:{showValues:"0"}},msstackedcolumn2d:{chart:{showValues:"0"}},mscombi3d:{chart:{showValues:"0"}},
mscombi2d:{chart:{showValues:"0"}},mscolumn3dlinedy:{chart:{showValues:"0"}},stackedcolumn3dline:{chart:{showValues:"0"}},stackedcolumn2dline:{chart:{showValues:"0"}},scrollstackedcolumn2d:{chart:{valueFontColor:"#ffffff"}},scrollcombi2d:{chart:{showValues:"0"}},scrollcombidy2d:{chart:{showValues:"0"}},logstackedcolumn2d:{chart:{showValues:"0"}},logmsline:{chart:{showValues:"0"}},logmscolumn2d:{chart:{showValues:"0"}},msstackedcombidy2d:{chart:{showValues:"0"}},scrollcolumn2d:{chart:{valueFontColor:"#ffffff",
placeValuesInside:"1",rotateValues:"1"}},pareto2d:{chart:{paletteColors:"#0075c2",showValues:"0"}},pareto3d:{chart:{paletteColors:"#0075c2",showValues:"0"}},angulargauge:{chart:{pivotFillColor:"#ffffff",pivotRadius:"4",gaugeFillMix:"{light+0}",showTickValues:"1",majorTMHeight:"12",majorTMThickness:"2",majorTMColor:"#000000",minorTMNumber:"0",tickValueDistance:"10",valueFontSize:"24",valueFontBold:"1",gaugeInnerRadius:"50%",showHoverEffect:"0"},dials:{dial:[{baseWidth:"10",rearExtension:"7",bgColor:"#000000",
bgAlpha:"100",borderColor:"#666666",bgHoverAlpha:"20"}]}},hlineargauge:{chart:{pointerFillColor:"#ffffff",gaugeFillMix:"{light+0}",showTickValues:"1",majorTMHeight:"3",majorTMColor:"#000000",minorTMNumber:"0",valueFontSize:"18",valueFontBold:"1"},pointers:{pointer:[{}]}},bubble:{chart:{use3dlighting:"0",showplotborder:"0",showYAxisLine:"1",yAxisLineThickness:"1",yAxisLineColor:"#999999",showAlternateHGridColor:"0",showAlternateVGridColor:"0",plotFillHoverColor:"#2b8ecf"},categories:[{verticalLineDashed:"1",
verticalLineDashLen:"1",verticalLineDashGap:"1",verticalLineThickness:"1",verticalLineColor:"#000000",category:[{}]}],vtrendlines:[{line:[{alpha:"0"}]}]},scatter:{chart:{use3dlighting:"0",showYAxisLine:"1",yAxisLineThickness:"1",yAxisLineColor:"#999999",showAlternateHGridColor:"0",showAlternateVGridColor:"0"},categories:[{verticalLineDashed:"1",verticalLineDashLen:"1",verticalLineDashGap:"1",verticalLineThickness:"1",verticalLineColor:"#000000",category:[{}]}],vtrendlines:[{line:[{alpha:"0"}]}]},
boxandwhisker2d:{chart:{valueBgColor:"#ffffff",valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},thermometer:{chart:{gaugeFillColor:"#0075c2"}},cylinder:{chart:{cylFillColor:"#0075c2"}},sparkline:{chart:{linecolor:"#0075c2"}},sparkcolumn:{chart:{plotFillColor:"#0075c2"}},sparkwinloss:{chart:{winColor:"#0075c2",lossColor:"#1aaf5d",drawColor:"#f2c500",scoreLessColor:"#f45b00"}},hbullet:{chart:{plotFillColor:"#0075c2",targetColor:"#1aaf5d"}},vbullet:{chart:{plotFillColor:"#0075c2",targetColor:"#1aaf5d"}}}})});

;/*
 Ocean Theme v0.0.4
 FusionCharts JavaScript Library

 Copyright FusionCharts Technologies LLP
 License Information at <http://www.fusioncharts.com/license>
*/
(function(b){"object"===typeof module&&"undefined"!==typeof module.exports?module.exports=b:b(FusionCharts)})(function(b){b.register("theme",{name:"ocean",theme:{base:{chart:{paletteColors:"#04476c,#4d998d,#77be99,#a7dca6,#cef19a,#0e948c,#64ad93,#8fcda0,#bbe7a0,#dcefc1",labelDisplay:"auto",baseFontColor:"#333333",baseFont:"Helvetica Neue,Arial",captionFontSize:"14",subcaptionFontSize:"14",subcaptionFontBold:"0",showBorder:"0",bgColor:"#ffffff",showShadow:"0",canvasBgColor:"#ffffff",showCanvasBorder:"0",
useplotgradientcolor:"0",useRoundEdges:"0",showPlotBorder:"0",showAlternateHGridColor:"0",showAlternateVGridColor:"0",toolTipColor:"#ffffff",toolTipBorderThickness:"0",toolTipBgColor:"#000000",toolTipBgAlpha:"80",toolTipBorderRadius:"2",toolTipPadding:"5",legendBgAlpha:"0",legendBorderAlpha:"0",legendShadow:"0",legendItemFontSize:"10",legendItemFontColor:"#666666",legendCaptionFontSize:"9",divlineAlpha:"100",divlineColor:"#999999",divlineThickness:"1",divLineIsDashed:"1",divLineDashLen:"1",divLineGapLen:"1",
scrollheight:"10",flatScrollBars:"1",scrollShowButtons:"0",scrollColor:"#cccccc",showHoverEffect:"1",valueFontSize:"10",showXAxisLine:"1",xAxisLineThickness:"1",xAxisLineColor:"#999999"},dataset:[{}],trendlines:[{}]},geo:{chart:{showLabels:"0",fillColor:"#04476c",showBorder:"1",borderColor:"#eeeeee",borderThickness:"1",borderAlpha:"50",entityFillhoverColor:"#04476c",entityFillhoverAlpha:"80",connectorColor:"#cccccc",connectorThickness:"1.5",markerFillHoverAlpha:"90"}},pie2d:{chart:{placeValuesInside:"0",
use3dlighting:"0",valueFontColor:"#333333",captionPadding:"15"},data:function(b,a,c){a=window.Math;return{alpha:100-(50<c?a.round(100/a.ceil(c/10)):20)*a.floor(b/10)}}},doughnut2d:{chart:{placeValuesInside:"0",use3dlighting:"0",valueFontColor:"#333333",centerLabelFontSize:"12",centerLabelBold:"1",centerLabelFontColor:"#333333",captionPadding:"15"},data:function(b,a,c){a=window.Math;return{alpha:100-(50<c?a.round(100/a.ceil(c/10)):20)*a.floor(b/10)}}},line:{chart:{lineThickness:"2"}},spline:{chart:{lineThickness:"2"}},
column2d:{chart:{paletteColors:"#04476c",valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},bar2d:{chart:{paletteColors:"#04476c",valueFontColor:"#ffffff",placeValuesInside:"1"}},column3d:{chart:{paletteColors:"#04476c",valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},bar3d:{chart:{paletteColors:"#04476c",valueFontColor:"#ffffff",placeValuesInside:"1"}},area2d:{chart:{valueBgColor:"#ffffff",valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},splinearea:{chart:{valueBgColor:"#ffffff",
valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},mscolumn2d:{chart:{valueFontColor:"#ffffff",placeValuesInside:"1",rotateValues:"1"}},mscolumn3d:{chart:{showValues:"0"}},msstackedcolumn2dlinedy:{chart:{showValues:"0"}},stackedcolumn2d:{chart:{showValues:"0"}},stackedarea2d:{chart:{valueBgColor:"#ffffff",valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},stackedbar2d:{chart:{showValues:"0"}},msstackedcolumn2d:{chart:{showValues:"0"}},mscombi3d:{chart:{showValues:"0"}},
mscombi2d:{chart:{showValues:"0"}},mscolumn3dlinedy:{chart:{showValues:"0"}},stackedcolumn3dline:{chart:{showValues:"0"}},stackedcolumn2dline:{chart:{showValues:"0"}},scrollstackedcolumn2d:{chart:{valueFontColor:"#ffffff"}},scrollcombi2d:{chart:{showValues:"0"}},scrollcombidy2d:{chart:{showValues:"0"}},logstackedcolumn2d:{chart:{showValues:"0"}},logmsline:{chart:{showValues:"0"}},logmscolumn2d:{chart:{showValues:"0"}},msstackedcombidy2d:{chart:{showValues:"0"}},scrollcolumn2d:{chart:{valueFontColor:"#ffffff",
placeValuesInside:"1",rotateValues:"1"}},pareto2d:{chart:{paletteColors:"#04476c",showValues:"0"}},pareto3d:{chart:{paletteColors:"#04476c",showValues:"0"}},angulargauge:{chart:{pivotFillColor:"#ffffff",pivotRadius:"4",gaugeFillMix:"{light+0}",showTickValues:"1",majorTMHeight:"12",majorTMThickness:"2",majorTMColor:"#000000",minorTMNumber:"0",tickValueDistance:"10",valueFontSize:"24",valueFontBold:"1",gaugeInnerRadius:"50%",showHoverEffect:"0"},dials:{dial:[{baseWidth:"10",rearExtension:"7",bgColor:"#000000",
bgAlpha:"100",borderColor:"#666666",bgHoverAlpha:"20"}]}},hlineargauge:{chart:{pointerFillColor:"#ffffff",gaugeFillMix:"{light+0}",showTickValues:"1",majorTMHeight:"3",majorTMColor:"#000000",minorTMNumber:"0",valueFontSize:"18",valueFontBold:"1"},pointers:{pointer:[{}]}},bubble:{chart:{use3dlighting:"0",showplotborder:"0",showYAxisLine:"1",yAxisLineThickness:"1",yAxisLineColor:"#999999",showAlternateHGridColor:"0",showAlternateVGridColor:"0"},categories:[{verticalLineDashed:"1",verticalLineDashLen:"1",
verticalLineDashGap:"1",verticalLineThickness:"1",verticalLineColor:"#000000",category:[{}]}],vtrendlines:[{line:[{alpha:"0"}]}]},scatter:{chart:{use3dlighting:"0",showYAxisLine:"1",yAxisLineThickness:"1",yAxisLineColor:"#999999",showAlternateHGridColor:"0",showAlternateVGridColor:"0"},categories:[{verticalLineDashed:"1",verticalLineDashLen:"1",verticalLineDashGap:"1",verticalLineThickness:"1",verticalLineColor:"#000000",category:[{}]}],vtrendlines:[{line:[{alpha:"0"}]}]},boxandwhisker2d:{chart:{valueBgColor:"#ffffff",
valueBgAlpha:"90",valueBorderPadding:"-2",valueBorderRadius:"2"}},thermometer:{chart:{gaugeFillColor:"#04476c"}},cylinder:{chart:{cylFillColor:"#04476c"}},sparkline:{chart:{linecolor:"#04476c"}},sparkcolumn:{chart:{plotFillColor:"#04476c"}},sparkwinloss:{chart:{winColor:"#04476c",lossColor:"#4d998d",drawColor:"#77be99",scoreLessColor:"#a7dca6"}},hbullet:{chart:{plotFillColor:"#04476c",targetColor:"#4d998d"}},vbullet:{chart:{plotFillColor:"#04476c",targetColor:"#4d998d"}}}})});

;define('ember-ajax/-private/promise', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  var _get = function get(object, property, receiver) {
    if (object === null) object = Function.prototype;
    var desc = Object.getOwnPropertyDescriptor(object, property);

    if (desc === undefined) {
      var parent = Object.getPrototypeOf(object);

      if (parent === null) {
        return undefined;
      } else {
        return get(parent, property, receiver);
      }
    } else if ("value" in desc) {
      return desc.value;
    } else {
      var getter = desc.get;

      if (getter === undefined) {
        return undefined;
      }

      return getter.call(receiver);
    }
  };

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Promise = Ember.RSVP.Promise;

  var AJAXPromise = function (_Promise) {
    _inherits(AJAXPromise, _Promise);

    function AJAXPromise() {
      _classCallCheck(this, AJAXPromise);

      return _possibleConstructorReturn(this, (AJAXPromise.__proto__ || Object.getPrototypeOf(AJAXPromise)).apply(this, arguments));
    }

    _createClass(AJAXPromise, [{
      key: 'then',
      value: function then() {
        var child = _get(AJAXPromise.prototype.__proto__ || Object.getPrototypeOf(AJAXPromise.prototype), 'then', this).apply(this, arguments);

        child.xhr = this.xhr;

        return child;
      }
    }]);

    return AJAXPromise;
  }(Promise);

  exports.default = AJAXPromise;
});
;define('ember-ajax/-private/utils/get-header', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getHeader;
  var A = Ember.A,
      isNone = Ember.isNone;


  /**
   * Do a case-insensitive lookup of an HTTP header
   *
   * @function getHeader
   * @private
   * @param {Object} headers
   * @param {string} name
   * @return {string}
   */
  function getHeader(headers, name) {
    if (isNone(headers) || isNone(name)) {
      return; // ask for nothing, get nothing.
    }

    var matchedKey = A(Object.keys(headers)).find(function (key) {
      return key.toLowerCase() === name.toLowerCase();
    });

    return headers[matchedKey];
  }
});
;define('ember-ajax/-private/utils/is-fastboot', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /* global FastBoot */
  var isFastBoot = typeof FastBoot !== 'undefined';
  exports.default = isFastBoot;
});
;define('ember-ajax/-private/utils/is-string', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isString;
  function isString(object) {
    return typeof object === 'string';
  }
});
;define('ember-ajax/-private/utils/parse-response-headers', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = parseResponseHeaders;

  function _toArray(arr) {
    return Array.isArray(arr) ? arr : Array.from(arr);
  }

  var CRLF = exports.CRLF = '\r\n';

  function parseResponseHeaders(headersString) {
    var headers = {};

    if (!headersString) {
      return headers;
    }

    return headersString.split(CRLF).reduce(function (hash, header) {
      var _header$split = header.split(':'),
          _header$split2 = _toArray(_header$split),
          field = _header$split2[0],
          value = _header$split2.slice(1);

      field = field.trim();
      value = value.join(':').trim();

      if (value) {
        hash[field] = value;
      }

      return hash;
    }, headers);
  }
});
;define('ember-ajax/-private/utils/url-helpers', ['exports', 'require', 'ember-ajax/-private/utils/is-fastboot'], function (exports, _require2, _isFastboot) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.parseURL = parseURL;
  exports.isFullURL = isFullURL;
  exports.haveSameHost = haveSameHost;
  /* eslint-env browser, node */

  var completeUrlRegex = /^(http|https)/;

  /*
   * Isomorphic URL parsing
   * Borrowed from
   * http://www.sitepoint.com/url-parsing-isomorphic-javascript/
   */
  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';

  var url = function () {
    if (_isFastboot.default) {
      // ember-fastboot-server provides the node url module as URL global
      return URL;
    }

    if (isNode) {
      return (0, _require2.default)('url');
    }

    return document.createElement('a');
  }();

  /**
   * Parse a URL string into an object that defines its structure
   *
   * The returned object will have the following properties:
   *
   *   href: the full URL
   *   protocol: the request protocol
   *   hostname: the target for the request
   *   port: the port for the request
   *   pathname: any URL after the host
   *   search: query parameters
   *   hash: the URL hash
   *
   * @function parseURL
   * @private
   * @param {string} str The string to parse
   * @return {Object} URL structure
   */
  function parseURL(str) {
    var fullObject = void 0;

    if (isNode || _isFastboot.default) {
      fullObject = url.parse(str);
    } else {
      url.href = str;
      fullObject = url;
    }

    var desiredProps = {};
    desiredProps.href = fullObject.href;
    desiredProps.protocol = fullObject.protocol;
    desiredProps.hostname = fullObject.hostname;
    desiredProps.port = fullObject.port;
    desiredProps.pathname = fullObject.pathname;
    desiredProps.search = fullObject.search;
    desiredProps.hash = fullObject.hash;
    return desiredProps;
  }

  function isFullURL(url) {
    return url.match(completeUrlRegex);
  }

  function haveSameHost(a, b) {
    a = parseURL(a);
    b = parseURL(b);

    return a.protocol === b.protocol && a.hostname === b.hostname && a.port === b.port;
  }
});
;define('ember-ajax/ajax-request', ['exports', 'ember-ajax/mixins/ajax-request'], function (exports, _ajaxRequest) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var EmberObject = Ember.Object;
  exports.default = EmberObject.extend(_ajaxRequest.default);
});
;define('ember-ajax/errors', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.AjaxError = AjaxError;
  exports.InvalidError = InvalidError;
  exports.UnauthorizedError = UnauthorizedError;
  exports.ForbiddenError = ForbiddenError;
  exports.BadRequestError = BadRequestError;
  exports.NotFoundError = NotFoundError;
  exports.TimeoutError = TimeoutError;
  exports.AbortError = AbortError;
  exports.ConflictError = ConflictError;
  exports.ServerError = ServerError;
  exports.isAjaxError = isAjaxError;
  exports.isUnauthorizedError = isUnauthorizedError;
  exports.isForbiddenError = isForbiddenError;
  exports.isInvalidError = isInvalidError;
  exports.isBadRequestError = isBadRequestError;
  exports.isNotFoundError = isNotFoundError;
  exports.isTimeoutError = isTimeoutError;
  exports.isAbortError = isAbortError;
  exports.isConflictError = isConflictError;
  exports.isServerError = isServerError;
  exports.isSuccess = isSuccess;
  var EmberError = Ember.Error;


  /**
   * @class AjaxError
   * @public
   * @extends Ember.Error
   */
  function AjaxError(payload) {
    var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Ajax operation failed';

    EmberError.call(this, message);

    this.payload = payload;
  }

  AjaxError.prototype = Object.create(EmberError.prototype);

  /**
   * @class InvalidError
   * @public
   * @extends AjaxError
   */
  function InvalidError(payload) {
    AjaxError.call(this, payload, 'Request was rejected because it was invalid');
  }

  InvalidError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class UnauthorizedError
   * @public
   * @extends AjaxError
   */
  function UnauthorizedError(payload) {
    AjaxError.call(this, payload, 'Ajax authorization failed');
  }

  UnauthorizedError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class ForbiddenError
   * @public
   * @extends AjaxError
   */
  function ForbiddenError(payload) {
    AjaxError.call(this, payload, 'Request was rejected because user is not permitted to perform this operation.');
  }

  ForbiddenError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class BadRequestError
   * @public
   * @extends AjaxError
   */
  function BadRequestError(payload) {
    AjaxError.call(this, payload, 'Request was formatted incorrectly.');
  }

  BadRequestError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class NotFoundError
   * @public
   * @extends AjaxError
   */
  function NotFoundError(payload) {
    AjaxError.call(this, payload, 'Resource was not found.');
  }

  NotFoundError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class TimeoutError
   * @public
   * @extends AjaxError
   */
  function TimeoutError() {
    AjaxError.call(this, null, 'The ajax operation timed out');
  }

  TimeoutError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class AbortError
   * @public
   * @extends AjaxError
   */
  function AbortError() {
    AjaxError.call(this, null, 'The ajax operation was aborted');
  }

  AbortError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class ConflictError
   * @public
   * @extends AjaxError
   */
  function ConflictError(payload) {
    AjaxError.call(this, payload, 'The ajax operation failed due to a conflict');
  }

  ConflictError.prototype = Object.create(AjaxError.prototype);

  /**
   * @class ServerError
   * @public
   * @extends AjaxError
   */
  function ServerError(payload) {
    AjaxError.call(this, payload, 'Request was rejected due to server error');
  }

  ServerError.prototype = Object.create(AjaxError.prototype);

  /**
   * Checks if the given error is or inherits from AjaxError
   *
   * @method isAjaxError
   * @public
   * @param  {Error} error
   * @return {Boolean}
   */
  function isAjaxError(error) {
    return error instanceof AjaxError;
  }

  /**
   * Checks if the given status code or AjaxError object represents an
   * unauthorized request error
   *
   * @method isUnauthorizedError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isUnauthorizedError(error) {
    if (isAjaxError(error)) {
      return error instanceof UnauthorizedError;
    } else {
      return error === 401;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a forbidden
   * request error
   *
   * @method isForbiddenError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isForbiddenError(error) {
    if (isAjaxError(error)) {
      return error instanceof ForbiddenError;
    } else {
      return error === 403;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents an invalid
   * request error
   *
   * @method isInvalidError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isInvalidError(error) {
    if (isAjaxError(error)) {
      return error instanceof InvalidError;
    } else {
      return error === 422;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a bad request
   * error
   *
   * @method isBadRequestError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isBadRequestError(error) {
    if (isAjaxError(error)) {
      return error instanceof BadRequestError;
    } else {
      return error === 400;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a
   * "not found" error
   *
   * @method isNotFoundError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isNotFoundError(error) {
    if (isAjaxError(error)) {
      return error instanceof NotFoundError;
    } else {
      return error === 404;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a
   * "timeout" error
   *
   * @method isTimeoutError
   * @public
   * @param  {AjaxError} error
   * @return {Boolean}
   */
  function isTimeoutError(error) {
    return error instanceof TimeoutError;
  }

  /**
   * Checks if the given status code or AjaxError object represents an
   * "abort" error
   *
   * @method isAbortError
   * @public
   * @param  {AjaxError} error
   * @return {Boolean}
   */
  function isAbortError(error) {
    if (isAjaxError(error)) {
      return error instanceof AbortError;
    } else {
      return error === 0;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a
   * conflict error
   *
   * @method isConflictError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isConflictError(error) {
    if (isAjaxError(error)) {
      return error instanceof ConflictError;
    } else {
      return error === 409;
    }
  }

  /**
   * Checks if the given status code or AjaxError object represents a server error
   *
   * @method isServerError
   * @public
   * @param  {Number | AjaxError} error
   * @return {Boolean}
   */
  function isServerError(error) {
    if (isAjaxError(error)) {
      return error instanceof ServerError;
    } else {
      return error >= 500 && error < 600;
    }
  }

  /**
   * Checks if the given status code represents a successful request
   *
   * @method isSuccess
   * @public
   * @param  {Number} status
   * @return {Boolean}
   */
  function isSuccess(status) {
    var s = parseInt(status, 10);

    return s >= 200 && s < 300 || s === 304;
  }
});
;define('ember-ajax/index', ['exports', 'ember-ajax/request'], function (exports, _request) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _request.default;
    }
  });
});
;define('ember-ajax/mixins/ajax-request', ['exports', 'ember-ajax/errors', 'ember-ajax/utils/ajax', 'ember-ajax/-private/utils/parse-response-headers', 'ember-ajax/-private/utils/get-header', 'ember-ajax/-private/utils/url-helpers', 'ember-ajax/-private/utils/is-string', 'ember-ajax/-private/promise'], function (exports, _errors, _ajax, _parseResponseHeaders, _getHeader, _urlHelpers, _isString, _promise) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  var A = Ember.A,
      EmberError = Ember.Error,
      Logger = Ember.Logger,
      Mixin = Ember.Mixin,
      Test = Ember.Test,
      get = Ember.get,
      isEmpty = Ember.isEmpty,
      merge = Ember.merge,
      run = Ember.run,
      runInDebug = Ember.runInDebug,
      testing = Ember.testing,
      warn = Ember.warn;

  var JSONContentType = /^application\/(?:vnd\.api\+)?json/i;

  function isJSONContentType(header) {
    if (!(0, _isString.default)(header)) {
      return false;
    }
    return !!header.match(JSONContentType);
  }

  function isJSONStringifyable(method, _ref) {
    var contentType = _ref.contentType,
        data = _ref.data,
        headers = _ref.headers;

    if (method === 'GET') {
      return false;
    }

    if (!isJSONContentType(contentType) && !isJSONContentType((0, _getHeader.default)(headers, 'Content-Type'))) {
      return false;
    }

    if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object') {
      return false;
    }

    return true;
  }

  function startsWithSlash(string) {
    return string.charAt(0) === '/';
  }

  function endsWithSlash(string) {
    return string.charAt(string.length - 1) === '/';
  }

  function removeLeadingSlash(string) {
    return string.substring(1);
  }

  function stripSlashes(path) {
    // make sure path starts with `/`
    if (startsWithSlash(path)) {
      path = removeLeadingSlash(path);
    }

    // remove end `/`
    if (endsWithSlash(path)) {
      path = path.slice(0, -1);
    }
    return path;
  }

  var pendingRequestCount = 0;
  if (testing) {
    Test.registerWaiter(function () {
      return pendingRequestCount === 0;
    });
  }

  /**
   * AjaxRequest Mixin
   *
   * @public
   * @mixin
   */
  exports.default = Mixin.create({

    /**
     * The default value for the request `contentType`
     *
     * For now, defaults to the same value that jQuery would assign.  In the
     * future, the default value will be for JSON requests.
     * @property {string} contentType
     * @public
     * @default
     */
    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',

    /**
     * Headers to include on the request
     *
     * Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary
     * headers can be set as key/value pairs on the `RESTAdapter`'s `headers`
     * object and Ember Data will send them along with each ajax request.
     *
     * ```javascript
     * // app/services/ajax.js
     * import AjaxService from 'ember-ajax/services/ajax';
     *
     * export default AjaxService.extend({
     *   headers: {
     *     'API_KEY': 'secret key',
     *     'ANOTHER_HEADER': 'Some header value'
     *   }
     * });
     * ```
     *
     * `headers` can also be used as a computed property to support dynamic
     * headers.
     *
     * ```javascript
     * // app/services/ajax.js
     * import Ember from 'ember';
     * import AjaxService from 'ember-ajax/services/ajax';
     *
     * const {
     *   computed,
     *   get,
     *   inject: { service }
     * } = Ember;
     *
     * export default AjaxService.extend({
     *   session: service(),
     *   headers: computed('session.authToken', function() {
     *     return {
     *       'API_KEY': get(this, 'session.authToken'),
     *       'ANOTHER_HEADER': 'Some header value'
     *     };
     *   })
     * });
     * ```
     *
     * In some cases, your dynamic headers may require data from some object
     * outside of Ember's observer system (for example `document.cookie`). You
     * can use the `volatile` function to set the property into a non-cached mode
     * causing the headers to be recomputed with every request.
     *
     * ```javascript
     * // app/services/ajax.js
     * import Ember from 'ember';
     * import AjaxService from 'ember-ajax/services/ajax';
     *
     * const {
     *   computed,
     *   get,
     *   inject: { service }
     * } = Ember;
     *
     * export default AjaxService.extend({
     *   session: service(),
     *   headers: computed('session.authToken', function() {
     *     return {
     *       'API_KEY': get(document.cookie.match(/apiKey\=([^;]*)/), '1'),
     *       'ANOTHER_HEADER': 'Some header value'
     *     };
     *   }).volatile()
     * });
     * ```
     *
     * @property {Object} headers
     * @public
     * @default
     */
    headers: {},

    /**
     * Make an AJAX request, ignoring the raw XHR object and dealing only with
     * the response
     *
     * @method request
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    request: function request(url, options) {
      var hash = this.options(url, options);
      var internalPromise = this._makeRequest(hash);

      var ajaxPromise = new _promise.default(function (resolve, reject) {
        internalPromise.then(function (_ref2) {
          var response = _ref2.response;

          resolve(response);
        }).catch(function (_ref3) {
          var response = _ref3.response;

          reject(response);
        });
      }, 'ember-ajax: ' + hash.type + ' ' + hash.url + ' response');

      ajaxPromise.xhr = internalPromise.xhr;

      return ajaxPromise;
    },


    /**
     * Make an AJAX request, returning the raw XHR object along with the response
     *
     * @method raw
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    raw: function raw(url, options) {
      var hash = this.options(url, options);
      return this._makeRequest(hash);
    },


    /**
     * Shared method to actually make an AJAX request
     *
     * @method _makeRequest
     * @private
     * @param {Object} hash The options for the request
     * @param {string} hash.url The URL to make the request to
     * @return {Promise} The result of the request
     */
    _makeRequest: function _makeRequest(hash) {
      var _this = this;

      var method = hash.method || hash.type || 'GET';
      var requestData = { method: method, type: method, url: hash.url };

      if (isJSONStringifyable(method, hash)) {
        hash.data = JSON.stringify(hash.data);
      }

      pendingRequestCount = pendingRequestCount + 1;

      var jqXHR = (0, _ajax.default)(hash);

      var promise = new _promise.default(function (resolve, reject) {
        jqXHR.done(function (payload, textStatus, jqXHR) {
          var response = _this.handleResponse(jqXHR.status, (0, _parseResponseHeaders.default)(jqXHR.getAllResponseHeaders()), payload, requestData);

          if ((0, _errors.isAjaxError)(response)) {
            run.join(null, reject, { payload: payload, textStatus: textStatus, jqXHR: jqXHR, response: response });
          } else {
            run.join(null, resolve, { payload: payload, textStatus: textStatus, jqXHR: jqXHR, response: response });
          }
        }).fail(function (jqXHR, textStatus, errorThrown) {
          runInDebug(function () {
            var message = 'The server returned an empty string for ' + requestData.type + ' ' + requestData.url + ', which cannot be parsed into a valid JSON. Return either null or {}.';
            var validJSONString = !(textStatus === 'parsererror' && jqXHR.responseText === '');

            warn(message, validJSONString, {
              id: 'ds.adapter.returned-empty-string-as-JSON'
            });
          });

          var payload = _this.parseErrorResponse(jqXHR.responseText) || errorThrown;
          var response = void 0;

          if (errorThrown instanceof Error) {
            response = errorThrown;
          } else if (textStatus === 'timeout') {
            response = new _errors.TimeoutError();
          } else if (textStatus === 'abort') {
            response = new _errors.AbortError();
          } else {
            response = _this.handleResponse(jqXHR.status, (0, _parseResponseHeaders.default)(jqXHR.getAllResponseHeaders()), payload, requestData);
          }

          run.join(null, reject, { payload: payload, textStatus: textStatus, jqXHR: jqXHR, errorThrown: errorThrown, response: response });
        }).always(function () {
          pendingRequestCount = pendingRequestCount - 1;
        });
      }, 'ember-ajax: ' + hash.type + ' ' + hash.url);

      promise.xhr = jqXHR;

      return promise;
    },


    /**
     * calls `request()` but forces `options.type` to `POST`
     *
     * @method post
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    post: function post(url, options) {
      return this.request(url, this._addTypeToOptionsFor(options, 'POST'));
    },


    /**
     * calls `request()` but forces `options.type` to `PUT`
     *
     * @method put
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    put: function put(url, options) {
      return this.request(url, this._addTypeToOptionsFor(options, 'PUT'));
    },


    /**
     * calls `request()` but forces `options.type` to `PATCH`
     *
     * @method patch
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    patch: function patch(url, options) {
      return this.request(url, this._addTypeToOptionsFor(options, 'PATCH'));
    },


    /**
     * calls `request()` but forces `options.type` to `DELETE`
     *
     * @method del
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    del: function del(url, options) {
      return this.request(url, this._addTypeToOptionsFor(options, 'DELETE'));
    },


    /**
     * calls `request()` but forces `options.type` to `DELETE`
     *
     * Alias for `del()`
     *
     * @method delete
     * @public
     * @param {string} url The url to make a request to
     * @param {Object} options The options for the request
     * @return {Promise} The result of the request
     */
    delete: function _delete() {
      return this.del.apply(this, arguments);
    },


    /**
     * Wrap the `.get` method so that we issue a warning if
     *
     * Since `.get` is both an AJAX pattern _and_ an Ember pattern, we want to try
     * to warn users when they try using `.get` to make a request
     *
     * @method get
     * @public
     */
    get: function get(url) {
      if (arguments.length > 1 || url.indexOf('/') !== -1) {
        throw new EmberError('It seems you tried to use `.get` to make a request! Use the `.request` method instead.');
      }
      return this._super.apply(this, arguments);
    },


    /**
     * Manipulates the options hash to include the HTTP method on the type key
     *
     * @method _addTypeToOptionsFor
     * @private
     * @param {Object} options The original request options
     * @param {string} method The method to enforce
     * @return {Object} The new options, with the method set
     */
    _addTypeToOptionsFor: function _addTypeToOptionsFor(options, method) {
      options = options || {};
      options.type = method;
      return options;
    },


    /**
     * Get the full "headers" hash, combining the service-defined headers with
     * the ones provided for the request
     *
     * @method _getFullHeadersHash
     * @private
     * @param {Object} headers
     * @return {Object}
     */
    _getFullHeadersHash: function _getFullHeadersHash(headers) {
      var classHeaders = get(this, 'headers');
      var _headers = merge({}, classHeaders);
      return merge(_headers, headers);
    },


    /**
     * @method options
     * @private
     * @param {string} url
     * @param {Object} options
     * @return {Object}
     */
    options: function options(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = merge({}, options);
      options.url = this._buildURL(url, options);
      options.type = options.type || 'GET';
      options.dataType = options.dataType || 'json';
      options.contentType = isEmpty(options.contentType) ? get(this, 'contentType') : options.contentType;

      if (this._shouldSendHeaders(options)) {
        options.headers = this._getFullHeadersHash(options.headers);
      } else {
        options.headers = options.headers || {};
      }

      return options;
    },


    /**
     * Build a URL for a request
     *
     * If the provided `url` is deemed to be a complete URL, it will be returned
     * directly.  If it is not complete, then the segment provided will be combined
     * with the `host` and `namespace` options of the request class to create the
     * full URL.
     *
     * @private
     * @param {string} url the url, or url segment, to request
     * @param {Object} [options={}] the options for the request being made
     * @param {string} [options.host] the host to use for this request
     * @returns {string} the URL to make a request to
     */
    _buildURL: function _buildURL(url) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if ((0, _urlHelpers.isFullURL)(url)) {
        return url;
      }

      var urlParts = [];

      var host = options.host || get(this, 'host');
      if (host) {
        host = stripSlashes(host);
      }
      urlParts.push(host);

      var namespace = options.namespace || get(this, 'namespace');
      if (namespace) {
        namespace = stripSlashes(namespace);
        urlParts.push(namespace);
      }

      // If the URL has already been constructed (presumably, by Ember Data), then we should just leave it alone
      var hasNamespaceRegex = new RegExp('^(/)?' + namespace);
      if (hasNamespaceRegex.test(url)) {
        return url;
      }

      // *Only* remove a leading slash -- we need to maintain a trailing slash for
      // APIs that differentiate between it being and not being present
      if (startsWithSlash(url)) {
        url = removeLeadingSlash(url);
      }
      urlParts.push(url);

      return urlParts.join('/');
    },


    /**
     * Takes an ajax response, and returns the json payload or an error.
     *
     * By default this hook just returns the json payload passed to it.
     * You might want to override it in two cases:
     *
     * 1. Your API might return useful results in the response headers.
     *    Response headers are passed in as the second argument.
     *
     * 2. Your API might return errors as successful responses with status code
     *    200 and an Errors text or object.
     *
     * @method handleResponse
     * @private
     * @param  {Number} status
     * @param  {Object} headers
     * @param  {Object} payload
     * @param  {Object} requestData the original request information
     * @return {Object | AjaxError} response
     */
    handleResponse: function handleResponse(status, headers, payload, requestData) {
      var error = void 0;

      if (this.isSuccess(status, headers, payload)) {
        return payload;
      }

      // Allow overriding of error payload
      payload = this.normalizeErrorResponse(status, headers, payload);

      if (this.isUnauthorizedError(status, headers, payload)) {
        error = new _errors.UnauthorizedError(payload);
      } else if (this.isForbiddenError(status, headers, payload)) {
        error = new _errors.ForbiddenError(payload);
      } else if (this.isInvalidError(status, headers, payload)) {
        error = new _errors.InvalidError(payload);
      } else if (this.isBadRequestError(status, headers, payload)) {
        error = new _errors.BadRequestError(payload);
      } else if (this.isNotFoundError(status, headers, payload)) {
        error = new _errors.NotFoundError(payload);
      } else if (this.isAbortError(status, headers, payload)) {
        error = new _errors.AbortError(payload);
      } else if (this.isConflictError(status, headers, payload)) {
        error = new _errors.ConflictError(payload);
      } else if (this.isServerError(status, headers, payload)) {
        error = new _errors.ServerError(payload);
      } else {
        var detailedMessage = this.generateDetailedMessage(status, headers, payload, requestData);

        error = new _errors.AjaxError(payload, detailedMessage);
      }

      return error;
    },


    /**
     * Match the host to a provided array of strings or regexes that can match to a host
     *
     * @method matchHosts
     * @private
     * @param {string} host the host you are sending too
     * @param {RegExp | string} matcher a string or regex that you can match the host to.
     * @returns {Boolean} if the host passed the matcher
     */
    _matchHosts: function _matchHosts(host, matcher) {
      if (matcher.constructor === RegExp) {
        return matcher.test(host);
      } else if (typeof matcher === 'string') {
        return matcher === host;
      } else {
        Logger.warn('trustedHosts only handles strings or regexes.', matcher, 'is neither.');
        return false;
      }
    },


    /**
     * Determine whether the headers should be added for this request
     *
     * This hook is used to help prevent sending headers to every host, regardless
     * of the destination, since this could be a security issue if authentication
     * tokens are accidentally leaked to third parties.
     *
     * To avoid that problem, subclasses should utilize the `headers` computed
     * property to prevent authentication from being sent to third parties, or
     * implement this hook for more fine-grain control over when headers are sent.
     *
     * By default, the headers are sent if the host of the request matches the
     * `host` property designated on the class.
     *
     * @method _shouldSendHeaders
     * @private
     * @property {Object} hash request options hash
     * @returns {Boolean} whether or not headers should be sent
     */
    _shouldSendHeaders: function _shouldSendHeaders(_ref4) {
      var _this2 = this;

      var url = _ref4.url,
          host = _ref4.host;

      url = url || '';
      host = host || get(this, 'host') || '';

      var trustedHosts = get(this, 'trustedHosts') || A();

      var _parseURL = (0, _urlHelpers.parseURL)(url),
          hostname = _parseURL.hostname;

      // Add headers on relative URLs


      if (!(0, _urlHelpers.isFullURL)(url)) {
        return true;
      } else if (trustedHosts.find(function (matcher) {
        return _this2._matchHosts(hostname, matcher);
      })) {
        return true;
      }

      // Add headers on matching host
      return (0, _urlHelpers.haveSameHost)(url, host);
    },


    /**
     * Generates a detailed ("friendly") error message, with plenty
     * of information for debugging (good luck!)
     *
     * @method generateDetailedMessage
     * @private
     * @param  {Number} status
     * @param  {Object} headers
     * @param  {Object} payload
     * @param  {Object} requestData the original request information
     * @return {Object} request information
     */
    generateDetailedMessage: function generateDetailedMessage(status, headers, payload, requestData) {
      var shortenedPayload = void 0;
      var payloadContentType = (0, _getHeader.default)(headers, 'Content-Type') || 'Empty Content-Type';

      if (payloadContentType.toLowerCase() === 'text/html' && payload.length > 250) {
        shortenedPayload = '[Omitted Lengthy HTML]';
      } else {
        shortenedPayload = JSON.stringify(payload);
      }

      var requestDescription = requestData.type + ' ' + requestData.url;
      var payloadDescription = 'Payload (' + payloadContentType + ')';

      return ['Ember AJAX Request ' + requestDescription + ' returned a ' + status, payloadDescription, shortenedPayload].join('\n');
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a an authorized error.
     *
     * @method isUnauthorizedError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isUnauthorizedError: function isUnauthorizedError(status) {
      return (0, _errors.isUnauthorizedError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a forbidden error.
     *
     * @method isForbiddenError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isForbiddenError: function isForbiddenError(status) {
      return (0, _errors.isForbiddenError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a an invalid error.
     *
     * @method isInvalidError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isInvalidError: function isInvalidError(status) {
      return (0, _errors.isInvalidError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a bad request error.
     *
     * @method isBadRequestError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isBadRequestError: function isBadRequestError(status) {
      return (0, _errors.isBadRequestError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a "not found" error.
     *
     * @method isNotFoundError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isNotFoundError: function isNotFoundError(status) {
      return (0, _errors.isNotFoundError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is an "abort" error.
     *
     * @method isAbortError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isAbortError: function isAbortError(status) {
      return (0, _errors.isAbortError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a "conflict" error.
     *
     * @method isConflictError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isConflictError: function isConflictError(status) {
      return (0, _errors.isConflictError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a server error.
     *
     * @method isServerError
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isServerError: function isServerError(status) {
      return (0, _errors.isServerError)(status);
    },


    /**
     * Default `handleResponse` implementation uses this hook to decide if the
     * response is a success.
     *
     * @method isSuccess
     * @private
     * @param {Number} status
     * @param {Object} headers
     * @param {Object} payload
     * @return {Boolean}
     */
    isSuccess: function isSuccess(status) {
      return (0, _errors.isSuccess)(status);
    },


    /**
     * @method parseErrorResponse
     * @private
     * @param {string} responseText
     * @return {Object}
     */
    parseErrorResponse: function parseErrorResponse(responseText) {
      try {
        return JSON.parse(responseText);
      } catch (e) {
        return responseText;
      }
    },


    /**
     * Can be overwritten to allow re-formatting of error messages
     *
     * @method normalizeErrorResponse
     * @private
     * @param  {Number} status
     * @param  {Object} headers
     * @param  {Object} payload
     * @return {*} error response
     */
    normalizeErrorResponse: function normalizeErrorResponse(status, headers, payload) {
      return payload;
    }
  });
});
;define('ember-ajax/mixins/ajax-support', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var Mixin = Ember.Mixin,
      service = Ember.inject.service,
      alias = Ember.computed.alias;
  exports.default = Mixin.create({

    /**
     * The AJAX service to send requests through
     *
     * @property {AjaxService} ajaxService
     * @public
     */
    ajaxService: service('ajax'),

    /**
     * @property {string} host
     * @public
     */
    host: alias('ajaxService.host'),

    /**
     * @property {string} namespace
     * @public
     */
    namespace: alias('ajaxService.namespace'),

    /**
     * @property {object} headers
     * @public
     */
    headers: alias('ajaxService.headers'),

    ajax: function ajax(url) {
      var augmentedOptions = this.ajaxOptions.apply(this, arguments);

      return this.get('ajaxService').request(url, augmentedOptions);
    }
  });
});
;define('ember-ajax/mixins/legacy/normalize-error-response', ['exports', 'ember-ajax/-private/utils/is-string'], function (exports, _isString) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  var Mixin = Ember.Mixin,
      isArray = Ember.isArray,
      isNone = Ember.isNone,
      merge = Ember.merge;


  function isObject(object) {
    return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';
  }

  exports.default = Mixin.create({
    /**
     * Normalize the error from the server into the same format
     *
     * The format we normalize to is based on the JSON API specification.  The
     * return value should be an array of objects that match the format they
     * describe. More details about the object format can be found
     * [here](http://jsonapi.org/format/#error-objects)
     *
     * The basics of the format are as follows:
     *
     * ```javascript
     * [
     *   {
     *     status: 'The status code for the error',
     *     title: 'The human-readable title of the error'
     *     detail: 'The human-readable details of the error'
     *   }
     * ]
     * ```
     *
     * In cases where the server returns an array, then there should be one item
     * in the array for each of the payload.  If your server returns a JSON API
     * formatted payload already, it will just be returned directly.
     *
     * If your server returns something other than a JSON API format, it's
     * suggested that you override this method to convert your own errors into the
     * one described above.
     *
     * @method normalizeErrorResponse
     * @private
     * @param  {Number} status
     * @param  {Object} headers
     * @param  {Object} payload
     * @return {Array} An array of JSON API-formatted error objects
     */
    normalizeErrorResponse: function normalizeErrorResponse(status, headers, payload) {
      payload = isNone(payload) ? {} : payload;

      if (isArray(payload.errors)) {
        return payload.errors.map(function (error) {
          if (isObject(error)) {
            var ret = merge({}, error);
            ret.status = '' + error.status;
            return ret;
          } else {
            return {
              status: '' + status,
              title: error
            };
          }
        });
      } else if (isArray(payload)) {
        return payload.map(function (error) {
          if (isObject(error)) {
            return {
              status: '' + status,
              title: error.title || 'The backend responded with an error',
              detail: error
            };
          } else {
            return {
              status: '' + status,
              title: '' + error
            };
          }
        });
      } else if ((0, _isString.default)(payload)) {
        return [{
          status: '' + status,
          title: payload
        }];
      } else {
        return [{
          status: '' + status,
          title: payload.title || 'The backend responded with an error',
          detail: payload
        }];
      }
    }
  });
});
;define('ember-ajax/raw', ['exports', 'ember-ajax/ajax-request'], function (exports, _ajaxRequest) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = raw;


  /**
   * Same as `request` except it resolves an object with
   *
   *   {response, textStatus, jqXHR}
   *
   * Useful if you need access to the jqXHR object for headers, etc.
   *
   * @public
   */
  function raw() {
    var ajax = new _ajaxRequest.default();
    return ajax.raw.apply(ajax, arguments);
  }
});
;define('ember-ajax/request', ['exports', 'ember-ajax/ajax-request'], function (exports, _ajaxRequest) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = request;


  /**
   * Helper function that allows you to use the default `ember-ajax` to make
   * requests without using the service.
   *
   * Note: Unlike `ic-ajax`'s `request` helper function, this will *not* return a
   * jqXHR object in the error handler.  If you need jqXHR, you can use the `raw`
   * function instead.
   *
   * @public
   */
  function request() {
    var ajax = new _ajaxRequest.default();
    return ajax.request.apply(ajax, arguments);
  }
});
;define('ember-ajax/services/ajax', ['exports', 'ember-ajax/mixins/ajax-request'], function (exports, _ajaxRequest) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var Service = Ember.Service;
  exports.default = Service.extend(_ajaxRequest.default);
});
;define('ember-ajax/utils/ajax', ['exports', 'ember-ajax/-private/utils/is-fastboot'], function (exports, _isFastboot) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var $ = Ember.$;
  exports.default = _isFastboot.default ? najax : $.ajax;
});
;define('ember-fusioncharts/components/fusioncharts-xt', ['exports', 'ember-fusioncharts/templates/components/fusioncharts-xt', 'ember-fusioncharts/utils/utils', 'ember-fusioncharts/utils/options'], function (exports, _fusionchartsXt, _utils, _options) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var Component = Ember.Component;
    exports.default = Component.extend({
        layout: _fusionchartsXt.default,
        chartObj: null,
        oldOptions: null,
        chartContainer: null,

        init: function init() {
            this._super.apply(this, arguments);
            this.set('oldOptions', this.getCurrentOptions());
        },
        didReceiveAttrs: function didReceiveAttrs() {
            this._super.apply(this, arguments);
            this.detectChanges();
        },
        didInsertElement: function didInsertElement() {
            this._super.apply(this, arguments);
            this.resolveChartContainer();
            this.renderChart();
        },
        willDestroyElement: function willDestroyElement() {
            this._super.apply(this, arguments);
            this.get('chartObj').dispose();
        },
        detectChanges: function detectChanges() {
            var currentOptions = this.getCurrentOptions();
            var oldOptions = this.get('oldOptions');
            var optionsUpdatedNatively = ['width', 'height', 'type', 'dataFormat', 'dataSource', 'events'];

            this.checkAndUpdateChartDimensions(currentOptions, oldOptions);
            this.checkAndUpdateChartType(currentOptions, oldOptions);
            this.checkAndUpdateChartData(currentOptions, oldOptions);
            this.checkAndUpdateEvents(currentOptions, oldOptions);
            this.checkAndUpdateRestOptions(_options.fusonChartsOptions.filter(function (option) {
                return optionsUpdatedNatively.indexOf(option) === -1;
            }), currentOptions, oldOptions);

            this.set('oldOptions', currentOptions);
        },
        checkAndUpdateChartDimensions: function checkAndUpdateChartDimensions(currentOptions, oldOptions) {
            var currWidth = currentOptions.width;
            var currHeight = currentOptions.height;
            var oldWidth = oldOptions.width;
            var oldHeight = oldOptions.height;

            if (String(currWidth) !== String(oldWidth) || String(currHeight) !== String(oldHeight)) {
                if (!_utils.isUndefined(currWidth) && !_utils.isUndefined(currHeight)) {
                    this.get('chartObj').resizeTo(currWidth, currHeight);
                } else {
                    if (!_utils.isUndefined(currWidth)) {
                        this.get('chartObj').resizeTo({
                            w: currWidth
                        });
                    }
                    if (!_utils.isUndefined(currHeight)) {
                        this.get('chartObj').resizeTo({
                            h: currHeight
                        });
                    }
                }
            }
        },
        checkAndUpdateChartType: function checkAndUpdateChartType(currentOptions, oldOptions) {
            var currType = currentOptions.type;
            var oldType = oldOptions.type;

            if (String(currType).toLowerCase() !== String(oldType).toLowerCase()) {
                if (!_utils.isUndefined(currType)) {
                    this.get('chartObj').chartType(String(currType).toLowerCase());
                }
            }
        },
        checkAndUpdateChartData: function checkAndUpdateChartData(currentOptions, oldOptions) {
            var currDataFormat = currentOptions.dataFormat;
            var currData = currentOptions.dataSource;
            var oldDataFormat = oldOptions.dataFormat;
            var oldData = oldOptions.dataSource;

            if (String(currDataFormat).toLowerCase() !== String(oldDataFormat).toLowerCase()) {
                if (!_utils.isUndefined(currDataFormat) && !_utils.isUndefined(currData)) {
                    this.get('chartObj').setChartData(currData, String(currDataFormat).toLowerCase());
                    // If the chart dataFormat is changed then
                    // animate the chart to show the changes
                    this.get('chartObj').render();
                }
            } else if (!this.isSameChartData(currData, oldData)) {
                if (!_utils.isUndefined(currData)) {
                    this.get('chartObj').setChartData(currData,
                    // When dataFormat is not given, but data is changed,
                    // then use 'json' as default dataFormat
                    currDataFormat ? String(currDataFormat).toLowerCase() : 'json');
                }
            }
        },
        isSameChartData: function isSameChartData(currData, oldData) {
            if (_utils.isObject(currData) && _utils.isObject(oldData)) {
                return _utils.isSameObjectContent(currData, oldData);
            } else {
                return currData === oldData;
            }
        },
        checkAndUpdateEvents: function checkAndUpdateEvents(currentOptions, oldOptions) {
            var _this = this;

            var currEvents = currentOptions.events;
            var oldEvents = oldOptions.events;
            var temp1 = void 0,
                temp2 = void 0;

            if (this.detectChartEventsChange(currEvents, oldEvents)) {
                if (!_utils.isUndefined(currEvents)) {
                    temp1 = Object.assign({}, currEvents);
                    temp2 = _utils.isUndefined(oldEvents) ? {} : Object.assign({}, oldEvents);
                    Object.keys(temp2).forEach(function (eventName) {
                        if (temp2[eventName] === temp1[eventName]) {
                            temp1[eventName] = undefined;
                        } else {
                            _this.get('chartObj').removeEventListener(eventName, temp2[eventName]);
                        }
                    });
                    Object.keys(temp1).forEach(function (eventName) {
                        if (temp1[eventName]) {
                            _this.get('chartObj').addEventListener(eventName, temp1[eventName]);
                        }
                    });
                }
            }
        },
        detectChartEventsChange: function detectChartEventsChange(currEvents, oldEvents) {
            if (_utils.isObject(currEvents) && _utils.isObject(oldEvents)) {
                return !this.isSameChartEvents(currEvents, oldEvents);
            } else {
                return !(currEvents === oldEvents);
            }
        },
        isSameChartEvents: function isSameChartEvents(currEvents, oldEvents) {
            if (Object.keys(currEvents).length !== Object.keys(oldEvents).length) {
                return false;
            }
            var currEventNames = Object.keys(currEvents);
            for (var i = 0; i < currEventNames.length; ++i) {
                var evName = currEventNames[i];
                if (currEvents[evName] !== oldEvents[evName]) {
                    return false;
                }
            }
            return true;
        },
        checkAndUpdateRestOptions: function checkAndUpdateRestOptions(restOptions, currentOptions, oldOptions) {
            var _this2 = this;

            var optionsUpdated = false;
            restOptions.forEach(function (optionName) {
                var currValue = currentOptions[optionName];
                var oldValue = oldOptions[optionName];
                if (!_this2.isSameOptionValue(currValue, oldValue)) {
                    if (!_utils.isUndefined(currValue)) {
                        if (_this2.get('chartObj').options && _this2.get('chartObj').options.hasOwnProperty(optionName)) {
                            _this2.get('chartObj').options[optionName] = currValue;
                            optionsUpdated = true;
                        }
                    }
                }
            });
            if (optionsUpdated) {
                this.get('chartObj').render(); // re-render the chart to reflect the changes
            }
        },
        isSameOptionValue: function isSameOptionValue(currValue, oldValue) {
            if (_utils.isObject(currValue) && _utils.isObject(oldValue)) {
                return _utils.isSameObjectContent(currValue, oldValue);
            } else {
                return String(currValue) === String(oldValue);
            }
        },
        resolveChartContainer: function resolveChartContainer() {
            this.set('chartContainer', this.$('div').get(0));
        },
        renderChart: function renderChart() {
            var currentOptions = this.getCurrentOptions();
            var chartObj = this.get('chartObj');

            currentOptions.renderAt = this.get('chartContainer');

            if (chartObj && chartObj.dispose) {
                chartObj.dispose();
            }
            this.set('chartObj', this.newFusionChartsInstance(currentOptions));
            this.get('chartObj').render();
        },
        getCurrentOptions: function getCurrentOptions() {
            var _this3 = this;

            var chartConfig = this.get('chartConfig') ? this.get("chartConfig") : {};
            var inlineOptions = _options.fusonChartsOptions.reduce(function (options, optionName) {
                options[optionName] = _this3.get(optionName);
                return options;
            }, {});
            Object.assign(inlineOptions, chartConfig);

            if (_utils.isObject(inlineOptions['dataSource'])) {
                inlineOptions['dataSource'] = _utils.deepCopyOf(inlineOptions['dataSource']);
            }
            if (_utils.isObject(inlineOptions['link'])) {
                inlineOptions['link'] = _utils.deepCopyOf(inlineOptions['link']);
            }
            if (_utils.isObject(inlineOptions['events'])) {
                inlineOptions['events'] = Object.assign({}, inlineOptions['events']);
            }
            return inlineOptions;
        },
        newFusionChartsInstance: function newFusionChartsInstance(chartConfig) {
            var fcCore = this.getFusionChartsCore();
            return new fcCore(chartConfig);
        },
        getFusionChartsCore: function getFusionChartsCore() {
            // The root application has to import
            // the FusionCharts library globally.
            return window.FusionCharts;
        }
    });
});
;define("ember-fusioncharts/templates/components/fusioncharts-xt", ["exports"], function (exports) {
  "use strict";

  exports.__esModule = true;
  exports.default = Ember.HTMLBars.template({ "id": "0mHhjXPO", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[7],[8]],\"hasEval\":false}", "meta": { "moduleName": "ember-fusioncharts/templates/components/fusioncharts-xt.hbs" } });
});
;define('ember-fusioncharts/utils/options', ['exports'], function (exports) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var fusonChartsOptions = exports.fusonChartsOptions = ['type', 'id', 'width', 'height', 'dataFormat', 'dataSource', 'events', 'link', 'showDataLoadingMessage', 'showChartLoadingMessage', 'baseChartMessageFont', 'baseChartMessageFontSize', 'baseChartMessageColor', 'dataLoadStartMessage', 'dataLoadErrorMessage', 'dataInvalidMessage', 'dataEmptyMessage', 'typeNotSupportedMessage', 'loadMessage', 'renderErrorMessage', 'containerBackgroundColor', 'containerBackgroundOpacity', 'containerClassName', 'baseChartMessageImageHAlign', 'baseChartMessageImageVAlign', 'baseChartMessageImageAlpha', 'baseChartMessageImageScale', 'typeNotSupportedMessageImageHAalign', 'typeNotSupportedMessageImageVAlign', 'typeNotSupportedMessageImageAlpha', 'typeNotSupportedMessageImageScale', 'dataLoadErrorMessageImageHAlign', 'dataLoadErrorMessageImageVAlign', 'dataLoadErrorMessageImageAlpha', 'dataLoadErrorMessageImageScale', 'dataLoadStartMessageImageHAlign', 'dataLoadStartMessageImageVAlign', 'dataLoadStartMessageImageAlpha', 'dataLoadStartMessageImageScale', 'dataInvalidMessageImageHAlign', 'dataInvalidMessageImageVAlign', 'dataInvalidMessageImageAlpha', 'dataInvalidMessageImageScale', 'dataEmptyMessageImageHAlign', 'dataEmptyMessageImageVAlign', 'dataEmptyMessageImageAlpha', 'dataEmptyMessageImageScale', 'renderErrorMessageImageHAlign', 'renderErrorMessageImageVAlign', 'renderErrorMessageImageAlpha', 'renderErrorMessageImageScale', 'loadMessageImageHAlign', 'loadMessageImageVAlign', 'loadMessageImageAlpha', 'loadMessageImageScale'];
});
;define('ember-fusioncharts/utils/utils', ['exports'], function (exports) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.isObject = isObject;
    exports.isCallable = isCallable;
    exports.isSameObjectContent = isSameObjectContent;
    exports.isUndefined = isUndefined;
    exports.deepCopyOf = deepCopyOf;

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    function isObject(value) {
        return value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';
    }

    function isCallable(value) {
        return typeof value === 'function';
    }

    function isSameObjectContent(obj1, obj2) {
        if (Object.keys(obj1).length !== Object.keys(obj2).length) {
            return false;
        }
        var keys = Object.keys(obj1);

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (isObject(obj1[key]) && isObject(obj2[key])) {
                if (!isSameObjectContent(obj1[key], obj2[key])) {
                    return false;
                }
            } else if (obj1[key] !== obj2[key]) {
                return false;
            }
        }
        return true;
    }

    function isUndefined(value) {
        var UNDEFINED = void 0;
        return value === UNDEFINED;
    }

    function deepCopyOf(obj) {
        return JSON.parse(JSON.stringify(obj));
    }
});
;define('ember-load-initializers/index', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports.default = function (app, prefix) {
    var initializerPrefix = prefix + '/initializers/';
    var instanceInitializerPrefix = prefix + '/instance-initializers/';
    var initializers = [];
    var instanceInitializers = [];
    // this is 2 pass because generally the first pass is the problem
    // and is reduced, and resolveInitializer has potential to deopt
    var moduleNames = Object.keys(requirejs._eak_seen);
    for (var i = 0; i < moduleNames.length; i++) {
      var moduleName = moduleNames[i];
      if (moduleName.lastIndexOf(initializerPrefix, 0) === 0) {
        initializers.push(moduleName);
      } else if (moduleName.lastIndexOf(instanceInitializerPrefix, 0) === 0) {
        instanceInitializers.push(moduleName);
      }
    }
    registerInitializers(app, initializers);
    registerInstanceInitializers(app, instanceInitializers);
  };

  function resolveInitializer(moduleName) {
    var module = require(moduleName, null, null, true);
    if (!module) {
      throw new Error(moduleName + ' must export an initializer.');
    }
    var initializer = module['default'];
    if (!initializer.name) {
      initializer.name = moduleName.slice(moduleName.lastIndexOf('/') + 1);
    }
    return initializer;
  }

  function registerInitializers(app, moduleNames) {
    for (var i = 0; i < moduleNames.length; i++) {
      app.initializer(resolveInitializer(moduleNames[i]));
    }
  }

  function registerInstanceInitializers(app, moduleNames) {
    for (var i = 0; i < moduleNames.length; i++) {
      app.instanceInitializer(resolveInitializer(moduleNames[i]));
    }
  }
});
;/*
 * This is a stub file, it must be on disk b/c babel-plugin-debug-macros
 * does not strip the module require when the transpiled variable usage is
 * stripped.
 */
define("ember-resolver/features", [], function () {
  "use strict";
});
;define('ember-resolver/index', ['exports', 'ember-resolver/resolvers/classic'], function (exports, _classic) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _classic.default;
    }
  });
});
;define('ember-resolver/resolver', ['exports', 'ember-resolver/resolvers/classic'], function (exports, _classic) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _classic.default;
    }
  });
});
;define('ember-resolver/resolvers/classic/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/index'], function (exports, _index) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var ContainerDebugAdapter = Ember.ContainerDebugAdapter;


  function getPod(type, key, prefix) {
    var match = key.match(new RegExp('^/?' + prefix + '/(.+)/' + type + '$'));
    if (match !== null) {
      return match[1];
    }
  }

  /*
   * This module defines a subclass of Ember.ContainerDebugAdapter that adds
   * support for resolving from modules.
   *
   */
  exports.default = ContainerDebugAdapter.extend({
    _moduleRegistry: null,

    init: function init() {
      this._super.apply(this, arguments);

      if (!this._moduleRegistry) {
        this._moduleRegistry = new _index.ModuleRegistry();
      }
    },


    /**
        The container of the application being debugged.
        This property will be injected
        on creation.
         @property container
        @default null
        */

    /**
        The resolver instance of the application
        being debugged. This property will be injected
        on creation.
         @property resolver
        @default null
        */

    /**
        Returns true if it is possible to catalog a list of available
        classes in the resolver for a given type.
         @method canCatalogEntriesByType
        @param {string} type The type. e.g. "model", "controller", "route"
        @return {boolean} whether a list is available for this type.
        */
    canCatalogEntriesByType: function canCatalogEntriesByType(type) {
      if (type === 'model') {
        return true;
      }
      return this._super.apply(this, arguments);
    },


    /**
        Returns the available classes a given type.
         @method catalogEntriesByType
        @param {string} type The type. e.g. "model", "controller", "route"
        @return {Array} An array of classes.
        */
    catalogEntriesByType: function catalogEntriesByType(type) {
      var moduleNames = this._moduleRegistry.moduleNames();
      var types = Ember.A();

      var prefix = this.namespace.modulePrefix;

      for (var i = 0, l = moduleNames.length; i < l; i++) {
        var key = moduleNames[i];

        if (key.indexOf(type) !== -1) {
          // Check if it's a pod module
          var name = getPod(type, key, this.namespace.podModulePrefix || prefix);
          if (!name) {
            // Not pod
            name = key.split(type + 's/').pop();

            // Support for different prefix (such as ember-cli addons).
            // Uncomment the code below when
            // https://github.com/ember-cli/ember-resolver/pull/80 is merged.

            //let match = key.match('^/?(.+)/' + type);
            //if (match && match[1] !== prefix) {
            // Different prefix such as an addon
            //name = match[1] + '@' + name;
            //}
          }
          types.addObject(name);
        }
      }
      return types;
    }
  });
});
;define('ember-resolver/resolvers/classic/index', ['exports', 'ember-resolver/utils/class-factory', 'ember-resolver/utils/make-dictionary'], function (exports, _classFactory, _makeDictionary) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ModuleRegistry = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  if (typeof requirejs.entries === 'undefined') {
    requirejs.entries = requirejs._eak_seen;
  }

  var ModuleRegistry = exports.ModuleRegistry = function () {
    function ModuleRegistry(entries) {
      _classCallCheck(this, ModuleRegistry);

      this._entries = entries || requirejs.entries;
    }

    ModuleRegistry.prototype.moduleNames = function moduleNames() {
      return Object.keys(this._entries);
    };

    ModuleRegistry.prototype.has = function has(moduleName) {
      return moduleName in this._entries;
    };

    ModuleRegistry.prototype.get = function get(moduleName) {
      return require(moduleName);
    };

    return ModuleRegistry;
  }();

  var _Ember$String = Ember.String,
      underscore = _Ember$String.underscore,
      classify = _Ember$String.classify,
      dasherize = _Ember$String.dasherize;
  var get = Ember.get,
      DefaultResolver = Ember.DefaultResolver;


  function parseName(fullName) {
    /*jshint validthis:true */

    if (fullName.parsedName === true) {
      return fullName;
    }

    var prefix = void 0,
        type = void 0,
        name = void 0;
    var fullNameParts = fullName.split('@');

    // HTMLBars uses helper:@content-helper which collides
    // with ember-cli namespace detection.
    // This will be removed in a future release of HTMLBars.
    if (fullName !== 'helper:@content-helper' && fullNameParts.length === 2) {
      var prefixParts = fullNameParts[0].split(':');

      if (prefixParts.length === 2) {
        prefix = prefixParts[1];
        type = prefixParts[0];
        name = fullNameParts[1];
      } else {
        var nameParts = fullNameParts[1].split(':');

        prefix = fullNameParts[0];
        type = nameParts[0];
        name = nameParts[1];
      }

      if (type === 'template' && prefix.lastIndexOf('components/', 0) === 0) {
        name = 'components/' + name;
        prefix = prefix.slice(11);
      }
    } else {
      fullNameParts = fullName.split(':');
      type = fullNameParts[0];
      name = fullNameParts[1];
    }

    var fullNameWithoutType = name;
    var namespace = get(this, 'namespace');
    var root = namespace;

    return {
      parsedName: true,
      fullName: fullName,
      prefix: prefix || this.prefix({ type: type }),
      type: type,
      fullNameWithoutType: fullNameWithoutType,
      name: name,
      root: root,
      resolveMethodName: "resolve" + classify(type)
    };
  }

  function resolveOther(parsedName) {
    /*jshint validthis:true */

    Ember.assert('`modulePrefix` must be defined', this.namespace.modulePrefix);

    var normalizedModuleName = this.findModuleName(parsedName);

    if (normalizedModuleName) {
      var defaultExport = this._extractDefaultExport(normalizedModuleName, parsedName);

      if (defaultExport === undefined) {
        throw new Error(' Expected to find: \'' + parsedName.fullName + '\' within \'' + normalizedModuleName + '\' but got \'undefined\'. Did you forget to \'export default\' within \'' + normalizedModuleName + '\'?');
      }

      if (this.shouldWrapInClassFactory(defaultExport, parsedName)) {
        defaultExport = (0, _classFactory.default)(defaultExport);
      }

      return defaultExport;
    } else {
      return this._super(parsedName);
    }
  }

  // Ember.DefaultResolver docs:
  //   https://github.com/emberjs/ember.js/blob/master/packages/ember-application/lib/system/resolver.js
  var Resolver = DefaultResolver.extend({
    resolveOther: resolveOther,
    parseName: parseName,
    resolveTemplate: resolveOther,
    pluralizedTypes: null,
    moduleRegistry: null,

    makeToString: function makeToString(factory, fullName) {
      return '' + this.namespace.modulePrefix + '@' + fullName + ':';
    },
    shouldWrapInClassFactory: function shouldWrapInClassFactory() /* module, parsedName */{
      return false;
    },
    init: function init() {
      this._super();
      this.moduleBasedResolver = true;

      if (!this._moduleRegistry) {
        this._moduleRegistry = new ModuleRegistry();
      }

      this._normalizeCache = (0, _makeDictionary.default)();

      this.pluralizedTypes = this.pluralizedTypes || (0, _makeDictionary.default)();

      if (!this.pluralizedTypes.config) {
        this.pluralizedTypes.config = 'config';
      }
      this._deprecatedPodModulePrefix = false;
    },
    normalize: function normalize(fullName) {
      return this._normalizeCache[fullName] || (this._normalizeCache[fullName] = this._normalize(fullName));
    },
    _normalize: function _normalize(fullName) {
      // A) Convert underscores to dashes
      // B) Convert camelCase to dash-case, except for helpers where we want to avoid shadowing camelCase expressions
      // C) replace `.` with `/` in order to make nested controllers work in the following cases
      //      1. `needs: ['posts/post']`
      //      2. `{{render "posts/post"}}`
      //      3. `this.render('posts/post')` from Route

      var split = fullName.split(':');
      if (split.length > 1) {
        if (split[0] === 'helper') {
          return split[0] + ':' + split[1].replace(/_/g, '-');
        } else {
          return split[0] + ':' + dasherize(split[1].replace(/\./g, '/'));
        }
      } else {
        return fullName;
      }
    },
    pluralize: function pluralize(type) {
      return this.pluralizedTypes[type] || (this.pluralizedTypes[type] = type + 's');
    },
    podBasedLookupWithPrefix: function podBasedLookupWithPrefix(podPrefix, parsedName) {
      var fullNameWithoutType = parsedName.fullNameWithoutType;

      if (parsedName.type === 'template') {
        fullNameWithoutType = fullNameWithoutType.replace(/^components\//, '');
      }

      return podPrefix + '/' + fullNameWithoutType + '/' + parsedName.type;
    },
    podBasedModuleName: function podBasedModuleName(parsedName) {
      var podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;

      return this.podBasedLookupWithPrefix(podPrefix, parsedName);
    },
    podBasedComponentsInSubdir: function podBasedComponentsInSubdir(parsedName) {
      var podPrefix = this.namespace.podModulePrefix || this.namespace.modulePrefix;
      podPrefix = podPrefix + '/components';

      if (parsedName.type === 'component' || /^components/.test(parsedName.fullNameWithoutType)) {
        return this.podBasedLookupWithPrefix(podPrefix, parsedName);
      }
    },
    resolveEngine: function resolveEngine(parsedName) {
      var engineName = parsedName.fullNameWithoutType;
      var engineModule = engineName + '/engine';

      if (this._moduleRegistry.has(engineModule)) {
        return this._extractDefaultExport(engineModule);
      }
    },
    resolveRouteMap: function resolveRouteMap(parsedName) {
      var engineName = parsedName.fullNameWithoutType;
      var engineRoutesModule = engineName + '/routes';

      if (this._moduleRegistry.has(engineRoutesModule)) {
        var routeMap = this._extractDefaultExport(engineRoutesModule);

        Ember.assert('The route map for ' + engineName + ' should be wrapped by \'buildRoutes\' before exporting.', routeMap.isRouteMap);

        return routeMap;
      }
    },
    mainModuleName: function mainModuleName(parsedName) {
      // if router:main or adapter:main look for a module with just the type first
      var tmpModuleName = parsedName.prefix + '/' + parsedName.type;

      if (parsedName.fullNameWithoutType === 'main') {
        return tmpModuleName;
      }
    },
    defaultModuleName: function defaultModuleName(parsedName) {
      return parsedName.prefix + '/' + this.pluralize(parsedName.type) + '/' + parsedName.fullNameWithoutType;
    },
    prefix: function prefix(parsedName) {
      var tmpPrefix = this.namespace.modulePrefix;

      if (this.namespace[parsedName.type + 'Prefix']) {
        tmpPrefix = this.namespace[parsedName.type + 'Prefix'];
      }

      return tmpPrefix;
    },


    /**
      A listing of functions to test for moduleName's based on the provided
     `parsedName`. This allows easy customization of additional module based
     lookup patterns.
      @property moduleNameLookupPatterns
     @returns {Ember.Array}
     */
    moduleNameLookupPatterns: Ember.computed(function () {
      return [this.podBasedModuleName, this.podBasedComponentsInSubdir, this.mainModuleName, this.defaultModuleName];
    }).readOnly(),

    findModuleName: function findModuleName(parsedName, loggingDisabled) {
      var moduleNameLookupPatterns = this.get('moduleNameLookupPatterns');
      var moduleName = void 0;

      for (var index = 0, length = moduleNameLookupPatterns.length; index < length; index++) {
        var item = moduleNameLookupPatterns[index];

        var tmpModuleName = item.call(this, parsedName);

        // allow treat all dashed and all underscored as the same thing
        // supports components with dashes and other stuff with underscores.
        if (tmpModuleName) {
          tmpModuleName = this.chooseModuleName(tmpModuleName, parsedName);
        }

        if (tmpModuleName && this._moduleRegistry.has(tmpModuleName)) {
          moduleName = tmpModuleName;
        }

        if (!loggingDisabled) {
          this._logLookup(moduleName, parsedName, tmpModuleName);
        }

        if (moduleName) {
          return moduleName;
        }
      }
    },
    chooseModuleName: function chooseModuleName(moduleName, parsedName) {
      var _this = this;

      var underscoredModuleName = underscore(moduleName);

      if (moduleName !== underscoredModuleName && this._moduleRegistry.has(moduleName) && this._moduleRegistry.has(underscoredModuleName)) {
        throw new TypeError('Ambiguous module names: \'' + moduleName + '\' and \'' + underscoredModuleName + '\'');
      }

      if (this._moduleRegistry.has(moduleName)) {
        return moduleName;
      } else if (this._moduleRegistry.has(underscoredModuleName)) {
        return underscoredModuleName;
      }
      // workaround for dasherized partials:
      // something/something/-something => something/something/_something
      var partializedModuleName = moduleName.replace(/\/-([^\/]*)$/, '/_$1');

      if (this._moduleRegistry.has(partializedModuleName)) {
        Ember.deprecate('Modules should not contain underscores. ' + 'Attempted to lookup "' + moduleName + '" which ' + 'was not found. Please rename "' + partializedModuleName + '" ' + 'to "' + moduleName + '" instead.', false, { id: 'ember-resolver.underscored-modules', until: '3.0.0' });

        return partializedModuleName;
      }

      Ember.runInDebug(function () {
        var isCamelCaseHelper = parsedName.type === 'helper' && /[a-z]+[A-Z]+/.test(moduleName);
        if (isCamelCaseHelper) {
          _this._camelCaseHelperWarnedNames = _this._camelCaseHelperWarnedNames || [];
          var alreadyWarned = _this._camelCaseHelperWarnedNames.indexOf(parsedName.fullName) > -1;
          if (!alreadyWarned && _this._moduleRegistry.has(dasherize(moduleName))) {
            _this._camelCaseHelperWarnedNames.push(parsedName.fullName);
            Ember.warn('Attempted to lookup "' + parsedName.fullName + '" which ' + 'was not found. In previous versions of ember-resolver, a bug would have ' + 'caused the module at "' + dasherize(moduleName) + '" to be ' + 'returned for this camel case helper name. This has been fixed. ' + 'Use the dasherized name to resolve the module that would have been ' + 'returned in previous versions.', false, { id: 'ember-resolver.camelcase-helper-names', until: '3.0.0' });
          }
        }
      });
    },
    lookupDescription: function lookupDescription(fullName) {
      var parsedName = this.parseName(fullName);

      var moduleName = this.findModuleName(parsedName, true);

      return moduleName;
    },
    _logLookup: function _logLookup(found, parsedName, description) {
      if (!Ember.ENV.LOG_MODULE_RESOLVER && !parsedName.root.LOG_RESOLVER) {
        return;
      }

      var padding = void 0;
      var symbol = found ? '[✓]' : '[ ]';

      if (parsedName.fullName.length > 60) {
        padding = '.';
      } else {
        padding = new Array(60 - parsedName.fullName.length).join('.');
      }

      if (!description) {
        description = this.lookupDescription(parsedName);
      }

      Ember.Logger.info(symbol, parsedName.fullName, padding, description);
    },
    knownForType: function knownForType(type) {
      var moduleKeys = this._moduleRegistry.moduleNames();

      var items = (0, _makeDictionary.default)();
      for (var index = 0, length = moduleKeys.length; index < length; index++) {
        var moduleName = moduleKeys[index];
        var fullname = this.translateToContainerFullname(type, moduleName);

        if (fullname) {
          items[fullname] = true;
        }
      }

      return items;
    },
    translateToContainerFullname: function translateToContainerFullname(type, moduleName) {
      var prefix = this.prefix({ type: type });

      // Note: using string manipulation here rather than regexes for better performance.
      // pod modules
      // '^' + prefix + '/(.+)/' + type + '$'
      var podPrefix = prefix + '/';
      var podSuffix = '/' + type;
      var start = moduleName.indexOf(podPrefix);
      var end = moduleName.indexOf(podSuffix);

      if (start === 0 && end === moduleName.length - podSuffix.length && moduleName.length > podPrefix.length + podSuffix.length) {
        return type + ':' + moduleName.slice(start + podPrefix.length, end);
      }

      // non-pod modules
      // '^' + prefix + '/' + pluralizedType + '/(.+)$'
      var pluralizedType = this.pluralize(type);
      var nonPodPrefix = prefix + '/' + pluralizedType + '/';

      if (moduleName.indexOf(nonPodPrefix) === 0 && moduleName.length > nonPodPrefix.length) {
        return type + ':' + moduleName.slice(nonPodPrefix.length);
      }
    },
    _extractDefaultExport: function _extractDefaultExport(normalizedModuleName) {
      var module = require(normalizedModuleName, null, null, true /* force sync */);

      if (module && module['default']) {
        module = module['default'];
      }

      return module;
    }
  });

  Resolver.reopenClass({
    moduleBasedResolver: true
  });

  exports.default = Resolver;
});
;define('ember-resolver/utils/class-factory', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = classFactory;
  function classFactory(klass) {
    return {
      create: function create(injections) {
        if (typeof klass.extend === 'function') {
          return klass.extend(injections);
        } else {
          return klass;
        }
      }
    };
  }
});
;define('ember-resolver/utils/make-dictionary', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = makeDictionary;
  function makeDictionary() {
    var cache = Object.create(null);
    cache['_dict'] = null;
    delete cache['_dict'];
    return cache;
  }
});
;
//# sourceMappingURL=vendor.map
